; ModuleID = 'ls.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pending = type { i8*, i8*, i8, %struct.pending* }
%struct.dev_ino = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.tm_zone = type { %struct.tm_zone*, i8, [0 x i8] }
%struct.fileinfo = type { i8*, i8*, i8*, %struct.stat, i32, i32, i8*, i8, i8, i32, i8, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.bin_str = type { i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.ignore_pattern = type { i8*, %struct.ignore_pattern* }
%struct.color_ext_type = type { %struct.bin_str, %struct.bin_str, %struct.color_ext_type* }
%struct.column_info = type { i8, i64, i64* }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.userid = type { %union.anon.12, %struct.userid*, [0 x i8] }
%union.anon.12 = type { i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.__mbstate_t = type { i32, %union.anon.12 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._cap_struct = type opaque
%struct.F_triple = type { i8*, i64, i64 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@exit_status = internal global i32 0, align 4, !dbg !0, !ctir !27
@print_dir_name = internal global i8 0, align 1, !dbg !861, !ctir !141
@pending_dirs = internal global %struct.pending* null, align 8, !dbg !829, !ctir !237
@current_time = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !831, !ctir !214
@print_with_color = internal global i8 0, align 1, !dbg !845, !ctir !141
@directories_first = internal global i8 0, align 1, !dbg !857, !ctir !141
@check_symlink_mode = internal global i8 0, align 1, !dbg !849, !ctir !141
@color_symlink_as_referent = internal global i8 0, align 1, !dbg !825, !ctir !141
@format = internal global i32 0, align 4, !dbg !835, !ctir !5
@dereference = internal global i32 0, align 4, !dbg !851, !ctir !13
@immediate_dirs = internal global i8 0, align 1, !dbg !855, !ctir !141
@indicator_style = internal global i32 0, align 4, !dbg !843, !ctir !20
@recursive = internal global i8 0, align 1, !dbg !853, !ctir !141
@active_dir_set = internal global %struct.hash_table* null, align 8, !dbg !817, !ctir !244
@dev_ino_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !879, !ctir !350
@.str.3 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@localtz = internal global %struct.tm_zone* null, align 8, !dbg !863, !ctir !248
@sort_type = internal global i32 0, align 4, !dbg !837, !ctir !26
@print_scontext = internal global i8 0, align 1, !dbg !833, !ctir !141
@print_block_size = internal global i8 0, align 1, !dbg !839, !ctir !141
@format_needs_stat = internal global i8 0, align 1, !dbg !865, !ctir !141
@format_needs_type = internal global i8 0, align 1, !dbg !867, !ctir !141
@dired = internal global i8 0, align 1, !dbg !841, !ctir !141
@dired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !875, !ctir !350
@subdired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !877, !ctir !350
@print_hyperlink = internal global i8 0, align 1, !dbg !847, !ctir !141
@hostname = internal global i8* null, align 8, !dbg !827, !ctir !146
@cwd_n_alloc = internal global i64 0, align 8, !dbg !821, !ctir !149
@cwd_file = internal global %struct.fileinfo* null, align 8, !dbg !819, !ctir !252
@cwd_n_used = internal global i64 0, align 8, !dbg !823, !ctir !149
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@dired_pos = internal global i64 0, align 8, !dbg !873, !ctir !149
@.str.5 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"src/ls.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@used_color = internal global i8 0, align 1, !dbg !883, !ctir !141
@color_indicator = internal global [24 x %struct.bin_str] [%struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0) }, %struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }], align 16, !dbg !885, !ctir !261
@.str.7 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !268
@stop_signal_count = internal global i32 0, align 4, !dbg !871, !ctir !320
@interrupt_signal = internal global i32 0, align 4, !dbg !869, !ctir !320
@.str.8 = private unnamed_addr constant [10 x i8] c"//DIRED//\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"//SUBDIRED//\00", align 1
@filename_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !859, !ctir !328
@.str.10 = private unnamed_addr constant [38 x i8] c"//DIRED-OPTIONS// --quoting-style=%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"hash_get_n_entries (active_dir_set) == 0\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c" %lu\00", align 1
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !890, !ctir !403
@signal_setup.sig = internal constant [12 x i32] [i32 20, i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !887
@.str.48 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"01;34\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"01;36\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"33\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"01;35\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"01;33\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"01;32\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"37;41\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"30;43\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"37;44\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"34;42\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"30;42\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"30;41\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\1B[K\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"cannot open directory %s\00", align 1
@.str.204 = private unnamed_addr constant [40 x i8] c"cannot determine device and inode of %s\00", align 1
@.str.205 = private unnamed_addr constant [41 x i8] c"%s: not listing already-listed directory\00", align 1
@print_dir.first = internal global i8 1, align 1, !dbg !977
@.str.206 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.207 = private unnamed_addr constant [24 x i8] c"error canonicalizing %s\00", align 1
@dirname_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !956, !ctir !328
@.str.208 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.209 = private unnamed_addr constant [21 x i8] c"reading directory %s\00", align 1
@.str.210 = private unnamed_addr constant [21 x i8] c"closing directory %s\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@human_output_opts = internal global i32 0, align 4, !dbg !920, !ctir !27
@output_block_size = internal global i64 0, align 8, !dbg !924, !ctir !168
@ignore_mode = internal global i32 0, align 4, !dbg !906, !ctir !85
@hide_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !910, !ctir !511
@ignore_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !908, !ctir !511
@align_variable_outer_quotes = internal global i8 0, align 1, !dbg !954, !ctir !141
@cwd_some_quoted = internal global i8 0, align 1, !dbg !980, !ctir !141
@.str.213 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.212 = private unnamed_addr constant [20 x i8] c"\1B]8;;file://%s%s%s\07\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"\1B]8;;\07\00", align 1
@RFC3986 = internal global [256 x i8] zeroinitializer, align 16, !dbg !881, !ctir !343
@.str.215 = private unnamed_addr constant [7 x i8] c"%%%02x\00", align 1
@qmark_funny_chars = internal global i8 0, align 1, !dbg !896, !ctir !141
@.str.47 = private unnamed_addr constant [55 x i8] c"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\00", align 1
@__PRETTY_FUNCTION__.dev_ino_pop = private unnamed_addr constant [33 x i8] c"struct dev_ino dev_ino_pop(void)\00", align 1
@sorted_file = internal global i8** null, align 8, !dbg !982, !ctir !663
@line_length = internal global i64 0, align 8, !dbg !912, !ctir !149
@filetype_letter = internal constant [11 x i8] c"?pcdb-lswd\00", align 1, !dbg !1031, !ctir !773
@any_has_acl = internal global i8 0, align 1, !dbg !986, !ctir !141
@time_type = internal global i32 0, align 4, !dbg !898, !ctir !79
@print_inode = internal global i8 0, align 1, !dbg !904, !ctir !141
@inode_number_width = internal global i32 0, align 4, !dbg !988, !ctir !27
@.str.224 = private unnamed_addr constant [5 x i8] c"%*s \00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@block_size_width = internal global i32 0, align 4, !dbg !990, !ctir !27
@nlink_width = internal global i32 0, align 4, !dbg !992, !ctir !27
@.str.227 = private unnamed_addr constant [8 x i8] c"%s %*s \00", align 1
@print_owner = internal global i8 1, align 1, !dbg !918, !ctir !141
@print_group = internal global i8 1, align 1, !dbg !928, !ctir !141
@print_author = internal global i8 0, align 1, !dbg !930, !ctir !141
@owner_width = internal global i32 0, align 4, !dbg !994, !ctir !27
@group_width = internal global i32 0, align 4, !dbg !996, !ctir !27
@author_width = internal global i32 0, align 4, !dbg !998, !ctir !27
@scontext_width = internal global i32 0, align 4, !dbg !1000, !ctir !27
@file_size_width = internal global i32 0, align 4, !dbg !1006, !ctir !27
@major_device_number_width = internal global i32 0, align 4, !dbg !1002, !ctir !27
@minor_device_number_width = internal global i32 0, align 4, !dbg !1004, !ctir !27
@.str.228 = private unnamed_addr constant [10 x i8] c"%*s, %*s \00", align 1
@file_human_output_opts = internal global i32 0, align 4, !dbg !922, !ctir !27
@file_output_block_size = internal global i64 1, align 8, !dbg !926, !ctir !168
@.str.229 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@get_color_indicator.filetype_indicator = internal global [10 x i32] [i32 13, i32 8, i32 11, i32 6, i32 10, i32 5, i32 7, i32 9, i32 5, i32 6], align 16, !dbg !1023
@color_ext_list = internal global %struct.color_ext_type* null, align 8, !dbg !973, !ctir !593
@long_time_expected_width.width = internal global i32 -1, align 4, !dbg !1033
@use_abformat = internal global i8 0, align 1, !dbg !966, !ctir !141
@abformat = internal global [2 x [12 x [128 x i8]]] zeroinitializer, align 16, !dbg !964, !ctir !577
@long_time_format = internal global [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i32 0, i32 0)], align 16, !dbg !958, !ctir !561
@.str.166 = private unnamed_addr constant [10 x i8] c"%b %e  %Y\00", align 1
@.str.167 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"%*lu \00", align 1
@numeric_ids = internal global i8 0, align 1, !dbg !902, !ctir !141
@.str.226 = private unnamed_addr constant [40 x i8] c"INT_BUFSIZE_BOUND (uintmax_t) <= buflen\00", align 1
@__PRETTY_FUNCTION__.format_inode = private unnamed_addr constant [60 x i8] c"char *format_inode(char *, size_t, const struct fileinfo *)\00", align 1
@column_info = internal global %struct.column_info* null, align 8, !dbg !1029, !ctir !762
@tabsize = internal global i64 0, align 8, !dbg !914, !ctir !149
@max_idx = internal global i64 0, align 8, !dbg !952, !ctir !149
@init_column_info.column_info_alloc = internal global i64 0, align 8, !dbg !1026
@UNKNOWN_SECURITY_CONTEXT = internal global [2 x i8] c"?\00", align 1, !dbg !984, !ctir !666
@sorted_file_alloc = internal global i64 0, align 8, !dbg !1017, !ctir !149
@failed_strcoll = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16, !dbg !1019, !ctir !704
@.str.222 = private unnamed_addr constant [26 x i8] c"sort_type != sort_version\00", align 1
@__PRETTY_FUNCTION__.sort_files = private unnamed_addr constant [22 x i8] c"void sort_files(void)\00", align 1
@sort_functions = internal constant [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]] [[2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_name, i32 (i8*, i8*)* @xstrcoll_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_name, i32 (i8*, i8*)* @rev_xstrcoll_df_name]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_name, i32 (i8*, i8*)* @strcmp_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_name, i32 (i8*, i8*)* @rev_strcmp_df_name]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_extension, i32 (i8*, i8*)* @xstrcoll_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_extension, i32 (i8*, i8*)* @rev_xstrcoll_df_extension]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_extension, i32 (i8*, i8*)* @strcmp_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_extension, i32 (i8*, i8*)* @rev_strcmp_df_extension]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_size, i32 (i8*, i8*)* @xstrcoll_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_size, i32 (i8*, i8*)* @rev_xstrcoll_df_size]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_size, i32 (i8*, i8*)* @strcmp_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_size, i32 (i8*, i8*)* @rev_strcmp_df_size]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_version, i32 (i8*, i8*)* @xstrcoll_df_version], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_version, i32 (i8*, i8*)* @rev_xstrcoll_df_version]], [2 x [2 x i32 (i8*, i8*)*]] zeroinitializer], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_mtime, i32 (i8*, i8*)* @xstrcoll_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_mtime, i32 (i8*, i8*)* @rev_xstrcoll_df_mtime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_mtime, i32 (i8*, i8*)* @strcmp_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_mtime, i32 (i8*, i8*)* @rev_strcmp_df_mtime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_ctime, i32 (i8*, i8*)* @xstrcoll_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_ctime, i32 (i8*, i8*)* @rev_xstrcoll_df_ctime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_ctime, i32 (i8*, i8*)* @strcmp_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_ctime, i32 (i8*, i8*)* @rev_strcmp_df_ctime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_atime, i32 (i8*, i8*)* @xstrcoll_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_atime, i32 (i8*, i8*)* @rev_xstrcoll_df_atime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_atime, i32 (i8*, i8*)* @strcmp_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_atime, i32 (i8*, i8*)* @rev_strcmp_df_atime]]]], align 16, !dbg !1021, !ctir !715
@sort_reverse = internal global i8 0, align 1, !dbg !900, !ctir !141
@.str.223 = private unnamed_addr constant [36 x i8] c"cannot compare file names %s and %s\00", align 1
@.str.216 = private unnamed_addr constant [51 x i8] c"! command_line_arg || inode == NOT_AN_INODE_NUMBER\00", align 1
@__PRETTY_FUNCTION__.gobble_file = private unnamed_addr constant [79 x i8] c"uintmax_t gobble_file(const char *, enum filetype, ino_t, _Bool, const char *)\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"unlabeled\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.220 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@file_has_acl_cache.unsupported_device = internal global i64 0, align 8, !dbg !1014
@getfilecon_cache.unsupported_device = internal global i64 0, align 8, !dbg !1011
@has_capability_cache.unsupported_device = internal global i64 0, align 8, !dbg !1008
@.str.46 = private unnamed_addr constant [3 x i8] c"00\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"LS_COLORS\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"COLORTERM\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@color_buf = internal global i8* null, align 8, !dbg !971, !ctir !143
@indicator_name = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* null], align 16, !dbg !975, !ctir !599
@.str.175 = private unnamed_addr constant [24 x i8] c"unrecognized prefix: %s\00", align 1
@.str.176 = private unnamed_addr constant [52 x i8] c"unparsable value for LS_COLORS environment variable\00", align 1
@.str.177 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"lc\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"ec\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c"bd\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@.str.194 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.195 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.196 = private unnamed_addr constant [3 x i8] c"sg\00", align 1
@.str.197 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"ow\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"mh\00", align 1
@.str.202 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@G_line = internal constant [4304 x i8] c"# Configuration file for dircolors, a utility to help you set the\00# LS_COLORS environment variable used by GNU ls with the --color option.\00# Copyright (C) 1996-2019 Free Software Foundation, Inc.\00# Copying and distribution of this file, with or without modification,\00# are permitted provided the copyright notice and this notice are preserved.\00# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\00# slackware version of dircolors) are recognized but ignored.\00# Below are TERM entries, which can be a glob patterns, to match\00# against the TERM environment variable to determine if it is colorizable.\00TERM Eterm\00TERM ansi\00TERM *color*\00TERM con[0-9]*x[0-9]*\00TERM cons25\00TERM console\00TERM cygwin\00TERM dtterm\00TERM gnome\00TERM hurd\00TERM jfbterm\00TERM konsole\00TERM kterm\00TERM linux\00TERM linux-c\00TERM mlterm\00TERM putty\00TERM rxvt*\00TERM screen*\00TERM st\00TERM terminator\00TERM tmux*\00TERM vt100\00TERM xterm*\00# Below are the color init strings for the basic file types.\00# One can use codes for 256 or more colors supported by modern terminals.\00# The default color codes use the capabilities of an 8 color terminal\00# with some additional attributes as per the following codes:\00# Attribute codes:\00# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\00# Text color codes:\00# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\00# Background color codes:\00# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\00#NORMAL 00 # no color code at all\00#FILE 00 # regular file: use no color at all\00RESET 0 # reset to \22normal\22 color\00DIR 01;34 # directory\00LINK 01;36 # symbolic link. (If you set this to 'target' instead of a\00 # numerical value, the color is as for the file pointed to.)\00MULTIHARDLINK 00 # regular file with more than one link\00FIFO 40;33 # pipe\00SOCK 01;35 # socket\00DOOR 01;35 # door\00BLK 40;33;01 # block device driver\00CHR 40;33;01 # character device driver\00ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'able file ...\00MISSING 00 # ... and the files they point to\00SETUID 37;41 # file that is setuid (u+s)\00SETGID 30;43 # file that is setgid (g+s)\00CAPABILITY 30;41 # file with capability\00STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\00OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky\00STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\00# This is for files with execute permission:\00EXEC 01;32\00# List any file extensions like '.gz' or '.tar' that you would like ls\00# to colorize below. Put the extension, a space, and the color init string.\00# (and any comments you want to add after a '#')\00# If you use DOS-style suffixes, you may want to uncomment the following:\00#.cmd 01;32 # executables (bright green)\00#.exe 01;32\00#.com 01;32\00#.btm 01;32\00#.bat 01;32\00# Or if you want to colorize scripts even if they do not have the\00# executable bit actually set.\00#.sh 01;32\00#.csh 01;32\00 # archives or compressed (bright red)\00.tar 01;31\00.tgz 01;31\00.arc 01;31\00.arj 01;31\00.taz 01;31\00.lha 01;31\00.lz4 01;31\00.lzh 01;31\00.lzma 01;31\00.tlz 01;31\00.txz 01;31\00.tzo 01;31\00.t7z 01;31\00.zip 01;31\00.z 01;31\00.dz 01;31\00.gz 01;31\00.lrz 01;31\00.lz 01;31\00.lzo 01;31\00.xz 01;31\00.zst 01;31\00.tzst 01;31\00.bz2 01;31\00.bz 01;31\00.tbz 01;31\00.tbz2 01;31\00.tz 01;31\00.deb 01;31\00.rpm 01;31\00.jar 01;31\00.war 01;31\00.ear 01;31\00.sar 01;31\00.rar 01;31\00.alz 01;31\00.ace 01;31\00.zoo 01;31\00.cpio 01;31\00.7z 01;31\00.rz 01;31\00.cab 01;31\00.wim 01;31\00.swm 01;31\00.dwm 01;31\00.esd 01;31\00# image formats\00.jpg 01;35\00.jpeg 01;35\00.mjpg 01;35\00.mjpeg 01;35\00.gif 01;35\00.bmp 01;35\00.pbm 01;35\00.pgm 01;35\00.ppm 01;35\00.tga 01;35\00.xbm 01;35\00.xpm 01;35\00.tif 01;35\00.tiff 01;35\00.png 01;35\00.svg 01;35\00.svgz 01;35\00.mng 01;35\00.pcx 01;35\00.mov 01;35\00.mpg 01;35\00.mpeg 01;35\00.m2v 01;35\00.mkv 01;35\00.webm 01;35\00.webp 01;35\00.ogm 01;35\00.mp4 01;35\00.m4v 01;35\00.mp4v 01;35\00.vob 01;35\00.qt 01;35\00.nuv 01;35\00.wmv 01;35\00.asf 01;35\00.rm 01;35\00.rmvb 01;35\00.flc 01;35\00.avi 01;35\00.fli 01;35\00.flv 01;35\00.gl 01;35\00.dl 01;35\00.xcf 01;35\00.xwd 01;35\00.yuv 01;35\00.cgm 01;35\00.emf 01;35\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.ogv 01;35\00.ogx 01;35\00# audio formats\00.aac 00;36\00.au 00;36\00.flac 00;36\00.m4a 00;36\00.mid 00;36\00.midi 00;36\00.mka 00;36\00.mp3 00;36\00.mpc 00;36\00.ogg 00;36\00.ra 00;36\00.wav 00;36\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.oga 00;36\00.opus 00;36\00.spx 00;36\00.xspf 00;36\00", align 16, !dbg !968, !ctir !604
@.str.179 = private unnamed_addr constant [6 x i8] c"TERM \00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.64 = private unnamed_addr constant [59 x i8] c"ignoring invalid width in environment variable COLUMNS: %s\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"TABSIZE\00", align 1
@.str.66 = private unnamed_addr constant [62 x i8] c"ignoring invalid tab size in environment variable TABSIZE: %s\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\00", align 1
@long_options = internal constant [44 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i32 0, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32 1, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i32 0, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i32 0, i32* null, i32 70 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 141 }, %struct.option { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 1, i32* null, i32 136 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), i32 1, i32* null, i32 138 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i32 0, i32* null, i32 81 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 1, i32* null, i32 139 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), i32 0, i32* null, i32 140 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i32 1, i32* null, i32 142 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i32 1, i32* null, i32 143 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i32 1, i32* null, i32 144 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i32 2, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i32 2, i32* null, i32 137 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !916, !ctir !516
@optarg = external dso_local global i8*, align 8, !ctir !143
@.str.69 = private unnamed_addr constant [19 x i8] c"invalid line width\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"*~\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c".*~\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"invalid tab size\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i8* null], align 16, !dbg !934, !ctir !532
@sort_types = internal constant [5 x i32] [i32 -1, i32 4, i32 2, i32 1, i32 3], align 16, !dbg !932, !ctir !528
@.str.74 = private unnamed_addr constant [7 x i8] c"--time\00", align 1
@time_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8* null], align 16, !dbg !938, !ctir !532
@time_types = internal constant [5 x i32] [i32 2, i32 2, i32 2, i32 1, i32 1], align 16, !dbg !936, !ctir !537
@.str.75 = private unnamed_addr constant [9 x i8] c"--format\00", align 1
@format_args = internal constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), i8* null], align 16, !dbg !942, !ctir !543
@format_types = internal constant [7 x i32] [i32 0, i32 0, i32 4, i32 3, i32 3, i32 2, i32 1], align 16, !dbg !940, !ctir !539
@.str.76 = private unnamed_addr constant [9 x i8] c"full-iso\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"--color\00", align 1
@when_args = internal constant [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i8* null], align 16, !dbg !946, !ctir !550
@when_types = internal constant [9 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2], align 16, !dbg !944, !ctir !546
@.str.78 = private unnamed_addr constant [12 x i8] c"--hyperlink\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"--indicator-style\00", align 1
@indicator_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* null], align 16, !dbg !950, !ctir !557
@indicator_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !948, !ctir !553
@.str.80 = private unnamed_addr constant [16 x i8] c"--quoting-style\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"vdir\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"Richard M. Stallman\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"LS_BLOCK_SIZE\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"*=>@|\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"TIME_STYLE\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@decode_switches.posix_prefix = internal constant [7 x i8] c"posix-\00", align 1, !dbg !892
@optind = external dso_local global i32, align 4, !ctir !27
@.str.89 = private unnamed_addr constant [29 x i8] c"invalid time style format %s\00", align 1
@time_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* null], align 16, !dbg !960, !ctir !557
@time_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !962, !ctir !565
@.str.90 = private unnamed_addr constant [11 x i8] c"time style\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"Valid arguments are:\0A\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !268
@.str.92 = private unnamed_addr constant [16 x i8] c"  - [posix-]%s\0A\00", align 1
@.str.93 = private unnamed_addr constant [54 x i8] c"  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\0A\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"%Y-%m-%d %H:%M:%S.%N %z\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"%Y-%m-%d \00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"%m-%d %H:%M\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"%.*s%s%s\00", align 1
@.str.168 = private unnamed_addr constant [9 x i8] c"long-iso\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 1
@.str.14 = private unnamed_addr constant [144 x i8] c"List information about the FILEs (the current directory by default).\0ASort entries alphabetically if none of -cftuvSUX nor --sort is specified.\0A\00", align 1
@.str.15 = private unnamed_addr constant [271 x i8] c"  -a, --all                  do not ignore entries starting with .\0A  -A, --almost-all           do not list implied . and ..\0A      --author               with -l, print the author of each file\0A  -b, --escape               print C-style escapes for nongraphic characters\0A\00", align 1
@.str.16 = private unnamed_addr constant [156 x i8] c"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\0A                               e.g., '--block-size=M'; see SIZE format below\0A\00", align 1
@.str.17 = private unnamed_addr constant [362 x i8] c"  -B, --ignore-backups       do not list implied entries ending with ~\0A  -c                         with -lt: sort by, and show, ctime (time of last\0A                               modification of file status information);\0A                               with -l: show ctime and sort by name;\0A                               otherwise: sort by ctime, newest first\0A\00", align 1
@.str.18 = private unnamed_addr constant [367 x i8] c"  -C                         list entries by columns\0A      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\0A                               if omitted), 'auto', or 'never'; more info below\0A  -d, --directory            list directories themselves, not their contents\0A  -D, --dired                generate output designed for Emacs' dired mode\0A\00", align 1
@.str.19 = private unnamed_addr constant [419 x i8] c"  -f                         do not sort, enable -aU, disable -ls --color\0A  -F, --classify             append indicator (one of */=>@|) to entries\0A      --file-type            likewise, except do not append '*'\0A      --format=WORD          across -x, commas -m, horizontal -x, long -l,\0A                               single-column -1, verbose -l, vertical -C\0A      --full-time            like -l --time-style=full-iso\0A\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"  -g                         like -l, but do not list owner\0A\00", align 1
@.str.21 = private unnamed_addr constant [245 x i8] c"      --group-directories-first\0A                             group directories before files;\0A                               can be augmented with a --sort option, but any\0A                               use of --sort=none (-U) disables grouping\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"  -G, --no-group             in a long listing, don't print group names\0A\00", align 1
@.str.23 = private unnamed_addr constant [150 x i8] c"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\0A      --si                   likewise, but use powers of 1000 not 1024\0A\00", align 1
@.str.24 = private unnamed_addr constant [422 x i8] c"  -H, --dereference-command-line\0A                             follow symbolic links listed on the command line\0A      --dereference-command-line-symlink-to-dir\0A                             follow each command line symbolic link\0A                               that points to a directory\0A      --hide=PATTERN         do not list implied entries matching shell PATTERN\0A                               (overridden by -a or -A)\0A\00", align 1
@.str.25 = private unnamed_addr constant [145 x i8] c"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\0A                               (default if omitted), 'auto', or 'never'\0A\00", align 1
@.str.26 = private unnamed_addr constant [354 x i8] c"      --indicator-style=WORD  append indicator with style WORD to entry names:\0A                               none (default), slash (-p),\0A                               file-type (--file-type), classify (-F)\0A  -i, --inode                print the index number of each file\0A  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\0A\00", align 1
@.str.27 = private unnamed_addr constant [148 x i8] c"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\0A                               used only with -s and per directory totals\0A\00", align 1
@.str.28 = private unnamed_addr constant [359 x i8] c"  -l                         use a long listing format\0A  -L, --dereference          when showing file information for a symbolic\0A                               link, show information for the file the link\0A                               references rather than for the link itself\0A  -m                         fill width with a comma separated list of entries\0A\00", align 1
@.str.29 = private unnamed_addr constant [303 x i8] c"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\0A  -N, --literal              print entry names without quoting\0A  -o                         like -l, but do not list group information\0A  -p, --indicator-style=slash\0A                             append / indicator to directories\0A\00", align 1
@.str.30 = private unnamed_addr constant [585 x i8] c"  -q, --hide-control-chars   print ? instead of nongraphic characters\0A      --show-control-chars   show nongraphic characters as-is (the default,\0A                               unless program is 'ls' and output is a terminal)\0A  -Q, --quote-name           enclose entry names in double quotes\0A      --quoting-style=WORD   use quoting style WORD for entry names:\0A                               literal, locale, shell, shell-always,\0A                               shell-escape, shell-escape-always, c, escape\0A                               (overrides QUOTING_STYLE environment variable)\0A\00", align 1
@.str.31 = private unnamed_addr constant [197 x i8] c"  -r, --reverse              reverse order while sorting\0A  -R, --recursive            list subdirectories recursively\0A  -s, --size                 print the allocated size of each file, in blocks\0A\00", align 1
@.str.32 = private unnamed_addr constant [519 x i8] c"  -S                         sort by file size, largest first\0A      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\0A                               time (-t), version (-v), extension (-X)\0A      --time=WORD            with -l, show time as WORD instead of default\0A                               modification time: atime or access or use (-u);\0A                               ctime or status (-c); also use specified time\0A                               as sort key if --sort=time (newest first)\0A\00", align 1
@.str.33 = private unnamed_addr constant [79 x i8] c"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\0A\00", align 1
@.str.34 = private unnamed_addr constant [142 x i8] c"  -t                         sort by modification time, newest first\0A  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\0A\00", align 1
@.str.35 = private unnamed_addr constant [372 x i8] c"  -u                         with -lt: sort by, and show, access time;\0A                               with -l: show access time and sort by name;\0A                               otherwise: sort by access time, newest first\0A  -U                         do not sort; list entries in directory order\0A  -v                         natural sort of (version) numbers within text\0A\00", align 1
@.str.36 = private unnamed_addr constant [363 x i8] c"  -w, --width=COLS           set output width to COLS.  0 means no limit\0A  -x                         list entries by lines instead of by columns\0A  -X                         sort alphabetically by entry extension\0A  -Z, --context              print any security context of each file\0A  -1                         list one file per line.  Avoid '\5Cn' with -q or -b\0A\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.39 = private unnamed_addr constant [376 x i8] c"\0AThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\0AFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\0Athen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\0ATIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\0AAlso the TIME_STYLE environment variable sets the default style to use.\0A\00", align 1
@.str.40 = private unnamed_addr constant [286 x i8] c"\0AUsing color to distinguish file types is disabled both by default and\0Awith --color=never.  With --color=auto, ls emits color codes only when\0Astandard output is connected to a terminal.  The LS_COLORS environment\0Avariable can change the settings.  Use the dircolors command to set it.\0A\00", align 1
@.str.41 = private unnamed_addr constant [152 x i8] c"\0AExit status:\0A 0  if OK,\0A 1  if minor problems (e.g., cannot access subdirectory),\0A 2  if serious trouble (e.g., cannot access command-line argument).\0A\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.235, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.241 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.242 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.243 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.244 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.246 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.233 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.237 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.238 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.232 = private unnamed_addr constant [212 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0ABinary prefixes can be used, too: KiB=K, MiB=M, and so on.\0A\00", align 1
@.str.231 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"slash\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"file-type\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"classify\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"if-tty\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"commas\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"across\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"single-column\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"use\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.142 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"dired\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"full-time\00", align 1
@.str.105 = private unnamed_addr constant [24 x i8] c"group-directories-first\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"kibibytes\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"numeric-uid-gid\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"no-group\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"hide-control-chars\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"almost-all\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"ignore-backups\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"dereference-command-line\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"dereference-command-line-symlink-to-dir\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"hide\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"indicator-style\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"quote-name\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"quoting-style\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"show-control-chars\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"tabsize\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"time-style\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"hyperlink\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"author\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"QUOTING_STYLE\00", align 1
@.str.99 = private unnamed_addr constant [65 x i8] c"ignoring invalid value of environment variable QUOTING_STYLE: %s\00", align 1
@ls_mode = dso_local global i32 1, align 4, !dbg !1036, !ctir !27
@Version = dso_local global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.248, i32 0, i32 0), align 8, !dbg !1041, !ctir !146
@.str.248 = private unnamed_addr constant [15 x i8] c"8.31.48-f2dfea\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1047, !ctir !535
@.str.257 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.258 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.259 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.260 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.261 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.270 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null, align 8, !dbg !1098, !ctir !146
@ignore_EPIPE = internal global i8 0, align 1, !dbg !1138, !ctir !141
@.str.273 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.274 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.275 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !1141, !ctir !330
@.str.284 = private unnamed_addr constant [24 x i8] c"system.posix_acl_access\00", align 1
@.str.1.285 = private unnamed_addr constant [25 x i8] c"system.posix_acl_default\00", align 1
@.str.298 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.299 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.304 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.305 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.308 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.309 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.310 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.311 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1148, !ctir !1175
@.str.330 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.331 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.332 = private unnamed_addr constant [6 x i8] c"%.0Lf\00", align 1
@.str.3.333 = private unnamed_addr constant [6 x i8] c"%.1Lf\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY", align 1, !dbg !1280, !ctir !1318
@.str.9.336 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.4.337 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.5.338 = private unnamed_addr constant [10 x i8] c"BLOCKSIZE\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.340, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.341, i32 0, i32 0), i8* null], align 16, !dbg !1337, !ctir !1332
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144], align 4, !dbg !1340, !ctir !1333
@.str.6.339 = private unnamed_addr constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@.str.7.340 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.8.341 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@user_alist = internal global %struct.userid* null, align 8, !dbg !1342, !ctir !1349
@.str.344 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@nouser_alist = internal global %struct.userid* null, align 8, !dbg !1388, !ctir !1349
@group_alist = internal global %struct.userid* null, align 8, !dbg !1390, !ctir !1349
@nogroup_alist = internal global %struct.userid* null, align 8, !dbg !1392, !ctir !1349
@.str.361 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.362 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.363 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.364 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.365 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1394, !ctir !146
@.str.370 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.371 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.372 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !143
@program_invocation_name = external dso_local global i8*, align 8, !ctir !143
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.376, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.377, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.378, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.379, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.381, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.382, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.384, i32 0, i32 0), i8* null], align 16, !dbg !1435, !ctir !1441
@.str.375 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.376 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.377 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.378 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.379 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.380 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.381 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.382 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.383 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.384 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1532, !ctir !1442
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1534, !ctir !1446
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1536, !ctir !1446
@.str.10.397 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.398 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.399 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.400 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.401 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.402 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.403 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.404 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.405 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.bin_str* @slotvec0, align 8, !dbg !1540, !ctir !1474
@nslots = internal global i32 1, align 4, !dbg !1542, !ctir !27
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1538, !ctir !343
@slotvec0 = internal global %struct.bin_str { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1544, !ctir !1475
@.str.420 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.435 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.436 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.437 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.438 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.439 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.440 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.441 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.442 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.443 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.444 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.445 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.446 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.447 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.448 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.449 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.450 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.453 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.454 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.455 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.456 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.457 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.458 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.459 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1546, !ctir !1551
@.str.1.478 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.479 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.482 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.489 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.490 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.493 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.494 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.495 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.496 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.499 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.500 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1556, !ctir !425
@.str.1.505 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.506 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.515 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.1.516 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.533 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.534 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !2435 !ctir !235 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4, !ctir !27
  %thispend = alloca %struct.pending*, align 8, !ctir !237
  %n_files = alloca i32, align 4, !ctir !27
  %di = alloca %struct.dev_ino, align 8, !ctir !254
  %found = alloca %struct.dev_ino*, align 8, !ctir !253
  %j = alloca i32, align 4, !ctir !27
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2440, metadata !DIExpression()), !dbg !2441
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2444, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata %struct.pending** %thispend, metadata !2448, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2450, metadata !DIExpression()), !dbg !2451
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2452, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2452, !ctir !142
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2452, !tbaa !2442
  call void @set_program_name(i8* %1), !dbg !2453
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13, !dbg !2454
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !2455
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !2456
  call void @initialize_exit_failure(i32 2), !dbg !2457
  %call3 = call i32 @atexit(void ()* @close_stdout) #13, !dbg !2458
  store i32 0, i32* @exit_status, align 4, !dbg !2459, !tbaa !2436
  store i8 1, i8* @print_dir_name, align 1, !dbg !2460, !tbaa !2461
  store %struct.pending* null, %struct.pending** @pending_dirs, align 8, !dbg !2463, !tbaa !2442
  store i64 -9223372036854775808, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !2464, !tbaa !2465, !ctir !164
  store i64 -1, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !2468, !tbaa !2469, !ctir !219
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2470, !tbaa !2436
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2471, !tbaa !2442
  %call4 = call i32 @decode_switches(i32 %2, i8** %3), !dbg !2472
  store i32 %call4, i32* %i, align 4, !dbg !2473, !tbaa !2436
  %4 = load i8, i8* @print_with_color, align 1, !dbg !2474, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !2474
  br i1 %tobool, label %if.then, label %if.end, !dbg !2476

if.then:                                          ; preds = %entry
  call void @parse_ls_color(), !dbg !2477
  br label %if.end, !dbg !2477

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* @directories_first, align 1, !dbg !2478, !tbaa !2461
  %tobool5 = trunc i8 %5 to i1, !dbg !2478
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !2480

if.then6:                                         ; preds = %if.end
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2481, !tbaa !2461
  br label %if.end18, !dbg !2482

if.else:                                          ; preds = %if.end
  %6 = load i8, i8* @print_with_color, align 1, !dbg !2483, !tbaa !2461
  %tobool7 = trunc i8 %6 to i1, !dbg !2483
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !2485

if.then8:                                         ; preds = %if.else
  %call9 = call zeroext i1 @is_colored(i32 13), !dbg !2486
  br i1 %call9, label %if.then15, label %lor.lhs.false, !dbg !2489

lor.lhs.false:                                    ; preds = %if.then8
  %call10 = call zeroext i1 @is_colored(i32 14), !dbg !2490
  br i1 %call10, label %land.lhs.true, label %lor.lhs.false12, !dbg !2491

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !2492, !tbaa !2461
  %tobool11 = trunc i8 %7 to i1, !dbg !2492
  br i1 %tobool11, label %if.then15, label %lor.lhs.false12, !dbg !2493

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %call13 = call zeroext i1 @is_colored(i32 12), !dbg !2494
  br i1 %call13, label %land.lhs.true14, label %if.end16, !dbg !2495

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %8 = load i32, i32* @format, align 4, !dbg !2496, !tbaa !2497
  %cmp = icmp eq i32 %8, 0, !dbg !2498
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !2499

if.then15:                                        ; preds = %land.lhs.true14, %land.lhs.true, %if.then8
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2500, !tbaa !2461
  br label %if.end16, !dbg !2501

if.end16:                                         ; preds = %if.then15, %land.lhs.true14, %lor.lhs.false12
  br label %if.end17, !dbg !2502

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  %9 = load i32, i32* @dereference, align 4, !dbg !2503, !tbaa !2497
  %cmp19 = icmp eq i32 %9, 1, !dbg !2505
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !2506

if.then20:                                        ; preds = %if.end18
  %10 = load i8, i8* @immediate_dirs, align 1, !dbg !2507, !tbaa !2461
  %tobool21 = trunc i8 %10 to i1, !dbg !2507
  br i1 %tobool21, label %lor.end, label %lor.lhs.false22, !dbg !2508

lor.lhs.false22:                                  ; preds = %if.then20
  %11 = load i32, i32* @indicator_style, align 4, !dbg !2509, !tbaa !2497
  %cmp23 = icmp eq i32 %11, 3, !dbg !2510
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !2511

lor.rhs:                                          ; preds = %lor.lhs.false22
  %12 = load i32, i32* @format, align 4, !dbg !2512, !tbaa !2497
  %cmp24 = icmp eq i32 %12, 0, !dbg !2513
  br label %lor.end, !dbg !2511

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false22, %if.then20
  %13 = phi i1 [ true, %lor.lhs.false22 ], [ true, %if.then20 ], [ %cmp24, %lor.rhs ]
  %14 = zext i1 %13 to i64, !dbg !2514
  %cond = select i1 %13, i32 2, i32 4, !dbg !2514
  store i32 %cond, i32* @dereference, align 4, !dbg !2515, !tbaa !2497
  br label %if.end25, !dbg !2516

if.end25:                                         ; preds = %lor.end, %if.end18
  %15 = load i8, i8* @recursive, align 1, !dbg !2517, !tbaa !2461
  %tobool26 = trunc i8 %15 to i1, !dbg !2517
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !2519

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.hash_table* @hash_initialize(i64 30, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_ino_hash, i1 (i8*, i8*)* @dev_ino_compare, void (i8*)* @dev_ino_free), !dbg !2520
  store %struct.hash_table* %call28, %struct.hash_table** @active_dir_set, align 8, !dbg !2522, !tbaa !2442
  %16 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2523, !tbaa !2442
  %cmp29 = icmp eq %struct.hash_table* %16, null, !dbg !2525
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2526

if.then30:                                        ; preds = %if.then27
  call void @xalloc_die() #14, !dbg !2527
  unreachable, !dbg !2527

if.end31:                                         ; preds = %if.then27
  %call32 = call i32 @_obstack_begin(%struct.obstack* @dev_ino_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2528
  br label %if.end33, !dbg !2529

if.end33:                                         ; preds = %if.end31, %if.end25
  %call34 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !2530
  %call35 = call %struct.tm_zone* @tzalloc(i8* %call34), !dbg !2531
  store %struct.tm_zone* %call35, %struct.tm_zone** @localtz, align 8, !dbg !2532, !tbaa !2442
  %17 = load i32, i32* @sort_type, align 4, !dbg !2533, !tbaa !2497
  %cmp36 = icmp eq i32 %17, 4, !dbg !2534
  br i1 %cmp36, label %lor.end45, label %lor.lhs.false37, !dbg !2535

lor.lhs.false37:                                  ; preds = %if.end33
  %18 = load i32, i32* @sort_type, align 4, !dbg !2536, !tbaa !2497
  %cmp38 = icmp eq i32 %18, 2, !dbg !2537
  br i1 %cmp38, label %lor.end45, label %lor.lhs.false39, !dbg !2538

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %19 = load i32, i32* @format, align 4, !dbg !2539, !tbaa !2497
  %cmp40 = icmp eq i32 %19, 0, !dbg !2540
  br i1 %cmp40, label %lor.end45, label %lor.lhs.false41, !dbg !2541

lor.lhs.false41:                                  ; preds = %lor.lhs.false39
  %20 = load i8, i8* @print_scontext, align 1, !dbg !2542, !tbaa !2461
  %tobool42 = trunc i8 %20 to i1, !dbg !2542
  br i1 %tobool42, label %lor.end45, label %lor.rhs43, !dbg !2543

lor.rhs43:                                        ; preds = %lor.lhs.false41
  %21 = load i8, i8* @print_block_size, align 1, !dbg !2544, !tbaa !2461
  %tobool44 = trunc i8 %21 to i1, !dbg !2544
  br label %lor.end45, !dbg !2543

lor.end45:                                        ; preds = %lor.rhs43, %lor.lhs.false41, %lor.lhs.false39, %lor.lhs.false37, %if.end33
  %22 = phi i1 [ true, %lor.lhs.false41 ], [ true, %lor.lhs.false39 ], [ true, %lor.lhs.false37 ], [ true, %if.end33 ], [ %tobool44, %lor.rhs43 ]
  %frombool = zext i1 %22 to i8, !dbg !2545
  store i8 %frombool, i8* @format_needs_stat, align 1, !dbg !2545, !tbaa !2461
  %23 = load i8, i8* @format_needs_stat, align 1, !dbg !2546, !tbaa !2461
  %tobool46 = trunc i8 %23 to i1, !dbg !2546
  br i1 %tobool46, label %land.end, label %land.rhs, !dbg !2547

land.rhs:                                         ; preds = %lor.end45
  %24 = load i8, i8* @recursive, align 1, !dbg !2548, !tbaa !2461
  %tobool47 = trunc i8 %24 to i1, !dbg !2548
  br i1 %tobool47, label %lor.end54, label %lor.lhs.false48, !dbg !2549

lor.lhs.false48:                                  ; preds = %land.rhs
  %25 = load i8, i8* @print_with_color, align 1, !dbg !2550, !tbaa !2461
  %tobool49 = trunc i8 %25 to i1, !dbg !2550
  br i1 %tobool49, label %lor.end54, label %lor.lhs.false50, !dbg !2551

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %26 = load i32, i32* @indicator_style, align 4, !dbg !2552, !tbaa !2497
  %cmp51 = icmp ne i32 %26, 0, !dbg !2553
  br i1 %cmp51, label %lor.end54, label %lor.rhs52, !dbg !2554

lor.rhs52:                                        ; preds = %lor.lhs.false50
  %27 = load i8, i8* @directories_first, align 1, !dbg !2555, !tbaa !2461
  %tobool53 = trunc i8 %27 to i1, !dbg !2555
  br label %lor.end54, !dbg !2554

lor.end54:                                        ; preds = %lor.rhs52, %lor.lhs.false50, %lor.lhs.false48, %land.rhs
  %28 = phi i1 [ true, %lor.lhs.false50 ], [ true, %lor.lhs.false48 ], [ true, %land.rhs ], [ %tobool53, %lor.rhs52 ]
  br label %land.end

land.end:                                         ; preds = %lor.end54, %lor.end45
  %29 = phi i1 [ false, %lor.end45 ], [ %28, %lor.end54 ], !dbg !2556
  %frombool55 = zext i1 %29 to i8, !dbg !2557
  store i8 %frombool55, i8* @format_needs_type, align 1, !dbg !2557, !tbaa !2461
  %30 = load i8, i8* @dired, align 1, !dbg !2558, !tbaa !2461
  %tobool56 = trunc i8 %30 to i1, !dbg !2558
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !2560

if.then57:                                        ; preds = %land.end
  %call58 = call i32 @_obstack_begin(%struct.obstack* @dired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2561
  %call59 = call i32 @_obstack_begin(%struct.obstack* @subdired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2563
  br label %if.end60, !dbg !2564

if.end60:                                         ; preds = %if.then57, %land.end
  %31 = load i8, i8* @print_hyperlink, align 1, !dbg !2565, !tbaa !2461
  %tobool61 = trunc i8 %31 to i1, !dbg !2565
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !2567

if.then62:                                        ; preds = %if.end60
  call void @file_escape_init(), !dbg !2568
  %call63 = call i8* @xgethostname(), !dbg !2570
  store i8* %call63, i8** @hostname, align 8, !dbg !2571, !tbaa !2442
  %32 = load i8*, i8** @hostname, align 8, !dbg !2572, !tbaa !2442
  %tobool64 = icmp ne i8* %32, null, !dbg !2572
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !2574

if.then65:                                        ; preds = %if.then62
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** @hostname, align 8, !dbg !2575, !tbaa !2442
  br label %if.end66, !dbg !2576

if.end66:                                         ; preds = %if.then65, %if.then62
  br label %if.end67, !dbg !2577

if.end67:                                         ; preds = %if.end66, %if.end60
  store i64 100, i64* @cwd_n_alloc, align 8, !dbg !2578, !tbaa !2579
  %33 = load i64, i64* @cwd_n_alloc, align 8, !dbg !2580, !tbaa !2579
  %call68 = call noalias i8* @xnmalloc(i64 %33, i64 200), !dbg !2581
  %34 = bitcast i8* %call68 to %struct.fileinfo*, !dbg !2581
  store %struct.fileinfo* %34, %struct.fileinfo** @cwd_file, align 8, !dbg !2582, !tbaa !2442
  store i64 0, i64* @cwd_n_used, align 8, !dbg !2583, !tbaa !2579
  call void @clear_files(), !dbg !2584
  %35 = load i32, i32* %argc.addr, align 4, !dbg !2585, !tbaa !2436
  %36 = load i32, i32* %i, align 4, !dbg !2586, !tbaa !2436
  %sub = sub nsw i32 %35, %36, !dbg !2587
  store i32 %sub, i32* %n_files, align 4, !dbg !2588, !tbaa !2436
  %37 = load i32, i32* %n_files, align 4, !dbg !2589, !tbaa !2436
  %cmp69 = icmp sle i32 %37, 0, !dbg !2591
  br i1 %cmp69, label %if.then70, label %if.else76, !dbg !2592

if.then70:                                        ; preds = %if.end67
  %38 = load i8, i8* @immediate_dirs, align 1, !dbg !2593, !tbaa !2461
  %tobool71 = trunc i8 %38 to i1, !dbg !2593
  br i1 %tobool71, label %if.then72, label %if.else74, !dbg !2596

if.then72:                                        ; preds = %if.then70
  %call73 = call i64 @gobble_file(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 3, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2597
  br label %if.end75, !dbg !2597

if.else74:                                        ; preds = %if.then70
  call void @queue_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* null, i1 zeroext true), !dbg !2598
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then72
  br label %if.end80, !dbg !2599

if.else76:                                        ; preds = %if.end67
  br label %do.body, !dbg !2600

do.body:                                          ; preds = %do.cond, %if.else76
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !2601, !tbaa !2442
  %40 = load i32, i32* %i, align 4, !dbg !2602, !tbaa !2436
  %inc = add nsw i32 %40, 1, !dbg !2602
  store i32 %inc, i32* %i, align 4, !dbg !2602, !tbaa !2436
  %idxprom = sext i32 %40 to i64, !dbg !2601
  %arrayidx77 = getelementptr inbounds i8*, i8** %39, i64 %idxprom, !dbg !2601, !ctir !142
  %41 = load i8*, i8** %arrayidx77, align 8, !dbg !2601, !tbaa !2442
  %call78 = call i64 @gobble_file(i8* %41, i32 0, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2603
  br label %do.cond, !dbg !2603

do.cond:                                          ; preds = %do.body
  %42 = load i32, i32* %i, align 4, !dbg !2604, !tbaa !2436
  %43 = load i32, i32* %argc.addr, align 4, !dbg !2605, !tbaa !2436
  %cmp79 = icmp slt i32 %42, %43, !dbg !2606
  br i1 %cmp79, label %do.body, label %do.end, !dbg !2603, !llvm.loop !2607

do.end:                                           ; preds = %do.cond
  br label %if.end80

if.end80:                                         ; preds = %do.end, %if.end75
  %44 = load i64, i64* @cwd_n_used, align 8, !dbg !2609, !tbaa !2579
  %tobool81 = icmp ne i64 %44, 0, !dbg !2609
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !2611

if.then82:                                        ; preds = %if.end80
  call void @sort_files(), !dbg !2612
  %45 = load i8, i8* @immediate_dirs, align 1, !dbg !2614, !tbaa !2461
  %tobool83 = trunc i8 %45 to i1, !dbg !2614
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !2616

if.then84:                                        ; preds = %if.then82
  call void @extract_dirs_from_files(i8* null, i1 zeroext true), !dbg !2617
  br label %if.end85, !dbg !2617

if.end85:                                         ; preds = %if.then84, %if.then82
  br label %if.end86, !dbg !2618

if.end86:                                         ; preds = %if.end85, %if.end80
  %46 = load i64, i64* @cwd_n_used, align 8, !dbg !2619, !tbaa !2579
  %tobool87 = icmp ne i64 %46, 0, !dbg !2619
  br i1 %tobool87, label %if.then88, label %if.else97, !dbg !2621

if.then88:                                        ; preds = %if.end86
  call void @print_current_files(), !dbg !2622
  %47 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2624, !tbaa !2442
  %tobool89 = icmp ne %struct.pending* %47, null, !dbg !2624
  br i1 %tobool89, label %if.then90, label %if.end96, !dbg !2626

if.then90:                                        ; preds = %if.then88
  br label %do.body91, !dbg !2627

do.body91:                                        ; preds = %if.then90
  %call92 = call i32 @putchar_unlocked(i32 10), !dbg !2628
  %48 = load i64, i64* @dired_pos, align 8, !dbg !2628, !tbaa !2579
  %inc93 = add i64 %48, 1, !dbg !2628
  store i64 %inc93, i64* @dired_pos, align 8, !dbg !2628, !tbaa !2579
  br label %do.end95, !dbg !2628

do.end95:                                         ; preds = %do.body91
  br label %if.end96, !dbg !2628

if.end96:                                         ; preds = %do.end95, %if.then88
  br label %if.end105, !dbg !2630

if.else97:                                        ; preds = %if.end86
  %49 = load i32, i32* %n_files, align 4, !dbg !2631, !tbaa !2436
  %cmp98 = icmp sle i32 %49, 1, !dbg !2633
  br i1 %cmp98, label %land.lhs.true99, label %if.end104, !dbg !2634

land.lhs.true99:                                  ; preds = %if.else97
  %50 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2635, !tbaa !2442
  %tobool100 = icmp ne %struct.pending* %50, null, !dbg !2635
  br i1 %tobool100, label %land.lhs.true101, label %if.end104, !dbg !2636

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %51 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2637, !tbaa !2442
  %next = getelementptr inbounds %struct.pending, %struct.pending* %51, i32 0, i32 3, !dbg !2638, !ctir !238
  %52 = load %struct.pending*, %struct.pending** %next, align 8, !dbg !2638, !tbaa !2639, !ctir !237
  %cmp102 = icmp eq %struct.pending* %52, null, !dbg !2641
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !2642

if.then103:                                       ; preds = %land.lhs.true101
  store i8 0, i8* @print_dir_name, align 1, !dbg !2643, !tbaa !2461
  br label %if.end104, !dbg !2644

if.end104:                                        ; preds = %if.then103, %land.lhs.true101, %land.lhs.true99, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end96
  br label %while.cond, !dbg !2645

while.cond:                                       ; preds = %if.end119, %if.end117, %if.end105
  %53 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2646, !tbaa !2442
  %tobool106 = icmp ne %struct.pending* %53, null, !dbg !2645
  br i1 %tobool106, label %while.body, label %while.end, !dbg !2645

while.body:                                       ; preds = %while.cond
  %54 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2647, !tbaa !2442
  store %struct.pending* %54, %struct.pending** %thispend, align 8, !dbg !2649, !tbaa !2442
  %55 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2650, !tbaa !2442
  %next107 = getelementptr inbounds %struct.pending, %struct.pending* %55, i32 0, i32 3, !dbg !2651, !ctir !238
  %56 = load %struct.pending*, %struct.pending** %next107, align 8, !dbg !2651, !tbaa !2639, !ctir !237
  store %struct.pending* %56, %struct.pending** @pending_dirs, align 8, !dbg !2652, !tbaa !2442
  %57 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2653, !tbaa !2442
  %tobool108 = icmp ne %struct.hash_table* %57, null, !dbg !2653
  br i1 %tobool108, label %if.then109, label %if.end119, !dbg !2655

if.then109:                                       ; preds = %while.body
  %58 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2656, !tbaa !2442
  %name = getelementptr inbounds %struct.pending, %struct.pending* %58, i32 0, i32 0, !dbg !2659, !ctir !238
  %59 = load i8*, i8** %name, align 8, !dbg !2659, !tbaa !2660, !ctir !143
  %cmp110 = icmp eq i8* %59, null, !dbg !2661
  br i1 %cmp110, label %if.then111, label %if.end118, !dbg !2662

if.then111:                                       ; preds = %if.then109
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %di, metadata !2663, metadata !DIExpression()), !dbg !2665
  %call112 = call { i64, i64 } @dev_ino_pop(), !dbg !2666
  %60 = bitcast %struct.dev_ino* %di to { i64, i64 }*, !dbg !2666
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0, !dbg !2666
  %62 = extractvalue { i64, i64 } %call112, 0, !dbg !2666
  store i64 %62, i64* %61, align 8, !dbg !2666
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1, !dbg !2666
  %64 = extractvalue { i64, i64 } %call112, 1, !dbg !2666
  store i64 %64, i64* %63, align 8, !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %found, metadata !2667, metadata !DIExpression()), !dbg !2668
  %65 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2669, !tbaa !2442
  %66 = bitcast %struct.dev_ino* %di to i8*, !dbg !2670
  %call113 = call i8* @hash_delete(%struct.hash_table* %65, i8* %66), !dbg !2671
  %67 = bitcast i8* %call113 to %struct.dev_ino*, !dbg !2671
  store %struct.dev_ino* %67, %struct.dev_ino** %found, align 8, !dbg !2668, !tbaa !2442
  %68 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2672, !tbaa !2442
  %tobool114 = icmp ne %struct.dev_ino* %68, null, !dbg !2672
  br i1 %tobool114, label %if.then115, label %if.else116, !dbg !2675

if.then115:                                       ; preds = %if.then111
  br label %if.end117, !dbg !2675

if.else116:                                       ; preds = %if.then111
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1600, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2672
  unreachable, !dbg !2672

if.end117:                                        ; preds = %if.then115
  %69 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2676, !tbaa !2442
  %70 = bitcast %struct.dev_ino* %69 to i8*, !dbg !2676
  call void @dev_ino_free(i8* %70), !dbg !2677
  %71 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2678, !tbaa !2442
  call void @free_pending_ent(%struct.pending* %71), !dbg !2679
  br label %while.cond, !dbg !2680, !llvm.loop !2681

if.end118:                                        ; preds = %if.then109
  br label %if.end119, !dbg !2683

if.end119:                                        ; preds = %if.end118, %while.body
  %72 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2684, !tbaa !2442
  %name120 = getelementptr inbounds %struct.pending, %struct.pending* %72, i32 0, i32 0, !dbg !2685, !ctir !238
  %73 = load i8*, i8** %name120, align 8, !dbg !2685, !tbaa !2660, !ctir !143
  %74 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2686, !tbaa !2442
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %74, i32 0, i32 1, !dbg !2687, !ctir !238
  %75 = load i8*, i8** %realname, align 8, !dbg !2687, !tbaa !2688, !ctir !143
  %76 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2689, !tbaa !2442
  %command_line_arg = getelementptr inbounds %struct.pending, %struct.pending* %76, i32 0, i32 2, !dbg !2690, !ctir !238
  %77 = load i8, i8* %command_line_arg, align 8, !dbg !2690, !tbaa !2691
  %tobool121 = trunc i8 %77 to i1, !dbg !2690, !ctir !141
  call void @print_dir(i8* %73, i8* %75, i1 zeroext %tobool121), !dbg !2692
  %78 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2693, !tbaa !2442
  call void @free_pending_ent(%struct.pending* %78), !dbg !2694
  store i8 1, i8* @print_dir_name, align 1, !dbg !2695, !tbaa !2461
  br label %while.cond, !dbg !2645, !llvm.loop !2681

while.end:                                        ; preds = %while.cond
  %79 = load i8, i8* @print_with_color, align 1, !dbg !2696, !tbaa !2461
  %tobool122 = trunc i8 %79 to i1, !dbg !2696
  br i1 %tobool122, label %land.lhs.true123, label %if.end145, !dbg !2698

land.lhs.true123:                                 ; preds = %while.end
  %80 = load i8, i8* @used_color, align 1, !dbg !2699, !tbaa !2461
  %tobool124 = trunc i8 %80 to i1, !dbg !2699
  br i1 %tobool124, label %if.then125, label %if.end145, !dbg !2700

if.then125:                                       ; preds = %land.lhs.true123
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2701, metadata !DIExpression()), !dbg !2703
  %81 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 0), align 16, !dbg !2704, !tbaa !2706, !ctir !149
  %cmp126 = icmp eq i64 %81, 2, !dbg !2708
  br i1 %cmp126, label %land.lhs.true127, label %if.then136, !dbg !2709

land.lhs.true127:                                 ; preds = %if.then125
  %82 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 1), align 8, !dbg !2710, !tbaa !2711, !ctir !146
  %call128 = call i32 @memcmp(i8* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16, !dbg !2712
  %cmp129 = icmp eq i32 %call128, 0, !dbg !2713
  br i1 %cmp129, label %land.lhs.true130, label %if.then136, !dbg !2714

land.lhs.true130:                                 ; preds = %land.lhs.true127
  %83 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 0), align 16, !dbg !2715, !tbaa !2706, !ctir !149
  %cmp131 = icmp eq i64 %83, 1, !dbg !2716
  br i1 %cmp131, label %land.lhs.true132, label %if.then136, !dbg !2717

land.lhs.true132:                                 ; preds = %land.lhs.true130
  %84 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 1), align 8, !dbg !2718, !tbaa !2711, !ctir !146
  %arrayidx133 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !2719, !ctir !146
  %85 = load i8, i8* %arrayidx133, align 1, !dbg !2719, !tbaa !2497
  %conv = sext i8 %85 to i32, !dbg !2719
  %cmp134 = icmp eq i32 %conv, 109, !dbg !2720
  br i1 %cmp134, label %if.end137, label %if.then136, !dbg !2721

if.then136:                                       ; preds = %land.lhs.true132, %land.lhs.true130, %land.lhs.true127, %if.then125
  call void @restore_default_color(), !dbg !2722
  br label %if.end137, !dbg !2722

if.end137:                                        ; preds = %if.then136, %land.lhs.true132
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2723, !tbaa !2442
  %call138 = call i32 @fflush_unlocked(%struct._IO_FILE* %86), !dbg !2723
  call void @signal_restore(), !dbg !2724
  %87 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !2725, !tbaa !2436
  store i32 %87, i32* %j, align 4, !dbg !2727, !tbaa !2436
  br label %for.cond, !dbg !2728

for.cond:                                         ; preds = %for.inc, %if.end137
  %88 = load i32, i32* %j, align 4, !dbg !2729, !tbaa !2436
  %tobool139 = icmp ne i32 %88, 0, !dbg !2731
  br i1 %tobool139, label %for.body, label %for.end, !dbg !2731

for.body:                                         ; preds = %for.cond
  %call140 = call i32 @raise(i32 19) #13, !dbg !2732
  br label %for.inc, !dbg !2732

for.inc:                                          ; preds = %for.body
  %89 = load i32, i32* %j, align 4, !dbg !2733, !tbaa !2436
  %dec = add nsw i32 %89, -1, !dbg !2733
  store i32 %dec, i32* %j, align 4, !dbg !2733, !tbaa !2436
  br label %for.cond, !dbg !2734, !llvm.loop !2735

for.end:                                          ; preds = %for.cond
  %90 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !2737, !tbaa !2436
  store i32 %90, i32* %j, align 4, !dbg !2738, !tbaa !2436
  %91 = load i32, i32* %j, align 4, !dbg !2739, !tbaa !2436
  %tobool141 = icmp ne i32 %91, 0, !dbg !2739
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !2741

if.then142:                                       ; preds = %for.end
  %92 = load i32, i32* %j, align 4, !dbg !2742, !tbaa !2436
  %call143 = call i32 @raise(i32 %92) #13, !dbg !2743
  br label %if.end144, !dbg !2743

if.end144:                                        ; preds = %if.then142, %for.end
  br label %if.end145, !dbg !2744

if.end145:                                        ; preds = %if.end144, %land.lhs.true123, %while.end
  %93 = load i8, i8* @dired, align 1, !dbg !2745, !tbaa !2461
  %tobool146 = trunc i8 %93 to i1, !dbg !2745
  br i1 %tobool146, label %if.then147, label %if.end152, !dbg !2747

if.then147:                                       ; preds = %if.end145
  call void @dired_dump_obstack(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.obstack* @dired_obstack), !dbg !2748
  call void @dired_dump_obstack(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %struct.obstack* @subdired_obstack), !dbg !2750
  %94 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2751, !tbaa !2442
  %call148 = call i32 @get_quoting_style(%struct.quoting_options* %94), !dbg !2752
  %idxprom149 = zext i32 %call148 to i64, !dbg !2753
  %arrayidx150 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @quoting_style_args to [0 x i8*]*), i64 0, i64 %idxprom149, !dbg !2753, !ctir !324
  %95 = load i8*, i8** %arrayidx150, align 8, !dbg !2753, !tbaa !2442
  %call151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %95), !dbg !2754
  br label %if.end152, !dbg !2755

if.end152:                                        ; preds = %if.then147, %if.end145
  %96 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2756, !tbaa !2442
  %tobool153 = icmp ne %struct.hash_table* %96, null, !dbg !2756
  br i1 %tobool153, label %if.then154, label %if.end161, !dbg !2758

if.then154:                                       ; preds = %if.end152
  %97 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2759, !tbaa !2442
  %call155 = call i64 @hash_get_n_entries(%struct.hash_table* %97) #16, !dbg !2759
  %cmp156 = icmp eq i64 %call155, 0, !dbg !2759
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !2763

if.then158:                                       ; preds = %if.then154
  br label %if.end160, !dbg !2763

if.else159:                                       ; preds = %if.then154
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1652, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2759
  unreachable, !dbg !2759

if.end160:                                        ; preds = %if.then158
  %98 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2764, !tbaa !2442
  call void @hash_free(%struct.hash_table* %98), !dbg !2765
  br label %if.end161, !dbg !2766

if.end161:                                        ; preds = %if.end160, %if.end152
  %99 = load i32, i32* @exit_status, align 4, !dbg !2767, !tbaa !2436
  ret i32 %99, !dbg !2768
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #0 !dbg !2769 !ctir !174 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  %0 = load i32, i32* %status.addr, align 4, !dbg !2772, !tbaa !2436
  %cmp = icmp ne i32 %0, 1, !dbg !2774
  br i1 %cmp, label %if.then, label %if.end, !dbg !2775

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !2776, !tbaa !2436
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !2777, !tbaa !2436
  br label %if.end, !dbg !2778

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2779
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_switches(i32 %argc, i8** %argv) #0 !dbg !894 !ctir !235 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %time_style_option = alloca i8*, align 8, !ctir !143
  %sort_type_specified = alloca i8, align 1, !ctir !141
  %kibibytes_specified = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %ws = alloca %struct.winsize, align 2, !ctir !2780
  %p29 = alloca i8*, align 8, !ctir !146
  %tmp_ulong = alloca i64, align 8, !ctir !151
  %oi = alloca i32, align 4, !ctir !27
  %c = alloca i32, align 4, !ctir !27
  %hide = alloca %struct.ignore_pattern*, align 8, !ctir !511
  %i = alloca i32, align 4, !ctir !27
  %i139 = alloca i32, align 4, !ctir !27
  %e = alloca i32, align 4, !ctir !109
  %ls_block_size = alloca i8*, align 8, !ctir !146
  %qs = alloca i32, align 4, !ctir !95
  %p231 = alloca i8*, align 8, !ctir !146
  %style = alloca i8*, align 8, !ctir !143
  %p0 = alloca i8*, align 8, !ctir !143
  %p1 = alloca i8*, align 8, !ctir !143
  %res = alloca i64, align 8, !ctir !564
  %p304 = alloca i8**, align 8, !ctir !567
  %i320 = alloca i32, align 4, !ctir !27
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2787, metadata !DIExpression()), !dbg !2788
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2789, metadata !DIExpression()), !dbg !2790
  call void @llvm.dbg.declare(metadata i8** %time_style_option, metadata !2791, metadata !DIExpression()), !dbg !2792
  store i8* null, i8** %time_style_option, align 8, !dbg !2792, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %sort_type_specified, metadata !2793, metadata !DIExpression()), !dbg !2794
  store i8 0, i8* %sort_type_specified, align 1, !dbg !2794, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %kibibytes_specified, metadata !2795, metadata !DIExpression()), !dbg !2796
  store i8 0, i8* %kibibytes_specified, align 1, !dbg !2796, !tbaa !2461
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2797, !tbaa !2461
  %0 = load i32, i32* @ls_mode, align 4, !dbg !2798, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !2799

sw.bb:                                            ; preds = %entry
  store i32 2, i32* @format, align 4, !dbg !2800, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2802
  br label %sw.epilog, !dbg !2803

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* @format, align 4, !dbg !2804, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2805
  br label %sw.epilog, !dbg !2806

sw.bb2:                                           ; preds = %entry
  %call = call i32 @isatty(i32 1) #13, !dbg !2807
  %tobool = icmp ne i32 %call, 0, !dbg !2807
  br i1 %tobool, label %if.then, label %if.else, !dbg !2809

if.then:                                          ; preds = %sw.bb2
  store i32 2, i32* @format, align 4, !dbg !2810, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 3), !dbg !2812
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2813, !tbaa !2461
  br label %if.end, !dbg !2814

if.else:                                          ; preds = %sw.bb2
  store i32 1, i32* @format, align 4, !dbg !2815, !tbaa !2497
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2817, !tbaa !2461
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !2818

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !2819
  unreachable, !dbg !2819

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 0, i32* @time_type, align 4, !dbg !2820, !tbaa !2497
  store i32 0, i32* @sort_type, align 4, !dbg !2821, !tbaa !2497
  store i8 0, i8* @sort_reverse, align 1, !dbg !2822, !tbaa !2461
  store i8 0, i8* @numeric_ids, align 1, !dbg !2823, !tbaa !2461
  store i8 0, i8* @print_block_size, align 1, !dbg !2824, !tbaa !2461
  store i32 0, i32* @indicator_style, align 4, !dbg !2825, !tbaa !2497
  store i8 0, i8* @print_inode, align 1, !dbg !2826, !tbaa !2461
  store i32 1, i32* @dereference, align 4, !dbg !2827, !tbaa !2497
  store i8 0, i8* @recursive, align 1, !dbg !2828, !tbaa !2461
  store i8 0, i8* @immediate_dirs, align 1, !dbg !2829, !tbaa !2461
  store i32 0, i32* @ignore_mode, align 4, !dbg !2830, !tbaa !2497
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !2831, !tbaa !2442
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2832, !tbaa !2442
  store i8 0, i8* @print_scontext, align 1, !dbg !2833, !tbaa !2461
  call void @getenv_quoting_style(), !dbg !2834
  store i64 80, i64* @line_length, align 8, !dbg !2835, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2836, metadata !DIExpression()), !dbg !2838
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !2839
  store i8* %call3, i8** %p, align 8, !dbg !2838, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !2840, !tbaa !2442
  %tobool4 = icmp ne i8* %1, null, !dbg !2840
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !2842

land.lhs.true:                                    ; preds = %sw.epilog
  %2 = load i8*, i8** %p, align 8, !dbg !2843, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !2844, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !2844
  %tobool5 = icmp ne i32 %conv, 0, !dbg !2844
  br i1 %tobool5, label %land.lhs.true6, label %if.end11, !dbg !2845

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %p, align 8, !dbg !2846, !tbaa !2442
  %call7 = call zeroext i1 @set_line_length(i8* %4), !dbg !2847
  br i1 %call7, label %if.end11, label %if.then8, !dbg !2848

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64, i64 0, i64 0)) #13, !dbg !2849
  %5 = load i8*, i8** %p, align 8, !dbg !2850, !tbaa !2442
  %call10 = call i8* @quote(i8* %5), !dbg !2851
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call9, i8* %call10), !dbg !2852
  br label %if.end11, !dbg !2852

if.end11:                                         ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.winsize* %ws, metadata !2853, metadata !DIExpression()), !dbg !2855
  %call12 = call i32 (i32, i64, ...) @ioctl(i32 1, i64 21523, %struct.winsize* %ws) #13, !dbg !2856
  %cmp = icmp ne i32 %call12, -1, !dbg !2858
  br i1 %cmp, label %land.lhs.true14, label %if.end28, !dbg !2859

land.lhs.true14:                                  ; preds = %if.end11
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2860, !ctir !2780
  %6 = load i16, i16* %ws_col, align 2, !dbg !2860, !tbaa !2861, !ctir !178
  %conv15 = zext i16 %6 to i32, !dbg !2864
  %cmp16 = icmp slt i32 0, %conv15, !dbg !2865
  br i1 %cmp16, label %land.lhs.true18, label %if.end28, !dbg !2866

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %ws_col19 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2867, !ctir !2780
  %7 = load i16, i16* %ws_col19, align 2, !dbg !2867, !tbaa !2861, !ctir !178
  %conv20 = zext i16 %7 to i64, !dbg !2868
  %ws_col21 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2869, !ctir !2780
  %8 = load i16, i16* %ws_col21, align 2, !dbg !2869, !tbaa !2861, !ctir !178
  %conv22 = zext i16 %8 to i64, !dbg !2870
  %cmp23 = icmp eq i64 %conv20, %conv22, !dbg !2871
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2872

if.then25:                                        ; preds = %land.lhs.true18
  %ws_col26 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2873, !ctir !2780
  %9 = load i16, i16* %ws_col26, align 2, !dbg !2873, !tbaa !2861, !ctir !178
  %conv27 = zext i16 %9 to i64, !dbg !2874
  store i64 %conv27, i64* @line_length, align 8, !dbg !2875, !tbaa !2579
  br label %if.end28, !dbg !2876

if.end28:                                         ; preds = %if.then25, %land.lhs.true18, %land.lhs.true14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %p29, metadata !2877, metadata !DIExpression()), !dbg !2879
  %call30 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !2880
  store i8* %call30, i8** %p29, align 8, !dbg !2879, !tbaa !2442
  store i64 8, i64* @tabsize, align 8, !dbg !2881, !tbaa !2579
  %10 = load i8*, i8** %p29, align 8, !dbg !2882, !tbaa !2442
  %tobool31 = icmp ne i8* %10, null, !dbg !2882
  br i1 %tobool31, label %if.then32, label %if.end44, !dbg !2884

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i64* %tmp_ulong, metadata !2885, metadata !DIExpression()), !dbg !2887
  %11 = load i8*, i8** %p29, align 8, !dbg !2888, !tbaa !2442
  %call33 = call i32 @xstrtoul(i8* %11, i8** null, i32 0, i64* %tmp_ulong, i8* null), !dbg !2890
  %cmp34 = icmp eq i32 %call33, 0, !dbg !2891
  br i1 %cmp34, label %land.lhs.true36, label %if.else40, !dbg !2892

land.lhs.true36:                                  ; preds = %if.then32
  %12 = load i64, i64* %tmp_ulong, align 8, !dbg !2893, !tbaa !2579
  %cmp37 = icmp ule i64 %12, -1, !dbg !2894
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !2895

if.then39:                                        ; preds = %land.lhs.true36
  %13 = load i64, i64* %tmp_ulong, align 8, !dbg !2896, !tbaa !2579
  store i64 %13, i64* @tabsize, align 8, !dbg !2898, !tbaa !2579
  br label %if.end43, !dbg !2899

if.else40:                                        ; preds = %land.lhs.true36, %if.then32
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !2900
  %14 = load i8*, i8** %p29, align 8, !dbg !2902, !tbaa !2442
  %call42 = call i8* @quote(i8* %14), !dbg !2903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call42), !dbg !2904
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then39
  br label %if.end44, !dbg !2905

if.end44:                                         ; preds = %if.end43, %if.end28
  br label %while.body, !dbg !2906

while.body:                                       ; preds = %if.end44, %sw.epilog182
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2907, metadata !DIExpression()), !dbg !2909
  store i32 -1, i32* %oi, align 4, !dbg !2909, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2910, metadata !DIExpression()), !dbg !2911
  %15 = load i32, i32* %argc.addr, align 4, !dbg !2912, !tbaa !2436
  %16 = load i8**, i8*** %argv.addr, align 8, !dbg !2913, !tbaa !2442
  %call45 = call i32 @getopt_long(i32 %15, i8** %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0), %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #13, !dbg !2914
  store i32 %call45, i32* %c, align 4, !dbg !2911, !tbaa !2436
  %17 = load i32, i32* %c, align 4, !dbg !2915, !tbaa !2436
  %cmp46 = icmp eq i32 %17, -1, !dbg !2917
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2918

if.then48:                                        ; preds = %while.body
  br label %while.end, !dbg !2919

if.end49:                                         ; preds = %while.body
  %18 = load i32, i32* %c, align 4, !dbg !2920, !tbaa !2436
  switch i32 %18, label %sw.default181 [
    i32 97, label %sw.bb50
    i32 98, label %sw.bb51
    i32 99, label %sw.bb52
    i32 100, label %sw.bb53
    i32 102, label %sw.bb54
    i32 132, label %sw.bb61
    i32 103, label %sw.bb62
    i32 104, label %sw.bb63
    i32 105, label %sw.bb64
    i32 107, label %sw.bb65
    i32 108, label %sw.bb66
    i32 109, label %sw.bb67
    i32 110, label %sw.bb68
    i32 111, label %sw.bb69
    i32 112, label %sw.bb70
    i32 113, label %sw.bb71
    i32 114, label %sw.bb72
    i32 115, label %sw.bb73
    i32 116, label %sw.bb74
    i32 117, label %sw.bb75
    i32 118, label %sw.bb76
    i32 119, label %sw.bb77
    i32 120, label %sw.bb83
    i32 65, label %sw.bb84
    i32 66, label %sw.bb85
    i32 67, label %sw.bb86
    i32 68, label %sw.bb87
    i32 70, label %sw.bb88
    i32 71, label %sw.bb89
    i32 72, label %sw.bb90
    i32 131, label %sw.bb91
    i32 73, label %sw.bb92
    i32 76, label %sw.bb93
    i32 78, label %sw.bb94
    i32 81, label %sw.bb95
    i32 82, label %sw.bb96
    i32 83, label %sw.bb97
    i32 84, label %sw.bb98
    i32 85, label %sw.bb101
    i32 88, label %sw.bb102
    i32 49, label %sw.bb103
    i32 128, label %sw.bb108
    i32 136, label %sw.bb109
    i32 142, label %sw.bb111
    i32 135, label %sw.bb113
    i32 143, label %sw.bb114
    i32 133, label %sw.bb117
    i32 134, label %sw.bb120
    i32 130, label %sw.bb122
    i32 137, label %sw.bb138
    i32 138, label %sw.bb157
    i32 139, label %sw.bb160
    i32 144, label %sw.bb163
    i32 140, label %sw.bb164
    i32 129, label %sw.bb165
    i32 141, label %sw.bb171
    i32 90, label %sw.bb172
    i32 -130, label %sw.bb173
    i32 -131, label %sw.bb174
  ], !dbg !2921

sw.bb50:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2922, !tbaa !2497
  br label %sw.epilog182, !dbg !2924

sw.bb51:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2925
  br label %sw.epilog182, !dbg !2926

sw.bb52:                                          ; preds = %if.end49
  store i32 1, i32* @time_type, align 4, !dbg !2927, !tbaa !2497
  br label %sw.epilog182, !dbg !2928

sw.bb53:                                          ; preds = %if.end49
  store i8 1, i8* @immediate_dirs, align 1, !dbg !2929, !tbaa !2461
  br label %sw.epilog182, !dbg !2930

sw.bb54:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2931, !tbaa !2497
  store i32 -1, i32* @sort_type, align 4, !dbg !2932, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2933, !tbaa !2461
  %19 = load i32, i32* @format, align 4, !dbg !2934, !tbaa !2497
  %cmp55 = icmp eq i32 %19, 0, !dbg !2936
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !2937

if.then57:                                        ; preds = %sw.bb54
  %call58 = call i32 @isatty(i32 1) #13, !dbg !2938
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2938
  %20 = zext i1 %tobool59 to i64, !dbg !2938
  %cond = select i1 %tobool59, i32 2, i32 1, !dbg !2938
  store i32 %cond, i32* @format, align 4, !dbg !2939, !tbaa !2497
  br label %if.end60, !dbg !2940

if.end60:                                         ; preds = %if.then57, %sw.bb54
  store i8 0, i8* @print_block_size, align 1, !dbg !2941, !tbaa !2461
  store i8 0, i8* @print_with_color, align 1, !dbg !2942, !tbaa !2461
  store i8 0, i8* @print_hyperlink, align 1, !dbg !2943, !tbaa !2461
  br label %sw.epilog182, !dbg !2944

sw.bb61:                                          ; preds = %if.end49
  store i32 2, i32* @indicator_style, align 4, !dbg !2945, !tbaa !2497
  br label %sw.epilog182, !dbg !2946

sw.bb62:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2947, !tbaa !2497
  store i8 0, i8* @print_owner, align 1, !dbg !2948, !tbaa !2461
  br label %sw.epilog182, !dbg !2949

sw.bb63:                                          ; preds = %if.end49
  store i32 176, i32* @human_output_opts, align 4, !dbg !2950, !tbaa !2436
  store i32 176, i32* @file_human_output_opts, align 4, !dbg !2951, !tbaa !2436
  store i64 1, i64* @output_block_size, align 8, !dbg !2952, !tbaa !2579
  store i64 1, i64* @file_output_block_size, align 8, !dbg !2953, !tbaa !2579
  br label %sw.epilog182, !dbg !2954

sw.bb64:                                          ; preds = %if.end49
  store i8 1, i8* @print_inode, align 1, !dbg !2955, !tbaa !2461
  br label %sw.epilog182, !dbg !2956

sw.bb65:                                          ; preds = %if.end49
  store i8 1, i8* %kibibytes_specified, align 1, !dbg !2957, !tbaa !2461
  br label %sw.epilog182, !dbg !2958

sw.bb66:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2959, !tbaa !2497
  br label %sw.epilog182, !dbg !2960

sw.bb67:                                          ; preds = %if.end49
  store i32 4, i32* @format, align 4, !dbg !2961, !tbaa !2497
  br label %sw.epilog182, !dbg !2962

sw.bb68:                                          ; preds = %if.end49
  store i8 1, i8* @numeric_ids, align 1, !dbg !2963, !tbaa !2461
  store i32 0, i32* @format, align 4, !dbg !2964, !tbaa !2497
  br label %sw.epilog182, !dbg !2965

sw.bb69:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2966, !tbaa !2497
  store i8 0, i8* @print_group, align 1, !dbg !2967, !tbaa !2461
  br label %sw.epilog182, !dbg !2968

sw.bb70:                                          ; preds = %if.end49
  store i32 1, i32* @indicator_style, align 4, !dbg !2969, !tbaa !2497
  br label %sw.epilog182, !dbg !2970

sw.bb71:                                          ; preds = %if.end49
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2971, !tbaa !2461
  br label %sw.epilog182, !dbg !2972

sw.bb72:                                          ; preds = %if.end49
  store i8 1, i8* @sort_reverse, align 1, !dbg !2973, !tbaa !2461
  br label %sw.epilog182, !dbg !2974

sw.bb73:                                          ; preds = %if.end49
  store i8 1, i8* @print_block_size, align 1, !dbg !2975, !tbaa !2461
  br label %sw.epilog182, !dbg !2976

sw.bb74:                                          ; preds = %if.end49
  store i32 4, i32* @sort_type, align 4, !dbg !2977, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2978, !tbaa !2461
  br label %sw.epilog182, !dbg !2979

sw.bb75:                                          ; preds = %if.end49
  store i32 2, i32* @time_type, align 4, !dbg !2980, !tbaa !2497
  br label %sw.epilog182, !dbg !2981

sw.bb76:                                          ; preds = %if.end49
  store i32 3, i32* @sort_type, align 4, !dbg !2982, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2983, !tbaa !2461
  br label %sw.epilog182, !dbg !2984

sw.bb77:                                          ; preds = %if.end49
  %21 = load i8*, i8** @optarg, align 8, !dbg !2985, !tbaa !2442
  %call78 = call zeroext i1 @set_line_length(i8* %21), !dbg !2987
  br i1 %call78, label %if.end82, label %if.then79, !dbg !2988

if.then79:                                        ; preds = %sw.bb77
  %call80 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !2989
  %22 = load i8*, i8** @optarg, align 8, !dbg !2989, !tbaa !2442
  %call81 = call i8* @quote(i8* %22), !dbg !2989
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i8* %call80, i8* %call81), !dbg !2989
  unreachable, !dbg !2989

if.end82:                                         ; preds = %sw.bb77
  br label %sw.epilog182, !dbg !2990

sw.bb83:                                          ; preds = %if.end49
  store i32 3, i32* @format, align 4, !dbg !2991, !tbaa !2497
  br label %sw.epilog182, !dbg !2992

sw.bb84:                                          ; preds = %if.end49
  store i32 1, i32* @ignore_mode, align 4, !dbg !2993, !tbaa !2497
  br label %sw.epilog182, !dbg !2994

sw.bb85:                                          ; preds = %if.end49
  call void @add_ignore_pattern(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i64 0, i64 0)), !dbg !2995
  call void @add_ignore_pattern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0)), !dbg !2996
  br label %sw.epilog182, !dbg !2997

sw.bb86:                                          ; preds = %if.end49
  store i32 2, i32* @format, align 4, !dbg !2998, !tbaa !2497
  br label %sw.epilog182, !dbg !2999

sw.bb87:                                          ; preds = %if.end49
  store i8 1, i8* @dired, align 1, !dbg !3000, !tbaa !2461
  br label %sw.epilog182, !dbg !3001

sw.bb88:                                          ; preds = %if.end49
  store i32 3, i32* @indicator_style, align 4, !dbg !3002, !tbaa !2497
  br label %sw.epilog182, !dbg !3003

sw.bb89:                                          ; preds = %if.end49
  store i8 0, i8* @print_group, align 1, !dbg !3004, !tbaa !2461
  br label %sw.epilog182, !dbg !3005

sw.bb90:                                          ; preds = %if.end49
  store i32 3, i32* @dereference, align 4, !dbg !3006, !tbaa !2497
  br label %sw.epilog182, !dbg !3007

sw.bb91:                                          ; preds = %if.end49
  store i32 4, i32* @dereference, align 4, !dbg !3008, !tbaa !2497
  br label %sw.epilog182, !dbg !3009

sw.bb92:                                          ; preds = %if.end49
  %23 = load i8*, i8** @optarg, align 8, !dbg !3010, !tbaa !2442
  call void @add_ignore_pattern(i8* %23), !dbg !3011
  br label %sw.epilog182, !dbg !3012

sw.bb93:                                          ; preds = %if.end49
  store i32 5, i32* @dereference, align 4, !dbg !3013, !tbaa !2497
  br label %sw.epilog182, !dbg !3014

sw.bb94:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 0), !dbg !3015
  br label %sw.epilog182, !dbg !3016

sw.bb95:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 5), !dbg !3017
  br label %sw.epilog182, !dbg !3018

sw.bb96:                                          ; preds = %if.end49
  store i8 1, i8* @recursive, align 1, !dbg !3019, !tbaa !2461
  br label %sw.epilog182, !dbg !3020

sw.bb97:                                          ; preds = %if.end49
  store i32 2, i32* @sort_type, align 4, !dbg !3021, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3022, !tbaa !2461
  br label %sw.epilog182, !dbg !3023

sw.bb98:                                          ; preds = %if.end49
  %24 = load i8*, i8** @optarg, align 8, !dbg !3024, !tbaa !2442
  %call99 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !3025
  %call100 = call i64 @xnumtoumax(i8* %24, i32 0, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %call99, i32 2), !dbg !3026
  store i64 %call100, i64* @tabsize, align 8, !dbg !3027, !tbaa !2579
  br label %sw.epilog182, !dbg !3028

sw.bb101:                                         ; preds = %if.end49
  store i32 -1, i32* @sort_type, align 4, !dbg !3029, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3030, !tbaa !2461
  br label %sw.epilog182, !dbg !3031

sw.bb102:                                         ; preds = %if.end49
  store i32 1, i32* @sort_type, align 4, !dbg !3032, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3033, !tbaa !2461
  br label %sw.epilog182, !dbg !3034

sw.bb103:                                         ; preds = %if.end49
  %25 = load i32, i32* @format, align 4, !dbg !3035, !tbaa !2497
  %cmp104 = icmp ne i32 %25, 0, !dbg !3037
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !3038

if.then106:                                       ; preds = %sw.bb103
  store i32 1, i32* @format, align 4, !dbg !3039, !tbaa !2497
  br label %if.end107, !dbg !3040

if.end107:                                        ; preds = %if.then106, %sw.bb103
  br label %sw.epilog182, !dbg !3041

sw.bb108:                                         ; preds = %if.end49
  store i8 1, i8* @print_author, align 1, !dbg !3042, !tbaa !2461
  br label %sw.epilog182, !dbg !3043

sw.bb109:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %hide, metadata !3044, metadata !DIExpression()), !dbg !3046
  %call110 = call noalias i8* @xmalloc(i64 16), !dbg !3047
  %26 = bitcast i8* %call110 to %struct.ignore_pattern*, !dbg !3047
  store %struct.ignore_pattern* %26, %struct.ignore_pattern** %hide, align 8, !dbg !3046, !tbaa !2442
  %27 = load i8*, i8** @optarg, align 8, !dbg !3048, !tbaa !2442
  %28 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3049, !tbaa !2442
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %28, i32 0, i32 0, !dbg !3050, !ctir !512
  store i8* %27, i8** %pattern, align 8, !dbg !3051, !tbaa !3052, !ctir !146
  %29 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3054, !tbaa !2442
  %30 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3055, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %30, i32 0, i32 1, !dbg !3056, !ctir !512
  store %struct.ignore_pattern* %29, %struct.ignore_pattern** %next, align 8, !dbg !3057, !tbaa !3058, !ctir !511
  %31 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3059, !tbaa !2442
  store %struct.ignore_pattern* %31, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3060, !tbaa !2442
  br label %sw.epilog182, !dbg !3061

sw.bb111:                                         ; preds = %if.end49
  %32 = load i8*, i8** @optarg, align 8, !dbg !3062, !tbaa !2442
  %33 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3062, !tbaa !2442
  %call112 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i8* %32, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @sort_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @sort_types to i8*), i64 4, void ()* %33), !dbg !3062
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @sort_types, i64 0, i64 %call112, !dbg !3062, !ctir !528
  %34 = load i32, i32* %arrayidx, align 4, !dbg !3062, !tbaa !2497
  store i32 %34, i32* @sort_type, align 4, !dbg !3063, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3064, !tbaa !2461
  br label %sw.epilog182, !dbg !3065

sw.bb113:                                         ; preds = %if.end49
  store i8 1, i8* @directories_first, align 1, !dbg !3066, !tbaa !2461
  br label %sw.epilog182, !dbg !3067

sw.bb114:                                         ; preds = %if.end49
  %35 = load i8*, i8** @optarg, align 8, !dbg !3068, !tbaa !2442
  %36 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3068, !tbaa !2442
  %call115 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* %35, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @time_types to i8*), i64 4, void ()* %36), !dbg !3068
  %arrayidx116 = getelementptr inbounds [5 x i32], [5 x i32]* @time_types, i64 0, i64 %call115, !dbg !3068, !ctir !537
  %37 = load i32, i32* %arrayidx116, align 4, !dbg !3068, !tbaa !2497
  store i32 %37, i32* @time_type, align 4, !dbg !3069, !tbaa !2497
  br label %sw.epilog182, !dbg !3070

sw.bb117:                                         ; preds = %if.end49
  %38 = load i8*, i8** @optarg, align 8, !dbg !3071, !tbaa !2442
  %39 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3071, !tbaa !2442
  %call118 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), i8* %38, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @format_args, i64 0, i64 0), i8* bitcast ([7 x i32]* @format_types to i8*), i64 4, void ()* %39), !dbg !3071
  %arrayidx119 = getelementptr inbounds [7 x i32], [7 x i32]* @format_types, i64 0, i64 %call118, !dbg !3071, !ctir !539
  %40 = load i32, i32* %arrayidx119, align 4, !dbg !3071, !tbaa !2497
  store i32 %40, i32* @format, align 4, !dbg !3072, !tbaa !2497
  br label %sw.epilog182, !dbg !3073

sw.bb120:                                         ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !3074, !tbaa !2497
  %call121 = call i8* @bad_cast(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)), !dbg !3075
  store i8* %call121, i8** %time_style_option, align 8, !dbg !3076, !tbaa !2442
  br label %sw.epilog182, !dbg !3077

sw.bb122:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3078, metadata !DIExpression()), !dbg !3080
  %41 = load i8*, i8** @optarg, align 8, !dbg !3081, !tbaa !2442
  %tobool123 = icmp ne i8* %41, null, !dbg !3081
  br i1 %tobool123, label %if.then124, label %if.else127, !dbg !3083

if.then124:                                       ; preds = %sw.bb122
  %42 = load i8*, i8** @optarg, align 8, !dbg !3084, !tbaa !2442
  %43 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3084, !tbaa !2442
  %call125 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %42, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %43), !dbg !3084
  %arrayidx126 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call125, !dbg !3084, !ctir !546
  %44 = load i32, i32* %arrayidx126, align 4, !dbg !3084, !tbaa !2497
  store i32 %44, i32* %i, align 4, !dbg !3085, !tbaa !2436
  br label %if.end128, !dbg !3086

if.else127:                                       ; preds = %sw.bb122
  store i32 1, i32* %i, align 4, !dbg !3087, !tbaa !2436
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then124
  %45 = load i32, i32* %i, align 4, !dbg !3088, !tbaa !2436
  %cmp129 = icmp eq i32 %45, 1, !dbg !3089
  br i1 %cmp129, label %lor.end, label %lor.rhs, !dbg !3090

lor.rhs:                                          ; preds = %if.end128
  %46 = load i32, i32* %i, align 4, !dbg !3091, !tbaa !2436
  %cmp131 = icmp eq i32 %46, 2, !dbg !3092
  br i1 %cmp131, label %land.rhs, label %land.end, !dbg !3093

land.rhs:                                         ; preds = %lor.rhs
  %call133 = call i32 @isatty(i32 1) #13, !dbg !3094
  %tobool134 = icmp ne i32 %call133, 0, !dbg !3093
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %47 = phi i1 [ false, %lor.rhs ], [ %tobool134, %land.rhs ], !dbg !3095
  br label %lor.end, !dbg !3090

lor.end:                                          ; preds = %land.end, %if.end128
  %48 = phi i1 [ true, %if.end128 ], [ %47, %land.end ]
  %frombool = zext i1 %48 to i8, !dbg !3096
  store i8 %frombool, i8* @print_with_color, align 1, !dbg !3096, !tbaa !2461
  %49 = load i8, i8* @print_with_color, align 1, !dbg !3097, !tbaa !2461
  %tobool135 = trunc i8 %49 to i1, !dbg !3097
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !3099

if.then136:                                       ; preds = %lor.end
  store i64 0, i64* @tabsize, align 8, !dbg !3100, !tbaa !2579
  br label %if.end137, !dbg !3102

if.end137:                                        ; preds = %if.then136, %lor.end
  br label %sw.epilog182, !dbg !3103

sw.bb138:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i139, metadata !3104, metadata !DIExpression()), !dbg !3106
  %50 = load i8*, i8** @optarg, align 8, !dbg !3107, !tbaa !2442
  %tobool140 = icmp ne i8* %50, null, !dbg !3107
  br i1 %tobool140, label %if.then141, label %if.else144, !dbg !3109

if.then141:                                       ; preds = %sw.bb138
  %51 = load i8*, i8** @optarg, align 8, !dbg !3110, !tbaa !2442
  %52 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3110, !tbaa !2442
  %call142 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i8* %51, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %52), !dbg !3110
  %arrayidx143 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call142, !dbg !3110, !ctir !546
  %53 = load i32, i32* %arrayidx143, align 4, !dbg !3110, !tbaa !2497
  store i32 %53, i32* %i139, align 4, !dbg !3111, !tbaa !2436
  br label %if.end145, !dbg !3112

if.else144:                                       ; preds = %sw.bb138
  store i32 1, i32* %i139, align 4, !dbg !3113, !tbaa !2436
  br label %if.end145

if.end145:                                        ; preds = %if.else144, %if.then141
  %54 = load i32, i32* %i139, align 4, !dbg !3114, !tbaa !2436
  %cmp146 = icmp eq i32 %54, 1, !dbg !3115
  br i1 %cmp146, label %lor.end155, label %lor.rhs148, !dbg !3116

lor.rhs148:                                       ; preds = %if.end145
  %55 = load i32, i32* %i139, align 4, !dbg !3117, !tbaa !2436
  %cmp149 = icmp eq i32 %55, 2, !dbg !3118
  br i1 %cmp149, label %land.rhs151, label %land.end154, !dbg !3119

land.rhs151:                                      ; preds = %lor.rhs148
  %call152 = call i32 @isatty(i32 1) #13, !dbg !3120
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3119
  br label %land.end154

land.end154:                                      ; preds = %land.rhs151, %lor.rhs148
  %56 = phi i1 [ false, %lor.rhs148 ], [ %tobool153, %land.rhs151 ], !dbg !3121
  br label %lor.end155, !dbg !3116

lor.end155:                                       ; preds = %land.end154, %if.end145
  %57 = phi i1 [ true, %if.end145 ], [ %56, %land.end154 ]
  %frombool156 = zext i1 %57 to i8, !dbg !3122
  store i8 %frombool156, i8* @print_hyperlink, align 1, !dbg !3122, !tbaa !2461
  br label %sw.epilog182, !dbg !3123

sw.bb157:                                         ; preds = %if.end49
  %58 = load i8*, i8** @optarg, align 8, !dbg !3124, !tbaa !2442
  %59 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3124, !tbaa !2442
  %call158 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* %58, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @indicator_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @indicator_style_types to i8*), i64 4, void ()* %59), !dbg !3124
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* @indicator_style_types, i64 0, i64 %call158, !dbg !3124, !ctir !553
  %60 = load i32, i32* %arrayidx159, align 4, !dbg !3124, !tbaa !2497
  store i32 %60, i32* @indicator_style, align 4, !dbg !3125, !tbaa !2497
  br label %sw.epilog182, !dbg !3126

sw.bb160:                                         ; preds = %if.end49
  %61 = load i8*, i8** @optarg, align 8, !dbg !3127, !tbaa !2442
  %62 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3127, !tbaa !2442
  %call161 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i8* %61, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4, void ()* %62), !dbg !3127
  %arrayidx162 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %call161, !dbg !3127, !ctir !558
  %63 = load i32, i32* %arrayidx162, align 4, !dbg !3127, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 %63), !dbg !3128
  br label %sw.epilog182, !dbg !3129

sw.bb163:                                         ; preds = %if.end49
  %64 = load i8*, i8** @optarg, align 8, !dbg !3130, !tbaa !2442
  store i8* %64, i8** %time_style_option, align 8, !dbg !3131, !tbaa !2442
  br label %sw.epilog182, !dbg !3132

sw.bb164:                                         ; preds = %if.end49
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !3133, !tbaa !2461
  br label %sw.epilog182, !dbg !3134

sw.bb165:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3135, metadata !DIExpression()), !dbg !3137
  %65 = load i8*, i8** @optarg, align 8, !dbg !3138, !tbaa !2442
  %call166 = call i32 @human_options(i8* %65, i32* @human_output_opts, i64* @output_block_size), !dbg !3139
  store i32 %call166, i32* %e, align 4, !dbg !3137, !tbaa !2497
  %66 = load i32, i32* %e, align 4, !dbg !3140, !tbaa !2497
  %cmp167 = icmp ne i32 %66, 0, !dbg !3142
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !3143

if.then169:                                       ; preds = %sw.bb165
  %67 = load i32, i32* %e, align 4, !dbg !3144, !tbaa !2497
  %68 = load i32, i32* %oi, align 4, !dbg !3145, !tbaa !2436
  %69 = load i8*, i8** @optarg, align 8, !dbg !3146, !tbaa !2442
  call void @xstrtol_fatal(i32 %67, i32 %68, i8 signext 0, %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i8* %69) #14, !dbg !3147
  unreachable, !dbg !3147

if.end170:                                        ; preds = %sw.bb165
  %70 = load i32, i32* @human_output_opts, align 4, !dbg !3148, !tbaa !2436
  store i32 %70, i32* @file_human_output_opts, align 4, !dbg !3149, !tbaa !2436
  %71 = load i64, i64* @output_block_size, align 8, !dbg !3150, !tbaa !2579
  store i64 %71, i64* @file_output_block_size, align 8, !dbg !3151, !tbaa !2579
  br label %sw.epilog182, !dbg !3152

sw.bb171:                                         ; preds = %if.end49
  store i32 144, i32* @human_output_opts, align 4, !dbg !3153, !tbaa !2436
  store i32 144, i32* @file_human_output_opts, align 4, !dbg !3154, !tbaa !2436
  store i64 1, i64* @output_block_size, align 8, !dbg !3155, !tbaa !2579
  store i64 1, i64* @file_output_block_size, align 8, !dbg !3156, !tbaa !2579
  br label %sw.epilog182, !dbg !3157

sw.bb172:                                         ; preds = %if.end49
  store i8 1, i8* @print_scontext, align 1, !dbg !3158, !tbaa !2461
  br label %sw.epilog182, !dbg !3159

sw.bb173:                                         ; preds = %if.end49
  call void @usage(i32 0) #14, !dbg !3160
  unreachable, !dbg !3160

sw.bb174:                                         ; preds = %if.end49
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3161, !tbaa !2442
  %73 = load i32, i32* @ls_mode, align 4, !dbg !3161, !tbaa !2436
  %cmp175 = icmp eq i32 %73, 1, !dbg !3161
  br i1 %cmp175, label %cond.true, label %cond.false, !dbg !3161

cond.true:                                        ; preds = %sw.bb174
  br label %cond.end, !dbg !3161

cond.false:                                       ; preds = %sw.bb174
  %74 = load i32, i32* @ls_mode, align 4, !dbg !3161, !tbaa !2436
  %cmp177 = icmp eq i32 %74, 2, !dbg !3161
  %75 = zext i1 %cmp177 to i64, !dbg !3161
  %cond179 = select i1 %cmp177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !3161
  br label %cond.end, !dbg !3161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond180 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond179, %cond.false ], !dbg !3161
  %76 = load i8*, i8** @Version, align 8, !dbg !3161, !tbaa !2442
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %72, i8* %cond180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* %76, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* null), !dbg !3161
  call void @exit(i32 0) #15, !dbg !3161
  unreachable, !dbg !3161

sw.default181:                                    ; preds = %if.end49
  call void @usage(i32 2) #14, !dbg !3162
  unreachable, !dbg !3162

sw.epilog182:                                     ; preds = %sw.bb172, %sw.bb171, %if.end170, %sw.bb164, %sw.bb163, %sw.bb160, %sw.bb157, %lor.end155, %if.end137, %sw.bb120, %sw.bb117, %sw.bb114, %sw.bb113, %sw.bb111, %sw.bb109, %sw.bb108, %if.end107, %sw.bb102, %sw.bb101, %sw.bb98, %sw.bb97, %sw.bb96, %sw.bb95, %sw.bb94, %sw.bb93, %sw.bb92, %sw.bb91, %sw.bb90, %sw.bb89, %sw.bb88, %sw.bb87, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %if.end82, %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %if.end60, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50
  br label %while.body, !dbg !2906, !llvm.loop !3163

while.end:                                        ; preds = %if.then48
  %77 = load i64, i64* @output_block_size, align 8, !dbg !3165, !tbaa !2579
  %tobool183 = icmp ne i64 %77, 0, !dbg !3165
  br i1 %tobool183, label %if.end195, label %if.then184, !dbg !3167

if.then184:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %ls_block_size, metadata !3168, metadata !DIExpression()), !dbg !3170
  %call185 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0)) #13, !dbg !3171
  store i8* %call185, i8** %ls_block_size, align 8, !dbg !3170, !tbaa !2442
  %78 = load i8*, i8** %ls_block_size, align 8, !dbg !3172, !tbaa !2442
  %call186 = call i32 @human_options(i8* %78, i32* @human_output_opts, i64* @output_block_size), !dbg !3173
  %79 = load i8*, i8** %ls_block_size, align 8, !dbg !3174, !tbaa !2442
  %tobool187 = icmp ne i8* %79, null, !dbg !3174
  br i1 %tobool187, label %if.then190, label %lor.lhs.false, !dbg !3176

lor.lhs.false:                                    ; preds = %if.then184
  %call188 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0)) #13, !dbg !3177
  %tobool189 = icmp ne i8* %call188, null, !dbg !3177
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !3178

if.then190:                                       ; preds = %lor.lhs.false, %if.then184
  %80 = load i32, i32* @human_output_opts, align 4, !dbg !3179, !tbaa !2436
  store i32 %80, i32* @file_human_output_opts, align 4, !dbg !3181, !tbaa !2436
  %81 = load i64, i64* @output_block_size, align 8, !dbg !3182, !tbaa !2579
  store i64 %81, i64* @file_output_block_size, align 8, !dbg !3183, !tbaa !2579
  br label %if.end191, !dbg !3184

if.end191:                                        ; preds = %if.then190, %lor.lhs.false
  %82 = load i8, i8* %kibibytes_specified, align 1, !dbg !3185, !tbaa !2461
  %tobool192 = trunc i8 %82 to i1, !dbg !3185
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !3187

if.then193:                                       ; preds = %if.end191
  store i32 0, i32* @human_output_opts, align 4, !dbg !3188, !tbaa !2436
  store i64 1024, i64* @output_block_size, align 8, !dbg !3190, !tbaa !2579
  br label %if.end194, !dbg !3191

if.end194:                                        ; preds = %if.then193, %if.end191
  br label %if.end195, !dbg !3192

if.end195:                                        ; preds = %if.end194, %while.end
  %83 = load i64, i64* @line_length, align 8, !dbg !3193, !tbaa !2579
  %div = udiv i64 %83, 3, !dbg !3194
  store i64 %div, i64* @max_idx, align 8, !dbg !3195, !tbaa !2579
  %84 = load i64, i64* @line_length, align 8, !dbg !3196, !tbaa !2579
  %rem = urem i64 %84, 3, !dbg !3197
  %cmp196 = icmp ne i64 %rem, 0, !dbg !3198
  %conv197 = zext i1 %cmp196 to i32, !dbg !3198
  %conv198 = sext i32 %conv197 to i64, !dbg !3196
  %85 = load i64, i64* @max_idx, align 8, !dbg !3199, !tbaa !2579
  %add = add i64 %85, %conv198, !dbg !3199
  store i64 %add, i64* @max_idx, align 8, !dbg !3199, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !3200, metadata !DIExpression()), !dbg !3201
  %call199 = call i32 @get_quoting_style(%struct.quoting_options* null), !dbg !3202
  store i32 %call199, i32* %qs, align 4, !dbg !3201, !tbaa !2497
  %86 = load i32, i32* @format, align 4, !dbg !3203, !tbaa !2497
  %cmp200 = icmp ne i32 %86, 4, !dbg !3204
  br i1 %cmp200, label %land.lhs.true202, label %land.end220, !dbg !3205

land.lhs.true202:                                 ; preds = %if.end195
  %87 = load i32, i32* @format, align 4, !dbg !3206, !tbaa !2497
  %cmp203 = icmp ne i32 %87, 1, !dbg !3207
  br i1 %cmp203, label %land.lhs.true205, label %land.end220, !dbg !3208

land.lhs.true205:                                 ; preds = %land.lhs.true202
  %88 = load i64, i64* @line_length, align 8, !dbg !3209, !tbaa !2579
  %tobool206 = icmp ne i64 %88, 0, !dbg !3209
  br i1 %tobool206, label %land.rhs210, label %lor.lhs.false207, !dbg !3210

lor.lhs.false207:                                 ; preds = %land.lhs.true205
  %89 = load i32, i32* @format, align 4, !dbg !3211, !tbaa !2497
  %cmp208 = icmp eq i32 %89, 0, !dbg !3212
  br i1 %cmp208, label %land.rhs210, label %land.end220, !dbg !3213

land.rhs210:                                      ; preds = %lor.lhs.false207, %land.lhs.true205
  %90 = load i32, i32* %qs, align 4, !dbg !3214, !tbaa !2497
  %cmp211 = icmp eq i32 %90, 1, !dbg !3215
  br i1 %cmp211, label %lor.end219, label %lor.lhs.false213, !dbg !3216

lor.lhs.false213:                                 ; preds = %land.rhs210
  %91 = load i32, i32* %qs, align 4, !dbg !3217, !tbaa !2497
  %cmp214 = icmp eq i32 %91, 3, !dbg !3218
  br i1 %cmp214, label %lor.end219, label %lor.rhs216, !dbg !3219

lor.rhs216:                                       ; preds = %lor.lhs.false213
  %92 = load i32, i32* %qs, align 4, !dbg !3220, !tbaa !2497
  %cmp217 = icmp eq i32 %92, 6, !dbg !3221
  br label %lor.end219, !dbg !3219

lor.end219:                                       ; preds = %lor.rhs216, %lor.lhs.false213, %land.rhs210
  %93 = phi i1 [ true, %lor.lhs.false213 ], [ true, %land.rhs210 ], [ %cmp217, %lor.rhs216 ]
  br label %land.end220

land.end220:                                      ; preds = %lor.end219, %lor.lhs.false207, %land.lhs.true202, %if.end195
  %94 = phi i1 [ false, %lor.lhs.false207 ], [ false, %land.lhs.true202 ], [ false, %if.end195 ], [ %93, %lor.end219 ], !dbg !3222
  %frombool221 = zext i1 %94 to i8, !dbg !3223
  store i8 %frombool221, i8* @align_variable_outer_quotes, align 1, !dbg !3223, !tbaa !2461
  %call222 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3224
  store %struct.quoting_options* %call222, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3225, !tbaa !2442
  %95 = load i32, i32* %qs, align 4, !dbg !3226, !tbaa !2497
  %cmp223 = icmp eq i32 %95, 7, !dbg !3228
  br i1 %cmp223, label %if.then225, label %if.end227, !dbg !3229

if.then225:                                       ; preds = %land.end220
  %96 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3230, !tbaa !2442
  %call226 = call i32 @set_char_quoting(%struct.quoting_options* %96, i8 signext 32, i32 1), !dbg !3231
  br label %if.end227, !dbg !3231

if.end227:                                        ; preds = %if.then225, %land.end220
  %97 = load i32, i32* @indicator_style, align 4, !dbg !3232, !tbaa !2497
  %cmp228 = icmp ule i32 2, %97, !dbg !3234
  br i1 %cmp228, label %if.then230, label %if.end235, !dbg !3235

if.then230:                                       ; preds = %if.end227
  call void @llvm.dbg.declare(metadata i8** %p231, metadata !3236, metadata !DIExpression()), !dbg !3238
  %98 = load i32, i32* @indicator_style, align 4, !dbg !3239, !tbaa !2497
  %sub = sub i32 %98, 2, !dbg !3241
  %idxprom = zext i32 %sub to i64, !dbg !3242
  %arrayidx232 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.86, i64 0, i64 %idxprom, !dbg !3242, !ctir !560
  store i8* %arrayidx232, i8** %p231, align 8, !dbg !3243, !tbaa !2442
  br label %for.cond, !dbg !3244

for.cond:                                         ; preds = %for.inc, %if.then230
  %99 = load i8*, i8** %p231, align 8, !dbg !3245, !tbaa !2442
  %100 = load i8, i8* %99, align 1, !dbg !3247, !tbaa !2497, !ctir !147
  %tobool233 = icmp ne i8 %100, 0, !dbg !3248
  br i1 %tobool233, label %for.body, label %for.end, !dbg !3248

for.body:                                         ; preds = %for.cond
  %101 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3249, !tbaa !2442
  %102 = load i8*, i8** %p231, align 8, !dbg !3250, !tbaa !2442
  %103 = load i8, i8* %102, align 1, !dbg !3251, !tbaa !2497, !ctir !147
  %call234 = call i32 @set_char_quoting(%struct.quoting_options* %101, i8 signext %103, i32 1), !dbg !3252
  br label %for.inc, !dbg !3252

for.inc:                                          ; preds = %for.body
  %104 = load i8*, i8** %p231, align 8, !dbg !3253, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %104, i32 1, !dbg !3253
  store i8* %incdec.ptr, i8** %p231, align 8, !dbg !3253, !tbaa !2442
  br label %for.cond, !dbg !3254, !llvm.loop !3255

for.end:                                          ; preds = %for.cond
  br label %if.end235, !dbg !3257

if.end235:                                        ; preds = %for.end, %if.end227
  %call236 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3258
  store %struct.quoting_options* %call236, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3259, !tbaa !2442
  %105 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3260, !tbaa !2442
  %call237 = call i32 @set_char_quoting(%struct.quoting_options* %105, i8 signext 58, i32 1), !dbg !3261
  %106 = load i8, i8* @dired, align 1, !dbg !3262, !tbaa !2461
  %tobool238 = trunc i8 %106 to i1, !dbg !3262
  br i1 %tobool238, label %land.lhs.true240, label %if.end247, !dbg !3264

land.lhs.true240:                                 ; preds = %if.end235
  %107 = load i32, i32* @format, align 4, !dbg !3265, !tbaa !2497
  %cmp241 = icmp ne i32 %107, 0, !dbg !3266
  br i1 %cmp241, label %if.then246, label %lor.lhs.false243, !dbg !3267

lor.lhs.false243:                                 ; preds = %land.lhs.true240
  %108 = load i8, i8* @print_hyperlink, align 1, !dbg !3268, !tbaa !2461
  %tobool244 = trunc i8 %108 to i1, !dbg !3268
  br i1 %tobool244, label %if.then246, label %if.end247, !dbg !3269

if.then246:                                       ; preds = %lor.lhs.false243, %land.lhs.true240
  store i8 0, i8* @dired, align 1, !dbg !3270, !tbaa !2461
  br label %if.end247, !dbg !3271

if.end247:                                        ; preds = %if.then246, %lor.lhs.false243, %if.end235
  %109 = load i32, i32* @time_type, align 4, !dbg !3272, !tbaa !2497
  %cmp248 = icmp eq i32 %109, 1, !dbg !3274
  br i1 %cmp248, label %land.lhs.true253, label %lor.lhs.false250, !dbg !3275

lor.lhs.false250:                                 ; preds = %if.end247
  %110 = load i32, i32* @time_type, align 4, !dbg !3276, !tbaa !2497
  %cmp251 = icmp eq i32 %110, 2, !dbg !3277
  br i1 %cmp251, label %land.lhs.true253, label %if.end259, !dbg !3278

land.lhs.true253:                                 ; preds = %lor.lhs.false250, %if.end247
  %111 = load i8, i8* %sort_type_specified, align 1, !dbg !3279, !tbaa !2461
  %tobool254 = trunc i8 %111 to i1, !dbg !3279
  br i1 %tobool254, label %if.end259, label %land.lhs.true255, !dbg !3280

land.lhs.true255:                                 ; preds = %land.lhs.true253
  %112 = load i32, i32* @format, align 4, !dbg !3281, !tbaa !2497
  %cmp256 = icmp ne i32 %112, 0, !dbg !3282
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !3283

if.then258:                                       ; preds = %land.lhs.true255
  store i32 4, i32* @sort_type, align 4, !dbg !3284, !tbaa !2497
  br label %if.end259, !dbg !3286

if.end259:                                        ; preds = %if.then258, %land.lhs.true255, %land.lhs.true253, %lor.lhs.false250
  %113 = load i32, i32* @format, align 4, !dbg !3287, !tbaa !2497
  %cmp260 = icmp eq i32 %113, 0, !dbg !3289
  br i1 %cmp260, label %if.then262, label %if.end335, !dbg !3290

if.then262:                                       ; preds = %if.end259
  call void @llvm.dbg.declare(metadata i8** %style, metadata !3291, metadata !DIExpression()), !dbg !3293
  %114 = load i8*, i8** %time_style_option, align 8, !dbg !3294, !tbaa !2442
  store i8* %114, i8** %style, align 8, !dbg !3293, !tbaa !2442
  %115 = load i8*, i8** %style, align 8, !dbg !3295, !tbaa !2442
  %tobool263 = icmp ne i8* %115, null, !dbg !3295
  br i1 %tobool263, label %if.end270, label %if.then264, !dbg !3297

if.then264:                                       ; preds = %if.then262
  %call265 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !3298
  store i8* %call265, i8** %style, align 8, !dbg !3300, !tbaa !2442
  %tobool266 = icmp ne i8* %call265, null, !dbg !3300
  br i1 %tobool266, label %if.end269, label %if.then267, !dbg !3301

if.then267:                                       ; preds = %if.then264
  %call268 = call i8* @bad_cast(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)), !dbg !3302
  store i8* %call268, i8** %style, align 8, !dbg !3303, !tbaa !2442
  br label %if.end269, !dbg !3304

if.end269:                                        ; preds = %if.then267, %if.then264
  br label %if.end270, !dbg !3305

if.end270:                                        ; preds = %if.end269, %if.then262
  br label %while.cond, !dbg !3306

while.cond:                                       ; preds = %if.end277, %if.end270
  %116 = load i8*, i8** %style, align 8, !dbg !3307, !tbaa !2442
  %call271 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @decode_switches.posix_prefix, i64 0, i64 0), i64 6) #16, !dbg !3307
  %cmp272 = icmp eq i32 %call271, 0, !dbg !3307
  br i1 %cmp272, label %while.body274, label %while.end278, !dbg !3306

while.body274:                                    ; preds = %while.cond
  %call275 = call zeroext i1 @hard_locale(i32 2), !dbg !3308
  br i1 %call275, label %if.end277, label %if.then276, !dbg !3311

if.then276:                                       ; preds = %while.body274
  %117 = load i32, i32* @optind, align 4, !dbg !3312, !tbaa !2436
  store i32 %117, i32* %retval, align 4, !dbg !3313
  br label %return, !dbg !3313

if.end277:                                        ; preds = %while.body274
  %118 = load i8*, i8** %style, align 8, !dbg !3314, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %118, i64 6, !dbg !3314
  store i8* %add.ptr, i8** %style, align 8, !dbg !3314, !tbaa !2442
  br label %while.cond, !dbg !3306, !llvm.loop !3315

while.end278:                                     ; preds = %while.cond
  %119 = load i8*, i8** %style, align 8, !dbg !3317, !tbaa !2442
  %120 = load i8, i8* %119, align 1, !dbg !3319, !tbaa !2497, !ctir !144
  %conv279 = sext i8 %120 to i32, !dbg !3319
  %cmp280 = icmp eq i32 %conv279, 43, !dbg !3320
  br i1 %cmp280, label %if.then282, label %if.else297, !dbg !3321

if.then282:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3322, metadata !DIExpression()), !dbg !3324
  %121 = load i8*, i8** %style, align 8, !dbg !3325, !tbaa !2442
  %add.ptr283 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !3326
  store i8* %add.ptr283, i8** %p0, align 8, !dbg !3324, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !3327, metadata !DIExpression()), !dbg !3328
  %122 = load i8*, i8** %p0, align 8, !dbg !3329, !tbaa !2442
  %call284 = call i8* @strchr(i8* %122, i32 10) #16, !dbg !3330
  store i8* %call284, i8** %p1, align 8, !dbg !3328, !tbaa !2442
  %123 = load i8*, i8** %p1, align 8, !dbg !3331, !tbaa !2442
  %tobool285 = icmp ne i8* %123, null, !dbg !3331
  br i1 %tobool285, label %if.else287, label %if.then286, !dbg !3333

if.then286:                                       ; preds = %if.then282
  %124 = load i8*, i8** %p0, align 8, !dbg !3334, !tbaa !2442
  store i8* %124, i8** %p1, align 8, !dbg !3335, !tbaa !2442
  br label %if.end296, !dbg !3336

if.else287:                                       ; preds = %if.then282
  %125 = load i8*, i8** %p1, align 8, !dbg !3337, !tbaa !2442
  %add.ptr288 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !3340
  %call289 = call i8* @strchr(i8* %add.ptr288, i32 10) #16, !dbg !3341
  %tobool290 = icmp ne i8* %call289, null, !dbg !3341
  br i1 %tobool290, label %if.then291, label %if.end294, !dbg !3342

if.then291:                                       ; preds = %if.else287
  %call292 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !3343
  %126 = load i8*, i8** %p0, align 8, !dbg !3343, !tbaa !2442
  %call293 = call i8* @quote(i8* %126), !dbg !3343
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call292, i8* %call293), !dbg !3343
  unreachable, !dbg !3343

if.end294:                                        ; preds = %if.else287
  %127 = load i8*, i8** %p1, align 8, !dbg !3344, !tbaa !2442
  %incdec.ptr295 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !3344
  store i8* %incdec.ptr295, i8** %p1, align 8, !dbg !3344, !tbaa !2442
  store i8 0, i8* %127, align 1, !dbg !3345, !tbaa !2497, !ctir !144
  br label %if.end296

if.end296:                                        ; preds = %if.end294, %if.then286
  %128 = load i8*, i8** %p0, align 8, !dbg !3346, !tbaa !2442
  store i8* %128, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3347, !tbaa !2442
  %129 = load i8*, i8** %p1, align 8, !dbg !3348, !tbaa !2442
  store i8* %129, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3349, !tbaa !2442
  br label %if.end334, !dbg !3350

if.else297:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i64* %res, metadata !3351, metadata !DIExpression()), !dbg !3353
  %130 = load i8*, i8** %style, align 8, !dbg !3354, !tbaa !2442
  %call298 = call i64 @argmatch(i8* %130, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @time_style_types to i8*), i64 4) #16, !dbg !3355
  store i64 %call298, i64* %res, align 8, !dbg !3353, !tbaa !2579
  %131 = load i64, i64* %res, align 8, !dbg !3356, !tbaa !2579
  %cmp299 = icmp slt i64 %131, 0, !dbg !3358
  br i1 %cmp299, label %if.then301, label %if.end313, !dbg !3359

if.then301:                                       ; preds = %if.else297
  %132 = load i8*, i8** %style, align 8, !dbg !3360, !tbaa !2442
  %133 = load i64, i64* %res, align 8, !dbg !3362, !tbaa !2579
  call void @argmatch_invalid(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i8* %132, i64 %133), !dbg !3363
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0)) #13, !dbg !3364
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3364, !tbaa !2442
  %call303 = call i32 @fputs_unlocked(i8* %call302, %struct._IO_FILE* %134), !dbg !3364
  call void @llvm.dbg.declare(metadata i8*** %p304, metadata !3365, metadata !DIExpression()), !dbg !3366
  store i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8*** %p304, align 8, !dbg !3366, !tbaa !2442
  br label %while.cond305, !dbg !3367

while.cond305:                                    ; preds = %while.body307, %if.then301
  %135 = load i8**, i8*** %p304, align 8, !dbg !3368, !tbaa !2442
  %136 = load i8*, i8** %135, align 8, !dbg !3369, !tbaa !2442, !ctir !325
  %tobool306 = icmp ne i8* %136, null, !dbg !3367
  br i1 %tobool306, label %while.body307, label %while.end310, !dbg !3367

while.body307:                                    ; preds = %while.cond305
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3370, !tbaa !2442
  %138 = load i8**, i8*** %p304, align 8, !dbg !3371, !tbaa !2442
  %incdec.ptr308 = getelementptr inbounds i8*, i8** %138, i32 1, !dbg !3371
  store i8** %incdec.ptr308, i8*** %p304, align 8, !dbg !3371, !tbaa !2442
  %139 = load i8*, i8** %138, align 8, !dbg !3372, !tbaa !2442, !ctir !325
  %call309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8* %139), !dbg !3373
  br label %while.cond305, !dbg !3367, !llvm.loop !3374

while.end310:                                     ; preds = %while.cond305
  %call311 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !3376
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3376, !tbaa !2442
  %call312 = call i32 @fputs_unlocked(i8* %call311, %struct._IO_FILE* %140), !dbg !3376
  call void @usage(i32 2) #14, !dbg !3377
  unreachable, !dbg !3377

if.end313:                                        ; preds = %if.else297
  %141 = load i64, i64* %res, align 8, !dbg !3378, !tbaa !2579
  switch i64 %141, label %sw.epilog333 [
    i64 0, label %sw.bb314
    i64 1, label %sw.bb315
    i64 2, label %sw.bb316
    i64 3, label %sw.bb317
  ], !dbg !3379

sw.bb314:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3380, !tbaa !2442
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3382, !tbaa !2442
  br label %sw.epilog333, !dbg !3383

sw.bb315:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3384, !tbaa !2442
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3385, !tbaa !2442
  br label %sw.epilog333, !dbg !3386

sw.bb316:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3387, !tbaa !2442
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3388, !tbaa !2442
  br label %sw.epilog333, !dbg !3389

sw.bb317:                                         ; preds = %if.end313
  %call318 = call zeroext i1 @hard_locale(i32 2), !dbg !3390
  br i1 %call318, label %if.then319, label %if.end332, !dbg !3392

if.then319:                                       ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %i320, metadata !3393, metadata !DIExpression()), !dbg !3396
  store i32 0, i32* %i320, align 4, !dbg !3396, !tbaa !2436
  br label %for.cond321, !dbg !3397

for.cond321:                                      ; preds = %for.inc330, %if.then319
  %142 = load i32, i32* %i320, align 4, !dbg !3398, !tbaa !2436
  %cmp322 = icmp slt i32 %142, 2, !dbg !3400
  br i1 %cmp322, label %for.body324, label %for.end331, !dbg !3401

for.body324:                                      ; preds = %for.cond321
  %143 = load i32, i32* %i320, align 4, !dbg !3402, !tbaa !2436
  %idxprom325 = sext i32 %143 to i64, !dbg !3403
  %arrayidx326 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom325, !dbg !3403, !ctir !561
  %144 = load i8*, i8** %arrayidx326, align 8, !dbg !3403, !tbaa !2442
  %call327 = call i8* @dcgettext(i8* null, i8* %144, i32 2) #13, !dbg !3404
  %145 = load i32, i32* %i320, align 4, !dbg !3405, !tbaa !2436
  %idxprom328 = sext i32 %145 to i64, !dbg !3406
  %arrayidx329 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom328, !dbg !3406, !ctir !561
  store i8* %call327, i8** %arrayidx329, align 8, !dbg !3407, !tbaa !2442
  br label %for.inc330, !dbg !3406

for.inc330:                                       ; preds = %for.body324
  %146 = load i32, i32* %i320, align 4, !dbg !3408, !tbaa !2436
  %inc = add nsw i32 %146, 1, !dbg !3408
  store i32 %inc, i32* %i320, align 4, !dbg !3408, !tbaa !2436
  br label %for.cond321, !dbg !3409, !llvm.loop !3410

for.end331:                                       ; preds = %for.cond321
  br label %if.end332, !dbg !3412

if.end332:                                        ; preds = %for.end331, %sw.bb317
  br label %sw.epilog333, !dbg !3413

sw.epilog333:                                     ; preds = %if.end332, %if.end313, %sw.bb316, %sw.bb315, %sw.bb314
  br label %if.end334

if.end334:                                        ; preds = %sw.epilog333, %if.end296
  call void @abformat_init(), !dbg !3414
  br label %if.end335, !dbg !3415

if.end335:                                        ; preds = %if.end334, %if.end259
  %147 = load i32, i32* @optind, align 4, !dbg !3416, !tbaa !2436
  store i32 %147, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

return:                                           ; preds = %if.end335, %if.then276
  %148 = load i32, i32* %retval, align 4, !dbg !3418
  ret i32 %148, !dbg !3418
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_ls_color() #0 !dbg !3419 !ctir !341 {
entry:
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca i8*, align 8, !ctir !143
  %ind_no = alloca i32, align 4, !ctir !27
  %label = alloca [3 x i8], align 1, !ctir !592
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !593
  %colorterm = alloca i8*, align 8, !ctir !146
  %state = alloca i32, align 4, !ctir !129
  %e = alloca %struct.color_ext_type*, align 8, !ctir !593
  %e2 = alloca %struct.color_ext_type*, align 8, !ctir !593
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3420, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3422, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.declare(metadata i32* %ind_no, metadata !3424, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.declare(metadata [3 x i8]* %label, metadata !3426, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !3428, metadata !DIExpression()), !dbg !3429
  %call = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0)) #13, !dbg !3430
  store i8* %call, i8** %p, align 8, !dbg !3432, !tbaa !2442
  %cmp = icmp eq i8* %call, null, !dbg !3433
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3434

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %p, align 8, !dbg !3435, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !3436, !tbaa !2497, !ctir !147
  %conv = sext i8 %1 to i32, !dbg !3436
  %cmp1 = icmp eq i32 %conv, 0, !dbg !3437
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !3438

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8** %colorterm, metadata !3439, metadata !DIExpression()), !dbg !3441
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i64 0, i64 0)) #13, !dbg !3442
  store i8* %call3, i8** %colorterm, align 8, !dbg !3441, !tbaa !2442
  %2 = load i8*, i8** %colorterm, align 8, !dbg !3443, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !3443
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true6, !dbg !3445

land.lhs.true:                                    ; preds = %if.then
  %3 = load i8*, i8** %colorterm, align 8, !dbg !3446, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !3447, !tbaa !2497, !ctir !147
  %conv4 = sext i8 %4 to i32, !dbg !3447
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !3447
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !3448

land.lhs.true6:                                   ; preds = %land.lhs.true, %if.then
  %call7 = call zeroext i1 @known_term_type(), !dbg !3449
  br i1 %call7, label %if.end, label %if.then8, !dbg !3450

if.then8:                                         ; preds = %land.lhs.true6
  store i8 0, i8* @print_with_color, align 1, !dbg !3451, !tbaa !2461
  br label %if.end, !dbg !3452

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %land.lhs.true
  br label %if.end97, !dbg !3453

if.end9:                                          ; preds = %lor.lhs.false
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !3454, !tbaa !2442
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3455
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #13, !dbg !3456
  %5 = load i8*, i8** %p, align 8, !dbg !3457, !tbaa !2442
  %call11 = call noalias i8* @xstrdup(i8* %5), !dbg !3458
  store i8* %call11, i8** @color_buf, align 8, !dbg !3459, !tbaa !2442
  store i8* %call11, i8** %buf, align 8, !dbg !3460, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %state, metadata !3461, metadata !DIExpression()), !dbg !3462
  store i32 1, i32* %state, align 4, !dbg !3462, !tbaa !2497
  br label %while.body, !dbg !3463

while.body:                                       ; preds = %if.end9, %sw.epilog79
  %6 = load i32, i32* %state, align 4, !dbg !3464, !tbaa !2497
  switch i32 %6, label %sw.default78 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb29
    i32 4, label %sw.bb63
    i32 6, label %sw.bb77
  ], !dbg !3466

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !3467, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !3469, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %8 to i32, !dbg !3469
  switch i32 %conv12, label %sw.default [
    i32 58, label %sw.bb13
    i32 42, label %sw.bb14
    i32 0, label %sw.bb21
  ], !dbg !3470

sw.bb13:                                          ; preds = %sw.bb
  %9 = load i8*, i8** %p, align 8, !dbg !3471, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !3471
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3471, !tbaa !2442
  br label %sw.epilog, !dbg !3473

sw.bb14:                                          ; preds = %sw.bb
  %call15 = call noalias i8* @xmalloc(i64 40), !dbg !3474
  %10 = bitcast i8* %call15 to %struct.color_ext_type*, !dbg !3474
  store %struct.color_ext_type* %10, %struct.color_ext_type** %ext, align 8, !dbg !3475, !tbaa !2442
  %11 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3476, !tbaa !2442
  %12 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3477, !tbaa !2442
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %12, i32 0, i32 2, !dbg !3478, !ctir !594
  store %struct.color_ext_type* %11, %struct.color_ext_type** %next, align 8, !dbg !3479, !tbaa !3480, !ctir !593
  %13 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3482, !tbaa !2442
  store %struct.color_ext_type* %13, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3483, !tbaa !2442
  %14 = load i8*, i8** %p, align 8, !dbg !3484, !tbaa !2442
  %incdec.ptr16 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !3484
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !3484, !tbaa !2442
  %15 = load i8*, i8** %buf, align 8, !dbg !3485, !tbaa !2442
  %16 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3486, !tbaa !2442
  %ext17 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %16, i32 0, i32 0, !dbg !3487, !ctir !594
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext17, i32 0, i32 1, !dbg !3488, !ctir !262
  store i8* %15, i8** %string, align 8, !dbg !3489, !tbaa !3490, !ctir !146
  %17 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3491, !tbaa !2442
  %ext18 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %17, i32 0, i32 0, !dbg !3492, !ctir !594
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext18, i32 0, i32 0, !dbg !3493, !ctir !262
  %call19 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext true, i64* %len), !dbg !3494
  %18 = zext i1 %call19 to i64, !dbg !3494
  %cond = select i1 %call19, i32 4, i32 6, !dbg !3494
  store i32 %cond, i32* %state, align 4, !dbg !3495, !tbaa !2497
  br label %sw.epilog, !dbg !3496

sw.bb21:                                          ; preds = %sw.bb
  store i32 5, i32* %state, align 4, !dbg !3497, !tbaa !2497
  br label %done, !dbg !3498

sw.default:                                       ; preds = %sw.bb
  %19 = load i8*, i8** %p, align 8, !dbg !3499, !tbaa !2442
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !3499
  store i8* %incdec.ptr22, i8** %p, align 8, !dbg !3499, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !3500, !tbaa !2497, !ctir !147
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3501, !ctir !592
  store i8 %20, i8* %arrayidx, align 1, !dbg !3502, !tbaa !2497
  store i32 2, i32* %state, align 4, !dbg !3503, !tbaa !2497
  br label %sw.epilog, !dbg !3504

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb13
  br label %sw.epilog79, !dbg !3505

sw.bb23:                                          ; preds = %while.body
  %21 = load i8*, i8** %p, align 8, !dbg !3506, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !3508, !tbaa !2497, !ctir !147
  %tobool24 = icmp ne i8 %22, 0, !dbg !3508
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !3509

if.then25:                                        ; preds = %sw.bb23
  %23 = load i8*, i8** %p, align 8, !dbg !3510, !tbaa !2442
  %incdec.ptr26 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !3510
  store i8* %incdec.ptr26, i8** %p, align 8, !dbg !3510, !tbaa !2442
  %24 = load i8, i8* %23, align 1, !dbg !3512, !tbaa !2497, !ctir !147
  %arrayidx27 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 1, !dbg !3513, !ctir !592
  store i8 %24, i8* %arrayidx27, align 1, !dbg !3514, !tbaa !2497
  store i32 3, i32* %state, align 4, !dbg !3515, !tbaa !2497
  br label %if.end28, !dbg !3516

if.else:                                          ; preds = %sw.bb23
  store i32 6, i32* %state, align 4, !dbg !3517, !tbaa !2497
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %sw.epilog79, !dbg !3518

sw.bb29:                                          ; preds = %while.body
  store i32 6, i32* %state, align 4, !dbg !3519, !tbaa !2497
  %25 = load i8*, i8** %p, align 8, !dbg !3520, !tbaa !2442
  %incdec.ptr30 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !3520
  store i8* %incdec.ptr30, i8** %p, align 8, !dbg !3520, !tbaa !2442
  %26 = load i8, i8* %25, align 1, !dbg !3522, !tbaa !2497, !ctir !147
  %conv31 = sext i8 %26 to i32, !dbg !3522
  %cmp32 = icmp eq i32 %conv31, 61, !dbg !3523
  br i1 %cmp32, label %if.then34, label %if.end62, !dbg !3524

if.then34:                                        ; preds = %sw.bb29
  store i32 0, i32* %ind_no, align 4, !dbg !3525, !tbaa !2436
  br label %for.cond, !dbg !3528

for.cond:                                         ; preds = %for.inc, %if.then34
  %27 = load i32, i32* %ind_no, align 4, !dbg !3529, !tbaa !2436
  %idxprom = sext i32 %27 to i64, !dbg !3531
  %arrayidx35 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom, !dbg !3531, !ctir !599
  %28 = load i8*, i8** %arrayidx35, align 8, !dbg !3531, !tbaa !2442
  %cmp36 = icmp ne i8* %28, null, !dbg !3532
  br i1 %cmp36, label %for.body, label %for.end, !dbg !3533

for.body:                                         ; preds = %for.cond
  %arraydecay38 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3534
  %29 = load i32, i32* %ind_no, align 4, !dbg !3534, !tbaa !2436
  %idxprom39 = sext i32 %29 to i64, !dbg !3534
  %arrayidx40 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom39, !dbg !3534, !ctir !599
  %30 = load i8*, i8** %arrayidx40, align 8, !dbg !3534, !tbaa !2442
  %call41 = call i32 @strcmp(i8* %arraydecay38, i8* %30) #16, !dbg !3534
  %cmp42 = icmp eq i32 %call41, 0, !dbg !3534
  br i1 %cmp42, label %if.then44, label %if.end54, !dbg !3537

if.then44:                                        ; preds = %for.body
  %31 = load i8*, i8** %buf, align 8, !dbg !3538, !tbaa !2442
  %32 = load i32, i32* %ind_no, align 4, !dbg !3540, !tbaa !2436
  %idxprom45 = sext i32 %32 to i64, !dbg !3541
  %arrayidx46 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom45, !dbg !3541, !ctir !261
  %string47 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx46, i32 0, i32 1, !dbg !3542, !ctir !262
  store i8* %31, i8** %string47, align 8, !dbg !3543, !tbaa !2711, !ctir !146
  %33 = load i32, i32* %ind_no, align 4, !dbg !3544, !tbaa !2436
  %idxprom48 = sext i32 %33 to i64, !dbg !3545
  %arrayidx49 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom48, !dbg !3545, !ctir !261
  %len50 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx49, i32 0, i32 0, !dbg !3546, !ctir !262
  %call51 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len50), !dbg !3547
  %34 = zext i1 %call51 to i64, !dbg !3547
  %cond53 = select i1 %call51, i32 1, i32 6, !dbg !3547
  store i32 %cond53, i32* %state, align 4, !dbg !3548, !tbaa !2497
  br label %for.end, !dbg !3549

if.end54:                                         ; preds = %for.body
  br label %for.inc, !dbg !3550

for.inc:                                          ; preds = %if.end54
  %35 = load i32, i32* %ind_no, align 4, !dbg !3551, !tbaa !2436
  %inc = add nsw i32 %35, 1, !dbg !3551
  store i32 %inc, i32* %ind_no, align 4, !dbg !3551, !tbaa !2436
  br label %for.cond, !dbg !3552, !llvm.loop !3553

for.end:                                          ; preds = %if.then44, %for.cond
  %36 = load i32, i32* %state, align 4, !dbg !3555, !tbaa !2497
  %cmp55 = icmp eq i32 %36, 6, !dbg !3557
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !3558

if.then57:                                        ; preds = %for.end
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.175, i64 0, i64 0)) #13, !dbg !3559
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3560
  %call60 = call i8* @quote(i8* %arraydecay59), !dbg !3561
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call58, i8* %call60), !dbg !3562
  br label %if.end61, !dbg !3562

if.end61:                                         ; preds = %if.then57, %for.end
  br label %if.end62, !dbg !3563

if.end62:                                         ; preds = %if.end61, %sw.bb29
  br label %sw.epilog79, !dbg !3564

sw.bb63:                                          ; preds = %while.body
  %37 = load i8*, i8** %p, align 8, !dbg !3565, !tbaa !2442
  %incdec.ptr64 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !3565
  store i8* %incdec.ptr64, i8** %p, align 8, !dbg !3565, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !3567, !tbaa !2497, !ctir !147
  %conv65 = sext i8 %38 to i32, !dbg !3567
  %cmp66 = icmp eq i32 %conv65, 61, !dbg !3568
  br i1 %cmp66, label %if.then68, label %if.else75, !dbg !3569

if.then68:                                        ; preds = %sw.bb63
  %39 = load i8*, i8** %buf, align 8, !dbg !3570, !tbaa !2442
  %40 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3572, !tbaa !2442
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %40, i32 0, i32 1, !dbg !3573, !ctir !594
  %string69 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq, i32 0, i32 1, !dbg !3574, !ctir !262
  store i8* %39, i8** %string69, align 8, !dbg !3575, !tbaa !3576, !ctir !146
  %41 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3577, !tbaa !2442
  %seq70 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %41, i32 0, i32 1, !dbg !3578, !ctir !594
  %len71 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq70, i32 0, i32 0, !dbg !3579, !ctir !262
  %call72 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len71), !dbg !3580
  %42 = zext i1 %call72 to i64, !dbg !3580
  %cond74 = select i1 %call72, i32 1, i32 6, !dbg !3580
  store i32 %cond74, i32* %state, align 4, !dbg !3581, !tbaa !2497
  br label %if.end76, !dbg !3582

if.else75:                                        ; preds = %sw.bb63
  store i32 6, i32* %state, align 4, !dbg !3583, !tbaa !2497
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then68
  br label %sw.epilog79, !dbg !3584

sw.bb77:                                          ; preds = %while.body
  br label %done, !dbg !3585

sw.default78:                                     ; preds = %while.body
  call void @abort() #15, !dbg !3586
  unreachable, !dbg !3586

sw.epilog79:                                      ; preds = %if.end76, %if.end62, %if.end28, %sw.epilog
  br label %while.body, !dbg !3463, !llvm.loop !3587

done:                                             ; preds = %sw.bb77, %sw.bb21
  call void @llvm.dbg.label(metadata !3589), !dbg !3590
  %43 = load i32, i32* %state, align 4, !dbg !3591, !tbaa !2497
  %cmp80 = icmp eq i32 %43, 6, !dbg !3593
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !3594

if.then82:                                        ; preds = %done
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e, metadata !3595, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e2, metadata !3598, metadata !DIExpression()), !dbg !3599
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.176, i64 0, i64 0)) #13, !dbg !3600
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83), !dbg !3601
  %44 = load i8*, i8** @color_buf, align 8, !dbg !3602, !tbaa !2442
  call void @free(i8* %44) #13, !dbg !3603
  %45 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3604, !tbaa !2442
  store %struct.color_ext_type* %45, %struct.color_ext_type** %e, align 8, !dbg !3606, !tbaa !2442
  br label %for.cond84, !dbg !3607

for.cond84:                                       ; preds = %for.body87, %if.then82
  %46 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3608, !tbaa !2442
  %cmp85 = icmp ne %struct.color_ext_type* %46, null, !dbg !3610
  br i1 %cmp85, label %for.body87, label %for.end89, !dbg !3611

for.body87:                                       ; preds = %for.cond84
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3612, !tbaa !2442
  store %struct.color_ext_type* %47, %struct.color_ext_type** %e2, align 8, !dbg !3614, !tbaa !2442
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3615, !tbaa !2442
  %next88 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %48, i32 0, i32 2, !dbg !3616, !ctir !594
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %next88, align 8, !dbg !3616, !tbaa !3480, !ctir !593
  store %struct.color_ext_type* %49, %struct.color_ext_type** %e, align 8, !dbg !3617, !tbaa !2442
  %50 = load %struct.color_ext_type*, %struct.color_ext_type** %e2, align 8, !dbg !3618, !tbaa !2442
  %51 = bitcast %struct.color_ext_type* %50 to i8*, !dbg !3618
  call void @free(i8* %51) #13, !dbg !3619
  br label %for.cond84, !dbg !3620, !llvm.loop !3621

for.end89:                                        ; preds = %for.cond84
  store i8 0, i8* @print_with_color, align 1, !dbg !3623, !tbaa !2461
  br label %if.end90, !dbg !3624

if.end90:                                         ; preds = %for.end89, %done
  %52 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 0), align 16, !dbg !3625, !tbaa !2706, !ctir !149
  %cmp91 = icmp eq i64 %52, 6, !dbg !3627
  br i1 %cmp91, label %land.lhs.true93, label %if.end97, !dbg !3628

land.lhs.true93:                                  ; preds = %if.end90
  %53 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 1), align 8, !dbg !3629, !tbaa !2711, !ctir !146
  %call94 = call i32 @strncmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i64 0, i64 0), i64 6) #16, !dbg !3629
  %tobool95 = icmp ne i32 %call94, 0, !dbg !3629
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !3630

if.then96:                                        ; preds = %land.lhs.true93
  store i8 1, i8* @color_symlink_as_referent, align 1, !dbg !3631, !tbaa !2461
  br label %if.end97, !dbg !3632

if.end97:                                         ; preds = %if.end, %if.then96, %land.lhs.true93, %if.end90
  ret void, !dbg !3633
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_colored(i32 %type) #0 !dbg !3634 !ctir !331 {
entry:
  %type.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %s = alloca i8*, align 8, !ctir !146
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3637, metadata !DIExpression()), !dbg !3638
  %0 = load i32, i32* %type.addr, align 4, !dbg !3639, !tbaa !2497
  %idxprom = zext i32 %0 to i64, !dbg !3640
  %arrayidx = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom, !dbg !3640, !ctir !261
  %len1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !3641, !ctir !262
  %1 = load i64, i64* %len1, align 16, !dbg !3641, !tbaa !2706, !ctir !149
  store i64 %1, i64* %len, align 8, !dbg !3638, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3642, metadata !DIExpression()), !dbg !3643
  %2 = load i32, i32* %type.addr, align 4, !dbg !3644, !tbaa !2497
  %idxprom2 = zext i32 %2 to i64, !dbg !3645
  %arrayidx3 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom2, !dbg !3645, !ctir !261
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx3, i32 0, i32 1, !dbg !3646, !ctir !262
  %3 = load i8*, i8** %string, align 8, !dbg !3646, !tbaa !2711, !ctir !146
  store i8* %3, i8** %s, align 8, !dbg !3643, !tbaa !2442
  %4 = load i64, i64* %len, align 8, !dbg !3647, !tbaa !2579
  %cmp = icmp eq i64 %4, 0, !dbg !3648
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !3649

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !3650, !tbaa !2579
  %cmp4 = icmp eq i64 %5, 1, !dbg !3651
  br i1 %cmp4, label %land.lhs.true, label %lor.rhs, !dbg !3652

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s, align 8, !dbg !3653, !tbaa !2442
  %call = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1) #16, !dbg !3653
  %cmp5 = icmp eq i32 %call, 0, !dbg !3654
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3655

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i64, i64* %len, align 8, !dbg !3656, !tbaa !2579
  %cmp6 = icmp eq i64 %7, 2, !dbg !3657
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3658

land.rhs:                                         ; preds = %lor.rhs
  %8 = load i8*, i8** %s, align 8, !dbg !3659, !tbaa !2442
  %call7 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2) #16, !dbg !3659
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3660
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs ], !dbg !3661
  br label %lor.end, !dbg !3655

lor.end:                                          ; preds = %land.end, %land.lhs.true, %entry
  %10 = phi i1 [ true, %land.lhs.true ], [ true, %entry ], [ %9, %land.end ]
  %lnot = xor i1 %10, true, !dbg !3662
  ret i1 %lnot, !dbg !3663
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_ino_hash(i8* %x, i64 %table_size) #0 !dbg !3664 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.dev_ino*, align 8, !ctir !335
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %p, metadata !3669, metadata !DIExpression()), !dbg !3670
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3671, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3671
  store %struct.dev_ino* %1, %struct.dev_ino** %p, align 8, !dbg !3670, !tbaa !2442
  %2 = load %struct.dev_ino*, %struct.dev_ino** %p, align 8, !dbg !3672, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !3673, !ctir !336
  %3 = load i64, i64* %st_ino, align 8, !dbg !3673, !tbaa !3674, !ctir !258
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !3676, !tbaa !2579
  %rem = urem i64 %3, %4, !dbg !3677
  ret i64 %rem, !dbg !3678
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_ino_compare(i8* %x, i8* %y) #0 !dbg !3679 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.dev_ino*, align 8, !ctir !335
  %b = alloca %struct.dev_ino*, align 8, !ctir !335
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %a, metadata !3684, metadata !DIExpression()), !dbg !3685
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3686, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3686
  store %struct.dev_ino* %1, %struct.dev_ino** %a, align 8, !dbg !3685, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %b, metadata !3687, metadata !DIExpression()), !dbg !3688
  %2 = load i8*, i8** %y.addr, align 8, !dbg !3689, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.dev_ino*, !dbg !3689
  store %struct.dev_ino* %3, %struct.dev_ino** %b, align 8, !dbg !3688, !tbaa !2442
  %4 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3690, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 0, !dbg !3690, !ctir !336
  %5 = load i64, i64* %st_ino, align 8, !dbg !3690, !tbaa !3674, !ctir !258
  %6 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3690, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %6, i32 0, i32 0, !dbg !3690, !ctir !336
  %7 = load i64, i64* %st_ino1, align 8, !dbg !3690, !tbaa !3674, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !3690
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3690

land.rhs:                                         ; preds = %entry
  %8 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3690, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %8, i32 0, i32 1, !dbg !3690, !ctir !336
  %9 = load i64, i64* %st_dev, align 8, !dbg !3690, !tbaa !3691, !ctir !260
  %10 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3690, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %10, i32 0, i32 1, !dbg !3690, !ctir !336
  %11 = load i64, i64* %st_dev2, align 8, !dbg !3690, !tbaa !3691, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !3690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !3692
  %13 = zext i1 %12 to i64, !dbg !3690
  %cond = select i1 %12, i32 1, i32 0, !dbg !3690
  %tobool = icmp ne i32 %cond, 0, !dbg !3690
  ret i1 %tobool, !dbg !3693
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_free(i8* %x) #0 !dbg !3694 !ctir !339 {
entry:
  %x.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3697, !tbaa !2442
  call void @free(i8* %0) #13, !dbg !3698
  ret void, !dbg !3699
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_escape_init() #0 !dbg !3700 !ctir !341 {
entry:
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3701, metadata !DIExpression()), !dbg !3703
  store i32 0, i32* %i, align 4, !dbg !3703, !tbaa !2436
  br label %for.cond, !dbg !3704

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3705, !tbaa !2436
  %cmp = icmp slt i32 %0, 256, !dbg !3707
  br i1 %cmp, label %for.body, label %for.end, !dbg !3708

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3709, !tbaa !2436
  %call = call zeroext i1 @c_isalnum(i32 %1), !dbg !3710
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !3711

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3712, !tbaa !2436
  %cmp1 = icmp eq i32 %2, 126, !dbg !3713
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !3714

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %i, align 4, !dbg !3715, !tbaa !2436
  %cmp3 = icmp eq i32 %3, 45, !dbg !3716
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !3717

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* %i, align 4, !dbg !3718, !tbaa !2436
  %cmp5 = icmp eq i32 %4, 46, !dbg !3719
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3720

lor.rhs:                                          ; preds = %lor.lhs.false4
  %5 = load i32, i32* %i, align 4, !dbg !3721, !tbaa !2436
  %cmp6 = icmp eq i32 %5, 95, !dbg !3722
  br label %lor.end, !dbg !3720

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %for.body
  %6 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !3720
  %7 = load i32, i32* %i, align 4, !dbg !3723, !tbaa !2436
  %idxprom = sext i32 %7 to i64, !dbg !3724
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !3724, !ctir !343
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3725, !tbaa !2497
  %conv = sext i8 %8 to i32, !dbg !3725
  %or = or i32 %conv, %lor.ext, !dbg !3725
  %conv7 = trunc i32 %or to i8, !dbg !3725
  store i8 %conv7, i8* %arrayidx, align 1, !dbg !3725, !tbaa !2497
  br label %for.inc, !dbg !3724

for.inc:                                          ; preds = %lor.end
  %9 = load i32, i32* %i, align 4, !dbg !3726, !tbaa !2436
  %inc = add nsw i32 %9, 1, !dbg !3726
  store i32 %inc, i32* %i, align 4, !dbg !3726, !tbaa !2436
  br label %for.cond, !dbg !3727, !llvm.loop !3728

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3730
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_files() #0 !dbg !3731 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3732, metadata !DIExpression()), !dbg !3734
  store i64 0, i64* %i, align 8, !dbg !3734, !tbaa !2579
  br label %for.cond, !dbg !3735

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3736, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !3738, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !3739
  br i1 %cmp, label %for.body, label %for.end, !dbg !3740

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3741, metadata !DIExpression()), !dbg !3743
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !3744, !tbaa !2442
  %3 = load i64, i64* %i, align 8, !dbg !3745, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !3744, !ctir !663
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !3744, !tbaa !2442
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !3744
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !3743, !tbaa !2442
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3746, !tbaa !2442
  call void @free_ent(%struct.fileinfo* %6), !dbg !3747
  br label %for.inc, !dbg !3748

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !3749, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !3749
  store i64 %inc, i64* %i, align 8, !dbg !3749, !tbaa !2579
  br label %for.cond, !dbg !3750, !llvm.loop !3751

for.end:                                          ; preds = %for.cond
  store i64 0, i64* @cwd_n_used, align 8, !dbg !3753, !tbaa !2579
  store i8 0, i8* @cwd_some_quoted, align 1, !dbg !3754, !tbaa !2461
  store i8 0, i8* @any_has_acl, align 1, !dbg !3755, !tbaa !2461
  store i32 0, i32* @inode_number_width, align 4, !dbg !3756, !tbaa !2436
  store i32 0, i32* @block_size_width, align 4, !dbg !3757, !tbaa !2436
  store i32 0, i32* @nlink_width, align 4, !dbg !3758, !tbaa !2436
  store i32 0, i32* @owner_width, align 4, !dbg !3759, !tbaa !2436
  store i32 0, i32* @group_width, align 4, !dbg !3760, !tbaa !2436
  store i32 0, i32* @author_width, align 4, !dbg !3761, !tbaa !2436
  store i32 0, i32* @scontext_width, align 4, !dbg !3762, !tbaa !2436
  store i32 0, i32* @major_device_number_width, align 4, !dbg !3763, !tbaa !2436
  store i32 0, i32* @minor_device_number_width, align 4, !dbg !3764, !tbaa !2436
  store i32 0, i32* @file_size_width, align 4, !dbg !3765, !tbaa !2436
  ret void, !dbg !3766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @gobble_file(i8* %name, i32 %type, i64 %inode, i1 zeroext %command_line_arg, i8* %dirname) #0 !dbg !3767 !ctir !667 {
entry:
  %retval = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %inode.addr = alloca i64, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirname.addr = alloca i8*, align 8
  %blocks = alloca i64, align 8, !ctir !168
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  %full_name = alloca i8*, align 8, !ctir !143
  %do_deref = alloca i8, align 1, !ctir !141
  %err = alloca i32, align 4, !ctir !27
  %need_lstat = alloca i8, align 1, !ctir !141
  %have_scontext = alloca i8, align 1, !ctir !141
  %have_acl = alloca i8, align 1, !ctir !141
  %attr_len = alloca i32, align 4, !ctir !27
  %n = alloca i32, align 4, !ctir !27
  %linkstats = alloca %struct.stat, align 8, !ctir !191
  %linkname = alloca i8*, align 8, !ctir !143
  %buf = alloca [652 x i8], align 16, !ctir !622
  %len = alloca i32, align 4, !ctir !27
  %len345 = alloca i32, align 4, !ctir !27
  %len355 = alloca i32, align 4, !ctir !27
  %len365 = alloca i32, align 4, !ctir !27
  %len377 = alloca i32, align 4, !ctir !27
  %b = alloca [21 x i8], align 16, !ctir !669
  %b_len = alloca i32, align 4, !ctir !27
  %buf410 = alloca [21 x i8], align 16, !ctir !669
  %len411 = alloca i32, align 4, !ctir !27
  %buf442 = alloca [652 x i8], align 16, !ctir !622
  %size = alloca i64, align 8, !ctir !168
  %len445 = alloca i32, align 4, !ctir !27
  %buf458 = alloca [21 x i8], align 16, !ctir !669
  %len459 = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  store i64 %inode, i64* %inode.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %inode.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3774, metadata !DIExpression()), !dbg !3775
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i64 0, i64* %blocks, align 8, !dbg !3779, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3780, metadata !DIExpression()), !dbg !3781
  %0 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3782, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !3782
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3782

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %inode.addr, align 8, !dbg !3782, !tbaa !2579
  %cmp = icmp eq i64 %1, 0, !dbg !3782
  br i1 %cmp, label %if.then, label %if.else, !dbg !3785

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end, !dbg !3785

if.else:                                          ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3119, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.gobble_file, i64 0, i64 0)) #15, !dbg !3782
  unreachable, !dbg !3782

if.end:                                           ; preds = %if.then
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !3786, !tbaa !2579
  %3 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3788, !tbaa !2579
  %cmp1 = icmp eq i64 %2, %3, !dbg !3789
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3790

if.then2:                                         ; preds = %if.end
  %4 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3791, !tbaa !2442
  %5 = bitcast %struct.fileinfo* %4 to i8*, !dbg !3791
  %6 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3793, !tbaa !2579
  %call = call i8* @xnrealloc(i8* %5, i64 %6, i64 400), !dbg !3794
  %7 = bitcast i8* %call to %struct.fileinfo*, !dbg !3794
  store %struct.fileinfo* %7, %struct.fileinfo** @cwd_file, align 8, !dbg !3795, !tbaa !2442
  %8 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3796, !tbaa !2579
  %mul = mul i64 %8, 2, !dbg !3796
  store i64 %mul, i64* @cwd_n_alloc, align 8, !dbg !3796, !tbaa !2579
  br label %if.end3, !dbg !3797

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3798, !tbaa !2442
  %10 = load i64, i64* @cwd_n_used, align 8, !dbg !3799, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i64 %10, !dbg !3798, !ctir !252
  store %struct.fileinfo* %arrayidx, %struct.fileinfo** %f, align 8, !dbg !3800, !tbaa !2442
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3801, !tbaa !2442
  %12 = bitcast %struct.fileinfo* %11 to i8*, !dbg !3802
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 200, i1 false), !dbg !3802
  %13 = load i64, i64* %inode.addr, align 8, !dbg !3803, !tbaa !2579
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3804, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 3, !dbg !3805, !ctir !185
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !3806, !ctir !191
  store i64 %13, i64* %st_ino, align 8, !dbg !3807, !tbaa !3808, !ctir !197
  %15 = load i32, i32* %type.addr, align 4, !dbg !3811, !tbaa !2497
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3812, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 4, !dbg !3813, !ctir !185
  store i32 %15, i32* %filetype, align 8, !dbg !3814, !tbaa !3815, !ctir !36
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3816, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 11, !dbg !3817, !ctir !185
  store i32 -1, i32* %quoted, align 4, !dbg !3818, !tbaa !3819, !ctir !27
  %18 = load i8, i8* @cwd_some_quoted, align 1, !dbg !3820, !tbaa !2461
  %tobool4 = trunc i8 %18 to i1, !dbg !3820
  br i1 %tobool4, label %if.end13, label %land.lhs.true, !dbg !3822

land.lhs.true:                                    ; preds = %if.end3
  %19 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !3823, !tbaa !2461
  %tobool5 = trunc i8 %19 to i1, !dbg !3823
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !3824

if.then6:                                         ; preds = %land.lhs.true
  %20 = load i8*, i8** %name.addr, align 8, !dbg !3825, !tbaa !2442
  %call7 = call zeroext i1 @needs_quoting(i8* %20), !dbg !3827
  %conv = zext i1 %call7 to i32, !dbg !3827
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3828, !tbaa !2442
  %quoted8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 11, !dbg !3829, !ctir !185
  store i32 %conv, i32* %quoted8, align 4, !dbg !3830, !tbaa !3819, !ctir !27
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3831, !tbaa !2442
  %quoted9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 11, !dbg !3833, !ctir !185
  %23 = load i32, i32* %quoted9, align 4, !dbg !3833, !tbaa !3819, !ctir !27
  %tobool10 = icmp ne i32 %23, 0, !dbg !3831
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !3834

if.then11:                                        ; preds = %if.then6
  store i8 1, i8* @cwd_some_quoted, align 1, !dbg !3835, !tbaa !2461
  br label %if.end12, !dbg !3836

if.end12:                                         ; preds = %if.then11, %if.then6
  br label %if.end13, !dbg !3837

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %if.end3
  %24 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3838, !tbaa !2461
  %tobool14 = trunc i8 %24 to i1, !dbg !3838
  br i1 %tobool14, label %if.then94, label %lor.lhs.false16, !dbg !3840

lor.lhs.false16:                                  ; preds = %if.end13
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !3841, !tbaa !2461
  %tobool17 = trunc i8 %25 to i1, !dbg !3841
  br i1 %tobool17, label %if.then94, label %lor.lhs.false19, !dbg !3842

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %26 = load i8, i8* @format_needs_stat, align 1, !dbg !3843, !tbaa !2461
  %tobool20 = trunc i8 %26 to i1, !dbg !3843
  br i1 %tobool20, label %if.then94, label %lor.lhs.false22, !dbg !3844

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %27 = load i32, i32* %type.addr, align 4, !dbg !3845, !tbaa !2497
  %cmp23 = icmp eq i32 %27, 3, !dbg !3846
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false37, !dbg !3847

land.lhs.true25:                                  ; preds = %lor.lhs.false22
  %28 = load i8, i8* @print_with_color, align 1, !dbg !3848, !tbaa !2461
  %tobool26 = trunc i8 %28 to i1, !dbg !3848
  br i1 %tobool26, label %land.lhs.true28, label %lor.lhs.false37, !dbg !3849

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %call29 = call zeroext i1 @is_colored(i32 19), !dbg !3850
  br i1 %call29, label %if.then94, label %lor.lhs.false31, !dbg !3851

lor.lhs.false31:                                  ; preds = %land.lhs.true28
  %call32 = call zeroext i1 @is_colored(i32 18), !dbg !3852
  br i1 %call32, label %if.then94, label %lor.lhs.false34, !dbg !3853

lor.lhs.false34:                                  ; preds = %lor.lhs.false31
  %call35 = call zeroext i1 @is_colored(i32 20), !dbg !3854
  br i1 %call35, label %if.then94, label %lor.lhs.false37, !dbg !3855

lor.lhs.false37:                                  ; preds = %lor.lhs.false34, %land.lhs.true25, %lor.lhs.false22
  %29 = load i8, i8* @print_inode, align 1, !dbg !3856, !tbaa !2461
  %tobool38 = trunc i8 %29 to i1, !dbg !3856
  br i1 %tobool38, label %land.lhs.true43, label %lor.lhs.false40, !dbg !3857

lor.lhs.false40:                                  ; preds = %lor.lhs.false37
  %30 = load i8, i8* @format_needs_type, align 1, !dbg !3858, !tbaa !2461
  %tobool41 = trunc i8 %30 to i1, !dbg !3858
  br i1 %tobool41, label %land.lhs.true43, label %lor.lhs.false58, !dbg !3859

land.lhs.true43:                                  ; preds = %lor.lhs.false40, %lor.lhs.false37
  %31 = load i32, i32* %type.addr, align 4, !dbg !3860, !tbaa !2497
  %cmp44 = icmp eq i32 %31, 6, !dbg !3861
  br i1 %cmp44, label %land.lhs.true49, label %lor.lhs.false46, !dbg !3862

lor.lhs.false46:                                  ; preds = %land.lhs.true43
  %32 = load i32, i32* %type.addr, align 4, !dbg !3863, !tbaa !2497
  %cmp47 = icmp eq i32 %32, 0, !dbg !3864
  br i1 %cmp47, label %land.lhs.true49, label %lor.lhs.false58, !dbg !3865

land.lhs.true49:                                  ; preds = %lor.lhs.false46, %land.lhs.true43
  %33 = load i32, i32* @dereference, align 4, !dbg !3866, !tbaa !2497
  %cmp50 = icmp eq i32 %33, 5, !dbg !3867
  br i1 %cmp50, label %if.then94, label %lor.lhs.false52, !dbg !3868

lor.lhs.false52:                                  ; preds = %land.lhs.true49
  %34 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !3869, !tbaa !2461
  %tobool53 = trunc i8 %34 to i1, !dbg !3869
  br i1 %tobool53, label %if.then94, label %lor.lhs.false55, !dbg !3870

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %35 = load i8, i8* @check_symlink_mode, align 1, !dbg !3871, !tbaa !2461
  %tobool56 = trunc i8 %35 to i1, !dbg !3871
  br i1 %tobool56, label %if.then94, label %lor.lhs.false58, !dbg !3872

lor.lhs.false58:                                  ; preds = %lor.lhs.false55, %lor.lhs.false46, %lor.lhs.false40
  %36 = load i8, i8* @print_inode, align 1, !dbg !3873, !tbaa !2461
  %tobool59 = trunc i8 %36 to i1, !dbg !3873
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false64, !dbg !3874

land.lhs.true61:                                  ; preds = %lor.lhs.false58
  %37 = load i64, i64* %inode.addr, align 8, !dbg !3875, !tbaa !2579
  %cmp62 = icmp eq i64 %37, 0, !dbg !3876
  br i1 %cmp62, label %if.then94, label %lor.lhs.false64, !dbg !3877

lor.lhs.false64:                                  ; preds = %land.lhs.true61, %lor.lhs.false58
  %38 = load i8, i8* @format_needs_type, align 1, !dbg !3878, !tbaa !2461
  %tobool65 = trunc i8 %38 to i1, !dbg !3878
  br i1 %tobool65, label %land.lhs.true67, label %if.end455, !dbg !3879

land.lhs.true67:                                  ; preds = %lor.lhs.false64
  %39 = load i32, i32* %type.addr, align 4, !dbg !3880, !tbaa !2497
  %cmp68 = icmp eq i32 %39, 0, !dbg !3881
  br i1 %cmp68, label %if.then94, label %lor.lhs.false70, !dbg !3882

lor.lhs.false70:                                  ; preds = %land.lhs.true67
  %40 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3883, !tbaa !2461
  %tobool71 = trunc i8 %40 to i1, !dbg !3883
  br i1 %tobool71, label %if.then94, label %lor.lhs.false73, !dbg !3884

lor.lhs.false73:                                  ; preds = %lor.lhs.false70
  %41 = load i32, i32* %type.addr, align 4, !dbg !3885, !tbaa !2497
  %cmp74 = icmp eq i32 %41, 5, !dbg !3886
  br i1 %cmp74, label %land.lhs.true76, label %if.end455, !dbg !3887

land.lhs.true76:                                  ; preds = %lor.lhs.false73
  %42 = load i32, i32* @indicator_style, align 4, !dbg !3888, !tbaa !2497
  %cmp77 = icmp eq i32 %42, 3, !dbg !3889
  br i1 %cmp77, label %if.then94, label %lor.lhs.false79, !dbg !3890

lor.lhs.false79:                                  ; preds = %land.lhs.true76
  %43 = load i8, i8* @print_with_color, align 1, !dbg !3891, !tbaa !2461
  %tobool80 = trunc i8 %43 to i1, !dbg !3891
  br i1 %tobool80, label %land.lhs.true82, label %if.end455, !dbg !3892

land.lhs.true82:                                  ; preds = %lor.lhs.false79
  %call83 = call zeroext i1 @is_colored(i32 14), !dbg !3893
  br i1 %call83, label %if.then94, label %lor.lhs.false85, !dbg !3894

lor.lhs.false85:                                  ; preds = %land.lhs.true82
  %call86 = call zeroext i1 @is_colored(i32 16), !dbg !3895
  br i1 %call86, label %if.then94, label %lor.lhs.false88, !dbg !3896

lor.lhs.false88:                                  ; preds = %lor.lhs.false85
  %call89 = call zeroext i1 @is_colored(i32 17), !dbg !3897
  br i1 %call89, label %if.then94, label %lor.lhs.false91, !dbg !3898

lor.lhs.false91:                                  ; preds = %lor.lhs.false88
  %call92 = call zeroext i1 @is_colored(i32 21), !dbg !3899
  br i1 %call92, label %if.then94, label %if.end455, !dbg !3900

if.then94:                                        ; preds = %lor.lhs.false91, %lor.lhs.false88, %lor.lhs.false85, %land.lhs.true82, %land.lhs.true76, %lor.lhs.false70, %land.lhs.true67, %land.lhs.true61, %lor.lhs.false55, %lor.lhs.false52, %land.lhs.true49, %lor.lhs.false34, %lor.lhs.false31, %land.lhs.true28, %lor.lhs.false19, %lor.lhs.false16, %if.end13
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3901, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata i8* %do_deref, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3906, metadata !DIExpression()), !dbg !3907
  %44 = load i8*, i8** %name.addr, align 8, !dbg !3908, !tbaa !2442
  %arrayidx95 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !3908, !ctir !146
  %45 = load i8, i8* %arrayidx95, align 1, !dbg !3908, !tbaa !2497
  %conv96 = sext i8 %45 to i32, !dbg !3908
  %cmp97 = icmp eq i32 %conv96, 47, !dbg !3910
  br i1 %cmp97, label %if.then104, label %lor.lhs.false99, !dbg !3911

lor.lhs.false99:                                  ; preds = %if.then94
  %46 = load i8*, i8** %dirname.addr, align 8, !dbg !3912, !tbaa !2442
  %arrayidx100 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !3912, !ctir !146
  %47 = load i8, i8* %arrayidx100, align 1, !dbg !3912, !tbaa !2497
  %conv101 = sext i8 %47 to i32, !dbg !3912
  %cmp102 = icmp eq i32 %conv101, 0, !dbg !3913
  br i1 %cmp102, label %if.then104, label %if.else105, !dbg !3914

if.then104:                                       ; preds = %lor.lhs.false99, %if.then94
  %48 = load i8*, i8** %name.addr, align 8, !dbg !3915, !tbaa !2442
  store i8* %48, i8** %full_name, align 8, !dbg !3916, !tbaa !2442
  br label %if.end109, !dbg !3917

if.else105:                                       ; preds = %lor.lhs.false99
  %49 = load i8*, i8** %name.addr, align 8, !dbg !3918, !tbaa !2442
  %call106 = call i64 @strlen(i8* %49) #16, !dbg !3920
  %50 = load i8*, i8** %dirname.addr, align 8, !dbg !3921, !tbaa !2442
  %call107 = call i64 @strlen(i8* %50) #16, !dbg !3922
  %add = add i64 %call106, %call107, !dbg !3923
  %add108 = add i64 %add, 2, !dbg !3924
  %51 = alloca i8, i64 %add108, align 16, !dbg !3925
  store i8* %51, i8** %full_name, align 8, !dbg !3926, !tbaa !2442
  %52 = load i8*, i8** %full_name, align 8, !dbg !3927, !tbaa !2442
  %53 = load i8*, i8** %dirname.addr, align 8, !dbg !3928, !tbaa !2442
  %54 = load i8*, i8** %name.addr, align 8, !dbg !3929, !tbaa !2442
  call void @attach(i8* %52, i8* %53, i8* %54), !dbg !3930
  br label %if.end109

if.end109:                                        ; preds = %if.else105, %if.then104
  %55 = load i8, i8* @print_hyperlink, align 1, !dbg !3931, !tbaa !2461
  %tobool110 = trunc i8 %55 to i1, !dbg !3931
  br i1 %tobool110, label %if.then111, label %if.end119, !dbg !3933

if.then111:                                       ; preds = %if.end109
  %56 = load i8*, i8** %full_name, align 8, !dbg !3934, !tbaa !2442
  %call112 = call i8* @canonicalize_filename_mode(i8* %56, i32 2), !dbg !3936
  %57 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3937, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %57, i32 0, i32 2, !dbg !3938, !ctir !185
  store i8* %call112, i8** %absolute_name, align 8, !dbg !3939, !tbaa !3940, !ctir !143
  %58 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3941, !tbaa !2442
  %absolute_name113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %58, i32 0, i32 2, !dbg !3943, !ctir !185
  %59 = load i8*, i8** %absolute_name113, align 8, !dbg !3943, !tbaa !3940, !ctir !143
  %tobool114 = icmp ne i8* %59, null, !dbg !3941
  br i1 %tobool114, label %if.end118, label %if.then115, !dbg !3944

if.then115:                                       ; preds = %if.then111
  %60 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3945, !tbaa !2461
  %tobool116 = trunc i8 %60 to i1, !dbg !3945
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !3946
  %61 = load i8*, i8** %full_name, align 8, !dbg !3947, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool116, i8* %call117, i8* %61), !dbg !3948
  br label %if.end118, !dbg !3948

if.end118:                                        ; preds = %if.then115, %if.then111
  br label %if.end119, !dbg !3949

if.end119:                                        ; preds = %if.end118, %if.end109
  %62 = load i32, i32* @dereference, align 4, !dbg !3950, !tbaa !2497
  switch i32 %62, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb122
    i32 4, label %sw.bb122
  ], !dbg !3951

sw.bb:                                            ; preds = %if.end119
  %63 = load i8*, i8** %full_name, align 8, !dbg !3952, !tbaa !2442
  %64 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3954, !tbaa !2442
  %stat120 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %64, i32 0, i32 3, !dbg !3955, !ctir !185
  %call121 = call i32 @stat(i8* %63, %struct.stat* %stat120) #13, !dbg !3956
  store i32 %call121, i32* %err, align 4, !dbg !3957, !tbaa !2436
  store i8 1, i8* %do_deref, align 1, !dbg !3958, !tbaa !2461
  br label %sw.epilog, !dbg !3959

sw.bb122:                                         ; preds = %if.end119, %if.end119
  %65 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3960, !tbaa !2461
  %tobool123 = trunc i8 %65 to i1, !dbg !3960
  br i1 %tobool123, label %if.then124, label %if.end144, !dbg !3962

if.then124:                                       ; preds = %sw.bb122
  call void @llvm.dbg.declare(metadata i8* %need_lstat, metadata !3963, metadata !DIExpression()), !dbg !3965
  %66 = load i8*, i8** %full_name, align 8, !dbg !3966, !tbaa !2442
  %67 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3967, !tbaa !2442
  %stat125 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %67, i32 0, i32 3, !dbg !3968, !ctir !185
  %call126 = call i32 @stat(i8* %66, %struct.stat* %stat125) #13, !dbg !3969
  store i32 %call126, i32* %err, align 4, !dbg !3970, !tbaa !2436
  store i8 1, i8* %do_deref, align 1, !dbg !3971, !tbaa !2461
  %68 = load i32, i32* @dereference, align 4, !dbg !3972, !tbaa !2497
  %cmp127 = icmp eq i32 %68, 3, !dbg !3974
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !3975

if.then129:                                       ; preds = %if.then124
  br label %sw.epilog, !dbg !3976

if.end130:                                        ; preds = %if.then124
  %69 = load i32, i32* %err, align 4, !dbg !3977, !tbaa !2436
  %cmp131 = icmp slt i32 %69, 0, !dbg !3978
  br i1 %cmp131, label %cond.true, label %cond.false, !dbg !3977

cond.true:                                        ; preds = %if.end130
  %call133 = call i32* @__errno_location() #17, !dbg !3979
  %70 = load i32, i32* %call133, align 4, !dbg !3979, !tbaa !2436, !ctir !27
  %cmp134 = icmp eq i32 %70, 2, !dbg !3980
  %conv135 = zext i1 %cmp134 to i32, !dbg !3980
  br label %cond.end, !dbg !3977

cond.false:                                       ; preds = %if.end130
  %71 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3981, !tbaa !2442
  %stat136 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %71, i32 0, i32 3, !dbg !3981, !ctir !185
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat136, i32 0, i32 3, !dbg !3981, !ctir !191
  %72 = load i32, i32* %st_mode, align 8, !dbg !3981, !tbaa !3982, !ctir !201
  %and = and i32 %72, 61440, !dbg !3981
  %cmp137 = icmp eq i32 %and, 16384, !dbg !3981
  %lnot = xor i1 %cmp137, true, !dbg !3983
  %lnot.ext = zext i1 %lnot to i32, !dbg !3983
  br label %cond.end, !dbg !3977

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv135, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !3977
  %tobool139 = icmp ne i32 %cond, 0, !dbg !3984
  %frombool140 = zext i1 %tobool139 to i8, !dbg !3985
  store i8 %frombool140, i8* %need_lstat, align 1, !dbg !3985, !tbaa !2461
  %73 = load i8, i8* %need_lstat, align 1, !dbg !3986, !tbaa !2461
  %tobool141 = trunc i8 %73 to i1, !dbg !3986
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !3988

if.then142:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !3989

if.end143:                                        ; preds = %cond.end
  br label %if.end144, !dbg !3990

if.end144:                                        ; preds = %if.end143, %sw.bb122
  br label %sw.default, !dbg !3991

sw.default:                                       ; preds = %if.end119, %if.end144
  %74 = load i8*, i8** %full_name, align 8, !dbg !3992, !tbaa !2442
  %75 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3993, !tbaa !2442
  %stat145 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %75, i32 0, i32 3, !dbg !3994, !ctir !185
  %call146 = call i32 @lstat(i8* %74, %struct.stat* %stat145) #13, !dbg !3995
  store i32 %call146, i32* %err, align 4, !dbg !3996, !tbaa !2436
  store i8 0, i8* %do_deref, align 1, !dbg !3997, !tbaa !2461
  br label %sw.epilog, !dbg !3998

sw.epilog:                                        ; preds = %sw.default, %if.then142, %if.then129, %sw.bb
  %76 = load i32, i32* %err, align 4, !dbg !3999, !tbaa !2436
  %cmp147 = icmp ne i32 %76, 0, !dbg !4001
  br i1 %cmp147, label %if.then149, label %if.end157, !dbg !4002

if.then149:                                       ; preds = %sw.epilog
  %77 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4003, !tbaa !2461
  %tobool150 = trunc i8 %77 to i1, !dbg !4003
  %call151 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #13, !dbg !4005
  %78 = load i8*, i8** %full_name, align 8, !dbg !4006, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool150, i8* %call151, i8* %78), !dbg !4007
  %79 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4008, !tbaa !2461
  %tobool152 = trunc i8 %79 to i1, !dbg !4008
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !4010

if.then153:                                       ; preds = %if.then149
  store i64 0, i64* %retval, align 8, !dbg !4011
  br label %return, !dbg !4011

if.end154:                                        ; preds = %if.then149
  %80 = load i8*, i8** %name.addr, align 8, !dbg !4012, !tbaa !2442
  %call155 = call noalias i8* @xstrdup(i8* %80), !dbg !4013
  %81 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4014, !tbaa !2442
  %name156 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %81, i32 0, i32 0, !dbg !4015, !ctir !185
  store i8* %call155, i8** %name156, align 8, !dbg !4016, !tbaa !4017, !ctir !143
  %82 = load i64, i64* @cwd_n_used, align 8, !dbg !4018, !tbaa !2579
  %inc = add i64 %82, 1, !dbg !4018
  store i64 %inc, i64* @cwd_n_used, align 8, !dbg !4018, !tbaa !2579
  store i64 0, i64* %retval, align 8, !dbg !4019
  br label %return, !dbg !4019

if.end157:                                        ; preds = %sw.epilog
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4020, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 7, !dbg !4021, !ctir !185
  store i8 1, i8* %stat_ok, align 8, !dbg !4022, !tbaa !4023, !ctir !141
  %84 = load i32, i32* %type.addr, align 4, !dbg !4024, !tbaa !2497
  %cmp158 = icmp eq i32 %84, 5, !dbg !4026
  br i1 %cmp158, label %land.lhs.true166, label %lor.lhs.false160, !dbg !4027

lor.lhs.false160:                                 ; preds = %if.end157
  %85 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4028, !tbaa !2442
  %stat161 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %85, i32 0, i32 3, !dbg !4028, !ctir !185
  %st_mode162 = getelementptr inbounds %struct.stat, %struct.stat* %stat161, i32 0, i32 3, !dbg !4028, !ctir !191
  %86 = load i32, i32* %st_mode162, align 8, !dbg !4028, !tbaa !3982, !ctir !201
  %and163 = and i32 %86, 61440, !dbg !4028
  %cmp164 = icmp eq i32 %and163, 32768, !dbg !4028
  br i1 %cmp164, label %land.lhs.true166, label %if.end175, !dbg !4029

land.lhs.true166:                                 ; preds = %lor.lhs.false160, %if.end157
  %87 = load i8, i8* @print_with_color, align 1, !dbg !4030, !tbaa !2461
  %tobool167 = trunc i8 %87 to i1, !dbg !4030
  br i1 %tobool167, label %land.lhs.true169, label %if.end175, !dbg !4031

land.lhs.true169:                                 ; preds = %land.lhs.true166
  %call170 = call zeroext i1 @is_colored(i32 21), !dbg !4032
  br i1 %call170, label %if.then172, label %if.end175, !dbg !4033

if.then172:                                       ; preds = %land.lhs.true169
  %88 = load i8*, i8** %full_name, align 8, !dbg !4034, !tbaa !2442
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4035, !tbaa !2442
  %call173 = call zeroext i1 @has_capability_cache(i8* %88, %struct.fileinfo* %89), !dbg !4036
  %90 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4037, !tbaa !2442
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %90, i32 0, i32 10, !dbg !4038, !ctir !185
  %frombool174 = zext i1 %call173 to i8, !dbg !4039
  store i8 %frombool174, i8* %has_capability, align 8, !dbg !4039, !tbaa !4040, !ctir !141
  br label %if.end175, !dbg !4037

if.end175:                                        ; preds = %if.then172, %land.lhs.true169, %land.lhs.true166, %lor.lhs.false160
  %91 = load i32, i32* @format, align 4, !dbg !4041, !tbaa !2497
  %cmp176 = icmp eq i32 %91, 0, !dbg !4043
  br i1 %cmp176, label %if.then181, label %lor.lhs.false178, !dbg !4044

lor.lhs.false178:                                 ; preds = %if.end175
  %92 = load i8, i8* @print_scontext, align 1, !dbg !4045, !tbaa !2461
  %tobool179 = trunc i8 %92 to i1, !dbg !4045
  br i1 %tobool179, label %if.then181, label %if.end256, !dbg !4046

if.then181:                                       ; preds = %lor.lhs.false178, %if.end175
  call void @llvm.dbg.declare(metadata i8* %have_scontext, metadata !4047, metadata !DIExpression()), !dbg !4049
  store i8 0, i8* %have_scontext, align 1, !dbg !4049, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %have_acl, metadata !4050, metadata !DIExpression()), !dbg !4051
  store i8 0, i8* %have_acl, align 1, !dbg !4051, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %attr_len, metadata !4052, metadata !DIExpression()), !dbg !4053
  %93 = load i8*, i8** %full_name, align 8, !dbg !4054, !tbaa !2442
  %94 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4055, !tbaa !2442
  %95 = load i8, i8* %do_deref, align 1, !dbg !4056, !tbaa !2461
  %tobool182 = trunc i8 %95 to i1, !dbg !4056
  %call183 = call i32 @getfilecon_cache(i8* %93, %struct.fileinfo* %94, i1 zeroext %tobool182), !dbg !4057
  store i32 %call183, i32* %attr_len, align 4, !dbg !4053, !tbaa !2436
  %96 = load i32, i32* %attr_len, align 4, !dbg !4058, !tbaa !2436
  %cmp184 = icmp slt i32 %96, 0, !dbg !4059
  %conv185 = zext i1 %cmp184 to i32, !dbg !4059
  store i32 %conv185, i32* %err, align 4, !dbg !4060, !tbaa !2436
  %97 = load i32, i32* %err, align 4, !dbg !4061, !tbaa !2436
  %cmp186 = icmp eq i32 %97, 0, !dbg !4063
  br i1 %cmp186, label %if.then188, label %if.else206, !dbg !4064

if.then188:                                       ; preds = %if.then181
  %call189 = call zeroext i1 @is_smack_enabled(), !dbg !4065
  br i1 %call189, label %if.then190, label %if.else197, !dbg !4068

if.then190:                                       ; preds = %if.then188
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4069, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 6, !dbg !4069, !ctir !185
  %99 = load i8*, i8** %scontext, align 8, !dbg !4069, !tbaa !4070, !ctir !143
  %call191 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0), i8* %99) #16, !dbg !4069
  %cmp192 = icmp eq i32 %call191, 0, !dbg !4069
  %lnot194 = xor i1 %cmp192, true, !dbg !4071
  %frombool196 = zext i1 %lnot194 to i8, !dbg !4072
  store i8 %frombool196, i8* %have_scontext, align 1, !dbg !4072, !tbaa !2461
  br label %if.end205, !dbg !4073

if.else197:                                       ; preds = %if.then188
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4074, !tbaa !2442
  %scontext198 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 6, !dbg !4074, !ctir !185
  %101 = load i8*, i8** %scontext198, align 8, !dbg !4074, !tbaa !4070, !ctir !143
  %call199 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i8* %101) #16, !dbg !4074
  %cmp200 = icmp eq i32 %call199, 0, !dbg !4074
  %lnot202 = xor i1 %cmp200, true, !dbg !4075
  %frombool204 = zext i1 %lnot202 to i8, !dbg !4076
  store i8 %frombool204, i8* %have_scontext, align 1, !dbg !4076, !tbaa !2461
  br label %if.end205

if.end205:                                        ; preds = %if.else197, %if.then190
  br label %if.end217, !dbg !4077

if.else206:                                       ; preds = %if.then181
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4078, !tbaa !2442
  %scontext207 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 6, !dbg !4080, !ctir !185
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), i8** %scontext207, align 8, !dbg !4081, !tbaa !4070, !ctir !143
  %call208 = call i32* @__errno_location() #17, !dbg !4082
  %103 = load i32, i32* %call208, align 4, !dbg !4082, !tbaa !2436, !ctir !27
  %call209 = call zeroext i1 @is_ENOTSUP(i32 %103), !dbg !4084
  br i1 %call209, label %if.then215, label %lor.lhs.false211, !dbg !4085

lor.lhs.false211:                                 ; preds = %if.else206
  %call212 = call i32* @__errno_location() #17, !dbg !4086
  %104 = load i32, i32* %call212, align 4, !dbg !4086, !tbaa !2436, !ctir !27
  %cmp213 = icmp eq i32 %104, 61, !dbg !4087
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4088

if.then215:                                       ; preds = %lor.lhs.false211, %if.else206
  store i32 0, i32* %err, align 4, !dbg !4089, !tbaa !2436
  br label %if.end216, !dbg !4090

if.end216:                                        ; preds = %if.then215, %lor.lhs.false211
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end205
  %105 = load i32, i32* %err, align 4, !dbg !4091, !tbaa !2436
  %cmp218 = icmp eq i32 %105, 0, !dbg !4093
  br i1 %cmp218, label %land.lhs.true220, label %if.end230, !dbg !4094

land.lhs.true220:                                 ; preds = %if.end217
  %106 = load i32, i32* @format, align 4, !dbg !4095, !tbaa !2497
  %cmp221 = icmp eq i32 %106, 0, !dbg !4096
  br i1 %cmp221, label %if.then223, label %if.end230, !dbg !4097

if.then223:                                       ; preds = %land.lhs.true220
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4098, metadata !DIExpression()), !dbg !4100
  %107 = load i8*, i8** %full_name, align 8, !dbg !4101, !tbaa !2442
  %108 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4102, !tbaa !2442
  %call224 = call i32 @file_has_acl_cache(i8* %107, %struct.fileinfo* %108), !dbg !4103
  store i32 %call224, i32* %n, align 4, !dbg !4100, !tbaa !2436
  %109 = load i32, i32* %n, align 4, !dbg !4104, !tbaa !2436
  %cmp225 = icmp slt i32 %109, 0, !dbg !4105
  %conv226 = zext i1 %cmp225 to i32, !dbg !4105
  store i32 %conv226, i32* %err, align 4, !dbg !4106, !tbaa !2436
  %110 = load i32, i32* %n, align 4, !dbg !4107, !tbaa !2436
  %cmp227 = icmp slt i32 0, %110, !dbg !4108
  %frombool229 = zext i1 %cmp227 to i8, !dbg !4109
  store i8 %frombool229, i8* %have_acl, align 1, !dbg !4109, !tbaa !2461
  br label %if.end230, !dbg !4110

if.end230:                                        ; preds = %if.then223, %land.lhs.true220, %if.end217
  %111 = load i8, i8* %have_scontext, align 1, !dbg !4111, !tbaa !2461
  %tobool231 = trunc i8 %111 to i1, !dbg !4111
  br i1 %tobool231, label %cond.false235, label %land.lhs.true232, !dbg !4112

land.lhs.true232:                                 ; preds = %if.end230
  %112 = load i8, i8* %have_acl, align 1, !dbg !4113, !tbaa !2461
  %tobool233 = trunc i8 %112 to i1, !dbg !4113
  br i1 %tobool233, label %cond.false235, label %cond.true234, !dbg !4114

cond.true234:                                     ; preds = %land.lhs.true232
  br label %cond.end242, !dbg !4114

cond.false235:                                    ; preds = %land.lhs.true232, %if.end230
  %113 = load i8, i8* %have_scontext, align 1, !dbg !4115, !tbaa !2461
  %tobool236 = trunc i8 %113 to i1, !dbg !4115
  br i1 %tobool236, label %land.rhs, label %land.end, !dbg !4116

land.rhs:                                         ; preds = %cond.false235
  %114 = load i8, i8* %have_acl, align 1, !dbg !4117, !tbaa !2461
  %tobool238 = trunc i8 %114 to i1, !dbg !4117
  %lnot239 = xor i1 %tobool238, true, !dbg !4118
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false235
  %115 = phi i1 [ false, %cond.false235 ], [ %lnot239, %land.rhs ], !dbg !4119
  %116 = zext i1 %115 to i64, !dbg !4115
  %cond241 = select i1 %115, i32 1, i32 2, !dbg !4115
  br label %cond.end242, !dbg !4114

cond.end242:                                      ; preds = %land.end, %cond.true234
  %cond243 = phi i32 [ 0, %cond.true234 ], [ %cond241, %land.end ], !dbg !4114
  %117 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4120, !tbaa !2442
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %117, i32 0, i32 9, !dbg !4121, !ctir !185
  store i32 %cond243, i32* %acl_type, align 4, !dbg !4122, !tbaa !4123, !ctir !48
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4124, !tbaa !2442
  %acl_type244 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 9, !dbg !4125, !ctir !185
  %119 = load i32, i32* %acl_type244, align 4, !dbg !4125, !tbaa !4123, !ctir !48
  %cmp245 = icmp ne i32 %119, 0, !dbg !4126
  %conv246 = zext i1 %cmp245 to i32, !dbg !4126
  %120 = load i8, i8* @any_has_acl, align 1, !dbg !4127, !tbaa !2461
  %tobool247 = trunc i8 %120 to i1, !dbg !4127
  %conv248 = zext i1 %tobool247 to i32, !dbg !4127
  %or = or i32 %conv248, %conv246, !dbg !4127
  %tobool249 = icmp ne i32 %or, 0, !dbg !4127
  %frombool250 = zext i1 %tobool249 to i8, !dbg !4127
  store i8 %frombool250, i8* @any_has_acl, align 1, !dbg !4127, !tbaa !2461
  %121 = load i32, i32* %err, align 4, !dbg !4128, !tbaa !2436
  %tobool251 = icmp ne i32 %121, 0, !dbg !4128
  br i1 %tobool251, label %if.then252, label %if.end255, !dbg !4130

if.then252:                                       ; preds = %cond.end242
  %call253 = call i32* @__errno_location() #17, !dbg !4131
  %122 = load i32, i32* %call253, align 4, !dbg !4131, !tbaa !2436, !ctir !27
  %123 = load i8*, i8** %full_name, align 8, !dbg !4132, !tbaa !2442
  %call254 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %123), !dbg !4132
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %call254), !dbg !4133
  br label %if.end255, !dbg !4133

if.end255:                                        ; preds = %if.then252, %cond.end242
  br label %if.end256, !dbg !4134

if.end256:                                        ; preds = %if.end255, %lor.lhs.false178
  %124 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4135, !tbaa !2442
  %stat257 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %124, i32 0, i32 3, !dbg !4135, !ctir !185
  %st_mode258 = getelementptr inbounds %struct.stat, %struct.stat* %stat257, i32 0, i32 3, !dbg !4135, !ctir !191
  %125 = load i32, i32* %st_mode258, align 8, !dbg !4135, !tbaa !3982, !ctir !201
  %and259 = and i32 %125, 61440, !dbg !4135
  %cmp260 = icmp eq i32 %and259, 40960, !dbg !4135
  br i1 %cmp260, label %land.lhs.true262, label %if.end298, !dbg !4137

land.lhs.true262:                                 ; preds = %if.end256
  %126 = load i32, i32* @format, align 4, !dbg !4138, !tbaa !2497
  %cmp263 = icmp eq i32 %126, 0, !dbg !4139
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !4140

lor.lhs.false265:                                 ; preds = %land.lhs.true262
  %127 = load i8, i8* @check_symlink_mode, align 1, !dbg !4141, !tbaa !2461
  %tobool266 = trunc i8 %127 to i1, !dbg !4141
  br i1 %tobool266, label %if.then268, label %if.end298, !dbg !4142

if.then268:                                       ; preds = %lor.lhs.false265, %land.lhs.true262
  call void @llvm.dbg.declare(metadata %struct.stat* %linkstats, metadata !4143, metadata !DIExpression()), !dbg !4145
  %128 = load i8*, i8** %full_name, align 8, !dbg !4146, !tbaa !2442
  %129 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4147, !tbaa !2442
  %130 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4148, !tbaa !2461
  %tobool269 = trunc i8 %130 to i1, !dbg !4148
  call void @get_link_name(i8* %128, %struct.fileinfo* %129, i1 zeroext %tobool269), !dbg !4149
  call void @llvm.dbg.declare(metadata i8** %linkname, metadata !4150, metadata !DIExpression()), !dbg !4151
  %131 = load i8*, i8** %full_name, align 8, !dbg !4152, !tbaa !2442
  %132 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4153, !tbaa !2442
  %linkname270 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %132, i32 0, i32 1, !dbg !4154, !ctir !185
  %133 = load i8*, i8** %linkname270, align 8, !dbg !4154, !tbaa !4155, !ctir !143
  %call271 = call i8* @make_link_name(i8* %131, i8* %133), !dbg !4156
  store i8* %call271, i8** %linkname, align 8, !dbg !4151, !tbaa !2442
  %134 = load i8*, i8** %linkname, align 8, !dbg !4157, !tbaa !2442
  %tobool272 = icmp ne i8* %134, null, !dbg !4157
  br i1 %tobool272, label %land.lhs.true273, label %if.end283, !dbg !4159

land.lhs.true273:                                 ; preds = %if.then268
  %135 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4160, !tbaa !2442
  %quoted274 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %135, i32 0, i32 11, !dbg !4161, !ctir !185
  %136 = load i32, i32* %quoted274, align 4, !dbg !4161, !tbaa !3819, !ctir !27
  %cmp275 = icmp eq i32 %136, 0, !dbg !4162
  br i1 %cmp275, label %land.lhs.true277, label %if.end283, !dbg !4163

land.lhs.true277:                                 ; preds = %land.lhs.true273
  %137 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4164, !tbaa !2442
  %linkname278 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %137, i32 0, i32 1, !dbg !4165, !ctir !185
  %138 = load i8*, i8** %linkname278, align 8, !dbg !4165, !tbaa !4155, !ctir !143
  %call279 = call zeroext i1 @needs_quoting(i8* %138), !dbg !4166
  br i1 %call279, label %if.then281, label %if.end283, !dbg !4167

if.then281:                                       ; preds = %land.lhs.true277
  %139 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4168, !tbaa !2442
  %quoted282 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %139, i32 0, i32 11, !dbg !4169, !ctir !185
  store i32 -1, i32* %quoted282, align 4, !dbg !4170, !tbaa !3819, !ctir !27
  br label %if.end283, !dbg !4168

if.end283:                                        ; preds = %if.then281, %land.lhs.true277, %land.lhs.true273, %if.then268
  %140 = load i8*, i8** %linkname, align 8, !dbg !4171, !tbaa !2442
  %tobool284 = icmp ne i8* %140, null, !dbg !4171
  br i1 %tobool284, label %land.lhs.true285, label %if.end297, !dbg !4173

land.lhs.true285:                                 ; preds = %if.end283
  %141 = load i32, i32* @indicator_style, align 4, !dbg !4174, !tbaa !2497
  %cmp286 = icmp ule i32 2, %141, !dbg !4175
  br i1 %cmp286, label %land.lhs.true291, label %lor.lhs.false288, !dbg !4176

lor.lhs.false288:                                 ; preds = %land.lhs.true285
  %142 = load i8, i8* @check_symlink_mode, align 1, !dbg !4177, !tbaa !2461
  %tobool289 = trunc i8 %142 to i1, !dbg !4177
  br i1 %tobool289, label %land.lhs.true291, label %if.end297, !dbg !4178

land.lhs.true291:                                 ; preds = %lor.lhs.false288, %land.lhs.true285
  %143 = load i8*, i8** %linkname, align 8, !dbg !4179, !tbaa !2442
  %call292 = call i32 @stat(i8* %143, %struct.stat* %linkstats) #13, !dbg !4180
  %cmp293 = icmp eq i32 %call292, 0, !dbg !4181
  br i1 %cmp293, label %if.then295, label %if.end297, !dbg !4182

if.then295:                                       ; preds = %land.lhs.true291
  %144 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4183, !tbaa !2442
  %linkok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %144, i32 0, i32 8, !dbg !4185, !ctir !185
  store i8 1, i8* %linkok, align 1, !dbg !4186, !tbaa !4187, !ctir !141
  %st_mode296 = getelementptr inbounds %struct.stat, %struct.stat* %linkstats, i32 0, i32 3, !dbg !4188, !ctir !191
  %145 = load i32, i32* %st_mode296, align 8, !dbg !4188, !tbaa !4189, !ctir !201
  %146 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4190, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %146, i32 0, i32 5, !dbg !4191, !ctir !185
  store i32 %145, i32* %linkmode, align 4, !dbg !4192, !tbaa !4193, !ctir !228
  br label %if.end297, !dbg !4194

if.end297:                                        ; preds = %if.then295, %land.lhs.true291, %lor.lhs.false288, %if.end283
  %147 = load i8*, i8** %linkname, align 8, !dbg !4195, !tbaa !2442
  call void @free(i8* %147) #13, !dbg !4196
  br label %if.end298, !dbg !4197

if.end298:                                        ; preds = %if.end297, %lor.lhs.false265, %if.end256
  %148 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4198, !tbaa !2442
  %stat299 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %148, i32 0, i32 3, !dbg !4198, !ctir !185
  %st_mode300 = getelementptr inbounds %struct.stat, %struct.stat* %stat299, i32 0, i32 3, !dbg !4198, !ctir !191
  %149 = load i32, i32* %st_mode300, align 8, !dbg !4198, !tbaa !3982, !ctir !201
  %and301 = and i32 %149, 61440, !dbg !4198
  %cmp302 = icmp eq i32 %and301, 40960, !dbg !4198
  br i1 %cmp302, label %if.then304, label %if.else306, !dbg !4200

if.then304:                                       ; preds = %if.end298
  %150 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4201, !tbaa !2442
  %filetype305 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %150, i32 0, i32 4, !dbg !4202, !ctir !185
  store i32 6, i32* %filetype305, align 8, !dbg !4203, !tbaa !3815, !ctir !36
  br label %if.end325, !dbg !4201

if.else306:                                       ; preds = %if.end298
  %151 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4204, !tbaa !2442
  %stat307 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %151, i32 0, i32 3, !dbg !4204, !ctir !185
  %st_mode308 = getelementptr inbounds %struct.stat, %struct.stat* %stat307, i32 0, i32 3, !dbg !4204, !ctir !191
  %152 = load i32, i32* %st_mode308, align 8, !dbg !4204, !tbaa !3982, !ctir !201
  %and309 = and i32 %152, 61440, !dbg !4204
  %cmp310 = icmp eq i32 %and309, 16384, !dbg !4204
  br i1 %cmp310, label %if.then312, label %if.else322, !dbg !4206

if.then312:                                       ; preds = %if.else306
  %153 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4207, !tbaa !2461
  %tobool313 = trunc i8 %153 to i1, !dbg !4207
  br i1 %tobool313, label %land.lhs.true315, label %if.else319, !dbg !4210

land.lhs.true315:                                 ; preds = %if.then312
  %154 = load i8, i8* @immediate_dirs, align 1, !dbg !4211, !tbaa !2461
  %tobool316 = trunc i8 %154 to i1, !dbg !4211
  br i1 %tobool316, label %if.else319, label %if.then317, !dbg !4212

if.then317:                                       ; preds = %land.lhs.true315
  %155 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4213, !tbaa !2442
  %filetype318 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %155, i32 0, i32 4, !dbg !4214, !ctir !185
  store i32 9, i32* %filetype318, align 8, !dbg !4215, !tbaa !3815, !ctir !36
  br label %if.end321, !dbg !4213

if.else319:                                       ; preds = %land.lhs.true315, %if.then312
  %156 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4216, !tbaa !2442
  %filetype320 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %156, i32 0, i32 4, !dbg !4217, !ctir !185
  store i32 3, i32* %filetype320, align 8, !dbg !4218, !tbaa !3815, !ctir !36
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then317
  br label %if.end324, !dbg !4219

if.else322:                                       ; preds = %if.else306
  %157 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4220, !tbaa !2442
  %filetype323 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %157, i32 0, i32 4, !dbg !4221, !ctir !185
  store i32 5, i32* %filetype323, align 8, !dbg !4222, !tbaa !3815, !ctir !36
  br label %if.end324

if.end324:                                        ; preds = %if.else322, %if.end321
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then304
  %158 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4223, !tbaa !2442
  %stat326 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %158, i32 0, i32 3, !dbg !4223, !ctir !185
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat326, i32 0, i32 10, !dbg !4223, !ctir !191
  %159 = load i64, i64* %st_blocks, align 8, !dbg !4223, !tbaa !4224, !ctir !212
  store i64 %159, i64* %blocks, align 8, !dbg !4225, !tbaa !2579
  %160 = load i32, i32* @format, align 4, !dbg !4226, !tbaa !2497
  %cmp327 = icmp eq i32 %160, 0, !dbg !4228
  br i1 %cmp327, label %if.then332, label %lor.lhs.false329, !dbg !4229

lor.lhs.false329:                                 ; preds = %if.end325
  %161 = load i8, i8* @print_block_size, align 1, !dbg !4230, !tbaa !2461
  %tobool330 = trunc i8 %161 to i1, !dbg !4230
  br i1 %tobool330, label %if.then332, label %if.end339, !dbg !4231

if.then332:                                       ; preds = %lor.lhs.false329, %if.end325
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4235, metadata !DIExpression()), !dbg !4236
  %162 = load i64, i64* %blocks, align 8, !dbg !4237, !tbaa !2579
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !4238
  %163 = load i32, i32* @human_output_opts, align 4, !dbg !4239, !tbaa !2436
  %164 = load i64, i64* @output_block_size, align 8, !dbg !4240, !tbaa !2579
  %call333 = call i8* @human_readable(i64 %162, i8* %arraydecay, i32 %163, i64 512, i64 %164), !dbg !4241
  %call334 = call i32 @gnu_mbswidth(i8* %call333, i32 0), !dbg !4242
  store i32 %call334, i32* %len, align 4, !dbg !4236, !tbaa !2436
  %165 = load i32, i32* @block_size_width, align 4, !dbg !4243, !tbaa !2436
  %166 = load i32, i32* %len, align 4, !dbg !4245, !tbaa !2436
  %cmp335 = icmp slt i32 %165, %166, !dbg !4246
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !4247

if.then337:                                       ; preds = %if.then332
  %167 = load i32, i32* %len, align 4, !dbg !4248, !tbaa !2436
  store i32 %167, i32* @block_size_width, align 4, !dbg !4249, !tbaa !2436
  br label %if.end338, !dbg !4250

if.end338:                                        ; preds = %if.then337, %if.then332
  br label %if.end339, !dbg !4251

if.end339:                                        ; preds = %if.end338, %lor.lhs.false329
  %168 = load i32, i32* @format, align 4, !dbg !4252, !tbaa !2497
  %cmp340 = icmp eq i32 %168, 0, !dbg !4254
  br i1 %cmp340, label %if.then342, label %if.end374, !dbg !4255

if.then342:                                       ; preds = %if.end339
  %169 = load i8, i8* @print_owner, align 1, !dbg !4256, !tbaa !2461
  %tobool343 = trunc i8 %169 to i1, !dbg !4256
  br i1 %tobool343, label %if.then344, label %if.end352, !dbg !4259

if.then344:                                       ; preds = %if.then342
  call void @llvm.dbg.declare(metadata i32* %len345, metadata !4260, metadata !DIExpression()), !dbg !4262
  %170 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4263, !tbaa !2442
  %stat346 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %170, i32 0, i32 3, !dbg !4264, !ctir !185
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat346, i32 0, i32 4, !dbg !4265, !ctir !191
  %171 = load i32, i32* %st_uid, align 4, !dbg !4265, !tbaa !4266, !ctir !203
  %call347 = call i32 @format_user_width(i32 %171), !dbg !4267
  store i32 %call347, i32* %len345, align 4, !dbg !4262, !tbaa !2436
  %172 = load i32, i32* @owner_width, align 4, !dbg !4268, !tbaa !2436
  %173 = load i32, i32* %len345, align 4, !dbg !4270, !tbaa !2436
  %cmp348 = icmp slt i32 %172, %173, !dbg !4271
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !4272

if.then350:                                       ; preds = %if.then344
  %174 = load i32, i32* %len345, align 4, !dbg !4273, !tbaa !2436
  store i32 %174, i32* @owner_width, align 4, !dbg !4274, !tbaa !2436
  br label %if.end351, !dbg !4275

if.end351:                                        ; preds = %if.then350, %if.then344
  br label %if.end352, !dbg !4276

if.end352:                                        ; preds = %if.end351, %if.then342
  %175 = load i8, i8* @print_group, align 1, !dbg !4277, !tbaa !2461
  %tobool353 = trunc i8 %175 to i1, !dbg !4277
  br i1 %tobool353, label %if.then354, label %if.end362, !dbg !4279

if.then354:                                       ; preds = %if.end352
  call void @llvm.dbg.declare(metadata i32* %len355, metadata !4280, metadata !DIExpression()), !dbg !4282
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4283, !tbaa !2442
  %stat356 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 3, !dbg !4284, !ctir !185
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat356, i32 0, i32 5, !dbg !4285, !ctir !191
  %177 = load i32, i32* %st_gid, align 8, !dbg !4285, !tbaa !4286, !ctir !205
  %call357 = call i32 @format_group_width(i32 %177), !dbg !4287
  store i32 %call357, i32* %len355, align 4, !dbg !4282, !tbaa !2436
  %178 = load i32, i32* @group_width, align 4, !dbg !4288, !tbaa !2436
  %179 = load i32, i32* %len355, align 4, !dbg !4290, !tbaa !2436
  %cmp358 = icmp slt i32 %178, %179, !dbg !4291
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !4292

if.then360:                                       ; preds = %if.then354
  %180 = load i32, i32* %len355, align 4, !dbg !4293, !tbaa !2436
  store i32 %180, i32* @group_width, align 4, !dbg !4294, !tbaa !2436
  br label %if.end361, !dbg !4295

if.end361:                                        ; preds = %if.then360, %if.then354
  br label %if.end362, !dbg !4296

if.end362:                                        ; preds = %if.end361, %if.end352
  %181 = load i8, i8* @print_author, align 1, !dbg !4297, !tbaa !2461
  %tobool363 = trunc i8 %181 to i1, !dbg !4297
  br i1 %tobool363, label %if.then364, label %if.end373, !dbg !4299

if.then364:                                       ; preds = %if.end362
  call void @llvm.dbg.declare(metadata i32* %len365, metadata !4300, metadata !DIExpression()), !dbg !4302
  %182 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4303, !tbaa !2442
  %stat366 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %182, i32 0, i32 3, !dbg !4304, !ctir !185
  %st_uid367 = getelementptr inbounds %struct.stat, %struct.stat* %stat366, i32 0, i32 4, !dbg !4305, !ctir !191
  %183 = load i32, i32* %st_uid367, align 4, !dbg !4305, !tbaa !4266, !ctir !203
  %call368 = call i32 @format_user_width(i32 %183), !dbg !4306
  store i32 %call368, i32* %len365, align 4, !dbg !4302, !tbaa !2436
  %184 = load i32, i32* @author_width, align 4, !dbg !4307, !tbaa !2436
  %185 = load i32, i32* %len365, align 4, !dbg !4309, !tbaa !2436
  %cmp369 = icmp slt i32 %184, %185, !dbg !4310
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !4311

if.then371:                                       ; preds = %if.then364
  %186 = load i32, i32* %len365, align 4, !dbg !4312, !tbaa !2436
  store i32 %186, i32* @author_width, align 4, !dbg !4313, !tbaa !2436
  br label %if.end372, !dbg !4314

if.end372:                                        ; preds = %if.then371, %if.then364
  br label %if.end373, !dbg !4315

if.end373:                                        ; preds = %if.end372, %if.end362
  br label %if.end374, !dbg !4316

if.end374:                                        ; preds = %if.end373, %if.end339
  %187 = load i8, i8* @print_scontext, align 1, !dbg !4317, !tbaa !2461
  %tobool375 = trunc i8 %187 to i1, !dbg !4317
  br i1 %tobool375, label %if.then376, label %if.end385, !dbg !4319

if.then376:                                       ; preds = %if.end374
  call void @llvm.dbg.declare(metadata i32* %len377, metadata !4320, metadata !DIExpression()), !dbg !4322
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4323, !tbaa !2442
  %scontext378 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 6, !dbg !4324, !ctir !185
  %189 = load i8*, i8** %scontext378, align 8, !dbg !4324, !tbaa !4070, !ctir !143
  %call379 = call i64 @strlen(i8* %189) #16, !dbg !4325
  %conv380 = trunc i64 %call379 to i32, !dbg !4325
  store i32 %conv380, i32* %len377, align 4, !dbg !4322, !tbaa !2436
  %190 = load i32, i32* @scontext_width, align 4, !dbg !4326, !tbaa !2436
  %191 = load i32, i32* %len377, align 4, !dbg !4328, !tbaa !2436
  %cmp381 = icmp slt i32 %190, %191, !dbg !4329
  br i1 %cmp381, label %if.then383, label %if.end384, !dbg !4330

if.then383:                                       ; preds = %if.then376
  %192 = load i32, i32* %len377, align 4, !dbg !4331, !tbaa !2436
  store i32 %192, i32* @scontext_width, align 4, !dbg !4332, !tbaa !2436
  br label %if.end384, !dbg !4333

if.end384:                                        ; preds = %if.then383, %if.then376
  br label %if.end385, !dbg !4334

if.end385:                                        ; preds = %if.end384, %if.end374
  %193 = load i32, i32* @format, align 4, !dbg !4335, !tbaa !2497
  %cmp386 = icmp eq i32 %193, 0, !dbg !4337
  br i1 %cmp386, label %if.then388, label %if.end454, !dbg !4338

if.then388:                                       ; preds = %if.end385
  call void @llvm.dbg.declare(metadata [21 x i8]* %b, metadata !4339, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.declare(metadata i32* %b_len, metadata !4342, metadata !DIExpression()), !dbg !4343
  %194 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4344, !tbaa !2442
  %stat389 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %194, i32 0, i32 3, !dbg !4345, !ctir !185
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat389, i32 0, i32 2, !dbg !4346, !ctir !191
  %195 = load i64, i64* %st_nlink, align 8, !dbg !4346, !tbaa !4347, !ctir !199
  %arraydecay390 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i64 0, i64 0, !dbg !4348
  %call391 = call i8* @umaxtostr(i64 %195, i8* %arraydecay390), !dbg !4349
  %call392 = call i64 @strlen(i8* %call391) #16, !dbg !4350
  %conv393 = trunc i64 %call392 to i32, !dbg !4350
  store i32 %conv393, i32* %b_len, align 4, !dbg !4343, !tbaa !2436
  %196 = load i32, i32* @nlink_width, align 4, !dbg !4351, !tbaa !2436
  %197 = load i32, i32* %b_len, align 4, !dbg !4353, !tbaa !2436
  %cmp394 = icmp slt i32 %196, %197, !dbg !4354
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !4355

if.then396:                                       ; preds = %if.then388
  %198 = load i32, i32* %b_len, align 4, !dbg !4356, !tbaa !2436
  store i32 %198, i32* @nlink_width, align 4, !dbg !4357, !tbaa !2436
  br label %if.end397, !dbg !4358

if.end397:                                        ; preds = %if.then396, %if.then388
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4359, !tbaa !2442
  %stat398 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 3, !dbg !4359, !ctir !185
  %st_mode399 = getelementptr inbounds %struct.stat, %struct.stat* %stat398, i32 0, i32 3, !dbg !4359, !ctir !191
  %200 = load i32, i32* %st_mode399, align 8, !dbg !4359, !tbaa !3982, !ctir !201
  %and400 = and i32 %200, 61440, !dbg !4359
  %cmp401 = icmp eq i32 %and400, 8192, !dbg !4359
  br i1 %cmp401, label %if.then409, label %lor.lhs.false403, !dbg !4361

lor.lhs.false403:                                 ; preds = %if.end397
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4362, !tbaa !2442
  %stat404 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !4362, !ctir !185
  %st_mode405 = getelementptr inbounds %struct.stat, %struct.stat* %stat404, i32 0, i32 3, !dbg !4362, !ctir !191
  %202 = load i32, i32* %st_mode405, align 8, !dbg !4362, !tbaa !3982, !ctir !201
  %and406 = and i32 %202, 61440, !dbg !4362
  %cmp407 = icmp eq i32 %and406, 24576, !dbg !4362
  br i1 %cmp407, label %if.then409, label %if.else441, !dbg !4363

if.then409:                                       ; preds = %lor.lhs.false403, %if.end397
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf410, metadata !4364, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %len411, metadata !4367, metadata !DIExpression()), !dbg !4368
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4369, !tbaa !2442
  %stat412 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 3, !dbg !4369, !ctir !185
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat412, i32 0, i32 7, !dbg !4369, !ctir !191
  %204 = load i64, i64* %st_rdev, align 8, !dbg !4369, !tbaa !4370, !ctir !195
  %call413 = call i32 @gnu_dev_major(i64 %204) #17, !dbg !4369
  %conv414 = zext i32 %call413 to i64, !dbg !4369
  %arraydecay415 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4371
  %call416 = call i8* @umaxtostr(i64 %conv414, i8* %arraydecay415), !dbg !4372
  %call417 = call i64 @strlen(i8* %call416) #16, !dbg !4373
  %conv418 = trunc i64 %call417 to i32, !dbg !4373
  store i32 %conv418, i32* %len411, align 4, !dbg !4368, !tbaa !2436
  %205 = load i32, i32* @major_device_number_width, align 4, !dbg !4374, !tbaa !2436
  %206 = load i32, i32* %len411, align 4, !dbg !4376, !tbaa !2436
  %cmp419 = icmp slt i32 %205, %206, !dbg !4377
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !4378

if.then421:                                       ; preds = %if.then409
  %207 = load i32, i32* %len411, align 4, !dbg !4379, !tbaa !2436
  store i32 %207, i32* @major_device_number_width, align 4, !dbg !4380, !tbaa !2436
  br label %if.end422, !dbg !4381

if.end422:                                        ; preds = %if.then421, %if.then409
  %208 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4382, !tbaa !2442
  %stat423 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %208, i32 0, i32 3, !dbg !4382, !ctir !185
  %st_rdev424 = getelementptr inbounds %struct.stat, %struct.stat* %stat423, i32 0, i32 7, !dbg !4382, !ctir !191
  %209 = load i64, i64* %st_rdev424, align 8, !dbg !4382, !tbaa !4370, !ctir !195
  %call425 = call i32 @gnu_dev_minor(i64 %209) #17, !dbg !4382
  %conv426 = zext i32 %call425 to i64, !dbg !4382
  %arraydecay427 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4383
  %call428 = call i8* @umaxtostr(i64 %conv426, i8* %arraydecay427), !dbg !4384
  %call429 = call i64 @strlen(i8* %call428) #16, !dbg !4385
  %conv430 = trunc i64 %call429 to i32, !dbg !4385
  store i32 %conv430, i32* %len411, align 4, !dbg !4386, !tbaa !2436
  %210 = load i32, i32* @minor_device_number_width, align 4, !dbg !4387, !tbaa !2436
  %211 = load i32, i32* %len411, align 4, !dbg !4389, !tbaa !2436
  %cmp431 = icmp slt i32 %210, %211, !dbg !4390
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !4391

if.then433:                                       ; preds = %if.end422
  %212 = load i32, i32* %len411, align 4, !dbg !4392, !tbaa !2436
  store i32 %212, i32* @minor_device_number_width, align 4, !dbg !4393, !tbaa !2436
  br label %if.end434, !dbg !4394

if.end434:                                        ; preds = %if.then433, %if.end422
  %213 = load i32, i32* @major_device_number_width, align 4, !dbg !4395, !tbaa !2436
  %add435 = add nsw i32 %213, 2, !dbg !4396
  %214 = load i32, i32* @minor_device_number_width, align 4, !dbg !4397, !tbaa !2436
  %add436 = add nsw i32 %add435, %214, !dbg !4398
  store i32 %add436, i32* %len411, align 4, !dbg !4399, !tbaa !2436
  %215 = load i32, i32* @file_size_width, align 4, !dbg !4400, !tbaa !2436
  %216 = load i32, i32* %len411, align 4, !dbg !4402, !tbaa !2436
  %cmp437 = icmp slt i32 %215, %216, !dbg !4403
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4404

if.then439:                                       ; preds = %if.end434
  %217 = load i32, i32* %len411, align 4, !dbg !4405, !tbaa !2436
  store i32 %217, i32* @file_size_width, align 4, !dbg !4406, !tbaa !2436
  br label %if.end440, !dbg !4407

if.end440:                                        ; preds = %if.then439, %if.end434
  br label %if.end453, !dbg !4408

if.else441:                                       ; preds = %lor.lhs.false403
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf442, metadata !4409, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4412, metadata !DIExpression()), !dbg !4413
  %218 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4414, !tbaa !2442
  %stat443 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %218, i32 0, i32 3, !dbg !4415, !ctir !185
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat443, i32 0, i32 8, !dbg !4416, !ctir !191
  %219 = load i64, i64* %st_size, align 8, !dbg !4416, !tbaa !4417, !ctir !181
  %call444 = call i64 @unsigned_file_size(i64 %219), !dbg !4418
  store i64 %call444, i64* %size, align 8, !dbg !4413, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %len445, metadata !4419, metadata !DIExpression()), !dbg !4420
  %220 = load i64, i64* %size, align 8, !dbg !4421, !tbaa !2579
  %arraydecay446 = getelementptr inbounds [652 x i8], [652 x i8]* %buf442, i64 0, i64 0, !dbg !4422
  %221 = load i32, i32* @file_human_output_opts, align 4, !dbg !4423, !tbaa !2436
  %222 = load i64, i64* @file_output_block_size, align 8, !dbg !4424, !tbaa !2579
  %call447 = call i8* @human_readable(i64 %220, i8* %arraydecay446, i32 %221, i64 1, i64 %222), !dbg !4425
  %call448 = call i32 @gnu_mbswidth(i8* %call447, i32 0), !dbg !4426
  store i32 %call448, i32* %len445, align 4, !dbg !4420, !tbaa !2436
  %223 = load i32, i32* @file_size_width, align 4, !dbg !4427, !tbaa !2436
  %224 = load i32, i32* %len445, align 4, !dbg !4429, !tbaa !2436
  %cmp449 = icmp slt i32 %223, %224, !dbg !4430
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !4431

if.then451:                                       ; preds = %if.else441
  %225 = load i32, i32* %len445, align 4, !dbg !4432, !tbaa !2436
  store i32 %225, i32* @file_size_width, align 4, !dbg !4433, !tbaa !2436
  br label %if.end452, !dbg !4434

if.end452:                                        ; preds = %if.then451, %if.else441
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.end440
  br label %if.end454, !dbg !4435

if.end454:                                        ; preds = %if.end453, %if.end385
  br label %if.end455, !dbg !4436

if.end455:                                        ; preds = %if.end454, %lor.lhs.false91, %lor.lhs.false79, %lor.lhs.false73, %lor.lhs.false64
  %226 = load i8, i8* @print_inode, align 1, !dbg !4437, !tbaa !2461
  %tobool456 = trunc i8 %226 to i1, !dbg !4437
  br i1 %tobool456, label %if.then457, label %if.end470, !dbg !4439

if.then457:                                       ; preds = %if.end455
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf458, metadata !4440, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata i32* %len459, metadata !4443, metadata !DIExpression()), !dbg !4444
  %227 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4445, !tbaa !2442
  %stat460 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %227, i32 0, i32 3, !dbg !4446, !ctir !185
  %st_ino461 = getelementptr inbounds %struct.stat, %struct.stat* %stat460, i32 0, i32 1, !dbg !4447, !ctir !191
  %228 = load i64, i64* %st_ino461, align 8, !dbg !4447, !tbaa !3808, !ctir !197
  %arraydecay462 = getelementptr inbounds [21 x i8], [21 x i8]* %buf458, i64 0, i64 0, !dbg !4448
  %call463 = call i8* @umaxtostr(i64 %228, i8* %arraydecay462), !dbg !4449
  %call464 = call i64 @strlen(i8* %call463) #16, !dbg !4450
  %conv465 = trunc i64 %call464 to i32, !dbg !4450
  store i32 %conv465, i32* %len459, align 4, !dbg !4444, !tbaa !2436
  %229 = load i32, i32* @inode_number_width, align 4, !dbg !4451, !tbaa !2436
  %230 = load i32, i32* %len459, align 4, !dbg !4453, !tbaa !2436
  %cmp466 = icmp slt i32 %229, %230, !dbg !4454
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !4455

if.then468:                                       ; preds = %if.then457
  %231 = load i32, i32* %len459, align 4, !dbg !4456, !tbaa !2436
  store i32 %231, i32* @inode_number_width, align 4, !dbg !4457, !tbaa !2436
  br label %if.end469, !dbg !4458

if.end469:                                        ; preds = %if.then468, %if.then457
  br label %if.end470, !dbg !4459

if.end470:                                        ; preds = %if.end469, %if.end455
  %232 = load i8*, i8** %name.addr, align 8, !dbg !4460, !tbaa !2442
  %call471 = call noalias i8* @xstrdup(i8* %232), !dbg !4461
  %233 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4462, !tbaa !2442
  %name472 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %233, i32 0, i32 0, !dbg !4463, !ctir !185
  store i8* %call471, i8** %name472, align 8, !dbg !4464, !tbaa !4017, !ctir !143
  %234 = load i64, i64* @cwd_n_used, align 8, !dbg !4465, !tbaa !2579
  %inc473 = add i64 %234, 1, !dbg !4465
  store i64 %inc473, i64* @cwd_n_used, align 8, !dbg !4465, !tbaa !2579
  %235 = load i64, i64* %blocks, align 8, !dbg !4466, !tbaa !2579
  store i64 %235, i64* %retval, align 8, !dbg !4467
  br label %return, !dbg !4467

return:                                           ; preds = %if.end470, %if.end154, %if.then153
  %236 = load i64, i64* %retval, align 8, !dbg !4468
  ret i64 %236, !dbg !4468
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_directory(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !4469 !ctir !607 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %new = alloca %struct.pending*, align 8, !ctir !237
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4470, metadata !DIExpression()), !dbg !4471
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4472, metadata !DIExpression()), !dbg !4473
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata %struct.pending** %new, metadata !4476, metadata !DIExpression()), !dbg !4477
  %call = call noalias i8* @xmalloc(i64 32), !dbg !4478
  %0 = bitcast i8* %call to %struct.pending*, !dbg !4478
  store %struct.pending* %0, %struct.pending** %new, align 8, !dbg !4477, !tbaa !2442
  %1 = load i8*, i8** %realname.addr, align 8, !dbg !4479, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !4479
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4479

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %realname.addr, align 8, !dbg !4480, !tbaa !2442
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !4481
  br label %cond.end, !dbg !4479

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !4479
  %3 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4482, !tbaa !2442
  %realname2 = getelementptr inbounds %struct.pending, %struct.pending* %3, i32 0, i32 1, !dbg !4483, !ctir !238
  store i8* %cond, i8** %realname2, align 8, !dbg !4484, !tbaa !2688, !ctir !143
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4485, !tbaa !2442
  %tobool3 = icmp ne i8* %4, null, !dbg !4485
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !4485

cond.true4:                                       ; preds = %cond.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4486, !tbaa !2442
  %call5 = call noalias i8* @xstrdup(i8* %5), !dbg !4487
  br label %cond.end7, !dbg !4485

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !4485

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi i8* [ %call5, %cond.true4 ], [ null, %cond.false6 ], !dbg !4485
  %6 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4488, !tbaa !2442
  %name9 = getelementptr inbounds %struct.pending, %struct.pending* %6, i32 0, i32 0, !dbg !4489, !ctir !238
  store i8* %cond8, i8** %name9, align 8, !dbg !4490, !tbaa !2660, !ctir !143
  %7 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4491, !tbaa !2461
  %tobool10 = trunc i8 %7 to i1, !dbg !4491
  %8 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4492, !tbaa !2442
  %command_line_arg11 = getelementptr inbounds %struct.pending, %struct.pending* %8, i32 0, i32 2, !dbg !4493, !ctir !238
  %frombool12 = zext i1 %tobool10 to i8, !dbg !4494
  store i8 %frombool12, i8* %command_line_arg11, align 8, !dbg !4494, !tbaa !2691, !ctir !141
  %9 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !4495, !tbaa !2442
  %10 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4496, !tbaa !2442
  %next = getelementptr inbounds %struct.pending, %struct.pending* %10, i32 0, i32 3, !dbg !4497, !ctir !238
  store %struct.pending* %9, %struct.pending** %next, align 8, !dbg !4498, !tbaa !2639, !ctir !237
  %11 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4499, !tbaa !2442
  store %struct.pending* %11, %struct.pending** @pending_dirs, align 8, !dbg !4500, !tbaa !2442
  ret void, !dbg !4501
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort_files() #0 !dbg !4502 !ctir !341 {
entry:
  %use_strcmp = alloca i8, align 1, !ctir !141
  call void @llvm.dbg.declare(metadata i8* %use_strcmp, metadata !4503, metadata !DIExpression()), !dbg !4504
  %0 = load i64, i64* @sorted_file_alloc, align 8, !dbg !4505, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !4507, !tbaa !2579
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4508, !tbaa !2579
  %div = udiv i64 %2, 2, !dbg !4509
  %add = add i64 %1, %div, !dbg !4510
  %cmp = icmp ult i64 %0, %add, !dbg !4511
  br i1 %cmp, label %if.then, label %if.end, !dbg !4512

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4513, !tbaa !2442
  %4 = bitcast i8** %3 to i8*, !dbg !4513
  call void @free(i8* %4) #13, !dbg !4515
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !4516, !tbaa !2579
  %call = call noalias i8* @xnmalloc(i64 %5, i64 24), !dbg !4517
  %6 = bitcast i8* %call to i8**, !dbg !4517
  store i8** %6, i8*** @sorted_file, align 8, !dbg !4518, !tbaa !2442
  %7 = load i64, i64* @cwd_n_used, align 8, !dbg !4519, !tbaa !2579
  %mul = mul i64 3, %7, !dbg !4520
  store i64 %mul, i64* @sorted_file_alloc, align 8, !dbg !4521, !tbaa !2579
  br label %if.end, !dbg !4522

if.end:                                           ; preds = %if.then, %entry
  call void @initialize_ordering_vector(), !dbg !4523
  %8 = load i32, i32* @sort_type, align 4, !dbg !4524, !tbaa !2497
  %cmp1 = icmp eq i32 %8, -1, !dbg !4526
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4527

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !4528

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0)) #18, !dbg !4529
  %tobool = icmp ne i32 %call4, 0, !dbg !4529
  br i1 %tobool, label %if.else, label %if.then5, !dbg !4531

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* %use_strcmp, align 1, !dbg !4532, !tbaa !2461
  br label %if.end10, !dbg !4533

if.else:                                          ; preds = %if.end3
  store i8 1, i8* %use_strcmp, align 1, !dbg !4534, !tbaa !2461
  %9 = load i32, i32* @sort_type, align 4, !dbg !4536, !tbaa !2497
  %cmp6 = icmp ne i32 %9, 3, !dbg !4536
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !4539

if.then7:                                         ; preds = %if.else
  br label %if.end9, !dbg !4539

if.else8:                                         ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3818, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.sort_files, i64 0, i64 0)) #15, !dbg !4536
  unreachable, !dbg !4536

if.end9:                                          ; preds = %if.then7
  call void @initialize_ordering_vector(), !dbg !4540
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then5
  %10 = load i8**, i8*** @sorted_file, align 8, !dbg !4541, !tbaa !2442
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4542, !tbaa !2579
  %12 = load i32, i32* @sort_type, align 4, !dbg !4543, !tbaa !2497
  %13 = load i32, i32* @sort_type, align 4, !dbg !4544, !tbaa !2497
  %cmp11 = icmp eq i32 %13, 4, !dbg !4545
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !4544

cond.true:                                        ; preds = %if.end10
  %14 = load i32, i32* @time_type, align 4, !dbg !4546, !tbaa !2497
  br label %cond.end, !dbg !4544

cond.false:                                       ; preds = %if.end10
  br label %cond.end, !dbg !4544

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %cond.false ], !dbg !4544
  %add12 = add i32 %12, %cond, !dbg !4547
  %idxprom = zext i32 %add12 to i64, !dbg !4548
  %arrayidx = getelementptr inbounds [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]], [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]]* @sort_functions, i64 0, i64 %idxprom, !dbg !4548, !ctir !715
  %15 = load i8, i8* %use_strcmp, align 1, !dbg !4549, !tbaa !2461
  %tobool13 = trunc i8 %15 to i1, !dbg !4549
  %idxprom14 = zext i1 %tobool13 to i64, !dbg !4548
  %arrayidx15 = getelementptr inbounds [2 x [2 x [2 x i32 (i8*, i8*)*]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]]* %arrayidx, i64 0, i64 %idxprom14, !dbg !4548, !ctir !723
  %16 = load i8, i8* @sort_reverse, align 1, !dbg !4550, !tbaa !2461
  %tobool16 = trunc i8 %16 to i1, !dbg !4550
  %idxprom17 = zext i1 %tobool16 to i64, !dbg !4548
  %arrayidx18 = getelementptr inbounds [2 x [2 x i32 (i8*, i8*)*]], [2 x [2 x i32 (i8*, i8*)*]]* %arrayidx15, i64 0, i64 %idxprom17, !dbg !4548, !ctir !725
  %17 = load i8, i8* @directories_first, align 1, !dbg !4551, !tbaa !2461
  %tobool19 = trunc i8 %17 to i1, !dbg !4551
  %idxprom20 = zext i1 %tobool19 to i64, !dbg !4548
  %arrayidx21 = getelementptr inbounds [2 x i32 (i8*, i8*)*], [2 x i32 (i8*, i8*)*]* %arrayidx18, i64 0, i64 %idxprom20, !dbg !4548, !ctir !727
  %18 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx21, align 8, !dbg !4548, !tbaa !2442
  call void @mpsort(i8** %10, i64 %11, i32 (i8*, i8*)* %18), !dbg !4552
  br label %return, !dbg !4553

return:                                           ; preds = %cond.end, %if.then2
  ret void, !dbg !4553
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extract_dirs_from_files(i8* %dirname, i1 zeroext %command_line_arg) #0 !dbg !4554 !ctir !700 {
entry:
  %dirname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %i = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ignore_dot_and_dot_dot = alloca i8, align 1, !ctir !141
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  %name17 = alloca i8*, align 8, !ctir !143
  %f32 = alloca %struct.fileinfo*, align 8, !ctir !252
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !4555, metadata !DIExpression()), !dbg !4556
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4557, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4559, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4561, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata i8* %ignore_dot_and_dot_dot, metadata !4563, metadata !DIExpression()), !dbg !4564
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !4565, !tbaa !2442
  %cmp = icmp ne i8* %0, null, !dbg !4566
  %frombool1 = zext i1 %cmp to i8, !dbg !4564
  store i8 %frombool1, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4564, !tbaa !2461
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !4567, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !4567
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4569

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4570, !tbaa !2442
  %tobool2 = icmp ne %struct.hash_table* %2, null, !dbg !4570
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4571

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !4572, !tbaa !2442
  call void @queue_directory(i8* null, i8* %3, i1 zeroext false), !dbg !4574
  br label %if.end, !dbg !4575

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !4576, !tbaa !2579
  store i64 %4, i64* %i, align 8, !dbg !4578, !tbaa !2579
  br label %for.cond, !dbg !4579

for.cond:                                         ; preds = %if.end27, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !4580, !tbaa !2579
  %dec = add i64 %5, -1, !dbg !4580
  store i64 %dec, i64* %i, align 8, !dbg !4580, !tbaa !2579
  %cmp3 = icmp ne i64 %5, 0, !dbg !4582
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4583

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !4584, metadata !DIExpression()), !dbg !4586
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !4587, !tbaa !2442
  %7 = load i64, i64* %i, align 8, !dbg !4588, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !4587, !ctir !663
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !4587, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !4587
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !4586, !tbaa !2442
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4589, !tbaa !2442
  %call = call zeroext i1 @is_directory(%struct.fileinfo* %10), !dbg !4591
  br i1 %call, label %land.lhs.true4, label %if.end27, !dbg !4592

land.lhs.true4:                                   ; preds = %for.body
  %11 = load i8, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4593, !tbaa !2461
  %tobool5 = trunc i8 %11 to i1, !dbg !4593
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !4594

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4595, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !4596, !ctir !185
  %13 = load i8*, i8** %name, align 8, !dbg !4596, !tbaa !4017, !ctir !143
  %call6 = call zeroext i1 @basename_is_dot_or_dotdot(i8* %13), !dbg !4597
  br i1 %call6, label %if.end27, label %if.then7, !dbg !4598

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true4
  %14 = load i8*, i8** %dirname.addr, align 8, !dbg !4599, !tbaa !2442
  %tobool8 = icmp ne i8* %14, null, !dbg !4599
  br i1 %tobool8, label %lor.lhs.false9, label %if.then14, !dbg !4602

lor.lhs.false9:                                   ; preds = %if.then7
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4603, !tbaa !2442
  %name10 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 0, !dbg !4604, !ctir !185
  %16 = load i8*, i8** %name10, align 8, !dbg !4604, !tbaa !4017, !ctir !143
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !4603, !ctir !143
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !4603, !tbaa !2497
  %conv = sext i8 %17 to i32, !dbg !4603
  %cmp12 = icmp eq i32 %conv, 47, !dbg !4605
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4606

if.then14:                                        ; preds = %lor.lhs.false9, %if.then7
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4607, !tbaa !2442
  %name15 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 0, !dbg !4608, !ctir !185
  %19 = load i8*, i8** %name15, align 8, !dbg !4608, !tbaa !4017, !ctir !143
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4609, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 1, !dbg !4610, !ctir !185
  %21 = load i8*, i8** %linkname, align 8, !dbg !4610, !tbaa !4155, !ctir !143
  %22 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4611, !tbaa !2461
  %tobool16 = trunc i8 %22 to i1, !dbg !4611
  call void @queue_directory(i8* %19, i8* %21, i1 zeroext %tobool16), !dbg !4612
  br label %if.end22, !dbg !4612

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.dbg.declare(metadata i8** %name17, metadata !4613, metadata !DIExpression()), !dbg !4615
  %23 = load i8*, i8** %dirname.addr, align 8, !dbg !4616, !tbaa !2442
  %24 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4617, !tbaa !2442
  %name18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %24, i32 0, i32 0, !dbg !4618, !ctir !185
  %25 = load i8*, i8** %name18, align 8, !dbg !4618, !tbaa !4017, !ctir !143
  %call19 = call i8* @file_name_concat(i8* %23, i8* %25, i8** null), !dbg !4619
  store i8* %call19, i8** %name17, align 8, !dbg !4615, !tbaa !2442
  %26 = load i8*, i8** %name17, align 8, !dbg !4620, !tbaa !2442
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4621, !tbaa !2442
  %linkname20 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 1, !dbg !4622, !ctir !185
  %28 = load i8*, i8** %linkname20, align 8, !dbg !4622, !tbaa !4155, !ctir !143
  %29 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4623, !tbaa !2461
  %tobool21 = trunc i8 %29 to i1, !dbg !4623
  call void @queue_directory(i8* %26, i8* %28, i1 zeroext %tobool21), !dbg !4624
  %30 = load i8*, i8** %name17, align 8, !dbg !4625, !tbaa !2442
  call void @free(i8* %30) #13, !dbg !4626
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then14
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4627, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 4, !dbg !4629, !ctir !185
  %32 = load i32, i32* %filetype, align 8, !dbg !4629, !tbaa !3815, !ctir !36
  %cmp23 = icmp eq i32 %32, 9, !dbg !4630
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4631

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4632, !tbaa !2442
  call void @free_ent(%struct.fileinfo* %33), !dbg !4633
  br label %if.end26, !dbg !4633

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %if.end27, !dbg !4634

if.end27:                                         ; preds = %if.end26, %lor.lhs.false, %for.body
  br label %for.cond, !dbg !4635, !llvm.loop !4636

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4638, !tbaa !2579
  store i64 0, i64* %j, align 8, !dbg !4640, !tbaa !2579
  br label %for.cond28, !dbg !4641

for.cond28:                                       ; preds = %for.inc, %for.end
  %34 = load i64, i64* %i, align 8, !dbg !4642, !tbaa !2579
  %35 = load i64, i64* @cwd_n_used, align 8, !dbg !4644, !tbaa !2579
  %cmp29 = icmp ult i64 %34, %35, !dbg !4645
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !4646

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f32, metadata !4647, metadata !DIExpression()), !dbg !4649
  %36 = load i8**, i8*** @sorted_file, align 8, !dbg !4650, !tbaa !2442
  %37 = load i64, i64* %i, align 8, !dbg !4651, !tbaa !2579
  %arrayidx33 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !4650, !ctir !663
  %38 = load i8*, i8** %arrayidx33, align 8, !dbg !4650, !tbaa !2442
  %39 = bitcast i8* %38 to %struct.fileinfo*, !dbg !4650
  store %struct.fileinfo* %39, %struct.fileinfo** %f32, align 8, !dbg !4649, !tbaa !2442
  %40 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4652, !tbaa !2442
  %41 = bitcast %struct.fileinfo* %40 to i8*, !dbg !4652
  %42 = load i8**, i8*** @sorted_file, align 8, !dbg !4653, !tbaa !2442
  %43 = load i64, i64* %j, align 8, !dbg !4654, !tbaa !2579
  %arrayidx34 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !4653, !ctir !663
  store i8* %41, i8** %arrayidx34, align 8, !dbg !4655, !tbaa !2442
  %44 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4656, !tbaa !2442
  %filetype35 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %44, i32 0, i32 4, !dbg !4657, !ctir !185
  %45 = load i32, i32* %filetype35, align 8, !dbg !4657, !tbaa !3815, !ctir !36
  %cmp36 = icmp ne i32 %45, 9, !dbg !4658
  %conv37 = zext i1 %cmp36 to i32, !dbg !4658
  %conv38 = sext i32 %conv37 to i64, !dbg !4659
  %46 = load i64, i64* %j, align 8, !dbg !4660, !tbaa !2579
  %add = add i64 %46, %conv38, !dbg !4660
  store i64 %add, i64* %j, align 8, !dbg !4660, !tbaa !2579
  br label %for.inc, !dbg !4661

for.inc:                                          ; preds = %for.body31
  %47 = load i64, i64* %i, align 8, !dbg !4662, !tbaa !2579
  %inc = add i64 %47, 1, !dbg !4662
  store i64 %inc, i64* %i, align 8, !dbg !4662, !tbaa !2579
  br label %for.cond28, !dbg !4663, !llvm.loop !4664

for.end39:                                        ; preds = %for.cond28
  %48 = load i64, i64* %j, align 8, !dbg !4666, !tbaa !2579
  store i64 %48, i64* @cwd_n_used, align 8, !dbg !4667, !tbaa !2579
  ret void, !dbg !4668
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_current_files() #0 !dbg !4669 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4670, metadata !DIExpression()), !dbg !4671
  %0 = load i32, i32* @format, align 4, !dbg !4672, !tbaa !2497
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb8
    i32 0, label %sw.bb9
  ], !dbg !4673

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4674, !tbaa !2579
  br label %for.cond, !dbg !4677

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i64, i64* %i, align 8, !dbg !4678, !tbaa !2579
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4680, !tbaa !2579
  %cmp = icmp ult i64 %1, %2, !dbg !4681
  br i1 %cmp, label %for.body, label %for.end, !dbg !4682

for.body:                                         ; preds = %for.cond
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4683, !tbaa !2442
  %4 = load i64, i64* %i, align 8, !dbg !4685, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %4, !dbg !4683, !ctir !663
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4683, !tbaa !2442
  %6 = bitcast i8* %5 to %struct.fileinfo*, !dbg !4683
  %call = call i64 @print_file_name_and_frills(%struct.fileinfo* %6, i64 0), !dbg !4686
  %call1 = call i32 @putchar_unlocked(i32 10), !dbg !4687
  br label %for.inc, !dbg !4688

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !4689, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !4689
  store i64 %inc, i64* %i, align 8, !dbg !4689, !tbaa !2579
  br label %for.cond, !dbg !4690, !llvm.loop !4691

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4693

sw.bb2:                                           ; preds = %entry
  %8 = load i64, i64* @line_length, align 8, !dbg !4694, !tbaa !2579
  %tobool = icmp ne i64 %8, 0, !dbg !4694
  br i1 %tobool, label %if.else, label %if.then, !dbg !4696

if.then:                                          ; preds = %sw.bb2
  call void @print_with_separator(i8 signext 32), !dbg !4697
  br label %if.end, !dbg !4697

if.else:                                          ; preds = %sw.bb2
  call void @print_many_per_line(), !dbg !4698
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !4699

sw.bb3:                                           ; preds = %entry
  %9 = load i64, i64* @line_length, align 8, !dbg !4700, !tbaa !2579
  %tobool4 = icmp ne i64 %9, 0, !dbg !4700
  br i1 %tobool4, label %if.else6, label %if.then5, !dbg !4702

if.then5:                                         ; preds = %sw.bb3
  call void @print_with_separator(i8 signext 32), !dbg !4703
  br label %if.end7, !dbg !4703

if.else6:                                         ; preds = %sw.bb3
  call void @print_horizontal(), !dbg !4704
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  br label %sw.epilog, !dbg !4705

sw.bb8:                                           ; preds = %entry
  call void @print_with_separator(i8 signext 44), !dbg !4706
  br label %sw.epilog, !dbg !4707

sw.bb9:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4708, !tbaa !2579
  br label %for.cond10, !dbg !4710

for.cond10:                                       ; preds = %for.inc16, %sw.bb9
  %10 = load i64, i64* %i, align 8, !dbg !4711, !tbaa !2579
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4713, !tbaa !2579
  %cmp11 = icmp ult i64 %10, %11, !dbg !4714
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !4715

for.body12:                                       ; preds = %for.cond10
  call void @set_normal_color(), !dbg !4716
  %12 = load i8**, i8*** @sorted_file, align 8, !dbg !4718, !tbaa !2442
  %13 = load i64, i64* %i, align 8, !dbg !4719, !tbaa !2579
  %arrayidx13 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !4718, !ctir !663
  %14 = load i8*, i8** %arrayidx13, align 8, !dbg !4718, !tbaa !2442
  %15 = bitcast i8* %14 to %struct.fileinfo*, !dbg !4718
  call void @print_long_format(%struct.fileinfo* %15), !dbg !4720
  br label %do.body, !dbg !4721

do.body:                                          ; preds = %for.body12
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !4722
  %16 = load i64, i64* @dired_pos, align 8, !dbg !4722, !tbaa !2579
  %inc15 = add i64 %16, 1, !dbg !4722
  store i64 %inc15, i64* @dired_pos, align 8, !dbg !4722, !tbaa !2579
  br label %do.end, !dbg !4722

do.end:                                           ; preds = %do.body
  br label %for.inc16, !dbg !4724

for.inc16:                                        ; preds = %do.end
  %17 = load i64, i64* %i, align 8, !dbg !4725, !tbaa !2579
  %inc17 = add i64 %17, 1, !dbg !4725
  store i64 %inc17, i64* %i, align 8, !dbg !4725, !tbaa !2579
  br label %for.cond10, !dbg !4726, !llvm.loop !4727

for.end18:                                        ; preds = %for.cond10
  br label %sw.epilog, !dbg !4729

sw.epilog:                                        ; preds = %entry, %for.end18, %sw.bb8, %if.end7, %if.end, %for.end
  ret void, !dbg !4730
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal { i64, i64 } @dev_ino_pop() #0 !dbg !4731 !ctir !346 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !253
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !4734, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !4736, metadata !DIExpression()), !dbg !4737
  store i32 16, i32* %dev_ino_size, align 4, !dbg !4737, !tbaa !2436
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !4738, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4741, metadata !DIExpression()), !dbg !4743
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !4743, !ctir !349
  %2 = load i8*, i8** %next_free, align 8, !dbg !4743, !tbaa !4744, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !4743, !ctir !349
  %4 = load i8*, i8** %object_base, align 8, !dbg !4743, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4743
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4743
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4743
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4743, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !4743, !tbaa !2579
  %cmp = icmp ule i64 %conv, %5, !dbg !4738
  br i1 %cmp, label %if.then, label %if.else, !dbg !4747

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4747

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.dev_ino_pop, i64 0, i64 0)) #15, !dbg !4738
  unreachable, !dbg !4738

if.end:                                           ; preds = %if.then
  %6 = load i32, i32* %dev_ino_size, align 4, !dbg !4748, !tbaa !2436
  %sub = sub nsw i32 0, %6, !dbg !4748
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4748, !tbaa !4744, !ctir !143
  %idx.ext = sext i32 %sub to i64, !dbg !4748
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !4748
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4748, !tbaa !4744, !ctir !143
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4749, !tbaa !4744, !ctir !143
  store i8* %8, i8** %vdi, align 8, !dbg !4750, !tbaa !2442
  %9 = load i8*, i8** %vdi, align 8, !dbg !4751, !tbaa !2442
  %10 = bitcast i8* %9 to %struct.dev_ino*, !dbg !4751
  store %struct.dev_ino* %10, %struct.dev_ino** %di, align 8, !dbg !4752, !tbaa !2442
  %11 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4753, !tbaa !2442
  %12 = bitcast %struct.dev_ino* %retval to i8*, !dbg !4754
  %13 = bitcast %struct.dev_ino* %11 to i8*, !dbg !4754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !4754, !tbaa.struct !4755
  %14 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !4756
  %15 = load { i64, i64 }, { i64, i64 }* %14, align 8, !dbg !4756
  ret { i64, i64 } %15, !dbg !4756
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_pending_ent(%struct.pending* %p) #0 !dbg !4757 !ctir !395 {
entry:
  %p.addr = alloca %struct.pending*, align 8
  store %struct.pending* %p, %struct.pending** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.pending** %p.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  %0 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4760, !tbaa !2442
  %name = getelementptr inbounds %struct.pending, %struct.pending* %0, i32 0, i32 0, !dbg !4761, !ctir !238
  %1 = load i8*, i8** %name, align 8, !dbg !4761, !tbaa !2660, !ctir !143
  call void @free(i8* %1) #13, !dbg !4762
  %2 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4763, !tbaa !2442
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %2, i32 0, i32 1, !dbg !4764, !ctir !238
  %3 = load i8*, i8** %realname, align 8, !dbg !4764, !tbaa !2688, !ctir !143
  call void @free(i8* %3) #13, !dbg !4765
  %4 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4766, !tbaa !2442
  %5 = bitcast %struct.pending* %4 to i8*, !dbg !4766
  call void @free(i8* %5) #13, !dbg !4767
  ret void, !dbg !4768
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_dir(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !979 !ctir !607 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %next = alloca %struct.dirent*, align 8, !ctir !613
  %total_blocks = alloca i64, align 8, !ctir !168
  %dir_stat = alloca %struct.stat, align 8, !ctir !191
  %fd = alloca i32, align 4, !ctir !27
  %absolute_name = alloca i8*, align 8, !ctir !143
  %type = alloca i32, align 4, !ctir !36
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca [652 x i8], align 16, !ctir !622
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4769, metadata !DIExpression()), !dbg !4770
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4775, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.declare(metadata %struct.dirent** %next, metadata !4777, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.declare(metadata i64* %total_blocks, metadata !4779, metadata !DIExpression()), !dbg !4780
  store i64 0, i64* %total_blocks, align 8, !dbg !4780, !tbaa !2579
  %call = call i32* @__errno_location() #17, !dbg !4781
  store i32 0, i32* %call, align 4, !dbg !4782, !tbaa !2436, !ctir !27
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4783, !tbaa !2442
  %call1 = call %struct.__dirstream* @opendir(i8* %0), !dbg !4784
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4785, !tbaa !2442
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4786, !tbaa !2442
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !4786
  br i1 %tobool, label %if.end, label %if.then, !dbg !4788

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4789, !tbaa !2461
  %tobool2 = trunc i8 %2 to i1, !dbg !4789
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !4791
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4792, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool2, i8* %call3, i8* %3), !dbg !4793
  br label %if.end150, !dbg !4794

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4795, !tbaa !2442
  %tobool4 = icmp ne %struct.hash_table* %4, null, !dbg !4795
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4797

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.stat* %dir_stat, metadata !4798, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4801, metadata !DIExpression()), !dbg !4802
  %5 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4803, !tbaa !2442
  %call6 = call i32 @dirfd(%struct.__dirstream* %5) #13, !dbg !4804
  store i32 %call6, i32* %fd, align 4, !dbg !4802, !tbaa !2436
  %6 = load i32, i32* %fd, align 4, !dbg !4805, !tbaa !2436
  %cmp = icmp sle i32 0, %6, !dbg !4807
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4808

cond.true:                                        ; preds = %if.then5
  %7 = load i32, i32* %fd, align 4, !dbg !4809, !tbaa !2436
  %call7 = call i32 @fstat(i32 %7, %struct.stat* %dir_stat) #13, !dbg !4810
  br label %cond.end, !dbg !4808

cond.false:                                       ; preds = %if.then5
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4811, !tbaa !2442
  %call8 = call i32 @stat(i8* %8, %struct.stat* %dir_stat) #13, !dbg !4812
  br label %cond.end, !dbg !4808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !4808
  %cmp9 = icmp slt i32 %cond, 0, !dbg !4813
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !4814

if.then10:                                        ; preds = %cond.end
  %9 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4815, !tbaa !2461
  %tobool11 = trunc i8 %9 to i1, !dbg !4815
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.204, i64 0, i64 0)) #13, !dbg !4817
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4818, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool11, i8* %call12, i8* %10), !dbg !4819
  %11 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4820, !tbaa !2442
  %call13 = call i32 @closedir(%struct.__dirstream* %11), !dbg !4821
  br label %if.end150, !dbg !4822

if.end14:                                         ; preds = %cond.end
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4823, !ctir !191
  %12 = load i64, i64* %st_dev, align 8, !dbg !4823, !tbaa !4825, !ctir !195
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4826, !ctir !191
  %13 = load i64, i64* %st_ino, align 8, !dbg !4826, !tbaa !4827, !ctir !197
  %call15 = call zeroext i1 @visit_dir(i64 %12, i64 %13), !dbg !4828
  br i1 %call15, label %if.then16, label %if.end20, !dbg !4829

if.then16:                                        ; preds = %if.end14
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0)) #13, !dbg !4830
  %14 = load i8*, i8** %name.addr, align 8, !dbg !4832, !tbaa !2442
  %call18 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !4832
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17, i8* %call18), !dbg !4833
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4834, !tbaa !2442
  %call19 = call i32 @closedir(%struct.__dirstream* %15), !dbg !4835
  call void @set_exit_status(i1 zeroext true), !dbg !4836
  br label %if.end150, !dbg !4837

if.end20:                                         ; preds = %if.end14
  %st_dev21 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4838, !ctir !191
  %16 = load i64, i64* %st_dev21, align 8, !dbg !4838, !tbaa !4825, !ctir !195
  %st_ino22 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4839, !ctir !191
  %17 = load i64, i64* %st_ino22, align 8, !dbg !4839, !tbaa !4827, !ctir !197
  call void @dev_ino_push(i64 %16, i64 %17), !dbg !4840
  br label %if.end23, !dbg !4841

if.end23:                                         ; preds = %if.end20, %if.end
  call void @clear_files(), !dbg !4842
  %18 = load i8, i8* @recursive, align 1, !dbg !4843, !tbaa !2461
  %tobool24 = trunc i8 %18 to i1, !dbg !4843
  br i1 %tobool24, label %if.then26, label %lor.lhs.false, !dbg !4845

lor.lhs.false:                                    ; preds = %if.end23
  %19 = load i8, i8* @print_dir_name, align 1, !dbg !4846, !tbaa !2461
  %tobool25 = trunc i8 %19 to i1, !dbg !4846
  br i1 %tobool25, label %if.then26, label %if.end58, !dbg !4847

if.then26:                                        ; preds = %lor.lhs.false, %if.end23
  %20 = load i8, i8* @print_dir.first, align 1, !dbg !4848, !tbaa !2461
  %tobool27 = trunc i8 %20 to i1, !dbg !4848
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4851

if.then28:                                        ; preds = %if.then26
  br label %do.body, !dbg !4852

do.body:                                          ; preds = %if.then28
  %call29 = call i32 @putchar_unlocked(i32 10), !dbg !4853
  %21 = load i64, i64* @dired_pos, align 8, !dbg !4853, !tbaa !2579
  %inc = add i64 %21, 1, !dbg !4853
  store i64 %inc, i64* @dired_pos, align 8, !dbg !4853, !tbaa !2579
  br label %do.end, !dbg !4853

do.end:                                           ; preds = %do.body
  br label %if.end30, !dbg !4853

if.end30:                                         ; preds = %do.end, %if.then26
  store i8 0, i8* @print_dir.first, align 1, !dbg !4855, !tbaa !2461
  br label %do.body31, !dbg !4856

do.body31:                                        ; preds = %if.end30
  %22 = load i8, i8* @dired, align 1, !dbg !4857, !tbaa !2461
  %tobool32 = trunc i8 %22 to i1, !dbg !4857
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !4860

if.then33:                                        ; preds = %do.body31
  br label %do.body34, !dbg !4857

do.body34:                                        ; preds = %if.then33
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4861, !tbaa !2442
  %call35 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %23), !dbg !4861
  %24 = load i64, i64* @dired_pos, align 8, !dbg !4861, !tbaa !2579
  %add = add i64 %24, 2, !dbg !4861
  store i64 %add, i64* @dired_pos, align 8, !dbg !4861, !tbaa !2579
  br label %do.end36, !dbg !4861

do.end36:                                         ; preds = %do.body34
  br label %if.end37, !dbg !4861

if.end37:                                         ; preds = %do.end36, %do.body31
  br label %do.end38, !dbg !4860

do.end38:                                         ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %absolute_name, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i8* null, i8** %absolute_name, align 8, !dbg !4864, !tbaa !2442
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !4865, !tbaa !2461
  %tobool39 = trunc i8 %25 to i1, !dbg !4865
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !4867

if.then40:                                        ; preds = %do.end38
  %26 = load i8*, i8** %name.addr, align 8, !dbg !4868, !tbaa !2442
  %call41 = call i8* @canonicalize_filename_mode(i8* %26, i32 2), !dbg !4870
  store i8* %call41, i8** %absolute_name, align 8, !dbg !4871, !tbaa !2442
  %27 = load i8*, i8** %absolute_name, align 8, !dbg !4872, !tbaa !2442
  %tobool42 = icmp ne i8* %27, null, !dbg !4872
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !4874

if.then43:                                        ; preds = %if.then40
  %28 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4875, !tbaa !2461
  %tobool44 = trunc i8 %28 to i1, !dbg !4875
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !4876
  %29 = load i8*, i8** %name.addr, align 8, !dbg !4877, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool44, i8* %call45, i8* %29), !dbg !4878
  br label %if.end46, !dbg !4878

if.end46:                                         ; preds = %if.then43, %if.then40
  br label %if.end47, !dbg !4879

if.end47:                                         ; preds = %if.end46, %do.end38
  %30 = load i8*, i8** %realname.addr, align 8, !dbg !4880, !tbaa !2442
  %tobool48 = icmp ne i8* %30, null, !dbg !4880
  br i1 %tobool48, label %cond.true49, label %cond.false50, !dbg !4880

cond.true49:                                      ; preds = %if.end47
  %31 = load i8*, i8** %realname.addr, align 8, !dbg !4881, !tbaa !2442
  br label %cond.end51, !dbg !4880

cond.false50:                                     ; preds = %if.end47
  %32 = load i8*, i8** %name.addr, align 8, !dbg !4882, !tbaa !2442
  br label %cond.end51, !dbg !4880

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i8* [ %31, %cond.true49 ], [ %32, %cond.false50 ], !dbg !4880
  %33 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !4883, !tbaa !2442
  %34 = load i8*, i8** %absolute_name, align 8, !dbg !4884, !tbaa !2442
  %call53 = call i64 @quote_name(i8* %cond52, %struct.quoting_options* %33, i32 -1, %struct.bin_str* null, i1 zeroext true, %struct.obstack* @subdired_obstack, i8* %34), !dbg !4885
  %35 = load i8*, i8** %absolute_name, align 8, !dbg !4886, !tbaa !2442
  call void @free(i8* %35) #13, !dbg !4887
  br label %do.body54, !dbg !4888

do.body54:                                        ; preds = %cond.end51
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4889, !tbaa !2442
  %call55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i64 0, i64 0), %struct._IO_FILE* %36), !dbg !4889
  %37 = load i64, i64* @dired_pos, align 8, !dbg !4889, !tbaa !2579
  %add56 = add i64 %37, 2, !dbg !4889
  store i64 %add56, i64* @dired_pos, align 8, !dbg !4889, !tbaa !2579
  br label %do.end57, !dbg !4889

do.end57:                                         ; preds = %do.body54
  br label %if.end58, !dbg !4891

if.end58:                                         ; preds = %do.end57, %lor.lhs.false
  br label %while.body, !dbg !4892

while.body:                                       ; preds = %if.end58, %if.end100
  %call59 = call i32* @__errno_location() #17, !dbg !4893
  store i32 0, i32* %call59, align 4, !dbg !4895, !tbaa !2436, !ctir !27
  %38 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4896, !tbaa !2442
  %call60 = call %struct.dirent* @readdir(%struct.__dirstream* %38), !dbg !4897
  store %struct.dirent* %call60, %struct.dirent** %next, align 8, !dbg !4898, !tbaa !2442
  %39 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4899, !tbaa !2442
  %tobool61 = icmp ne %struct.dirent* %39, null, !dbg !4899
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !4901

if.then62:                                        ; preds = %while.body
  %40 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4902, !tbaa !2442
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4, !dbg !4905, !ctir !614
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4902
  %call63 = call zeroext i1 @file_ignored(i8* %arraydecay), !dbg !4906
  br i1 %call63, label %if.end86, label %if.then64, !dbg !4907

if.then64:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4908, metadata !DIExpression()), !dbg !4910
  store i32 0, i32* %type, align 4, !dbg !4910, !tbaa !2497
  %41 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4911, !tbaa !2442
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %41, i32 0, i32 3, !dbg !4912, !ctir !614
  %42 = load i8, i8* %d_type, align 2, !dbg !4912, !tbaa !4913, !ctir !591
  %conv = zext i8 %42 to i32, !dbg !4911
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 2, label %sw.bb65
    i32 4, label %sw.bb66
    i32 1, label %sw.bb67
    i32 10, label %sw.bb68
    i32 8, label %sw.bb69
    i32 12, label %sw.bb70
    i32 14, label %sw.bb71
  ], !dbg !4915

sw.bb:                                            ; preds = %if.then64
  store i32 4, i32* %type, align 4, !dbg !4916, !tbaa !2497
  br label %sw.epilog, !dbg !4918

sw.bb65:                                          ; preds = %if.then64
  store i32 2, i32* %type, align 4, !dbg !4919, !tbaa !2497
  br label %sw.epilog, !dbg !4920

sw.bb66:                                          ; preds = %if.then64
  store i32 3, i32* %type, align 4, !dbg !4921, !tbaa !2497
  br label %sw.epilog, !dbg !4922

sw.bb67:                                          ; preds = %if.then64
  store i32 1, i32* %type, align 4, !dbg !4923, !tbaa !2497
  br label %sw.epilog, !dbg !4924

sw.bb68:                                          ; preds = %if.then64
  store i32 6, i32* %type, align 4, !dbg !4925, !tbaa !2497
  br label %sw.epilog, !dbg !4926

sw.bb69:                                          ; preds = %if.then64
  store i32 5, i32* %type, align 4, !dbg !4927, !tbaa !2497
  br label %sw.epilog, !dbg !4928

sw.bb70:                                          ; preds = %if.then64
  store i32 7, i32* %type, align 4, !dbg !4929, !tbaa !2497
  br label %sw.epilog, !dbg !4930

sw.bb71:                                          ; preds = %if.then64
  store i32 8, i32* %type, align 4, !dbg !4931, !tbaa !2497
  br label %sw.epilog, !dbg !4932

sw.epilog:                                        ; preds = %if.then64, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb
  %43 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4933, !tbaa !2442
  %d_name72 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !4934, !ctir !614
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name72, i64 0, i64 0, !dbg !4933
  %44 = load i32, i32* %type, align 4, !dbg !4935, !tbaa !2497
  %45 = load i8*, i8** %name.addr, align 8, !dbg !4936, !tbaa !2442
  %call74 = call i64 @gobble_file(i8* %arraydecay73, i32 %44, i64 0, i1 zeroext false, i8* %45), !dbg !4937
  %46 = load i64, i64* %total_blocks, align 8, !dbg !4938, !tbaa !2579
  %add75 = add i64 %46, %call74, !dbg !4938
  store i64 %add75, i64* %total_blocks, align 8, !dbg !4938, !tbaa !2579
  %47 = load i32, i32* @format, align 4, !dbg !4939, !tbaa !2497
  %cmp76 = icmp eq i32 %47, 1, !dbg !4941
  br i1 %cmp76, label %land.lhs.true, label %if.end85, !dbg !4942

land.lhs.true:                                    ; preds = %sw.epilog
  %48 = load i32, i32* @sort_type, align 4, !dbg !4943, !tbaa !2497
  %cmp78 = icmp eq i32 %48, -1, !dbg !4944
  br i1 %cmp78, label %land.lhs.true80, label %if.end85, !dbg !4945

land.lhs.true80:                                  ; preds = %land.lhs.true
  %49 = load i8, i8* @print_block_size, align 1, !dbg !4946, !tbaa !2461
  %tobool81 = trunc i8 %49 to i1, !dbg !4946
  br i1 %tobool81, label %if.end85, label %land.lhs.true82, !dbg !4947

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %50 = load i8, i8* @recursive, align 1, !dbg !4948, !tbaa !2461
  %tobool83 = trunc i8 %50 to i1, !dbg !4948
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !4949

if.then84:                                        ; preds = %land.lhs.true82
  call void @sort_files(), !dbg !4950
  call void @print_current_files(), !dbg !4952
  call void @clear_files(), !dbg !4953
  br label %if.end85, !dbg !4954

if.end85:                                         ; preds = %if.then84, %land.lhs.true82, %land.lhs.true80, %land.lhs.true, %sw.epilog
  br label %if.end86, !dbg !4955

if.end86:                                         ; preds = %if.end85, %if.then62
  br label %if.end100, !dbg !4956

if.else:                                          ; preds = %while.body
  %call87 = call i32* @__errno_location() #17, !dbg !4957
  %51 = load i32, i32* %call87, align 4, !dbg !4957, !tbaa !2436, !ctir !27
  %cmp88 = icmp ne i32 %51, 0, !dbg !4959
  br i1 %cmp88, label %if.then90, label %if.else98, !dbg !4960

if.then90:                                        ; preds = %if.else
  %52 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4961, !tbaa !2461
  %tobool91 = trunc i8 %52 to i1, !dbg !4961
  %call92 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.209, i64 0, i64 0)) #13, !dbg !4963
  %53 = load i8*, i8** %name.addr, align 8, !dbg !4964, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool91, i8* %call92, i8* %53), !dbg !4965
  %call93 = call i32* @__errno_location() #17, !dbg !4966
  %54 = load i32, i32* %call93, align 4, !dbg !4966, !tbaa !2436, !ctir !27
  %cmp94 = icmp ne i32 %54, 75, !dbg !4968
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4969

if.then96:                                        ; preds = %if.then90
  br label %while.end, !dbg !4970

if.end97:                                         ; preds = %if.then90
  br label %if.end99, !dbg !4971

if.else98:                                        ; preds = %if.else
  br label %while.end, !dbg !4972

if.end99:                                         ; preds = %if.end97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end86
  call void @process_signals(), !dbg !4973
  br label %while.body, !dbg !4892, !llvm.loop !4974

while.end:                                        ; preds = %if.else98, %if.then96
  %55 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4976, !tbaa !2442
  %call101 = call i32 @closedir(%struct.__dirstream* %55), !dbg !4978
  %cmp102 = icmp ne i32 %call101, 0, !dbg !4979
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !4980

if.then104:                                       ; preds = %while.end
  %56 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4981, !tbaa !2461
  %tobool105 = trunc i8 %56 to i1, !dbg !4981
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #13, !dbg !4983
  %57 = load i8*, i8** %name.addr, align 8, !dbg !4984, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool105, i8* %call106, i8* %57), !dbg !4985
  br label %if.end107, !dbg !4986

if.end107:                                        ; preds = %if.then104, %while.end
  call void @sort_files(), !dbg !4987
  %58 = load i8, i8* @recursive, align 1, !dbg !4988, !tbaa !2461
  %tobool108 = trunc i8 %58 to i1, !dbg !4988
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !4990

if.then109:                                       ; preds = %if.end107
  %59 = load i8*, i8** %name.addr, align 8, !dbg !4991, !tbaa !2442
  call void @extract_dirs_from_files(i8* %59, i1 zeroext false), !dbg !4992
  br label %if.end110, !dbg !4992

if.end110:                                        ; preds = %if.then109, %if.end107
  %60 = load i32, i32* @format, align 4, !dbg !4993, !tbaa !2497
  %cmp111 = icmp eq i32 %60, 0, !dbg !4995
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !4996

lor.lhs.false113:                                 ; preds = %if.end110
  %61 = load i8, i8* @print_block_size, align 1, !dbg !4997, !tbaa !2461
  %tobool114 = trunc i8 %61 to i1, !dbg !4997
  br i1 %tobool114, label %if.then116, label %if.end147, !dbg !4998

if.then116:                                       ; preds = %lor.lhs.false113, %if.end110
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4999, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5002, metadata !DIExpression()), !dbg !5003
  br label %do.body117, !dbg !5004

do.body117:                                       ; preds = %if.then116
  %62 = load i8, i8* @dired, align 1, !dbg !5005, !tbaa !2461
  %tobool118 = trunc i8 %62 to i1, !dbg !5005
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !5008

if.then119:                                       ; preds = %do.body117
  br label %do.body120, !dbg !5005

do.body120:                                       ; preds = %if.then119
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5009, !tbaa !2442
  %call121 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %63), !dbg !5009
  %64 = load i64, i64* @dired_pos, align 8, !dbg !5009, !tbaa !2579
  %add122 = add i64 %64, 2, !dbg !5009
  store i64 %add122, i64* @dired_pos, align 8, !dbg !5009, !tbaa !2579
  br label %do.end123, !dbg !5009

do.end123:                                        ; preds = %do.body120
  br label %if.end124, !dbg !5009

if.end124:                                        ; preds = %do.end123, %do.body117
  br label %do.end125, !dbg !5008

do.end125:                                        ; preds = %if.end124
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0)) #13, !dbg !5011
  store i8* %call126, i8** %p, align 8, !dbg !5012, !tbaa !2442
  br label %do.body127, !dbg !5013

do.body127:                                       ; preds = %do.end125
  %65 = load i8*, i8** %p, align 8, !dbg !5014, !tbaa !2442
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5014, !tbaa !2442
  %call128 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66), !dbg !5014
  %67 = load i8*, i8** %p, align 8, !dbg !5014, !tbaa !2442
  %call129 = call i64 @strlen(i8* %67) #16, !dbg !5014
  %68 = load i64, i64* @dired_pos, align 8, !dbg !5014, !tbaa !2579
  %add130 = add i64 %68, %call129, !dbg !5014
  store i64 %add130, i64* @dired_pos, align 8, !dbg !5014, !tbaa !2579
  br label %do.end131, !dbg !5014

do.end131:                                        ; preds = %do.body127
  br label %do.body132, !dbg !5016

do.body132:                                       ; preds = %do.end131
  %call133 = call i32 @putchar_unlocked(i32 32), !dbg !5017
  %69 = load i64, i64* @dired_pos, align 8, !dbg !5017, !tbaa !2579
  %inc134 = add i64 %69, 1, !dbg !5017
  store i64 %inc134, i64* @dired_pos, align 8, !dbg !5017, !tbaa !2579
  br label %do.end135, !dbg !5017

do.end135:                                        ; preds = %do.body132
  %70 = load i64, i64* %total_blocks, align 8, !dbg !5019, !tbaa !2579
  %arraydecay136 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5020
  %71 = load i32, i32* @human_output_opts, align 4, !dbg !5021, !tbaa !2436
  %72 = load i64, i64* @output_block_size, align 8, !dbg !5022, !tbaa !2579
  %call137 = call i8* @human_readable(i64 %70, i8* %arraydecay136, i32 %71, i64 512, i64 %72), !dbg !5023
  store i8* %call137, i8** %p, align 8, !dbg !5024, !tbaa !2442
  br label %do.body138, !dbg !5025

do.body138:                                       ; preds = %do.end135
  %73 = load i8*, i8** %p, align 8, !dbg !5026, !tbaa !2442
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5026, !tbaa !2442
  %call139 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !5026
  %75 = load i8*, i8** %p, align 8, !dbg !5026, !tbaa !2442
  %call140 = call i64 @strlen(i8* %75) #16, !dbg !5026
  %76 = load i64, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2579
  %add141 = add i64 %76, %call140, !dbg !5026
  store i64 %add141, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2579
  br label %do.end142, !dbg !5026

do.end142:                                        ; preds = %do.body138
  br label %do.body143, !dbg !5028

do.body143:                                       ; preds = %do.end142
  %call144 = call i32 @putchar_unlocked(i32 10), !dbg !5029
  %77 = load i64, i64* @dired_pos, align 8, !dbg !5029, !tbaa !2579
  %inc145 = add i64 %77, 1, !dbg !5029
  store i64 %inc145, i64* @dired_pos, align 8, !dbg !5029, !tbaa !2579
  br label %do.end146, !dbg !5029

do.end146:                                        ; preds = %do.body143
  br label %if.end147, !dbg !5031

if.end147:                                        ; preds = %do.end146, %lor.lhs.false113
  %78 = load i64, i64* @cwd_n_used, align 8, !dbg !5032, !tbaa !2579
  %tobool148 = icmp ne i64 %78, 0, !dbg !5032
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !5034

if.then149:                                       ; preds = %if.end147
  call void @print_current_files(), !dbg !5035
  br label %if.end150, !dbg !5035

if.end150:                                        ; preds = %if.then, %if.then10, %if.then16, %if.then149, %if.end147
  ret void, !dbg !5036
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_color() #0 !dbg !5037 !ctir !341 {
entry:
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5038
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5039
  ret void, !dbg !5040
}

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_restore() #0 !dbg !5041 !ctir !341 {
entry:
  call void @signal_setup(i1 zeroext false), !dbg !5042
  ret void, !dbg !5043
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dired_dump_obstack(i8* %prefix, %struct.obstack* %os) #0 !dbg !5044 !ctir !508 {
entry:
  %prefix.addr = alloca i8*, align 8
  %os.addr = alloca %struct.obstack*, align 8
  %n_pos = alloca i64, align 8, !ctir !149
  %__o = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  %pos = alloca i64*, align 8, !ctir !148
  %__o1 = alloca %struct.obstack*, align 8, !ctir !510
  %__value = alloca i8*, align 8, !ctir !167
  %tmp25 = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  store %struct.obstack* %os, %struct.obstack** %os.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %os.addr, metadata !5047, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.declare(metadata i64* %n_pos, metadata !5049, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5051, metadata !DIExpression()), !dbg !5053
  %0 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5053, !tbaa !2442
  store %struct.obstack* %0, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !5053, !ctir !349
  %2 = load i8*, i8** %next_free, align 8, !dbg !5053, !tbaa !4744, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !5053, !ctir !349
  %4 = load i8*, i8** %object_base, align 8, !dbg !5053, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !5053
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !5053
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5053
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5053, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !5053, !tbaa !2579
  %div = udiv i64 %5, 8, !dbg !5054
  store i64 %div, i64* %n_pos, align 8, !dbg !5055, !tbaa !2579
  %6 = load i64, i64* %n_pos, align 8, !dbg !5056, !tbaa !2579
  %cmp = icmp ugt i64 %6, 0, !dbg !5058
  br i1 %cmp, label %if.then, label %if.end29, !dbg !5059

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64** %pos, metadata !5060, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5063, metadata !DIExpression()), !dbg !5065
  %7 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5065, !tbaa !2442
  store %struct.obstack* %7, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !5066, metadata !DIExpression()), !dbg !5065
  %8 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %object_base1 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 2, !dbg !5065, !ctir !350
  %9 = load i8*, i8** %object_base1, align 8, !dbg !5065, !tbaa !4746, !ctir !143
  store i8* %9, i8** %__value, align 8, !dbg !5065, !tbaa !2442
  %10 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5067, !tbaa !2442
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !5067, !ctir !350
  %11 = load i8*, i8** %next_free2, align 8, !dbg !5067, !tbaa !4744, !ctir !143
  %12 = load i8*, i8** %__value, align 8, !dbg !5067, !tbaa !2442
  %cmp3 = icmp eq i8* %11, %12, !dbg !5067
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5065

if.then4:                                         ; preds = %if.then
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5067, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 10, !dbg !5067, !ctir !350
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !5067
  %bf.clear = and i8 %bf.load, -3, !dbg !5067
  %bf.set = or i8 %bf.clear, 2, !dbg !5067
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !5067
  br label %if.end, !dbg !5067

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3, !dbg !5065, !ctir !350
  %15 = load i8*, i8** %next_free5, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast6 = ptrtoint i8* %15 to i64, !dbg !5065
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast6, 0, !dbg !5065
  %16 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 6, !dbg !5065, !ctir !350
  %17 = load i64, i64* %alignment_mask, align 8, !dbg !5065, !tbaa !5069, !ctir !149
  %add = add i64 %sub.ptr.sub7, %17, !dbg !5065
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %alignment_mask8 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 6, !dbg !5065, !ctir !350
  %19 = load i64, i64* %alignment_mask8, align 8, !dbg !5065, !tbaa !5069, !ctir !149
  %neg = xor i64 %19, -1, !dbg !5065
  %and = and i64 %add, %neg, !dbg !5065
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !5065
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !5065, !ctir !350
  store i8* %add.ptr, i8** %next_free9, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3, !dbg !5070, !ctir !350
  %22 = load i8*, i8** %next_free10, align 8, !dbg !5070, !tbaa !4744, !ctir !143
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 1, !dbg !5070, !ctir !350
  %24 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !5070, !tbaa !5072, !ctir !355
  %25 = bitcast %struct._obstack_chunk* %24 to i8*, !dbg !5070
  %sub.ptr.lhs.cast11 = ptrtoint i8* %22 to i64, !dbg !5070
  %sub.ptr.rhs.cast12 = ptrtoint i8* %25 to i64, !dbg !5070
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !5070
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 4, !dbg !5070, !ctir !350
  %27 = load i8*, i8** %chunk_limit, align 8, !dbg !5070, !tbaa !5073, !ctir !143
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk14 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !5070, !ctir !350
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk14, align 8, !dbg !5070, !tbaa !5072, !ctir !355
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !5070
  %sub.ptr.lhs.cast15 = ptrtoint i8* %27 to i64, !dbg !5070
  %sub.ptr.rhs.cast16 = ptrtoint i8* %30 to i64, !dbg !5070
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !5070
  %cmp18 = icmp ugt i64 %sub.ptr.sub13, %sub.ptr.sub17, !dbg !5070
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !5065

if.then19:                                        ; preds = %if.end
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk_limit20 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4, !dbg !5070, !ctir !350
  %32 = load i8*, i8** %chunk_limit20, align 8, !dbg !5070, !tbaa !5073, !ctir !143
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %next_free21 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !5070, !ctir !350
  store i8* %32, i8** %next_free21, align 8, !dbg !5070, !tbaa !4744, !ctir !143
  br label %if.end22, !dbg !5070

if.end22:                                         ; preds = %if.then19, %if.end
  %34 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 3, !dbg !5065, !ctir !350
  %35 = load i8*, i8** %next_free23, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %object_base24 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 2, !dbg !5065, !ctir !350
  store i8* %35, i8** %object_base24, align 8, !dbg !5065, !tbaa !4746, !ctir !143
  %37 = load i8*, i8** %__value, align 8, !dbg !5065, !tbaa !2442
  store i8* %37, i8** %tmp25, align 8, !dbg !5065, !tbaa !2442
  %38 = load i8*, i8** %tmp25, align 8, !dbg !5065, !tbaa !2442
  %39 = bitcast i8* %38 to i64*, !dbg !5074
  store i64* %39, i64** %pos, align 8, !dbg !5062, !tbaa !2442
  %40 = load i8*, i8** %prefix.addr, align 8, !dbg !5075, !tbaa !2442
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5075, !tbaa !2442
  %call = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !5075
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5076, metadata !DIExpression()), !dbg !5078
  store i64 0, i64* %i, align 8, !dbg !5078, !tbaa !2579
  br label %for.cond, !dbg !5079

for.cond:                                         ; preds = %for.inc, %if.end22
  %42 = load i64, i64* %i, align 8, !dbg !5080, !tbaa !2579
  %43 = load i64, i64* %n_pos, align 8, !dbg !5082, !tbaa !2579
  %cmp26 = icmp ult i64 %42, %43, !dbg !5083
  br i1 %cmp26, label %for.body, label %for.end, !dbg !5084

for.body:                                         ; preds = %for.cond
  %44 = load i64*, i64** %pos, align 8, !dbg !5085, !tbaa !2442
  %45 = load i64, i64* %i, align 8, !dbg !5086, !tbaa !2579
  %arrayidx = getelementptr inbounds i64, i64* %44, i64 %45, !dbg !5085, !ctir !148
  %46 = load i64, i64* %arrayidx, align 8, !dbg !5085, !tbaa !2579
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 %46), !dbg !5087
  br label %for.inc, !dbg !5087

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %i, align 8, !dbg !5088, !tbaa !2579
  %inc = add i64 %47, 1, !dbg !5088
  store i64 %inc, i64* %i, align 8, !dbg !5088, !tbaa !2579
  br label %for.cond, !dbg !5089, !llvm.loop !5090

for.end:                                          ; preds = %for.cond
  %call28 = call i32 @putchar_unlocked(i32 10), !dbg !5092
  br label %if.end29, !dbg !5093

if.end29:                                         ; preds = %for.end, %entry
  ret void, !dbg !5094
}

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_setup(i1 zeroext %init) #0 !dbg !889 !ctir !401 {
entry:
  %init.addr = alloca i8, align 1
  %j = alloca i32, align 4, !ctir !27
  %act = alloca %struct.sigaction, align 8, !ctir !419
  %frombool = zext i1 %init to i8
  store i8 %frombool, i8* %init.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %init.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5097, metadata !DIExpression()), !dbg !5098
  %0 = load i8, i8* %init.addr, align 1, !dbg !5099, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5099
  br i1 %tobool, label %if.then, label %if.else, !dbg !5101

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !5102, metadata !DIExpression()), !dbg !5104
  %call = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #13, !dbg !5105
  store i32 0, i32* %j, align 4, !dbg !5106, !tbaa !2436
  br label %for.cond, !dbg !5108

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4, !dbg !5109, !tbaa !2436
  %cmp = icmp slt i32 %1, 12, !dbg !5111
  br i1 %cmp, label %for.body, label %for.end, !dbg !5112

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4, !dbg !5113, !tbaa !2436
  %idxprom = sext i32 %2 to i64, !dbg !5115
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom, !dbg !5115, !ctir !413
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5115, !tbaa !2436
  %call1 = call i32 @sigaction(i32 %3, %struct.sigaction* null, %struct.sigaction* %act) #13, !dbg !5116
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5117, !ctir !419
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !5117
  %4 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !5117, !tbaa !2497, !ctir !417
  %cmp2 = icmp ne void (i32)* %4, inttoptr (i64 1 to void (i32)*), !dbg !5119
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5120

if.then3:                                         ; preds = %for.body
  %5 = load i32, i32* %j, align 4, !dbg !5121, !tbaa !2436
  %idxprom4 = sext i32 %5 to i64, !dbg !5122
  %arrayidx5 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom4, !dbg !5122, !ctir !413
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !5122, !tbaa !2436
  %call6 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %6) #13, !dbg !5123
  br label %if.end, !dbg !5123

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5124

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !5125, !tbaa !2436
  %inc = add nsw i32 %7, 1, !dbg !5125
  store i32 %inc, i32* %j, align 4, !dbg !5125, !tbaa !2436
  br label %for.cond, !dbg !5126, !llvm.loop !5127

for.end:                                          ; preds = %for.cond
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !5129, !ctir !419
  %8 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !5130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !5130, !tbaa.struct !5131
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !5132, !ctir !419
  store i32 268435456, i32* %sa_flags, align 8, !dbg !5133, !tbaa !5134, !ctir !27
  store i32 0, i32* %j, align 4, !dbg !5137, !tbaa !2436
  br label %for.cond7, !dbg !5139

for.cond7:                                        ; preds = %for.inc24, %for.end
  %9 = load i32, i32* %j, align 4, !dbg !5140, !tbaa !2436
  %cmp8 = icmp slt i32 %9, 12, !dbg !5142
  br i1 %cmp8, label %for.body9, label %for.end26, !dbg !5143

for.body9:                                        ; preds = %for.cond7
  %10 = load i32, i32* %j, align 4, !dbg !5144, !tbaa !2436
  %idxprom10 = sext i32 %10 to i64, !dbg !5146
  %arrayidx11 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom10, !dbg !5146, !ctir !413
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !5146, !tbaa !2436
  %call12 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %11) #13, !dbg !5147
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5147
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !5148

if.then14:                                        ; preds = %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !5149, !tbaa !2436
  %idxprom15 = sext i32 %12 to i64, !dbg !5151
  %arrayidx16 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom15, !dbg !5151, !ctir !413
  %13 = load i32, i32* %arrayidx16, align 4, !dbg !5151, !tbaa !2436
  %cmp17 = icmp eq i32 %13, 20, !dbg !5152
  %14 = zext i1 %cmp17 to i64, !dbg !5151
  %cond = select i1 %cmp17, void (i32)* @stophandler, void (i32)* @sighandler, !dbg !5151
  %__sigaction_handler18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5153, !ctir !419
  %sa_handler19 = bitcast %union.anon.2* %__sigaction_handler18 to void (i32)**, !dbg !5153
  store void (i32)* %cond, void (i32)** %sa_handler19, align 8, !dbg !5154, !tbaa !2497, !ctir !417
  %15 = load i32, i32* %j, align 4, !dbg !5155, !tbaa !2436
  %idxprom20 = sext i32 %15 to i64, !dbg !5156
  %arrayidx21 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom20, !dbg !5156, !ctir !413
  %16 = load i32, i32* %arrayidx21, align 4, !dbg !5156, !tbaa !2436
  %call22 = call i32 @sigaction(i32 %16, %struct.sigaction* %act, %struct.sigaction* null) #13, !dbg !5157
  br label %if.end23, !dbg !5158

if.end23:                                         ; preds = %if.then14, %for.body9
  br label %for.inc24, !dbg !5159

for.inc24:                                        ; preds = %if.end23
  %17 = load i32, i32* %j, align 4, !dbg !5160, !tbaa !2436
  %inc25 = add nsw i32 %17, 1, !dbg !5160
  store i32 %inc25, i32* %j, align 4, !dbg !5160, !tbaa !2436
  br label %for.cond7, !dbg !5161, !llvm.loop !5162

for.end26:                                        ; preds = %for.cond7
  br label %if.end42, !dbg !5164

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !dbg !5165, !tbaa !2436
  br label %for.cond27, !dbg !5168

for.cond27:                                       ; preds = %for.inc39, %if.else
  %18 = load i32, i32* %j, align 4, !dbg !5169, !tbaa !2436
  %cmp28 = icmp slt i32 %18, 12, !dbg !5171
  br i1 %cmp28, label %for.body29, label %for.end41, !dbg !5172

for.body29:                                       ; preds = %for.cond27
  %19 = load i32, i32* %j, align 4, !dbg !5173, !tbaa !2436
  %idxprom30 = sext i32 %19 to i64, !dbg !5175
  %arrayidx31 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom30, !dbg !5175, !ctir !413
  %20 = load i32, i32* %arrayidx31, align 4, !dbg !5175, !tbaa !2436
  %call32 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %20) #13, !dbg !5176
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5176
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !5177

if.then34:                                        ; preds = %for.body29
  %21 = load i32, i32* %j, align 4, !dbg !5178, !tbaa !2436
  %idxprom35 = sext i32 %21 to i64, !dbg !5179
  %arrayidx36 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom35, !dbg !5179, !ctir !413
  %22 = load i32, i32* %arrayidx36, align 4, !dbg !5179, !tbaa !2436
  %call37 = call void (i32)* @signal(i32 %22, void (i32)* null) #13, !dbg !5180
  br label %if.end38, !dbg !5180

if.end38:                                         ; preds = %if.then34, %for.body29
  br label %for.inc39, !dbg !5181

for.inc39:                                        ; preds = %if.end38
  %23 = load i32, i32* %j, align 4, !dbg !5182, !tbaa !2436
  %inc40 = add nsw i32 %23, 1, !dbg !5182
  store i32 %inc40, i32* %j, align 4, !dbg !5182, !tbaa !2436
  br label %for.cond27, !dbg !5183, !llvm.loop !5184

for.end41:                                        ; preds = %for.cond27
  br label %if.end42

if.end42:                                         ; preds = %for.end41, %for.end26
  ret void, !dbg !5186
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @stophandler(i32 %sig) #0 !dbg !5187 !ctir !174 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5190, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5190
  br i1 %tobool, label %if.end, label %if.then, !dbg !5192

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5193, !tbaa !2436
  %inc = add nsw i32 %1, 1, !dbg !5193
  store volatile i32 %inc, i32* @stop_signal_count, align 4, !dbg !5193, !tbaa !2436
  br label %if.end, !dbg !5194

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5195
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #0 !dbg !5196 !ctir !174 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5199, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5199
  br i1 %tobool, label %if.end, label %if.then, !dbg !5201

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %sig.addr, align 4, !dbg !5202, !tbaa !2436
  store volatile i32 %1, i32* @interrupt_signal, align 4, !dbg !5203, !tbaa !2436
  br label %if.end, !dbg !5204

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5205
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @put_indicator(%struct.bin_str* %ind) #0 !dbg !5206 !ctir !397 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  %0 = load i8, i8* @used_color, align 1, !dbg !5209, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5209
  br i1 %tobool, label %if.end2, label %if.then, !dbg !5211

if.then:                                          ; preds = %entry
  store i8 1, i8* @used_color, align 1, !dbg !5212, !tbaa !2461
  %call = call i32 @tcgetpgrp(i32 1) #13, !dbg !5214
  %cmp = icmp sle i32 0, %call, !dbg !5216
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5217

if.then1:                                         ; preds = %if.then
  call void @signal_init(), !dbg !5218
  br label %if.end, !dbg !5218

if.end:                                           ; preds = %if.then1, %if.then
  call void @prep_non_filename_text(), !dbg !5219
  br label %if.end2, !dbg !5220

if.end2:                                          ; preds = %if.end, %entry
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5221, !tbaa !2442
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %1, i32 0, i32 1, !dbg !5221, !ctir !400
  %2 = load i8*, i8** %string, align 8, !dbg !5221, !tbaa !2711, !ctir !146
  %3 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5221, !tbaa !2442
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i32 0, i32 0, !dbg !5221, !ctir !400
  %4 = load i64, i64* %len, align 8, !dbg !5221, !tbaa !2706, !ctir !149
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5221, !tbaa !2442
  %call3 = call i64 @fwrite_unlocked(i8* %2, i64 %4, i64 1, %struct._IO_FILE* %5), !dbg !5221
  ret void, !dbg !5222
}

; Function Attrs: nounwind
declare dso_local i32 @tcgetpgrp(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_init() #0 !dbg !5223 !ctir !341 {
entry:
  call void @signal_setup(i1 zeroext true), !dbg !5224
  ret void, !dbg !5225
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prep_non_filename_text() #0 !dbg !5226 !ctir !341 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2, i32 1), align 8, !dbg !5227, !tbaa !2711, !ctir !146
  %cmp = icmp ne i8* %0, null, !dbg !5229
  br i1 %cmp, label %if.then, label %if.else, !dbg !5230

if.then:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2)), !dbg !5231
  br label %if.end, !dbg !5231

if.else:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5232
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 3)), !dbg !5234
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5235
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5236
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_failure(i1 zeroext %serious, i8* %message, i8* %file) #0 !dbg !5237 !ctir !625 {
entry:
  %serious.addr = alloca i8, align 1
  %message.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  store i8* %message, i8** %message.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  %call = call i32* @__errno_location() #17, !dbg !5244
  %0 = load i32, i32* %call, align 4, !dbg !5244, !tbaa !2436, !ctir !27
  %1 = load i8*, i8** %message.addr, align 8, !dbg !5245, !tbaa !2442
  %2 = load i8*, i8** %file.addr, align 8, !dbg !5246, !tbaa !2442
  %call1 = call i8* @quotearg_style(i32 4, i8* %2), !dbg !5246
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %1, i8* %call1), !dbg !5247
  %3 = load i8, i8* %serious.addr, align 1, !dbg !5248, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5248
  call void @set_exit_status(i1 zeroext %tobool), !dbg !5249
  ret void, !dbg !5250
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @visit_dir(i64 %dev, i64 %ino) #0 !dbg !5251 !ctir !627 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %ent = alloca %struct.dev_ino*, align 8, !ctir !253
  %ent_from_table = alloca %struct.dev_ino*, align 8, !ctir !253
  %found_match = alloca i8, align 1, !ctir !141
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent_from_table, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata i8* %found_match, metadata !5260, metadata !DIExpression()), !dbg !5261
  %call = call noalias i8* @xmalloc(i64 16), !dbg !5262
  %0 = bitcast i8* %call to %struct.dev_ino*, !dbg !5262
  store %struct.dev_ino* %0, %struct.dev_ino** %ent, align 8, !dbg !5263, !tbaa !2442
  %1 = load i64, i64* %ino.addr, align 8, !dbg !5264, !tbaa !2579
  %2 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5265, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !5266, !ctir !254
  store i64 %1, i64* %st_ino, align 8, !dbg !5267, !tbaa !3674, !ctir !258
  %3 = load i64, i64* %dev.addr, align 8, !dbg !5268, !tbaa !2579
  %4 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5269, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 1, !dbg !5270, !ctir !254
  store i64 %3, i64* %st_dev, align 8, !dbg !5271, !tbaa !3691, !ctir !260
  %5 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !5272, !tbaa !2442
  %6 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5273, !tbaa !2442
  %7 = bitcast %struct.dev_ino* %6 to i8*, !dbg !5273
  %call1 = call i8* @hash_insert(%struct.hash_table* %5, i8* %7), !dbg !5274
  %8 = bitcast i8* %call1 to %struct.dev_ino*, !dbg !5274
  store %struct.dev_ino* %8, %struct.dev_ino** %ent_from_table, align 8, !dbg !5275, !tbaa !2442
  %9 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5276, !tbaa !2442
  %cmp = icmp eq %struct.dev_ino* %9, null, !dbg !5278
  br i1 %cmp, label %if.then, label %if.end, !dbg !5279

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !5280
  unreachable, !dbg !5280

if.end:                                           ; preds = %entry
  %10 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5282, !tbaa !2442
  %11 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5283, !tbaa !2442
  %cmp2 = icmp ne %struct.dev_ino* %10, %11, !dbg !5284
  %frombool = zext i1 %cmp2 to i8, !dbg !5285
  store i8 %frombool, i8* %found_match, align 1, !dbg !5285, !tbaa !2461
  %12 = load i8, i8* %found_match, align 1, !dbg !5286, !tbaa !2461
  %tobool = trunc i8 %12 to i1, !dbg !5286
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5288

if.then3:                                         ; preds = %if.end
  %13 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5289, !tbaa !2442
  %14 = bitcast %struct.dev_ino* %13 to i8*, !dbg !5289
  call void @free(i8* %14) #13, !dbg !5291
  br label %if.end4, !dbg !5292

if.end4:                                          ; preds = %if.then3, %if.end
  %15 = load i8, i8* %found_match, align 1, !dbg !5293, !tbaa !2461
  %tobool5 = trunc i8 %15 to i1, !dbg !5293
  ret i1 %tobool5, !dbg !5294
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_exit_status(i1 zeroext %serious) #0 !dbg !5295 !ctir !401 {
entry:
  %serious.addr = alloca i8, align 1
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  %0 = load i8, i8* %serious.addr, align 1, !dbg !5298, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5298
  br i1 %tobool, label %if.then, label %if.else, !dbg !5300

if.then:                                          ; preds = %entry
  store i32 2, i32* @exit_status, align 4, !dbg !5301, !tbaa !2436
  br label %if.end2, !dbg !5302

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @exit_status, align 4, !dbg !5303, !tbaa !2436
  %cmp = icmp eq i32 %1, 0, !dbg !5305
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5306

if.then1:                                         ; preds = %if.else
  store i32 1, i32* @exit_status, align 4, !dbg !5307, !tbaa !2436
  br label %if.end, !dbg !5308

if.end:                                           ; preds = %if.then1, %if.else
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then
  ret void, !dbg !5309
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_push(i64 %dev, i64 %ino) #0 !dbg !5310 !ctir !629 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !253
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !510
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5311, metadata !DIExpression()), !dbg !5312
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !5315, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !5317, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !5319, metadata !DIExpression()), !dbg !5320
  store i32 16, i32* %dev_ino_size, align 4, !dbg !5320, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5321, metadata !DIExpression()), !dbg !5323
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !5323, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5324, metadata !DIExpression()), !dbg !5323
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !5323, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !5323
  store i64 %conv, i64* %__len, align 8, !dbg !5323, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5325, metadata !DIExpression()), !dbg !5328
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5328, !tbaa !2442
  store %struct.obstack* %1, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %2 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4, !dbg !5328, !ctir !349
  %3 = load i8*, i8** %chunk_limit, align 8, !dbg !5328, !tbaa !5073, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3, !dbg !5328, !ctir !349
  %5 = load i8*, i8** %next_free, align 8, !dbg !5328, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !5328
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !5328
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5328
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5328, !tbaa !2579
  %6 = load i64, i64* %tmp, align 8, !dbg !5328, !tbaa !2579
  %7 = load i64, i64* %__len, align 8, !dbg !5329, !tbaa !2579
  %cmp = icmp ult i64 %6, %7, !dbg !5329
  br i1 %cmp, label %if.then, label %if.end, !dbg !5323

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5329, !tbaa !2442
  %9 = load i64, i64* %__len, align 8, !dbg !5329, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %8, i64 %9), !dbg !5329
  br label %if.end, !dbg !5329

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, i64* %__len, align 8, !dbg !5323, !tbaa !2579
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5323, !tbaa !2442
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 3, !dbg !5323, !ctir !350
  %12 = load i8*, i8** %next_free2, align 8, !dbg !5323, !tbaa !4744, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %10, !dbg !5323
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !5323, !tbaa !4744, !ctir !143
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !5330, !tbaa !4744, !ctir !143
  store i8* %13, i8** %vdi, align 8, !dbg !5331, !tbaa !2442
  %14 = load i8*, i8** %vdi, align 8, !dbg !5332, !tbaa !2442
  %15 = bitcast i8* %14 to %struct.dev_ino*, !dbg !5332
  store %struct.dev_ino* %15, %struct.dev_ino** %di, align 8, !dbg !5333, !tbaa !2442
  %16 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5334, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %16, i32 -1, !dbg !5334
  store %struct.dev_ino* %incdec.ptr, %struct.dev_ino** %di, align 8, !dbg !5334, !tbaa !2442
  %17 = load i64, i64* %dev.addr, align 8, !dbg !5335, !tbaa !2579
  %18 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5336, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %18, i32 0, i32 1, !dbg !5337, !ctir !254
  store i64 %17, i64* %st_dev, align 8, !dbg !5338, !tbaa !3691, !ctir !260
  %19 = load i64, i64* %ino.addr, align 8, !dbg !5339, !tbaa !2579
  %20 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5340, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %20, i32 0, i32 0, !dbg !5341, !ctir !254
  store i64 %19, i64* %st_ino, align 8, !dbg !5342, !tbaa !3674, !ctir !258
  ret void, !dbg !5343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, %struct.bin_str* %color, i1 zeroext %allow_pad, %struct.obstack* %stack, i8* %absolute_name) #0 !dbg !5344 !ctir !631 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %color.addr = alloca %struct.bin_str*, align 8
  %allow_pad.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %absolute_name.addr = alloca i8*, align 8
  %smallbuf = alloca [8192 x i8], align 16, !ctir !635
  %buf = alloca i8*, align 8, !ctir !143
  %len = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  %skip_quotes = alloca i8, align 1, !ctir !141
  %h = alloca i8*, align 8, !ctir !143
  %n = alloca i8*, align 8, !ctir !143
  %__o = alloca %struct.obstack*, align 8, !ctir !510
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  %__o49 = alloca %struct.obstack*, align 8, !ctir !510
  %__len50 = alloca i64, align 8, !ctir !149
  %__o151 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp52 = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.bin_str* %color, %struct.bin_str** %color.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  %frombool = zext i1 %allow_pad to i8
  store i8 %frombool, i8* %allow_pad.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %allow_pad.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  store i8* %absolute_name, i8** %absolute_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %absolute_name.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !5359, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5361, metadata !DIExpression()), !dbg !5362
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5363
  store i8* %arraydecay, i8** %buf, align 8, !dbg !5362, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !5366, metadata !DIExpression()), !dbg !5367
  %0 = load i8*, i8** %name.addr, align 8, !dbg !5368, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5369, !tbaa !2442
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5370, !tbaa !2436
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* null, i8* %pad), !dbg !5371
  store i64 %call, i64* %len, align 8, !dbg !5372, !tbaa !2579
  %3 = load i8, i8* %pad, align 1, !dbg !5373, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5373
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5375

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %allow_pad.addr, align 1, !dbg !5376, !tbaa !2461
  %tobool1 = trunc i8 %4 to i1, !dbg !5376
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5377

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !5378

do.body:                                          ; preds = %if.then
  %call2 = call i32 @putchar_unlocked(i32 32), !dbg !5379
  %5 = load i64, i64* @dired_pos, align 8, !dbg !5379, !tbaa !2579
  %inc = add i64 %5, 1, !dbg !5379
  store i64 %inc, i64* @dired_pos, align 8, !dbg !5379, !tbaa !2579
  br label %do.end, !dbg !5379

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !5379

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  %6 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5381, !tbaa !2442
  %tobool3 = icmp ne %struct.bin_str* %6, null, !dbg !5381
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5383

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5384, !tbaa !2442
  %call5 = call zeroext i1 @print_color_indicator(%struct.bin_str* %7), !dbg !5385
  br label %if.end6, !dbg !5385

if.end6:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i8* %skip_quotes, metadata !5386, metadata !DIExpression()), !dbg !5387
  store i8 0, i8* %skip_quotes, align 1, !dbg !5387, !tbaa !2461
  %8 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5388, !tbaa !2442
  %tobool7 = icmp ne i8* %8, null, !dbg !5388
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !5390

if.then8:                                         ; preds = %if.end6
  %9 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5391, !tbaa !2461
  %tobool9 = trunc i8 %9 to i1, !dbg !5391
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !5394

land.lhs.true10:                                  ; preds = %if.then8
  %10 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5395, !tbaa !2461
  %tobool11 = trunc i8 %10 to i1, !dbg !5395
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !5396

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load i8, i8* %pad, align 1, !dbg !5397, !tbaa !2461
  %tobool13 = trunc i8 %11 to i1, !dbg !5397
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !5398

if.then14:                                        ; preds = %land.lhs.true12
  store i8 1, i8* %skip_quotes, align 1, !dbg !5399, !tbaa !2461
  %12 = load i8*, i8** %buf, align 8, !dbg !5401, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !5401, !tbaa !2497, !ctir !144
  %conv = sext i8 %13 to i32, !dbg !5401
  %call15 = call i32 @putchar_unlocked(i32 %conv), !dbg !5401
  br label %if.end16, !dbg !5402

if.end16:                                         ; preds = %if.then14, %land.lhs.true12, %land.lhs.true10, %if.then8
  call void @llvm.dbg.declare(metadata i8** %h, metadata !5403, metadata !DIExpression()), !dbg !5404
  %14 = load i8*, i8** @hostname, align 8, !dbg !5405, !tbaa !2442
  %call17 = call i8* @file_escape(i8* %14, i1 zeroext false), !dbg !5406
  store i8* %call17, i8** %h, align 8, !dbg !5404, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n, metadata !5407, metadata !DIExpression()), !dbg !5408
  %15 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5409, !tbaa !2442
  %call18 = call i8* @file_escape(i8* %15, i1 zeroext true), !dbg !5410
  store i8* %call18, i8** %n, align 8, !dbg !5408, !tbaa !2442
  %16 = load i8*, i8** %h, align 8, !dbg !5411, !tbaa !2442
  %17 = load i8*, i8** %n, align 8, !dbg !5412, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !5413, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %18 to i32, !dbg !5413
  %cmp = icmp eq i32 %conv19, 47, !dbg !5414
  %19 = zext i1 %cmp to i64, !dbg !5413
  %cond = select i1 %cmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i64 0, i64 0), !dbg !5413
  %20 = load i8*, i8** %n, align 8, !dbg !5415, !tbaa !2442
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i64 0, i64 0), i8* %16, i8* %cond, i8* %20), !dbg !5416
  %21 = load i8*, i8** %h, align 8, !dbg !5417, !tbaa !2442
  call void @free(i8* %21) #13, !dbg !5418
  %22 = load i8*, i8** %n, align 8, !dbg !5419, !tbaa !2442
  call void @free(i8* %22) #13, !dbg !5420
  br label %if.end22, !dbg !5421

if.end22:                                         ; preds = %if.end16, %if.end6
  %23 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5422, !tbaa !2442
  %tobool23 = icmp ne %struct.obstack* %23, null, !dbg !5422
  br i1 %tobool23, label %if.then24, label %if.end36, !dbg !5424

if.then24:                                        ; preds = %if.end22
  br label %do.body25, !dbg !5425

do.body25:                                        ; preds = %if.then24
  %24 = load i8, i8* @dired, align 1, !dbg !5426, !tbaa !2461
  %tobool26 = trunc i8 %24 to i1, !dbg !5426
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !5429

if.then27:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5430, metadata !DIExpression()), !dbg !5432
  %25 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5432, !tbaa !2442
  store %struct.obstack* %25, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5433, metadata !DIExpression()), !dbg !5432
  store i64 8, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5434, metadata !DIExpression()), !dbg !5437
  %26 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5437, !tbaa !2442
  store %struct.obstack* %26, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 4, !dbg !5437, !ctir !349
  %28 = load i8*, i8** %chunk_limit, align 8, !dbg !5437, !tbaa !5073, !ctir !143
  %29 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !5437, !ctir !349
  %30 = load i8*, i8** %next_free, align 8, !dbg !5437, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !5437
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !5437
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5437
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5437, !tbaa !2579
  %31 = load i64, i64* %tmp, align 8, !dbg !5437, !tbaa !2579
  %32 = load i64, i64* %__len, align 8, !dbg !5438, !tbaa !2579
  %cmp28 = icmp ult i64 %31, %32, !dbg !5438
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5432

if.then30:                                        ; preds = %if.then27
  %33 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5438, !tbaa !2442
  %34 = load i64, i64* %__len, align 8, !dbg !5438, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %33, i64 %34), !dbg !5438
  br label %if.end31, !dbg !5438

if.end31:                                         ; preds = %if.then30, %if.then27
  %35 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  %next_free32 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 3, !dbg !5432, !ctir !350
  %36 = load i8*, i8** %next_free32, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  %37 = load i64, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %37, i1 false), !dbg !5432
  %38 = load i64, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  %39 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3, !dbg !5432, !ctir !350
  %40 = load i8*, i8** %next_free33, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %38, !dbg !5432
  store i8* %add.ptr, i8** %next_free33, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  br label %if.end34, !dbg !5426

if.end34:                                         ; preds = %if.end31, %do.body25
  br label %do.end35, !dbg !5429

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !5429

if.end36:                                         ; preds = %do.end35, %if.end22
  %41 = load i8*, i8** %buf, align 8, !dbg !5439, !tbaa !2442
  %42 = load i8, i8* %skip_quotes, align 1, !dbg !5439, !tbaa !2461
  %tobool37 = trunc i8 %42 to i1, !dbg !5439
  %conv38 = zext i1 %tobool37 to i32, !dbg !5439
  %idx.ext = sext i32 %conv38 to i64, !dbg !5439
  %add.ptr39 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !5439
  %43 = load i64, i64* %len, align 8, !dbg !5439, !tbaa !2579
  %44 = load i8, i8* %skip_quotes, align 1, !dbg !5439, !tbaa !2461
  %tobool40 = trunc i8 %44 to i1, !dbg !5439
  %conv41 = zext i1 %tobool40 to i32, !dbg !5439
  %mul = mul nsw i32 %conv41, 2, !dbg !5439
  %conv42 = sext i32 %mul to i64, !dbg !5439
  %sub = sub i64 %43, %conv42, !dbg !5439
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5439, !tbaa !2442
  %call43 = call i64 @fwrite_unlocked(i8* %add.ptr39, i64 1, i64 %sub, %struct._IO_FILE* %45), !dbg !5439
  %46 = load i64, i64* %len, align 8, !dbg !5440, !tbaa !2579
  %47 = load i64, i64* @dired_pos, align 8, !dbg !5441, !tbaa !2579
  %add = add i64 %47, %46, !dbg !5441
  store i64 %add, i64* @dired_pos, align 8, !dbg !5441, !tbaa !2579
  %48 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5442, !tbaa !2442
  %tobool44 = icmp ne %struct.obstack* %48, null, !dbg !5442
  br i1 %tobool44, label %if.then45, label %if.end67, !dbg !5444

if.then45:                                        ; preds = %if.end36
  br label %do.body46, !dbg !5445

do.body46:                                        ; preds = %if.then45
  %49 = load i8, i8* @dired, align 1, !dbg !5446, !tbaa !2461
  %tobool47 = trunc i8 %49 to i1, !dbg !5446
  br i1 %tobool47, label %if.then48, label %if.end65, !dbg !5449

if.then48:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o49, metadata !5450, metadata !DIExpression()), !dbg !5452
  %50 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5452, !tbaa !2442
  store %struct.obstack* %50, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len50, metadata !5453, metadata !DIExpression()), !dbg !5452
  store i64 8, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o151, metadata !5454, metadata !DIExpression()), !dbg !5457
  %51 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5457, !tbaa !2442
  store %struct.obstack* %51, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %52 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %chunk_limit53 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 4, !dbg !5457, !ctir !349
  %53 = load i8*, i8** %chunk_limit53, align 8, !dbg !5457, !tbaa !5073, !ctir !143
  %54 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %next_free54 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 3, !dbg !5457, !ctir !349
  %55 = load i8*, i8** %next_free54, align 8, !dbg !5457, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast55 = ptrtoint i8* %53 to i64, !dbg !5457
  %sub.ptr.rhs.cast56 = ptrtoint i8* %55 to i64, !dbg !5457
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !5457
  store i64 %sub.ptr.sub57, i64* %tmp52, align 8, !dbg !5457, !tbaa !2579
  %56 = load i64, i64* %tmp52, align 8, !dbg !5457, !tbaa !2579
  %57 = load i64, i64* %__len50, align 8, !dbg !5458, !tbaa !2579
  %cmp58 = icmp ult i64 %56, %57, !dbg !5458
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5452

if.then60:                                        ; preds = %if.then48
  %58 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5458, !tbaa !2442
  %59 = load i64, i64* %__len50, align 8, !dbg !5458, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %58, i64 %59), !dbg !5458
  br label %if.end61, !dbg !5458

if.end61:                                         ; preds = %if.then60, %if.then48
  %60 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  %next_free62 = getelementptr inbounds %struct.obstack, %struct.obstack* %60, i32 0, i32 3, !dbg !5452, !ctir !350
  %61 = load i8*, i8** %next_free62, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  %62 = load i64, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %62, i1 false), !dbg !5452
  %63 = load i64, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  %64 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  %next_free63 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !5452, !ctir !350
  %65 = load i8*, i8** %next_free63, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %63, !dbg !5452
  store i8* %add.ptr64, i8** %next_free63, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  br label %if.end65, !dbg !5446

if.end65:                                         ; preds = %if.end61, %do.body46
  br label %do.end66, !dbg !5449

do.end66:                                         ; preds = %if.end65
  br label %if.end67, !dbg !5449

if.end67:                                         ; preds = %do.end66, %if.end36
  %66 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5459, !tbaa !2442
  %tobool68 = icmp ne i8* %66, null, !dbg !5459
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !5461

if.then69:                                        ; preds = %if.end67
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5462, !tbaa !2442
  %call70 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !5462
  %68 = load i8, i8* %skip_quotes, align 1, !dbg !5464, !tbaa !2461
  %tobool71 = trunc i8 %68 to i1, !dbg !5464
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !5466

if.then72:                                        ; preds = %if.then69
  %69 = load i8*, i8** %buf, align 8, !dbg !5467, !tbaa !2442
  %70 = load i64, i64* %len, align 8, !dbg !5467, !tbaa !2579
  %add.ptr73 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !5467
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr73, i64 -1, !dbg !5467
  %71 = load i8, i8* %add.ptr74, align 1, !dbg !5467, !tbaa !2497, !ctir !144
  %conv75 = sext i8 %71 to i32, !dbg !5467
  %call76 = call i32 @putchar_unlocked(i32 %conv75), !dbg !5467
  br label %if.end77, !dbg !5467

if.end77:                                         ; preds = %if.then72, %if.then69
  br label %if.end78, !dbg !5468

if.end78:                                         ; preds = %if.end77, %if.end67
  %72 = load i8*, i8** %buf, align 8, !dbg !5469, !tbaa !2442
  %arraydecay79 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5471
  %cmp80 = icmp ne i8* %72, %arraydecay79, !dbg !5472
  br i1 %cmp80, label %land.lhs.true82, label %if.end86, !dbg !5473

land.lhs.true82:                                  ; preds = %if.end78
  %73 = load i8*, i8** %buf, align 8, !dbg !5474, !tbaa !2442
  %74 = load i8*, i8** %name.addr, align 8, !dbg !5475, !tbaa !2442
  %cmp83 = icmp ne i8* %73, %74, !dbg !5476
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !5477

if.then85:                                        ; preds = %land.lhs.true82
  %75 = load i8*, i8** %buf, align 8, !dbg !5478, !tbaa !2442
  call void @free(i8* %75) #13, !dbg !5479
  br label %if.end86, !dbg !5479

if.end86:                                         ; preds = %if.then85, %land.lhs.true82, %if.end78
  %76 = load i64, i64* %len, align 8, !dbg !5480, !tbaa !2579
  %77 = load i8, i8* %pad, align 1, !dbg !5481, !tbaa !2461
  %tobool87 = trunc i8 %77 to i1, !dbg !5481
  %conv88 = zext i1 %tobool87 to i64, !dbg !5481
  %add89 = add i64 %76, %conv88, !dbg !5482
  ret i64 %add89, !dbg !5483
}

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @file_ignored(i8* %name) #0 !dbg !5484 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load i32, i32* @ignore_mode, align 4, !dbg !5487, !tbaa !2497
  %cmp = icmp ne i32 %0, 2, !dbg !5488
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false11, !dbg !5489

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5490, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !5490, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5490, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !5490
  %cmp1 = icmp eq i32 %conv, 46, !dbg !5491
  br i1 %cmp1, label %land.lhs.true3, label %lor.lhs.false11, !dbg !5492

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @ignore_mode, align 4, !dbg !5493, !tbaa !2497
  %cmp4 = icmp eq i32 %3, 0, !dbg !5494
  br i1 %cmp4, label %lor.end, label %lor.lhs.false, !dbg !5495

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5496, !tbaa !2442
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5497, !tbaa !2442
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5497, !ctir !146
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !5497, !tbaa !2497
  %conv7 = sext i8 %6 to i32, !dbg !5497
  %cmp8 = icmp eq i32 %conv7, 46, !dbg !5498
  %conv9 = zext i1 %cmp8 to i32, !dbg !5498
  %add = add nsw i32 1, %conv9, !dbg !5499
  %idxprom = sext i32 %add to i64, !dbg !5496
  %arrayidx10 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5496, !ctir !146
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !5496, !tbaa !2497
  %tobool = icmp ne i8 %7, 0, !dbg !5496
  br i1 %tobool, label %lor.lhs.false11, label %lor.end, !dbg !5500

lor.lhs.false11:                                  ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %8 = load i32, i32* @ignore_mode, align 4, !dbg !5501, !tbaa !2497
  %cmp12 = icmp eq i32 %8, 0, !dbg !5502
  br i1 %cmp12, label %land.lhs.true14, label %lor.rhs, !dbg !5503

land.lhs.true14:                                  ; preds = %lor.lhs.false11
  %9 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !5504, !tbaa !2442
  %10 = load i8*, i8** %name.addr, align 8, !dbg !5505, !tbaa !2442
  %call = call zeroext i1 @patterns_match(%struct.ignore_pattern* %9, i8* %10), !dbg !5506
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !5507

lor.rhs:                                          ; preds = %land.lhs.true14, %lor.lhs.false11
  %11 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !5508, !tbaa !2442
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5509, !tbaa !2442
  %call16 = call zeroext i1 @patterns_match(%struct.ignore_pattern* %11, i8* %12), !dbg !5510
  br label %lor.end, !dbg !5507

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true14, %lor.lhs.false, %land.lhs.true3
  %13 = phi i1 [ true, %land.lhs.true14 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true3 ], [ %call16, %lor.rhs ]
  ret i1 %13, !dbg !5511
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_signals() #0 !dbg !5512 !ctir !341 {
entry:
  %sig = alloca i32, align 4, !ctir !27
  %stops = alloca i32, align 4, !ctir !27
  %oldset = alloca %struct.__sigset_t, align 8, !ctir !403
  br label %while.cond, !dbg !5513

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5514, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5514
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5515

lor.rhs:                                          ; preds = %while.cond
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5516, !tbaa !2436
  %tobool1 = icmp ne i32 %1, 0, !dbg !5515
  br label %lor.end, !dbg !5515

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %2 = phi i1 [ true, %while.cond ], [ %tobool1, %lor.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !5513

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %sig, metadata !5517, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %stops, metadata !5520, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %oldset, metadata !5522, metadata !DIExpression()), !dbg !5523
  %3 = load i8, i8* @used_color, align 1, !dbg !5524, !tbaa !2461
  %tobool2 = trunc i8 %3 to i1, !dbg !5524
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5526

if.then:                                          ; preds = %while.body
  call void @restore_default_color(), !dbg !5527
  br label %if.end, !dbg !5527

if.end:                                           ; preds = %if.then, %while.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5528, !tbaa !2442
  %call = call i32 @fflush_unlocked(%struct._IO_FILE* %4), !dbg !5528
  %call3 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #13, !dbg !5529
  %5 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5530, !tbaa !2436
  store i32 %5, i32* %sig, align 4, !dbg !5531, !tbaa !2436
  %6 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5532, !tbaa !2436
  store i32 %6, i32* %stops, align 4, !dbg !5533, !tbaa !2436
  %7 = load i32, i32* %stops, align 4, !dbg !5534, !tbaa !2436
  %tobool4 = icmp ne i32 %7, 0, !dbg !5534
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5536

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %stops, align 4, !dbg !5537, !tbaa !2436
  %sub = sub nsw i32 %8, 1, !dbg !5539
  store volatile i32 %sub, i32* @stop_signal_count, align 4, !dbg !5540, !tbaa !2436
  store i32 19, i32* %sig, align 4, !dbg !5541, !tbaa !2436
  br label %if.end7, !dbg !5542

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %sig, align 4, !dbg !5543, !tbaa !2436
  %call6 = call void (i32)* @signal(i32 %9, void (i32)* null) #13, !dbg !5544
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %10 = load i32, i32* %sig, align 4, !dbg !5545, !tbaa !2436
  %call8 = call i32 @raise(i32 %10) #13, !dbg !5546
  %call9 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #13, !dbg !5547
  br label %while.cond, !dbg !5513, !llvm.loop !5548

while.end:                                        ; preds = %lor.end
  ret void, !dbg !5550
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @patterns_match(%struct.ignore_pattern* %patterns, i8* %file) #0 !dbg !5551 !ctir !659 {
entry:
  %retval = alloca i1, align 1
  %patterns.addr = alloca %struct.ignore_pattern*, align 8
  %file.addr = alloca i8*, align 8
  %p = alloca %struct.ignore_pattern*, align 8, !ctir !661
  store %struct.ignore_pattern* %patterns, %struct.ignore_pattern** %patterns.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %patterns.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %p, metadata !5556, metadata !DIExpression()), !dbg !5557
  %0 = load %struct.ignore_pattern*, %struct.ignore_pattern** %patterns.addr, align 8, !dbg !5558, !tbaa !2442
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %p, align 8, !dbg !5560, !tbaa !2442
  br label %for.cond, !dbg !5561

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5562, !tbaa !2442
  %tobool = icmp ne %struct.ignore_pattern* %1, null, !dbg !5564
  br i1 %tobool, label %for.body, label %for.end, !dbg !5564

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5565, !tbaa !2442
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !5567, !ctir !662
  %3 = load i8*, i8** %pattern, align 8, !dbg !5567, !tbaa !3052, !ctir !146
  %4 = load i8*, i8** %file.addr, align 8, !dbg !5568, !tbaa !2442
  %call = call i32 @fnmatch(i8* %3, i8* %4, i32 4), !dbg !5569
  %cmp = icmp eq i32 %call, 0, !dbg !5570
  br i1 %cmp, label %if.then, label %if.end, !dbg !5571

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5572
  br label %return, !dbg !5572

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5573

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5574, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %5, i32 0, i32 1, !dbg !5575, !ctir !662
  %6 = load %struct.ignore_pattern*, %struct.ignore_pattern** %next, align 8, !dbg !5575, !tbaa !3058, !ctir !511
  store %struct.ignore_pattern* %6, %struct.ignore_pattern** %p, align 8, !dbg !5576, !tbaa !2442
  br label %for.cond, !dbg !5577, !llvm.loop !5578

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5580
  br label %return, !dbg !5580

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !5581
  ret i1 %7, !dbg !5581
}

declare dso_local i32 @fnmatch(i8*, i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_buf(i8** %inbuf, i64 %bufsize, i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, i64* %width, i8* %pad) #0 !dbg !5582 !ctir !638 {
entry:
  %inbuf.addr = alloca i8**, align 8
  %bufsize.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %width.addr = alloca i64*, align 8
  %pad.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8, !ctir !143
  %displayed_width = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %quoted = alloca i8, align 1, !ctir !141
  %qs = alloca i32, align 4, !ctir !95
  %needs_further_quoting = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !641
  %wc = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %p83 = alloca i8*, align 8, !ctir !143
  %plimit84 = alloca i8*, align 8, !ctir !146
  %p111 = alloca i8*, align 8, !ctir !146
  %plimit112 = alloca i8*, align 8, !ctir !146
  store i8** %inbuf, i8*** %inbuf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %inbuf.addr, metadata !5583, metadata !DIExpression()), !dbg !5584
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  store i8* %pad, i8** %pad.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %pad.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5597, metadata !DIExpression()), !dbg !5598
  %0 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5599, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !5600, !tbaa !2442, !ctir !143
  store i8* %1, i8** %buf, align 8, !dbg !5598, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %displayed_width, metadata !5601, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5603, metadata !DIExpression()), !dbg !5604
  store i64 0, i64* %len, align 8, !dbg !5604, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %quoted, metadata !5605, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !5607, metadata !DIExpression()), !dbg !5608
  %2 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5609, !tbaa !2442
  %call = call i32 @get_quoting_style(%struct.quoting_options* %2), !dbg !5610
  store i32 %call, i32* %qs, align 4, !dbg !5608, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %needs_further_quoting, metadata !5611, metadata !DIExpression()), !dbg !5612
  %3 = load i8, i8* @qmark_funny_chars, align 1, !dbg !5613, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5613
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5614

land.rhs:                                         ; preds = %entry
  %4 = load i32, i32* %qs, align 4, !dbg !5615, !tbaa !2497
  %cmp = icmp eq i32 %4, 1, !dbg !5616
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !5617

lor.lhs.false:                                    ; preds = %land.rhs
  %5 = load i32, i32* %qs, align 4, !dbg !5618, !tbaa !2497
  %cmp1 = icmp eq i32 %5, 2, !dbg !5619
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !5620

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %qs, align 4, !dbg !5621, !tbaa !2497
  %cmp2 = icmp eq i32 %6, 0, !dbg !5622
  br label %lor.end, !dbg !5620

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ], !dbg !5623
  %frombool = zext i1 %8 to i8, !dbg !5612
  store i8 %frombool, i8* %needs_further_quoting, align 1, !dbg !5612, !tbaa !2461
  %9 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5624, !tbaa !2436
  %cmp3 = icmp ne i32 %9, 0, !dbg !5626
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5627

if.then:                                          ; preds = %land.end
  %10 = load i8*, i8** %buf, align 8, !dbg !5628, !tbaa !2442
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !5630, !tbaa !2579
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5631, !tbaa !2442
  %13 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5632, !tbaa !2442
  %call4 = call i64 @quotearg_buffer(i8* %10, i64 %11, i8* %12, i64 -1, %struct.quoting_options* %13), !dbg !5633
  store i64 %call4, i64* %len, align 8, !dbg !5634, !tbaa !2579
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !5635, !tbaa !2579
  %15 = load i64, i64* %len, align 8, !dbg !5637, !tbaa !2579
  %cmp5 = icmp ule i64 %14, %15, !dbg !5638
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5639

if.then6:                                         ; preds = %if.then
  %16 = load i64, i64* %len, align 8, !dbg !5640, !tbaa !2579
  %add = add i64 %16, 1, !dbg !5642
  %call7 = call noalias i8* @xmalloc(i64 %add), !dbg !5643
  store i8* %call7, i8** %buf, align 8, !dbg !5644, !tbaa !2442
  %17 = load i8*, i8** %buf, align 8, !dbg !5645, !tbaa !2442
  %18 = load i64, i64* %len, align 8, !dbg !5646, !tbaa !2579
  %add8 = add i64 %18, 1, !dbg !5647
  %19 = load i8*, i8** %name.addr, align 8, !dbg !5648, !tbaa !2442
  %20 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5649, !tbaa !2442
  %call9 = call i64 @quotearg_buffer(i8* %17, i64 %add8, i8* %19, i64 -1, %struct.quoting_options* %20), !dbg !5650
  br label %if.end, !dbg !5651

if.end:                                           ; preds = %if.then6, %if.then
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5652, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !5653, !tbaa !2497, !ctir !144
  %conv = sext i8 %22 to i32, !dbg !5653
  %23 = load i8*, i8** %buf, align 8, !dbg !5654, !tbaa !2442
  %24 = load i8, i8* %23, align 1, !dbg !5655, !tbaa !2497, !ctir !144
  %conv10 = sext i8 %24 to i32, !dbg !5655
  %cmp11 = icmp ne i32 %conv, %conv10, !dbg !5656
  br i1 %cmp11, label %lor.end17, label %lor.rhs13, !dbg !5657

lor.rhs13:                                        ; preds = %if.end
  %25 = load i8*, i8** %name.addr, align 8, !dbg !5658, !tbaa !2442
  %call14 = call i64 @strlen(i8* %25) #16, !dbg !5659
  %26 = load i64, i64* %len, align 8, !dbg !5660, !tbaa !2579
  %cmp15 = icmp ne i64 %call14, %26, !dbg !5661
  br label %lor.end17, !dbg !5657

lor.end17:                                        ; preds = %lor.rhs13, %if.end
  %27 = phi i1 [ true, %if.end ], [ %cmp15, %lor.rhs13 ]
  %frombool18 = zext i1 %27 to i8, !dbg !5662
  store i8 %frombool18, i8* %quoted, align 1, !dbg !5662, !tbaa !2461
  br label %if.end32, !dbg !5663

if.else:                                          ; preds = %land.end
  %28 = load i8, i8* %needs_further_quoting, align 1, !dbg !5664, !tbaa !2461
  %tobool19 = trunc i8 %28 to i1, !dbg !5664
  br i1 %tobool19, label %if.then20, label %if.else29, !dbg !5666

if.then20:                                        ; preds = %if.else
  %29 = load i8*, i8** %name.addr, align 8, !dbg !5667, !tbaa !2442
  %call21 = call i64 @strlen(i8* %29) #16, !dbg !5669
  store i64 %call21, i64* %len, align 8, !dbg !5670, !tbaa !2579
  %30 = load i64, i64* %bufsize.addr, align 8, !dbg !5671, !tbaa !2579
  %31 = load i64, i64* %len, align 8, !dbg !5673, !tbaa !2579
  %cmp22 = icmp ule i64 %30, %31, !dbg !5674
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !5675

if.then24:                                        ; preds = %if.then20
  %32 = load i64, i64* %len, align 8, !dbg !5676, !tbaa !2579
  %add25 = add i64 %32, 1, !dbg !5677
  %call26 = call noalias i8* @xmalloc(i64 %add25), !dbg !5678
  store i8* %call26, i8** %buf, align 8, !dbg !5679, !tbaa !2442
  br label %if.end27, !dbg !5680

if.end27:                                         ; preds = %if.then24, %if.then20
  %33 = load i8*, i8** %buf, align 8, !dbg !5681, !tbaa !2442
  %34 = load i8*, i8** %name.addr, align 8, !dbg !5682, !tbaa !2442
  %35 = load i64, i64* %len, align 8, !dbg !5683, !tbaa !2579
  %add28 = add i64 %35, 1, !dbg !5684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %add28, i1 false), !dbg !5685
  store i8 0, i8* %quoted, align 1, !dbg !5686, !tbaa !2461
  br label %if.end31, !dbg !5687

if.else29:                                        ; preds = %if.else
  %36 = load i8*, i8** %name.addr, align 8, !dbg !5688, !tbaa !2442
  %call30 = call i64 @strlen(i8* %36) #16, !dbg !5690
  store i64 %call30, i64* %len, align 8, !dbg !5691, !tbaa !2579
  %37 = load i8*, i8** %name.addr, align 8, !dbg !5692, !tbaa !2442
  store i8* %37, i8** %buf, align 8, !dbg !5693, !tbaa !2442
  store i8 0, i8* %quoted, align 1, !dbg !5694, !tbaa !2461
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.end27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %lor.end17
  %38 = load i8, i8* %needs_further_quoting, align 1, !dbg !5695, !tbaa !2461
  %tobool33 = trunc i8 %38 to i1, !dbg !5695
  br i1 %tobool33, label %if.then34, label %if.else100, !dbg !5697

if.then34:                                        ; preds = %if.end32
  %call35 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5698
  %cmp36 = icmp ugt i64 %call35, 1, !dbg !5701
  br i1 %cmp36, label %if.then38, label %if.else82, !dbg !5702

if.then38:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5703, metadata !DIExpression()), !dbg !5705
  %39 = load i8*, i8** %buf, align 8, !dbg !5706, !tbaa !2442
  store i8* %39, i8** %p, align 8, !dbg !5705, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !5707, metadata !DIExpression()), !dbg !5708
  %40 = load i8*, i8** %buf, align 8, !dbg !5709, !tbaa !2442
  %41 = load i64, i64* %len, align 8, !dbg !5710, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !5711
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !5708, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %q, metadata !5712, metadata !DIExpression()), !dbg !5713
  %42 = load i8*, i8** %buf, align 8, !dbg !5714, !tbaa !2442
  store i8* %42, i8** %q, align 8, !dbg !5713, !tbaa !2442
  store i64 0, i64* %displayed_width, align 8, !dbg !5715, !tbaa !2579
  br label %while.cond, !dbg !5716

while.cond:                                       ; preds = %sw.epilog, %if.then38
  %43 = load i8*, i8** %p, align 8, !dbg !5717, !tbaa !2442
  %44 = load i8*, i8** %plimit, align 8, !dbg !5718, !tbaa !2442
  %cmp39 = icmp ult i8* %43, %44, !dbg !5719
  br i1 %cmp39, label %while.body, label %while.end, !dbg !5716

while.body:                                       ; preds = %while.cond
  %45 = load i8*, i8** %p, align 8, !dbg !5720, !tbaa !2442
  %46 = load i8, i8* %45, align 1, !dbg !5721, !tbaa !2497, !ctir !147
  %conv41 = sext i8 %46 to i32, !dbg !5721
  switch i32 %conv41, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !5722

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %47 = load i8*, i8** %p, align 8, !dbg !5723, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !5723
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5723, !tbaa !2442
  %48 = load i8, i8* %47, align 1, !dbg !5725, !tbaa !2497, !ctir !147
  %49 = load i8*, i8** %q, align 8, !dbg !5726, !tbaa !2442
  %incdec.ptr42 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !5726
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !5726, !tbaa !2442
  store i8 %48, i8* %49, align 1, !dbg !5727, !tbaa !2497, !ctir !144
  %50 = load i64, i64* %displayed_width, align 8, !dbg !5728, !tbaa !2579
  %add43 = add i64 %50, 1, !dbg !5728
  store i64 %add43, i64* %displayed_width, align 8, !dbg !5728, !tbaa !2579
  br label %sw.epilog, !dbg !5729

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !5730, metadata !DIExpression()), !dbg !5732
  %51 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !5732
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 8, i1 false), !dbg !5732
  br label %do.body, !dbg !5733

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !5734, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5739, metadata !DIExpression()), !dbg !5740
  %52 = load i8*, i8** %p, align 8, !dbg !5741, !tbaa !2442
  %53 = load i8*, i8** %plimit, align 8, !dbg !5742, !tbaa !2442
  %54 = load i8*, i8** %p, align 8, !dbg !5743, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %53 to i64, !dbg !5744
  %sub.ptr.rhs.cast = ptrtoint i8* %54 to i64, !dbg !5744
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5744
  %call44 = call i64 @rpl_mbrtowc(i32* %wc, i8* %52, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !5745
  store i64 %call44, i64* %bytes, align 8, !dbg !5746, !tbaa !2579
  %55 = load i64, i64* %bytes, align 8, !dbg !5747, !tbaa !2579
  %cmp45 = icmp eq i64 %55, -1, !dbg !5749
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !5750

if.then47:                                        ; preds = %do.body
  %56 = load i8*, i8** %p, align 8, !dbg !5751, !tbaa !2442
  %incdec.ptr48 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5751
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !5751, !tbaa !2442
  %57 = load i8*, i8** %q, align 8, !dbg !5753, !tbaa !2442
  %incdec.ptr49 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !5753
  store i8* %incdec.ptr49, i8** %q, align 8, !dbg !5753, !tbaa !2442
  store i8 63, i8* %57, align 1, !dbg !5754, !tbaa !2497, !ctir !144
  %58 = load i64, i64* %displayed_width, align 8, !dbg !5755, !tbaa !2579
  %add50 = add i64 %58, 1, !dbg !5755
  store i64 %add50, i64* %displayed_width, align 8, !dbg !5755, !tbaa !2579
  br label %do.end, !dbg !5756

if.end51:                                         ; preds = %do.body
  %59 = load i64, i64* %bytes, align 8, !dbg !5757, !tbaa !2579
  %cmp52 = icmp eq i64 %59, -2, !dbg !5759
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !5760

if.then54:                                        ; preds = %if.end51
  %60 = load i8*, i8** %plimit, align 8, !dbg !5761, !tbaa !2442
  store i8* %60, i8** %p, align 8, !dbg !5763, !tbaa !2442
  %61 = load i8*, i8** %q, align 8, !dbg !5764, !tbaa !2442
  %incdec.ptr55 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !5764
  store i8* %incdec.ptr55, i8** %q, align 8, !dbg !5764, !tbaa !2442
  store i8 63, i8* %61, align 1, !dbg !5765, !tbaa !2497, !ctir !144
  %62 = load i64, i64* %displayed_width, align 8, !dbg !5766, !tbaa !2579
  %add56 = add i64 %62, 1, !dbg !5766
  store i64 %add56, i64* %displayed_width, align 8, !dbg !5766, !tbaa !2579
  br label %do.end, !dbg !5767

if.end57:                                         ; preds = %if.end51
  %63 = load i64, i64* %bytes, align 8, !dbg !5768, !tbaa !2579
  %cmp58 = icmp eq i64 %63, 0, !dbg !5770
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5771

if.then60:                                        ; preds = %if.end57
  store i64 1, i64* %bytes, align 8, !dbg !5772, !tbaa !2579
  br label %if.end61, !dbg !5773

if.end61:                                         ; preds = %if.then60, %if.end57
  %64 = load i32, i32* %wc, align 4, !dbg !5774, !tbaa !2436
  %call62 = call i32 @wcwidth(i32 %64) #13, !dbg !5775
  store i32 %call62, i32* %w, align 4, !dbg !5776, !tbaa !2436
  %65 = load i32, i32* %w, align 4, !dbg !5777, !tbaa !2436
  %cmp63 = icmp sge i32 %65, 0, !dbg !5779
  br i1 %cmp63, label %if.then65, label %if.else72, !dbg !5780

if.then65:                                        ; preds = %if.end61
  br label %for.cond, !dbg !5781

for.cond:                                         ; preds = %for.inc, %if.then65
  %66 = load i64, i64* %bytes, align 8, !dbg !5783, !tbaa !2579
  %cmp66 = icmp ugt i64 %66, 0, !dbg !5786
  br i1 %cmp66, label %for.body, label %for.end, !dbg !5787

for.body:                                         ; preds = %for.cond
  %67 = load i8*, i8** %p, align 8, !dbg !5788, !tbaa !2442
  %incdec.ptr68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !5788
  store i8* %incdec.ptr68, i8** %p, align 8, !dbg !5788, !tbaa !2442
  %68 = load i8, i8* %67, align 1, !dbg !5789, !tbaa !2497, !ctir !147
  %69 = load i8*, i8** %q, align 8, !dbg !5790, !tbaa !2442
  %incdec.ptr69 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !5790
  store i8* %incdec.ptr69, i8** %q, align 8, !dbg !5790, !tbaa !2442
  store i8 %68, i8* %69, align 1, !dbg !5791, !tbaa !2497, !ctir !144
  br label %for.inc, !dbg !5792

for.inc:                                          ; preds = %for.body
  %70 = load i64, i64* %bytes, align 8, !dbg !5793, !tbaa !2579
  %dec = add i64 %70, -1, !dbg !5793
  store i64 %dec, i64* %bytes, align 8, !dbg !5793, !tbaa !2579
  br label %for.cond, !dbg !5794, !llvm.loop !5795

for.end:                                          ; preds = %for.cond
  %71 = load i32, i32* %w, align 4, !dbg !5797, !tbaa !2436
  %conv70 = sext i32 %71 to i64, !dbg !5797
  %72 = load i64, i64* %displayed_width, align 8, !dbg !5798, !tbaa !2579
  %add71 = add i64 %72, %conv70, !dbg !5798
  store i64 %add71, i64* %displayed_width, align 8, !dbg !5798, !tbaa !2579
  br label %if.end76, !dbg !5799

if.else72:                                        ; preds = %if.end61
  %73 = load i64, i64* %bytes, align 8, !dbg !5800, !tbaa !2579
  %74 = load i8*, i8** %p, align 8, !dbg !5802, !tbaa !2442
  %add.ptr73 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !5802
  store i8* %add.ptr73, i8** %p, align 8, !dbg !5802, !tbaa !2442
  %75 = load i8*, i8** %q, align 8, !dbg !5803, !tbaa !2442
  %incdec.ptr74 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5803
  store i8* %incdec.ptr74, i8** %q, align 8, !dbg !5803, !tbaa !2442
  store i8 63, i8* %75, align 1, !dbg !5804, !tbaa !2497, !ctir !144
  %76 = load i64, i64* %displayed_width, align 8, !dbg !5805, !tbaa !2579
  %add75 = add i64 %76, 1, !dbg !5805
  store i64 %add75, i64* %displayed_width, align 8, !dbg !5805, !tbaa !2579
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %for.end
  br label %do.cond, !dbg !5806

do.cond:                                          ; preds = %if.end76
  %call77 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !5807
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5808
  %lnot = xor i1 %tobool78, true, !dbg !5808
  br i1 %lnot, label %do.body, label %do.end, !dbg !5806, !llvm.loop !5809

do.end:                                           ; preds = %do.cond, %if.then54, %if.then47
  br label %sw.epilog, !dbg !5811

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !5716, !llvm.loop !5812

while.end:                                        ; preds = %while.cond
  %77 = load i8*, i8** %q, align 8, !dbg !5814, !tbaa !2442
  %78 = load i8*, i8** %buf, align 8, !dbg !5815, !tbaa !2442
  %sub.ptr.lhs.cast79 = ptrtoint i8* %77 to i64, !dbg !5816
  %sub.ptr.rhs.cast80 = ptrtoint i8* %78 to i64, !dbg !5816
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !5816
  store i64 %sub.ptr.sub81, i64* %len, align 8, !dbg !5817, !tbaa !2579
  br label %if.end99, !dbg !5818

if.else82:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p83, metadata !5819, metadata !DIExpression()), !dbg !5821
  %79 = load i8*, i8** %buf, align 8, !dbg !5822, !tbaa !2442
  store i8* %79, i8** %p83, align 8, !dbg !5821, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit84, metadata !5823, metadata !DIExpression()), !dbg !5824
  %80 = load i8*, i8** %buf, align 8, !dbg !5825, !tbaa !2442
  %81 = load i64, i64* %len, align 8, !dbg !5826, !tbaa !2579
  %add.ptr85 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !5827
  store i8* %add.ptr85, i8** %plimit84, align 8, !dbg !5824, !tbaa !2442
  br label %while.cond86, !dbg !5828

while.cond86:                                     ; preds = %if.end96, %if.else82
  %82 = load i8*, i8** %p83, align 8, !dbg !5829, !tbaa !2442
  %83 = load i8*, i8** %plimit84, align 8, !dbg !5830, !tbaa !2442
  %cmp87 = icmp ult i8* %82, %83, !dbg !5831
  br i1 %cmp87, label %while.body89, label %while.end98, !dbg !5828

while.body89:                                     ; preds = %while.cond86
  %call90 = call i16** @__ctype_b_loc() #17, !dbg !5832
  %84 = load i16*, i16** %call90, align 8, !dbg !5832, !tbaa !2442, !ctir !587
  %85 = load i8*, i8** %p83, align 8, !dbg !5832, !tbaa !2442
  %86 = load i8, i8* %85, align 1, !dbg !5832, !tbaa !2497, !ctir !144
  %call91 = call zeroext i8 @to_uchar(i8 signext %86), !dbg !5832
  %conv92 = zext i8 %call91 to i32, !dbg !5832
  %idxprom = sext i32 %conv92 to i64, !dbg !5832
  %arrayidx = getelementptr inbounds i16, i16* %84, i64 %idxprom, !dbg !5832, !ctir !587
  %87 = load i16, i16* %arrayidx, align 2, !dbg !5832, !tbaa !5835
  %conv93 = zext i16 %87 to i32, !dbg !5832
  %and = and i32 %conv93, 16384, !dbg !5832
  %tobool94 = icmp ne i32 %and, 0, !dbg !5832
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !5836

if.then95:                                        ; preds = %while.body89
  %88 = load i8*, i8** %p83, align 8, !dbg !5837, !tbaa !2442
  store i8 63, i8* %88, align 1, !dbg !5838, !tbaa !2497, !ctir !144
  br label %if.end96, !dbg !5839

if.end96:                                         ; preds = %if.then95, %while.body89
  %89 = load i8*, i8** %p83, align 8, !dbg !5840, !tbaa !2442
  %incdec.ptr97 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !5840
  store i8* %incdec.ptr97, i8** %p83, align 8, !dbg !5840, !tbaa !2442
  br label %while.cond86, !dbg !5828, !llvm.loop !5841

while.end98:                                      ; preds = %while.cond86
  %90 = load i64, i64* %len, align 8, !dbg !5843, !tbaa !2579
  store i64 %90, i64* %displayed_width, align 8, !dbg !5844, !tbaa !2579
  br label %if.end99

if.end99:                                         ; preds = %while.end98, %while.end
  br label %if.end132, !dbg !5845

if.else100:                                       ; preds = %if.end32
  %91 = load i64*, i64** %width.addr, align 8, !dbg !5846, !tbaa !2442
  %cmp101 = icmp ne i64* %91, null, !dbg !5848
  br i1 %cmp101, label %if.then103, label %if.end131, !dbg !5849

if.then103:                                       ; preds = %if.else100
  %call104 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5850
  %cmp105 = icmp ugt i64 %call104, 1, !dbg !5853
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !5854

if.then107:                                       ; preds = %if.then103
  %92 = load i8*, i8** %buf, align 8, !dbg !5855, !tbaa !2442
  %93 = load i64, i64* %len, align 8, !dbg !5856, !tbaa !2579
  %call108 = call i32 @mbsnwidth(i8* %92, i64 %93, i32 0), !dbg !5857
  %conv109 = sext i32 %call108 to i64, !dbg !5857
  store i64 %conv109, i64* %displayed_width, align 8, !dbg !5858, !tbaa !2579
  br label %if.end130, !dbg !5859

if.else110:                                       ; preds = %if.then103
  call void @llvm.dbg.declare(metadata i8** %p111, metadata !5860, metadata !DIExpression()), !dbg !5862
  %94 = load i8*, i8** %buf, align 8, !dbg !5863, !tbaa !2442
  store i8* %94, i8** %p111, align 8, !dbg !5862, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit112, metadata !5864, metadata !DIExpression()), !dbg !5865
  %95 = load i8*, i8** %buf, align 8, !dbg !5866, !tbaa !2442
  %96 = load i64, i64* %len, align 8, !dbg !5867, !tbaa !2579
  %add.ptr113 = getelementptr inbounds i8, i8* %95, i64 %96, !dbg !5868
  store i8* %add.ptr113, i8** %plimit112, align 8, !dbg !5865, !tbaa !2442
  store i64 0, i64* %displayed_width, align 8, !dbg !5869, !tbaa !2579
  br label %while.cond114, !dbg !5870

while.cond114:                                    ; preds = %if.end127, %if.else110
  %97 = load i8*, i8** %p111, align 8, !dbg !5871, !tbaa !2442
  %98 = load i8*, i8** %plimit112, align 8, !dbg !5872, !tbaa !2442
  %cmp115 = icmp ult i8* %97, %98, !dbg !5873
  br i1 %cmp115, label %while.body117, label %while.end129, !dbg !5870

while.body117:                                    ; preds = %while.cond114
  %call118 = call i16** @__ctype_b_loc() #17, !dbg !5874
  %99 = load i16*, i16** %call118, align 8, !dbg !5874, !tbaa !2442, !ctir !587
  %100 = load i8*, i8** %p111, align 8, !dbg !5874, !tbaa !2442
  %101 = load i8, i8* %100, align 1, !dbg !5874, !tbaa !2497, !ctir !147
  %call119 = call zeroext i8 @to_uchar(i8 signext %101), !dbg !5874
  %conv120 = zext i8 %call119 to i32, !dbg !5874
  %idxprom121 = sext i32 %conv120 to i64, !dbg !5874
  %arrayidx122 = getelementptr inbounds i16, i16* %99, i64 %idxprom121, !dbg !5874, !ctir !587
  %102 = load i16, i16* %arrayidx122, align 2, !dbg !5874, !tbaa !5835
  %conv123 = zext i16 %102 to i32, !dbg !5874
  %and124 = and i32 %conv123, 16384, !dbg !5874
  %tobool125 = icmp ne i32 %and124, 0, !dbg !5874
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !5877

if.then126:                                       ; preds = %while.body117
  %103 = load i64, i64* %displayed_width, align 8, !dbg !5878, !tbaa !2579
  %inc = add i64 %103, 1, !dbg !5878
  store i64 %inc, i64* %displayed_width, align 8, !dbg !5878, !tbaa !2579
  br label %if.end127, !dbg !5879

if.end127:                                        ; preds = %if.then126, %while.body117
  %104 = load i8*, i8** %p111, align 8, !dbg !5880, !tbaa !2442
  %incdec.ptr128 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !5880
  store i8* %incdec.ptr128, i8** %p111, align 8, !dbg !5880, !tbaa !2442
  br label %while.cond114, !dbg !5870, !llvm.loop !5881

while.end129:                                     ; preds = %while.cond114
  br label %if.end130

if.end130:                                        ; preds = %while.end129, %if.then107
  br label %if.end131, !dbg !5883

if.end131:                                        ; preds = %if.end130, %if.else100
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end99
  %105 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5884, !tbaa !2461
  %tobool133 = trunc i8 %105 to i1, !dbg !5884
  br i1 %tobool133, label %land.lhs.true, label %land.end140, !dbg !5885

land.lhs.true:                                    ; preds = %if.end132
  %106 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5886, !tbaa !2461
  %tobool135 = trunc i8 %106 to i1, !dbg !5886
  br i1 %tobool135, label %land.rhs137, label %land.end140, !dbg !5887

land.rhs137:                                      ; preds = %land.lhs.true
  %107 = load i8, i8* %quoted, align 1, !dbg !5888, !tbaa !2461
  %tobool138 = trunc i8 %107 to i1, !dbg !5888
  %lnot139 = xor i1 %tobool138, true, !dbg !5889
  br label %land.end140

land.end140:                                      ; preds = %land.rhs137, %land.lhs.true, %if.end132
  %108 = phi i1 [ false, %land.lhs.true ], [ false, %if.end132 ], [ %lnot139, %land.rhs137 ], !dbg !5623
  %109 = load i8*, i8** %pad.addr, align 8, !dbg !5890, !tbaa !2442
  %frombool141 = zext i1 %108 to i8, !dbg !5891
  store i8 %frombool141, i8* %109, align 1, !dbg !5891, !tbaa !2461, !ctir !141
  %110 = load i64*, i64** %width.addr, align 8, !dbg !5892, !tbaa !2442
  %cmp142 = icmp ne i64* %110, null, !dbg !5894
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !5895

if.then144:                                       ; preds = %land.end140
  %111 = load i64, i64* %displayed_width, align 8, !dbg !5896, !tbaa !2579
  %112 = load i64*, i64** %width.addr, align 8, !dbg !5897, !tbaa !2442
  store i64 %111, i64* %112, align 8, !dbg !5898, !tbaa !2579, !ctir !149
  br label %if.end145, !dbg !5899

if.end145:                                        ; preds = %if.then144, %land.end140
  %113 = load i8*, i8** %buf, align 8, !dbg !5900, !tbaa !2442
  %114 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5901, !tbaa !2442
  store i8* %113, i8** %114, align 8, !dbg !5902, !tbaa !2442, !ctir !143
  %115 = load i64, i64* %len, align 8, !dbg !5903, !tbaa !2579
  ret i64 %115, !dbg !5904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_color_indicator(%struct.bin_str* %ind) #0 !dbg !5905 !ctir !655 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5908, !tbaa !2442
  %tobool = icmp ne %struct.bin_str* %0, null, !dbg !5908
  br i1 %tobool, label %if.then, label %if.end2, !dbg !5910

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !5911
  br i1 %call, label %if.then1, label %if.end, !dbg !5914

if.then1:                                         ; preds = %if.then
  call void @restore_default_color(), !dbg !5915
  br label %if.end, !dbg !5915

if.end:                                           ; preds = %if.then1, %if.then
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5916
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5917, !tbaa !2442
  call void @put_indicator(%struct.bin_str* %1), !dbg !5918
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5919
  br label %if.end2, !dbg !5920

if.end2:                                          ; preds = %if.end, %entry
  %2 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5921, !tbaa !2442
  %cmp = icmp ne %struct.bin_str* %2, null, !dbg !5922
  ret i1 %cmp, !dbg !5923
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @file_escape(i8* %str, i1 zeroext %path) #0 !dbg !5924 !ctir !657 {
entry:
  %str.addr = alloca i8*, align 8
  %path.addr = alloca i8, align 1
  %esc = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  %frombool = zext i1 %path to i8
  store i8 %frombool, i8* %path.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %path.addr, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata i8** %esc, metadata !5929, metadata !DIExpression()), !dbg !5930
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5931, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !5932
  %add = add i64 %call, 1, !dbg !5933
  %call1 = call noalias i8* @xnmalloc(i64 3, i64 %add), !dbg !5934
  store i8* %call1, i8** %esc, align 8, !dbg !5930, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5935, metadata !DIExpression()), !dbg !5936
  %1 = load i8*, i8** %esc, align 8, !dbg !5937, !tbaa !2442
  store i8* %1, i8** %p, align 8, !dbg !5936, !tbaa !2442
  br label %while.cond, !dbg !5938

while.cond:                                       ; preds = %if.end15, %entry
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5939, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !5940, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %3, 0, !dbg !5938
  br i1 %tobool, label %while.body, label %while.end, !dbg !5938

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %path.addr, align 1, !dbg !5941, !tbaa !2461
  %tobool2 = trunc i8 %4 to i1, !dbg !5941
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5944

land.lhs.true:                                    ; preds = %while.body
  %5 = load i8*, i8** %str.addr, align 8, !dbg !5945, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !5945, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !5945
  %cmp = icmp eq i32 %conv, 47, !dbg !5945
  br i1 %cmp, label %if.then, label %if.else, !dbg !5946

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8*, i8** %p, align 8, !dbg !5947, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5947
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5947, !tbaa !2442
  store i8 47, i8* %7, align 1, !dbg !5949, !tbaa !2497, !ctir !144
  %8 = load i8*, i8** %str.addr, align 8, !dbg !5950, !tbaa !2442
  %incdec.ptr4 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5950
  store i8* %incdec.ptr4, i8** %str.addr, align 8, !dbg !5950, !tbaa !2442
  br label %if.end15, !dbg !5951

if.else:                                          ; preds = %land.lhs.true, %while.body
  %9 = load i8*, i8** %str.addr, align 8, !dbg !5952, !tbaa !2442
  %10 = load i8, i8* %9, align 1, !dbg !5954, !tbaa !2497, !ctir !147
  %call5 = call zeroext i8 @to_uchar(i8 signext %10), !dbg !5955
  %idxprom = zext i8 %call5 to i64, !dbg !5956
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !5956, !ctir !343
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5956, !tbaa !2497
  %tobool6 = icmp ne i8 %11, 0, !dbg !5956
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !5957

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !5958, !tbaa !2442
  %incdec.ptr8 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !5958
  store i8* %incdec.ptr8, i8** %str.addr, align 8, !dbg !5958, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !5959, !tbaa !2497, !ctir !147
  %14 = load i8*, i8** %p, align 8, !dbg !5960, !tbaa !2442
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5960
  store i8* %incdec.ptr9, i8** %p, align 8, !dbg !5960, !tbaa !2442
  store i8 %13, i8* %14, align 1, !dbg !5961, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !5962

if.else10:                                        ; preds = %if.else
  %15 = load i8*, i8** %p, align 8, !dbg !5963, !tbaa !2442
  %16 = load i8*, i8** %str.addr, align 8, !dbg !5964, !tbaa !2442
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5964
  store i8* %incdec.ptr11, i8** %str.addr, align 8, !dbg !5964, !tbaa !2442
  %17 = load i8, i8* %16, align 1, !dbg !5965, !tbaa !2497, !ctir !147
  %call12 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !5966
  %conv13 = zext i8 %call12 to i32, !dbg !5966
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), i32 %conv13) #13, !dbg !5967
  %18 = load i8*, i8** %p, align 8, !dbg !5968, !tbaa !2442
  %idx.ext = sext i32 %call14 to i64, !dbg !5968
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !5968
  store i8* %add.ptr, i8** %p, align 8, !dbg !5968, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !5938, !llvm.loop !5969

while.end:                                        ; preds = %while.cond
  %19 = load i8*, i8** %p, align 8, !dbg !5971, !tbaa !2442
  store i8 0, i8* %19, align 1, !dbg !5972, !tbaa !2497, !ctir !144
  %20 = load i8*, i8** %esc, align 8, !dbg !5973, !tbaa !2442
  ret i8* %20, !dbg !5974
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #0 !dbg !5975 !ctir !589 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  %0 = load i8, i8* %ch.addr, align 1, !dbg !5978, !tbaa !2497
  ret i8 %0, !dbg !5979
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_file_name_and_frills(%struct.fileinfo* %f, i64 %start_col) #0 !dbg !5980 !ctir !735 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %start_col.addr = alloca i64, align 8
  %buf = alloca [652 x i8], align 16, !ctir !622
  %width = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5985, metadata !DIExpression()), !dbg !5986
  call void @set_normal_color(), !dbg !5987
  %0 = load i8, i8* @print_inode, align 1, !dbg !5988, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5988
  br i1 %tobool, label %if.then, label %if.end, !dbg !5990

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !5991, !tbaa !2497
  %cmp = icmp eq i32 %1, 4, !dbg !5992
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5991

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5991

cond.false:                                       ; preds = %if.then
  %2 = load i32, i32* @inode_number_width, align 4, !dbg !5993, !tbaa !2436
  br label %cond.end, !dbg !5991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %2, %cond.false ], !dbg !5991
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5994
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5995, !tbaa !2442
  %call = call i8* @format_inode(i8* %arraydecay, i64 652, %struct.fileinfo* %3), !dbg !5996
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond, i8* %call), !dbg !5997
  br label %if.end, !dbg !5997

if.end:                                           ; preds = %cond.end, %entry
  %4 = load i8, i8* @print_block_size, align 1, !dbg !5998, !tbaa !2461
  %tobool2 = trunc i8 %4 to i1, !dbg !5998
  br i1 %tobool2, label %if.then3, label %if.end17, !dbg !6000

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* @format, align 4, !dbg !6001, !tbaa !2497
  %cmp4 = icmp eq i32 %5, 4, !dbg !6002
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !6001

cond.true5:                                       ; preds = %if.then3
  br label %cond.end7, !dbg !6001

cond.false6:                                      ; preds = %if.then3
  %6 = load i32, i32* @block_size_width, align 4, !dbg !6003, !tbaa !2436
  br label %cond.end7, !dbg !6001

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ %6, %cond.false6 ], !dbg !6001
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6004, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 7, !dbg !6005, !ctir !184
  %8 = load i8, i8* %stat_ok, align 8, !dbg !6005, !tbaa !4023
  %tobool9 = trunc i8 %8 to i1, !dbg !6005, !ctir !141
  br i1 %tobool9, label %cond.false11, label %cond.true10, !dbg !6006

cond.true10:                                      ; preds = %cond.end7
  br label %cond.end14, !dbg !6006

cond.false11:                                     ; preds = %cond.end7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6007, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 3, !dbg !6007, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 10, !dbg !6007, !ctir !191
  %10 = load i64, i64* %st_blocks, align 8, !dbg !6007, !tbaa !4224, !ctir !212
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6008
  %11 = load i32, i32* @human_output_opts, align 4, !dbg !6009, !tbaa !2436
  %12 = load i64, i64* @output_block_size, align 8, !dbg !6010, !tbaa !2579
  %call13 = call i8* @human_readable(i64 %10, i8* %arraydecay12, i32 %11, i64 512, i64 %12), !dbg !6011
  br label %cond.end14, !dbg !6006

cond.end14:                                       ; preds = %cond.false11, %cond.true10
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true10 ], [ %call13, %cond.false11 ], !dbg !6006
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond8, i8* %cond15), !dbg !6012
  br label %if.end17, !dbg !6012

if.end17:                                         ; preds = %cond.end14, %if.end
  %13 = load i8, i8* @print_scontext, align 1, !dbg !6013, !tbaa !2461
  %tobool18 = trunc i8 %13 to i1, !dbg !6013
  br i1 %tobool18, label %if.then19, label %if.end26, !dbg !6015

if.then19:                                        ; preds = %if.end17
  %14 = load i32, i32* @format, align 4, !dbg !6016, !tbaa !2497
  %cmp20 = icmp eq i32 %14, 4, !dbg !6017
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !6016

cond.true21:                                      ; preds = %if.then19
  br label %cond.end23, !dbg !6016

cond.false22:                                     ; preds = %if.then19
  %15 = load i32, i32* @scontext_width, align 4, !dbg !6018, !tbaa !2436
  br label %cond.end23, !dbg !6016

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ %15, %cond.false22 ], !dbg !6016
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6019, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 6, !dbg !6020, !ctir !184
  %17 = load i8*, i8** %scontext, align 8, !dbg !6020, !tbaa !4070, !ctir !143
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond24, i8* %17), !dbg !6021
  br label %if.end26, !dbg !6021

if.end26:                                         ; preds = %cond.end23, %if.end17
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6022, metadata !DIExpression()), !dbg !6023
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6024, !tbaa !2442
  %19 = load i64, i64* %start_col.addr, align 8, !dbg !6025, !tbaa !2579
  %call27 = call i64 @print_name_with_quoting(%struct.fileinfo* %18, i1 zeroext false, %struct.obstack* null, i64 %19), !dbg !6026
  store i64 %call27, i64* %width, align 8, !dbg !6023, !tbaa !2579
  %20 = load i32, i32* @indicator_style, align 4, !dbg !6027, !tbaa !2497
  %cmp28 = icmp ne i32 %20, 0, !dbg !6029
  br i1 %cmp28, label %if.then29, label %if.end34, !dbg !6030

if.then29:                                        ; preds = %if.end26
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6031, !tbaa !2442
  %stat_ok30 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 7, !dbg !6032, !ctir !184
  %22 = load i8, i8* %stat_ok30, align 8, !dbg !6032, !tbaa !4023
  %tobool31 = trunc i8 %22 to i1, !dbg !6032, !ctir !141
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6033, !tbaa !2442
  %stat32 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 3, !dbg !6034, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat32, i32 0, i32 3, !dbg !6035, !ctir !191
  %24 = load i32, i32* %st_mode, align 8, !dbg !6035, !tbaa !3982, !ctir !201
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6036, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 4, !dbg !6037, !ctir !184
  %26 = load i32, i32* %filetype, align 8, !dbg !6037, !tbaa !3815, !ctir !36
  %call33 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool31, i32 %24, i32 %26), !dbg !6038
  %conv = zext i1 %call33 to i64, !dbg !6038
  %27 = load i64, i64* %width, align 8, !dbg !6039, !tbaa !2579
  %add = add i64 %27, %conv, !dbg !6039
  store i64 %add, i64* %width, align 8, !dbg !6039, !tbaa !2579
  br label %if.end34, !dbg !6040

if.end34:                                         ; preds = %if.then29, %if.end26
  %28 = load i64, i64* %width, align 8, !dbg !6041, !tbaa !2579
  ret i64 %28, !dbg !6042
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_with_separator(i8 signext %sep) #0 !dbg !6043 !ctir !749 {
entry:
  %sep.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %len = alloca i64, align 8, !ctir !149
  %separator = alloca i8, align 1, !ctir !144
  store i8 %sep, i8* %sep.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6048, metadata !DIExpression()), !dbg !6049
  store i64 0, i64* %pos, align 8, !dbg !6049, !tbaa !2579
  store i64 0, i64* %filesno, align 8, !dbg !6050, !tbaa !2579
  br label %for.cond, !dbg !6052

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %filesno, align 8, !dbg !6053, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !6055, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !6056
  br i1 %cmp, label %for.body, label %for.end, !dbg !6057

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6058, metadata !DIExpression()), !dbg !6060
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6061, !tbaa !2442
  %3 = load i64, i64* %filesno, align 8, !dbg !6062, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !6061, !ctir !663
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !6061, !tbaa !2442
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !6061
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !6060, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6063, metadata !DIExpression()), !dbg !6064
  %6 = load i64, i64* @line_length, align 8, !dbg !6065, !tbaa !2579
  %tobool = icmp ne i64 %6, 0, !dbg !6065
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6065

cond.true:                                        ; preds = %for.body
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6066, !tbaa !2442
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %7), !dbg !6067
  br label %cond.end, !dbg !6065

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !6065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !6065
  store i64 %cond, i64* %len, align 8, !dbg !6064, !tbaa !2579
  %8 = load i64, i64* %filesno, align 8, !dbg !6068, !tbaa !2579
  %cmp1 = icmp ne i64 %8, 0, !dbg !6070
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !6071

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %separator, metadata !6072, metadata !DIExpression()), !dbg !6074
  %9 = load i64, i64* @line_length, align 8, !dbg !6075, !tbaa !2579
  %tobool2 = icmp ne i64 %9, 0, !dbg !6075
  br i1 %tobool2, label %lor.lhs.false, label %if.then7, !dbg !6077

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i64, i64* %pos, align 8, !dbg !6078, !tbaa !2579
  %11 = load i64, i64* %len, align 8, !dbg !6079, !tbaa !2579
  %add = add i64 %10, %11, !dbg !6080
  %add3 = add i64 %add, 2, !dbg !6081
  %12 = load i64, i64* @line_length, align 8, !dbg !6082, !tbaa !2579
  %cmp4 = icmp ult i64 %add3, %12, !dbg !6083
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !6084

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load i64, i64* %pos, align 8, !dbg !6085, !tbaa !2579
  %14 = load i64, i64* %len, align 8, !dbg !6086, !tbaa !2579
  %sub = sub i64 -1, %14, !dbg !6087
  %sub5 = sub i64 %sub, 2, !dbg !6088
  %cmp6 = icmp ule i64 %13, %sub5, !dbg !6089
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6090

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %15 = load i64, i64* %pos, align 8, !dbg !6091, !tbaa !2579
  %add8 = add i64 %15, 2, !dbg !6091
  store i64 %add8, i64* %pos, align 8, !dbg !6091, !tbaa !2579
  store i8 32, i8* %separator, align 1, !dbg !6093, !tbaa !2497
  br label %if.end, !dbg !6094

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i64 0, i64* %pos, align 8, !dbg !6095, !tbaa !2579
  store i8 10, i8* %separator, align 1, !dbg !6097, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %16 = load i8, i8* %sep.addr, align 1, !dbg !6098, !tbaa !2497
  %conv = sext i8 %16 to i32, !dbg !6098
  %call9 = call i32 @putchar_unlocked(i32 %conv), !dbg !6098
  %17 = load i8, i8* %separator, align 1, !dbg !6099, !tbaa !2497
  %conv10 = sext i8 %17 to i32, !dbg !6099
  %call11 = call i32 @putchar_unlocked(i32 %conv10), !dbg !6099
  br label %if.end12, !dbg !6100

if.end12:                                         ; preds = %if.end, %cond.end
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6101, !tbaa !2442
  %19 = load i64, i64* %pos, align 8, !dbg !6102, !tbaa !2579
  %call13 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6103
  %20 = load i64, i64* %len, align 8, !dbg !6104, !tbaa !2579
  %21 = load i64, i64* %pos, align 8, !dbg !6105, !tbaa !2579
  %add14 = add i64 %21, %20, !dbg !6105
  store i64 %add14, i64* %pos, align 8, !dbg !6105, !tbaa !2579
  br label %for.inc, !dbg !6106

for.inc:                                          ; preds = %if.end12
  %22 = load i64, i64* %filesno, align 8, !dbg !6107, !tbaa !2579
  %inc = add i64 %22, 1, !dbg !6107
  store i64 %inc, i64* %filesno, align 8, !dbg !6107, !tbaa !2579
  br label %for.cond, !dbg !6108, !llvm.loop !6109

for.end:                                          ; preds = %for.cond
  %call15 = call i32 @putchar_unlocked(i32 10), !dbg !6111
  ret void, !dbg !6112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_many_per_line() #0 !dbg !6113 !ctir !341 {
entry:
  %row = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !755
  %rows = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %row, metadata !6114, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6116, metadata !DIExpression()), !dbg !6117
  %call = call i64 @calculate_columns(i1 zeroext true), !dbg !6118
  store i64 %call, i64* %cols, align 8, !dbg !6117, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6121, !tbaa !2442
  %1 = load i64, i64* %cols, align 8, !dbg !6122, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !6123
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6121, !ctir !762
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6120, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %rows, metadata !6124, metadata !DIExpression()), !dbg !6125
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !6126, !tbaa !2579
  %3 = load i64, i64* %cols, align 8, !dbg !6127, !tbaa !2579
  %div = udiv i64 %2, %3, !dbg !6128
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !6129, !tbaa !2579
  %5 = load i64, i64* %cols, align 8, !dbg !6130, !tbaa !2579
  %rem = urem i64 %4, %5, !dbg !6131
  %cmp = icmp ne i64 %rem, 0, !dbg !6132
  %conv = zext i1 %cmp to i32, !dbg !6132
  %conv1 = sext i32 %conv to i64, !dbg !6133
  %add = add i64 %div, %conv1, !dbg !6134
  store i64 %add, i64* %rows, align 8, !dbg !6125, !tbaa !2579
  store i64 0, i64* %row, align 8, !dbg !6135, !tbaa !2579
  br label %for.cond, !dbg !6137

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i64, i64* %row, align 8, !dbg !6138, !tbaa !2579
  %7 = load i64, i64* %rows, align 8, !dbg !6140, !tbaa !2579
  %cmp2 = icmp ult i64 %6, %7, !dbg !6141
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6143, metadata !DIExpression()), !dbg !6145
  store i64 0, i64* %col, align 8, !dbg !6145, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6146, metadata !DIExpression()), !dbg !6147
  %8 = load i64, i64* %row, align 8, !dbg !6148, !tbaa !2579
  store i64 %8, i64* %filesno, align 8, !dbg !6147, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6149, metadata !DIExpression()), !dbg !6150
  store i64 0, i64* %pos, align 8, !dbg !6150, !tbaa !2579
  br label %while.body, !dbg !6151

while.body:                                       ; preds = %for.body, %if.end
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6152, metadata !DIExpression()), !dbg !6154
  %9 = load i8**, i8*** @sorted_file, align 8, !dbg !6155, !tbaa !2442
  %10 = load i64, i64* %filesno, align 8, !dbg !6156, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !6155, !ctir !663
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !6155, !tbaa !2442
  %12 = bitcast i8* %11 to %struct.fileinfo*, !dbg !6155
  store %struct.fileinfo* %12, %struct.fileinfo** %f, align 8, !dbg !6154, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6157, metadata !DIExpression()), !dbg !6158
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6159, !tbaa !2442
  %call5 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %13), !dbg !6160
  store i64 %call5, i64* %name_length, align 8, !dbg !6158, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6161, metadata !DIExpression()), !dbg !6162
  %14 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6163, !tbaa !2442
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %14, i32 0, i32 2, !dbg !6164, !ctir !756
  %15 = load i64*, i64** %col_arr, align 8, !dbg !6164, !tbaa !6165, !ctir !148
  %16 = load i64, i64* %col, align 8, !dbg !6167, !tbaa !2579
  %inc = add i64 %16, 1, !dbg !6167
  store i64 %inc, i64* %col, align 8, !dbg !6167, !tbaa !2579
  %arrayidx6 = getelementptr inbounds i64, i64* %15, i64 %16, !dbg !6163, !ctir !148
  %17 = load i64, i64* %arrayidx6, align 8, !dbg !6163, !tbaa !2579
  store i64 %17, i64* %max_name_length, align 8, !dbg !6162, !tbaa !2579
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6168, !tbaa !2442
  %19 = load i64, i64* %pos, align 8, !dbg !6169, !tbaa !2579
  %call7 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6170
  %20 = load i64, i64* %rows, align 8, !dbg !6171, !tbaa !2579
  %21 = load i64, i64* %filesno, align 8, !dbg !6172, !tbaa !2579
  %add8 = add i64 %21, %20, !dbg !6172
  store i64 %add8, i64* %filesno, align 8, !dbg !6172, !tbaa !2579
  %22 = load i64, i64* %filesno, align 8, !dbg !6173, !tbaa !2579
  %23 = load i64, i64* @cwd_n_used, align 8, !dbg !6175, !tbaa !2579
  %cmp9 = icmp uge i64 %22, %23, !dbg !6176
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6177

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6178

if.end:                                           ; preds = %while.body
  %24 = load i64, i64* %pos, align 8, !dbg !6179, !tbaa !2579
  %25 = load i64, i64* %name_length, align 8, !dbg !6180, !tbaa !2579
  %add11 = add i64 %24, %25, !dbg !6181
  %26 = load i64, i64* %pos, align 8, !dbg !6182, !tbaa !2579
  %27 = load i64, i64* %max_name_length, align 8, !dbg !6183, !tbaa !2579
  %add12 = add i64 %26, %27, !dbg !6184
  call void @indent(i64 %add11, i64 %add12), !dbg !6185
  %28 = load i64, i64* %max_name_length, align 8, !dbg !6186, !tbaa !2579
  %29 = load i64, i64* %pos, align 8, !dbg !6187, !tbaa !2579
  %add13 = add i64 %29, %28, !dbg !6187
  store i64 %add13, i64* %pos, align 8, !dbg !6187, !tbaa !2579
  br label %while.body, !dbg !6151, !llvm.loop !6188

while.end:                                        ; preds = %if.then
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6190
  br label %for.inc, !dbg !6191

for.inc:                                          ; preds = %while.end
  %30 = load i64, i64* %row, align 8, !dbg !6192, !tbaa !2579
  %inc15 = add i64 %30, 1, !dbg !6192
  store i64 %inc15, i64* %row, align 8, !dbg !6192, !tbaa !2579
  br label %for.cond, !dbg !6193, !llvm.loop !6194

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6196
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_horizontal() #0 !dbg !6197 !ctir !341 {
entry:
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !755
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6198, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6200, metadata !DIExpression()), !dbg !6201
  store i64 0, i64* %pos, align 8, !dbg !6201, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6202, metadata !DIExpression()), !dbg !6203
  %call = call i64 @calculate_columns(i1 zeroext false), !dbg !6204
  store i64 %call, i64* %cols, align 8, !dbg !6203, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6205, metadata !DIExpression()), !dbg !6206
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6207, !tbaa !2442
  %1 = load i64, i64* %cols, align 8, !dbg !6208, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !6209
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6207, !ctir !762
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6206, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6210, metadata !DIExpression()), !dbg !6211
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6212, !tbaa !2442
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !6212, !ctir !663
  %3 = load i8*, i8** %arrayidx1, align 8, !dbg !6212, !tbaa !2442
  %4 = bitcast i8* %3 to %struct.fileinfo*, !dbg !6212
  store %struct.fileinfo* %4, %struct.fileinfo** %f, align 8, !dbg !6211, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6213, metadata !DIExpression()), !dbg !6214
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6215, !tbaa !2442
  %call2 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %5), !dbg !6216
  store i64 %call2, i64* %name_length, align 8, !dbg !6214, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6217, metadata !DIExpression()), !dbg !6218
  %6 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6219, !tbaa !2442
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %6, i32 0, i32 2, !dbg !6220, !ctir !756
  %7 = load i64*, i64** %col_arr, align 8, !dbg !6220, !tbaa !6165, !ctir !148
  %arrayidx3 = getelementptr inbounds i64, i64* %7, i64 0, !dbg !6219, !ctir !148
  %8 = load i64, i64* %arrayidx3, align 8, !dbg !6219, !tbaa !2579
  store i64 %8, i64* %max_name_length, align 8, !dbg !6218, !tbaa !2579
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6221, !tbaa !2442
  %call4 = call i64 @print_file_name_and_frills(%struct.fileinfo* %9, i64 0), !dbg !6222
  store i64 1, i64* %filesno, align 8, !dbg !6223, !tbaa !2579
  br label %for.cond, !dbg !6225

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i64, i64* %filesno, align 8, !dbg !6226, !tbaa !2579
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !6228, !tbaa !2579
  %cmp = icmp ult i64 %10, %11, !dbg !6229
  br i1 %cmp, label %for.body, label %for.end, !dbg !6230

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6231, metadata !DIExpression()), !dbg !6233
  %12 = load i64, i64* %filesno, align 8, !dbg !6234, !tbaa !2579
  %13 = load i64, i64* %cols, align 8, !dbg !6235, !tbaa !2579
  %rem = urem i64 %12, %13, !dbg !6236
  store i64 %rem, i64* %col, align 8, !dbg !6233, !tbaa !2579
  %14 = load i64, i64* %col, align 8, !dbg !6237, !tbaa !2579
  %cmp5 = icmp eq i64 %14, 0, !dbg !6239
  br i1 %cmp5, label %if.then, label %if.else, !dbg !6240

if.then:                                          ; preds = %for.body
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6241
  store i64 0, i64* %pos, align 8, !dbg !6243, !tbaa !2579
  br label %if.end, !dbg !6244

if.else:                                          ; preds = %for.body
  %15 = load i64, i64* %pos, align 8, !dbg !6245, !tbaa !2579
  %16 = load i64, i64* %name_length, align 8, !dbg !6247, !tbaa !2579
  %add = add i64 %15, %16, !dbg !6248
  %17 = load i64, i64* %pos, align 8, !dbg !6249, !tbaa !2579
  %18 = load i64, i64* %max_name_length, align 8, !dbg !6250, !tbaa !2579
  %add7 = add i64 %17, %18, !dbg !6251
  call void @indent(i64 %add, i64 %add7), !dbg !6252
  %19 = load i64, i64* %max_name_length, align 8, !dbg !6253, !tbaa !2579
  %20 = load i64, i64* %pos, align 8, !dbg !6254, !tbaa !2579
  %add8 = add i64 %20, %19, !dbg !6254
  store i64 %add8, i64* %pos, align 8, !dbg !6254, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i8**, i8*** @sorted_file, align 8, !dbg !6255, !tbaa !2442
  %22 = load i64, i64* %filesno, align 8, !dbg !6256, !tbaa !2579
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !6255, !ctir !663
  %23 = load i8*, i8** %arrayidx9, align 8, !dbg !6255, !tbaa !2442
  %24 = bitcast i8* %23 to %struct.fileinfo*, !dbg !6255
  store %struct.fileinfo* %24, %struct.fileinfo** %f, align 8, !dbg !6257, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6258, !tbaa !2442
  %26 = load i64, i64* %pos, align 8, !dbg !6259, !tbaa !2579
  %call10 = call i64 @print_file_name_and_frills(%struct.fileinfo* %25, i64 %26), !dbg !6260
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6261, !tbaa !2442
  %call11 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %27), !dbg !6262
  store i64 %call11, i64* %name_length, align 8, !dbg !6263, !tbaa !2579
  %28 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6264, !tbaa !2442
  %col_arr12 = getelementptr inbounds %struct.column_info, %struct.column_info* %28, i32 0, i32 2, !dbg !6265, !ctir !756
  %29 = load i64*, i64** %col_arr12, align 8, !dbg !6265, !tbaa !6165, !ctir !148
  %30 = load i64, i64* %col, align 8, !dbg !6266, !tbaa !2579
  %arrayidx13 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !6264, !ctir !148
  %31 = load i64, i64* %arrayidx13, align 8, !dbg !6264, !tbaa !2579
  store i64 %31, i64* %max_name_length, align 8, !dbg !6267, !tbaa !2579
  br label %for.inc, !dbg !6268

for.inc:                                          ; preds = %if.end
  %32 = load i64, i64* %filesno, align 8, !dbg !6269, !tbaa !2579
  %inc = add i64 %32, 1, !dbg !6269
  store i64 %inc, i64* %filesno, align 8, !dbg !6269, !tbaa !2579
  br label %for.cond, !dbg !6270, !llvm.loop !6271

for.end:                                          ; preds = %for.cond
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6273
  ret void, !dbg !6274
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_normal_color() #0 !dbg !6275 !ctir !341 {
entry:
  %0 = load i8, i8* @print_with_color, align 1, !dbg !6276, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6276
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6278

land.lhs.true:                                    ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !6279
  br i1 %call, label %if.then, label %if.end, !dbg !6280

if.then:                                          ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !6281
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 4)), !dbg !6283
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !6284
  br label %if.end, !dbg !6285

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6286
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_long_format(%struct.fileinfo* %f) #0 !dbg !6287 !ctir !767 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %modebuf = alloca [12 x i8], align 1, !ctir !769
  %buf = alloca [3643 x i8], align 16, !ctir !770
  %s = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %when_timespec = alloca %struct.dev_ino, align 8, !ctir !214
  %when_local = alloca %struct.tm, align 8, !ctir !786
  %tmp = alloca %struct.dev_ino, align 8
  %tmp20 = alloca %struct.dev_ino, align 8
  %tmp24 = alloca %struct.dev_ino, align 8
  %hbuf = alloca [21 x i8], align 16, !ctir !669
  %hbuf38 = alloca [652 x i8], align 16, !ctir !622
  %blocks = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %hbuf51 = alloca [21 x i8], align 16, !ctir !669
  %majorbuf = alloca [21 x i8], align 16, !ctir !669
  %minorbuf = alloca [21 x i8], align 16, !ctir !669
  %blanks_width = alloca i32, align 4, !ctir !27
  %hbuf141 = alloca [652 x i8], align 16, !ctir !622
  %size = alloca i8*, align 8, !ctir !146
  %pad152 = alloca i32, align 4, !ctir !27
  %six_months_ago = alloca %struct.dev_ino, align 8, !ctir !214
  %recent = alloca i8, align 1, !ctir !141
  %hbuf203 = alloca [21 x i8], align 16, !ctir !669
  %w = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.declare(metadata [12 x i8]* %modebuf, metadata !6290, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.declare(metadata [3643 x i8]* %buf, metadata !6292, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %s, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %when_timespec, metadata !6298, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.declare(metadata %struct.tm* %when_local, metadata !6300, metadata !DIExpression()), !dbg !6301
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6302, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 7, !dbg !6304, !ctir !184
  %1 = load i8, i8* %stat_ok, align 8, !dbg !6304, !tbaa !4023
  %tobool = trunc i8 %1 to i1, !dbg !6304, !ctir !141
  br i1 %tobool, label %if.then, label %if.else, !dbg !6305

if.then:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6306, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !6307, !ctir !184
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6308
  call void @filemodestring(%struct.stat* %stat, i8* %arraydecay), !dbg !6309
  br label %if.end, !dbg !6309

if.else:                                          ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6310, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 4, !dbg !6312, !ctir !184
  %4 = load i32, i32* %filetype, align 8, !dbg !6312, !tbaa !3815, !ctir !36
  %idxprom = zext i32 %4 to i64, !dbg !6313
  %arrayidx = getelementptr inbounds [11 x i8], [11 x i8]* @filetype_letter, i64 0, i64 %idxprom, !dbg !6313, !ctir !773
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6313, !tbaa !2497
  %arrayidx1 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6314, !ctir !769
  store i8 %5, i8* %arrayidx1, align 1, !dbg !6315, !tbaa !2497
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6316
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 1, !dbg !6317
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 63, i64 10, i1 false), !dbg !6318
  %arrayidx3 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 11, !dbg !6319, !ctir !769
  store i8 0, i8* %arrayidx3, align 1, !dbg !6320, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* @any_has_acl, align 1, !dbg !6321, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !6321
  br i1 %tobool4, label %if.else7, label %if.then5, !dbg !6323

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6324, !ctir !769
  store i8 0, i8* %arrayidx6, align 1, !dbg !6325, !tbaa !2497
  br label %if.end17, !dbg !6324

if.else7:                                         ; preds = %if.end
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6326, !tbaa !2442
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 9, !dbg !6328, !ctir !184
  %8 = load i32, i32* %acl_type, align 4, !dbg !6328, !tbaa !4123, !ctir !48
  %cmp = icmp eq i32 %8, 1, !dbg !6329
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !6330

if.then8:                                         ; preds = %if.else7
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6331, !ctir !769
  store i8 46, i8* %arrayidx9, align 1, !dbg !6332, !tbaa !2497
  br label %if.end16, !dbg !6331

if.else10:                                        ; preds = %if.else7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6333, !tbaa !2442
  %acl_type11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 9, !dbg !6335, !ctir !184
  %10 = load i32, i32* %acl_type11, align 4, !dbg !6335, !tbaa !4123, !ctir !48
  %cmp12 = icmp eq i32 %10, 2, !dbg !6336
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6337

if.then13:                                        ; preds = %if.else10
  %arrayidx14 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6338, !ctir !769
  store i8 43, i8* %arrayidx14, align 1, !dbg !6339, !tbaa !2497
  br label %if.end15, !dbg !6338

if.end15:                                         ; preds = %if.then13, %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  %11 = load i32, i32* @time_type, align 4, !dbg !6340, !tbaa !2497
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb19
    i32 2, label %sw.bb23
  ], !dbg !6341

sw.bb:                                            ; preds = %if.end17
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6342, !tbaa !2442
  %stat18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 3, !dbg !6344, !ctir !184
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat18) #16, !dbg !6345
  %13 = bitcast %struct.dev_ino* %tmp to { i64, i64 }*, !dbg !6345
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !6345
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !6345
  store i64 %15, i64* %14, align 8, !dbg !6345
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !6345
  %17 = extractvalue { i64, i64 } %call, 1, !dbg !6345
  store i64 %17, i64* %16, align 8, !dbg !6345
  %18 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6345
  %19 = bitcast %struct.dev_ino* %tmp to i8*, !dbg !6345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !6345, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6346

sw.bb19:                                          ; preds = %if.end17
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6347, !tbaa !2442
  %stat21 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 3, !dbg !6348, !ctir !184
  %call22 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat21) #16, !dbg !6349
  %21 = bitcast %struct.dev_ino* %tmp20 to { i64, i64 }*, !dbg !6349
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !6349
  %23 = extractvalue { i64, i64 } %call22, 0, !dbg !6349
  store i64 %23, i64* %22, align 8, !dbg !6349
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !6349
  %25 = extractvalue { i64, i64 } %call22, 1, !dbg !6349
  store i64 %25, i64* %24, align 8, !dbg !6349
  %26 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6349
  %27 = bitcast %struct.dev_ino* %tmp20 to i8*, !dbg !6349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false), !dbg !6349, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6350

sw.bb23:                                          ; preds = %if.end17
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6351, !tbaa !2442
  %stat25 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 3, !dbg !6352, !ctir !184
  %call26 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat25) #16, !dbg !6353
  %29 = bitcast %struct.dev_ino* %tmp24 to { i64, i64 }*, !dbg !6353
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !6353
  %31 = extractvalue { i64, i64 } %call26, 0, !dbg !6353
  store i64 %31, i64* %30, align 8, !dbg !6353
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !6353
  %33 = extractvalue { i64, i64 } %call26, 1, !dbg !6353
  store i64 %33, i64* %32, align 8, !dbg !6353
  %34 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6353
  %35 = bitcast %struct.dev_ino* %tmp24 to i8*, !dbg !6353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !6353, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6354

sw.default:                                       ; preds = %if.end17
  call void @abort() #15, !dbg !6355
  unreachable, !dbg !6355

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb19, %sw.bb
  %arraydecay27 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6356
  store i8* %arraydecay27, i8** %p, align 8, !dbg !6357, !tbaa !2442
  %36 = load i8, i8* @print_inode, align 1, !dbg !6358, !tbaa !2461
  %tobool28 = trunc i8 %36 to i1, !dbg !6358
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !6360

if.then29:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf, metadata !6361, metadata !DIExpression()), !dbg !6363
  %37 = load i8*, i8** %p, align 8, !dbg !6364, !tbaa !2442
  %38 = load i32, i32* @inode_number_width, align 4, !dbg !6365, !tbaa !2436
  %arraydecay30 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf, i64 0, i64 0, !dbg !6366
  %39 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6367, !tbaa !2442
  %call31 = call i8* @format_inode(i8* %arraydecay30, i64 21, %struct.fileinfo* %39), !dbg !6368
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %38, i8* %call31) #13, !dbg !6369
  %40 = load i8*, i8** %p, align 8, !dbg !6370, !tbaa !2442
  %call33 = call i64 @strlen(i8* %40) #16, !dbg !6371
  %41 = load i8*, i8** %p, align 8, !dbg !6372, !tbaa !2442
  %add.ptr34 = getelementptr inbounds i8, i8* %41, i64 %call33, !dbg !6372
  store i8* %add.ptr34, i8** %p, align 8, !dbg !6372, !tbaa !2442
  br label %if.end35, !dbg !6373

if.end35:                                         ; preds = %if.then29, %sw.epilog
  %42 = load i8, i8* @print_block_size, align 1, !dbg !6374, !tbaa !2461
  %tobool36 = trunc i8 %42 to i1, !dbg !6374
  br i1 %tobool36, label %if.then37, label %if.end50, !dbg !6376

if.then37:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf38, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata i8** %blocks, metadata !6380, metadata !DIExpression()), !dbg !6381
  %43 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6382, !tbaa !2442
  %stat_ok39 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %43, i32 0, i32 7, !dbg !6383, !ctir !184
  %44 = load i8, i8* %stat_ok39, align 8, !dbg !6383, !tbaa !4023
  %tobool40 = trunc i8 %44 to i1, !dbg !6383, !ctir !141
  br i1 %tobool40, label %cond.false, label %cond.true, !dbg !6384

cond.true:                                        ; preds = %if.then37
  br label %cond.end, !dbg !6384

cond.false:                                       ; preds = %if.then37
  %45 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6385, !tbaa !2442
  %stat41 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %45, i32 0, i32 3, !dbg !6385, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat41, i32 0, i32 10, !dbg !6385, !ctir !191
  %46 = load i64, i64* %st_blocks, align 8, !dbg !6385, !tbaa !4224, !ctir !212
  %arraydecay42 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf38, i64 0, i64 0, !dbg !6386
  %47 = load i32, i32* @human_output_opts, align 4, !dbg !6387, !tbaa !2436
  %48 = load i64, i64* @output_block_size, align 8, !dbg !6388, !tbaa !2579
  %call43 = call i8* @human_readable(i64 %46, i8* %arraydecay42, i32 %47, i64 512, i64 %48), !dbg !6389
  br label %cond.end, !dbg !6384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %call43, %cond.false ], !dbg !6384
  store i8* %cond, i8** %blocks, align 8, !dbg !6381, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6390, metadata !DIExpression()), !dbg !6391
  %49 = load i32, i32* @block_size_width, align 4, !dbg !6392, !tbaa !2436
  %50 = load i8*, i8** %blocks, align 8, !dbg !6394, !tbaa !2442
  %call44 = call i32 @gnu_mbswidth(i8* %50, i32 0), !dbg !6395
  %sub = sub nsw i32 %49, %call44, !dbg !6396
  store i32 %sub, i32* %pad, align 4, !dbg !6397, !tbaa !2436
  br label %for.cond, !dbg !6398

for.cond:                                         ; preds = %for.inc, %cond.end
  %51 = load i32, i32* %pad, align 4, !dbg !6399, !tbaa !2436
  %cmp45 = icmp slt i32 0, %51, !dbg !6401
  br i1 %cmp45, label %for.body, label %for.end, !dbg !6402

for.body:                                         ; preds = %for.cond
  %52 = load i8*, i8** %p, align 8, !dbg !6403, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %52, i32 1, !dbg !6403
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6403, !tbaa !2442
  store i8 32, i8* %52, align 1, !dbg !6404, !tbaa !2497, !ctir !144
  br label %for.inc, !dbg !6405

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %pad, align 4, !dbg !6406, !tbaa !2436
  %dec = add nsw i32 %53, -1, !dbg !6406
  store i32 %dec, i32* %pad, align 4, !dbg !6406, !tbaa !2436
  br label %for.cond, !dbg !6407, !llvm.loop !6408

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !6410

while.cond:                                       ; preds = %while.body, %for.end
  %54 = load i8*, i8** %blocks, align 8, !dbg !6411, !tbaa !2442
  %incdec.ptr46 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !6411
  store i8* %incdec.ptr46, i8** %blocks, align 8, !dbg !6411, !tbaa !2442
  %55 = load i8, i8* %54, align 1, !dbg !6412, !tbaa !2497, !ctir !147
  %56 = load i8*, i8** %p, align 8, !dbg !6413, !tbaa !2442
  %incdec.ptr47 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !6413
  store i8* %incdec.ptr47, i8** %p, align 8, !dbg !6413, !tbaa !2442
  store i8 %55, i8* %56, align 1, !dbg !6414, !tbaa !2497, !ctir !144
  %tobool48 = icmp ne i8 %55, 0, !dbg !6410
  br i1 %tobool48, label %while.body, label %while.end, !dbg !6410

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !6415, !llvm.loop !6416

while.end:                                        ; preds = %while.cond
  %57 = load i8*, i8** %p, align 8, !dbg !6417, !tbaa !2442
  %arrayidx49 = getelementptr inbounds i8, i8* %57, i64 -1, !dbg !6417, !ctir !143
  store i8 32, i8* %arrayidx49, align 1, !dbg !6418, !tbaa !2497
  br label %if.end50, !dbg !6419

if.end50:                                         ; preds = %while.end, %if.end35
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf51, metadata !6420, metadata !DIExpression()), !dbg !6422
  %58 = load i8*, i8** %p, align 8, !dbg !6423, !tbaa !2442
  %arraydecay52 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6424
  %59 = load i32, i32* @nlink_width, align 4, !dbg !6425, !tbaa !2436
  %60 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6426, !tbaa !2442
  %stat_ok53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %60, i32 0, i32 7, !dbg !6427, !ctir !184
  %61 = load i8, i8* %stat_ok53, align 8, !dbg !6427, !tbaa !4023
  %tobool54 = trunc i8 %61 to i1, !dbg !6427, !ctir !141
  br i1 %tobool54, label %cond.false56, label %cond.true55, !dbg !6428

cond.true55:                                      ; preds = %if.end50
  br label %cond.end60, !dbg !6428

cond.false56:                                     ; preds = %if.end50
  %62 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6429, !tbaa !2442
  %stat57 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %62, i32 0, i32 3, !dbg !6430, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat57, i32 0, i32 2, !dbg !6431, !ctir !191
  %63 = load i64, i64* %st_nlink, align 8, !dbg !6431, !tbaa !4347, !ctir !199
  %arraydecay58 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf51, i64 0, i64 0, !dbg !6432
  %call59 = call i8* @umaxtostr(i64 %63, i8* %arraydecay58), !dbg !6433
  br label %cond.end60, !dbg !6428

cond.end60:                                       ; preds = %cond.false56, %cond.true55
  %cond61 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true55 ], [ %call59, %cond.false56 ], !dbg !6428
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i64 0, i64 0), i8* %arraydecay52, i32 %59, i8* %cond61) #13, !dbg !6434
  %64 = load i8*, i8** %p, align 8, !dbg !6435, !tbaa !2442
  %call63 = call i64 @strlen(i8* %64) #16, !dbg !6436
  %65 = load i8*, i8** %p, align 8, !dbg !6437, !tbaa !2442
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %call63, !dbg !6437
  store i8* %add.ptr64, i8** %p, align 8, !dbg !6437, !tbaa !2442
  br label %do.body, !dbg !6438

do.body:                                          ; preds = %cond.end60
  %66 = load i8, i8* @dired, align 1, !dbg !6439, !tbaa !2461
  %tobool65 = trunc i8 %66 to i1, !dbg !6439
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !6442

if.then66:                                        ; preds = %do.body
  br label %do.body67, !dbg !6439

do.body67:                                        ; preds = %if.then66
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6443, !tbaa !2442
  %call68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !6443
  %68 = load i64, i64* @dired_pos, align 8, !dbg !6443, !tbaa !2579
  %add = add i64 %68, 2, !dbg !6443
  store i64 %add, i64* @dired_pos, align 8, !dbg !6443, !tbaa !2579
  br label %do.end, !dbg !6443

do.end:                                           ; preds = %do.body67
  br label %if.end69, !dbg !6443

if.end69:                                         ; preds = %do.end, %do.body
  br label %do.end70, !dbg !6442

do.end70:                                         ; preds = %if.end69
  %69 = load i8, i8* @print_owner, align 1, !dbg !6445, !tbaa !2461
  %tobool71 = trunc i8 %69 to i1, !dbg !6445
  br i1 %tobool71, label %if.then77, label %lor.lhs.false, !dbg !6447

lor.lhs.false:                                    ; preds = %do.end70
  %70 = load i8, i8* @print_group, align 1, !dbg !6448, !tbaa !2461
  %tobool72 = trunc i8 %70 to i1, !dbg !6448
  br i1 %tobool72, label %if.then77, label %lor.lhs.false73, !dbg !6449

lor.lhs.false73:                                  ; preds = %lor.lhs.false
  %71 = load i8, i8* @print_author, align 1, !dbg !6450, !tbaa !2461
  %tobool74 = trunc i8 %71 to i1, !dbg !6450
  br i1 %tobool74, label %if.then77, label %lor.lhs.false75, !dbg !6451

lor.lhs.false75:                                  ; preds = %lor.lhs.false73
  %72 = load i8, i8* @print_scontext, align 1, !dbg !6452, !tbaa !2461
  %tobool76 = trunc i8 %72 to i1, !dbg !6452
  br i1 %tobool76, label %if.then77, label %if.end107, !dbg !6453

if.then77:                                        ; preds = %lor.lhs.false75, %lor.lhs.false73, %lor.lhs.false, %do.end70
  br label %do.body78, !dbg !6454

do.body78:                                        ; preds = %if.then77
  %arraydecay79 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6456
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6456, !tbaa !2442
  %call80 = call i32 @fputs_unlocked(i8* %arraydecay79, %struct._IO_FILE* %73), !dbg !6456
  %74 = load i8*, i8** %p, align 8, !dbg !6456, !tbaa !2442
  %arraydecay81 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6456
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64, !dbg !6456
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay81 to i64, !dbg !6456
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6456
  %75 = load i64, i64* @dired_pos, align 8, !dbg !6456, !tbaa !2579
  %add82 = add i64 %75, %sub.ptr.sub, !dbg !6456
  store i64 %add82, i64* @dired_pos, align 8, !dbg !6456, !tbaa !2579
  br label %do.end83, !dbg !6456

do.end83:                                         ; preds = %do.body78
  %76 = load i8, i8* @print_owner, align 1, !dbg !6458, !tbaa !2461
  %tobool84 = trunc i8 %76 to i1, !dbg !6458
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !6460

if.then85:                                        ; preds = %do.end83
  %77 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6461, !tbaa !2442
  %stat86 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %77, i32 0, i32 3, !dbg !6462, !ctir !184
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat86, i32 0, i32 4, !dbg !6463, !ctir !191
  %78 = load i32, i32* %st_uid, align 4, !dbg !6463, !tbaa !4266, !ctir !203
  %79 = load i32, i32* @owner_width, align 4, !dbg !6464, !tbaa !2436
  %80 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6465, !tbaa !2442
  %stat_ok87 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %80, i32 0, i32 7, !dbg !6466, !ctir !184
  %81 = load i8, i8* %stat_ok87, align 8, !dbg !6466, !tbaa !4023
  %tobool88 = trunc i8 %81 to i1, !dbg !6466, !ctir !141
  call void @format_user(i32 %78, i32 %79, i1 zeroext %tobool88), !dbg !6467
  br label %if.end89, !dbg !6467

if.end89:                                         ; preds = %if.then85, %do.end83
  %82 = load i8, i8* @print_group, align 1, !dbg !6468, !tbaa !2461
  %tobool90 = trunc i8 %82 to i1, !dbg !6468
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !6470

if.then91:                                        ; preds = %if.end89
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6471, !tbaa !2442
  %stat92 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 3, !dbg !6472, !ctir !184
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat92, i32 0, i32 5, !dbg !6473, !ctir !191
  %84 = load i32, i32* %st_gid, align 8, !dbg !6473, !tbaa !4286, !ctir !205
  %85 = load i32, i32* @group_width, align 4, !dbg !6474, !tbaa !2436
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6475, !tbaa !2442
  %stat_ok93 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 7, !dbg !6476, !ctir !184
  %87 = load i8, i8* %stat_ok93, align 8, !dbg !6476, !tbaa !4023
  %tobool94 = trunc i8 %87 to i1, !dbg !6476, !ctir !141
  call void @format_group(i32 %84, i32 %85, i1 zeroext %tobool94), !dbg !6477
  br label %if.end95, !dbg !6477

if.end95:                                         ; preds = %if.then91, %if.end89
  %88 = load i8, i8* @print_author, align 1, !dbg !6478, !tbaa !2461
  %tobool96 = trunc i8 %88 to i1, !dbg !6478
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !6480

if.then97:                                        ; preds = %if.end95
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6481, !tbaa !2442
  %stat98 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %89, i32 0, i32 3, !dbg !6482, !ctir !184
  %st_uid99 = getelementptr inbounds %struct.stat, %struct.stat* %stat98, i32 0, i32 4, !dbg !6483, !ctir !191
  %90 = load i32, i32* %st_uid99, align 4, !dbg !6483, !tbaa !4266, !ctir !203
  %91 = load i32, i32* @author_width, align 4, !dbg !6484, !tbaa !2436
  %92 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6485, !tbaa !2442
  %stat_ok100 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %92, i32 0, i32 7, !dbg !6486, !ctir !184
  %93 = load i8, i8* %stat_ok100, align 8, !dbg !6486, !tbaa !4023
  %tobool101 = trunc i8 %93 to i1, !dbg !6486, !ctir !141
  call void @format_user(i32 %90, i32 %91, i1 zeroext %tobool101), !dbg !6487
  br label %if.end102, !dbg !6487

if.end102:                                        ; preds = %if.then97, %if.end95
  %94 = load i8, i8* @print_scontext, align 1, !dbg !6488, !tbaa !2461
  %tobool103 = trunc i8 %94 to i1, !dbg !6488
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !6490

if.then104:                                       ; preds = %if.end102
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6491, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %95, i32 0, i32 6, !dbg !6492, !ctir !184
  %96 = load i8*, i8** %scontext, align 8, !dbg !6492, !tbaa !4070, !ctir !143
  %97 = load i32, i32* @scontext_width, align 4, !dbg !6493, !tbaa !2436
  call void @format_user_or_group(i8* %96, i64 0, i32 %97), !dbg !6494
  br label %if.end105, !dbg !6494

if.end105:                                        ; preds = %if.then104, %if.end102
  %arraydecay106 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6495
  store i8* %arraydecay106, i8** %p, align 8, !dbg !6496, !tbaa !2442
  br label %if.end107, !dbg !6497

if.end107:                                        ; preds = %if.end105, %lor.lhs.false75
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6498, !tbaa !2442
  %stat_ok108 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 7, !dbg !6500, !ctir !184
  %99 = load i8, i8* %stat_ok108, align 8, !dbg !6500, !tbaa !4023
  %tobool109 = trunc i8 %99 to i1, !dbg !6500, !ctir !141
  br i1 %tobool109, label %land.lhs.true, label %if.else140, !dbg !6501

land.lhs.true:                                    ; preds = %if.end107
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6502, !tbaa !2442
  %stat110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 3, !dbg !6502, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat110, i32 0, i32 3, !dbg !6502, !ctir !191
  %101 = load i32, i32* %st_mode, align 8, !dbg !6502, !tbaa !3982, !ctir !201
  %and = and i32 %101, 61440, !dbg !6502
  %cmp111 = icmp eq i32 %and, 8192, !dbg !6502
  br i1 %cmp111, label %if.then117, label %lor.lhs.false112, !dbg !6503

lor.lhs.false112:                                 ; preds = %land.lhs.true
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6504, !tbaa !2442
  %stat113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 3, !dbg !6504, !ctir !184
  %st_mode114 = getelementptr inbounds %struct.stat, %struct.stat* %stat113, i32 0, i32 3, !dbg !6504, !ctir !191
  %103 = load i32, i32* %st_mode114, align 8, !dbg !6504, !tbaa !3982, !ctir !201
  %and115 = and i32 %103, 61440, !dbg !6504
  %cmp116 = icmp eq i32 %and115, 24576, !dbg !6504
  br i1 %cmp116, label %if.then117, label %if.else140, !dbg !6505

if.then117:                                       ; preds = %lor.lhs.false112, %land.lhs.true
  call void @llvm.dbg.declare(metadata [21 x i8]* %majorbuf, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.declare(metadata [21 x i8]* %minorbuf, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata i32* %blanks_width, metadata !6511, metadata !DIExpression()), !dbg !6512
  %104 = load i32, i32* @file_size_width, align 4, !dbg !6513, !tbaa !2436
  %105 = load i32, i32* @major_device_number_width, align 4, !dbg !6514, !tbaa !2436
  %add118 = add nsw i32 %105, 2, !dbg !6515
  %106 = load i32, i32* @minor_device_number_width, align 4, !dbg !6516, !tbaa !2436
  %add119 = add nsw i32 %add118, %106, !dbg !6517
  %sub120 = sub nsw i32 %104, %add119, !dbg !6518
  store i32 %sub120, i32* %blanks_width, align 4, !dbg !6512, !tbaa !2436
  %107 = load i8*, i8** %p, align 8, !dbg !6519, !tbaa !2442
  %108 = load i32, i32* @major_device_number_width, align 4, !dbg !6520, !tbaa !2436
  %109 = load i32, i32* %blanks_width, align 4, !dbg !6521, !tbaa !2436
  %cmp121 = icmp sgt i32 0, %109, !dbg !6521
  br i1 %cmp121, label %cond.true122, label %cond.false123, !dbg !6521

cond.true122:                                     ; preds = %if.then117
  br label %cond.end124, !dbg !6521

cond.false123:                                    ; preds = %if.then117
  %110 = load i32, i32* %blanks_width, align 4, !dbg !6521, !tbaa !2436
  br label %cond.end124, !dbg !6521

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ %110, %cond.false123 ], !dbg !6521
  %add126 = add nsw i32 %108, %cond125, !dbg !6522
  %111 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6523, !tbaa !2442
  %stat127 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %111, i32 0, i32 3, !dbg !6523, !ctir !184
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat127, i32 0, i32 7, !dbg !6523, !ctir !191
  %112 = load i64, i64* %st_rdev, align 8, !dbg !6523, !tbaa !4370, !ctir !195
  %call128 = call i32 @gnu_dev_major(i64 %112) #17, !dbg !6523
  %conv = zext i32 %call128 to i64, !dbg !6523
  %arraydecay129 = getelementptr inbounds [21 x i8], [21 x i8]* %majorbuf, i64 0, i64 0, !dbg !6524
  %call130 = call i8* @umaxtostr(i64 %conv, i8* %arraydecay129), !dbg !6525
  %113 = load i32, i32* @minor_device_number_width, align 4, !dbg !6526, !tbaa !2436
  %114 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6527, !tbaa !2442
  %stat131 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %114, i32 0, i32 3, !dbg !6527, !ctir !184
  %st_rdev132 = getelementptr inbounds %struct.stat, %struct.stat* %stat131, i32 0, i32 7, !dbg !6527, !ctir !191
  %115 = load i64, i64* %st_rdev132, align 8, !dbg !6527, !tbaa !4370, !ctir !195
  %call133 = call i32 @gnu_dev_minor(i64 %115) #17, !dbg !6527
  %conv134 = zext i32 %call133 to i64, !dbg !6527
  %arraydecay135 = getelementptr inbounds [21 x i8], [21 x i8]* %minorbuf, i64 0, i64 0, !dbg !6528
  %call136 = call i8* @umaxtostr(i64 %conv134, i8* %arraydecay135), !dbg !6529
  %call137 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i64 0, i64 0), i32 %add126, i8* %call130, i32 %113, i8* %call136) #13, !dbg !6530
  %116 = load i32, i32* @file_size_width, align 4, !dbg !6531, !tbaa !2436
  %add138 = add nsw i32 %116, 1, !dbg !6532
  %117 = load i8*, i8** %p, align 8, !dbg !6533, !tbaa !2442
  %idx.ext = sext i32 %add138 to i64, !dbg !6533
  %add.ptr139 = getelementptr inbounds i8, i8* %117, i64 %idx.ext, !dbg !6533
  store i8* %add.ptr139, i8** %p, align 8, !dbg !6533, !tbaa !2442
  br label %if.end170, !dbg !6534

if.else140:                                       ; preds = %lor.lhs.false112, %if.end107
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf141, metadata !6535, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata i8** %size, metadata !6538, metadata !DIExpression()), !dbg !6539
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6540, !tbaa !2442
  %stat_ok142 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 7, !dbg !6541, !ctir !184
  %119 = load i8, i8* %stat_ok142, align 8, !dbg !6541, !tbaa !4023
  %tobool143 = trunc i8 %119 to i1, !dbg !6541, !ctir !141
  br i1 %tobool143, label %cond.false145, label %cond.true144, !dbg !6542

cond.true144:                                     ; preds = %if.else140
  br label %cond.end150, !dbg !6542

cond.false145:                                    ; preds = %if.else140
  %120 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6543, !tbaa !2442
  %stat146 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %120, i32 0, i32 3, !dbg !6544, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat146, i32 0, i32 8, !dbg !6545, !ctir !191
  %121 = load i64, i64* %st_size, align 8, !dbg !6545, !tbaa !4417, !ctir !181
  %call147 = call i64 @unsigned_file_size(i64 %121), !dbg !6546
  %arraydecay148 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf141, i64 0, i64 0, !dbg !6547
  %122 = load i32, i32* @file_human_output_opts, align 4, !dbg !6548, !tbaa !2436
  %123 = load i64, i64* @file_output_block_size, align 8, !dbg !6549, !tbaa !2579
  %call149 = call i8* @human_readable(i64 %call147, i8* %arraydecay148, i32 %122, i64 1, i64 %123), !dbg !6550
  br label %cond.end150, !dbg !6542

cond.end150:                                      ; preds = %cond.false145, %cond.true144
  %cond151 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true144 ], [ %call149, %cond.false145 ], !dbg !6542
  store i8* %cond151, i8** %size, align 8, !dbg !6539, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %pad152, metadata !6551, metadata !DIExpression()), !dbg !6552
  %124 = load i32, i32* @file_size_width, align 4, !dbg !6553, !tbaa !2436
  %125 = load i8*, i8** %size, align 8, !dbg !6555, !tbaa !2442
  %call153 = call i32 @gnu_mbswidth(i8* %125, i32 0), !dbg !6556
  %sub154 = sub nsw i32 %124, %call153, !dbg !6557
  store i32 %sub154, i32* %pad152, align 4, !dbg !6558, !tbaa !2436
  br label %for.cond155, !dbg !6559

for.cond155:                                      ; preds = %for.inc160, %cond.end150
  %126 = load i32, i32* %pad152, align 4, !dbg !6560, !tbaa !2436
  %cmp156 = icmp slt i32 0, %126, !dbg !6562
  br i1 %cmp156, label %for.body158, label %for.end162, !dbg !6563

for.body158:                                      ; preds = %for.cond155
  %127 = load i8*, i8** %p, align 8, !dbg !6564, !tbaa !2442
  %incdec.ptr159 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !6564
  store i8* %incdec.ptr159, i8** %p, align 8, !dbg !6564, !tbaa !2442
  store i8 32, i8* %127, align 1, !dbg !6565, !tbaa !2497, !ctir !144
  br label %for.inc160, !dbg !6566

for.inc160:                                       ; preds = %for.body158
  %128 = load i32, i32* %pad152, align 4, !dbg !6567, !tbaa !2436
  %dec161 = add nsw i32 %128, -1, !dbg !6567
  store i32 %dec161, i32* %pad152, align 4, !dbg !6567, !tbaa !2436
  br label %for.cond155, !dbg !6568, !llvm.loop !6569

for.end162:                                       ; preds = %for.cond155
  br label %while.cond163, !dbg !6571

while.cond163:                                    ; preds = %while.body167, %for.end162
  %129 = load i8*, i8** %size, align 8, !dbg !6572, !tbaa !2442
  %incdec.ptr164 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !6572
  store i8* %incdec.ptr164, i8** %size, align 8, !dbg !6572, !tbaa !2442
  %130 = load i8, i8* %129, align 1, !dbg !6573, !tbaa !2497, !ctir !147
  %131 = load i8*, i8** %p, align 8, !dbg !6574, !tbaa !2442
  %incdec.ptr165 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !6574
  store i8* %incdec.ptr165, i8** %p, align 8, !dbg !6574, !tbaa !2442
  store i8 %130, i8* %131, align 1, !dbg !6575, !tbaa !2497, !ctir !144
  %tobool166 = icmp ne i8 %130, 0, !dbg !6571
  br i1 %tobool166, label %while.body167, label %while.end168, !dbg !6571

while.body167:                                    ; preds = %while.cond163
  br label %while.cond163, !dbg !6576, !llvm.loop !6577

while.end168:                                     ; preds = %while.cond163
  %132 = load i8*, i8** %p, align 8, !dbg !6578, !tbaa !2442
  %arrayidx169 = getelementptr inbounds i8, i8* %132, i64 -1, !dbg !6578, !ctir !143
  store i8 32, i8* %arrayidx169, align 1, !dbg !6579, !tbaa !2497
  br label %if.end170

if.end170:                                        ; preds = %while.end168, %cond.end124
  store i64 0, i64* %s, align 8, !dbg !6580, !tbaa !2579
  %133 = load i8*, i8** %p, align 8, !dbg !6581, !tbaa !2442
  store i8 1, i8* %133, align 1, !dbg !6582, !tbaa !2497, !ctir !144
  %134 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6583, !tbaa !2442
  %stat_ok171 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %134, i32 0, i32 7, !dbg !6585, !ctir !184
  %135 = load i8, i8* %stat_ok171, align 8, !dbg !6585, !tbaa !4023
  %tobool172 = trunc i8 %135 to i1, !dbg !6585, !ctir !141
  br i1 %tobool172, label %land.lhs.true174, label %if.end195, !dbg !6586

land.lhs.true174:                                 ; preds = %if.end170
  %136 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6587, !tbaa !2442
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6588, !ctir !214
  %call175 = call %struct.tm* @localtime_rz(%struct.tm_zone* %136, i64* %tv_sec, %struct.tm* %when_local), !dbg !6589
  %tobool176 = icmp ne %struct.tm* %call175, null, !dbg !6589
  br i1 %tobool176, label %if.then177, label %if.end195, !dbg !6590

if.then177:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %six_months_ago, metadata !6591, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata i8* %recent, metadata !6594, metadata !DIExpression()), !dbg !6595
  %137 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6596
  %138 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6596
  %139 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6596
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 0, !dbg !6596
  %141 = load i64, i64* %140, align 8, !dbg !6596
  %142 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 1, !dbg !6596
  %143 = load i64, i64* %142, align 8, !dbg !6596
  %call178 = call i32 @timespec_cmp(i64 %137, i64 %138, i64 %141, i64 %143) #16, !dbg !6596
  %cmp179 = icmp slt i32 %call178, 0, !dbg !6598
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !6599

if.then181:                                       ; preds = %if.then177
  call void @gettime(%struct.dev_ino* @current_time), !dbg !6600
  br label %if.end182, !dbg !6600

if.end182:                                        ; preds = %if.then181, %if.then177
  %144 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !6601, !tbaa !2465, !ctir !164
  %sub183 = sub nsw i64 %144, 15778476, !dbg !6602
  %tv_sec184 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 0, !dbg !6603, !ctir !214
  store i64 %sub183, i64* %tv_sec184, align 8, !dbg !6604, !tbaa !2465, !ctir !164
  %145 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !6605, !tbaa !2469, !ctir !219
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 1, !dbg !6606, !ctir !214
  store i64 %145, i64* %tv_nsec, align 8, !dbg !6607, !tbaa !2469, !ctir !219
  %146 = bitcast %struct.dev_ino* %six_months_ago to { i64, i64 }*, !dbg !6608
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 0, !dbg !6608
  %148 = load i64, i64* %147, align 8, !dbg !6608
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 1, !dbg !6608
  %150 = load i64, i64* %149, align 8, !dbg !6608
  %151 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6608
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 0, !dbg !6608
  %153 = load i64, i64* %152, align 8, !dbg !6608
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 1, !dbg !6608
  %155 = load i64, i64* %154, align 8, !dbg !6608
  %call185 = call i32 @timespec_cmp(i64 %148, i64 %150, i64 %153, i64 %155) #16, !dbg !6608
  %cmp186 = icmp slt i32 %call185, 0, !dbg !6609
  br i1 %cmp186, label %land.rhs, label %land.end, !dbg !6610

land.rhs:                                         ; preds = %if.end182
  %156 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6611
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 0, !dbg !6611
  %158 = load i64, i64* %157, align 8, !dbg !6611
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 1, !dbg !6611
  %160 = load i64, i64* %159, align 8, !dbg !6611
  %161 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6611
  %162 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6611
  %call188 = call i32 @timespec_cmp(i64 %158, i64 %160, i64 %161, i64 %162) #16, !dbg !6611
  %cmp189 = icmp slt i32 %call188, 0, !dbg !6612
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end182
  %163 = phi i1 [ false, %if.end182 ], [ %cmp189, %land.rhs ], !dbg !6613
  %frombool = zext i1 %163 to i8, !dbg !6614
  store i8 %frombool, i8* %recent, align 1, !dbg !6614, !tbaa !2461
  %164 = load i8*, i8** %p, align 8, !dbg !6615, !tbaa !2442
  %165 = load i8, i8* %recent, align 1, !dbg !6616, !tbaa !2461
  %tobool191 = trunc i8 %165 to i1, !dbg !6616
  %166 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6617, !tbaa !2442
  %tv_nsec192 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 1, !dbg !6618, !ctir !214
  %167 = load i64, i64* %tv_nsec192, align 8, !dbg !6618, !tbaa !2469, !ctir !219
  %conv193 = trunc i64 %167 to i32, !dbg !6619
  %call194 = call i64 @align_nstrftime(i8* %164, i64 1001, i1 zeroext %tobool191, %struct.tm* %when_local, %struct.tm_zone* %166, i32 %conv193), !dbg !6620
  store i64 %call194, i64* %s, align 8, !dbg !6621, !tbaa !2579
  br label %if.end195, !dbg !6622

if.end195:                                        ; preds = %land.end, %land.lhs.true174, %if.end170
  %168 = load i64, i64* %s, align 8, !dbg !6623, !tbaa !2579
  %tobool196 = icmp ne i64 %168, 0, !dbg !6623
  br i1 %tobool196, label %if.then199, label %lor.lhs.false197, !dbg !6625

lor.lhs.false197:                                 ; preds = %if.end195
  %169 = load i8*, i8** %p, align 8, !dbg !6626, !tbaa !2442
  %170 = load i8, i8* %169, align 1, !dbg !6627, !tbaa !2497, !ctir !144
  %tobool198 = icmp ne i8 %170, 0, !dbg !6627
  br i1 %tobool198, label %if.else202, label %if.then199, !dbg !6628

if.then199:                                       ; preds = %lor.lhs.false197, %if.end195
  %171 = load i64, i64* %s, align 8, !dbg !6629, !tbaa !2579
  %172 = load i8*, i8** %p, align 8, !dbg !6631, !tbaa !2442
  %add.ptr200 = getelementptr inbounds i8, i8* %172, i64 %171, !dbg !6631
  store i8* %add.ptr200, i8** %p, align 8, !dbg !6631, !tbaa !2442
  %173 = load i8*, i8** %p, align 8, !dbg !6632, !tbaa !2442
  %incdec.ptr201 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !6632
  store i8* %incdec.ptr201, i8** %p, align 8, !dbg !6632, !tbaa !2442
  store i8 32, i8* %173, align 1, !dbg !6633, !tbaa !2497, !ctir !144
  %174 = load i8*, i8** %p, align 8, !dbg !6634, !tbaa !2442
  store i8 0, i8* %174, align 1, !dbg !6635, !tbaa !2497, !ctir !144
  br label %if.end217, !dbg !6636

if.else202:                                       ; preds = %lor.lhs.false197
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf203, metadata !6637, metadata !DIExpression()), !dbg !6639
  %175 = load i8*, i8** %p, align 8, !dbg !6640, !tbaa !2442
  %call204 = call i32 @long_time_expected_width(), !dbg !6641
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6642, !tbaa !2442
  %stat_ok205 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 7, !dbg !6643, !ctir !184
  %177 = load i8, i8* %stat_ok205, align 8, !dbg !6643, !tbaa !4023
  %tobool206 = trunc i8 %177 to i1, !dbg !6643, !ctir !141
  br i1 %tobool206, label %cond.false208, label %cond.true207, !dbg !6644

cond.true207:                                     ; preds = %if.else202
  br label %cond.end212, !dbg !6644

cond.false208:                                    ; preds = %if.else202
  %tv_sec209 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6645, !ctir !214
  %178 = load i64, i64* %tv_sec209, align 8, !dbg !6645, !tbaa !2465, !ctir !164
  %arraydecay210 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf203, i64 0, i64 0, !dbg !6646
  %call211 = call i8* @timetostr(i64 %178, i8* %arraydecay210), !dbg !6647
  br label %cond.end212, !dbg !6644

cond.end212:                                      ; preds = %cond.false208, %cond.true207
  %cond213 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true207 ], [ %call211, %cond.false208 ], !dbg !6644
  %call214 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %call204, i8* %cond213) #13, !dbg !6648
  %179 = load i8*, i8** %p, align 8, !dbg !6649, !tbaa !2442
  %call215 = call i64 @strlen(i8* %179) #16, !dbg !6650
  %180 = load i8*, i8** %p, align 8, !dbg !6651, !tbaa !2442
  %add.ptr216 = getelementptr inbounds i8, i8* %180, i64 %call215, !dbg !6651
  store i8* %add.ptr216, i8** %p, align 8, !dbg !6651, !tbaa !2442
  br label %if.end217

if.end217:                                        ; preds = %cond.end212, %if.then199
  br label %do.body218, !dbg !6652

do.body218:                                       ; preds = %if.end217
  %arraydecay219 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6653
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6653, !tbaa !2442
  %call220 = call i32 @fputs_unlocked(i8* %arraydecay219, %struct._IO_FILE* %181), !dbg !6653
  %182 = load i8*, i8** %p, align 8, !dbg !6653, !tbaa !2442
  %arraydecay221 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6653
  %sub.ptr.lhs.cast222 = ptrtoint i8* %182 to i64, !dbg !6653
  %sub.ptr.rhs.cast223 = ptrtoint i8* %arraydecay221 to i64, !dbg !6653
  %sub.ptr.sub224 = sub i64 %sub.ptr.lhs.cast222, %sub.ptr.rhs.cast223, !dbg !6653
  %183 = load i64, i64* @dired_pos, align 8, !dbg !6653, !tbaa !2579
  %add225 = add i64 %183, %sub.ptr.sub224, !dbg !6653
  store i64 %add225, i64* @dired_pos, align 8, !dbg !6653, !tbaa !2579
  br label %do.end226, !dbg !6653

do.end226:                                        ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %w, metadata !6655, metadata !DIExpression()), !dbg !6656
  %184 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6657, !tbaa !2442
  %185 = load i8*, i8** %p, align 8, !dbg !6658, !tbaa !2442
  %arraydecay227 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6659
  %sub.ptr.lhs.cast228 = ptrtoint i8* %185 to i64, !dbg !6660
  %sub.ptr.rhs.cast229 = ptrtoint i8* %arraydecay227 to i64, !dbg !6660
  %sub.ptr.sub230 = sub i64 %sub.ptr.lhs.cast228, %sub.ptr.rhs.cast229, !dbg !6660
  %call231 = call i64 @print_name_with_quoting(%struct.fileinfo* %184, i1 zeroext false, %struct.obstack* @dired_obstack, i64 %sub.ptr.sub230), !dbg !6661
  store i64 %call231, i64* %w, align 8, !dbg !6656, !tbaa !2579
  %186 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6662, !tbaa !2442
  %filetype232 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %186, i32 0, i32 4, !dbg !6664, !ctir !184
  %187 = load i32, i32* %filetype232, align 8, !dbg !6664, !tbaa !3815, !ctir !36
  %cmp233 = icmp eq i32 %187, 6, !dbg !6665
  br i1 %cmp233, label %if.then235, label %if.else255, !dbg !6666

if.then235:                                       ; preds = %do.end226
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6667, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 1, !dbg !6670, !ctir !184
  %189 = load i8*, i8** %linkname, align 8, !dbg !6670, !tbaa !4155, !ctir !143
  %tobool236 = icmp ne i8* %189, null, !dbg !6667
  br i1 %tobool236, label %if.then237, label %if.end254, !dbg !6671

if.then237:                                       ; preds = %if.then235
  br label %do.body238, !dbg !6672

do.body238:                                       ; preds = %if.then237
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6674, !tbaa !2442
  %call239 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i64 0, i64 0), %struct._IO_FILE* %190), !dbg !6674
  %191 = load i64, i64* @dired_pos, align 8, !dbg !6674, !tbaa !2579
  %add240 = add i64 %191, 4, !dbg !6674
  store i64 %add240, i64* @dired_pos, align 8, !dbg !6674, !tbaa !2579
  br label %do.end241, !dbg !6674

do.end241:                                        ; preds = %do.body238
  %192 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6676, !tbaa !2442
  %193 = load i8*, i8** %p, align 8, !dbg !6677, !tbaa !2442
  %arraydecay242 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6678
  %sub.ptr.lhs.cast243 = ptrtoint i8* %193 to i64, !dbg !6679
  %sub.ptr.rhs.cast244 = ptrtoint i8* %arraydecay242 to i64, !dbg !6679
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !6679
  %194 = load i64, i64* %w, align 8, !dbg !6680, !tbaa !2579
  %add246 = add i64 %sub.ptr.sub245, %194, !dbg !6681
  %add247 = add i64 %add246, 4, !dbg !6682
  %call248 = call i64 @print_name_with_quoting(%struct.fileinfo* %192, i1 zeroext true, %struct.obstack* null, i64 %add247), !dbg !6683
  %195 = load i32, i32* @indicator_style, align 4, !dbg !6684, !tbaa !2497
  %cmp249 = icmp ne i32 %195, 0, !dbg !6686
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !6687

if.then251:                                       ; preds = %do.end241
  %196 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6688, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %196, i32 0, i32 5, !dbg !6689, !ctir !184
  %197 = load i32, i32* %linkmode, align 4, !dbg !6689, !tbaa !4193, !ctir !228
  %call252 = call zeroext i1 @print_type_indicator(i1 zeroext true, i32 %197, i32 0), !dbg !6690
  br label %if.end253, !dbg !6690

if.end253:                                        ; preds = %if.then251, %do.end241
  br label %if.end254, !dbg !6691

if.end254:                                        ; preds = %if.end253, %if.then235
  br label %if.end266, !dbg !6692

if.else255:                                       ; preds = %do.end226
  %198 = load i32, i32* @indicator_style, align 4, !dbg !6693, !tbaa !2497
  %cmp256 = icmp ne i32 %198, 0, !dbg !6695
  br i1 %cmp256, label %if.then258, label %if.end265, !dbg !6696

if.then258:                                       ; preds = %if.else255
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6697, !tbaa !2442
  %stat_ok259 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 7, !dbg !6698, !ctir !184
  %200 = load i8, i8* %stat_ok259, align 8, !dbg !6698, !tbaa !4023
  %tobool260 = trunc i8 %200 to i1, !dbg !6698, !ctir !141
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6699, !tbaa !2442
  %stat261 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !6700, !ctir !184
  %st_mode262 = getelementptr inbounds %struct.stat, %struct.stat* %stat261, i32 0, i32 3, !dbg !6701, !ctir !191
  %202 = load i32, i32* %st_mode262, align 8, !dbg !6701, !tbaa !3982, !ctir !201
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6702, !tbaa !2442
  %filetype263 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 4, !dbg !6703, !ctir !184
  %204 = load i32, i32* %filetype263, align 8, !dbg !6703, !tbaa !3815, !ctir !36
  %call264 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool260, i32 %202, i32 %204), !dbg !6704
  br label %if.end265, !dbg !6704

if.end265:                                        ; preds = %if.then258, %if.else255
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end254
  ret void, !dbg !6705
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_inode(i8* %buf, i64 %buflen, %struct.fileinfo* %f) #0 !dbg !6706 !ctir !737 {
entry:
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i64, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i64 %buflen, i64* %buflen.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  %0 = load i64, i64* %buflen.addr, align 8, !dbg !6713, !tbaa !2579
  %cmp = icmp ule i64 21, %0, !dbg !6713
  br i1 %cmp, label %if.then, label %if.else, !dbg !6716

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6716

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 4012, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.format_inode, i64 0, i64 0)) #15, !dbg !6713
  unreachable, !dbg !6713

if.end:                                           ; preds = %if.then
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6717, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 7, !dbg !6718, !ctir !184
  %2 = load i8, i8* %stat_ok, align 8, !dbg !6718, !tbaa !4023
  %tobool = trunc i8 %2 to i1, !dbg !6718, !ctir !141
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6719

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6720, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 3, !dbg !6721, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !6722, !ctir !191
  %4 = load i64, i64* %st_ino, align 8, !dbg !6722, !tbaa !3808, !ctir !197
  %cmp1 = icmp ne i64 %4, 0, !dbg !6723
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6717

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6724, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 3, !dbg !6725, !ctir !184
  %st_ino3 = getelementptr inbounds %struct.stat, %struct.stat* %stat2, i32 0, i32 1, !dbg !6726, !ctir !191
  %6 = load i64, i64* %st_ino3, align 8, !dbg !6726, !tbaa !3808, !ctir !197
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6727, !tbaa !2442
  %call = call i8* @umaxtostr(i64 %6, i8* %7), !dbg !6728
  br label %cond.end, !dbg !6717

cond.false:                                       ; preds = %land.lhs.true, %if.end
  br label %cond.end, !dbg !6717

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.false ], !dbg !6717
  ret i8* %cond, !dbg !6729
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user(i32 %u, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6730 !ctir !776 {
entry:
  %u.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %u, i32* %u.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6737, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6737
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6738

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6738

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6739, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6739
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6739

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6739

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %u.addr, align 4, !dbg !6740, !tbaa !2436
  %call = call i8* @getuser(i32 %2), !dbg !6741
  br label %cond.end, !dbg !6739

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6739
  br label %cond.end4, !dbg !6738

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6738
  %3 = load i32, i32* %u.addr, align 4, !dbg !6742, !tbaa !2436
  %conv = zext i32 %3 to i64, !dbg !6742
  %4 = load i32, i32* %width.addr, align 4, !dbg !6743, !tbaa !2436
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6744
  ret void, !dbg !6745
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_group(i32 %g, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6746 !ctir !778 {
entry:
  %g.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %g, i32* %g.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6753, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6753
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6754

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6754

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6755, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6755
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6755

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6755

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %g.addr, align 4, !dbg !6756, !tbaa !2436
  %call = call i8* @getgroup(i32 %2), !dbg !6757
  br label %cond.end, !dbg !6755

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6755
  br label %cond.end4, !dbg !6754

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6754
  %3 = load i32, i32* %g.addr, align 4, !dbg !6758, !tbaa !2436
  %conv = zext i32 %3 to i64, !dbg !6758
  %4 = load i32, i32* %width.addr, align 4, !dbg !6759, !tbaa !2436
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6760
  ret void, !dbg !6761
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user_or_group(i8* %name, i64 %id, i32 %width) #0 !dbg !6762 !ctir !780 {
entry:
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %width.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %width_gap = alloca i32, align 4, !ctir !27
  %pad = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  store i64 %id, i64* %id.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6769, metadata !DIExpression()), !dbg !6770
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6771, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !6771
  br i1 %tobool, label %if.then, label %if.else, !dbg !6773

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %width_gap, metadata !6774, metadata !DIExpression()), !dbg !6776
  %1 = load i32, i32* %width.addr, align 4, !dbg !6777, !tbaa !2436
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6778, !tbaa !2442
  %call = call i32 @gnu_mbswidth(i8* %2, i32 0), !dbg !6779
  %sub = sub nsw i32 %1, %call, !dbg !6780
  store i32 %sub, i32* %width_gap, align 4, !dbg !6776, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6781, metadata !DIExpression()), !dbg !6782
  %3 = load i32, i32* %width_gap, align 4, !dbg !6783, !tbaa !2436
  %cmp = icmp sgt i32 0, %3, !dbg !6783
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6783

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6783

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* %width_gap, align 4, !dbg !6783, !tbaa !2436
  br label %cond.end, !dbg !6783

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !6783
  store i32 %cond, i32* %pad, align 4, !dbg !6782, !tbaa !2436
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6784, !tbaa !2442
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6784, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %5, %struct._IO_FILE* %6), !dbg !6784
  %7 = load i8*, i8** %name.addr, align 8, !dbg !6785, !tbaa !2442
  %call2 = call i64 @strlen(i8* %7) #16, !dbg !6786
  %8 = load i32, i32* %pad, align 4, !dbg !6787, !tbaa !2436
  %conv = sext i32 %8 to i64, !dbg !6787
  %add = add i64 %call2, %conv, !dbg !6788
  store i64 %add, i64* %len, align 8, !dbg !6789, !tbaa !2579
  br label %do.body, !dbg !6790

do.body:                                          ; preds = %do.cond, %cond.end
  %call3 = call i32 @putchar_unlocked(i32 32), !dbg !6791
  br label %do.cond, !dbg !6791

do.cond:                                          ; preds = %do.body
  %9 = load i32, i32* %pad, align 4, !dbg !6792, !tbaa !2436
  %dec = add nsw i32 %9, -1, !dbg !6792
  store i32 %dec, i32* %pad, align 4, !dbg !6792, !tbaa !2436
  %tobool4 = icmp ne i32 %9, 0, !dbg !6791
  br i1 %tobool4, label %do.body, label %do.end, !dbg !6791, !llvm.loop !6793

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !6795

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %width.addr, align 4, !dbg !6796, !tbaa !2436
  %11 = load i64, i64* %id.addr, align 8, !dbg !6798, !tbaa !2579
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i64 0, i64 0), i32 %10, i64 %11), !dbg !6799
  %12 = load i32, i32* %width.addr, align 4, !dbg !6800, !tbaa !2436
  %conv6 = sext i32 %12 to i64, !dbg !6800
  store i64 %conv6, i64* %len, align 8, !dbg !6801, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %13 = load i64, i64* %len, align 8, !dbg !6802, !tbaa !2579
  %add7 = add i64 %13, 1, !dbg !6803
  %14 = load i64, i64* @dired_pos, align 8, !dbg !6804, !tbaa !2579
  %add8 = add i64 %14, %add7, !dbg !6804
  store i64 %add8, i64* @dired_pos, align 8, !dbg !6804, !tbaa !2579
  ret void, !dbg !6805
}

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_major(i64) #7

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_minor(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @unsigned_file_size(i64 %size) #0 !dbg !6806 !ctir !698 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  %0 = load i64, i64* %size.addr, align 8, !dbg !6809, !tbaa !2579
  %1 = load i64, i64* %size.addr, align 8, !dbg !6810, !tbaa !2579
  %cmp = icmp slt i64 %1, 0, !dbg !6811
  %conv = zext i1 %cmp to i32, !dbg !6811
  %conv1 = sext i32 %conv to i64, !dbg !6812
  %mul = mul i64 %conv1, 0, !dbg !6813
  %add = add i64 %0, %mul, !dbg !6814
  ret i64 %add, !dbg !6815
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @align_nstrftime(i8* %buf, i64 %size, i1 zeroext %recent, %struct.tm* %tm, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !6816 !ctir !782 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %recent.addr = alloca i8, align 1
  %tm.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %nfmt = alloca i8*, align 8, !ctir !146
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6817, metadata !DIExpression()), !dbg !6818
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  %frombool = zext i1 %recent to i8
  store i8 %frombool, i8* %recent.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %recent.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !6829, metadata !DIExpression()), !dbg !6830
  %0 = load i8, i8* @use_abformat, align 1, !dbg !6831, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6831
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6831

cond.true:                                        ; preds = %entry
  %1 = load i8, i8* %recent.addr, align 1, !dbg !6832, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6832
  %idxprom = zext i1 %tobool1 to i64, !dbg !6833
  %arrayidx = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom, !dbg !6833, !ctir !577
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6834, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 4, !dbg !6835, !ctir !785
  %3 = load i32, i32* %tm_mon, align 8, !dbg !6835, !tbaa !6836, !ctir !27
  %idxprom2 = sext i32 %3 to i64, !dbg !6833
  %arrayidx3 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx, i64 0, i64 %idxprom2, !dbg !6833, !ctir !574
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx3, i64 0, i64 0, !dbg !6833
  br label %cond.end, !dbg !6831

cond.false:                                       ; preds = %entry
  %4 = load i8, i8* %recent.addr, align 1, !dbg !6838, !tbaa !2461
  %tobool4 = trunc i8 %4 to i1, !dbg !6838
  %idxprom5 = zext i1 %tobool4 to i64, !dbg !6839
  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom5, !dbg !6839, !ctir !561
  %5 = load i8*, i8** %arrayidx6, align 8, !dbg !6839, !tbaa !2442
  br label %cond.end, !dbg !6831

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %5, %cond.false ], !dbg !6831
  store i8* %cond, i8** %nfmt, align 8, !dbg !6830, !tbaa !2442
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6840, !tbaa !2442
  %7 = load i64, i64* %size.addr, align 8, !dbg !6841, !tbaa !2579
  %8 = load i8*, i8** %nfmt, align 8, !dbg !6842, !tbaa !2442
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6843, !tbaa !2442
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !6844, !tbaa !2442
  %11 = load i32, i32* %ns.addr, align 4, !dbg !6845, !tbaa !2436
  %call = call i64 @nstrftime(i8* %6, i64 %7, i8* %8, %struct.tm* %9, %struct.tm_zone* %10, i32 %11), !dbg !6846
  ret i64 %call, !dbg !6847
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @long_time_expected_width() #0 !dbg !1035 !ctir !800 {
entry:
  %epoch = alloca i64, align 8, !ctir !162
  %tm = alloca %struct.tm, align 8, !ctir !786
  %buf = alloca [1001 x i8], align 16, !ctir !802
  %len = alloca i64, align 8, !ctir !149
  %0 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6848, !tbaa !2436
  %cmp = icmp slt i32 %0, 0, !dbg !6850
  br i1 %cmp, label %if.then, label %if.end11, !dbg !6851

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %epoch, metadata !6852, metadata !DIExpression()), !dbg !6854
  store i64 0, i64* %epoch, align 8, !dbg !6854, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata [1001 x i8]* %buf, metadata !6857, metadata !DIExpression()), !dbg !6858
  %1 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6859, !tbaa !2442
  %call = call %struct.tm* @localtime_rz(%struct.tm_zone* %1, i64* %epoch, %struct.tm* %tm), !dbg !6861
  %tobool = icmp ne %struct.tm* %call, null, !dbg !6861
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !6862

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6863, metadata !DIExpression()), !dbg !6865
  %arraydecay = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6866
  %2 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6867, !tbaa !2442
  %call2 = call i64 @align_nstrftime(i8* %arraydecay, i64 1001, i1 zeroext false, %struct.tm* %tm, %struct.tm_zone* %2, i32 0), !dbg !6868
  store i64 %call2, i64* %len, align 8, !dbg !6865, !tbaa !2579
  %3 = load i64, i64* %len, align 8, !dbg !6869, !tbaa !2579
  %cmp3 = icmp ne i64 %3, 0, !dbg !6871
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6872

if.then4:                                         ; preds = %if.then1
  %arraydecay5 = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6873
  %4 = load i64, i64* %len, align 8, !dbg !6874, !tbaa !2579
  %call6 = call i32 @mbsnwidth(i8* %arraydecay5, i64 %4, i32 0), !dbg !6875
  store i32 %call6, i32* @long_time_expected_width.width, align 4, !dbg !6876, !tbaa !2436
  br label %if.end, !dbg !6877

if.end:                                           ; preds = %if.then4, %if.then1
  br label %if.end7, !dbg !6878

if.end7:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6879, !tbaa !2436
  %cmp8 = icmp slt i32 %5, 0, !dbg !6881
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !6882

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* @long_time_expected_width.width, align 4, !dbg !6883, !tbaa !2436
  br label %if.end10, !dbg !6884

if.end10:                                         ; preds = %if.then9, %if.end7
  br label %if.end11, !dbg !6885

if.end11:                                         ; preds = %if.end10, %entry
  %6 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6886, !tbaa !2436
  ret i32 %6, !dbg !6887
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64 %t, i8* %buf) #0 !dbg !6888 !ctir !805 {
entry:
  %t.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  store i64 %t, i64* %t.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  %0 = load i64, i64* %t.addr, align 8, !dbg !6893, !tbaa !2579
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6894, !tbaa !2442
  %call = call i8* @imaxtostr(i64 %0, i8* %1), !dbg !6895
  ret i8* %call, !dbg !6896
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_name_with_quoting(%struct.fileinfo* %f, i1 zeroext %symlink_target, %struct.obstack* %stack, i64 %start_col) #0 !dbg !6897 !ctir !739 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %start_col.addr = alloca i64, align 8
  %name = alloca i8*, align 8, !ctir !146
  %color = alloca %struct.bin_str*, align 8, !ctir !399
  %used_color_this_time = alloca i8, align 1, !ctir !141
  %len = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6906, metadata !DIExpression()), !dbg !6907
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !6908, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6908
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6908

cond.true:                                        ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6909, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !6910, !ctir !184
  %2 = load i8*, i8** %linkname, align 8, !dbg !6910, !tbaa !4155, !ctir !143
  br label %cond.end, !dbg !6908

cond.false:                                       ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6911, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !6912, !ctir !184
  %4 = load i8*, i8** %name1, align 8, !dbg !6912, !tbaa !4017, !ctir !143
  br label %cond.end, !dbg !6908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6908
  store i8* %cond, i8** %name, align 8, !dbg !6907, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color, metadata !6913, metadata !DIExpression()), !dbg !6914
  %5 = load i8, i8* @print_with_color, align 1, !dbg !6915, !tbaa !2461
  %tobool2 = trunc i8 %5 to i1, !dbg !6915
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !6915

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6916, !tbaa !2442
  %7 = load i8, i8* %symlink_target.addr, align 1, !dbg !6917, !tbaa !2461
  %tobool4 = trunc i8 %7 to i1, !dbg !6917
  %call = call %struct.bin_str* @get_color_indicator(%struct.fileinfo* %6, i1 zeroext %tobool4), !dbg !6918
  br label %cond.end6, !dbg !6915

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !6915

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.bin_str* [ %call, %cond.true3 ], [ null, %cond.false5 ], !dbg !6915
  store %struct.bin_str* %cond7, %struct.bin_str** %color, align 8, !dbg !6914, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %used_color_this_time, metadata !6919, metadata !DIExpression()), !dbg !6920
  %8 = load i8, i8* @print_with_color, align 1, !dbg !6921, !tbaa !2461
  %tobool8 = trunc i8 %8 to i1, !dbg !6921
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6922

land.rhs:                                         ; preds = %cond.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6923, !tbaa !2442
  %tobool9 = icmp ne %struct.bin_str* %9, null, !dbg !6923
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !6924

lor.rhs:                                          ; preds = %land.rhs
  %call10 = call zeroext i1 @is_colored(i32 4), !dbg !6925
  br label %lor.end, !dbg !6924

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %call10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end6
  %11 = phi i1 [ false, %cond.end6 ], [ %10, %lor.end ], !dbg !6926
  %frombool11 = zext i1 %11 to i8, !dbg !6920
  store i8 %frombool11, i8* %used_color_this_time, align 1, !dbg !6920, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6927, metadata !DIExpression()), !dbg !6928
  %12 = load i8*, i8** %name, align 8, !dbg !6929, !tbaa !2442
  %13 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !6930, !tbaa !2442
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6931, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 11, !dbg !6932, !ctir !184
  %15 = load i32, i32* %quoted, align 4, !dbg !6932, !tbaa !3819, !ctir !27
  %16 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6933, !tbaa !2442
  %17 = load i8, i8* %symlink_target.addr, align 1, !dbg !6934, !tbaa !2461
  %tobool12 = trunc i8 %17 to i1, !dbg !6934
  %lnot = xor i1 %tobool12, true, !dbg !6935
  %18 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !6936, !tbaa !2442
  %19 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6937, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %19, i32 0, i32 2, !dbg !6938, !ctir !184
  %20 = load i8*, i8** %absolute_name, align 8, !dbg !6938, !tbaa !3940, !ctir !143
  %call13 = call i64 @quote_name(i8* %12, %struct.quoting_options* %13, i32 %15, %struct.bin_str* %16, i1 zeroext %lnot, %struct.obstack* %18, i8* %20), !dbg !6939
  store i64 %call13, i64* %len, align 8, !dbg !6928, !tbaa !2579
  call void @process_signals(), !dbg !6940
  %21 = load i8, i8* %used_color_this_time, align 1, !dbg !6941, !tbaa !2461
  %tobool14 = trunc i8 %21 to i1, !dbg !6941
  br i1 %tobool14, label %if.then, label %if.end18, !dbg !6943

if.then:                                          ; preds = %land.end
  call void @prep_non_filename_text(), !dbg !6944
  %22 = load i64, i64* @line_length, align 8, !dbg !6946, !tbaa !2579
  %tobool15 = icmp ne i64 %22, 0, !dbg !6946
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !6948

land.lhs.true:                                    ; preds = %if.then
  %23 = load i64, i64* %start_col.addr, align 8, !dbg !6949, !tbaa !2579
  %24 = load i64, i64* @line_length, align 8, !dbg !6950, !tbaa !2579
  %div = udiv i64 %23, %24, !dbg !6951
  %25 = load i64, i64* %start_col.addr, align 8, !dbg !6952, !tbaa !2579
  %26 = load i64, i64* %len, align 8, !dbg !6953, !tbaa !2579
  %add = add i64 %25, %26, !dbg !6954
  %sub = sub i64 %add, 1, !dbg !6955
  %27 = load i64, i64* @line_length, align 8, !dbg !6956, !tbaa !2579
  %div16 = udiv i64 %sub, %27, !dbg !6957
  %cmp = icmp ne i64 %div, %div16, !dbg !6958
  br i1 %cmp, label %if.then17, label %if.end, !dbg !6959

if.then17:                                        ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 23)), !dbg !6960
  br label %if.end, !dbg !6960

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.then
  br label %if.end18, !dbg !6961

if.end18:                                         ; preds = %if.end, %land.end
  %28 = load i64, i64* %len, align 8, !dbg !6962, !tbaa !2579
  ret i64 %28, !dbg !6963
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6964 !ctir !745 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6971, metadata !DIExpression()), !dbg !6972
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6973, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6973
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6974, !tbaa !2436
  %2 = load i32, i32* %type.addr, align 4, !dbg !6975, !tbaa !2497
  %call = call signext i8 @get_type_indicator(i1 zeroext %tobool, i32 %1, i32 %2), !dbg !6976
  store i8 %call, i8* %c, align 1, !dbg !6972, !tbaa !2497
  %3 = load i8, i8* %c, align 1, !dbg !6977, !tbaa !2497
  %tobool1 = icmp ne i8 %3, 0, !dbg !6977
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6979

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6980

do.body:                                          ; preds = %if.then
  %4 = load i8, i8* %c, align 1, !dbg !6981, !tbaa !2497
  %conv = sext i8 %4 to i32, !dbg !6981
  %call2 = call i32 @putchar_unlocked(i32 %conv), !dbg !6981
  %5 = load i64, i64* @dired_pos, align 8, !dbg !6981, !tbaa !2579
  %inc = add i64 %5, 1, !dbg !6981
  store i64 %inc, i64* @dired_pos, align 8, !dbg !6981, !tbaa !2579
  br label %do.end, !dbg !6981

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !6981

if.end:                                           ; preds = %do.end, %entry
  %6 = load i8, i8* %c, align 1, !dbg !6983, !tbaa !2497
  %tobool3 = icmp ne i8 %6, 0, !dbg !6984
  %lnot = xor i1 %tobool3, true, !dbg !6984
  %lnot4 = xor i1 %lnot, true, !dbg !6985
  ret i1 %lnot4, !dbg !6986
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @get_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6987 !ctir !747 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6996, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6996
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6998

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6999, !tbaa !2436
  %and = and i32 %1, 61440, !dbg !6999
  %cmp = icmp eq i32 %and, 32768, !dbg !6999
  br i1 %cmp, label %if.then, label %if.else8, !dbg !6996

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !7000, !tbaa !2497
  %cmp1 = icmp eq i32 %2, 5, !dbg !7001
  br i1 %cmp1, label %if.then, label %if.else8, !dbg !6998

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i8, i8* %stat_ok.addr, align 1, !dbg !7002, !tbaa !2461
  %tobool2 = trunc i8 %3 to i1, !dbg !7002
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !7005

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @indicator_style, align 4, !dbg !7006, !tbaa !2497
  %cmp3 = icmp eq i32 %4, 3, !dbg !7007
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !7008

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7009, !tbaa !2436
  %and5 = and i32 %5, 73, !dbg !7010
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7010
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7011

if.then7:                                         ; preds = %land.lhs.true4
  store i8 42, i8* %c, align 1, !dbg !7012, !tbaa !2497
  br label %if.end, !dbg !7013

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.then
  store i8 0, i8* %c, align 1, !dbg !7014, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end55, !dbg !7015

if.else8:                                         ; preds = %cond.false, %cond.true
  %6 = load i8, i8* %stat_ok.addr, align 1, !dbg !7016, !tbaa !2461
  %tobool9 = trunc i8 %6 to i1, !dbg !7016
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !7019

cond.true10:                                      ; preds = %if.else8
  %7 = load i32, i32* %mode.addr, align 4, !dbg !7020, !tbaa !2436
  %and11 = and i32 %7, 61440, !dbg !7020
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !7020
  br i1 %cmp12, label %if.then16, label %if.else17, !dbg !7016

cond.false13:                                     ; preds = %if.else8
  %8 = load i32, i32* %type.addr, align 4, !dbg !7021, !tbaa !2497
  %cmp14 = icmp eq i32 %8, 3, !dbg !7022
  br i1 %cmp14, label %if.then16, label %lor.lhs.false, !dbg !7023

lor.lhs.false:                                    ; preds = %cond.false13
  %9 = load i32, i32* %type.addr, align 4, !dbg !7024, !tbaa !2497
  %cmp15 = icmp eq i32 %9, 9, !dbg !7025
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !7019

if.then16:                                        ; preds = %lor.lhs.false, %cond.false13, %cond.true10
  store i8 47, i8* %c, align 1, !dbg !7026, !tbaa !2497
  br label %if.end54, !dbg !7027

if.else17:                                        ; preds = %lor.lhs.false, %cond.true10
  %10 = load i32, i32* @indicator_style, align 4, !dbg !7028, !tbaa !2497
  %cmp18 = icmp eq i32 %10, 1, !dbg !7030
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !7031

if.then19:                                        ; preds = %if.else17
  store i8 0, i8* %c, align 1, !dbg !7032, !tbaa !2497
  br label %if.end53, !dbg !7033

if.else20:                                        ; preds = %if.else17
  %11 = load i8, i8* %stat_ok.addr, align 1, !dbg !7034, !tbaa !2461
  %tobool21 = trunc i8 %11 to i1, !dbg !7034
  br i1 %tobool21, label %cond.true22, label %cond.false25, !dbg !7036

cond.true22:                                      ; preds = %if.else20
  %12 = load i32, i32* %mode.addr, align 4, !dbg !7037, !tbaa !2436
  %and23 = and i32 %12, 61440, !dbg !7037
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !7037
  br i1 %cmp24, label %if.then27, label %if.else28, !dbg !7034

cond.false25:                                     ; preds = %if.else20
  %13 = load i32, i32* %type.addr, align 4, !dbg !7038, !tbaa !2497
  %cmp26 = icmp eq i32 %13, 6, !dbg !7039
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !7036

if.then27:                                        ; preds = %cond.false25, %cond.true22
  store i8 64, i8* %c, align 1, !dbg !7040, !tbaa !2497
  br label %if.end52, !dbg !7041

if.else28:                                        ; preds = %cond.false25, %cond.true22
  %14 = load i8, i8* %stat_ok.addr, align 1, !dbg !7042, !tbaa !2461
  %tobool29 = trunc i8 %14 to i1, !dbg !7042
  br i1 %tobool29, label %cond.true30, label %cond.false33, !dbg !7044

cond.true30:                                      ; preds = %if.else28
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7045, !tbaa !2436
  %and31 = and i32 %15, 61440, !dbg !7045
  %cmp32 = icmp eq i32 %and31, 4096, !dbg !7045
  br i1 %cmp32, label %if.then35, label %if.else36, !dbg !7042

cond.false33:                                     ; preds = %if.else28
  %16 = load i32, i32* %type.addr, align 4, !dbg !7046, !tbaa !2497
  %cmp34 = icmp eq i32 %16, 1, !dbg !7047
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !7044

if.then35:                                        ; preds = %cond.false33, %cond.true30
  store i8 124, i8* %c, align 1, !dbg !7048, !tbaa !2497
  br label %if.end51, !dbg !7049

if.else36:                                        ; preds = %cond.false33, %cond.true30
  %17 = load i8, i8* %stat_ok.addr, align 1, !dbg !7050, !tbaa !2461
  %tobool37 = trunc i8 %17 to i1, !dbg !7050
  br i1 %tobool37, label %cond.true38, label %cond.false41, !dbg !7052

cond.true38:                                      ; preds = %if.else36
  %18 = load i32, i32* %mode.addr, align 4, !dbg !7053, !tbaa !2436
  %and39 = and i32 %18, 61440, !dbg !7053
  %cmp40 = icmp eq i32 %and39, 49152, !dbg !7053
  br i1 %cmp40, label %if.then43, label %if.else44, !dbg !7050

cond.false41:                                     ; preds = %if.else36
  %19 = load i32, i32* %type.addr, align 4, !dbg !7054, !tbaa !2497
  %cmp42 = icmp eq i32 %19, 7, !dbg !7055
  br i1 %cmp42, label %if.then43, label %if.else44, !dbg !7052

if.then43:                                        ; preds = %cond.false41, %cond.true38
  store i8 61, i8* %c, align 1, !dbg !7056, !tbaa !2497
  br label %if.end50, !dbg !7057

if.else44:                                        ; preds = %cond.false41, %cond.true38
  %20 = load i8, i8* %stat_ok.addr, align 1, !dbg !7058, !tbaa !2461
  %tobool45 = trunc i8 %20 to i1, !dbg !7058
  br i1 %tobool45, label %land.lhs.true46, label %if.else48, !dbg !7060

land.lhs.true46:                                  ; preds = %if.else44
  br i1 false, label %if.then47, label %if.else48, !dbg !7061

if.then47:                                        ; preds = %land.lhs.true46
  store i8 62, i8* %c, align 1, !dbg !7062, !tbaa !2497
  br label %if.end49, !dbg !7063

if.else48:                                        ; preds = %land.lhs.true46, %if.else44
  store i8 0, i8* %c, align 1, !dbg !7064, !tbaa !2497
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then35
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then27
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then19
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then16
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  %21 = load i8, i8* %c, align 1, !dbg !7065, !tbaa !2497
  ret i8 %21, !dbg !7066
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.bin_str* @get_color_indicator(%struct.fileinfo* %f, i1 zeroext %symlink_target) #0 !dbg !1025 !ctir !741 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %type = alloca i32, align 4, !ctir !53
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !593
  %len = alloca i64, align 8, !ctir !149
  %name = alloca i8*, align 8, !ctir !146
  %mode = alloca i32, align 4, !ctir !228
  %linkok = alloca i32, align 4, !ctir !27
  %s = alloca %struct.bin_str*, align 8, !ctir !744
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata i32* %linkok, metadata !7081, metadata !DIExpression()), !dbg !7082
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !7083, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !7083
  br i1 %tobool, label %if.then, label %if.else, !dbg !7085

if.then:                                          ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7086, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !7088, !ctir !184
  %2 = load i8*, i8** %linkname, align 8, !dbg !7088, !tbaa !4155, !ctir !143
  store i8* %2, i8** %name, align 8, !dbg !7089, !tbaa !2442
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7090, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 5, !dbg !7091, !ctir !184
  %4 = load i32, i32* %linkmode, align 4, !dbg !7091, !tbaa !4193, !ctir !228
  store i32 %4, i32* %mode, align 4, !dbg !7092, !tbaa !2436
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7093, !tbaa !2442
  %linkok1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 8, !dbg !7094, !ctir !184
  %6 = load i8, i8* %linkok1, align 1, !dbg !7094, !tbaa !4187
  %tobool2 = trunc i8 %6 to i1, !dbg !7094, !ctir !141
  %7 = zext i1 %tobool2 to i64, !dbg !7093
  %cond = select i1 %tobool2, i32 0, i32 -1, !dbg !7093
  store i32 %cond, i32* %linkok, align 4, !dbg !7095, !tbaa !2436
  br label %if.end, !dbg !7096

if.else:                                          ; preds = %entry
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7097, !tbaa !2442
  %name3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 0, !dbg !7099, !ctir !184
  %9 = load i8*, i8** %name3, align 8, !dbg !7099, !tbaa !4017, !ctir !143
  store i8* %9, i8** %name, align 8, !dbg !7100, !tbaa !2442
  %10 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7101, !tbaa !2461
  %tobool4 = trunc i8 %10 to i1, !dbg !7101
  br i1 %tobool4, label %land.lhs.true, label %cond.false, !dbg !7101

land.lhs.true:                                    ; preds = %if.else
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %linkok5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 8, !dbg !7101, !ctir !184
  %12 = load i8, i8* %linkok5, align 1, !dbg !7101, !tbaa !4187
  %tobool6 = trunc i8 %12 to i1, !dbg !7101, !ctir !141
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7101

cond.true:                                        ; preds = %land.lhs.true
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %linkmode7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 5, !dbg !7101, !ctir !184
  %14 = load i32, i32* %linkmode7, align 4, !dbg !7101, !tbaa !4193, !ctir !228
  br label %cond.end, !dbg !7101

cond.false:                                       ; preds = %land.lhs.true, %if.else
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !7101, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 3, !dbg !7101, !ctir !191
  %16 = load i32, i32* %st_mode, align 8, !dbg !7101, !tbaa !3982, !ctir !201
  br label %cond.end, !dbg !7101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %14, %cond.true ], [ %16, %cond.false ], !dbg !7101
  store i32 %cond8, i32* %mode, align 4, !dbg !7102, !tbaa !2436
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7103, !tbaa !2442
  %linkok9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 8, !dbg !7104, !ctir !184
  %18 = load i8, i8* %linkok9, align 1, !dbg !7104, !tbaa !4187
  %tobool10 = trunc i8 %18 to i1, !dbg !7104, !ctir !141
  %conv = zext i1 %tobool10 to i32, !dbg !7103
  store i32 %conv, i32* %linkok, align 4, !dbg !7105, !tbaa !2436
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %19 = load i32, i32* %linkok, align 4, !dbg !7106, !tbaa !2436
  %cmp = icmp eq i32 %19, -1, !dbg !7108
  br i1 %cmp, label %land.lhs.true12, label %if.else15, !dbg !7109

land.lhs.true12:                                  ; preds = %if.end
  %call = call zeroext i1 @is_colored(i32 12), !dbg !7110
  br i1 %call, label %if.then14, label %if.else15, !dbg !7111

if.then14:                                        ; preds = %land.lhs.true12
  store i32 12, i32* %type, align 4, !dbg !7112, !tbaa !2497
  br label %if.end132, !dbg !7113

if.else15:                                        ; preds = %land.lhs.true12, %if.end
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7114, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 7, !dbg !7116, !ctir !184
  %21 = load i8, i8* %stat_ok, align 8, !dbg !7116, !tbaa !4023
  %tobool16 = trunc i8 %21 to i1, !dbg !7116, !ctir !141
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !7117

if.then17:                                        ; preds = %if.else15
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7118, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 4, !dbg !7120, !ctir !184
  %23 = load i32, i32* %filetype, align 8, !dbg !7120, !tbaa !3815, !ctir !36
  %idxprom = zext i32 %23 to i64, !dbg !7121
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @get_color_indicator.filetype_indicator, i64 0, i64 %idxprom, !dbg !7121, !ctir !743
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7121, !tbaa !2497
  store i32 %24, i32* %type, align 4, !dbg !7122, !tbaa !2497
  br label %if.end131, !dbg !7123

if.else18:                                        ; preds = %if.else15
  %25 = load i32, i32* %mode, align 4, !dbg !7124, !tbaa !2436
  %and = and i32 %25, 61440, !dbg !7124
  %cmp19 = icmp eq i32 %and, 32768, !dbg !7124
  br i1 %cmp19, label %if.then21, label %if.else65, !dbg !7127

if.then21:                                        ; preds = %if.else18
  store i32 5, i32* %type, align 4, !dbg !7128, !tbaa !2497
  %26 = load i32, i32* %mode, align 4, !dbg !7130, !tbaa !2436
  %and22 = and i32 %26, 2048, !dbg !7132
  %cmp23 = icmp ne i32 %and22, 0, !dbg !7133
  br i1 %cmp23, label %land.lhs.true25, label %if.else29, !dbg !7134

land.lhs.true25:                                  ; preds = %if.then21
  %call26 = call zeroext i1 @is_colored(i32 16), !dbg !7135
  br i1 %call26, label %if.then28, label %if.else29, !dbg !7136

if.then28:                                        ; preds = %land.lhs.true25
  store i32 16, i32* %type, align 4, !dbg !7137, !tbaa !2497
  br label %if.end64, !dbg !7138

if.else29:                                        ; preds = %land.lhs.true25, %if.then21
  %27 = load i32, i32* %mode, align 4, !dbg !7139, !tbaa !2436
  %and30 = and i32 %27, 1024, !dbg !7141
  %cmp31 = icmp ne i32 %and30, 0, !dbg !7142
  br i1 %cmp31, label %land.lhs.true33, label %if.else37, !dbg !7143

land.lhs.true33:                                  ; preds = %if.else29
  %call34 = call zeroext i1 @is_colored(i32 17), !dbg !7144
  br i1 %call34, label %if.then36, label %if.else37, !dbg !7145

if.then36:                                        ; preds = %land.lhs.true33
  store i32 17, i32* %type, align 4, !dbg !7146, !tbaa !2497
  br label %if.end63, !dbg !7147

if.else37:                                        ; preds = %land.lhs.true33, %if.else29
  %call38 = call zeroext i1 @is_colored(i32 21), !dbg !7148
  br i1 %call38, label %land.lhs.true40, label %if.else44, !dbg !7150

land.lhs.true40:                                  ; preds = %if.else37
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7151, !tbaa !2442
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 10, !dbg !7152, !ctir !184
  %29 = load i8, i8* %has_capability, align 8, !dbg !7152, !tbaa !4040
  %tobool41 = trunc i8 %29 to i1, !dbg !7152, !ctir !141
  br i1 %tobool41, label %if.then43, label %if.else44, !dbg !7153

if.then43:                                        ; preds = %land.lhs.true40
  store i32 21, i32* %type, align 4, !dbg !7154, !tbaa !2497
  br label %if.end62, !dbg !7155

if.else44:                                        ; preds = %land.lhs.true40, %if.else37
  %30 = load i32, i32* %mode, align 4, !dbg !7156, !tbaa !2436
  %and45 = and i32 %30, 73, !dbg !7158
  %cmp46 = icmp ne i32 %and45, 0, !dbg !7159
  br i1 %cmp46, label %land.lhs.true48, label %if.else52, !dbg !7160

land.lhs.true48:                                  ; preds = %if.else44
  %call49 = call zeroext i1 @is_colored(i32 14), !dbg !7161
  br i1 %call49, label %if.then51, label %if.else52, !dbg !7162

if.then51:                                        ; preds = %land.lhs.true48
  store i32 14, i32* %type, align 4, !dbg !7163, !tbaa !2497
  br label %if.end61, !dbg !7164

if.else52:                                        ; preds = %land.lhs.true48, %if.else44
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7165, !tbaa !2442
  %stat53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7167, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat53, i32 0, i32 2, !dbg !7168, !ctir !191
  %32 = load i64, i64* %st_nlink, align 8, !dbg !7168, !tbaa !4347, !ctir !199
  %cmp54 = icmp ult i64 1, %32, !dbg !7169
  br i1 %cmp54, label %land.lhs.true56, label %if.end60, !dbg !7170

land.lhs.true56:                                  ; preds = %if.else52
  %call57 = call zeroext i1 @is_colored(i32 22), !dbg !7171
  br i1 %call57, label %if.then59, label %if.end60, !dbg !7172

if.then59:                                        ; preds = %land.lhs.true56
  store i32 22, i32* %type, align 4, !dbg !7173, !tbaa !2497
  br label %if.end60, !dbg !7174

if.end60:                                         ; preds = %if.then59, %land.lhs.true56, %if.else52
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then51
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then43
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then28
  br label %if.end130, !dbg !7175

if.else65:                                        ; preds = %if.else18
  %33 = load i32, i32* %mode, align 4, !dbg !7176, !tbaa !2436
  %and66 = and i32 %33, 61440, !dbg !7176
  %cmp67 = icmp eq i32 %and66, 16384, !dbg !7176
  br i1 %cmp67, label %if.then69, label %if.else98, !dbg !7178

if.then69:                                        ; preds = %if.else65
  store i32 6, i32* %type, align 4, !dbg !7179, !tbaa !2497
  %34 = load i32, i32* %mode, align 4, !dbg !7181, !tbaa !2436
  %and70 = and i32 %34, 512, !dbg !7183
  %tobool71 = icmp ne i32 %and70, 0, !dbg !7183
  br i1 %tobool71, label %land.lhs.true72, label %if.else79, !dbg !7184

land.lhs.true72:                                  ; preds = %if.then69
  %35 = load i32, i32* %mode, align 4, !dbg !7185, !tbaa !2436
  %and73 = and i32 %35, 2, !dbg !7186
  %tobool74 = icmp ne i32 %and73, 0, !dbg !7186
  br i1 %tobool74, label %land.lhs.true75, label %if.else79, !dbg !7187

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %call76 = call zeroext i1 @is_colored(i32 20), !dbg !7188
  br i1 %call76, label %if.then78, label %if.else79, !dbg !7189

if.then78:                                        ; preds = %land.lhs.true75
  store i32 20, i32* %type, align 4, !dbg !7190, !tbaa !2497
  br label %if.end97, !dbg !7191

if.else79:                                        ; preds = %land.lhs.true75, %land.lhs.true72, %if.then69
  %36 = load i32, i32* %mode, align 4, !dbg !7192, !tbaa !2436
  %and80 = and i32 %36, 2, !dbg !7194
  %cmp81 = icmp ne i32 %and80, 0, !dbg !7195
  br i1 %cmp81, label %land.lhs.true83, label %if.else87, !dbg !7196

land.lhs.true83:                                  ; preds = %if.else79
  %call84 = call zeroext i1 @is_colored(i32 19), !dbg !7197
  br i1 %call84, label %if.then86, label %if.else87, !dbg !7198

if.then86:                                        ; preds = %land.lhs.true83
  store i32 19, i32* %type, align 4, !dbg !7199, !tbaa !2497
  br label %if.end96, !dbg !7200

if.else87:                                        ; preds = %land.lhs.true83, %if.else79
  %37 = load i32, i32* %mode, align 4, !dbg !7201, !tbaa !2436
  %and88 = and i32 %37, 512, !dbg !7203
  %cmp89 = icmp ne i32 %and88, 0, !dbg !7204
  br i1 %cmp89, label %land.lhs.true91, label %if.end95, !dbg !7205

land.lhs.true91:                                  ; preds = %if.else87
  %call92 = call zeroext i1 @is_colored(i32 18), !dbg !7206
  br i1 %call92, label %if.then94, label %if.end95, !dbg !7207

if.then94:                                        ; preds = %land.lhs.true91
  store i32 18, i32* %type, align 4, !dbg !7208, !tbaa !2497
  br label %if.end95, !dbg !7209

if.end95:                                         ; preds = %if.then94, %land.lhs.true91, %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then86
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then78
  br label %if.end129, !dbg !7210

if.else98:                                        ; preds = %if.else65
  %38 = load i32, i32* %mode, align 4, !dbg !7211, !tbaa !2436
  %and99 = and i32 %38, 61440, !dbg !7211
  %cmp100 = icmp eq i32 %and99, 40960, !dbg !7211
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !7213

if.then102:                                       ; preds = %if.else98
  store i32 7, i32* %type, align 4, !dbg !7214, !tbaa !2497
  br label %if.end128, !dbg !7215

if.else103:                                       ; preds = %if.else98
  %39 = load i32, i32* %mode, align 4, !dbg !7216, !tbaa !2436
  %and104 = and i32 %39, 61440, !dbg !7216
  %cmp105 = icmp eq i32 %and104, 4096, !dbg !7216
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !7218

if.then107:                                       ; preds = %if.else103
  store i32 8, i32* %type, align 4, !dbg !7219, !tbaa !2497
  br label %if.end127, !dbg !7220

if.else108:                                       ; preds = %if.else103
  %40 = load i32, i32* %mode, align 4, !dbg !7221, !tbaa !2436
  %and109 = and i32 %40, 61440, !dbg !7221
  %cmp110 = icmp eq i32 %and109, 49152, !dbg !7221
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !7223

if.then112:                                       ; preds = %if.else108
  store i32 9, i32* %type, align 4, !dbg !7224, !tbaa !2497
  br label %if.end126, !dbg !7225

if.else113:                                       ; preds = %if.else108
  %41 = load i32, i32* %mode, align 4, !dbg !7226, !tbaa !2436
  %and114 = and i32 %41, 61440, !dbg !7226
  %cmp115 = icmp eq i32 %and114, 24576, !dbg !7226
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !7228

if.then117:                                       ; preds = %if.else113
  store i32 10, i32* %type, align 4, !dbg !7229, !tbaa !2497
  br label %if.end125, !dbg !7230

if.else118:                                       ; preds = %if.else113
  %42 = load i32, i32* %mode, align 4, !dbg !7231, !tbaa !2436
  %and119 = and i32 %42, 61440, !dbg !7231
  %cmp120 = icmp eq i32 %and119, 8192, !dbg !7231
  br i1 %cmp120, label %if.then122, label %if.else123, !dbg !7233

if.then122:                                       ; preds = %if.else118
  store i32 11, i32* %type, align 4, !dbg !7234, !tbaa !2497
  br label %if.end124, !dbg !7235

if.else123:                                       ; preds = %if.else118
  store i32 13, i32* %type, align 4, !dbg !7236, !tbaa !2497
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then117
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then112
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then102
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end97
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end64
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then17
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then14
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !7239, !tbaa !2442
  %43 = load i32, i32* %type, align 4, !dbg !7240, !tbaa !2497
  %cmp133 = icmp eq i32 %43, 5, !dbg !7242
  br i1 %cmp133, label %if.then135, label %if.end155, !dbg !7243

if.then135:                                       ; preds = %if.end132
  %44 = load i8*, i8** %name, align 8, !dbg !7244, !tbaa !2442
  %call136 = call i64 @strlen(i8* %44) #16, !dbg !7246
  store i64 %call136, i64* %len, align 8, !dbg !7247, !tbaa !2579
  %45 = load i64, i64* %len, align 8, !dbg !7248, !tbaa !2579
  %46 = load i8*, i8** %name, align 8, !dbg !7249, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !7249
  store i8* %add.ptr, i8** %name, align 8, !dbg !7249, !tbaa !2442
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !7250, !tbaa !2442
  store %struct.color_ext_type* %47, %struct.color_ext_type** %ext, align 8, !dbg !7252, !tbaa !2442
  br label %for.cond, !dbg !7253

for.cond:                                         ; preds = %for.inc, %if.then135
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7254, !tbaa !2442
  %cmp137 = icmp ne %struct.color_ext_type* %48, null, !dbg !7256
  br i1 %cmp137, label %for.body, label %for.end, !dbg !7257

for.body:                                         ; preds = %for.cond
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7258, !tbaa !2442
  %ext139 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %49, i32 0, i32 0, !dbg !7261, !ctir !594
  %len140 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext139, i32 0, i32 0, !dbg !7262, !ctir !262
  %50 = load i64, i64* %len140, align 8, !dbg !7262, !tbaa !7263, !ctir !149
  %51 = load i64, i64* %len, align 8, !dbg !7264, !tbaa !2579
  %cmp141 = icmp ule i64 %50, %51, !dbg !7265
  br i1 %cmp141, label %land.lhs.true143, label %if.end154, !dbg !7266

land.lhs.true143:                                 ; preds = %for.body
  %52 = load i8*, i8** %name, align 8, !dbg !7267, !tbaa !2442
  %53 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7268, !tbaa !2442
  %ext144 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %53, i32 0, i32 0, !dbg !7269, !ctir !594
  %len145 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext144, i32 0, i32 0, !dbg !7270, !ctir !262
  %54 = load i64, i64* %len145, align 8, !dbg !7270, !tbaa !7263, !ctir !149
  %idx.neg = sub i64 0, %54, !dbg !7271
  %add.ptr146 = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !7271
  %55 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7272, !tbaa !2442
  %ext147 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %55, i32 0, i32 0, !dbg !7273, !ctir !594
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext147, i32 0, i32 1, !dbg !7274, !ctir !262
  %56 = load i8*, i8** %string, align 8, !dbg !7274, !tbaa !3490, !ctir !146
  %57 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7275, !tbaa !2442
  %ext148 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %57, i32 0, i32 0, !dbg !7276, !ctir !594
  %len149 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext148, i32 0, i32 0, !dbg !7277, !ctir !262
  %58 = load i64, i64* %len149, align 8, !dbg !7277, !tbaa !7263, !ctir !149
  %call150 = call i32 @c_strncasecmp(i8* %add.ptr146, i8* %56, i64 %58) #16, !dbg !7278
  %cmp151 = icmp eq i32 %call150, 0, !dbg !7279
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !7280

if.then153:                                       ; preds = %land.lhs.true143
  br label %for.end, !dbg !7281

if.end154:                                        ; preds = %land.lhs.true143, %for.body
  br label %for.inc, !dbg !7282

for.inc:                                          ; preds = %if.end154
  %59 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7283, !tbaa !2442
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %59, i32 0, i32 2, !dbg !7284, !ctir !594
  %60 = load %struct.color_ext_type*, %struct.color_ext_type** %next, align 8, !dbg !7284, !tbaa !3480, !ctir !593
  store %struct.color_ext_type* %60, %struct.color_ext_type** %ext, align 8, !dbg !7285, !tbaa !2442
  br label %for.cond, !dbg !7286, !llvm.loop !7287

for.end:                                          ; preds = %if.then153, %for.cond
  br label %if.end155, !dbg !7289

if.end155:                                        ; preds = %for.end, %if.end132
  %61 = load i32, i32* %type, align 4, !dbg !7290, !tbaa !2497
  %cmp156 = icmp eq i32 %61, 7, !dbg !7292
  br i1 %cmp156, label %land.lhs.true158, label %if.end167, !dbg !7293

land.lhs.true158:                                 ; preds = %if.end155
  %62 = load i32, i32* %linkok, align 4, !dbg !7294, !tbaa !2436
  %tobool159 = icmp ne i32 %62, 0, !dbg !7294
  br i1 %tobool159, label %if.end167, label %if.then160, !dbg !7295

if.then160:                                       ; preds = %land.lhs.true158
  %63 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7296, !tbaa !2461
  %tobool161 = trunc i8 %63 to i1, !dbg !7296
  br i1 %tobool161, label %if.then165, label %lor.lhs.false, !dbg !7299

lor.lhs.false:                                    ; preds = %if.then160
  %call163 = call zeroext i1 @is_colored(i32 13), !dbg !7300
  br i1 %call163, label %if.then165, label %if.end166, !dbg !7301

if.then165:                                       ; preds = %lor.lhs.false, %if.then160
  store i32 13, i32* %type, align 4, !dbg !7302, !tbaa !2497
  br label %if.end166, !dbg !7303

if.end166:                                        ; preds = %if.then165, %lor.lhs.false
  br label %if.end167, !dbg !7304

if.end167:                                        ; preds = %if.end166, %land.lhs.true158, %if.end155
  call void @llvm.dbg.declare(metadata %struct.bin_str** %s, metadata !7305, metadata !DIExpression()), !dbg !7306
  %64 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7307, !tbaa !2442
  %tobool168 = icmp ne %struct.color_ext_type* %64, null, !dbg !7307
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !7307

cond.true169:                                     ; preds = %if.end167
  %65 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7308, !tbaa !2442
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %65, i32 0, i32 1, !dbg !7309, !ctir !594
  br label %cond.end173, !dbg !7307

cond.false170:                                    ; preds = %if.end167
  %66 = load i32, i32* %type, align 4, !dbg !7310, !tbaa !2497
  %idxprom171 = zext i32 %66 to i64, !dbg !7311
  %arrayidx172 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom171, !dbg !7311, !ctir !261
  br label %cond.end173, !dbg !7307

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi %struct.bin_str* [ %seq, %cond.true169 ], [ %arrayidx172, %cond.false170 ], !dbg !7307
  store %struct.bin_str* %cond174, %struct.bin_str** %s, align 8, !dbg !7306, !tbaa !2442
  %67 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7312, !tbaa !2442
  %string175 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %67, i32 0, i32 1, !dbg !7313, !ctir !400
  %68 = load i8*, i8** %string175, align 8, !dbg !7313, !tbaa !2711, !ctir !146
  %tobool176 = icmp ne i8* %68, null, !dbg !7312
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !7312

cond.true177:                                     ; preds = %cond.end173
  %69 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7314, !tbaa !2442
  br label %cond.end179, !dbg !7312

cond.false178:                                    ; preds = %cond.end173
  br label %cond.end179, !dbg !7312

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi %struct.bin_str* [ %69, %cond.true177 ], [ null, %cond.false178 ], !dbg !7312
  ret %struct.bin_str* %cond180, !dbg !7315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @calculate_columns(i1 zeroext %by_columns) #0 !dbg !7316 !ctir !763 {
entry:
  %by_columns.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %idx = alloca i64, align 8, !ctir !149
  %real_length = alloca i64, align 8, !ctir !149
  %frombool = zext i1 %by_columns to i8
  store i8 %frombool, i8* %by_columns.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %by_columns.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !7319, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7323, metadata !DIExpression()), !dbg !7324
  %0 = load i64, i64* @max_idx, align 8, !dbg !7325, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7325, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7325
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7325

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7325, !tbaa !2579
  br label %cond.end, !dbg !7325

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7325, !tbaa !2579
  br label %cond.end, !dbg !7325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7325
  store i64 %cond, i64* %max_cols, align 8, !dbg !7324, !tbaa !2579
  call void @init_column_info(), !dbg !7326
  store i64 0, i64* %filesno, align 8, !dbg !7327, !tbaa !2579
  br label %for.cond, !dbg !7329

for.cond:                                         ; preds = %for.inc38, %cond.end
  %4 = load i64, i64* %filesno, align 8, !dbg !7330, !tbaa !2579
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !7332, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !7333
  br i1 %cmp1, label %for.body, label %for.end40, !dbg !7334

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !7335, metadata !DIExpression()), !dbg !7337
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !7338, !tbaa !2442
  %7 = load i64, i64* %filesno, align 8, !dbg !7339, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !7338, !ctir !663
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !7338, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7338
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !7337, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !7340, metadata !DIExpression()), !dbg !7341
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !7342, !tbaa !2442
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %10), !dbg !7343
  store i64 %call, i64* %name_length, align 8, !dbg !7341, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7344, metadata !DIExpression()), !dbg !7346
  store i64 0, i64* %i, align 8, !dbg !7346, !tbaa !2579
  br label %for.cond2, !dbg !7347

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i64, i64* %i, align 8, !dbg !7348, !tbaa !2579
  %12 = load i64, i64* %max_cols, align 8, !dbg !7350, !tbaa !2579
  %cmp3 = icmp ult i64 %11, %12, !dbg !7351
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !7352

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7353, !tbaa !2442
  %14 = load i64, i64* %i, align 8, !dbg !7356, !tbaa !2579
  %arrayidx5 = getelementptr inbounds %struct.column_info, %struct.column_info* %13, i64 %14, !dbg !7353, !ctir !762
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx5, i32 0, i32 0, !dbg !7357, !ctir !757
  %15 = load i8, i8* %valid_len, align 8, !dbg !7357, !tbaa !7358
  %tobool = trunc i8 %15 to i1, !dbg !7357, !ctir !141
  br i1 %tobool, label %if.then, label %if.end37, !dbg !7359

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata i64* %idx, metadata !7360, metadata !DIExpression()), !dbg !7362
  %16 = load i8, i8* %by_columns.addr, align 1, !dbg !7363, !tbaa !2461
  %tobool6 = trunc i8 %16 to i1, !dbg !7363
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !7363

cond.true7:                                       ; preds = %if.then
  %17 = load i64, i64* %filesno, align 8, !dbg !7364, !tbaa !2579
  %18 = load i64, i64* @cwd_n_used, align 8, !dbg !7365, !tbaa !2579
  %19 = load i64, i64* %i, align 8, !dbg !7366, !tbaa !2579
  %add = add i64 %18, %19, !dbg !7367
  %20 = load i64, i64* %i, align 8, !dbg !7368, !tbaa !2579
  %add8 = add i64 %20, 1, !dbg !7369
  %div = udiv i64 %add, %add8, !dbg !7370
  %div9 = udiv i64 %17, %div, !dbg !7371
  br label %cond.end12, !dbg !7363

cond.false10:                                     ; preds = %if.then
  %21 = load i64, i64* %filesno, align 8, !dbg !7372, !tbaa !2579
  %22 = load i64, i64* %i, align 8, !dbg !7373, !tbaa !2579
  %add11 = add i64 %22, 1, !dbg !7374
  %rem = urem i64 %21, %add11, !dbg !7375
  br label %cond.end12, !dbg !7363

cond.end12:                                       ; preds = %cond.false10, %cond.true7
  %cond13 = phi i64 [ %div9, %cond.true7 ], [ %rem, %cond.false10 ], !dbg !7363
  store i64 %cond13, i64* %idx, align 8, !dbg !7362, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %real_length, metadata !7376, metadata !DIExpression()), !dbg !7377
  %23 = load i64, i64* %name_length, align 8, !dbg !7378, !tbaa !2579
  %24 = load i64, i64* %idx, align 8, !dbg !7379, !tbaa !2579
  %25 = load i64, i64* %i, align 8, !dbg !7380, !tbaa !2579
  %cmp14 = icmp eq i64 %24, %25, !dbg !7381
  %26 = zext i1 %cmp14 to i64, !dbg !7379
  %cond15 = select i1 %cmp14, i32 0, i32 2, !dbg !7379
  %conv = sext i32 %cond15 to i64, !dbg !7382
  %add16 = add i64 %23, %conv, !dbg !7383
  store i64 %add16, i64* %real_length, align 8, !dbg !7377, !tbaa !2579
  %27 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7384, !tbaa !2442
  %28 = load i64, i64* %i, align 8, !dbg !7386, !tbaa !2579
  %arrayidx17 = getelementptr inbounds %struct.column_info, %struct.column_info* %27, i64 %28, !dbg !7384, !ctir !762
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx17, i32 0, i32 2, !dbg !7387, !ctir !757
  %29 = load i64*, i64** %col_arr, align 8, !dbg !7387, !tbaa !6165, !ctir !148
  %30 = load i64, i64* %idx, align 8, !dbg !7388, !tbaa !2579
  %arrayidx18 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !7384, !ctir !148
  %31 = load i64, i64* %arrayidx18, align 8, !dbg !7384, !tbaa !2579
  %32 = load i64, i64* %real_length, align 8, !dbg !7389, !tbaa !2579
  %cmp19 = icmp ult i64 %31, %32, !dbg !7390
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !7391

if.then21:                                        ; preds = %cond.end12
  %33 = load i64, i64* %real_length, align 8, !dbg !7392, !tbaa !2579
  %34 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7394, !tbaa !2442
  %35 = load i64, i64* %i, align 8, !dbg !7395, !tbaa !2579
  %arrayidx22 = getelementptr inbounds %struct.column_info, %struct.column_info* %34, i64 %35, !dbg !7394, !ctir !762
  %col_arr23 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx22, i32 0, i32 2, !dbg !7396, !ctir !757
  %36 = load i64*, i64** %col_arr23, align 8, !dbg !7396, !tbaa !6165, !ctir !148
  %37 = load i64, i64* %idx, align 8, !dbg !7397, !tbaa !2579
  %arrayidx24 = getelementptr inbounds i64, i64* %36, i64 %37, !dbg !7394, !ctir !148
  %38 = load i64, i64* %arrayidx24, align 8, !dbg !7394, !tbaa !2579
  %sub = sub i64 %33, %38, !dbg !7398
  %39 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7399, !tbaa !2442
  %40 = load i64, i64* %i, align 8, !dbg !7400, !tbaa !2579
  %arrayidx25 = getelementptr inbounds %struct.column_info, %struct.column_info* %39, i64 %40, !dbg !7399, !ctir !762
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx25, i32 0, i32 1, !dbg !7401, !ctir !757
  %41 = load i64, i64* %line_len, align 8, !dbg !7402, !tbaa !7403, !ctir !149
  %add26 = add i64 %41, %sub, !dbg !7402
  store i64 %add26, i64* %line_len, align 8, !dbg !7402, !tbaa !7403, !ctir !149
  %42 = load i64, i64* %real_length, align 8, !dbg !7404, !tbaa !2579
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7405, !tbaa !2442
  %44 = load i64, i64* %i, align 8, !dbg !7406, !tbaa !2579
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7405, !ctir !762
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7407, !ctir !757
  %45 = load i64*, i64** %col_arr28, align 8, !dbg !7407, !tbaa !6165, !ctir !148
  %46 = load i64, i64* %idx, align 8, !dbg !7408, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i64, i64* %45, i64 %46, !dbg !7405, !ctir !148
  store i64 %42, i64* %arrayidx29, align 8, !dbg !7409, !tbaa !2579
  %47 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7410, !tbaa !2442
  %48 = load i64, i64* %i, align 8, !dbg !7411, !tbaa !2579
  %arrayidx30 = getelementptr inbounds %struct.column_info, %struct.column_info* %47, i64 %48, !dbg !7410, !ctir !762
  %line_len31 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx30, i32 0, i32 1, !dbg !7412, !ctir !757
  %49 = load i64, i64* %line_len31, align 8, !dbg !7412, !tbaa !7403, !ctir !149
  %50 = load i64, i64* @line_length, align 8, !dbg !7413, !tbaa !2579
  %cmp32 = icmp ult i64 %49, %50, !dbg !7414
  %51 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7415, !tbaa !2442
  %52 = load i64, i64* %i, align 8, !dbg !7416, !tbaa !2579
  %arrayidx34 = getelementptr inbounds %struct.column_info, %struct.column_info* %51, i64 %52, !dbg !7415, !ctir !762
  %valid_len35 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx34, i32 0, i32 0, !dbg !7417, !ctir !757
  %frombool36 = zext i1 %cmp32 to i8, !dbg !7418
  store i8 %frombool36, i8* %valid_len35, align 8, !dbg !7418, !tbaa !7358, !ctir !141
  br label %if.end, !dbg !7419

if.end:                                           ; preds = %if.then21, %cond.end12
  br label %if.end37, !dbg !7420

if.end37:                                         ; preds = %if.end, %for.body4
  br label %for.inc, !dbg !7421

for.inc:                                          ; preds = %if.end37
  %53 = load i64, i64* %i, align 8, !dbg !7422, !tbaa !2579
  %inc = add i64 %53, 1, !dbg !7422
  store i64 %inc, i64* %i, align 8, !dbg !7422, !tbaa !2579
  br label %for.cond2, !dbg !7423, !llvm.loop !7424

for.end:                                          ; preds = %for.cond2
  br label %for.inc38, !dbg !7426

for.inc38:                                        ; preds = %for.end
  %54 = load i64, i64* %filesno, align 8, !dbg !7427, !tbaa !2579
  %inc39 = add i64 %54, 1, !dbg !7427
  store i64 %inc39, i64* %filesno, align 8, !dbg !7427, !tbaa !2579
  br label %for.cond, !dbg !7428, !llvm.loop !7429

for.end40:                                        ; preds = %for.cond
  %55 = load i64, i64* %max_cols, align 8, !dbg !7431, !tbaa !2579
  store i64 %55, i64* %cols, align 8, !dbg !7433, !tbaa !2579
  br label %for.cond41, !dbg !7434

for.cond41:                                       ; preds = %for.inc51, %for.end40
  %56 = load i64, i64* %cols, align 8, !dbg !7435, !tbaa !2579
  %cmp42 = icmp ult i64 1, %56, !dbg !7437
  br i1 %cmp42, label %for.body44, label %for.end52, !dbg !7438

for.body44:                                       ; preds = %for.cond41
  %57 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7439, !tbaa !2442
  %58 = load i64, i64* %cols, align 8, !dbg !7442, !tbaa !2579
  %sub45 = sub i64 %58, 1, !dbg !7443
  %arrayidx46 = getelementptr inbounds %struct.column_info, %struct.column_info* %57, i64 %sub45, !dbg !7439, !ctir !762
  %valid_len47 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx46, i32 0, i32 0, !dbg !7444, !ctir !757
  %59 = load i8, i8* %valid_len47, align 8, !dbg !7444, !tbaa !7358
  %tobool48 = trunc i8 %59 to i1, !dbg !7444, !ctir !141
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !7445

if.then49:                                        ; preds = %for.body44
  br label %for.end52, !dbg !7446

if.end50:                                         ; preds = %for.body44
  br label %for.inc51, !dbg !7447

for.inc51:                                        ; preds = %if.end50
  %60 = load i64, i64* %cols, align 8, !dbg !7448, !tbaa !2579
  %dec = add i64 %60, -1, !dbg !7448
  store i64 %dec, i64* %cols, align 8, !dbg !7448, !tbaa !2579
  br label %for.cond41, !dbg !7449, !llvm.loop !7450

for.end52:                                        ; preds = %if.then49, %for.cond41
  %61 = load i64, i64* %cols, align 8, !dbg !7452, !tbaa !2579
  ret i64 %61, !dbg !7453
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @length_of_file_name_and_frills(%struct.fileinfo* %f) #0 !dbg !7454 !ctir !751 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %len = alloca i64, align 8, !ctir !149
  %buf = alloca [652 x i8], align 16, !ctir !622
  %c = alloca i8, align 1, !ctir !144
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7457, metadata !DIExpression()), !dbg !7458
  store i64 0, i64* %len, align 8, !dbg !7458, !tbaa !2579
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !7459, metadata !DIExpression()), !dbg !7460
  %0 = load i8, i8* @print_inode, align 1, !dbg !7461, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !7461
  br i1 %tobool, label %if.then, label %if.end, !dbg !7463

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !7464, !tbaa !2497
  %cmp = icmp eq i32 %1, 4, !dbg !7465
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7464

cond.true:                                        ; preds = %if.then
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7466, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !7467, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !7468, !ctir !191
  %3 = load i64, i64* %st_ino, align 8, !dbg !7468, !tbaa !3808, !ctir !197
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7469
  %call = call i8* @umaxtostr(i64 %3, i8* %arraydecay), !dbg !7470
  %call1 = call i64 @strlen(i8* %call) #16, !dbg !7471
  br label %cond.end, !dbg !7464

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* @inode_number_width, align 4, !dbg !7472, !tbaa !2436
  %conv = sext i32 %4 to i64, !dbg !7472
  br label %cond.end, !dbg !7464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call1, %cond.true ], [ %conv, %cond.false ], !dbg !7464
  %add = add i64 1, %cond, !dbg !7473
  %5 = load i64, i64* %len, align 8, !dbg !7474, !tbaa !2579
  %add2 = add i64 %5, %add, !dbg !7474
  store i64 %add2, i64* %len, align 8, !dbg !7474, !tbaa !2579
  br label %if.end, !dbg !7475

if.end:                                           ; preds = %cond.end, %entry
  %6 = load i8, i8* @print_block_size, align 1, !dbg !7476, !tbaa !2461
  %tobool3 = trunc i8 %6 to i1, !dbg !7476
  br i1 %tobool3, label %if.then4, label %if.end23, !dbg !7478

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* @format, align 4, !dbg !7479, !tbaa !2497
  %cmp5 = icmp eq i32 %7, 4, !dbg !7480
  br i1 %cmp5, label %cond.true7, label %cond.false17, !dbg !7479

cond.true7:                                       ; preds = %if.then4
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7481, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 7, !dbg !7482, !ctir !184
  %9 = load i8, i8* %stat_ok, align 8, !dbg !7482, !tbaa !4023
  %tobool8 = trunc i8 %9 to i1, !dbg !7482, !ctir !141
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !7483

cond.true9:                                       ; preds = %cond.true7
  br label %cond.end14, !dbg !7483

cond.false10:                                     ; preds = %cond.true7
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7484, !tbaa !2442
  %stat11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !7484, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat11, i32 0, i32 10, !dbg !7484, !ctir !191
  %11 = load i64, i64* %st_blocks, align 8, !dbg !7484, !tbaa !4224, !ctir !212
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7485
  %12 = load i32, i32* @human_output_opts, align 4, !dbg !7486, !tbaa !2436
  %13 = load i64, i64* @output_block_size, align 8, !dbg !7487, !tbaa !2579
  %call13 = call i8* @human_readable(i64 %11, i8* %arraydecay12, i32 %12, i64 512, i64 %13), !dbg !7488
  br label %cond.end14, !dbg !7483

cond.end14:                                       ; preds = %cond.false10, %cond.true9
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true9 ], [ %call13, %cond.false10 ], !dbg !7483
  %call16 = call i64 @strlen(i8* %cond15) #16, !dbg !7489
  br label %cond.end19, !dbg !7479

cond.false17:                                     ; preds = %if.then4
  %14 = load i32, i32* @block_size_width, align 4, !dbg !7490, !tbaa !2436
  %conv18 = sext i32 %14 to i64, !dbg !7490
  br label %cond.end19, !dbg !7479

cond.end19:                                       ; preds = %cond.false17, %cond.end14
  %cond20 = phi i64 [ %call16, %cond.end14 ], [ %conv18, %cond.false17 ], !dbg !7479
  %add21 = add i64 1, %cond20, !dbg !7491
  %15 = load i64, i64* %len, align 8, !dbg !7492, !tbaa !2579
  %add22 = add i64 %15, %add21, !dbg !7492
  store i64 %add22, i64* %len, align 8, !dbg !7492, !tbaa !2579
  br label %if.end23, !dbg !7493

if.end23:                                         ; preds = %cond.end19, %if.end
  %16 = load i8, i8* @print_scontext, align 1, !dbg !7494, !tbaa !2461
  %tobool24 = trunc i8 %16 to i1, !dbg !7494
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !7496

if.then25:                                        ; preds = %if.end23
  %17 = load i32, i32* @format, align 4, !dbg !7497, !tbaa !2497
  %cmp26 = icmp eq i32 %17, 4, !dbg !7498
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !7497

cond.true28:                                      ; preds = %if.then25
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7499, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 6, !dbg !7500, !ctir !184
  %19 = load i8*, i8** %scontext, align 8, !dbg !7500, !tbaa !4070, !ctir !143
  %call29 = call i64 @strlen(i8* %19) #16, !dbg !7501
  br label %cond.end32, !dbg !7497

cond.false30:                                     ; preds = %if.then25
  %20 = load i32, i32* @scontext_width, align 4, !dbg !7502, !tbaa !2436
  %conv31 = sext i32 %20 to i64, !dbg !7502
  br label %cond.end32, !dbg !7497

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i64 [ %call29, %cond.true28 ], [ %conv31, %cond.false30 ], !dbg !7497
  %add34 = add i64 1, %cond33, !dbg !7503
  %21 = load i64, i64* %len, align 8, !dbg !7504, !tbaa !2579
  %add35 = add i64 %21, %add34, !dbg !7504
  store i64 %add35, i64* %len, align 8, !dbg !7504, !tbaa !2579
  br label %if.end36, !dbg !7505

if.end36:                                         ; preds = %cond.end32, %if.end23
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7506, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 0, !dbg !7507, !ctir !184
  %23 = load i8*, i8** %name, align 8, !dbg !7507, !tbaa !4017, !ctir !143
  %24 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !7508, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7509, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 11, !dbg !7510, !ctir !184
  %26 = load i32, i32* %quoted, align 4, !dbg !7510, !tbaa !3819, !ctir !27
  %call37 = call i64 @quote_name_width(i8* %23, %struct.quoting_options* %24, i32 %26), !dbg !7511
  %27 = load i64, i64* %len, align 8, !dbg !7512, !tbaa !2579
  %add38 = add i64 %27, %call37, !dbg !7512
  store i64 %add38, i64* %len, align 8, !dbg !7512, !tbaa !2579
  %28 = load i32, i32* @indicator_style, align 4, !dbg !7513, !tbaa !2497
  %cmp39 = icmp ne i32 %28, 0, !dbg !7515
  br i1 %cmp39, label %if.then41, label %if.end51, !dbg !7516

if.then41:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7517, metadata !DIExpression()), !dbg !7519
  %29 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7520, !tbaa !2442
  %stat_ok42 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %29, i32 0, i32 7, !dbg !7521, !ctir !184
  %30 = load i8, i8* %stat_ok42, align 8, !dbg !7521, !tbaa !4023
  %tobool43 = trunc i8 %30 to i1, !dbg !7521, !ctir !141
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7522, !tbaa !2442
  %stat44 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7523, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat44, i32 0, i32 3, !dbg !7524, !ctir !191
  %32 = load i32, i32* %st_mode, align 8, !dbg !7524, !tbaa !3982, !ctir !201
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7525, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %33, i32 0, i32 4, !dbg !7526, !ctir !184
  %34 = load i32, i32* %filetype, align 8, !dbg !7526, !tbaa !3815, !ctir !36
  %call45 = call signext i8 @get_type_indicator(i1 zeroext %tobool43, i32 %32, i32 %34), !dbg !7527
  store i8 %call45, i8* %c, align 1, !dbg !7519, !tbaa !2497
  %35 = load i8, i8* %c, align 1, !dbg !7528, !tbaa !2497
  %conv46 = sext i8 %35 to i32, !dbg !7528
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !7529
  %conv48 = zext i1 %cmp47 to i32, !dbg !7529
  %conv49 = sext i32 %conv48 to i64, !dbg !7530
  %36 = load i64, i64* %len, align 8, !dbg !7531, !tbaa !2579
  %add50 = add i64 %36, %conv49, !dbg !7531
  store i64 %add50, i64* %len, align 8, !dbg !7531, !tbaa !2579
  br label %if.end51, !dbg !7532

if.end51:                                         ; preds = %if.then41, %if.end36
  %37 = load i64, i64* %len, align 8, !dbg !7533, !tbaa !2579
  ret i64 %37, !dbg !7534
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @indent(i64 %from, i64 %to) #0 !dbg !7535 !ctir !765 {
entry:
  %from.addr = alloca i64, align 8
  %to.addr = alloca i64, align 8
  store i64 %from, i64* %from.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i64 %to, i64* %to.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  br label %while.cond, !dbg !7540

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %from.addr, align 8, !dbg !7541, !tbaa !2579
  %1 = load i64, i64* %to.addr, align 8, !dbg !7542, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7543
  br i1 %cmp, label %while.body, label %while.end, !dbg !7540

while.body:                                       ; preds = %while.cond
  %2 = load i64, i64* @tabsize, align 8, !dbg !7544, !tbaa !2579
  %cmp1 = icmp ne i64 %2, 0, !dbg !7547
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !7548

land.lhs.true:                                    ; preds = %while.body
  %3 = load i64, i64* %to.addr, align 8, !dbg !7549, !tbaa !2579
  %4 = load i64, i64* @tabsize, align 8, !dbg !7550, !tbaa !2579
  %div = udiv i64 %3, %4, !dbg !7551
  %5 = load i64, i64* %from.addr, align 8, !dbg !7552, !tbaa !2579
  %add = add i64 %5, 1, !dbg !7553
  %6 = load i64, i64* @tabsize, align 8, !dbg !7554, !tbaa !2579
  %div2 = udiv i64 %add, %6, !dbg !7555
  %cmp3 = icmp ugt i64 %div, %div2, !dbg !7556
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7557

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @putchar_unlocked(i32 9), !dbg !7558
  %7 = load i64, i64* @tabsize, align 8, !dbg !7560, !tbaa !2579
  %8 = load i64, i64* %from.addr, align 8, !dbg !7561, !tbaa !2579
  %9 = load i64, i64* @tabsize, align 8, !dbg !7562, !tbaa !2579
  %rem = urem i64 %8, %9, !dbg !7563
  %sub = sub i64 %7, %rem, !dbg !7564
  %10 = load i64, i64* %from.addr, align 8, !dbg !7565, !tbaa !2579
  %add4 = add i64 %10, %sub, !dbg !7565
  store i64 %add4, i64* %from.addr, align 8, !dbg !7565, !tbaa !2579
  br label %if.end, !dbg !7566

if.else:                                          ; preds = %land.lhs.true, %while.body
  %call5 = call i32 @putchar_unlocked(i32 32), !dbg !7567
  %11 = load i64, i64* %from.addr, align 8, !dbg !7569, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !7569
  store i64 %inc, i64* %from.addr, align 8, !dbg !7569, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !7540, !llvm.loop !7570

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_width(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting) #0 !dbg !7573 !ctir !753 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %smallbuf = alloca [8192 x i8], align 16, !ctir !635
  %buf = alloca i8*, align 8, !ctir !143
  %width = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7582, metadata !DIExpression()), !dbg !7583
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7584
  store i8* %arraydecay, i8** %buf, align 8, !dbg !7583, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %width, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !7587, metadata !DIExpression()), !dbg !7588
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7589, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !7590, !tbaa !2442
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !7591, !tbaa !2436
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* %width, i8* %pad), !dbg !7592
  %3 = load i8*, i8** %buf, align 8, !dbg !7593, !tbaa !2442
  %arraydecay1 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7595
  %cmp = icmp ne i8* %3, %arraydecay1, !dbg !7596
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7597

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %buf, align 8, !dbg !7598, !tbaa !2442
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7599, !tbaa !2442
  %cmp2 = icmp ne i8* %4, %5, !dbg !7600
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7601

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %buf, align 8, !dbg !7602, !tbaa !2442
  call void @free(i8* %6) #13, !dbg !7603
  br label %if.end, !dbg !7603

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i8, i8* %pad, align 1, !dbg !7604, !tbaa !2461
  %tobool = trunc i8 %7 to i1, !dbg !7604
  %conv = zext i1 %tobool to i64, !dbg !7604
  %8 = load i64, i64* %width, align 8, !dbg !7605, !tbaa !2579
  %add = add i64 %8, %conv, !dbg !7605
  store i64 %add, i64* %width, align 8, !dbg !7605, !tbaa !2579
  %9 = load i64, i64* %width, align 8, !dbg !7606, !tbaa !2579
  ret i64 %9, !dbg !7607
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_column_info() #0 !dbg !1028 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %new_column_info_alloc = alloca i64, align 8, !ctir !149
  %p = alloca i64*, align 8, !ctir !148
  %column_info_growth = alloca i64, align 8, !ctir !149
  %s = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7610, metadata !DIExpression()), !dbg !7611
  %0 = load i64, i64* @max_idx, align 8, !dbg !7612, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7612, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7612
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7612

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7612, !tbaa !2579
  br label %cond.end, !dbg !7612

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7612, !tbaa !2579
  br label %cond.end, !dbg !7612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7612
  store i64 %cond, i64* %max_cols, align 8, !dbg !7611, !tbaa !2579
  %4 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7613, !tbaa !2579
  %5 = load i64, i64* %max_cols, align 8, !dbg !7615, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !7616
  br i1 %cmp1, label %if.then, label %if.end16, !dbg !7617

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %new_column_info_alloc, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata i64** %p, metadata !7621, metadata !DIExpression()), !dbg !7622
  %6 = load i64, i64* %max_cols, align 8, !dbg !7623, !tbaa !2579
  %7 = load i64, i64* @max_idx, align 8, !dbg !7625, !tbaa !2579
  %div = udiv i64 %7, 2, !dbg !7626
  %cmp2 = icmp ult i64 %6, %div, !dbg !7627
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7628

if.then3:                                         ; preds = %if.then
  %8 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7629, !tbaa !2442
  %9 = bitcast %struct.column_info* %8 to i8*, !dbg !7629
  %10 = load i64, i64* %max_cols, align 8, !dbg !7631, !tbaa !2579
  %call = call i8* @xnrealloc(i8* %9, i64 %10, i64 48), !dbg !7632
  %11 = bitcast i8* %call to %struct.column_info*, !dbg !7632
  store %struct.column_info* %11, %struct.column_info** @column_info, align 8, !dbg !7633, !tbaa !2442
  %12 = load i64, i64* %max_cols, align 8, !dbg !7634, !tbaa !2579
  %mul = mul i64 2, %12, !dbg !7635
  store i64 %mul, i64* %new_column_info_alloc, align 8, !dbg !7636, !tbaa !2579
  br label %if.end, !dbg !7637

if.else:                                          ; preds = %if.then
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7638, !tbaa !2442
  %14 = bitcast %struct.column_info* %13 to i8*, !dbg !7638
  %15 = load i64, i64* @max_idx, align 8, !dbg !7640, !tbaa !2579
  %call4 = call i8* @xnrealloc(i8* %14, i64 %15, i64 24), !dbg !7641
  %16 = bitcast i8* %call4 to %struct.column_info*, !dbg !7641
  store %struct.column_info* %16, %struct.column_info** @column_info, align 8, !dbg !7642, !tbaa !2442
  %17 = load i64, i64* @max_idx, align 8, !dbg !7643, !tbaa !2579
  store i64 %17, i64* %new_column_info_alloc, align 8, !dbg !7644, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  call void @llvm.dbg.declare(metadata i64* %column_info_growth, metadata !7645, metadata !DIExpression()), !dbg !7647
  %18 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7648, !tbaa !2579
  %19 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7649, !tbaa !2579
  %sub = sub i64 %18, %19, !dbg !7650
  store i64 %sub, i64* %column_info_growth, align 8, !dbg !7647, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s, metadata !7651, metadata !DIExpression()), !dbg !7652
  %20 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7653, !tbaa !2579
  %add = add i64 %20, 1, !dbg !7654
  %21 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7655, !tbaa !2579
  %add5 = add i64 %add, %21, !dbg !7656
  store i64 %add5, i64* %s, align 8, !dbg !7652, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %t, metadata !7657, metadata !DIExpression()), !dbg !7658
  %22 = load i64, i64* %s, align 8, !dbg !7659, !tbaa !2579
  %23 = load i64, i64* %column_info_growth, align 8, !dbg !7660, !tbaa !2579
  %mul6 = mul i64 %22, %23, !dbg !7661
  store i64 %mul6, i64* %t, align 8, !dbg !7658, !tbaa !2579
  %24 = load i64, i64* %s, align 8, !dbg !7662, !tbaa !2579
  %25 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7664, !tbaa !2579
  %cmp7 = icmp ult i64 %24, %25, !dbg !7665
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !7666

lor.lhs.false:                                    ; preds = %if.end
  %26 = load i64, i64* %t, align 8, !dbg !7667, !tbaa !2579
  %27 = load i64, i64* %column_info_growth, align 8, !dbg !7668, !tbaa !2579
  %div8 = udiv i64 %26, %27, !dbg !7669
  %28 = load i64, i64* %s, align 8, !dbg !7670, !tbaa !2579
  %cmp9 = icmp ne i64 %div8, %28, !dbg !7671
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7672

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  call void @xalloc_die() #14, !dbg !7673
  unreachable, !dbg !7673

if.end11:                                         ; preds = %lor.lhs.false
  %29 = load i64, i64* %t, align 8, !dbg !7674, !tbaa !2579
  %div12 = udiv i64 %29, 2, !dbg !7675
  %call13 = call noalias i8* @xnmalloc(i64 %div12, i64 8), !dbg !7676
  %30 = bitcast i8* %call13 to i64*, !dbg !7676
  store i64* %30, i64** %p, align 8, !dbg !7677, !tbaa !2442
  %31 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7678, !tbaa !2579
  store i64 %31, i64* %i, align 8, !dbg !7680, !tbaa !2579
  br label %for.cond, !dbg !7681

for.cond:                                         ; preds = %for.inc, %if.end11
  %32 = load i64, i64* %i, align 8, !dbg !7682, !tbaa !2579
  %33 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7684, !tbaa !2579
  %cmp14 = icmp ult i64 %32, %33, !dbg !7685
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7686

for.body:                                         ; preds = %for.cond
  %34 = load i64*, i64** %p, align 8, !dbg !7687, !tbaa !2442
  %35 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7689, !tbaa !2442
  %36 = load i64, i64* %i, align 8, !dbg !7690, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %35, i64 %36, !dbg !7689, !ctir !762
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx, i32 0, i32 2, !dbg !7691, !ctir !757
  store i64* %34, i64** %col_arr, align 8, !dbg !7692, !tbaa !6165, !ctir !148
  %37 = load i64, i64* %i, align 8, !dbg !7693, !tbaa !2579
  %add15 = add i64 %37, 1, !dbg !7694
  %38 = load i64*, i64** %p, align 8, !dbg !7695, !tbaa !2442
  %add.ptr = getelementptr inbounds i64, i64* %38, i64 %add15, !dbg !7695
  store i64* %add.ptr, i64** %p, align 8, !dbg !7695, !tbaa !2442
  br label %for.inc, !dbg !7696

for.inc:                                          ; preds = %for.body
  %39 = load i64, i64* %i, align 8, !dbg !7697, !tbaa !2579
  %inc = add i64 %39, 1, !dbg !7697
  store i64 %inc, i64* %i, align 8, !dbg !7697, !tbaa !2579
  br label %for.cond, !dbg !7698, !llvm.loop !7699

for.end:                                          ; preds = %for.cond
  %40 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7701, !tbaa !2579
  store i64 %40, i64* @init_column_info.column_info_alloc, align 8, !dbg !7702, !tbaa !2579
  br label %if.end16, !dbg !7703

if.end16:                                         ; preds = %for.end, %cond.end
  store i64 0, i64* %i, align 8, !dbg !7704, !tbaa !2579
  br label %for.cond17, !dbg !7706

for.cond17:                                       ; preds = %for.inc33, %if.end16
  %41 = load i64, i64* %i, align 8, !dbg !7707, !tbaa !2579
  %42 = load i64, i64* %max_cols, align 8, !dbg !7709, !tbaa !2579
  %cmp18 = icmp ult i64 %41, %42, !dbg !7710
  br i1 %cmp18, label %for.body19, label %for.end35, !dbg !7711

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7712, metadata !DIExpression()), !dbg !7714
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7715, !tbaa !2442
  %44 = load i64, i64* %i, align 8, !dbg !7716, !tbaa !2579
  %arrayidx20 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7715, !ctir !762
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx20, i32 0, i32 0, !dbg !7717, !ctir !757
  store i8 1, i8* %valid_len, align 8, !dbg !7718, !tbaa !7358, !ctir !141
  %45 = load i64, i64* %i, align 8, !dbg !7719, !tbaa !2579
  %add21 = add i64 %45, 1, !dbg !7720
  %mul22 = mul i64 %add21, 3, !dbg !7721
  %46 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7722, !tbaa !2442
  %47 = load i64, i64* %i, align 8, !dbg !7723, !tbaa !2579
  %arrayidx23 = getelementptr inbounds %struct.column_info, %struct.column_info* %46, i64 %47, !dbg !7722, !ctir !762
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx23, i32 0, i32 1, !dbg !7724, !ctir !757
  store i64 %mul22, i64* %line_len, align 8, !dbg !7725, !tbaa !7403, !ctir !149
  store i64 0, i64* %j, align 8, !dbg !7726, !tbaa !2579
  br label %for.cond24, !dbg !7728

for.cond24:                                       ; preds = %for.inc30, %for.body19
  %48 = load i64, i64* %j, align 8, !dbg !7729, !tbaa !2579
  %49 = load i64, i64* %i, align 8, !dbg !7731, !tbaa !2579
  %cmp25 = icmp ule i64 %48, %49, !dbg !7732
  br i1 %cmp25, label %for.body26, label %for.end32, !dbg !7733

for.body26:                                       ; preds = %for.cond24
  %50 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7734, !tbaa !2442
  %51 = load i64, i64* %i, align 8, !dbg !7735, !tbaa !2579
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %50, i64 %51, !dbg !7734, !ctir !762
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7736, !ctir !757
  %52 = load i64*, i64** %col_arr28, align 8, !dbg !7736, !tbaa !6165, !ctir !148
  %53 = load i64, i64* %j, align 8, !dbg !7737, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i64, i64* %52, i64 %53, !dbg !7734, !ctir !148
  store i64 3, i64* %arrayidx29, align 8, !dbg !7738, !tbaa !2579
  br label %for.inc30, !dbg !7734

for.inc30:                                        ; preds = %for.body26
  %54 = load i64, i64* %j, align 8, !dbg !7739, !tbaa !2579
  %inc31 = add i64 %54, 1, !dbg !7739
  store i64 %inc31, i64* %j, align 8, !dbg !7739, !tbaa !2579
  br label %for.cond24, !dbg !7740, !llvm.loop !7741

for.end32:                                        ; preds = %for.cond24
  br label %for.inc33, !dbg !7743

for.inc33:                                        ; preds = %for.end32
  %55 = load i64, i64* %i, align 8, !dbg !7744, !tbaa !2579
  %inc34 = add i64 %55, 1, !dbg !7744
  store i64 %inc34, i64* %i, align 8, !dbg !7744, !tbaa !2579
  br label %for.cond17, !dbg !7745, !llvm.loop !7746

for.end35:                                        ; preds = %for.cond17
  ret void, !dbg !7748
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_directory(%struct.fileinfo* %f) #0 !dbg !7749 !ctir !702 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7752, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !7753, !ctir !184
  %1 = load i32, i32* %filetype, align 8, !dbg !7753, !tbaa !3815, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !7754
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7755

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7756, !tbaa !2442
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !7757, !ctir !184
  %3 = load i32, i32* %filetype1, align 8, !dbg !7757, !tbaa !3815, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !7758
  br label %lor.end, !dbg !7755

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !7759
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @basename_is_dot_or_dotdot(i8* %name) #0 !dbg !7760 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7763, metadata !DIExpression()), !dbg !7764
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7765, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !7766
  store i8* %call, i8** %base, align 8, !dbg !7764, !tbaa !2442
  %1 = load i8*, i8** %base, align 8, !dbg !7767, !tbaa !2442
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %1), !dbg !7768
  ret i1 %call1, !dbg !7769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_ent(%struct.fileinfo* %f) #0 !dbg !7770 !ctir !664 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7771, metadata !DIExpression()), !dbg !7772
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7773, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7774, !ctir !185
  %1 = load i8*, i8** %name, align 8, !dbg !7774, !tbaa !4017, !ctir !143
  call void @free(i8* %1) #13, !dbg !7775
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7776, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 1, !dbg !7777, !ctir !185
  %3 = load i8*, i8** %linkname, align 8, !dbg !7777, !tbaa !4155, !ctir !143
  call void @free(i8* %3) #13, !dbg !7778
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7779, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 2, !dbg !7780, !ctir !185
  %5 = load i8*, i8** %absolute_name, align 8, !dbg !7780, !tbaa !3940, !ctir !143
  call void @free(i8* %5) #13, !dbg !7781
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7782, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 6, !dbg !7784, !ctir !185
  %7 = load i8*, i8** %scontext, align 8, !dbg !7784, !tbaa !4070, !ctir !143
  %cmp = icmp ne i8* %7, getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), !dbg !7785
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7786

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_smack_enabled(), !dbg !7787
  br i1 %call, label %if.then1, label %if.else, !dbg !7790

if.then1:                                         ; preds = %if.then
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7791, !tbaa !2442
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 6, !dbg !7792, !ctir !185
  %9 = load i8*, i8** %scontext2, align 8, !dbg !7792, !tbaa !4070, !ctir !143
  call void @free(i8* %9) #13, !dbg !7793
  br label %if.end, !dbg !7793

if.else:                                          ; preds = %if.then
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7794, !tbaa !2442
  %scontext3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 6, !dbg !7795, !ctir !185
  %11 = load i8*, i8** %scontext3, align 8, !dbg !7795, !tbaa !4070, !ctir !143
  call void @freecon(i8* %11), !dbg !7796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4, !dbg !7797

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !7798
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #0 !dbg !7799 !ctir !602 {
entry:
  ret i1 false, !dbg !7801
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #0 !dbg !7802 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !144
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !7805, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7805, !ctir !146
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7805, !tbaa !2497
  %conv = sext i8 %1 to i32, !dbg !7805
  %cmp = icmp eq i32 %conv, 46, !dbg !7807
  br i1 %cmp, label %if.then, label %if.else, !dbg !7808

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !7809, metadata !DIExpression()), !dbg !7811
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !7812, !tbaa !2442
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !7813, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7813, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7813, !tbaa !2497
  %conv3 = sext i8 %4 to i32, !dbg !7813
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !7814
  %conv5 = zext i1 %cmp4 to i32, !dbg !7814
  %add = add nsw i32 %conv5, 1, !dbg !7815
  %idxprom = sext i32 %add to i64, !dbg !7812
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7812, !ctir !146
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !7812, !tbaa !2497
  store i8 %5, i8* %sep, align 1, !dbg !7811, !tbaa !2497
  %6 = load i8, i8* %sep, align 1, !dbg !7816, !tbaa !2497
  %tobool = icmp ne i8 %6, 0, !dbg !7816
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7817

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !7818, !tbaa !2497
  %conv7 = sext i8 %7 to i32, !dbg !7818
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !7818
  br label %lor.end, !dbg !7817

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !7819
  br label %return, !dbg !7819

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7820
  br label %return, !dbg !7820

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !7821
  ret i1 %9, !dbg !7821
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_ordering_vector() #0 !dbg !7822 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7823, metadata !DIExpression()), !dbg !7825
  store i64 0, i64* %i, align 8, !dbg !7825, !tbaa !2579
  br label %for.cond, !dbg !7826

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !7827, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7829, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7830
  br i1 %cmp, label %for.body, label %for.end, !dbg !7831

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !7832, !tbaa !2442
  %3 = load i64, i64* %i, align 8, !dbg !7833, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i64 %3, !dbg !7832, !ctir !252
  %4 = bitcast %struct.fileinfo* %arrayidx to i8*, !dbg !7834
  %5 = load i8**, i8*** @sorted_file, align 8, !dbg !7835, !tbaa !2442
  %6 = load i64, i64* %i, align 8, !dbg !7836, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !7835, !ctir !663
  store i8* %4, i8** %arrayidx1, align 8, !dbg !7837, !tbaa !2442
  br label %for.inc, !dbg !7835

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !7838, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !7838
  store i64 %inc, i64* %i, align 8, !dbg !7838, !tbaa !2579
  br label %for.cond, !dbg !7839, !llvm.loop !7840

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7842
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%struct.__jmp_buf_tag*) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7843 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7846, metadata !DIExpression()), !dbg !7845
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7845, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7845
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7845, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7845
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7845
  ret i32 %call, !dbg !7845
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7847 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7850, metadata !DIExpression()), !dbg !7849
  br label %do.body, !dbg !7849

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7851, metadata !DIExpression()), !dbg !7853
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7853, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7853
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7853
  %frombool = zext i1 %call to i8, !dbg !7853
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7853, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7854, metadata !DIExpression()), !dbg !7853
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7853, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7853
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7853
  %frombool2 = zext i1 %call1 to i8, !dbg !7853
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7853, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7855, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7855
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7855

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7855, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7855
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7853

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7855
  br label %return, !dbg !7855

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7857, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7857
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7857

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7857, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7857
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7853

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7857
  br label %return, !dbg !7857

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7853

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7849, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7849
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7849, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7849
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7849
  store i32 %call9, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7849
  ret i32 %12, !dbg !7849
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7859 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7862, metadata !DIExpression()), !dbg !7861
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7861, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7861
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7861, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7861
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7861
  ret i32 %call, !dbg !7861
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7863 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7866, metadata !DIExpression()), !dbg !7865
  br label %do.body, !dbg !7865

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7867, metadata !DIExpression()), !dbg !7869
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7869, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7869
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7869
  %frombool = zext i1 %call to i8, !dbg !7869
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7869, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7870, metadata !DIExpression()), !dbg !7869
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7869, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7869
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7869
  %frombool2 = zext i1 %call1 to i8, !dbg !7869
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7869, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7871, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7871
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7871

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7871, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7871
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7869

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7871
  br label %return, !dbg !7871

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7873, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7873
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7873

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7873, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7873
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7869

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7873
  br label %return, !dbg !7873

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7869

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7865, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7865
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7865, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7865
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7865
  store i32 %call9, i32* %retval, align 4, !dbg !7865
  br label %return, !dbg !7865

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7865
  ret i32 %12, !dbg !7865
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_name(i8* %a, i8* %b) #9 !dbg !7875 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7878, metadata !DIExpression()), !dbg !7877
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7877, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7877
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7877, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7877
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7877
  ret i32 %call, !dbg !7877
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7879 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7882, metadata !DIExpression()), !dbg !7881
  br label %do.body, !dbg !7881

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7883, metadata !DIExpression()), !dbg !7885
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7885, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7885
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7885
  %frombool = zext i1 %call to i8, !dbg !7885
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7885, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7886, metadata !DIExpression()), !dbg !7885
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7885, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7885
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7885
  %frombool2 = zext i1 %call1 to i8, !dbg !7885
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7885, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7887, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7887
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7887

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7887, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7887
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7885

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7887
  br label %return, !dbg !7887

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7889, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7889
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7889

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7889, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7889
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7885

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7889
  br label %return, !dbg !7889

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7885

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7881, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7881
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7881, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7881
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7881
  store i32 %call9, i32* %retval, align 4, !dbg !7881
  br label %return, !dbg !7881

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7881
  ret i32 %12, !dbg !7881
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_name(i8* %a, i8* %b) #9 !dbg !7891 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7894, metadata !DIExpression()), !dbg !7893
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7893, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7893
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7893, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7893
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7893
  ret i32 %call, !dbg !7893
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7895 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7898, metadata !DIExpression()), !dbg !7897
  br label %do.body, !dbg !7897

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7899, metadata !DIExpression()), !dbg !7901
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7901, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7901
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7901
  %frombool = zext i1 %call to i8, !dbg !7901
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7901, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7902, metadata !DIExpression()), !dbg !7901
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7901, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7901
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7901
  %frombool2 = zext i1 %call1 to i8, !dbg !7901
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7901, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7903, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7903
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7903

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7903, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7903
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7901

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7903
  br label %return, !dbg !7903

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7905, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7905
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7905

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7905, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7905
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7901

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7905
  br label %return, !dbg !7905

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7901

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7897, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7897
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7897, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7897
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7897
  store i32 %call9, i32* %retval, align 4, !dbg !7897
  br label %return, !dbg !7897

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7897
  ret i32 %12, !dbg !7897
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7907 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7908, metadata !DIExpression()), !dbg !7909
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7910, metadata !DIExpression()), !dbg !7909
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7909, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7909
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7909, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7909
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7909
  ret i32 %call, !dbg !7909
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7911 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7912, metadata !DIExpression()), !dbg !7913
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7914, metadata !DIExpression()), !dbg !7913
  br label %do.body, !dbg !7913

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7915, metadata !DIExpression()), !dbg !7917
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7917, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7917
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7917
  %frombool = zext i1 %call to i8, !dbg !7917
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7917, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7918, metadata !DIExpression()), !dbg !7917
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7917, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7917
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7917
  %frombool2 = zext i1 %call1 to i8, !dbg !7917
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7917, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7919, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7919
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7919

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7919, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7919
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7917

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7921, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7921
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7921

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7921, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7921
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7917

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7921
  br label %return, !dbg !7921

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7917

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7913, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7913
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7913, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7913
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7913
  store i32 %call9, i32* %retval, align 4, !dbg !7913
  br label %return, !dbg !7913

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7913
  ret i32 %12, !dbg !7913
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7923 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7926, metadata !DIExpression()), !dbg !7925
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7925, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7925
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7925, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7925
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7925
  ret i32 %call, !dbg !7925
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7927 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7930, metadata !DIExpression()), !dbg !7929
  br label %do.body, !dbg !7929

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7931, metadata !DIExpression()), !dbg !7933
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7933, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7933
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7933
  %frombool = zext i1 %call to i8, !dbg !7933
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7933, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7934, metadata !DIExpression()), !dbg !7933
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7933, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7933
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7933
  %frombool2 = zext i1 %call1 to i8, !dbg !7933
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7933, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7935, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7935
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7935

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7935, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7935
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7933

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7937, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7937
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7937

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7937, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7937
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7933

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7937
  br label %return, !dbg !7937

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7933

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7929, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7929
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7929, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7929
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7929
  store i32 %call9, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7929
  ret i32 %12, !dbg !7929
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_extension(i8* %a, i8* %b) #9 !dbg !7939 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7942, metadata !DIExpression()), !dbg !7941
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7941, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7941
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7941, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7941
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7941
  ret i32 %call, !dbg !7941
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7943 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7946, metadata !DIExpression()), !dbg !7945
  br label %do.body, !dbg !7945

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7947, metadata !DIExpression()), !dbg !7949
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7949, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7949
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7949
  %frombool = zext i1 %call to i8, !dbg !7949
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7949, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7950, metadata !DIExpression()), !dbg !7949
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7949, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7949
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7949
  %frombool2 = zext i1 %call1 to i8, !dbg !7949
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7949, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7951, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7951
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7951

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7951, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7951
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7949

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7951
  br label %return, !dbg !7951

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7953, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7953
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7953

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7953, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7953
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7949

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7949

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7945, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7945
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7945, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7945
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7945
  store i32 %call9, i32* %retval, align 4, !dbg !7945
  br label %return, !dbg !7945

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7945
  ret i32 %12, !dbg !7945
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_extension(i8* %a, i8* %b) #9 !dbg !7955 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7958, metadata !DIExpression()), !dbg !7957
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7957, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7957
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7957, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7957
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7957
  ret i32 %call, !dbg !7957
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7959 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7962, metadata !DIExpression()), !dbg !7961
  br label %do.body, !dbg !7961

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7963, metadata !DIExpression()), !dbg !7965
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7965, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7965
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7965
  %frombool = zext i1 %call to i8, !dbg !7965
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7965, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7966, metadata !DIExpression()), !dbg !7965
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7965, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7965
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7965
  %frombool2 = zext i1 %call1 to i8, !dbg !7965
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7965, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7967, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7967
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7967

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7967, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7967
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7965

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7969, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7969
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7969

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7969, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7969
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7965

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7965

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7961, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7961
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7961, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7961
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7961
  store i32 %call9, i32* %retval, align 4, !dbg !7961
  br label %return, !dbg !7961

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7961
  ret i32 %12, !dbg !7961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7971 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7974, metadata !DIExpression()), !dbg !7973
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7973, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7973
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7973, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7973
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7973
  ret i32 %call, !dbg !7973
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7975 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7978, metadata !DIExpression()), !dbg !7977
  br label %do.body, !dbg !7977

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7979, metadata !DIExpression()), !dbg !7981
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7981, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7981
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7981
  %frombool = zext i1 %call to i8, !dbg !7981
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7981, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7982, metadata !DIExpression()), !dbg !7981
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7981, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7981
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7981
  %frombool2 = zext i1 %call1 to i8, !dbg !7981
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7981, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7983, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7983
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7983

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7983, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7983
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7981

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7985, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7985
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7985

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7985, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7985
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7981

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7985
  br label %return, !dbg !7985

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7981

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7977, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7977
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7977, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7977
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7977
  store i32 %call9, i32* %retval, align 4, !dbg !7977
  br label %return, !dbg !7977

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7977
  ret i32 %12, !dbg !7977
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7987 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7990, metadata !DIExpression()), !dbg !7989
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7989, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7989
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7989, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7989
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7989
  ret i32 %call, !dbg !7989
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7991 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7994, metadata !DIExpression()), !dbg !7993
  br label %do.body, !dbg !7993

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7995, metadata !DIExpression()), !dbg !7997
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7997, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7997
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7997
  %frombool = zext i1 %call to i8, !dbg !7997
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7997, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7998, metadata !DIExpression()), !dbg !7997
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7997, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7997
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7997
  %frombool2 = zext i1 %call1 to i8, !dbg !7997
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7997, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7999, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7999
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7999

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7999, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7999
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7997

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8001, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8001
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8001

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8001, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8001
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7997

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7997

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7993, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7993
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7993, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7993
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7993
  store i32 %call9, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7993
  ret i32 %12, !dbg !7993
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_size(i8* %a, i8* %b) #9 !dbg !8003 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8006, metadata !DIExpression()), !dbg !8005
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8005, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8005
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8005, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8005
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8005
  ret i32 %call, !dbg !8005
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8007 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8010, metadata !DIExpression()), !dbg !8009
  br label %do.body, !dbg !8009

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8011, metadata !DIExpression()), !dbg !8013
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8013, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8013
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8013
  %frombool = zext i1 %call to i8, !dbg !8013
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8013, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8014, metadata !DIExpression()), !dbg !8013
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8013, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8013
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8013
  %frombool2 = zext i1 %call1 to i8, !dbg !8013
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8013, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8015, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8015
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8015

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8015, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8015
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8013

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8017, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8017
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8017

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8017, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8017
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8013

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8017
  br label %return, !dbg !8017

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8013

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8009, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8009
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8009, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8009
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8009
  store i32 %call9, i32* %retval, align 4, !dbg !8009
  br label %return, !dbg !8009

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8009
  ret i32 %12, !dbg !8009
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_size(i8* %a, i8* %b) #9 !dbg !8019 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8022, metadata !DIExpression()), !dbg !8021
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8021, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8021
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8021, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8021
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8021
  ret i32 %call, !dbg !8021
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8023 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8026, metadata !DIExpression()), !dbg !8025
  br label %do.body, !dbg !8025

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8027, metadata !DIExpression()), !dbg !8029
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8029, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8029
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8029
  %frombool = zext i1 %call to i8, !dbg !8029
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8029, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8030, metadata !DIExpression()), !dbg !8029
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8029, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8029
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8029
  %frombool2 = zext i1 %call1 to i8, !dbg !8029
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8029, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8031, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8031
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8031

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8031, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8031
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8029

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8031
  br label %return, !dbg !8031

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8033, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8033
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8033

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8033, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8033
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8029

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8033
  br label %return, !dbg !8033

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8029

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8025, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8025
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8025, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8025
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8025
  store i32 %call9, i32* %retval, align 4, !dbg !8025
  br label %return, !dbg !8025

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8025
  ret i32 %12, !dbg !8025
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8035 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8040, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8040
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8041, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8041
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8042
  ret i32 %call, !dbg !8043
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8044 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  br label %do.body, !dbg !8049

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8050, metadata !DIExpression()), !dbg !8052
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8052, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8052
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8052
  %frombool = zext i1 %call to i8, !dbg !8052
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8052, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8053, metadata !DIExpression()), !dbg !8052
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8052, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8052
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8052
  %frombool2 = zext i1 %call1 to i8, !dbg !8052
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8052, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8054, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8054
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8054

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8054, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8054
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8052

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8056, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8056
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8056

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8056, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8056
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8052

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8056
  br label %return, !dbg !8056

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8052

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8058, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8058
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8059, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8059
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8060
  store i32 %call9, i32* %retval, align 4, !dbg !8061
  br label %return, !dbg !8061

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8062
  ret i32 %12, !dbg !8062
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8063 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8068, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8068
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8069, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8069
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8070
  ret i32 %call, !dbg !8071
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8072 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8073, metadata !DIExpression()), !dbg !8074
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8075, metadata !DIExpression()), !dbg !8076
  br label %do.body, !dbg !8077

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8078, metadata !DIExpression()), !dbg !8080
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8080, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8080
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8080
  %frombool = zext i1 %call to i8, !dbg !8080
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8080, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8081, metadata !DIExpression()), !dbg !8080
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8080, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8080
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8080
  %frombool2 = zext i1 %call1 to i8, !dbg !8080
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8080, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8082, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8082
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8082

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8082, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8082
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8080

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8082
  br label %return, !dbg !8082

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8084, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8084
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8084

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8084, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8084
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8080

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8084
  br label %return, !dbg !8084

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8080

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8086, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8086
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8087, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8087
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8088
  store i32 %call9, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8090
  ret i32 %12, !dbg !8090
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8091 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8094, metadata !DIExpression()), !dbg !8093
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8093, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8093
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8093, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8093
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8093
  ret i32 %call, !dbg !8093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8095 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8098, metadata !DIExpression()), !dbg !8097
  br label %do.body, !dbg !8097

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8099, metadata !DIExpression()), !dbg !8101
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8101, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8101
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8101
  %frombool = zext i1 %call to i8, !dbg !8101
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8101, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8102, metadata !DIExpression()), !dbg !8101
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8101, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8101
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8101
  %frombool2 = zext i1 %call1 to i8, !dbg !8101
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8101, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8103, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8103
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8103

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8103, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8103
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8101

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8103
  br label %return, !dbg !8103

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8105, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8105
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8105

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8105, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8105
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8101

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8105
  br label %return, !dbg !8105

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8101

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8097, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8097
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8097, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8097
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8097
  store i32 %call9, i32* %retval, align 4, !dbg !8097
  br label %return, !dbg !8097

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8097
  ret i32 %12, !dbg !8097
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8107 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8110, metadata !DIExpression()), !dbg !8109
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8109, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8109
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8109, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8109
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8109
  ret i32 %call, !dbg !8109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8111 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8112, metadata !DIExpression()), !dbg !8113
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8114, metadata !DIExpression()), !dbg !8113
  br label %do.body, !dbg !8113

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8115, metadata !DIExpression()), !dbg !8117
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8117, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8117
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8117
  %frombool = zext i1 %call to i8, !dbg !8117
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8117, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8118, metadata !DIExpression()), !dbg !8117
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8117, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8117
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8117
  %frombool2 = zext i1 %call1 to i8, !dbg !8117
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8117, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8119, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8119
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8119

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8119, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8119
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8117

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8119
  br label %return, !dbg !8119

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8121, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8121
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8121

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8121, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8121
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8117

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8121
  br label %return, !dbg !8121

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8117

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8113, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8113
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8113, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8113
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8113
  store i32 %call9, i32* %retval, align 4, !dbg !8113
  br label %return, !dbg !8113

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8113
  ret i32 %12, !dbg !8113
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8123 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8126, metadata !DIExpression()), !dbg !8125
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8125, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8125
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8125, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8125
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8125
  ret i32 %call, !dbg !8125
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8127 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8130, metadata !DIExpression()), !dbg !8129
  br label %do.body, !dbg !8129

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8131, metadata !DIExpression()), !dbg !8133
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8133, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8133
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8133
  %frombool = zext i1 %call to i8, !dbg !8133
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8133, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8134, metadata !DIExpression()), !dbg !8133
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8133, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8133
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8133
  %frombool2 = zext i1 %call1 to i8, !dbg !8133
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8133, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8135, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8135
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8135

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8135, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8135
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8133

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8135
  br label %return, !dbg !8135

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8137, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8137
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8137

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8137, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8137
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8133

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8137
  br label %return, !dbg !8137

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8133

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8129, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8129
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8129, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8129
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8129
  store i32 %call9, i32* %retval, align 4, !dbg !8129
  br label %return, !dbg !8129

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8129
  ret i32 %12, !dbg !8129
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8139 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8142, metadata !DIExpression()), !dbg !8141
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8141, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8141
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8141, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8141
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8141
  ret i32 %call, !dbg !8141
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8143 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8146, metadata !DIExpression()), !dbg !8145
  br label %do.body, !dbg !8145

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8147, metadata !DIExpression()), !dbg !8149
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8149, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8149
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8149
  %frombool = zext i1 %call to i8, !dbg !8149
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8149, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8150, metadata !DIExpression()), !dbg !8149
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8149, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8149
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8149
  %frombool2 = zext i1 %call1 to i8, !dbg !8149
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8149, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8151, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8151
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8151

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8151, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8151
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8149

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8151
  br label %return, !dbg !8151

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8153, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8153
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8153

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8153, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8153
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8149

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8149

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8145, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8145
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8145, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8145
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8145
  store i32 %call9, i32* %retval, align 4, !dbg !8145
  br label %return, !dbg !8145

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8145
  ret i32 %12, !dbg !8145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8155 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8158, metadata !DIExpression()), !dbg !8157
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8157, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8157
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8157, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8157
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8157
  ret i32 %call, !dbg !8157
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8159 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8162, metadata !DIExpression()), !dbg !8161
  br label %do.body, !dbg !8161

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8163, metadata !DIExpression()), !dbg !8165
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8165, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8165
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8165
  %frombool = zext i1 %call to i8, !dbg !8165
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8165, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8166, metadata !DIExpression()), !dbg !8165
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8165, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8165
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8165
  %frombool2 = zext i1 %call1 to i8, !dbg !8165
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8165, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8167, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8167
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8167

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8167, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8167
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8165

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8167
  br label %return, !dbg !8167

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8169, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8169
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8169

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8169, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8169
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8165

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8169
  br label %return, !dbg !8169

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8165

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8161, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8161
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8161, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8161
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8161
  store i32 %call9, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8161
  ret i32 %12, !dbg !8161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8171 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8174, metadata !DIExpression()), !dbg !8173
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8173, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8173
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8173, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8173
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8173
  ret i32 %call, !dbg !8173
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8175 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8176, metadata !DIExpression()), !dbg !8177
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8178, metadata !DIExpression()), !dbg !8177
  br label %do.body, !dbg !8177

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8179, metadata !DIExpression()), !dbg !8181
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8181, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8181
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8181
  %frombool = zext i1 %call to i8, !dbg !8181
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8181, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8182, metadata !DIExpression()), !dbg !8181
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8181, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8181
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8181
  %frombool2 = zext i1 %call1 to i8, !dbg !8181
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8181, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8183, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8183
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8183

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8183, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8183
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8181

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8183
  br label %return, !dbg !8183

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8185, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8185
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8185

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8185, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8185
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8181

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8185
  br label %return, !dbg !8185

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8181

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8177, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8177
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8177, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8177
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8177
  store i32 %call9, i32* %retval, align 4, !dbg !8177
  br label %return, !dbg !8177

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8177
  ret i32 %12, !dbg !8177
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8187 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8190, metadata !DIExpression()), !dbg !8189
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8189, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8189
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8189, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8189
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8189
  ret i32 %call, !dbg !8189
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8191 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8194, metadata !DIExpression()), !dbg !8193
  br label %do.body, !dbg !8193

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8195, metadata !DIExpression()), !dbg !8197
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8197, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8197
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8197
  %frombool = zext i1 %call to i8, !dbg !8197
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8197, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8198, metadata !DIExpression()), !dbg !8197
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8197, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8197
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8197
  %frombool2 = zext i1 %call1 to i8, !dbg !8197
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8197, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8199, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8199
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8199

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8199, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8199
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8197

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8199
  br label %return, !dbg !8199

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8201, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8201
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8201

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8201, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8201
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8197

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8201
  br label %return, !dbg !8201

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8197

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8193, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8193
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8193, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8193
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8193
  store i32 %call9, i32* %retval, align 4, !dbg !8193
  br label %return, !dbg !8193

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8193
  ret i32 %12, !dbg !8193
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8203 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8206, metadata !DIExpression()), !dbg !8205
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8205, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8205
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8205, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8205
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8205
  ret i32 %call, !dbg !8205
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8207 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8210, metadata !DIExpression()), !dbg !8209
  br label %do.body, !dbg !8209

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8211, metadata !DIExpression()), !dbg !8213
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8213, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8213
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8213
  %frombool = zext i1 %call to i8, !dbg !8213
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8213, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8214, metadata !DIExpression()), !dbg !8213
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8213, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8213
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8213
  %frombool2 = zext i1 %call1 to i8, !dbg !8213
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8213, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8215, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8215
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8215

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8215, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8215
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8213

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8215
  br label %return, !dbg !8215

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8217, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8217
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8217

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8217, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8217
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8213

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8217
  br label %return, !dbg !8217

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8213

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8209, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8209
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8209, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8209
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8209
  store i32 %call9, i32* %retval, align 4, !dbg !8209
  br label %return, !dbg !8209

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8209
  ret i32 %12, !dbg !8209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8219 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8222, metadata !DIExpression()), !dbg !8221
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8221, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8221
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8221, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8221
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8221
  ret i32 %call, !dbg !8221
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8223 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8226, metadata !DIExpression()), !dbg !8225
  br label %do.body, !dbg !8225

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8227, metadata !DIExpression()), !dbg !8229
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8229, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8229
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8229
  %frombool = zext i1 %call to i8, !dbg !8229
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8229, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8230, metadata !DIExpression()), !dbg !8229
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8229, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8229
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8229
  %frombool2 = zext i1 %call1 to i8, !dbg !8229
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8229, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8231, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8231
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8231

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8231, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8231
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8229

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8231
  br label %return, !dbg !8231

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8233, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8233
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8233

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8233, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8233
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8229

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8229

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8225, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8225
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8225, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8225
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8225
  store i32 %call9, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8225
  ret i32 %12, !dbg !8225
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8235 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8238, metadata !DIExpression()), !dbg !8237
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8237, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8237
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8237, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8237
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8237
  ret i32 %call, !dbg !8237
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8239 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8242, metadata !DIExpression()), !dbg !8241
  br label %do.body, !dbg !8241

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8243, metadata !DIExpression()), !dbg !8245
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8245, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8245
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8245
  %frombool = zext i1 %call to i8, !dbg !8245
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8245, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8246, metadata !DIExpression()), !dbg !8245
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8245, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8245
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8245
  %frombool2 = zext i1 %call1 to i8, !dbg !8245
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8245, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8247, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8247
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8247

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8247, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8247
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8245

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8249, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8249
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8249

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8249, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8249
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8245

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8245

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8241, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8241
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8241, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8241
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8241
  store i32 %call9, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8241
  ret i32 %12, !dbg !8241
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_atime(i8* %a, i8* %b) #9 !dbg !8251 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8254, metadata !DIExpression()), !dbg !8253
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8253, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8253
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8253, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8253
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8253
  ret i32 %call, !dbg !8253
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8255 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8256, metadata !DIExpression()), !dbg !8257
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8258, metadata !DIExpression()), !dbg !8257
  br label %do.body, !dbg !8257

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8259, metadata !DIExpression()), !dbg !8261
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8261, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8261
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8261
  %frombool = zext i1 %call to i8, !dbg !8261
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8261, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8262, metadata !DIExpression()), !dbg !8261
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8261, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8261
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8261
  %frombool2 = zext i1 %call1 to i8, !dbg !8261
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8261, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8263, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8263
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8263

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8263, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8263
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8261

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8263
  br label %return, !dbg !8263

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8265, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8265
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8265

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8265, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8265
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8261

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8261

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8257, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8257
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8257, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8257
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8257
  store i32 %call9, i32* %retval, align 4, !dbg !8257
  br label %return, !dbg !8257

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8257
  ret i32 %12, !dbg !8257
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_atime(i8* %a, i8* %b) #9 !dbg !8267 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8270, metadata !DIExpression()), !dbg !8269
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8269, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8269
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8269, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8269
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8269
  ret i32 %call, !dbg !8269
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8271 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8274, metadata !DIExpression()), !dbg !8273
  br label %do.body, !dbg !8273

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8275, metadata !DIExpression()), !dbg !8277
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8277, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8277
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8277
  %frombool = zext i1 %call to i8, !dbg !8277
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8277, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8278, metadata !DIExpression()), !dbg !8277
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8277, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8277
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8277
  %frombool2 = zext i1 %call1 to i8, !dbg !8277
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8277, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8279, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8279
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8279

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8279, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8279
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8277

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8279
  br label %return, !dbg !8279

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8281, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8281
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8281

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8281, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8281
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8277

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8281
  br label %return, !dbg !8281

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8277

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8273, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8273
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8273, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8273
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8273
  store i32 %call9, i32* %retval, align 4, !dbg !8273
  br label %return, !dbg !8273

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8273
  ret i32 %12, !dbg !8273
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_linked_directory(%struct.fileinfo* %f) #0 !dbg !8283 !ctir !702 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8286, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !8287, !ctir !184
  %1 = load i32, i32* %filetype, align 8, !dbg !8287, !tbaa !3815, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !8288
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8289

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8290, !tbaa !2442
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !8291, !ctir !184
  %3 = load i32, i32* %filetype1, align 8, !dbg !8291, !tbaa !3815, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !8292
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !8293

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8294, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 5, !dbg !8294, !ctir !184
  %5 = load i32, i32* %linkmode, align 4, !dbg !8294, !tbaa !4193, !ctir !228
  %and = and i32 %5, 61440, !dbg !8294
  %cmp3 = icmp eq i32 %and, 16384, !dbg !8294
  br label %lor.end, !dbg !8293

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %6, !dbg !8295
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_atime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8296 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8303, metadata !DIExpression()), !dbg !8304
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8305, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8306, !ctir !184
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %stat) #16, !dbg !8307
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8307
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8307
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8307
  store i64 %3, i64* %2, align 8, !dbg !8307
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8307
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8307
  store i64 %5, i64* %4, align 8, !dbg !8307
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8308, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8309, !ctir !184
  %call3 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat2) #16, !dbg !8310
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8310
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8310
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8310
  store i64 %9, i64* %8, align 8, !dbg !8310
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8310
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8310
  store i64 %11, i64* %10, align 8, !dbg !8310
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8311
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8311
  %14 = load i64, i64* %13, align 8, !dbg !8311
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8311
  %16 = load i64, i64* %15, align 8, !dbg !8311
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8311
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8311
  %19 = load i64, i64* %18, align 8, !dbg !8311
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8311
  %21 = load i64, i64* %20, align 8, !dbg !8311
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8311
  store i32 %call4, i32* %diff, align 4, !dbg !8304, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8312, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8312
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8312

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8313, !tbaa !2436
  br label %cond.end, !dbg !8312

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8314, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8315, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8316, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8316, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8317, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8318, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8318, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8314
  br label %cond.end, !dbg !8312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8312
  ret i32 %cond, !dbg !8319
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll(i8* %a, i8* %b) #0 !dbg !8320 !ctir !731 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8325, metadata !DIExpression()), !dbg !8326
  %call = call i32* @__errno_location() #17, !dbg !8327
  store i32 0, i32* %call, align 4, !dbg !8328, !tbaa !2436, !ctir !27
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8329, !tbaa !2442
  %1 = load i8*, i8** %b.addr, align 8, !dbg !8330, !tbaa !2442
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #16, !dbg !8331
  store i32 %call1, i32* %diff, align 4, !dbg !8332, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !8333
  %2 = load i32, i32* %call2, align 4, !dbg !8333, !tbaa !2436, !ctir !27
  %tobool = icmp ne i32 %2, 0, !dbg !8333
  br i1 %tobool, label %if.then, label %if.end, !dbg !8335

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #17, !dbg !8336
  %3 = load i32, i32* %call3, align 4, !dbg !8336, !tbaa !2436, !ctir !27
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.223, i64 0, i64 0)) #13, !dbg !8338
  %4 = load i8*, i8** %a.addr, align 8, !dbg !8339, !tbaa !2442
  %call5 = call i8* @quote_n(i32 0, i8* %4), !dbg !8340
  %5 = load i8*, i8** %b.addr, align 8, !dbg !8341, !tbaa !2442
  %call6 = call i8* @quote_n(i32 1, i8* %5), !dbg !8342
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call4, i8* %call5, i8* %call6), !dbg !8343
  call void @set_exit_status(i1 zeroext false), !dbg !8344
  call void @longjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0), i32 1) #15, !dbg !8345
  unreachable, !dbg !8345

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %diff, align 4, !dbg !8346, !tbaa !2436
  ret i32 %6, !dbg !8347
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #5

; Function Attrs: noreturn nounwind
declare dso_local void @longjmp(%struct.__jmp_buf_tag*, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_ctime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8348 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8355, metadata !DIExpression()), !dbg !8356
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8357, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8358, !ctir !184
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat) #16, !dbg !8359
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8359
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8359
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8359
  store i64 %3, i64* %2, align 8, !dbg !8359
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8359
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8359
  store i64 %5, i64* %4, align 8, !dbg !8359
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8360, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8361, !ctir !184
  %call3 = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat2) #16, !dbg !8362
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8362
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8362
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8362
  store i64 %9, i64* %8, align 8, !dbg !8362
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8362
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8362
  store i64 %11, i64* %10, align 8, !dbg !8362
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8363
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8363
  %14 = load i64, i64* %13, align 8, !dbg !8363
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8363
  %16 = load i64, i64* %15, align 8, !dbg !8363
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8363
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8363
  %19 = load i64, i64* %18, align 8, !dbg !8363
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8363
  %21 = load i64, i64* %20, align 8, !dbg !8363
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8363
  store i32 %call4, i32* %diff, align 4, !dbg !8356, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8364, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8364
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8364

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8365, !tbaa !2436
  br label %cond.end, !dbg !8364

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8366, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8367, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8368, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8368, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8369, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8370, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8370, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8366
  br label %cond.end, !dbg !8364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8364
  ret i32 %cond, !dbg !8371
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_mtime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8372 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8381, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8382, !ctir !184
  %call = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat) #16, !dbg !8383
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8383
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8383
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8383
  store i64 %3, i64* %2, align 8, !dbg !8383
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8383
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8383
  store i64 %5, i64* %4, align 8, !dbg !8383
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8384, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8385, !ctir !184
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat2) #16, !dbg !8386
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8386
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8386
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8386
  store i64 %9, i64* %8, align 8, !dbg !8386
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8386
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8386
  store i64 %11, i64* %10, align 8, !dbg !8386
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8387
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8387
  %14 = load i64, i64* %13, align 8, !dbg !8387
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8387
  %16 = load i64, i64* %15, align 8, !dbg !8387
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8387
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8387
  %19 = load i64, i64* %18, align 8, !dbg !8387
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8387
  %21 = load i64, i64* %20, align 8, !dbg !8387
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8387
  store i32 %call4, i32* %diff, align 4, !dbg !8380, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8388, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8388
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8388

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8389, !tbaa !2436
  br label %cond.end, !dbg !8388

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8390, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8391, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8392, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8392, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8393, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8394, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8394, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8390
  br label %cond.end, !dbg !8388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8388
  ret i32 %cond, !dbg !8395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_version(%struct.fileinfo* %a, %struct.fileinfo* %b) #0 !dbg !8396 !ctir !733 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8401, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8402, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !8402, !tbaa !4017, !ctir !143
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8403, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8404, !ctir !184
  %3 = load i8*, i8** %name1, align 8, !dbg !8404, !tbaa !4017, !ctir !143
  %call = call i32 @filevercmp(i8* %1, i8* %3) #16, !dbg !8405
  ret i32 %call, !dbg !8406
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_size(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8407 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8408, metadata !DIExpression()), !dbg !8409
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8414, metadata !DIExpression()), !dbg !8415
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8416, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8416, !ctir !191
  %1 = load i64, i64* %st_size, align 8, !dbg !8416, !tbaa !4417, !ctir !181
  %2 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8416, !tbaa !2442
  %stat1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %stat1, i32 0, i32 8, !dbg !8416, !ctir !191
  %3 = load i64, i64* %st_size2, align 8, !dbg !8416, !tbaa !4417, !ctir !181
  %cmp3 = icmp slt i64 %1, %3, !dbg !8416
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8416

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8416

cond.false:                                       ; preds = %entry
  %4 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8416, !tbaa !2442
  %stat4 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size5 = getelementptr inbounds %struct.stat, %struct.stat* %stat4, i32 0, i32 8, !dbg !8416, !ctir !191
  %5 = load i64, i64* %st_size5, align 8, !dbg !8416, !tbaa !4417, !ctir !181
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8416, !tbaa !2442
  %stat6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size7 = getelementptr inbounds %struct.stat, %struct.stat* %stat6, i32 0, i32 8, !dbg !8416, !ctir !191
  %7 = load i64, i64* %st_size7, align 8, !dbg !8416, !tbaa !4417, !ctir !181
  %cmp8 = icmp sgt i64 %5, %7, !dbg !8416
  %conv = zext i1 %cmp8 to i32, !dbg !8416
  br label %cond.end, !dbg !8416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !8416
  store i32 %cond, i32* %diff, align 4, !dbg !8415, !tbaa !2436
  %8 = load i32, i32* %diff, align 4, !dbg !8417, !tbaa !2436
  %tobool = icmp ne i32 %8, 0, !dbg !8417
  br i1 %tobool, label %cond.true9, label %cond.false10, !dbg !8417

cond.true9:                                       ; preds = %cond.end
  %9 = load i32, i32* %diff, align 4, !dbg !8418, !tbaa !2436
  br label %cond.end12, !dbg !8417

cond.false10:                                     ; preds = %cond.end
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8419, !tbaa !2442
  %11 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8420, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 0, !dbg !8421, !ctir !184
  %12 = load i8*, i8** %name, align 8, !dbg !8421, !tbaa !4017, !ctir !143
  %13 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8422, !tbaa !2442
  %name11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 0, !dbg !8423, !ctir !184
  %14 = load i8*, i8** %name11, align 8, !dbg !8423, !tbaa !4017, !ctir !143
  %call = call i32 %10(i8* %12, i8* %14), !dbg !8419
  br label %cond.end12, !dbg !8417

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %9, %cond.true9 ], [ %call, %cond.false10 ], !dbg !8417
  ret i32 %cond13, !dbg !8424
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_extension(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8425 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %base1 = alloca i8*, align 8, !ctir !146
  %base2 = alloca i8*, align 8, !ctir !146
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8426, metadata !DIExpression()), !dbg !8427
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i8** %base1, metadata !8432, metadata !DIExpression()), !dbg !8433
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8434, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8435, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !8435, !tbaa !4017, !ctir !143
  %call = call i8* @strrchr(i8* %1, i32 46) #16, !dbg !8436
  store i8* %call, i8** %base1, align 8, !dbg !8433, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base2, metadata !8437, metadata !DIExpression()), !dbg !8438
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8439, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8440, !ctir !184
  %3 = load i8*, i8** %name1, align 8, !dbg !8440, !tbaa !4017, !ctir !143
  %call2 = call i8* @strrchr(i8* %3, i32 46) #16, !dbg !8441
  store i8* %call2, i8** %base2, align 8, !dbg !8438, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8442, metadata !DIExpression()), !dbg !8443
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8444, !tbaa !2442
  %5 = load i8*, i8** %base1, align 8, !dbg !8445, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !8445
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8445

cond.true:                                        ; preds = %entry
  %6 = load i8*, i8** %base1, align 8, !dbg !8446, !tbaa !2442
  br label %cond.end, !dbg !8445

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !8445
  %7 = load i8*, i8** %base2, align 8, !dbg !8447, !tbaa !2442
  %tobool3 = icmp ne i8* %7, null, !dbg !8447
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !8447

cond.true4:                                       ; preds = %cond.end
  %8 = load i8*, i8** %base2, align 8, !dbg !8448, !tbaa !2442
  br label %cond.end6, !dbg !8447

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !8447

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i8* [ %8, %cond.true4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false5 ], !dbg !8447
  %call8 = call i32 %4(i8* %cond, i8* %cond7), !dbg !8444
  store i32 %call8, i32* %diff, align 4, !dbg !8443, !tbaa !2436
  %9 = load i32, i32* %diff, align 4, !dbg !8449, !tbaa !2436
  %tobool9 = icmp ne i32 %9, 0, !dbg !8449
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !8449

cond.true10:                                      ; preds = %cond.end6
  %10 = load i32, i32* %diff, align 4, !dbg !8450, !tbaa !2436
  br label %cond.end15, !dbg !8449

cond.false11:                                     ; preds = %cond.end6
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8451, !tbaa !2442
  %12 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8452, !tbaa !2442
  %name12 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !8453, !ctir !184
  %13 = load i8*, i8** %name12, align 8, !dbg !8453, !tbaa !4017, !ctir !143
  %14 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8454, !tbaa !2442
  %name13 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 0, !dbg !8455, !ctir !184
  %15 = load i8*, i8** %name13, align 8, !dbg !8455, !tbaa !4017, !ctir !143
  %call14 = call i32 %11(i8* %13, i8* %15), !dbg !8451
  br label %cond.end15, !dbg !8449

cond.end15:                                       ; preds = %cond.false11, %cond.true10
  %cond16 = phi i32 [ %10, %cond.true10 ], [ %call14, %cond.false11 ], !dbg !8449
  ret i32 %cond16, !dbg !8456
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_name(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8457 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  %0 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8464, !tbaa !2442
  %1 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8465, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 0, !dbg !8466, !ctir !184
  %2 = load i8*, i8** %name, align 8, !dbg !8466, !tbaa !4017, !ctir !143
  %3 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8467, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !8468, !ctir !184
  %4 = load i8*, i8** %name1, align 8, !dbg !8468, !tbaa !4017, !ctir !143
  %call = call i32 %0(i8* %2, i8* %4), !dbg !8464
  ret i32 %call, !dbg !8469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @needs_quoting(i8* %name) #0 !dbg !8470 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  %test = alloca [2 x i8], align 1, !ctir !666
  %len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata [2 x i8]* %test, metadata !8473, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8475, metadata !DIExpression()), !dbg !8476
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8477
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8478, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !8479, !tbaa !2442
  %call = call i64 @quotearg_buffer(i8* %arraydecay, i64 2, i8* %0, i64 -1, %struct.quoting_options* %1), !dbg !8480
  store i64 %call, i64* %len, align 8, !dbg !8476, !tbaa !2579
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8481, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !8482, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !8482
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8483
  %4 = load i8, i8* %arraydecay1, align 1, !dbg !8483, !tbaa !2497, !ctir !144
  %conv2 = sext i8 %4 to i32, !dbg !8483
  %cmp = icmp ne i32 %conv, %conv2, !dbg !8484
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8485

lor.rhs:                                          ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8486, !tbaa !2442
  %call4 = call i64 @strlen(i8* %5) #16, !dbg !8487
  %6 = load i64, i64* %len, align 8, !dbg !8488, !tbaa !2579
  %cmp5 = icmp ne i64 %call4, %6, !dbg !8489
  br label %lor.end, !dbg !8485

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  ret i1 %7, !dbg !8490
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @attach(i8* %dest, i8* %dirname, i8* %name) #0 !dbg !8491 !ctir !672 {
entry:
  %dest.addr = alloca i8*, align 8
  %dirname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %dirnamep = alloca i8*, align 8, !ctir !146
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i8** %dirnamep, metadata !8498, metadata !DIExpression()), !dbg !8499
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !8500, !tbaa !2442
  store i8* %0, i8** %dirnamep, align 8, !dbg !8499, !tbaa !2442
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !8501, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8501, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8501, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !8501
  %cmp = icmp ne i32 %conv, 46, !dbg !8503
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8504

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !8505, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8505, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8505, !tbaa !2497
  %conv3 = sext i8 %4 to i32, !dbg !8505
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !8506
  br i1 %cmp4, label %if.then, label %if.end15, !dbg !8507

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.cond, !dbg !8508

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i8*, i8** %dirnamep, align 8, !dbg !8510, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !8511, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !8508
  br i1 %tobool, label %while.body, label %while.end, !dbg !8508

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %dirnamep, align 8, !dbg !8512, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8512
  store i8* %incdec.ptr, i8** %dirnamep, align 8, !dbg !8512, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !8513, !tbaa !2497, !ctir !147
  %9 = load i8*, i8** %dest.addr, align 8, !dbg !8514, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8514
  store i8* %incdec.ptr6, i8** %dest.addr, align 8, !dbg !8514, !tbaa !2442
  store i8 %8, i8* %9, align 1, !dbg !8515, !tbaa !2497, !ctir !144
  br label %while.cond, !dbg !8508, !llvm.loop !8516

while.end:                                        ; preds = %while.cond
  %10 = load i8*, i8** %dirnamep, align 8, !dbg !8517, !tbaa !2442
  %11 = load i8*, i8** %dirname.addr, align 8, !dbg !8519, !tbaa !2442
  %cmp7 = icmp ugt i8* %10, %11, !dbg !8520
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !8521

land.lhs.true:                                    ; preds = %while.end
  %12 = load i8*, i8** %dirnamep, align 8, !dbg !8522, !tbaa !2442
  %arrayidx9 = getelementptr inbounds i8, i8* %12, i64 -1, !dbg !8522, !ctir !146
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !8522, !tbaa !2497
  %conv10 = sext i8 %13 to i32, !dbg !8522
  %cmp11 = icmp ne i32 %conv10, 47, !dbg !8523
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8524

if.then13:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %dest.addr, align 8, !dbg !8525, !tbaa !2442
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8525
  store i8* %incdec.ptr14, i8** %dest.addr, align 8, !dbg !8525, !tbaa !2442
  store i8 47, i8* %14, align 1, !dbg !8526, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !8527

if.end:                                           ; preds = %if.then13, %land.lhs.true, %while.end
  br label %if.end15, !dbg !8528

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  br label %while.cond16, !dbg !8529

while.cond16:                                     ; preds = %while.body18, %if.end15
  %15 = load i8*, i8** %name.addr, align 8, !dbg !8530, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !8531, !tbaa !2497, !ctir !147
  %tobool17 = icmp ne i8 %16, 0, !dbg !8529
  br i1 %tobool17, label %while.body18, label %while.end21, !dbg !8529

while.body18:                                     ; preds = %while.cond16
  %17 = load i8*, i8** %name.addr, align 8, !dbg !8532, !tbaa !2442
  %incdec.ptr19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8532
  store i8* %incdec.ptr19, i8** %name.addr, align 8, !dbg !8532, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !8533, !tbaa !2497, !ctir !147
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !8534, !tbaa !2442
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8534
  store i8* %incdec.ptr20, i8** %dest.addr, align 8, !dbg !8534, !tbaa !2442
  store i8 %18, i8* %19, align 1, !dbg !8535, !tbaa !2497, !ctir !144
  br label %while.cond16, !dbg !8529, !llvm.loop !8536

while.end21:                                      ; preds = %while.cond16
  %20 = load i8*, i8** %dest.addr, align 8, !dbg !8537, !tbaa !2442
  store i8 0, i8* %20, align 1, !dbg !8538, !tbaa !2497, !ctir !144
  ret void, !dbg !8539
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1010 !ctir !674 {
entry:
  %retval = alloca i1, align 1
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %b = alloca i8, align 1, !ctir !141
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8544, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8546, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8547, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8547, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8549, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8550
  br i1 %cmp, label %if.then, label %if.end, !dbg !8551

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8552
  store i32 95, i32* %call, align 4, !dbg !8554, !tbaa !2436, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !8555
  br label %return, !dbg !8555

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %b, metadata !8556, metadata !DIExpression()), !dbg !8557
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8558, !tbaa !2442
  %call1 = call zeroext i1 @has_capability(i8* %3), !dbg !8559
  %frombool = zext i1 %call1 to i8, !dbg !8557
  store i8 %frombool, i8* %b, align 1, !dbg !8557, !tbaa !2461
  %4 = load i8, i8* %b, align 1, !dbg !8560, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8560
  br i1 %tobool, label %if.end7, label %land.lhs.true, !dbg !8562

land.lhs.true:                                    ; preds = %if.end
  %call2 = call i32* @__errno_location() #17, !dbg !8563
  %5 = load i32, i32* %call2, align 4, !dbg !8563, !tbaa !2436, !ctir !27
  %call3 = call zeroext i1 @errno_unsupported(i32 %5), !dbg !8564
  br i1 %call3, label %if.then4, label %if.end7, !dbg !8565

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8566, !tbaa !2442
  %stat5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8567, !ctir !185
  %st_dev6 = getelementptr inbounds %struct.stat, %struct.stat* %stat5, i32 0, i32 0, !dbg !8568, !ctir !191
  %7 = load i64, i64* %st_dev6, align 8, !dbg !8568, !tbaa !8548, !ctir !195
  store i64 %7, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8569, !tbaa !2579
  br label %if.end7, !dbg !8570

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %8 = load i8, i8* %b, align 1, !dbg !8571, !tbaa !2461
  %tobool8 = trunc i8 %8 to i1, !dbg !8571
  store i1 %tobool8, i1* %retval, align 1, !dbg !8572
  br label %return, !dbg !8572

return:                                           ; preds = %if.end7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8573
  ret i1 %9, !dbg !8573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getfilecon_cache(i8* %file, %struct.fileinfo* %f, i1 zeroext %deref) #0 !dbg !1013 !ctir !682 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %deref.addr = alloca i8, align 1
  %r = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  %frombool = zext i1 %deref to i8
  store i8 %frombool, i8* %deref.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %deref.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8580, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8582, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8583, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8583, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8584, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8585
  br i1 %cmp, label %if.then, label %if.end, !dbg !8586

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8587
  store i32 95, i32* %call, align 4, !dbg !8589, !tbaa !2436, !ctir !27
  store i32 -1, i32* %retval, align 4, !dbg !8590
  br label %return, !dbg !8590

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8591, metadata !DIExpression()), !dbg !8592
  store i32 0, i32* %r, align 4, !dbg !8592, !tbaa !2436
  %3 = load i8, i8* %deref.addr, align 1, !dbg !8593, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !8593
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8593

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %file.addr, align 8, !dbg !8594, !tbaa !2442
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8595, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 6, !dbg !8596, !ctir !185
  %call1 = call i32 @getfilecon(i8* %4, i8** %scontext), !dbg !8597
  br label %cond.end, !dbg !8593

cond.false:                                       ; preds = %if.end
  %6 = load i8*, i8** %file.addr, align 8, !dbg !8598, !tbaa !2442
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8599, !tbaa !2442
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 6, !dbg !8600, !ctir !185
  %call3 = call i32 @lgetfilecon(i8* %6, i8** %scontext2), !dbg !8601
  br label %cond.end, !dbg !8593

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call3, %cond.false ], !dbg !8593
  store i32 %cond, i32* %r, align 4, !dbg !8602, !tbaa !2436
  %8 = load i32, i32* %r, align 4, !dbg !8603, !tbaa !2436
  %cmp4 = icmp slt i32 %8, 0, !dbg !8605
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8606

land.lhs.true:                                    ; preds = %cond.end
  %call5 = call i32* @__errno_location() #17, !dbg !8607
  %9 = load i32, i32* %call5, align 4, !dbg !8607, !tbaa !2436, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %9), !dbg !8608
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8609

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8610, !tbaa !2442
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !8611, !ctir !185
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8612, !ctir !191
  %11 = load i64, i64* %st_dev9, align 8, !dbg !8612, !tbaa !8548, !ctir !195
  store i64 %11, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8613, !tbaa !2579
  br label %if.end10, !dbg !8614

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %cond.end
  %12 = load i32, i32* %r, align 4, !dbg !8615, !tbaa !2436
  store i32 %12, i32* %retval, align 4, !dbg !8616
  br label %return, !dbg !8616

return:                                           ; preds = %if.end10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8617
  ret i32 %13, !dbg !8617
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #0 !dbg !8618 !ctir !680 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8619, metadata !DIExpression()), !dbg !8620
  %0 = load i32, i32* %err.addr, align 4, !dbg !8621, !tbaa !2436
  %cmp = icmp eq i32 %0, 95, !dbg !8622
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8623

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8623

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8624
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @file_has_acl_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1016 !ctir !684 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %n = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8629, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8631, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8632, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8632, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8633, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8634
  br i1 %cmp, label %if.then, label %if.end, !dbg !8635

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8636
  store i32 95, i32* %call, align 4, !dbg !8638, !tbaa !2436, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !8639
  br label %return, !dbg !8639

if.end:                                           ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !8640
  store i32 0, i32* %call1, align 4, !dbg !8641, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8642, metadata !DIExpression()), !dbg !8643
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8644, !tbaa !2442
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8645, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8646, !ctir !185
  %call3 = call i32 @file_has_acl(i8* %3, %struct.stat* %stat2), !dbg !8647
  store i32 %call3, i32* %n, align 4, !dbg !8643, !tbaa !2436
  %5 = load i32, i32* %n, align 4, !dbg !8648, !tbaa !2436
  %cmp4 = icmp sle i32 %5, 0, !dbg !8650
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8651

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #17, !dbg !8652
  %6 = load i32, i32* %call5, align 4, !dbg !8652, !tbaa !2436, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %6), !dbg !8653
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8654

if.then7:                                         ; preds = %land.lhs.true
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8655, !tbaa !2442
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 3, !dbg !8656, !ctir !185
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8657, !ctir !191
  %8 = load i64, i64* %st_dev9, align 8, !dbg !8657, !tbaa !8548, !ctir !195
  store i64 %8, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8658, !tbaa !2579
  br label %if.end10, !dbg !8659

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %9 = load i32, i32* %n, align 4, !dbg !8660, !tbaa !2436
  store i32 %9, i32* %retval, align 4, !dbg !8661
  br label %return, !dbg !8661

return:                                           ; preds = %if.end10, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8662
  ret i32 %10, !dbg !8662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_link_name(i8* %filename, %struct.fileinfo* %f, i1 zeroext %command_line_arg) #0 !dbg !8663 !ctir !686 {
entry:
  %filename.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !8670, !tbaa !2442
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8671, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 3, !dbg !8672, !ctir !185
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8673, !ctir !191
  %2 = load i64, i64* %st_size, align 8, !dbg !8673, !tbaa !4417, !ctir !181
  %call = call i8* @areadlink_with_size(i8* %0, i64 %2), !dbg !8674
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8675, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 1, !dbg !8676, !ctir !185
  store i8* %call, i8** %linkname, align 8, !dbg !8677, !tbaa !4155, !ctir !143
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8678, !tbaa !2442
  %linkname1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 1, !dbg !8680, !ctir !185
  %5 = load i8*, i8** %linkname1, align 8, !dbg !8680, !tbaa !4155, !ctir !143
  %cmp = icmp eq i8* %5, null, !dbg !8681
  br i1 %cmp, label %if.then, label %if.end, !dbg !8682

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %command_line_arg.addr, align 1, !dbg !8683, !tbaa !2461
  %tobool = trunc i8 %6 to i1, !dbg !8683
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i64 0, i64 0)) #13, !dbg !8684
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !8685, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool, i8* %call2, i8* %7), !dbg !8686
  br label %if.end, !dbg !8686

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8687
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_link_name(i8* %name, i8* %linkname) #0 !dbg !8688 !ctir !688 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %linkname.addr = alloca i8*, align 8
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  store i8* %linkname, i8** %linkname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %linkname.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  %0 = load i8*, i8** %linkname.addr, align 8, !dbg !8693, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8693
  br i1 %tobool, label %if.end, label %if.then, !dbg !8695

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8696
  br label %return, !dbg !8696

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %linkname.addr, align 8, !dbg !8697, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8697, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8697, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !8697
  %cmp = icmp eq i32 %conv, 47, !dbg !8697
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8699

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %linkname.addr, align 8, !dbg !8700, !tbaa !2442
  %call = call noalias i8* @xstrdup(i8* %3), !dbg !8701
  store i8* %call, i8** %retval, align 8, !dbg !8702
  br label %return, !dbg !8702

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !8703, metadata !DIExpression()), !dbg !8704
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8705, !tbaa !2442
  %call4 = call i64 @dir_len(i8* %4) #16, !dbg !8706
  store i64 %call4, i64* %prefix_len, align 8, !dbg !8704, !tbaa !2579
  %5 = load i64, i64* %prefix_len, align 8, !dbg !8707, !tbaa !2579
  %cmp5 = icmp eq i64 %5, 0, !dbg !8709
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !8710

if.then7:                                         ; preds = %if.end3
  %6 = load i8*, i8** %linkname.addr, align 8, !dbg !8711, !tbaa !2442
  %call8 = call noalias i8* @xstrdup(i8* %6), !dbg !8712
  store i8* %call8, i8** %retval, align 8, !dbg !8713
  br label %return, !dbg !8713

if.end9:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8714, metadata !DIExpression()), !dbg !8715
  %7 = load i64, i64* %prefix_len, align 8, !dbg !8716, !tbaa !2579
  %add = add i64 %7, 1, !dbg !8717
  %8 = load i8*, i8** %linkname.addr, align 8, !dbg !8718, !tbaa !2442
  %call10 = call i64 @strlen(i8* %8) #16, !dbg !8719
  %add11 = add i64 %add, %call10, !dbg !8720
  %add12 = add i64 %add11, 1, !dbg !8721
  %call13 = call noalias i8* @xmalloc(i64 %add12), !dbg !8722
  store i8* %call13, i8** %p, align 8, !dbg !8715, !tbaa !2442
  %9 = load i8*, i8** %name.addr, align 8, !dbg !8723, !tbaa !2442
  %10 = load i64, i64* %prefix_len, align 8, !dbg !8723, !tbaa !2579
  %sub = sub i64 %10, 1, !dbg !8723
  %arrayidx14 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !8723, !ctir !146
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !8723, !tbaa !2497
  %conv15 = sext i8 %11 to i32, !dbg !8723
  %cmp16 = icmp eq i32 %conv15, 47, !dbg !8723
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !8725

if.then18:                                        ; preds = %if.end9
  %12 = load i64, i64* %prefix_len, align 8, !dbg !8726, !tbaa !2579
  %inc = add i64 %12, 1, !dbg !8726
  store i64 %inc, i64* %prefix_len, align 8, !dbg !8726, !tbaa !2579
  br label %if.end19, !dbg !8726

if.end19:                                         ; preds = %if.then18, %if.end9
  %13 = load i8*, i8** %p, align 8, !dbg !8727, !tbaa !2442
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8728, !tbaa !2442
  %15 = load i64, i64* %prefix_len, align 8, !dbg !8729, !tbaa !2579
  %call20 = call i8* @stpncpy(i8* %13, i8* %14, i64 %15) #13, !dbg !8730
  %16 = load i8*, i8** %linkname.addr, align 8, !dbg !8731, !tbaa !2442
  %call21 = call i8* @stpcpy(i8* %call20, i8* %16) #13, !dbg !8732
  %17 = load i8*, i8** %p, align 8, !dbg !8733, !tbaa !2442
  store i8* %17, i8** %retval, align 8, !dbg !8734
  br label %return, !dbg !8734

return:                                           ; preds = %if.end19, %if.then7, %if.then2, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !8735
  ret i8* %18, !dbg !8735
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_width(i32 %u) #0 !dbg !8736 !ctir !690 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8739, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !8739
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8739

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8739

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %u.addr, align 4, !dbg !8740, !tbaa !2436
  %call = call i8* @getuser(i32 %1), !dbg !8741
  br label %cond.end, !dbg !8739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8739
  %2 = load i32, i32* %u.addr, align 4, !dbg !8742, !tbaa !2436
  %conv = zext i32 %2 to i64, !dbg !8742
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8743
  ret i32 %call1, !dbg !8744
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_group_width(i32 %g) #0 !dbg !8745 !ctir !695 {
entry:
  %g.addr = alloca i32, align 4
  store i32 %g, i32* %g.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8748, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !8748
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8748

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8748

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %g.addr, align 4, !dbg !8749, !tbaa !2436
  %call = call i8* @getgroup(i32 %1), !dbg !8750
  br label %cond.end, !dbg !8748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8748
  %2 = load i32, i32* %g.addr, align 4, !dbg !8751, !tbaa !2436
  %conv = zext i32 %2 to i64, !dbg !8751
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8752
  ret i32 %call1, !dbg !8753
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_or_group_width(i8* %name, i64 %id) #0 !dbg !8754 !ctir !693 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %len = alloca i32, align 4, !ctir !27
  %buf = alloca [21 x i8], align 16, !ctir !669
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i64 %id, i64* %id.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8759, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8759
  br i1 %tobool, label %if.then, label %if.else, !dbg !8761

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8762, metadata !DIExpression()), !dbg !8764
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8765, !tbaa !2442
  %call = call i32 @gnu_mbswidth(i8* %1, i32 0), !dbg !8766
  store i32 %call, i32* %len, align 4, !dbg !8764, !tbaa !2436
  %2 = load i32, i32* %len, align 4, !dbg !8767, !tbaa !2436
  %cmp = icmp sgt i32 0, %2, !dbg !8767
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8767

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8767

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %len, align 4, !dbg !8767, !tbaa !2436
  br label %cond.end, !dbg !8767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !8767
  store i32 %cond, i32* %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf, metadata !8769, metadata !DIExpression()), !dbg !8771
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8772
  %4 = load i64, i64* %id.addr, align 8, !dbg !8773, !tbaa !2579
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221, i64 0, i64 0), i64 %4) #13, !dbg !8774
  %arraydecay2 = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8775
  %call3 = call i64 @strlen(i8* %arraydecay2) #16, !dbg !8776
  %conv = trunc i64 %call3 to i32, !dbg !8776
  store i32 %conv, i32* %retval, align 4, !dbg !8777
  br label %return, !dbg !8777

return:                                           ; preds = %if.else, %cond.end
  %5 = load i32, i32* %retval, align 4, !dbg !8778
  ret i32 %5, !dbg !8778
}

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #0 !dbg !8779 !ctir !680 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8780, metadata !DIExpression()), !dbg !8781
  %0 = load i32, i32* %err.addr, align 4, !dbg !8782, !tbaa !2436
  %cmp = icmp eq i32 %0, 22, !dbg !8783
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8784

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !8785, !tbaa !2436
  %cmp1 = icmp eq i32 %1, 38, !dbg !8786
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8787

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* %err.addr, align 4, !dbg !8788, !tbaa !2436
  %call = call zeroext i1 @is_ENOTSUP(i32 %2), !dbg !8789
  br label %lor.end, !dbg !8787

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %3, !dbg !8790
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability(i8* %name) #0 !dbg !8791 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !143
  %has_cap = alloca i8, align 1, !ctir !141
  %cap_d = alloca %struct._cap_struct*, align 8, !ctir !676
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata i8** %result, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.declare(metadata i8* %has_cap, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata %struct._cap_struct** %cap_d, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8800, !tbaa !2442
  %call = call %struct._cap_struct* @cap_get_file(i8* %0), !dbg !8801
  store %struct._cap_struct* %call, %struct._cap_struct** %cap_d, align 8, !dbg !8799, !tbaa !2442
  %1 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8802, !tbaa !2442
  %cmp = icmp eq %struct._cap_struct* %1, null, !dbg !8804
  br i1 %cmp, label %if.then, label %if.end, !dbg !8805

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8806
  br label %return, !dbg !8806

if.end:                                           ; preds = %entry
  %2 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8807, !tbaa !2442
  %call1 = call i8* @cap_to_text(%struct._cap_struct* %2, i64* null), !dbg !8808
  store i8* %call1, i8** %result, align 8, !dbg !8809, !tbaa !2442
  %3 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8810, !tbaa !2442
  %4 = bitcast %struct._cap_struct* %3 to i8*, !dbg !8810
  %call2 = call i32 @cap_free(i8* %4), !dbg !8811
  %5 = load i8*, i8** %result, align 8, !dbg !8812, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !8812
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8814

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8815
  br label %return, !dbg !8815

if.end4:                                          ; preds = %if.end
  %6 = load i8*, i8** %result, align 8, !dbg !8816, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !8817, !tbaa !2497, !ctir !144
  %tobool5 = icmp ne i8 %7, 0, !dbg !8818
  %lnot = xor i1 %tobool5, true, !dbg !8818
  %lnot6 = xor i1 %lnot, true, !dbg !8819
  %frombool = zext i1 %lnot6 to i8, !dbg !8820
  store i8 %frombool, i8* %has_cap, align 1, !dbg !8820, !tbaa !2461
  %8 = load i8*, i8** %result, align 8, !dbg !8821, !tbaa !2442
  %call7 = call i32 @cap_free(i8* %8), !dbg !8822
  %9 = load i8, i8* %has_cap, align 1, !dbg !8823, !tbaa !2461
  %tobool8 = trunc i8 %9 to i1, !dbg !8823
  store i1 %tobool8, i1* %retval, align 1, !dbg !8824
  br label %return, !dbg !8824

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !8825
  ret i1 %10, !dbg !8825
}

declare dso_local %struct._cap_struct* @cap_get_file(i8*) #3

declare dso_local i8* @cap_to_text(%struct._cap_struct*, i64*) #3

declare dso_local i32 @cap_free(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @known_term_type() #0 !dbg !8826 !ctir !602 {
entry:
  %retval = alloca i1, align 1
  %term = alloca i8*, align 8, !ctir !146
  %line = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %term, metadata !8827, metadata !DIExpression()), !dbg !8828
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !8829
  store i8* %call, i8** %term, align 8, !dbg !8828, !tbaa !2442
  %0 = load i8*, i8** %term, align 8, !dbg !8830, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8830
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8832

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %term, align 8, !dbg !8833, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !8834, !tbaa !2497, !ctir !147
  %tobool1 = icmp ne i8 %2, 0, !dbg !8834
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8835

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !8836
  br label %return, !dbg !8836

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %line, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i8* getelementptr inbounds ([4304 x i8], [4304 x i8]* @G_line, i64 0, i64 0), i8** %line, align 8, !dbg !8838, !tbaa !2442
  br label %while.cond, !dbg !8839

while.cond:                                       ; preds = %if.end9, %if.end
  %3 = load i8*, i8** %line, align 8, !dbg !8840, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !8841
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4304 x i8]* @G_line to i64), !dbg !8841
  %cmp = icmp ult i64 %sub.ptr.sub, 4304, !dbg !8842
  br i1 %cmp, label %while.body, label %while.end, !dbg !8839

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %line, align 8, !dbg !8843, !tbaa !2442
  %call2 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), i64 5) #16, !dbg !8843
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8846
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !8847

if.then4:                                         ; preds = %while.body
  %5 = load i8*, i8** %line, align 8, !dbg !8848, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 5, !dbg !8851
  %6 = load i8*, i8** %term, align 8, !dbg !8852, !tbaa !2442
  %call5 = call i32 @fnmatch(i8* %add.ptr, i8* %6, i32 0), !dbg !8853
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8854
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8855

if.then7:                                         ; preds = %if.then4
  store i1 true, i1* %retval, align 1, !dbg !8856
  br label %return, !dbg !8856

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !8857

if.end9:                                          ; preds = %if.end8, %while.body
  %7 = load i8*, i8** %line, align 8, !dbg !8858, !tbaa !2442
  %call10 = call i64 @strlen(i8* %7) #16, !dbg !8859
  %add = add i64 %call10, 1, !dbg !8860
  %8 = load i8*, i8** %line, align 8, !dbg !8861, !tbaa !2442
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8861
  store i8* %add.ptr11, i8** %line, align 8, !dbg !8861, !tbaa !2442
  br label %while.cond, !dbg !8839, !llvm.loop !8862

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !8864
  br label %return, !dbg !8864

return:                                           ; preds = %while.end, %if.then7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8865
  ret i1 %9, !dbg !8865
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @get_funky_string(i8** %dest, i8** %src, i1 zeroext %equals_end, i64* %output_count) #0 !dbg !138 !ctir !139 {
entry:
  %dest.addr = alloca i8**, align 8
  %src.addr = alloca i8**, align 8
  %equals_end.addr = alloca i8, align 1
  %output_count.addr = alloca i64*, align 8
  %num = alloca i8, align 1, !ctir !144
  %count = alloca i64, align 8, !ctir !149
  %state = alloca i32, align 4, !ctir !137
  %p = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  store i8** %dest, i8*** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store i8** %src, i8*** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  %frombool = zext i1 %equals_end to i8
  store i8 %frombool, i8* %equals_end.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %equals_end.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store i64* %output_count, i64** %output_count.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %output_count.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata i8* %num, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8878, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8882, metadata !DIExpression()), !dbg !8883
  %0 = load i8**, i8*** %src.addr, align 8, !dbg !8884, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !8885, !tbaa !2442, !ctir !146
  store i8* %1, i8** %p, align 8, !dbg !8886, !tbaa !2442
  %2 = load i8**, i8*** %dest.addr, align 8, !dbg !8887, !tbaa !2442
  %3 = load i8*, i8** %2, align 8, !dbg !8888, !tbaa !2442, !ctir !143
  store i8* %3, i8** %q, align 8, !dbg !8889, !tbaa !2442
  store i64 0, i64* %count, align 8, !dbg !8890, !tbaa !2579
  store i8 0, i8* %num, align 1, !dbg !8891, !tbaa !2497
  store i32 0, i32* %state, align 4, !dbg !8892, !tbaa !2497
  br label %while.cond, !dbg !8893

while.cond:                                       ; preds = %sw.epilog106, %entry
  %4 = load i32, i32* %state, align 4, !dbg !8894, !tbaa !2497
  %cmp = icmp ult i32 %4, 5, !dbg !8895
  br i1 %cmp, label %while.body, label %while.end, !dbg !8893

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %state, align 4, !dbg !8896, !tbaa !2497
  switch i32 %5, label %sw.default105 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb34
    i32 3, label %sw.bb50
    i32 4, label %sw.bb82
  ], !dbg !8898

sw.bb:                                            ; preds = %while.body
  %6 = load i8*, i8** %p, align 8, !dbg !8899, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !8901, !tbaa !2497, !ctir !147
  %conv = sext i8 %7 to i32, !dbg !8901
  switch i32 %conv, label %sw.default [
    i32 58, label %sw.bb1
    i32 0, label %sw.bb1
    i32 92, label %sw.bb2
    i32 94, label %sw.bb3
    i32 61, label %sw.bb5
  ], !dbg !8902

sw.bb1:                                           ; preds = %sw.bb, %sw.bb
  store i32 5, i32* %state, align 4, !dbg !8903, !tbaa !2497
  br label %sw.epilog, !dbg !8905

sw.bb2:                                           ; preds = %sw.bb
  store i32 1, i32* %state, align 4, !dbg !8906, !tbaa !2497
  %8 = load i8*, i8** %p, align 8, !dbg !8907, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8907
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8907, !tbaa !2442
  br label %sw.epilog, !dbg !8908

sw.bb3:                                           ; preds = %sw.bb
  store i32 4, i32* %state, align 4, !dbg !8909, !tbaa !2497
  %9 = load i8*, i8** %p, align 8, !dbg !8910, !tbaa !2442
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8910
  store i8* %incdec.ptr4, i8** %p, align 8, !dbg !8910, !tbaa !2442
  br label %sw.epilog, !dbg !8911

sw.bb5:                                           ; preds = %sw.bb
  %10 = load i8, i8* %equals_end.addr, align 1, !dbg !8912, !tbaa !2461
  %tobool = trunc i8 %10 to i1, !dbg !8912
  br i1 %tobool, label %if.then, label %if.end, !dbg !8914

if.then:                                          ; preds = %sw.bb5
  store i32 5, i32* %state, align 4, !dbg !8915, !tbaa !2497
  br label %sw.epilog, !dbg !8917

if.end:                                           ; preds = %sw.bb5
  br label %sw.default, !dbg !8918

sw.default:                                       ; preds = %sw.bb, %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !8919, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8919
  store i8* %incdec.ptr6, i8** %p, align 8, !dbg !8919, !tbaa !2442
  %12 = load i8, i8* %11, align 1, !dbg !8920, !tbaa !2497, !ctir !147
  %13 = load i8*, i8** %q, align 8, !dbg !8921, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8921
  store i8* %incdec.ptr7, i8** %q, align 8, !dbg !8921, !tbaa !2442
  store i8 %12, i8* %13, align 1, !dbg !8922, !tbaa !2497, !ctir !144
  %14 = load i64, i64* %count, align 8, !dbg !8923, !tbaa !2579
  %inc = add i64 %14, 1, !dbg !8923
  store i64 %inc, i64* %count, align 8, !dbg !8923, !tbaa !2579
  br label %sw.epilog, !dbg !8924

sw.epilog:                                        ; preds = %sw.default, %if.then, %sw.bb3, %sw.bb2, %sw.bb1
  br label %sw.epilog106, !dbg !8925

sw.bb8:                                           ; preds = %while.body
  %15 = load i8*, i8** %p, align 8, !dbg !8926, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !8927, !tbaa !2497, !ctir !147
  %conv9 = sext i8 %16 to i32, !dbg !8927
  switch i32 %conv9, label %sw.default25 [
    i32 48, label %sw.bb10
    i32 49, label %sw.bb10
    i32 50, label %sw.bb10
    i32 51, label %sw.bb10
    i32 52, label %sw.bb10
    i32 53, label %sw.bb10
    i32 54, label %sw.bb10
    i32 55, label %sw.bb10
    i32 120, label %sw.bb13
    i32 88, label %sw.bb13
    i32 97, label %sw.bb14
    i32 98, label %sw.bb15
    i32 101, label %sw.bb16
    i32 102, label %sw.bb17
    i32 110, label %sw.bb18
    i32 114, label %sw.bb19
    i32 116, label %sw.bb20
    i32 118, label %sw.bb21
    i32 63, label %sw.bb22
    i32 95, label %sw.bb23
    i32 0, label %sw.bb24
  ], !dbg !8928

sw.bb10:                                          ; preds = %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8
  store i32 2, i32* %state, align 4, !dbg !8929, !tbaa !2497
  %17 = load i8*, i8** %p, align 8, !dbg !8931, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !8932, !tbaa !2497, !ctir !147
  %conv11 = sext i8 %18 to i32, !dbg !8932
  %sub = sub nsw i32 %conv11, 48, !dbg !8933
  %conv12 = trunc i32 %sub to i8, !dbg !8932
  store i8 %conv12, i8* %num, align 1, !dbg !8934, !tbaa !2497
  br label %sw.epilog26, !dbg !8935

sw.bb13:                                          ; preds = %sw.bb8, %sw.bb8
  store i32 3, i32* %state, align 4, !dbg !8936, !tbaa !2497
  store i8 0, i8* %num, align 1, !dbg !8937, !tbaa !2497
  br label %sw.epilog26, !dbg !8938

sw.bb14:                                          ; preds = %sw.bb8
  store i8 7, i8* %num, align 1, !dbg !8939, !tbaa !2497
  br label %sw.epilog26, !dbg !8940

sw.bb15:                                          ; preds = %sw.bb8
  store i8 8, i8* %num, align 1, !dbg !8941, !tbaa !2497
  br label %sw.epilog26, !dbg !8942

sw.bb16:                                          ; preds = %sw.bb8
  store i8 27, i8* %num, align 1, !dbg !8943, !tbaa !2497
  br label %sw.epilog26, !dbg !8944

sw.bb17:                                          ; preds = %sw.bb8
  store i8 12, i8* %num, align 1, !dbg !8945, !tbaa !2497
  br label %sw.epilog26, !dbg !8946

sw.bb18:                                          ; preds = %sw.bb8
  store i8 10, i8* %num, align 1, !dbg !8947, !tbaa !2497
  br label %sw.epilog26, !dbg !8948

sw.bb19:                                          ; preds = %sw.bb8
  store i8 13, i8* %num, align 1, !dbg !8949, !tbaa !2497
  br label %sw.epilog26, !dbg !8950

sw.bb20:                                          ; preds = %sw.bb8
  store i8 9, i8* %num, align 1, !dbg !8951, !tbaa !2497
  br label %sw.epilog26, !dbg !8952

sw.bb21:                                          ; preds = %sw.bb8
  store i8 11, i8* %num, align 1, !dbg !8953, !tbaa !2497
  br label %sw.epilog26, !dbg !8954

sw.bb22:                                          ; preds = %sw.bb8
  store i8 127, i8* %num, align 1, !dbg !8955, !tbaa !2497
  br label %sw.epilog26, !dbg !8956

sw.bb23:                                          ; preds = %sw.bb8
  store i8 32, i8* %num, align 1, !dbg !8957, !tbaa !2497
  br label %sw.epilog26, !dbg !8958

sw.bb24:                                          ; preds = %sw.bb8
  store i32 6, i32* %state, align 4, !dbg !8959, !tbaa !2497
  br label %sw.epilog26, !dbg !8960

sw.default25:                                     ; preds = %sw.bb8
  %19 = load i8*, i8** %p, align 8, !dbg !8961, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !8962, !tbaa !2497, !ctir !147
  store i8 %20, i8* %num, align 1, !dbg !8963, !tbaa !2497
  br label %sw.epilog26, !dbg !8964

sw.epilog26:                                      ; preds = %sw.default25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb10
  %21 = load i32, i32* %state, align 4, !dbg !8965, !tbaa !2497
  %cmp27 = icmp eq i32 %21, 1, !dbg !8967
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !8968

if.then29:                                        ; preds = %sw.epilog26
  %22 = load i8, i8* %num, align 1, !dbg !8969, !tbaa !2497
  %23 = load i8*, i8** %q, align 8, !dbg !8971, !tbaa !2442
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8971
  store i8* %incdec.ptr30, i8** %q, align 8, !dbg !8971, !tbaa !2442
  store i8 %22, i8* %23, align 1, !dbg !8972, !tbaa !2497, !ctir !144
  %24 = load i64, i64* %count, align 8, !dbg !8973, !tbaa !2579
  %inc31 = add i64 %24, 1, !dbg !8973
  store i64 %inc31, i64* %count, align 8, !dbg !8973, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !8974, !tbaa !2497
  br label %if.end32, !dbg !8975

if.end32:                                         ; preds = %if.then29, %sw.epilog26
  %25 = load i8*, i8** %p, align 8, !dbg !8976, !tbaa !2442
  %incdec.ptr33 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !8976
  store i8* %incdec.ptr33, i8** %p, align 8, !dbg !8976, !tbaa !2442
  br label %sw.epilog106, !dbg !8977

sw.bb34:                                          ; preds = %while.body
  %26 = load i8*, i8** %p, align 8, !dbg !8978, !tbaa !2442
  %27 = load i8, i8* %26, align 1, !dbg !8980, !tbaa !2497, !ctir !147
  %conv35 = sext i8 %27 to i32, !dbg !8980
  %cmp36 = icmp slt i32 %conv35, 48, !dbg !8981
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !8982

lor.lhs.false:                                    ; preds = %sw.bb34
  %28 = load i8*, i8** %p, align 8, !dbg !8983, !tbaa !2442
  %29 = load i8, i8* %28, align 1, !dbg !8984, !tbaa !2497, !ctir !147
  %conv38 = sext i8 %29 to i32, !dbg !8984
  %cmp39 = icmp sgt i32 %conv38, 55, !dbg !8985
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !8986

if.then41:                                        ; preds = %lor.lhs.false, %sw.bb34
  %30 = load i8, i8* %num, align 1, !dbg !8987, !tbaa !2497
  %31 = load i8*, i8** %q, align 8, !dbg !8989, !tbaa !2442
  %incdec.ptr42 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8989
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !8989, !tbaa !2442
  store i8 %30, i8* %31, align 1, !dbg !8990, !tbaa !2497, !ctir !144
  %32 = load i64, i64* %count, align 8, !dbg !8991, !tbaa !2579
  %inc43 = add i64 %32, 1, !dbg !8991
  store i64 %inc43, i64* %count, align 8, !dbg !8991, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !8992, !tbaa !2497
  br label %if.end49, !dbg !8993

if.else:                                          ; preds = %lor.lhs.false
  %33 = load i8, i8* %num, align 1, !dbg !8994, !tbaa !2497
  %conv44 = sext i8 %33 to i32, !dbg !8994
  %shl = shl i32 %conv44, 3, !dbg !8995
  %34 = load i8*, i8** %p, align 8, !dbg !8996, !tbaa !2442
  %incdec.ptr45 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8996
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !8996, !tbaa !2442
  %35 = load i8, i8* %34, align 1, !dbg !8997, !tbaa !2497, !ctir !147
  %conv46 = sext i8 %35 to i32, !dbg !8997
  %sub47 = sub nsw i32 %conv46, 48, !dbg !8998
  %add = add nsw i32 %shl, %sub47, !dbg !8999
  %conv48 = trunc i32 %add to i8, !dbg !9000
  store i8 %conv48, i8* %num, align 1, !dbg !9001, !tbaa !2497
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  br label %sw.epilog106, !dbg !9002

sw.bb50:                                          ; preds = %while.body
  %36 = load i8*, i8** %p, align 8, !dbg !9003, !tbaa !2442
  %37 = load i8, i8* %36, align 1, !dbg !9004, !tbaa !2497, !ctir !147
  %conv51 = sext i8 %37 to i32, !dbg !9004
  switch i32 %conv51, label %sw.default78 [
    i32 48, label %sw.bb52
    i32 49, label %sw.bb52
    i32 50, label %sw.bb52
    i32 51, label %sw.bb52
    i32 52, label %sw.bb52
    i32 53, label %sw.bb52
    i32 54, label %sw.bb52
    i32 55, label %sw.bb52
    i32 56, label %sw.bb52
    i32 57, label %sw.bb52
    i32 97, label %sw.bb60
    i32 98, label %sw.bb60
    i32 99, label %sw.bb60
    i32 100, label %sw.bb60
    i32 101, label %sw.bb60
    i32 102, label %sw.bb60
    i32 65, label %sw.bb69
    i32 66, label %sw.bb69
    i32 67, label %sw.bb69
    i32 68, label %sw.bb69
    i32 69, label %sw.bb69
    i32 70, label %sw.bb69
  ], !dbg !9005

sw.bb52:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %38 = load i8, i8* %num, align 1, !dbg !9006, !tbaa !2497
  %conv53 = sext i8 %38 to i32, !dbg !9006
  %shl54 = shl i32 %conv53, 4, !dbg !9008
  %39 = load i8*, i8** %p, align 8, !dbg !9009, !tbaa !2442
  %incdec.ptr55 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !9009
  store i8* %incdec.ptr55, i8** %p, align 8, !dbg !9009, !tbaa !2442
  %40 = load i8, i8* %39, align 1, !dbg !9010, !tbaa !2497, !ctir !147
  %conv56 = sext i8 %40 to i32, !dbg !9010
  %sub57 = sub nsw i32 %conv56, 48, !dbg !9011
  %add58 = add nsw i32 %shl54, %sub57, !dbg !9012
  %conv59 = trunc i32 %add58 to i8, !dbg !9013
  store i8 %conv59, i8* %num, align 1, !dbg !9014, !tbaa !2497
  br label %sw.epilog81, !dbg !9015

sw.bb60:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %41 = load i8, i8* %num, align 1, !dbg !9016, !tbaa !2497
  %conv61 = sext i8 %41 to i32, !dbg !9016
  %shl62 = shl i32 %conv61, 4, !dbg !9017
  %42 = load i8*, i8** %p, align 8, !dbg !9018, !tbaa !2442
  %incdec.ptr63 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !9018
  store i8* %incdec.ptr63, i8** %p, align 8, !dbg !9018, !tbaa !2442
  %43 = load i8, i8* %42, align 1, !dbg !9019, !tbaa !2497, !ctir !147
  %conv64 = sext i8 %43 to i32, !dbg !9019
  %sub65 = sub nsw i32 %conv64, 97, !dbg !9020
  %add66 = add nsw i32 %shl62, %sub65, !dbg !9021
  %add67 = add nsw i32 %add66, 10, !dbg !9022
  %conv68 = trunc i32 %add67 to i8, !dbg !9023
  store i8 %conv68, i8* %num, align 1, !dbg !9024, !tbaa !2497
  br label %sw.epilog81, !dbg !9025

sw.bb69:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %44 = load i8, i8* %num, align 1, !dbg !9026, !tbaa !2497
  %conv70 = sext i8 %44 to i32, !dbg !9026
  %shl71 = shl i32 %conv70, 4, !dbg !9027
  %45 = load i8*, i8** %p, align 8, !dbg !9028, !tbaa !2442
  %incdec.ptr72 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !9028
  store i8* %incdec.ptr72, i8** %p, align 8, !dbg !9028, !tbaa !2442
  %46 = load i8, i8* %45, align 1, !dbg !9029, !tbaa !2497, !ctir !147
  %conv73 = sext i8 %46 to i32, !dbg !9029
  %sub74 = sub nsw i32 %conv73, 65, !dbg !9030
  %add75 = add nsw i32 %shl71, %sub74, !dbg !9031
  %add76 = add nsw i32 %add75, 10, !dbg !9032
  %conv77 = trunc i32 %add76 to i8, !dbg !9033
  store i8 %conv77, i8* %num, align 1, !dbg !9034, !tbaa !2497
  br label %sw.epilog81, !dbg !9035

sw.default78:                                     ; preds = %sw.bb50
  %47 = load i8, i8* %num, align 1, !dbg !9036, !tbaa !2497
  %48 = load i8*, i8** %q, align 8, !dbg !9037, !tbaa !2442
  %incdec.ptr79 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !9037
  store i8* %incdec.ptr79, i8** %q, align 8, !dbg !9037, !tbaa !2442
  store i8 %47, i8* %48, align 1, !dbg !9038, !tbaa !2497, !ctir !144
  %49 = load i64, i64* %count, align 8, !dbg !9039, !tbaa !2579
  %inc80 = add i64 %49, 1, !dbg !9039
  store i64 %inc80, i64* %count, align 8, !dbg !9039, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !9040, !tbaa !2497
  br label %sw.epilog81, !dbg !9041

sw.epilog81:                                      ; preds = %sw.default78, %sw.bb69, %sw.bb60, %sw.bb52
  br label %sw.epilog106, !dbg !9042

sw.bb82:                                          ; preds = %while.body
  store i32 0, i32* %state, align 4, !dbg !9043, !tbaa !2497
  %50 = load i8*, i8** %p, align 8, !dbg !9044, !tbaa !2442
  %51 = load i8, i8* %50, align 1, !dbg !9046, !tbaa !2497, !ctir !147
  %conv83 = sext i8 %51 to i32, !dbg !9046
  %cmp84 = icmp sge i32 %conv83, 64, !dbg !9047
  br i1 %cmp84, label %land.lhs.true, label %if.else95, !dbg !9048

land.lhs.true:                                    ; preds = %sw.bb82
  %52 = load i8*, i8** %p, align 8, !dbg !9049, !tbaa !2442
  %53 = load i8, i8* %52, align 1, !dbg !9050, !tbaa !2497, !ctir !147
  %conv86 = sext i8 %53 to i32, !dbg !9050
  %cmp87 = icmp sle i32 %conv86, 126, !dbg !9051
  br i1 %cmp87, label %if.then89, label %if.else95, !dbg !9052

if.then89:                                        ; preds = %land.lhs.true
  %54 = load i8*, i8** %p, align 8, !dbg !9053, !tbaa !2442
  %incdec.ptr90 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !9053
  store i8* %incdec.ptr90, i8** %p, align 8, !dbg !9053, !tbaa !2442
  %55 = load i8, i8* %54, align 1, !dbg !9055, !tbaa !2497, !ctir !147
  %conv91 = sext i8 %55 to i32, !dbg !9055
  %and = and i32 %conv91, 31, !dbg !9056
  %conv92 = trunc i32 %and to i8, !dbg !9055
  %56 = load i8*, i8** %q, align 8, !dbg !9057, !tbaa !2442
  %incdec.ptr93 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !9057
  store i8* %incdec.ptr93, i8** %q, align 8, !dbg !9057, !tbaa !2442
  store i8 %conv92, i8* %56, align 1, !dbg !9058, !tbaa !2497, !ctir !144
  %57 = load i64, i64* %count, align 8, !dbg !9059, !tbaa !2579
  %inc94 = add i64 %57, 1, !dbg !9059
  store i64 %inc94, i64* %count, align 8, !dbg !9059, !tbaa !2579
  br label %if.end104, !dbg !9060

if.else95:                                        ; preds = %land.lhs.true, %sw.bb82
  %58 = load i8*, i8** %p, align 8, !dbg !9061, !tbaa !2442
  %59 = load i8, i8* %58, align 1, !dbg !9063, !tbaa !2497, !ctir !147
  %conv96 = sext i8 %59 to i32, !dbg !9063
  %cmp97 = icmp eq i32 %conv96, 63, !dbg !9064
  br i1 %cmp97, label %if.then99, label %if.else102, !dbg !9065

if.then99:                                        ; preds = %if.else95
  %60 = load i8*, i8** %q, align 8, !dbg !9066, !tbaa !2442
  %incdec.ptr100 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !9066
  store i8* %incdec.ptr100, i8** %q, align 8, !dbg !9066, !tbaa !2442
  store i8 127, i8* %60, align 1, !dbg !9068, !tbaa !2497, !ctir !144
  %61 = load i64, i64* %count, align 8, !dbg !9069, !tbaa !2579
  %inc101 = add i64 %61, 1, !dbg !9069
  store i64 %inc101, i64* %count, align 8, !dbg !9069, !tbaa !2579
  br label %if.end103, !dbg !9070

if.else102:                                       ; preds = %if.else95
  store i32 6, i32* %state, align 4, !dbg !9071, !tbaa !2497
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %sw.epilog106, !dbg !9072

sw.default105:                                    ; preds = %while.body
  call void @abort() #15, !dbg !9073
  unreachable, !dbg !9073

sw.epilog106:                                     ; preds = %if.end104, %sw.epilog81, %if.end49, %if.end32, %sw.epilog
  br label %while.cond, !dbg !8893, !llvm.loop !9074

while.end:                                        ; preds = %while.cond
  %62 = load i8*, i8** %q, align 8, !dbg !9076, !tbaa !2442
  %63 = load i8**, i8*** %dest.addr, align 8, !dbg !9077, !tbaa !2442
  store i8* %62, i8** %63, align 8, !dbg !9078, !tbaa !2442, !ctir !143
  %64 = load i8*, i8** %p, align 8, !dbg !9079, !tbaa !2442
  %65 = load i8**, i8*** %src.addr, align 8, !dbg !9080, !tbaa !2442
  store i8* %64, i8** %65, align 8, !dbg !9081, !tbaa !2442, !ctir !146
  %66 = load i64, i64* %count, align 8, !dbg !9082, !tbaa !2579
  %67 = load i64*, i64** %output_count.addr, align 8, !dbg !9083, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !9084, !tbaa !2579, !ctir !149
  %68 = load i32, i32* %state, align 4, !dbg !9085, !tbaa !2497
  %cmp107 = icmp ne i32 %68, 6, !dbg !9086
  ret i1 %cmp107, !dbg !9087
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @getenv_quoting_style() #0 !dbg !9088 !ctir !341 {
entry:
  %q_style = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q_style, metadata !9089, metadata !DIExpression()), !dbg !9090
  %call = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !9091
  store i8* %call, i8** %q_style, align 8, !dbg !9090, !tbaa !2442
  %0 = load i8*, i8** %q_style, align 8, !dbg !9092, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !9092
  br i1 %tobool, label %if.then, label %if.end6, !dbg !9094

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9095, metadata !DIExpression()), !dbg !9097
  %1 = load i8*, i8** %q_style, align 8, !dbg !9098, !tbaa !2442
  %call1 = call i64 @argmatch(i8* %1, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4) #16, !dbg !9098
  %conv = trunc i64 %call1 to i32, !dbg !9098
  store i32 %conv, i32* %i, align 4, !dbg !9097, !tbaa !2436
  %2 = load i32, i32* %i, align 4, !dbg !9099, !tbaa !2436
  %cmp = icmp sle i32 0, %2, !dbg !9101
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9102

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %i, align 4, !dbg !9103, !tbaa !2436
  %idxprom = sext i32 %3 to i64, !dbg !9104
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %idxprom, !dbg !9104, !ctir !558
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9104, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 %4), !dbg !9105
  br label %if.end, !dbg !9105

if.else:                                          ; preds = %if.then
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !9106
  %5 = load i8*, i8** %q_style, align 8, !dbg !9107, !tbaa !2442
  %call5 = call i8* @quote(i8* %5), !dbg !9108
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call4, i8* %call5), !dbg !9109
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6, !dbg !9110

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !9111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_line_length(i8* %spec) #0 !dbg !9112 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %spec.addr = alloca i8*, align 8
  %val = alloca i64, align 8, !ctir !168
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i64* %val, metadata !9115, metadata !DIExpression()), !dbg !9116
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !9117, !tbaa !2442
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 0, i64* %val, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !9118
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !9119

sw.bb:                                            ; preds = %entry
  %1 = load i64, i64* %val, align 8, !dbg !9120, !tbaa !2579
  %cmp = icmp ult i64 %1, -1, !dbg !9120
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9120

cond.true:                                        ; preds = %sw.bb
  %2 = load i64, i64* %val, align 8, !dbg !9120, !tbaa !2579
  br label %cond.end, !dbg !9120

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !9120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !9120
  store i64 %cond, i64* @line_length, align 8, !dbg !9122, !tbaa !2579
  store i1 true, i1* %retval, align 1, !dbg !9123
  br label %return, !dbg !9123

sw.bb1:                                           ; preds = %entry
  store i64 -1, i64* @line_length, align 8, !dbg !9124, !tbaa !2579
  store i1 true, i1* %retval, align 1, !dbg !9125
  br label %return, !dbg !9125

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9126
  br label %return, !dbg !9126

return:                                           ; preds = %sw.default, %sw.bb1, %cond.end
  %3 = load i1, i1* %retval, align 1, !dbg !9127
  ret i1 %3, !dbg !9127
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_ignore_pattern(i8* %pattern) #0 !dbg !9128 !ctir !570 {
entry:
  %pattern.addr = alloca i8*, align 8
  %ignore = alloca %struct.ignore_pattern*, align 8, !ctir !511
  store i8* %pattern, i8** %pattern.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %ignore, metadata !9131, metadata !DIExpression()), !dbg !9132
  %call = call noalias i8* @xmalloc(i64 16), !dbg !9133
  %0 = bitcast i8* %call to %struct.ignore_pattern*, !dbg !9133
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %ignore, align 8, !dbg !9134, !tbaa !2442
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !9135, !tbaa !2442
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9136, !tbaa !2442
  %pattern1 = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !9137, !ctir !512
  store i8* %1, i8** %pattern1, align 8, !dbg !9138, !tbaa !3052, !ctir !146
  %3 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9139, !tbaa !2442
  %4 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9140, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %4, i32 0, i32 1, !dbg !9141, !ctir !512
  store %struct.ignore_pattern* %3, %struct.ignore_pattern** %next, align 8, !dbg !9142, !tbaa !3058, !ctir !511
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9143, !tbaa !2442
  store %struct.ignore_pattern* %5, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9144, !tbaa !2442
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bad_cast(i8* %s) #0 !dbg !9146 !ctir !572 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9149, !tbaa !2442
  ret i8* %0, !dbg !9150
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #10 !dbg !9151 !ctir !174 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load i32, i32* %status.addr, align 4, !dbg !9154, !tbaa !2436
  %cmp = icmp ne i32 %0, 0, !dbg !9156
  br i1 %cmp, label %if.then, label %if.else, !dbg !9157

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9158

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9159, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !9159
  %2 = load i8*, i8** @program_name, align 8, !dbg !9159, !tbaa !2442
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !9159
  br label %do.end, !dbg !9159

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !9159

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !9161
  %3 = load i8*, i8** @program_name, align 8, !dbg !9163, !tbaa !2442
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3), !dbg !9164
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !9165
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9165, !tbaa !2442
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %4), !dbg !9165
  call void @emit_mandatory_arg_note(), !dbg !9166
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !9167
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9167, !tbaa !2442
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %5), !dbg !9167
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !9168
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9168, !tbaa !2442
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %6), !dbg !9168
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([362 x i8], [362 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !9169
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9169, !tbaa !2442
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %7), !dbg !9169
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !9170
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9170, !tbaa !2442
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %8), !dbg !9170
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !9171
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9171, !tbaa !2442
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %9), !dbg !9171
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !9172
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9172, !tbaa !2442
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %10), !dbg !9172
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([245 x i8], [245 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !9173
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9173, !tbaa !2442
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %11), !dbg !9173
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !9174
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9174, !tbaa !2442
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %12), !dbg !9174
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !9175
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9175, !tbaa !2442
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %13), !dbg !9175
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([422 x i8], [422 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !9176
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9176, !tbaa !2442
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %14), !dbg !9176
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !9177
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9177, !tbaa !2442
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %15), !dbg !9177
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([354 x i8], [354 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !9178
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9178, !tbaa !2442
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %16), !dbg !9178
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !9179
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9179, !tbaa !2442
  %call31 = call i32 @fputs_unlocked(i8* %call30, %struct._IO_FILE* %17), !dbg !9179
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([359 x i8], [359 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !9180
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9180, !tbaa !2442
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !9180
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([303 x i8], [303 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !9181
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9181, !tbaa !2442
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !9181
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([585 x i8], [585 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !9182
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9182, !tbaa !2442
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !9182
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([197 x i8], [197 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !9183
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9183, !tbaa !2442
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !9183
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([519 x i8], [519 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !9184
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9184, !tbaa !2442
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !9184
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !9185
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9185, !tbaa !2442
  %call43 = call i32 @fputs_unlocked(i8* %call42, %struct._IO_FILE* %23), !dbg !9185
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !9186
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9186, !tbaa !2442
  %call45 = call i32 @fputs_unlocked(i8* %call44, %struct._IO_FILE* %24), !dbg !9186
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([372 x i8], [372 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !9187
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9187, !tbaa !2442
  %call47 = call i32 @fputs_unlocked(i8* %call46, %struct._IO_FILE* %25), !dbg !9187
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([363 x i8], [363 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !9188
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9188, !tbaa !2442
  %call49 = call i32 @fputs_unlocked(i8* %call48, %struct._IO_FILE* %26), !dbg !9188
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !9189
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9189, !tbaa !2442
  %call51 = call i32 @fputs_unlocked(i8* %call50, %struct._IO_FILE* %27), !dbg !9189
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !9190
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9190, !tbaa !2442
  %call53 = call i32 @fputs_unlocked(i8* %call52, %struct._IO_FILE* %28), !dbg !9190
  call void @emit_size_note(), !dbg !9191
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([376 x i8], [376 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !9192
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9192, !tbaa !2442
  %call55 = call i32 @fputs_unlocked(i8* %call54, %struct._IO_FILE* %29), !dbg !9192
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([286 x i8], [286 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !9193
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9193, !tbaa !2442
  %call57 = call i32 @fputs_unlocked(i8* %call56, %struct._IO_FILE* %30), !dbg !9193
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !9194
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9194, !tbaa !2442
  %call59 = call i32 @fputs_unlocked(i8* %call58, %struct._IO_FILE* %31), !dbg !9194
  %32 = load i32, i32* @ls_mode, align 4, !dbg !9195, !tbaa !2436
  %cmp60 = icmp eq i32 %32, 1, !dbg !9195
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !9195

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !9195

cond.false:                                       ; preds = %if.else
  %33 = load i32, i32* @ls_mode, align 4, !dbg !9195, !tbaa !2436
  %cmp61 = icmp eq i32 %33, 2, !dbg !9195
  %34 = zext i1 %cmp61 to i64, !dbg !9195
  %cond = select i1 %cmp61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !9195
  br label %cond.end, !dbg !9195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond62 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond, %cond.false ], !dbg !9195
  call void @emit_ancillary_info(i8* %cond62), !dbg !9196
  br label %if.end

if.end:                                           ; preds = %cond.end, %do.end
  %35 = load i32, i32* %status.addr, align 4, !dbg !9197, !tbaa !2436
  call void @exit(i32 %35) #15, !dbg !9198
  unreachable, !dbg !9198
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @dcgettext(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @abformat_init() #0 !dbg !9199 !ctir !341 {
entry:
  %pb = alloca [2 x i8*], align 16, !ctir !561
  %recent = alloca i32, align 4, !ctir !27
  %abmon = alloca [12 x [128 x i8]], align 16, !ctir !574
  %recent9 = alloca i32, align 4, !ctir !27
  %fmt = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  %nfmt = alloca i8*, align 8, !ctir !143
  %nbytes = alloca i32, align 4, !ctir !27
  %prefix_len = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata [2 x i8*]* %pb, metadata !9200, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !9202, metadata !DIExpression()), !dbg !9204
  store i32 0, i32* %recent, align 4, !dbg !9204, !tbaa !2436
  br label %for.cond, !dbg !9205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %recent, align 4, !dbg !9206, !tbaa !2436
  %cmp = icmp slt i32 %0, 2, !dbg !9208
  br i1 %cmp, label %for.body, label %for.end, !dbg !9209

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %recent, align 4, !dbg !9210, !tbaa !2436
  %idxprom = sext i32 %1 to i64, !dbg !9211
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom, !dbg !9211, !ctir !561
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9211, !tbaa !2442
  %call = call i8* @first_percent_b(i8* %2) #16, !dbg !9212
  %3 = load i32, i32* %recent, align 4, !dbg !9213, !tbaa !2436
  %idxprom1 = sext i32 %3 to i64, !dbg !9214
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom1, !dbg !9214, !ctir !561
  store i8* %call, i8** %arrayidx2, align 8, !dbg !9215, !tbaa !2442
  br label %for.inc, !dbg !9214

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %recent, align 4, !dbg !9216, !tbaa !2436
  %inc = add nsw i32 %4, 1, !dbg !9216
  store i32 %inc, i32* %recent, align 4, !dbg !9216, !tbaa !2436
  br label %for.cond, !dbg !9217, !llvm.loop !9218

for.end:                                          ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 0, !dbg !9220, !ctir !561
  %5 = load i8*, i8** %arrayidx3, align 16, !dbg !9220, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !9220
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !9222

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 1, !dbg !9223, !ctir !561
  %6 = load i8*, i8** %arrayidx4, align 8, !dbg !9223, !tbaa !2442
  %tobool5 = icmp ne i8* %6, null, !dbg !9223
  br i1 %tobool5, label %if.end, label %if.then, !dbg !9224

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !9225

if.end:                                           ; preds = %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata [12 x [128 x i8]]* %abmon, metadata !9226, metadata !DIExpression()), !dbg !9227
  %arraydecay = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 0, !dbg !9228
  %call6 = call zeroext i1 @abmon_init([128 x i8]* %arraydecay), !dbg !9230
  br i1 %call6, label %if.end8, label %if.then7, !dbg !9231

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !9232

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %recent9, metadata !9233, metadata !DIExpression()), !dbg !9235
  store i32 0, i32* %recent9, align 4, !dbg !9235, !tbaa !2436
  br label %for.cond10, !dbg !9236

for.cond10:                                       ; preds = %for.inc54, %if.end8
  %7 = load i32, i32* %recent9, align 4, !dbg !9237, !tbaa !2436
  %cmp11 = icmp slt i32 %7, 2, !dbg !9239
  br i1 %cmp11, label %for.body12, label %for.end56, !dbg !9240

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9241, metadata !DIExpression()), !dbg !9243
  %8 = load i32, i32* %recent9, align 4, !dbg !9244, !tbaa !2436
  %idxprom13 = sext i32 %8 to i64, !dbg !9245
  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom13, !dbg !9245, !ctir !561
  %9 = load i8*, i8** %arrayidx14, align 8, !dbg !9245, !tbaa !2442
  store i8* %9, i8** %fmt, align 8, !dbg !9243, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9246, metadata !DIExpression()), !dbg !9248
  store i32 0, i32* %i, align 4, !dbg !9248, !tbaa !2436
  br label %for.cond15, !dbg !9249

for.cond15:                                       ; preds = %for.inc51, %for.body12
  %10 = load i32, i32* %i, align 4, !dbg !9250, !tbaa !2436
  %cmp16 = icmp slt i32 %10, 12, !dbg !9252
  br i1 %cmp16, label %for.body17, label %for.end53, !dbg !9253

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !9254, metadata !DIExpression()), !dbg !9256
  %11 = load i32, i32* %recent9, align 4, !dbg !9257, !tbaa !2436
  %idxprom18 = sext i32 %11 to i64, !dbg !9258
  %arrayidx19 = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom18, !dbg !9258, !ctir !577
  %12 = load i32, i32* %i, align 4, !dbg !9259, !tbaa !2436
  %idxprom20 = sext i32 %12 to i64, !dbg !9258
  %arrayidx21 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx19, i64 0, i64 %idxprom20, !dbg !9258, !ctir !574
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx21, i64 0, i64 0, !dbg !9258
  store i8* %arraydecay22, i8** %nfmt, align 8, !dbg !9256, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !9260, metadata !DIExpression()), !dbg !9261
  %13 = load i32, i32* %recent9, align 4, !dbg !9262, !tbaa !2436
  %idxprom23 = sext i32 %13 to i64, !dbg !9264
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom23, !dbg !9264, !ctir !561
  %14 = load i8*, i8** %arrayidx24, align 8, !dbg !9264, !tbaa !2442
  %tobool25 = icmp ne i8* %14, null, !dbg !9264
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !9265

if.then26:                                        ; preds = %for.body17
  %15 = load i8*, i8** %nfmt, align 8, !dbg !9266, !tbaa !2442
  %16 = load i8*, i8** %fmt, align 8, !dbg !9267, !tbaa !2442
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %16) #13, !dbg !9268
  store i32 %call27, i32* %nbytes, align 4, !dbg !9269, !tbaa !2436
  br label %if.end44, !dbg !9270

if.else:                                          ; preds = %for.body17
  %17 = load i32, i32* %recent9, align 4, !dbg !9271, !tbaa !2436
  %idxprom28 = sext i32 %17 to i64, !dbg !9274
  %arrayidx29 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom28, !dbg !9274, !ctir !561
  %18 = load i8*, i8** %arrayidx29, align 8, !dbg !9274, !tbaa !2442
  %19 = load i8*, i8** %fmt, align 8, !dbg !9275, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9276
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !9276
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9276
  %cmp30 = icmp sle i64 %sub.ptr.sub, 128, !dbg !9277
  br i1 %cmp30, label %if.end32, label %if.then31, !dbg !9278

if.then31:                                        ; preds = %if.else
  br label %return, !dbg !9279

if.end32:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %prefix_len, metadata !9280, metadata !DIExpression()), !dbg !9281
  %20 = load i32, i32* %recent9, align 4, !dbg !9282, !tbaa !2436
  %idxprom33 = sext i32 %20 to i64, !dbg !9283
  %arrayidx34 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom33, !dbg !9283, !ctir !561
  %21 = load i8*, i8** %arrayidx34, align 8, !dbg !9283, !tbaa !2442
  %22 = load i8*, i8** %fmt, align 8, !dbg !9284, !tbaa !2442
  %sub.ptr.lhs.cast35 = ptrtoint i8* %21 to i64, !dbg !9285
  %sub.ptr.rhs.cast36 = ptrtoint i8* %22 to i64, !dbg !9285
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !9285
  %conv = trunc i64 %sub.ptr.sub37 to i32, !dbg !9283
  store i32 %conv, i32* %prefix_len, align 4, !dbg !9281, !tbaa !2436
  %23 = load i8*, i8** %nfmt, align 8, !dbg !9286, !tbaa !2442
  %24 = load i32, i32* %prefix_len, align 4, !dbg !9287, !tbaa !2436
  %25 = load i8*, i8** %fmt, align 8, !dbg !9288, !tbaa !2442
  %26 = load i32, i32* %i, align 4, !dbg !9289, !tbaa !2436
  %idxprom38 = sext i32 %26 to i64, !dbg !9290
  %arrayidx39 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 %idxprom38, !dbg !9290, !ctir !574
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx39, i64 0, i64 0, !dbg !9290
  %27 = load i32, i32* %recent9, align 4, !dbg !9291, !tbaa !2436
  %idxprom41 = sext i32 %27 to i64, !dbg !9292
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom41, !dbg !9292, !ctir !561
  %28 = load i8*, i8** %arrayidx42, align 8, !dbg !9292, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 2, !dbg !9293
  %call43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i64 0, i64 0), i32 %24, i8* %25, i8* %arraydecay40, i8* %add.ptr) #13, !dbg !9294
  store i32 %call43, i32* %nbytes, align 4, !dbg !9295, !tbaa !2436
  br label %if.end44

if.end44:                                         ; preds = %if.end32, %if.then26
  %29 = load i32, i32* %nbytes, align 4, !dbg !9296, !tbaa !2436
  %cmp45 = icmp sle i32 0, %29, !dbg !9298
  br i1 %cmp45, label %land.lhs.true, label %if.then49, !dbg !9299

land.lhs.true:                                    ; preds = %if.end44
  %30 = load i32, i32* %nbytes, align 4, !dbg !9300, !tbaa !2436
  %cmp47 = icmp slt i32 %30, 128, !dbg !9301
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !9302

if.then49:                                        ; preds = %land.lhs.true, %if.end44
  br label %return, !dbg !9303

if.end50:                                         ; preds = %land.lhs.true
  br label %for.inc51, !dbg !9304

for.inc51:                                        ; preds = %if.end50
  %31 = load i32, i32* %i, align 4, !dbg !9305, !tbaa !2436
  %inc52 = add nsw i32 %31, 1, !dbg !9305
  store i32 %inc52, i32* %i, align 4, !dbg !9305, !tbaa !2436
  br label %for.cond15, !dbg !9306, !llvm.loop !9307

for.end53:                                        ; preds = %for.cond15
  br label %for.inc54, !dbg !9309

for.inc54:                                        ; preds = %for.end53
  %32 = load i32, i32* %recent9, align 4, !dbg !9310, !tbaa !2436
  %inc55 = add nsw i32 %32, 1, !dbg !9310
  store i32 %inc55, i32* %recent9, align 4, !dbg !9310, !tbaa !2436
  br label %for.cond10, !dbg !9311, !llvm.loop !9312

for.end56:                                        ; preds = %for.cond10
  store i8 1, i8* @use_abformat, align 1, !dbg !9314, !tbaa !2461
  br label %return, !dbg !9315

return:                                           ; preds = %for.end56, %if.then49, %if.then31, %if.then7, %if.then
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i8* @first_percent_b(i8* %fmt) #9 !dbg !9316 !ctir !579 {
entry:
  %retval = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  br label %for.cond, !dbg !9319

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !9320, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !9323, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %1, 0, !dbg !9324
  br i1 %tobool, label %for.body, label %for.end, !dbg !9324

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !9325, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !9325, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9325, !tbaa !2497
  %conv = sext i8 %3 to i32, !dbg !9325
  %cmp = icmp eq i32 %conv, 37, !dbg !9327
  br i1 %cmp, label %if.then, label %if.end, !dbg !9328

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !9329, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !9329, !ctir !146
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !9329, !tbaa !2497
  %conv3 = sext i8 %5 to i32, !dbg !9329
  switch i32 %conv3, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb4
  ], !dbg !9330

sw.bb:                                            ; preds = %if.then
  %6 = load i8*, i8** %fmt.addr, align 8, !dbg !9331, !tbaa !2442
  store i8* %6, i8** %retval, align 8, !dbg !9333
  br label %return, !dbg !9333

sw.bb4:                                           ; preds = %if.then
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !9334, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9334
  store i8* %incdec.ptr, i8** %fmt.addr, align 8, !dbg !9334, !tbaa !2442
  br label %sw.epilog, !dbg !9335

sw.epilog:                                        ; preds = %if.then, %sw.bb4
  br label %if.end, !dbg !9336

if.end:                                           ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !9337

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !9338, !tbaa !2442
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9338
  store i8* %incdec.ptr5, i8** %fmt.addr, align 8, !dbg !9338, !tbaa !2442
  br label %for.cond, !dbg !9339, !llvm.loop !9340

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9342
  br label %return, !dbg !9342

return:                                           ; preds = %for.end, %sw.bb
  %9 = load i8*, i8** %retval, align 8, !dbg !9343
  ret i8* %9, !dbg !9343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abmon_init([128 x i8]* %abmon) #0 !dbg !9344 !ctir !581 {
entry:
  %retval = alloca i1, align 1
  %abmon.addr = alloca [128 x i8]*, align 8
  %required_mon_width = alloca i64, align 8, !ctir !149
  %curr_max_width = alloca i64, align 8, !ctir !149
  %i = alloca i32, align 4, !ctir !27
  %width = alloca i64, align 8, !ctir !149
  %abbr = alloca i8*, align 8, !ctir !146
  %alignment = alloca i32, align 4, !ctir !586
  %req = alloca i64, align 8, !ctir !149
  store [128 x i8]* %abmon, [128 x i8]** %abmon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata [128 x i8]** %abmon.addr, metadata !9345, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.declare(metadata i64* %required_mon_width, metadata !9347, metadata !DIExpression()), !dbg !9348
  store i64 12, i64* %required_mon_width, align 8, !dbg !9348, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %curr_max_width, metadata !9349, metadata !DIExpression()), !dbg !9350
  br label %do.body, !dbg !9351

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i64, i64* %required_mon_width, align 8, !dbg !9352, !tbaa !2579
  store i64 %0, i64* %curr_max_width, align 8, !dbg !9354, !tbaa !2579
  store i64 0, i64* %required_mon_width, align 8, !dbg !9355, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9356, metadata !DIExpression()), !dbg !9358
  store i32 0, i32* %i, align 4, !dbg !9358, !tbaa !2436
  br label %for.cond, !dbg !9359

for.cond:                                         ; preds = %for.inc, %do.body
  %1 = load i32, i32* %i, align 4, !dbg !9360, !tbaa !2436
  %cmp = icmp slt i32 %1, 12, !dbg !9362
  br i1 %cmp, label %for.body, label %for.end, !dbg !9363

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %width, metadata !9364, metadata !DIExpression()), !dbg !9366
  %2 = load i64, i64* %curr_max_width, align 8, !dbg !9367, !tbaa !2579
  store i64 %2, i64* %width, align 8, !dbg !9366, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %abbr, metadata !9368, metadata !DIExpression()), !dbg !9369
  %3 = load i32, i32* %i, align 4, !dbg !9370, !tbaa !2436
  %add = add nsw i32 131086, %3, !dbg !9371
  %call = call i8* @nl_langinfo(i32 %add) #13, !dbg !9372
  store i8* %call, i8** %abbr, align 8, !dbg !9369, !tbaa !2442
  %4 = load i8*, i8** %abbr, align 8, !dbg !9373, !tbaa !2442
  %call1 = call i8* @strchr(i8* %4, i32 37) #16, !dbg !9375
  %tobool = icmp ne i8* %call1, null, !dbg !9375
  br i1 %tobool, label %if.then, label %if.end, !dbg !9376

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !9377
  br label %return, !dbg !9377

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %alignment, metadata !9378, metadata !DIExpression()), !dbg !9379
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !9380
  %5 = load i16*, i16** %call2, align 8, !dbg !9380, !tbaa !2442, !ctir !587
  %6 = load i8*, i8** %abbr, align 8, !dbg !9380, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !9380, !tbaa !2497, !ctir !147
  %call3 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !9380
  %conv = zext i8 %call3 to i32, !dbg !9380
  %idxprom = sext i32 %conv to i64, !dbg !9380
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !9380, !ctir !587
  %8 = load i16, i16* %arrayidx, align 2, !dbg !9380, !tbaa !5835
  %conv4 = zext i16 %8 to i32, !dbg !9380
  %and = and i32 %conv4, 2048, !dbg !9380
  %tobool5 = icmp ne i32 %and, 0, !dbg !9380
  %9 = zext i1 %tobool5 to i64, !dbg !9380
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !9380
  store i32 %cond, i32* %alignment, align 4, !dbg !9379, !tbaa !2497
  call void @llvm.dbg.declare(metadata i64* %req, metadata !9381, metadata !DIExpression()), !dbg !9382
  %10 = load i8*, i8** %abbr, align 8, !dbg !9383, !tbaa !2442
  %11 = load [128 x i8]*, [128 x i8]** %abmon.addr, align 8, !dbg !9384, !tbaa !2442
  %12 = load i32, i32* %i, align 4, !dbg !9385, !tbaa !2436
  %idxprom6 = sext i32 %12 to i64, !dbg !9384
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 %idxprom6, !dbg !9384, !ctir !583
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx7, i64 0, i64 0, !dbg !9384
  %13 = load i32, i32* %alignment, align 4, !dbg !9386, !tbaa !2497
  %call8 = call i64 @mbsalign(i8* %10, i8* %arraydecay, i64 128, i64* %width, i32 %13, i32 0), !dbg !9387
  store i64 %call8, i64* %req, align 8, !dbg !9382, !tbaa !2579
  %14 = load i64, i64* %req, align 8, !dbg !9388, !tbaa !2579
  %cmp9 = icmp ult i64 %14, 128, !dbg !9390
  br i1 %cmp9, label %if.end12, label %if.then11, !dbg !9391

if.then11:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9392
  br label %return, !dbg !9392

if.end12:                                         ; preds = %if.end
  %15 = load i64, i64* %required_mon_width, align 8, !dbg !9393, !tbaa !2579
  %16 = load i64, i64* %width, align 8, !dbg !9393, !tbaa !2579
  %cmp13 = icmp ugt i64 %15, %16, !dbg !9393
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !9393

cond.true:                                        ; preds = %if.end12
  %17 = load i64, i64* %required_mon_width, align 8, !dbg !9393, !tbaa !2579
  br label %cond.end, !dbg !9393

cond.false:                                       ; preds = %if.end12
  %18 = load i64, i64* %width, align 8, !dbg !9393, !tbaa !2579
  br label %cond.end, !dbg !9393

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i64 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !9393
  store i64 %cond15, i64* %required_mon_width, align 8, !dbg !9394, !tbaa !2579
  br label %for.inc, !dbg !9395

for.inc:                                          ; preds = %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !9396, !tbaa !2436
  %inc = add nsw i32 %19, 1, !dbg !9396
  store i32 %inc, i32* %i, align 4, !dbg !9396, !tbaa !2436
  br label %for.cond, !dbg !9397, !llvm.loop !9398

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !9400

do.cond:                                          ; preds = %for.end
  %20 = load i64, i64* %curr_max_width, align 8, !dbg !9401, !tbaa !2579
  %21 = load i64, i64* %required_mon_width, align 8, !dbg !9402, !tbaa !2579
  %cmp16 = icmp ugt i64 %20, %21, !dbg !9403
  br i1 %cmp16, label %do.body, label %do.end, !dbg !9400, !llvm.loop !9404

do.end:                                           ; preds = %do.cond
  store i1 true, i1* %retval, align 1, !dbg !9406
  br label %return, !dbg !9406

return:                                           ; preds = %do.end, %if.then11, %if.then
  %22 = load i1, i1* %retval, align 1, !dbg !9407
  ret i1 %22, !dbg !9407
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #0 !dbg !9408 !ctir !341 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.231, i64 0, i64 0)) #13, !dbg !9409
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9409, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9409
  ret void, !dbg !9410
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_size_note() #0 !dbg !9411 !ctir !341 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.232, i64 0, i64 0)) #13, !dbg !9412
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9412, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9412
  ret void, !dbg !9413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #0 !dbg !811 !ctir !570 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !807
  %node = alloca i8*, align 8, !ctir !146
  %map_prog = alloca %struct.infomap*, align 8, !ctir !815
  %lc_messages = alloca i8*, align 8, !ctir !146
  store i8* %program, i8** %program.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !9416, metadata !DIExpression()), !dbg !9417
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !9417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !9417
  call void @llvm.dbg.declare(metadata i8** %node, metadata !9418, metadata !DIExpression()), !dbg !9419
  %1 = load i8*, i8** %program.addr, align 8, !dbg !9420, !tbaa !2442
  store i8* %1, i8** %node, align 8, !dbg !9419, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !9421, metadata !DIExpression()), !dbg !9422
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !9423
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !9422, !tbaa !2442
  br label %while.cond, !dbg !9424

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9425, !tbaa !2442
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !9426, !ctir !808
  %3 = load i8*, i8** %program1, align 8, !dbg !9426, !tbaa !9427, !ctir !146
  %tobool = icmp ne i8* %3, null, !dbg !9425
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9429

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !9430, !tbaa !2442
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9430, !tbaa !2442
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !9430, !ctir !808
  %6 = load i8*, i8** %program2, align 8, !dbg !9430, !tbaa !9427, !ctir !146
  %call = call i32 @strcmp(i8* %4, i8* %6) #16, !dbg !9430
  %cmp = icmp eq i32 %call, 0, !dbg !9430
  %lnot = xor i1 %cmp, true, !dbg !9431
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !9432
  br i1 %7, label %while.body, label %while.end, !dbg !9424

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9433, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !9433
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !9433, !tbaa !2442
  br label %while.cond, !dbg !9424, !llvm.loop !9434

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9435, !tbaa !2442
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !9437, !ctir !808
  %10 = load i8*, i8** %node3, align 8, !dbg !9437, !tbaa !9438, !ctir !146
  %tobool4 = icmp ne i8* %10, null, !dbg !9435
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9439

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9440, !tbaa !2442
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !9441, !ctir !808
  %12 = load i8*, i8** %node5, align 8, !dbg !9441, !tbaa !9438, !ctir !146
  store i8* %12, i8** %node, align 8, !dbg !9442, !tbaa !2442
  br label %if.end, !dbg !9443

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i64 0, i64 0)) #13, !dbg !9444
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0)), !dbg !9445
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !9446, metadata !DIExpression()), !dbg !9447
  %call8 = call i8* @setlocale(i32 5, i8* null) #13, !dbg !9448
  store i8* %call8, i8** %lc_messages, align 8, !dbg !9447, !tbaa !2442
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !9449, !tbaa !2442
  %tobool9 = icmp ne i8* %13, null, !dbg !9449
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !9451

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !9452, !tbaa !2442
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.243, i64 0, i64 0), i64 3) #16, !dbg !9452
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9452
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !9453

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.244, i64 0, i64 0)) #13, !dbg !9454
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9454, !tbaa !2442
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !9454
  br label %if.end15, !dbg !9456

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)) #13, !dbg !9457
  %16 = load i8*, i8** %program.addr, align 8, !dbg !9458, !tbaa !2442
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0), i8* %16), !dbg !9459
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.246, i64 0, i64 0)) #13, !dbg !9460
  %17 = load i8*, i8** %node, align 8, !dbg !9461, !tbaa !2442
  %18 = load i8*, i8** %node, align 8, !dbg !9462, !tbaa !2442
  %19 = load i8*, i8** %program.addr, align 8, !dbg !9463, !tbaa !2442
  %cmp19 = icmp eq i8* %18, %19, !dbg !9464
  %20 = zext i1 %cmp19 to i64, !dbg !9462
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !9462
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !9465
  ret void, !dbg !9466
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #0 !dbg !9467 !ctir !1483 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !149
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !149
  %initial_limit = alloca i64, align 8, !ctir !149
  %buf_size = alloca i64, align 8, !ctir !149
  %r = alloca i64, align 8, !ctir !1650
  %link_length = alloca i64, align 8, !ctir !149
  %stackbuf = alloca [128 x i8], align 16, !ctir !584
  %buf = alloca i8*, align 8, !ctir !143
  %buffer = alloca i8*, align 8, !ctir !143
  %saved_errno = alloca i32, align 4, !ctir !27
  %shrinked_buffer = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9473, metadata !DIExpression()), !dbg !9474
  store i64 1024, i64* %symlink_max, align 8, !dbg !9474, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9475, metadata !DIExpression()), !dbg !9476
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9476, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9477, metadata !DIExpression()), !dbg !9478
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9479, !tbaa !2579
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9480, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !9481
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9479

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9482, !tbaa !2579
  %add = add i64 %2, 1, !dbg !9483
  br label %cond.end, !dbg !9479

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9484, !tbaa !2579
  br label %cond.end, !dbg !9479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9479
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9478, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9485, metadata !DIExpression()), !dbg !9486
  %4 = load i64, i64* %size.addr, align 8, !dbg !9487, !tbaa !2579
  %cmp1 = icmp eq i64 %4, 0, !dbg !9488
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9487

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9487

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9489, !tbaa !2579
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9490, !tbaa !2579
  %cmp4 = icmp ult i64 %5, %6, !dbg !9491
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9489

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9492, !tbaa !2579
  %add6 = add i64 %7, 1, !dbg !9493
  br label %cond.end8, !dbg !9489

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9494, !tbaa !2579
  br label %cond.end8, !dbg !9489

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9489
  br label %cond.end10, !dbg !9487

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9487
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9486, !tbaa !2579
  br label %while.body, !dbg !9495

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9496, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9503, metadata !DIExpression()), !dbg !9504
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9505
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9504, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9506, metadata !DIExpression()), !dbg !9507
  store i8* null, i8** %buffer, align 8, !dbg !9507, !tbaa !2442
  %9 = load i64, i64* %size.addr, align 8, !dbg !9508, !tbaa !2579
  %cmp12 = icmp eq i64 %9, 0, !dbg !9510
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9511

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9512, !tbaa !2579
  %cmp13 = icmp eq i64 %10, 128, !dbg !9513
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9514

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9515, !tbaa !2579
  %call = call noalias i8* @malloc(i64 %11) #13, !dbg !9517
  store i8* %call, i8** %buffer, align 8, !dbg !9518, !tbaa !2442
  store i8* %call, i8** %buf, align 8, !dbg !9519, !tbaa !2442
  %12 = load i8*, i8** %buffer, align 8, !dbg !9520, !tbaa !2442
  %tobool = icmp ne i8* %12, null, !dbg !9520
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9522

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9523
  br label %return, !dbg !9523

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9524

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9525, !tbaa !2442
  %14 = load i8*, i8** %buf, align 8, !dbg !9526, !tbaa !2442
  %15 = load i64, i64* %buf_size, align 8, !dbg !9527, !tbaa !2579
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #13, !dbg !9528
  store i64 %call16, i64* %r, align 8, !dbg !9529, !tbaa !2579
  %16 = load i64, i64* %r, align 8, !dbg !9530, !tbaa !2579
  store i64 %16, i64* %link_length, align 8, !dbg !9531, !tbaa !2579
  %17 = load i64, i64* %r, align 8, !dbg !9532, !tbaa !2579
  %cmp17 = icmp slt i64 %17, 0, !dbg !9534
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9535

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #17, !dbg !9536
  %18 = load i32, i32* %call19, align 4, !dbg !9536, !tbaa !2436, !ctir !27
  %cmp20 = icmp ne i32 %18, 34, !dbg !9537
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9538

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9539, metadata !DIExpression()), !dbg !9541
  %call22 = call i32* @__errno_location() #17, !dbg !9542
  %19 = load i32, i32* %call22, align 4, !dbg !9542, !tbaa !2436, !ctir !27
  store i32 %19, i32* %saved_errno, align 4, !dbg !9541, !tbaa !2436
  %20 = load i8*, i8** %buffer, align 8, !dbg !9543, !tbaa !2442
  call void @free(i8* %20) #13, !dbg !9544
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9545, !tbaa !2436
  %call23 = call i32* @__errno_location() #17, !dbg !9546
  store i32 %21, i32* %call23, align 4, !dbg !9547, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9548
  br label %return, !dbg !9548

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9549, !tbaa !2579
  %23 = load i64, i64* %buf_size, align 8, !dbg !9551, !tbaa !2579
  %cmp25 = icmp ult i64 %22, %23, !dbg !9552
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9553

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9554, !tbaa !2442
  %25 = load i64, i64* %link_length, align 8, !dbg !9556, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9554, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !9557, !tbaa !2497
  %26 = load i8*, i8** %buffer, align 8, !dbg !9558, !tbaa !2442
  %tobool27 = icmp ne i8* %26, null, !dbg !9558
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9560

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9561, !tbaa !2579
  %add29 = add i64 %27, 1, !dbg !9563
  %call30 = call noalias i8* @malloc(i64 %add29) #13, !dbg !9564
  store i8* %call30, i8** %buffer, align 8, !dbg !9565, !tbaa !2442
  %28 = load i8*, i8** %buffer, align 8, !dbg !9566, !tbaa !2442
  %tobool31 = icmp ne i8* %28, null, !dbg !9566
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9568

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9569, !tbaa !2442
  %30 = load i8*, i8** %buf, align 8, !dbg !9570, !tbaa !2442
  %31 = load i64, i64* %link_length, align 8, !dbg !9571, !tbaa !2579
  %add33 = add i64 %31, 1, !dbg !9572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9573
  store i8* %29, i8** %retval, align 8, !dbg !9574
  br label %return, !dbg !9574

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9575

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9576, !tbaa !2579
  %add35 = add i64 %32, 1, !dbg !9578
  %33 = load i64, i64* %buf_size, align 8, !dbg !9579, !tbaa !2579
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9580
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9581

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9582, metadata !DIExpression()), !dbg !9584
  %34 = load i8*, i8** %buffer, align 8, !dbg !9585, !tbaa !2442
  %35 = load i64, i64* %link_length, align 8, !dbg !9586, !tbaa !2579
  %add38 = add i64 %35, 1, !dbg !9587
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #13, !dbg !9588
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9584, !tbaa !2442
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9589, !tbaa !2442
  %cmp40 = icmp ne i8* %36, null, !dbg !9591
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9592

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9593, !tbaa !2442
  store i8* %37, i8** %buffer, align 8, !dbg !9594, !tbaa !2442
  br label %if.end42, !dbg !9595

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9596

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9597, !tbaa !2442
  store i8* %38, i8** %retval, align 8, !dbg !9598
  br label %return, !dbg !9598

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9599, !tbaa !2442
  call void @free(i8* %39) #13, !dbg !9600
  %40 = load i64, i64* %buf_size, align 8, !dbg !9601, !tbaa !2579
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9603
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9604

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9605, !tbaa !2579
  %mul = mul i64 %41, 2, !dbg !9605
  store i64 %mul, i64* %buf_size, align 8, !dbg !9605, !tbaa !2579
  br label %if.end54, !dbg !9606

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9607, !tbaa !2579
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9609
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9610

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9611, !tbaa !2579
  br label %if.end53, !dbg !9612

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #17, !dbg !9613
  store i32 12, i32* %call52, align 4, !dbg !9615, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9616
  br label %return, !dbg !9616

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9495, !llvm.loop !9617

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9619
  ret i8* %43, !dbg !9619
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #0 !dbg !9620 !ctir !341 {
entry:
  call void @usage(i32 1), !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9623 !ctir !1052 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %arglen = alloca i64, align 8, !ctir !149
  %matchind = alloca i64, align 8, !ctir !564
  %ambiguous = alloca i8, align 1, !ctir !141
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9626, metadata !DIExpression()), !dbg !9627
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9632, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !9634, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !9636, metadata !DIExpression()), !dbg !9637
  store i64 -1, i64* %matchind, align 8, !dbg !9637, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !9638, metadata !DIExpression()), !dbg !9639
  store i8 0, i8* %ambiguous, align 1, !dbg !9639, !tbaa !2461
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9640, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !9641
  store i64 %call, i64* %arglen, align 8, !dbg !9642, !tbaa !2579
  store i64 0, i64* %i, align 8, !dbg !9643, !tbaa !2579
  br label %for.cond, !dbg !9645

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9646, !tbaa !2442
  %2 = load i64, i64* %i, align 8, !dbg !9648, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9646, !ctir !567
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9646, !tbaa !2442
  %tobool = icmp ne i8* %3, null, !dbg !9649
  br i1 %tobool, label %for.body, label %for.end, !dbg !9649

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !9650, !tbaa !2442
  %5 = load i64, i64* %i, align 8, !dbg !9653, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !9650, !ctir !567
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !9650, !tbaa !2442
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9654, !tbaa !2442
  %8 = load i64, i64* %arglen, align 8, !dbg !9655, !tbaa !2579
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #16, !dbg !9656
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9656
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !9657

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9658, !tbaa !2442
  %10 = load i64, i64* %i, align 8, !dbg !9661, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !9658, !ctir !567
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !9658, !tbaa !2442
  %call5 = call i64 @strlen(i8* %11) #16, !dbg !9662
  %12 = load i64, i64* %arglen, align 8, !dbg !9663, !tbaa !2579
  %cmp = icmp eq i64 %call5, %12, !dbg !9664
  br i1 %cmp, label %if.then6, label %if.else, !dbg !9665

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !9666, !tbaa !2579
  store i64 %13, i64* %retval, align 8, !dbg !9667
  br label %return, !dbg !9667

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !9668, !tbaa !2579
  %cmp7 = icmp eq i64 %14, -1, !dbg !9670
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9671

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !9672, !tbaa !2579
  store i64 %15, i64* %matchind, align 8, !dbg !9673, !tbaa !2579
  br label %if.end16, !dbg !9674

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !9675, !tbaa !2442
  %cmp10 = icmp eq i8* %16, null, !dbg !9678
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !9679

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !9680, !tbaa !2442
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !9681, !tbaa !2579
  %19 = load i64, i64* %matchind, align 8, !dbg !9682, !tbaa !2579
  %mul = mul i64 %18, %19, !dbg !9683
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !9684
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !9685, !tbaa !2442
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !9686, !tbaa !2579
  %22 = load i64, i64* %i, align 8, !dbg !9687, !tbaa !2579
  %mul11 = mul i64 %21, %22, !dbg !9688
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !9689
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !9690, !tbaa !2579
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #16, !dbg !9691
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9691
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !9692

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !9693, !tbaa !2461
  br label %if.end, !dbg !9695

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !9696

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !9697

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !9698, !tbaa !2579
  %inc = add i64 %24, 1, !dbg !9698
  store i64 %inc, i64* %i, align 8, !dbg !9698, !tbaa !2579
  br label %for.cond, !dbg !9699, !llvm.loop !9700

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !9702, !tbaa !2461
  %tobool19 = trunc i8 %25 to i1, !dbg !9702
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !9704

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !9705
  br label %return, !dbg !9705

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !9706, !tbaa !2579
  store i64 %26, i64* %retval, align 8, !dbg !9707
  br label %return, !dbg !9707

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !9708
  ret i64 %27, !dbg !9708
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 !dbg !9709 !ctir !1054 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !146
  store i8* %context, i8** %context.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i8* %value, i8** %value.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !9714, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.declare(metadata i8** %format, metadata !9716, metadata !DIExpression()), !dbg !9717
  %0 = load i64, i64* %problem.addr, align 8, !dbg !9718, !tbaa !2579
  %cmp = icmp eq i64 %0, -1, !dbg !9719
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9718

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.257, i64 0, i64 0)) #13, !dbg !9720
  br label %cond.end, !dbg !9718

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.258, i64 0, i64 0)) #13, !dbg !9721
  br label %cond.end, !dbg !9718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !9718
  store i8* %cond, i8** %format, align 8, !dbg !9717, !tbaa !2442
  %1 = load i8*, i8** %format, align 8, !dbg !9722, !tbaa !2442
  %2 = load i8*, i8** %value.addr, align 8, !dbg !9723, !tbaa !2442
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !9724
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9725, !tbaa !2442
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !9726
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !9727
  ret void, !dbg !9728
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 !dbg !9729 !ctir !1056 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %last_val = alloca i8*, align 8, !ctir !146
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !9738, metadata !DIExpression()), !dbg !9739
  store i8* null, i8** %last_val, align 8, !dbg !9739, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.259, i64 0, i64 0)) #13, !dbg !9740
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9740, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9740
  store i64 0, i64* %i, align 8, !dbg !9741, !tbaa !2579
  br label %for.cond, !dbg !9743

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9744, !tbaa !2442
  %2 = load i64, i64* %i, align 8, !dbg !9746, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9744, !ctir !567
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9744, !tbaa !2442
  %tobool = icmp ne i8* %3, null, !dbg !9747
  br i1 %tobool, label %for.body, label %for.end, !dbg !9747

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !9748, !tbaa !2579
  %cmp = icmp eq i64 %4, 0, !dbg !9750
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9751

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !9752, !tbaa !2442
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !9753, !tbaa !2442
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9754, !tbaa !2579
  %8 = load i64, i64* %i, align 8, !dbg !9755, !tbaa !2579
  %mul = mul i64 %7, %8, !dbg !9756
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !9757
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !9758, !tbaa !2579
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #16, !dbg !9759
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9759
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9760

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9761, !tbaa !2442
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !9763, !tbaa !2442
  %12 = load i64, i64* %i, align 8, !dbg !9764, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !9763, !ctir !567
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !9763, !tbaa !2442
  %call5 = call i8* @quote(i8* %13), !dbg !9765
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.260, i64 0, i64 0), i8* %call5), !dbg !9766
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !9767, !tbaa !2442
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !9768, !tbaa !2579
  %16 = load i64, i64* %i, align 8, !dbg !9769, !tbaa !2579
  %mul7 = mul i64 %15, %16, !dbg !9770
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !9771
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !9772, !tbaa !2442
  br label %if.end, !dbg !9773

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9774, !tbaa !2442
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !9776, !tbaa !2442
  %19 = load i64, i64* %i, align 8, !dbg !9777, !tbaa !2579
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !9776, !ctir !567
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !9776, !tbaa !2442
  %call10 = call i8* @quote(i8* %20), !dbg !9778
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.261, i64 0, i64 0), i8* %call10), !dbg !9779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9780

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !9781, !tbaa !2579
  %inc = add i64 %21, 1, !dbg !9781
  store i64 %inc, i64* %i, align 8, !dbg !9781, !tbaa !2579
  br label %for.cond, !dbg !9782, !llvm.loop !9783

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9785, !tbaa !2442
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !9785
  ret void, !dbg !9786
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 !dbg !9787 !ctir !1092 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !564
  store i8* %context, i8** %context.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.declare(metadata i64* %res, metadata !9800, metadata !DIExpression()), !dbg !9801
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9802, !tbaa !2442
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9803, !tbaa !2442
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !9804, !tbaa !2442
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !9805, !tbaa !2579
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #16, !dbg !9806
  store i64 %call, i64* %res, align 8, !dbg !9801, !tbaa !2579
  %4 = load i64, i64* %res, align 8, !dbg !9807, !tbaa !2579
  %cmp = icmp sge i64 %4, 0, !dbg !9809
  br i1 %cmp, label %if.then, label %if.end, !dbg !9810

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !9811, !tbaa !2579
  store i64 %5, i64* %retval, align 8, !dbg !9812
  br label %return, !dbg !9812

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !9813, !tbaa !2442
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9814, !tbaa !2442
  %8 = load i64, i64* %res, align 8, !dbg !9815, !tbaa !2579
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !9816
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9817, !tbaa !2442
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !9818, !tbaa !2442
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !9819, !tbaa !2579
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !9820
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !9821, !tbaa !2442
  call void %12(), !dbg !9822
  store i64 -1, i64* %retval, align 8, !dbg !9823
  br label %return, !dbg !9823

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !9824
  ret i64 %13, !dbg !9824
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9825 !ctir !1094 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %value, i8** %value.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9834, metadata !DIExpression()), !dbg !9835
  store i64 0, i64* %i, align 8, !dbg !9836, !tbaa !2579
  br label %for.cond, !dbg !9838

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !9839, !tbaa !2442
  %1 = load i64, i64* %i, align 8, !dbg !9841, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !9839, !ctir !567
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9839, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !9842
  br i1 %tobool, label %for.body, label %for.end, !dbg !9842

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !9843, !tbaa !2442
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !9845, !tbaa !2442
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !9846, !tbaa !2579
  %6 = load i64, i64* %i, align 8, !dbg !9847, !tbaa !2579
  %mul = mul i64 %5, %6, !dbg !9848
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !9849
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9850, !tbaa !2579
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #16, !dbg !9851
  %tobool1 = icmp ne i32 %call, 0, !dbg !9851
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9852

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !9853, !tbaa !2442
  %9 = load i64, i64* %i, align 8, !dbg !9854, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !9853, !ctir !567
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !9853, !tbaa !2442
  store i8* %10, i8** %retval, align 8, !dbg !9855
  br label %return, !dbg !9855

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9856

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !9857, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !9857
  store i64 %inc, i64* %i, align 8, !dbg !9857, !tbaa !2579
  br label %for.cond, !dbg !9858, !llvm.loop !9859

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9861
  br label %return, !dbg !9861

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !9862
  ret i8* %12, !dbg !9862
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #0 !dbg !9863 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  %0 = load i32, i32* %c.addr, align 4, !dbg !9867, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9868

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9869
  br label %return, !dbg !9869

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9871
  br label %return, !dbg !9871

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9872
  ret i1 %1, !dbg !9872
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #0 !dbg !9873 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  %0 = load i32, i32* %c.addr, align 4, !dbg !9876, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9877

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9878
  br label %return, !dbg !9878

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9880
  br label %return, !dbg !9880

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9881
  ret i1 %1, !dbg !9881
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #0 !dbg !9882 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9883, metadata !DIExpression()), !dbg !9884
  %0 = load i32, i32* %c.addr, align 4, !dbg !9885, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9886

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9887
  br label %return, !dbg !9887

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9889
  br label %return, !dbg !9889

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9890
  ret i1 %1, !dbg !9890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #0 !dbg !9891 !ctir !680 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  %0 = load i32, i32* %c.addr, align 4, !dbg !9894, !tbaa !2436
  %cmp = icmp eq i32 %0, 32, !dbg !9895
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9896

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9897, !tbaa !2436
  %cmp1 = icmp eq i32 %1, 9, !dbg !9898
  br label %lor.end, !dbg !9896

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !9899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #0 !dbg !9900 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  %0 = load i32, i32* %c.addr, align 4, !dbg !9903, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !9904

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9905
  br label %return, !dbg !9905

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9907
  br label %return, !dbg !9907

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9908
  ret i1 %1, !dbg !9908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #0 !dbg !9909 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9910, metadata !DIExpression()), !dbg !9911
  %0 = load i32, i32* %c.addr, align 4, !dbg !9912, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !9913

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9914
  br label %return, !dbg !9914

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9916
  br label %return, !dbg !9916

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9917
  ret i1 %1, !dbg !9917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #0 !dbg !9918 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  %0 = load i32, i32* %c.addr, align 4, !dbg !9921, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9922

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9923
  br label %return, !dbg !9923

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9925
  br label %return, !dbg !9925

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9926
  ret i1 %1, !dbg !9926
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #0 !dbg !9927 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  %0 = load i32, i32* %c.addr, align 4, !dbg !9930, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9931

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9932
  br label %return, !dbg !9932

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9934
  br label %return, !dbg !9934

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9935
  ret i1 %1, !dbg !9935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #0 !dbg !9936 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9937, metadata !DIExpression()), !dbg !9938
  %0 = load i32, i32* %c.addr, align 4, !dbg !9939, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9940

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9941
  br label %return, !dbg !9941

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9943
  br label %return, !dbg !9943

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9944
  ret i1 %1, !dbg !9944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #0 !dbg !9945 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  %0 = load i32, i32* %c.addr, align 4, !dbg !9948, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !9949

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9950
  br label %return, !dbg !9950

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9952
  br label %return, !dbg !9952

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9953
  ret i1 %1, !dbg !9953
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #0 !dbg !9954 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  %0 = load i32, i32* %c.addr, align 4, !dbg !9957, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !9958

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9959
  br label %return, !dbg !9959

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9961
  br label %return, !dbg !9961

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9962
  ret i1 %1, !dbg !9962
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #0 !dbg !9963 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9964, metadata !DIExpression()), !dbg !9965
  %0 = load i32, i32* %c.addr, align 4, !dbg !9966, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9967

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9968
  br label %return, !dbg !9968

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9970
  br label %return, !dbg !9970

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9971
  ret i1 %1, !dbg !9971
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #0 !dbg !9972 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  %0 = load i32, i32* %c.addr, align 4, !dbg !9975, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !9976

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9977
  br label %return, !dbg !9977

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9979
  br label %return, !dbg !9979

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9980
  ret i1 %1, !dbg !9980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #0 !dbg !9981 !ctir !1655 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9982, metadata !DIExpression()), !dbg !9983
  %0 = load i32, i32* %c.addr, align 4, !dbg !9984, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9985

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9986, !tbaa !2436
  %sub = sub nsw i32 %1, 65, !dbg !9988
  %add = add nsw i32 %sub, 97, !dbg !9989
  store i32 %add, i32* %retval, align 4, !dbg !9990
  br label %return, !dbg !9990

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9991, !tbaa !2436
  store i32 %2, i32* %retval, align 4, !dbg !9992
  br label %return, !dbg !9992

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9993
  ret i32 %3, !dbg !9993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #0 !dbg !9994 !ctir !1655 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  %0 = load i32, i32* %c.addr, align 4, !dbg !9997, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9998

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9999, !tbaa !2436
  %sub = sub nsw i32 %1, 97, !dbg !10001
  %add = add nsw i32 %sub, 65, !dbg !10002
  store i32 %add, i32* %retval, align 4, !dbg !10003
  br label %return, !dbg !10003

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !10004, !tbaa !2436
  store i32 %2, i32* %retval, align 4, !dbg !10005
  br label %return, !dbg !10005

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !10006
  ret i32 %3, !dbg !10006
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strncasecmp(i8* %s1, i8* %s2, i64 %n) #9 !dbg !10007 !ctir !1662 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %p1 = alloca i8*, align 8, !ctir !1660
  %p2 = alloca i8*, align 8, !ctir !1660
  %c1 = alloca i8, align 1, !ctir !591
  %c2 = alloca i8, align 1, !ctir !591
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !10011, metadata !DIExpression()), !dbg !10012
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !10015, metadata !DIExpression()), !dbg !10016
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !10017, !tbaa !2442
  store i8* %0, i8** %p1, align 8, !dbg !10016, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !10018, metadata !DIExpression()), !dbg !10019
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !10020, !tbaa !2442
  store i8* %1, i8** %p2, align 8, !dbg !10019, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !10023, metadata !DIExpression()), !dbg !10024
  %2 = load i8*, i8** %p1, align 8, !dbg !10025, !tbaa !2442
  %3 = load i8*, i8** %p2, align 8, !dbg !10027, !tbaa !2442
  %cmp = icmp eq i8* %2, %3, !dbg !10028
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10029

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %n.addr, align 8, !dbg !10030, !tbaa !2579
  %cmp1 = icmp eq i64 %4, 0, !dbg !10031
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10032

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10033
  br label %return, !dbg !10033

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !10034

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i8*, i8** %p1, align 8, !dbg !10035, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !10037, !tbaa !2497, !ctir !1661
  %conv = zext i8 %6 to i32, !dbg !10037
  %call = call i32 @c_tolower(i32 %conv), !dbg !10038
  %conv2 = trunc i32 %call to i8, !dbg !10038
  store i8 %conv2, i8* %c1, align 1, !dbg !10039, !tbaa !2497
  %7 = load i8*, i8** %p2, align 8, !dbg !10040, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !10041, !tbaa !2497, !ctir !1661
  %conv3 = zext i8 %8 to i32, !dbg !10041
  %call4 = call i32 @c_tolower(i32 %conv3), !dbg !10042
  %conv5 = trunc i32 %call4 to i8, !dbg !10042
  store i8 %conv5, i8* %c2, align 1, !dbg !10043, !tbaa !2497
  %9 = load i64, i64* %n.addr, align 8, !dbg !10044, !tbaa !2579
  %dec = add i64 %9, -1, !dbg !10044
  store i64 %dec, i64* %n.addr, align 8, !dbg !10044, !tbaa !2579
  %cmp6 = icmp eq i64 %dec, 0, !dbg !10046
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8, !dbg !10047

lor.lhs.false8:                                   ; preds = %do.body
  %10 = load i8, i8* %c1, align 1, !dbg !10048, !tbaa !2497
  %conv9 = zext i8 %10 to i32, !dbg !10048
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !10049
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10050

if.then12:                                        ; preds = %lor.lhs.false8, %do.body
  br label %do.end, !dbg !10051

if.end13:                                         ; preds = %lor.lhs.false8
  %11 = load i8*, i8** %p1, align 8, !dbg !10052, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10052
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !10052, !tbaa !2442
  %12 = load i8*, i8** %p2, align 8, !dbg !10053, !tbaa !2442
  %incdec.ptr14 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !10053
  store i8* %incdec.ptr14, i8** %p2, align 8, !dbg !10053, !tbaa !2442
  br label %do.cond, !dbg !10054

do.cond:                                          ; preds = %if.end13
  %13 = load i8, i8* %c1, align 1, !dbg !10055, !tbaa !2497
  %conv15 = zext i8 %13 to i32, !dbg !10055
  %14 = load i8, i8* %c2, align 1, !dbg !10056, !tbaa !2497
  %conv16 = zext i8 %14 to i32, !dbg !10056
  %cmp17 = icmp eq i32 %conv15, %conv16, !dbg !10057
  br i1 %cmp17, label %do.body, label %do.end, !dbg !10054, !llvm.loop !10058

do.end:                                           ; preds = %do.cond, %if.then12
  %15 = load i8, i8* %c1, align 1, !dbg !10060, !tbaa !2497
  %conv19 = zext i8 %15 to i32, !dbg !10060
  %16 = load i8, i8* %c2, align 1, !dbg !10062, !tbaa !2497
  %conv20 = zext i8 %16 to i32, !dbg !10062
  %sub = sub nsw i32 %conv19, %conv20, !dbg !10063
  store i32 %sub, i32* %retval, align 4, !dbg !10064
  br label %return, !dbg !10064

return:                                           ; preds = %do.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10065
  ret i32 %17, !dbg !10065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) #0 !dbg !10066 !ctir !1675 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %can_mode.addr = alloca i32, align 4
  %rname = alloca i8*, align 8, !ctir !143
  %dest = alloca i8*, align 8, !ctir !143
  %extra_buf = alloca i8*, align 8, !ctir !143
  %start = alloca i8*, align 8, !ctir !146
  %end = alloca i8*, align 8, !ctir !146
  %rname_limit = alloca i8*, align 8, !ctir !146
  %extra_len = alloca i64, align 8, !ctir !149
  %ht = alloca %struct.hash_table*, align 8, !ctir !244
  %saved_errno = alloca i32, align 4, !ctir !27
  %can_flags = alloca i32, align 4, !ctir !27
  %logical = alloca i8, align 1, !ctir !141
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %st = alloca %struct.stat, align 8, !ctir !1683
  %dest_offset = alloca i64, align 8, !ctir !564
  %new_size = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %n = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %pfxlen = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10068, metadata !DIExpression()), !dbg !10069
  store i32 %can_mode, i32* %can_mode.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %can_mode.addr, metadata !10070, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.declare(metadata i8** %rname, metadata !10072, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !10074, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.declare(metadata i8** %extra_buf, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i8* null, i8** %extra_buf, align 8, !dbg !10077, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %start, metadata !10078, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.declare(metadata i8** %end, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.declare(metadata i8** %rname_limit, metadata !10082, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.declare(metadata i64* %extra_len, metadata !10084, metadata !DIExpression()), !dbg !10085
  store i64 0, i64* %extra_len, align 8, !dbg !10085, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht, metadata !10086, metadata !DIExpression()), !dbg !10087
  store %struct.hash_table* null, %struct.hash_table** %ht, align 8, !dbg !10087, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10088, metadata !DIExpression()), !dbg !10089
  call void @llvm.dbg.declare(metadata i32* %can_flags, metadata !10090, metadata !DIExpression()), !dbg !10091
  %0 = load i32, i32* %can_mode.addr, align 4, !dbg !10092, !tbaa !2497
  %and = and i32 %0, -4, !dbg !10093
  store i32 %and, i32* %can_flags, align 4, !dbg !10091, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8* %logical, metadata !10094, metadata !DIExpression()), !dbg !10095
  %1 = load i32, i32* %can_flags, align 4, !dbg !10096, !tbaa !2436
  %and1 = and i32 %1, 4, !dbg !10097
  %tobool = icmp ne i32 %and1, 0, !dbg !10096
  %frombool = zext i1 %tobool to i8, !dbg !10095
  store i8 %frombool, i8* %logical, align 1, !dbg !10095, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10098, metadata !DIExpression()), !dbg !10099
  %2 = load i32, i32* %can_mode.addr, align 4, !dbg !10100, !tbaa !2497
  %and2 = and i32 %2, 3, !dbg !10100
  store i32 %and2, i32* %can_mode.addr, align 4, !dbg !10100, !tbaa !2497
  %3 = load i32, i32* %can_mode.addr, align 4, !dbg !10101, !tbaa !2497
  %4 = load i32, i32* %can_mode.addr, align 4, !dbg !10101, !tbaa !2497
  %sub = sub i32 %4, 1, !dbg !10101
  %and3 = and i32 %3, %sub, !dbg !10101
  %cmp = icmp ne i32 %and3, 0, !dbg !10101
  br i1 %cmp, label %if.then, label %if.end, !dbg !10103

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !10104
  store i32 22, i32* %call, align 4, !dbg !10106, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10107
  br label %return, !dbg !10107

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !10108, !tbaa !2442
  %cmp4 = icmp eq i8* %5, null, !dbg !10110
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !10111

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #17, !dbg !10112
  store i32 22, i32* %call6, align 4, !dbg !10114, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10115
  br label %return, !dbg !10115

if.end7:                                          ; preds = %if.end
  %6 = load i8*, i8** %name.addr, align 8, !dbg !10116, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !10116, !ctir !146
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10116, !tbaa !2497
  %conv = sext i8 %7 to i32, !dbg !10116
  %cmp8 = icmp eq i32 %conv, 0, !dbg !10118
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !10119

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #17, !dbg !10120
  store i32 2, i32* %call11, align 4, !dbg !10122, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10123
  br label %return, !dbg !10123

if.end12:                                         ; preds = %if.end7
  store i64 0, i64* %prefix_len, align 8, !dbg !10124, !tbaa !2579
  %8 = load i8*, i8** %name.addr, align 8, !dbg !10125, !tbaa !2442
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !10125, !ctir !146
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !10125, !tbaa !2497
  %conv14 = sext i8 %9 to i32, !dbg !10125
  %cmp15 = icmp eq i32 %conv14, 47, !dbg !10125
  br i1 %cmp15, label %if.else32, label %if.then17, !dbg !10127

if.then17:                                        ; preds = %if.end12
  %call18 = call i8* @xgetcwd(), !dbg !10128
  store i8* %call18, i8** %rname, align 8, !dbg !10130, !tbaa !2442
  %10 = load i8*, i8** %rname, align 8, !dbg !10131, !tbaa !2442
  %tobool19 = icmp ne i8* %10, null, !dbg !10131
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !10133

if.then20:                                        ; preds = %if.then17
  store i8* null, i8** %retval, align 8, !dbg !10134
  br label %return, !dbg !10134

if.end21:                                         ; preds = %if.then17
  %11 = load i8*, i8** %rname, align 8, !dbg !10135, !tbaa !2442
  %call22 = call i8* @strchr(i8* %11, i32 0) #16, !dbg !10136
  store i8* %call22, i8** %dest, align 8, !dbg !10137, !tbaa !2442
  %12 = load i8*, i8** %dest, align 8, !dbg !10138, !tbaa !2442
  %13 = load i8*, i8** %rname, align 8, !dbg !10140, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !10141
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !10141
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10141
  %cmp23 = icmp slt i64 %sub.ptr.sub, 4096, !dbg !10142
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !10143

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10144, metadata !DIExpression()), !dbg !10146
  %14 = load i8*, i8** %rname, align 8, !dbg !10147, !tbaa !2442
  %call26 = call i8* @xrealloc(i8* %14, i64 4096), !dbg !10148
  store i8* %call26, i8** %p, align 8, !dbg !10146, !tbaa !2442
  %15 = load i8*, i8** %p, align 8, !dbg !10149, !tbaa !2442
  %16 = load i8*, i8** %dest, align 8, !dbg !10150, !tbaa !2442
  %17 = load i8*, i8** %rname, align 8, !dbg !10151, !tbaa !2442
  %sub.ptr.lhs.cast27 = ptrtoint i8* %16 to i64, !dbg !10152
  %sub.ptr.rhs.cast28 = ptrtoint i8* %17 to i64, !dbg !10152
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !10152
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !10153
  store i8* %add.ptr, i8** %dest, align 8, !dbg !10154, !tbaa !2442
  %18 = load i8*, i8** %p, align 8, !dbg !10155, !tbaa !2442
  store i8* %18, i8** %rname, align 8, !dbg !10156, !tbaa !2442
  %19 = load i8*, i8** %rname, align 8, !dbg !10157, !tbaa !2442
  %add.ptr30 = getelementptr inbounds i8, i8* %19, i64 4096, !dbg !10158
  store i8* %add.ptr30, i8** %rname_limit, align 8, !dbg !10159, !tbaa !2442
  br label %if.end31, !dbg !10160

if.else:                                          ; preds = %if.end21
  %20 = load i8*, i8** %dest, align 8, !dbg !10161, !tbaa !2442
  store i8* %20, i8** %rname_limit, align 8, !dbg !10163, !tbaa !2442
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  %21 = load i8*, i8** %name.addr, align 8, !dbg !10164, !tbaa !2442
  store i8* %21, i8** %start, align 8, !dbg !10165, !tbaa !2442
  store i64 0, i64* %prefix_len, align 8, !dbg !10166, !tbaa !2579
  br label %if.end40, !dbg !10167

if.else32:                                        ; preds = %if.end12
  %call33 = call noalias i8* @xmalloc(i64 4096), !dbg !10168
  store i8* %call33, i8** %rname, align 8, !dbg !10170, !tbaa !2442
  %22 = load i8*, i8** %rname, align 8, !dbg !10171, !tbaa !2442
  %add.ptr34 = getelementptr inbounds i8, i8* %22, i64 4096, !dbg !10172
  store i8* %add.ptr34, i8** %rname_limit, align 8, !dbg !10173, !tbaa !2442
  %23 = load i8*, i8** %rname, align 8, !dbg !10174, !tbaa !2442
  store i8* %23, i8** %dest, align 8, !dbg !10175, !tbaa !2442
  %24 = load i64, i64* %prefix_len, align 8, !dbg !10176, !tbaa !2579
  %tobool35 = icmp ne i64 %24, 0, !dbg !10176
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10178

if.then36:                                        ; preds = %if.else32
  %25 = load i8*, i8** %rname, align 8, !dbg !10179, !tbaa !2442
  %26 = load i8*, i8** %name.addr, align 8, !dbg !10181, !tbaa !2442
  %27 = load i64, i64* %prefix_len, align 8, !dbg !10182, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false), !dbg !10183
  %28 = load i64, i64* %prefix_len, align 8, !dbg !10184, !tbaa !2579
  %29 = load i8*, i8** %dest, align 8, !dbg !10185, !tbaa !2442
  %add.ptr37 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !10185
  store i8* %add.ptr37, i8** %dest, align 8, !dbg !10185, !tbaa !2442
  br label %if.end38, !dbg !10186

if.end38:                                         ; preds = %if.then36, %if.else32
  %30 = load i8*, i8** %dest, align 8, !dbg !10187, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !10187
  store i8* %incdec.ptr, i8** %dest, align 8, !dbg !10187, !tbaa !2442
  store i8 47, i8* %30, align 1, !dbg !10188, !tbaa !2497, !ctir !144
  %31 = load i8*, i8** %name.addr, align 8, !dbg !10189, !tbaa !2442
  %32 = load i64, i64* %prefix_len, align 8, !dbg !10190, !tbaa !2579
  %add.ptr39 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !10191
  store i8* %add.ptr39, i8** %start, align 8, !dbg !10192, !tbaa !2442
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.end31
  br label %for.cond, !dbg !10193

for.cond:                                         ; preds = %for.inc292, %if.end40
  %33 = load i8*, i8** %start, align 8, !dbg !10194, !tbaa !2442
  %34 = load i8, i8* %33, align 1, !dbg !10197, !tbaa !2497, !ctir !147
  %tobool41 = icmp ne i8 %34, 0, !dbg !10198
  br i1 %tobool41, label %for.body, label %for.end293, !dbg !10198

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !10199

while.cond:                                       ; preds = %while.body, %for.body
  %35 = load i8*, i8** %start, align 8, !dbg !10201, !tbaa !2442
  %36 = load i8, i8* %35, align 1, !dbg !10201, !tbaa !2497, !ctir !147
  %conv42 = sext i8 %36 to i32, !dbg !10201
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !10201
  br i1 %cmp43, label %while.body, label %while.end, !dbg !10199

while.body:                                       ; preds = %while.cond
  %37 = load i8*, i8** %start, align 8, !dbg !10202, !tbaa !2442
  %incdec.ptr45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !10202
  store i8* %incdec.ptr45, i8** %start, align 8, !dbg !10202, !tbaa !2442
  br label %while.cond, !dbg !10199, !llvm.loop !10203

while.end:                                        ; preds = %while.cond
  %38 = load i8*, i8** %start, align 8, !dbg !10205, !tbaa !2442
  store i8* %38, i8** %end, align 8, !dbg !10207, !tbaa !2442
  br label %for.cond46, !dbg !10208

for.cond46:                                       ; preds = %for.inc, %while.end
  %39 = load i8*, i8** %end, align 8, !dbg !10209, !tbaa !2442
  %40 = load i8, i8* %39, align 1, !dbg !10211, !tbaa !2497, !ctir !147
  %conv47 = sext i8 %40 to i32, !dbg !10211
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !10211
  br i1 %tobool48, label %land.rhs, label %land.end, !dbg !10212

land.rhs:                                         ; preds = %for.cond46
  %41 = load i8*, i8** %end, align 8, !dbg !10213, !tbaa !2442
  %42 = load i8, i8* %41, align 1, !dbg !10213, !tbaa !2497, !ctir !147
  %conv49 = sext i8 %42 to i32, !dbg !10213
  %cmp50 = icmp eq i32 %conv49, 47, !dbg !10213
  %lnot = xor i1 %cmp50, true, !dbg !10214
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond46
  %43 = phi i1 [ false, %for.cond46 ], [ %lnot, %land.rhs ], !dbg !10215
  br i1 %43, label %for.body52, label %for.end, !dbg !10216

for.body52:                                       ; preds = %land.end
  br label %for.inc, !dbg !10216

for.inc:                                          ; preds = %for.body52
  %44 = load i8*, i8** %end, align 8, !dbg !10217, !tbaa !2442
  %incdec.ptr53 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !10217
  store i8* %incdec.ptr53, i8** %end, align 8, !dbg !10217, !tbaa !2442
  br label %for.cond46, !dbg !10218, !llvm.loop !10219

for.end:                                          ; preds = %land.end
  %45 = load i8*, i8** %end, align 8, !dbg !10221, !tbaa !2442
  %46 = load i8*, i8** %start, align 8, !dbg !10223, !tbaa !2442
  %sub.ptr.lhs.cast54 = ptrtoint i8* %45 to i64, !dbg !10224
  %sub.ptr.rhs.cast55 = ptrtoint i8* %46 to i64, !dbg !10224
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !10224
  %cmp57 = icmp eq i64 %sub.ptr.sub56, 0, !dbg !10225
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !10226

if.then59:                                        ; preds = %for.end
  br label %for.end293, !dbg !10227

if.else60:                                        ; preds = %for.end
  %47 = load i8*, i8** %end, align 8, !dbg !10228, !tbaa !2442
  %48 = load i8*, i8** %start, align 8, !dbg !10230, !tbaa !2442
  %sub.ptr.lhs.cast61 = ptrtoint i8* %47 to i64, !dbg !10231
  %sub.ptr.rhs.cast62 = ptrtoint i8* %48 to i64, !dbg !10231
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62, !dbg !10231
  %cmp64 = icmp eq i64 %sub.ptr.sub63, 1, !dbg !10232
  br i1 %cmp64, label %land.lhs.true, label %if.else71, !dbg !10233

land.lhs.true:                                    ; preds = %if.else60
  %49 = load i8*, i8** %start, align 8, !dbg !10234, !tbaa !2442
  %arrayidx66 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !10234, !ctir !146
  %50 = load i8, i8* %arrayidx66, align 1, !dbg !10234, !tbaa !2497
  %conv67 = sext i8 %50 to i32, !dbg !10234
  %cmp68 = icmp eq i32 %conv67, 46, !dbg !10235
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !10236

if.then70:                                        ; preds = %land.lhs.true
  br label %if.end290, !dbg !10236

if.else71:                                        ; preds = %land.lhs.true, %if.else60
  %51 = load i8*, i8** %end, align 8, !dbg !10237, !tbaa !2442
  %52 = load i8*, i8** %start, align 8, !dbg !10239, !tbaa !2442
  %sub.ptr.lhs.cast72 = ptrtoint i8* %51 to i64, !dbg !10240
  %sub.ptr.rhs.cast73 = ptrtoint i8* %52 to i64, !dbg !10240
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !10240
  %cmp75 = icmp eq i64 %sub.ptr.sub74, 2, !dbg !10241
  br i1 %cmp75, label %land.lhs.true77, label %if.else109, !dbg !10242

land.lhs.true77:                                  ; preds = %if.else71
  %53 = load i8*, i8** %start, align 8, !dbg !10243, !tbaa !2442
  %arrayidx78 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !10243, !ctir !146
  %54 = load i8, i8* %arrayidx78, align 1, !dbg !10243, !tbaa !2497
  %conv79 = sext i8 %54 to i32, !dbg !10243
  %cmp80 = icmp eq i32 %conv79, 46, !dbg !10244
  br i1 %cmp80, label %land.lhs.true82, label %if.else109, !dbg !10245

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %55 = load i8*, i8** %start, align 8, !dbg !10246, !tbaa !2442
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !10246, !ctir !146
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !10246, !tbaa !2497
  %conv84 = sext i8 %56 to i32, !dbg !10246
  %cmp85 = icmp eq i32 %conv84, 46, !dbg !10247
  br i1 %cmp85, label %if.then87, label %if.else109, !dbg !10248

if.then87:                                        ; preds = %land.lhs.true82
  %57 = load i8*, i8** %dest, align 8, !dbg !10249, !tbaa !2442
  %58 = load i8*, i8** %rname, align 8, !dbg !10252, !tbaa !2442
  %59 = load i64, i64* %prefix_len, align 8, !dbg !10253, !tbaa !2579
  %add.ptr88 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !10254
  %add.ptr89 = getelementptr inbounds i8, i8* %add.ptr88, i64 1, !dbg !10255
  %cmp90 = icmp ugt i8* %57, %add.ptr89, !dbg !10256
  br i1 %cmp90, label %if.then92, label %if.end108, !dbg !10257

if.then92:                                        ; preds = %if.then87
  %60 = load i8*, i8** %dest, align 8, !dbg !10258, !tbaa !2442
  %incdec.ptr93 = getelementptr inbounds i8, i8* %60, i32 -1, !dbg !10258
  store i8* %incdec.ptr93, i8** %dest, align 8, !dbg !10258, !tbaa !2442
  br label %for.cond94, !dbg !10258

for.cond94:                                       ; preds = %for.inc105, %if.then92
  %61 = load i8*, i8** %dest, align 8, !dbg !10260, !tbaa !2442
  %62 = load i8*, i8** %rname, align 8, !dbg !10262, !tbaa !2442
  %cmp95 = icmp ugt i8* %61, %62, !dbg !10263
  br i1 %cmp95, label %land.rhs97, label %land.end103, !dbg !10264

land.rhs97:                                       ; preds = %for.cond94
  %63 = load i8*, i8** %dest, align 8, !dbg !10265, !tbaa !2442
  %arrayidx98 = getelementptr inbounds i8, i8* %63, i64 -1, !dbg !10265, !ctir !143
  %64 = load i8, i8* %arrayidx98, align 1, !dbg !10265, !tbaa !2497
  %conv99 = sext i8 %64 to i32, !dbg !10265
  %cmp100 = icmp eq i32 %conv99, 47, !dbg !10265
  %lnot102 = xor i1 %cmp100, true, !dbg !10266
  br label %land.end103

land.end103:                                      ; preds = %land.rhs97, %for.cond94
  %65 = phi i1 [ false, %for.cond94 ], [ %lnot102, %land.rhs97 ], !dbg !10267
  br i1 %65, label %for.body104, label %for.end107, !dbg !10268

for.body104:                                      ; preds = %land.end103
  br label %for.inc105, !dbg !10269

for.inc105:                                       ; preds = %for.body104
  %66 = load i8*, i8** %dest, align 8, !dbg !10270, !tbaa !2442
  %incdec.ptr106 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !10270
  store i8* %incdec.ptr106, i8** %dest, align 8, !dbg !10270, !tbaa !2442
  br label %for.cond94, !dbg !10271, !llvm.loop !10272

for.end107:                                       ; preds = %land.end103
  br label %if.end108, !dbg !10273

if.end108:                                        ; preds = %for.end107, %if.then87
  br label %if.end289, !dbg !10274

if.else109:                                       ; preds = %land.lhs.true82, %land.lhs.true77, %if.else71
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !10275, metadata !DIExpression()), !dbg !10277
  %67 = load i8*, i8** %dest, align 8, !dbg !10278, !tbaa !2442
  %arrayidx110 = getelementptr inbounds i8, i8* %67, i64 -1, !dbg !10278, !ctir !143
  %68 = load i8, i8* %arrayidx110, align 1, !dbg !10278, !tbaa !2497
  %conv111 = sext i8 %68 to i32, !dbg !10278
  %cmp112 = icmp eq i32 %conv111, 47, !dbg !10278
  br i1 %cmp112, label %if.end116, label %if.then114, !dbg !10280

if.then114:                                       ; preds = %if.else109
  %69 = load i8*, i8** %dest, align 8, !dbg !10281, !tbaa !2442
  %incdec.ptr115 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !10281
  store i8* %incdec.ptr115, i8** %dest, align 8, !dbg !10281, !tbaa !2442
  store i8 47, i8* %69, align 1, !dbg !10282, !tbaa !2497, !ctir !144
  br label %if.end116, !dbg !10283

if.end116:                                        ; preds = %if.then114, %if.else109
  %70 = load i8*, i8** %dest, align 8, !dbg !10284, !tbaa !2442
  %71 = load i8*, i8** %end, align 8, !dbg !10286, !tbaa !2442
  %72 = load i8*, i8** %start, align 8, !dbg !10287, !tbaa !2442
  %sub.ptr.lhs.cast117 = ptrtoint i8* %71 to i64, !dbg !10288
  %sub.ptr.rhs.cast118 = ptrtoint i8* %72 to i64, !dbg !10288
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !10288
  %add.ptr120 = getelementptr inbounds i8, i8* %70, i64 %sub.ptr.sub119, !dbg !10289
  %73 = load i8*, i8** %rname_limit, align 8, !dbg !10290, !tbaa !2442
  %cmp121 = icmp uge i8* %add.ptr120, %73, !dbg !10291
  br i1 %cmp121, label %if.then123, label %if.end147, !dbg !10292

if.then123:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata i64* %dest_offset, metadata !10293, metadata !DIExpression()), !dbg !10295
  %74 = load i8*, i8** %dest, align 8, !dbg !10296, !tbaa !2442
  %75 = load i8*, i8** %rname, align 8, !dbg !10297, !tbaa !2442
  %sub.ptr.lhs.cast124 = ptrtoint i8* %74 to i64, !dbg !10298
  %sub.ptr.rhs.cast125 = ptrtoint i8* %75 to i64, !dbg !10298
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !10298
  store i64 %sub.ptr.sub126, i64* %dest_offset, align 8, !dbg !10295, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !10299, metadata !DIExpression()), !dbg !10300
  %76 = load i8*, i8** %rname_limit, align 8, !dbg !10301, !tbaa !2442
  %77 = load i8*, i8** %rname, align 8, !dbg !10302, !tbaa !2442
  %sub.ptr.lhs.cast127 = ptrtoint i8* %76 to i64, !dbg !10303
  %sub.ptr.rhs.cast128 = ptrtoint i8* %77 to i64, !dbg !10303
  %sub.ptr.sub129 = sub i64 %sub.ptr.lhs.cast127, %sub.ptr.rhs.cast128, !dbg !10303
  store i64 %sub.ptr.sub129, i64* %new_size, align 8, !dbg !10300, !tbaa !2579
  %78 = load i8*, i8** %end, align 8, !dbg !10304, !tbaa !2442
  %79 = load i8*, i8** %start, align 8, !dbg !10306, !tbaa !2442
  %sub.ptr.lhs.cast130 = ptrtoint i8* %78 to i64, !dbg !10307
  %sub.ptr.rhs.cast131 = ptrtoint i8* %79 to i64, !dbg !10307
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131, !dbg !10307
  %add = add nsw i64 %sub.ptr.sub132, 1, !dbg !10308
  %cmp133 = icmp sgt i64 %add, 4096, !dbg !10309
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !10310

if.then135:                                       ; preds = %if.then123
  %80 = load i8*, i8** %end, align 8, !dbg !10311, !tbaa !2442
  %81 = load i8*, i8** %start, align 8, !dbg !10312, !tbaa !2442
  %sub.ptr.lhs.cast136 = ptrtoint i8* %80 to i64, !dbg !10313
  %sub.ptr.rhs.cast137 = ptrtoint i8* %81 to i64, !dbg !10313
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !10313
  %add139 = add nsw i64 %sub.ptr.sub138, 1, !dbg !10314
  %82 = load i64, i64* %new_size, align 8, !dbg !10315, !tbaa !2579
  %add140 = add i64 %82, %add139, !dbg !10315
  store i64 %add140, i64* %new_size, align 8, !dbg !10315, !tbaa !2579
  br label %if.end143, !dbg !10316

if.else141:                                       ; preds = %if.then123
  %83 = load i64, i64* %new_size, align 8, !dbg !10317, !tbaa !2579
  %add142 = add i64 %83, 4096, !dbg !10317
  store i64 %add142, i64* %new_size, align 8, !dbg !10317, !tbaa !2579
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then135
  %84 = load i8*, i8** %rname, align 8, !dbg !10318, !tbaa !2442
  %85 = load i64, i64* %new_size, align 8, !dbg !10319, !tbaa !2579
  %call144 = call i8* @xrealloc(i8* %84, i64 %85), !dbg !10320
  store i8* %call144, i8** %rname, align 8, !dbg !10321, !tbaa !2442
  %86 = load i8*, i8** %rname, align 8, !dbg !10322, !tbaa !2442
  %87 = load i64, i64* %new_size, align 8, !dbg !10323, !tbaa !2579
  %add.ptr145 = getelementptr inbounds i8, i8* %86, i64 %87, !dbg !10324
  store i8* %add.ptr145, i8** %rname_limit, align 8, !dbg !10325, !tbaa !2442
  %88 = load i8*, i8** %rname, align 8, !dbg !10326, !tbaa !2442
  %89 = load i64, i64* %dest_offset, align 8, !dbg !10327, !tbaa !2579
  %add.ptr146 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !10328
  store i8* %add.ptr146, i8** %dest, align 8, !dbg !10329, !tbaa !2442
  br label %if.end147, !dbg !10330

if.end147:                                        ; preds = %if.end143, %if.end116
  %90 = load i8*, i8** %dest, align 8, !dbg !10331, !tbaa !2442
  %91 = load i8*, i8** %start, align 8, !dbg !10332, !tbaa !2442
  %92 = load i8*, i8** %end, align 8, !dbg !10333, !tbaa !2442
  %93 = load i8*, i8** %start, align 8, !dbg !10334, !tbaa !2442
  %sub.ptr.lhs.cast148 = ptrtoint i8* %92 to i64, !dbg !10335
  %sub.ptr.rhs.cast149 = ptrtoint i8* %93 to i64, !dbg !10335
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !10335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %91, i64 %sub.ptr.sub150, i1 false), !dbg !10336
  store i8* %90, i8** %dest, align 8, !dbg !10337, !tbaa !2442
  %94 = load i8*, i8** %end, align 8, !dbg !10338, !tbaa !2442
  %95 = load i8*, i8** %start, align 8, !dbg !10339, !tbaa !2442
  %sub.ptr.lhs.cast151 = ptrtoint i8* %94 to i64, !dbg !10340
  %sub.ptr.rhs.cast152 = ptrtoint i8* %95 to i64, !dbg !10340
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !10340
  %96 = load i8*, i8** %dest, align 8, !dbg !10341, !tbaa !2442
  %add.ptr154 = getelementptr inbounds i8, i8* %96, i64 %sub.ptr.sub153, !dbg !10341
  store i8* %add.ptr154, i8** %dest, align 8, !dbg !10341, !tbaa !2442
  %97 = load i8*, i8** %dest, align 8, !dbg !10342, !tbaa !2442
  store i8 0, i8* %97, align 1, !dbg !10343, !tbaa !2497, !ctir !144
  %98 = load i8, i8* %logical, align 1, !dbg !10344, !tbaa !2461
  %tobool155 = trunc i8 %98 to i1, !dbg !10344
  br i1 %tobool155, label %land.lhs.true157, label %if.else161, !dbg !10346

land.lhs.true157:                                 ; preds = %if.end147
  %99 = load i32, i32* %can_mode.addr, align 4, !dbg !10347, !tbaa !2497
  %cmp158 = icmp eq i32 %99, 2, !dbg !10348
  br i1 %cmp158, label %if.then160, label %if.else161, !dbg !10349

if.then160:                                       ; preds = %land.lhs.true157
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10350, !ctir !1683
  store i32 0, i32* %st_mode, align 8, !dbg !10352, !tbaa !4189, !ctir !201
  br label %if.end188, !dbg !10353

if.else161:                                       ; preds = %land.lhs.true157, %if.end147
  %100 = load i8, i8* %logical, align 1, !dbg !10354, !tbaa !2461
  %tobool162 = trunc i8 %100 to i1, !dbg !10354
  br i1 %tobool162, label %cond.true, label %cond.false, !dbg !10354

cond.true:                                        ; preds = %if.else161
  %101 = load i8*, i8** %rname, align 8, !dbg !10356, !tbaa !2442
  %call164 = call i32 @stat(i8* %101, %struct.stat* %st) #13, !dbg !10357
  br label %cond.end, !dbg !10354

cond.false:                                       ; preds = %if.else161
  %102 = load i8*, i8** %rname, align 8, !dbg !10358, !tbaa !2442
  %call165 = call i32 @lstat(i8* %102, %struct.stat* %st) #13, !dbg !10359
  br label %cond.end, !dbg !10354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call164, %cond.true ], [ %call165, %cond.false ], !dbg !10354
  %cmp166 = icmp ne i32 %cond, 0, !dbg !10360
  br i1 %cmp166, label %if.then168, label %if.end187, !dbg !10361

if.then168:                                       ; preds = %cond.end
  %call169 = call i32* @__errno_location() #17, !dbg !10362
  %103 = load i32, i32* %call169, align 4, !dbg !10362, !tbaa !2436, !ctir !27
  store i32 %103, i32* %saved_errno, align 4, !dbg !10364, !tbaa !2436
  %104 = load i32, i32* %can_mode.addr, align 4, !dbg !10365, !tbaa !2497
  %cmp170 = icmp eq i32 %104, 0, !dbg !10367
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10368

if.then172:                                       ; preds = %if.then168
  br label %error, !dbg !10369

if.end173:                                        ; preds = %if.then168
  %105 = load i32, i32* %can_mode.addr, align 4, !dbg !10370, !tbaa !2497
  %cmp174 = icmp eq i32 %105, 1, !dbg !10372
  br i1 %cmp174, label %if.then176, label %if.end185, !dbg !10373

if.then176:                                       ; preds = %if.end173
  %106 = load i8*, i8** %end, align 8, !dbg !10374, !tbaa !2442
  %107 = load i8*, i8** %end, align 8, !dbg !10377, !tbaa !2442
  %call177 = call i64 @strspn(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.270, i64 0, i64 0)) #16, !dbg !10378
  %arrayidx178 = getelementptr inbounds i8, i8* %106, i64 %call177, !dbg !10374, !ctir !146
  %108 = load i8, i8* %arrayidx178, align 1, !dbg !10374, !tbaa !2497
  %conv179 = sext i8 %108 to i32, !dbg !10374
  %tobool180 = icmp ne i32 %conv179, 0, !dbg !10374
  br i1 %tobool180, label %if.then183, label %lor.lhs.false, !dbg !10379

lor.lhs.false:                                    ; preds = %if.then176
  %109 = load i32, i32* %saved_errno, align 4, !dbg !10380, !tbaa !2436
  %cmp181 = icmp ne i32 %109, 2, !dbg !10381
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !10382

if.then183:                                       ; preds = %lor.lhs.false, %if.then176
  br label %error, !dbg !10383

if.end184:                                        ; preds = %lor.lhs.false
  br label %for.inc292, !dbg !10384

if.end185:                                        ; preds = %if.end173
  %st_mode186 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10385, !ctir !1683
  store i32 0, i32* %st_mode186, align 8, !dbg !10386, !tbaa !4189, !ctir !201
  br label %if.end187, !dbg !10387

if.end187:                                        ; preds = %if.end185, %cond.end
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then160
  %st_mode189 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10388, !ctir !1683
  %110 = load i32, i32* %st_mode189, align 8, !dbg !10388, !tbaa !4189, !ctir !201
  %and190 = and i32 %110, 61440, !dbg !10388
  %cmp191 = icmp eq i32 %and190, 40960, !dbg !10388
  br i1 %cmp191, label %if.then193, label %if.else275, !dbg !10390

if.then193:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10391, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10396, metadata !DIExpression()), !dbg !10397
  %111 = load i8*, i8** %name.addr, align 8, !dbg !10398, !tbaa !2442
  %call194 = call zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %111, %struct.stat* %st), !dbg !10400
  br i1 %call194, label %if.then195, label %if.end200, !dbg !10401

if.then195:                                       ; preds = %if.then193
  %112 = load i32, i32* %can_mode.addr, align 4, !dbg !10402, !tbaa !2497
  %cmp196 = icmp eq i32 %112, 2, !dbg !10405
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !10406

if.then198:                                       ; preds = %if.then195
  br label %for.inc292, !dbg !10407

if.end199:                                        ; preds = %if.then195
  store i32 40, i32* %saved_errno, align 4, !dbg !10408, !tbaa !2436
  br label %error, !dbg !10409

if.end200:                                        ; preds = %if.then193
  %113 = load i8*, i8** %rname, align 8, !dbg !10410, !tbaa !2442
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !10411, !ctir !1683
  %114 = load i64, i64* %st_size, align 8, !dbg !10411, !tbaa !10412, !ctir !181
  %call201 = call i8* @areadlink_with_size(i8* %113, i64 %114), !dbg !10413
  store i8* %call201, i8** %buf, align 8, !dbg !10414, !tbaa !2442
  %115 = load i8*, i8** %buf, align 8, !dbg !10415, !tbaa !2442
  %tobool202 = icmp ne i8* %115, null, !dbg !10415
  br i1 %tobool202, label %if.end213, label %if.then203, !dbg !10417

if.then203:                                       ; preds = %if.end200
  %116 = load i32, i32* %can_mode.addr, align 4, !dbg !10418, !tbaa !2497
  %cmp204 = icmp eq i32 %116, 2, !dbg !10421
  br i1 %cmp204, label %land.lhs.true206, label %if.end211, !dbg !10422

land.lhs.true206:                                 ; preds = %if.then203
  %call207 = call i32* @__errno_location() #17, !dbg !10423
  %117 = load i32, i32* %call207, align 4, !dbg !10423, !tbaa !2436, !ctir !27
  %cmp208 = icmp ne i32 %117, 12, !dbg !10424
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !10425

if.then210:                                       ; preds = %land.lhs.true206
  br label %for.inc292, !dbg !10426

if.end211:                                        ; preds = %land.lhs.true206, %if.then203
  %call212 = call i32* @__errno_location() #17, !dbg !10427
  %118 = load i32, i32* %call212, align 4, !dbg !10427, !tbaa !2436, !ctir !27
  store i32 %118, i32* %saved_errno, align 4, !dbg !10428, !tbaa !2436
  br label %error, !dbg !10429

if.end213:                                        ; preds = %if.end200
  %119 = load i8*, i8** %buf, align 8, !dbg !10430, !tbaa !2442
  %call214 = call i64 @strlen(i8* %119) #16, !dbg !10431
  store i64 %call214, i64* %n, align 8, !dbg !10432, !tbaa !2579
  %120 = load i8*, i8** %end, align 8, !dbg !10433, !tbaa !2442
  %call215 = call i64 @strlen(i8* %120) #16, !dbg !10434
  store i64 %call215, i64* %len, align 8, !dbg !10435, !tbaa !2579
  %121 = load i64, i64* %extra_len, align 8, !dbg !10436, !tbaa !2579
  %tobool216 = icmp ne i64 %121, 0, !dbg !10436
  br i1 %tobool216, label %if.else229, label %if.then217, !dbg !10438

if.then217:                                       ; preds = %if.end213
  %122 = load i64, i64* %n, align 8, !dbg !10439, !tbaa !2579
  %123 = load i64, i64* %len, align 8, !dbg !10441, !tbaa !2579
  %add218 = add i64 %122, %123, !dbg !10442
  %add219 = add i64 %add218, 1, !dbg !10443
  %cmp220 = icmp ugt i64 %add219, 4096, !dbg !10444
  br i1 %cmp220, label %cond.true222, label %cond.false225, !dbg !10445

cond.true222:                                     ; preds = %if.then217
  %124 = load i64, i64* %n, align 8, !dbg !10446, !tbaa !2579
  %125 = load i64, i64* %len, align 8, !dbg !10447, !tbaa !2579
  %add223 = add i64 %124, %125, !dbg !10448
  %add224 = add i64 %add223, 1, !dbg !10449
  br label %cond.end226, !dbg !10445

cond.false225:                                    ; preds = %if.then217
  br label %cond.end226, !dbg !10445

cond.end226:                                      ; preds = %cond.false225, %cond.true222
  %cond227 = phi i64 [ %add224, %cond.true222 ], [ 4096, %cond.false225 ], !dbg !10445
  store i64 %cond227, i64* %extra_len, align 8, !dbg !10450, !tbaa !2579
  %126 = load i64, i64* %extra_len, align 8, !dbg !10451, !tbaa !2579
  %call228 = call noalias i8* @xmalloc(i64 %126), !dbg !10452
  store i8* %call228, i8** %extra_buf, align 8, !dbg !10453, !tbaa !2442
  br label %if.end239, !dbg !10454

if.else229:                                       ; preds = %if.end213
  %127 = load i64, i64* %n, align 8, !dbg !10455, !tbaa !2579
  %128 = load i64, i64* %len, align 8, !dbg !10457, !tbaa !2579
  %add230 = add i64 %127, %128, !dbg !10458
  %add231 = add i64 %add230, 1, !dbg !10459
  %129 = load i64, i64* %extra_len, align 8, !dbg !10460, !tbaa !2579
  %cmp232 = icmp ugt i64 %add231, %129, !dbg !10461
  br i1 %cmp232, label %if.then234, label %if.end238, !dbg !10462

if.then234:                                       ; preds = %if.else229
  %130 = load i64, i64* %n, align 8, !dbg !10463, !tbaa !2579
  %131 = load i64, i64* %len, align 8, !dbg !10465, !tbaa !2579
  %add235 = add i64 %130, %131, !dbg !10466
  %add236 = add i64 %add235, 1, !dbg !10467
  store i64 %add236, i64* %extra_len, align 8, !dbg !10468, !tbaa !2579
  %132 = load i8*, i8** %extra_buf, align 8, !dbg !10469, !tbaa !2442
  %133 = load i64, i64* %extra_len, align 8, !dbg !10470, !tbaa !2579
  %call237 = call i8* @xrealloc(i8* %132, i64 %133), !dbg !10471
  store i8* %call237, i8** %extra_buf, align 8, !dbg !10472, !tbaa !2442
  br label %if.end238, !dbg !10473

if.end238:                                        ; preds = %if.then234, %if.else229
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %cond.end226
  %134 = load i8*, i8** %extra_buf, align 8, !dbg !10474, !tbaa !2442
  %135 = load i64, i64* %n, align 8, !dbg !10475, !tbaa !2579
  %arrayidx240 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !10474, !ctir !143
  %136 = load i8*, i8** %end, align 8, !dbg !10476, !tbaa !2442
  %137 = load i64, i64* %len, align 8, !dbg !10477, !tbaa !2579
  %add241 = add i64 %137, 1, !dbg !10478
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %arrayidx240, i8* align 1 %136, i64 %add241, i1 false), !dbg !10479
  %138 = load i8*, i8** %extra_buf, align 8, !dbg !10480, !tbaa !2442
  %139 = load i8*, i8** %buf, align 8, !dbg !10481, !tbaa !2442
  %140 = load i64, i64* %n, align 8, !dbg !10482, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %139, i64 %140, i1 false), !dbg !10483
  store i8* %138, i8** %end, align 8, !dbg !10484, !tbaa !2442
  store i8* %138, i8** %name.addr, align 8, !dbg !10485, !tbaa !2442
  %141 = load i8*, i8** %buf, align 8, !dbg !10486, !tbaa !2442
  %arrayidx242 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !10486, !ctir !143
  %142 = load i8, i8* %arrayidx242, align 1, !dbg !10486, !tbaa !2497
  %conv243 = sext i8 %142 to i32, !dbg !10486
  %cmp244 = icmp eq i32 %conv243, 47, !dbg !10486
  br i1 %cmp244, label %if.then246, label %if.else252, !dbg !10488

if.then246:                                       ; preds = %if.end239
  call void @llvm.dbg.declare(metadata i64* %pfxlen, metadata !10489, metadata !DIExpression()), !dbg !10491
  store i64 0, i64* %pfxlen, align 8, !dbg !10491, !tbaa !2579
  %143 = load i64, i64* %pfxlen, align 8, !dbg !10492, !tbaa !2579
  %tobool247 = icmp ne i64 %143, 0, !dbg !10492
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !10494

if.then248:                                       ; preds = %if.then246
  %144 = load i8*, i8** %rname, align 8, !dbg !10495, !tbaa !2442
  %145 = load i8*, i8** %buf, align 8, !dbg !10496, !tbaa !2442
  %146 = load i64, i64* %pfxlen, align 8, !dbg !10497, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %145, i64 %146, i1 false), !dbg !10498
  br label %if.end249, !dbg !10498

if.end249:                                        ; preds = %if.then248, %if.then246
  %147 = load i8*, i8** %rname, align 8, !dbg !10499, !tbaa !2442
  %148 = load i64, i64* %pfxlen, align 8, !dbg !10500, !tbaa !2579
  %add.ptr250 = getelementptr inbounds i8, i8* %147, i64 %148, !dbg !10501
  store i8* %add.ptr250, i8** %dest, align 8, !dbg !10502, !tbaa !2442
  %149 = load i8*, i8** %dest, align 8, !dbg !10503, !tbaa !2442
  %incdec.ptr251 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !10503
  store i8* %incdec.ptr251, i8** %dest, align 8, !dbg !10503, !tbaa !2442
  store i8 47, i8* %149, align 1, !dbg !10504, !tbaa !2497, !ctir !144
  %150 = load i64, i64* %pfxlen, align 8, !dbg !10505, !tbaa !2579
  store i64 %150, i64* %prefix_len, align 8, !dbg !10506, !tbaa !2579
  br label %if.end274, !dbg !10507

if.else252:                                       ; preds = %if.end239
  %151 = load i8*, i8** %dest, align 8, !dbg !10508, !tbaa !2442
  %152 = load i8*, i8** %rname, align 8, !dbg !10511, !tbaa !2442
  %153 = load i64, i64* %prefix_len, align 8, !dbg !10512, !tbaa !2579
  %add.ptr253 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !10513
  %add.ptr254 = getelementptr inbounds i8, i8* %add.ptr253, i64 1, !dbg !10514
  %cmp255 = icmp ugt i8* %151, %add.ptr254, !dbg !10515
  br i1 %cmp255, label %if.then257, label %if.end273, !dbg !10516

if.then257:                                       ; preds = %if.else252
  %154 = load i8*, i8** %dest, align 8, !dbg !10517, !tbaa !2442
  %incdec.ptr258 = getelementptr inbounds i8, i8* %154, i32 -1, !dbg !10517
  store i8* %incdec.ptr258, i8** %dest, align 8, !dbg !10517, !tbaa !2442
  br label %for.cond259, !dbg !10517

for.cond259:                                      ; preds = %for.inc270, %if.then257
  %155 = load i8*, i8** %dest, align 8, !dbg !10519, !tbaa !2442
  %156 = load i8*, i8** %rname, align 8, !dbg !10521, !tbaa !2442
  %cmp260 = icmp ugt i8* %155, %156, !dbg !10522
  br i1 %cmp260, label %land.rhs262, label %land.end268, !dbg !10523

land.rhs262:                                      ; preds = %for.cond259
  %157 = load i8*, i8** %dest, align 8, !dbg !10524, !tbaa !2442
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i64 -1, !dbg !10524, !ctir !143
  %158 = load i8, i8* %arrayidx263, align 1, !dbg !10524, !tbaa !2497
  %conv264 = sext i8 %158 to i32, !dbg !10524
  %cmp265 = icmp eq i32 %conv264, 47, !dbg !10524
  %lnot267 = xor i1 %cmp265, true, !dbg !10525
  br label %land.end268

land.end268:                                      ; preds = %land.rhs262, %for.cond259
  %159 = phi i1 [ false, %for.cond259 ], [ %lnot267, %land.rhs262 ], !dbg !10526
  br i1 %159, label %for.body269, label %for.end272, !dbg !10527

for.body269:                                      ; preds = %land.end268
  br label %for.inc270, !dbg !10528

for.inc270:                                       ; preds = %for.body269
  %160 = load i8*, i8** %dest, align 8, !dbg !10529, !tbaa !2442
  %incdec.ptr271 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !10529
  store i8* %incdec.ptr271, i8** %dest, align 8, !dbg !10529, !tbaa !2442
  br label %for.cond259, !dbg !10530, !llvm.loop !10531

for.end272:                                       ; preds = %land.end268
  br label %if.end273, !dbg !10532

if.end273:                                        ; preds = %for.end272, %if.else252
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.end249
  %161 = load i8*, i8** %buf, align 8, !dbg !10533, !tbaa !2442
  call void @free(i8* %161) #13, !dbg !10534
  br label %if.end288, !dbg !10535

if.else275:                                       ; preds = %if.end188
  %st_mode276 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10536, !ctir !1683
  %162 = load i32, i32* %st_mode276, align 8, !dbg !10536, !tbaa !4189, !ctir !201
  %and277 = and i32 %162, 61440, !dbg !10536
  %cmp278 = icmp eq i32 %and277, 16384, !dbg !10536
  br i1 %cmp278, label %if.end287, label %land.lhs.true280, !dbg !10539

land.lhs.true280:                                 ; preds = %if.else275
  %163 = load i8*, i8** %end, align 8, !dbg !10540, !tbaa !2442
  %164 = load i8, i8* %163, align 1, !dbg !10541, !tbaa !2497, !ctir !147
  %conv281 = sext i8 %164 to i32, !dbg !10541
  %tobool282 = icmp ne i32 %conv281, 0, !dbg !10541
  br i1 %tobool282, label %land.lhs.true283, label %if.end287, !dbg !10542

land.lhs.true283:                                 ; preds = %land.lhs.true280
  %165 = load i32, i32* %can_mode.addr, align 4, !dbg !10543, !tbaa !2497
  %cmp284 = icmp ne i32 %165, 2, !dbg !10544
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !10545

if.then286:                                       ; preds = %land.lhs.true283
  store i32 20, i32* %saved_errno, align 4, !dbg !10546, !tbaa !2436
  br label %error, !dbg !10548

if.end287:                                        ; preds = %land.lhs.true283, %land.lhs.true280, %if.else275
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end274
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end108
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then70
  br label %if.end291

if.end291:                                        ; preds = %if.end290
  br label %for.inc292, !dbg !10549

for.inc292:                                       ; preds = %if.end291, %if.then210, %if.then198, %if.end184
  %166 = load i8*, i8** %end, align 8, !dbg !10550, !tbaa !2442
  store i8* %166, i8** %start, align 8, !dbg !10551, !tbaa !2442
  br label %for.cond, !dbg !10552, !llvm.loop !10553

for.end293:                                       ; preds = %if.then59, %for.cond
  %167 = load i8*, i8** %dest, align 8, !dbg !10555, !tbaa !2442
  %168 = load i8*, i8** %rname, align 8, !dbg !10557, !tbaa !2442
  %169 = load i64, i64* %prefix_len, align 8, !dbg !10558, !tbaa !2579
  %add.ptr294 = getelementptr inbounds i8, i8* %168, i64 %169, !dbg !10559
  %add.ptr295 = getelementptr inbounds i8, i8* %add.ptr294, i64 1, !dbg !10560
  %cmp296 = icmp ugt i8* %167, %add.ptr295, !dbg !10561
  br i1 %cmp296, label %land.lhs.true298, label %if.end305, !dbg !10562

land.lhs.true298:                                 ; preds = %for.end293
  %170 = load i8*, i8** %dest, align 8, !dbg !10563, !tbaa !2442
  %arrayidx299 = getelementptr inbounds i8, i8* %170, i64 -1, !dbg !10563, !ctir !143
  %171 = load i8, i8* %arrayidx299, align 1, !dbg !10563, !tbaa !2497
  %conv300 = sext i8 %171 to i32, !dbg !10563
  %cmp301 = icmp eq i32 %conv300, 47, !dbg !10563
  br i1 %cmp301, label %if.then303, label %if.end305, !dbg !10564

if.then303:                                       ; preds = %land.lhs.true298
  %172 = load i8*, i8** %dest, align 8, !dbg !10565, !tbaa !2442
  %incdec.ptr304 = getelementptr inbounds i8, i8* %172, i32 -1, !dbg !10565
  store i8* %incdec.ptr304, i8** %dest, align 8, !dbg !10565, !tbaa !2442
  br label %if.end305, !dbg !10565

if.end305:                                        ; preds = %if.then303, %land.lhs.true298, %for.end293
  %173 = load i8*, i8** %dest, align 8, !dbg !10566, !tbaa !2442
  store i8 0, i8* %173, align 1, !dbg !10567, !tbaa !2497, !ctir !144
  %174 = load i8*, i8** %rname_limit, align 8, !dbg !10568, !tbaa !2442
  %175 = load i8*, i8** %dest, align 8, !dbg !10570, !tbaa !2442
  %add.ptr306 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !10571
  %cmp307 = icmp ne i8* %174, %add.ptr306, !dbg !10572
  br i1 %cmp307, label %if.then309, label %if.end315, !dbg !10573

if.then309:                                       ; preds = %if.end305
  %176 = load i8*, i8** %rname, align 8, !dbg !10574, !tbaa !2442
  %177 = load i8*, i8** %dest, align 8, !dbg !10575, !tbaa !2442
  %178 = load i8*, i8** %rname, align 8, !dbg !10576, !tbaa !2442
  %sub.ptr.lhs.cast310 = ptrtoint i8* %177 to i64, !dbg !10577
  %sub.ptr.rhs.cast311 = ptrtoint i8* %178 to i64, !dbg !10577
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311, !dbg !10577
  %add313 = add nsw i64 %sub.ptr.sub312, 1, !dbg !10578
  %call314 = call i8* @xrealloc(i8* %176, i64 %add313), !dbg !10579
  store i8* %call314, i8** %rname, align 8, !dbg !10580, !tbaa !2442
  br label %if.end315, !dbg !10581

if.end315:                                        ; preds = %if.then309, %if.end305
  %179 = load i8*, i8** %extra_buf, align 8, !dbg !10582, !tbaa !2442
  call void @free(i8* %179) #13, !dbg !10583
  %180 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10584, !tbaa !2442
  %tobool316 = icmp ne %struct.hash_table* %180, null, !dbg !10584
  br i1 %tobool316, label %if.then317, label %if.end318, !dbg !10586

if.then317:                                       ; preds = %if.end315
  %181 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10587, !tbaa !2442
  call void @hash_free(%struct.hash_table* %181), !dbg !10588
  br label %if.end318, !dbg !10588

if.end318:                                        ; preds = %if.then317, %if.end315
  %182 = load i8*, i8** %rname, align 8, !dbg !10589, !tbaa !2442
  store i8* %182, i8** %retval, align 8, !dbg !10590
  br label %return, !dbg !10590

error:                                            ; preds = %if.then286, %if.end211, %if.end199, %if.then183, %if.then172
  call void @llvm.dbg.label(metadata !10591), !dbg !10592
  %183 = load i8*, i8** %extra_buf, align 8, !dbg !10593, !tbaa !2442
  call void @free(i8* %183) #13, !dbg !10594
  %184 = load i8*, i8** %rname, align 8, !dbg !10595, !tbaa !2442
  call void @free(i8* %184) #13, !dbg !10596
  %185 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10597, !tbaa !2442
  %tobool319 = icmp ne %struct.hash_table* %185, null, !dbg !10597
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !10599

if.then320:                                       ; preds = %error
  %186 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10600, !tbaa !2442
  call void @hash_free(%struct.hash_table* %186), !dbg !10601
  br label %if.end321, !dbg !10601

if.end321:                                        ; preds = %if.then320, %error
  %187 = load i32, i32* %saved_errno, align 4, !dbg !10602, !tbaa !2436
  %call322 = call i32* @__errno_location() #17, !dbg !10603
  store i32 %187, i32* %call322, align 4, !dbg !10604, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10605
  br label %return, !dbg !10605

return:                                           ; preds = %if.end321, %if.end318, %if.then20, %if.then10, %if.then5, %if.then
  %188 = load i8*, i8** %retval, align 8, !dbg !10606
  ret i8* %188, !dbg !10606
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %filename, %struct.stat* %st) #0 !dbg !10607 !ctir !1678 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table**, align 8
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %initial_capacity = alloca i64, align 8, !ctir !149
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table*** %ht.addr, metadata !10608, metadata !DIExpression()), !dbg !10609
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10610, metadata !DIExpression()), !dbg !10611
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10612, metadata !DIExpression()), !dbg !10613
  %0 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10614, !tbaa !2442
  %1 = load %struct.hash_table*, %struct.hash_table** %0, align 8, !dbg !10616, !tbaa !2442, !ctir !244
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !10617
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10618

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %initial_capacity, metadata !10619, metadata !DIExpression()), !dbg !10621
  store i64 7, i64* %initial_capacity, align 8, !dbg !10621, !tbaa !2579
  %2 = load i64, i64* %initial_capacity, align 8, !dbg !10622, !tbaa !2579
  %call = call %struct.hash_table* @hash_initialize(i64 %2, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free), !dbg !10623
  %3 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10624, !tbaa !2442
  store %struct.hash_table* %call, %struct.hash_table** %3, align 8, !dbg !10625, !tbaa !2442, !ctir !244
  %4 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10626, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !10628, !tbaa !2442, !ctir !244
  %cmp1 = icmp eq %struct.hash_table* %5, null, !dbg !10629
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10630

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #14, !dbg !10631
  unreachable, !dbg !10631

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10632

if.end3:                                          ; preds = %if.end, %entry
  %6 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10633, !tbaa !2442
  %7 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !10635, !tbaa !2442, !ctir !244
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !10636, !tbaa !2442
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10637, !tbaa !2442
  %call4 = call zeroext i1 @seen_file(%struct.hash_table* %7, i8* %8, %struct.stat* %9), !dbg !10638
  br i1 %call4, label %if.then5, label %if.end6, !dbg !10639

if.then5:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !10640
  br label %return, !dbg !10640

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10641, !tbaa !2442
  %11 = load %struct.hash_table*, %struct.hash_table** %10, align 8, !dbg !10642, !tbaa !2442, !ctir !244
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !10643, !tbaa !2442
  %13 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10644, !tbaa !2442
  call void @record_file(%struct.hash_table* %11, i8* %12, %struct.stat* %13), !dbg !10645
  store i1 false, i1* %retval, align 1, !dbg !10646
  br label %return, !dbg !10646

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i1, i1* %retval, align 1, !dbg !10647
  ret i1 %14, !dbg !10647
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #0 !dbg !10648 !ctir !570 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10651, !tbaa !2442
  store i8* %0, i8** @file_name, align 8, !dbg !10652, !tbaa !2442
  ret void, !dbg !10653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #0 !dbg !10654 !ctir !401 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10657, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !10657
  %frombool1 = zext i1 %tobool to i8, !dbg !10658
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10658, !tbaa !2461
  ret void, !dbg !10659
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #0 !dbg !10660 !ctir !341 {
entry:
  %write_error = alloca i8*, align 8, !ctir !146
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10661, !tbaa !2442
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10663
  %cmp = icmp ne i32 %call, 0, !dbg !10664
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10665

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10666, !tbaa !2461
  %tobool = trunc i8 %1 to i1, !dbg !10666
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10667

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #17, !dbg !10668
  %2 = load i32, i32* %call2, align 4, !dbg !10668, !tbaa !2436, !ctir !27
  %cmp3 = icmp eq i32 %2, 32, !dbg !10669
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10670

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10671, metadata !DIExpression()), !dbg !10673
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #13, !dbg !10674
  store i8* %call4, i8** %write_error, align 8, !dbg !10673, !tbaa !2442
  %3 = load i8*, i8** @file_name, align 8, !dbg !10675, !tbaa !2442
  %tobool5 = icmp ne i8* %3, null, !dbg !10675
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10677

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #17, !dbg !10678
  %4 = load i32, i32* %call7, align 4, !dbg !10678, !tbaa !2436, !ctir !27
  %5 = load i8*, i8** @file_name, align 8, !dbg !10679, !tbaa !2442
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10680
  %6 = load i8*, i8** %write_error, align 8, !dbg !10681, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.274, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10682
  br label %if.end, !dbg !10682

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #17, !dbg !10683
  %7 = load i32, i32* %call9, align 4, !dbg !10683, !tbaa !2436, !ctir !27
  %8 = load i8*, i8** %write_error, align 8, !dbg !10684, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.275, i64 0, i64 0), i8* %8), !dbg !10685
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10686, !tbaa !2436
  call void @_exit(i32 %9) #14, !dbg !10687
  unreachable, !dbg !10687

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10688, !tbaa !2442
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10690
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10691
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10692

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10693, !tbaa !2436
  call void @_exit(i32 %11) #14, !dbg !10694
  unreachable, !dbg !10694

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10695
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10696 !ctir !1707 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !149
  %length = alloca i64, align 8, !ctir !149
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10698, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10700, metadata !DIExpression()), !dbg !10701
  store i64 0, i64* %prefix_length, align 8, !dbg !10701, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10702, metadata !DIExpression()), !dbg !10703
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10704, !tbaa !2579
  %cmp = icmp ne i64 %0, 0, !dbg !10705
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10704

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10704

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10706, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10706, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10706, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !10706
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10706
  %3 = zext i1 %cmp1 to i64, !dbg !10706
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10706
  br label %cond.end, !dbg !10704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10704
  %conv4 = sext i32 %cond3 to i64, !dbg !10707
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10708, !tbaa !2579
  %add = add i64 %4, %conv4, !dbg !10708
  store i64 %add, i64* %prefix_length, align 8, !dbg !10708, !tbaa !2579
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10709, !tbaa !2442
  %call = call i8* @last_component(i8* %5) #16, !dbg !10711
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10712, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10713
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10713
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10713
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10714, !tbaa !2579
  br label %for.cond, !dbg !10715

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10716, !tbaa !2579
  %8 = load i64, i64* %length, align 8, !dbg !10718, !tbaa !2579
  %cmp5 = icmp ult i64 %7, %8, !dbg !10719
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10720

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10721, !tbaa !2442
  %10 = load i64, i64* %length, align 8, !dbg !10721, !tbaa !2579
  %sub = sub i64 %10, 1, !dbg !10721
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10721, !ctir !146
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10721, !tbaa !2497
  %conv8 = sext i8 %11 to i32, !dbg !10721
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10721
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10723

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10724

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10721

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10725, !tbaa !2579
  %dec = add i64 %12, -1, !dbg !10725
  store i64 %dec, i64* %length, align 8, !dbg !10725, !tbaa !2579
  br label %for.cond, !dbg !10726, !llvm.loop !10727

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10729, !tbaa !2579
  ret i64 %13, !dbg !10730
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #0 !dbg !10731 !ctir !572 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !149
  %append_dot = alloca i8, align 1, !ctir !141
  %dir = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10732, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10734, metadata !DIExpression()), !dbg !10735
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10736, !tbaa !2442
  %call = call i64 @dir_len(i8* %0) #16, !dbg !10737
  store i64 %call, i64* %length, align 8, !dbg !10735, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10738, metadata !DIExpression()), !dbg !10739
  %1 = load i64, i64* %length, align 8, !dbg !10740, !tbaa !2579
  %cmp = icmp eq i64 %1, 0, !dbg !10741
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10742

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10742

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10739
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10739, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10743, metadata !DIExpression()), !dbg !10744
  %3 = load i64, i64* %length, align 8, !dbg !10745, !tbaa !2579
  %4 = load i8, i8* %append_dot, align 1, !dbg !10746, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !10746
  %conv = zext i1 %tobool to i64, !dbg !10746
  %add = add i64 %3, %conv, !dbg !10747
  %add1 = add i64 %add, 1, !dbg !10748
  %call2 = call noalias i8* @malloc(i64 %add1) #13, !dbg !10749
  store i8* %call2, i8** %dir, align 8, !dbg !10744, !tbaa !2442
  %5 = load i8*, i8** %dir, align 8, !dbg !10750, !tbaa !2442
  %tobool3 = icmp ne i8* %5, null, !dbg !10750
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10752

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10753
  br label %return, !dbg !10753

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10754, !tbaa !2442
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10755, !tbaa !2442
  %8 = load i64, i64* %length, align 8, !dbg !10756, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10757
  %9 = load i8, i8* %append_dot, align 1, !dbg !10758, !tbaa !2461
  %tobool4 = trunc i8 %9 to i1, !dbg !10758
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10760

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10761, !tbaa !2442
  %11 = load i64, i64* %length, align 8, !dbg !10762, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !10762
  store i64 %inc, i64* %length, align 8, !dbg !10762, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10761, !ctir !143
  store i8 46, i8* %arrayidx, align 1, !dbg !10763, !tbaa !2497
  br label %if.end6, !dbg !10761

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10764, !tbaa !2442
  %13 = load i64, i64* %length, align 8, !dbg !10765, !tbaa !2579
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10764, !ctir !143
  store i8 0, i8* %arrayidx7, align 1, !dbg !10766, !tbaa !2497
  %14 = load i8*, i8** %dir, align 8, !dbg !10767, !tbaa !2442
  store i8* %14, i8** %retval, align 8, !dbg !10768
  br label %return, !dbg !10768

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10769
  ret i8* %15, !dbg !10769
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10770 !ctir !572 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  %p = alloca i8*, align 8, !ctir !146
  %saw_slash = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10774, metadata !DIExpression()), !dbg !10775
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10776, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10777
  store i8* %add.ptr, i8** %base, align 8, !dbg !10775, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10780, metadata !DIExpression()), !dbg !10781
  store i8 0, i8* %saw_slash, align 1, !dbg !10781, !tbaa !2461
  br label %while.cond, !dbg !10782

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10783, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !10783, !tbaa !2497, !ctir !147
  %conv = sext i8 %2 to i32, !dbg !10783
  %cmp = icmp eq i32 %conv, 47, !dbg !10783
  br i1 %cmp, label %while.body, label %while.end, !dbg !10782

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10784, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10784
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10784, !tbaa !2442
  br label %while.cond, !dbg !10782, !llvm.loop !10785

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10786, !tbaa !2442
  store i8* %4, i8** %p, align 8, !dbg !10788, !tbaa !2442
  br label %for.cond, !dbg !10789

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10790, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !10792, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !10793
  br i1 %tobool, label %for.body, label %for.end, !dbg !10793

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10794, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !10794, !tbaa !2497, !ctir !147
  %conv2 = sext i8 %8 to i32, !dbg !10794
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10794
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10797

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10798, !tbaa !2461
  br label %if.end7, !dbg !10799

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10800, !tbaa !2461
  %tobool5 = trunc i8 %9 to i1, !dbg !10800
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10802

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10803, !tbaa !2442
  store i8* %10, i8** %base, align 8, !dbg !10805, !tbaa !2442
  store i8 0, i8* %saw_slash, align 1, !dbg !10806, !tbaa !2461
  br label %if.end, !dbg !10807

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10808

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10809, !tbaa !2442
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10809
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10809, !tbaa !2442
  br label %for.cond, !dbg !10810, !llvm.loop !10811

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10813, !tbaa !2442
  ret i8* %12, !dbg !10814
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10815 !ctir !1707 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !149
  %prefix_len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10820, metadata !DIExpression()), !dbg !10821
  store i64 0, i64* %prefix_len, align 8, !dbg !10821, !tbaa !2579
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10822, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !10824
  store i64 %call, i64* %len, align 8, !dbg !10825, !tbaa !2579
  br label %for.cond, !dbg !10826

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10827, !tbaa !2579
  %cmp = icmp ult i64 1, %1, !dbg !10829
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10830

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10831, !tbaa !2442
  %3 = load i64, i64* %len, align 8, !dbg !10831, !tbaa !2579
  %sub = sub i64 %3, 1, !dbg !10831
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10831, !ctir !146
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10831, !tbaa !2497
  %conv = sext i8 %4 to i32, !dbg !10831
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10832
  br i1 %5, label %for.body, label %for.end, !dbg !10833

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10834

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10835, !tbaa !2579
  %dec = add i64 %6, -1, !dbg !10835
  store i64 %dec, i64* %len, align 8, !dbg !10835, !tbaa !2579
  br label %for.cond, !dbg !10836, !llvm.loop !10837

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10839, !tbaa !2579
  ret i64 %7, !dbg !10840
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @file_has_acl(i8* %name, %struct.stat* %sb) #0 !dbg !10841 !ctir !1715 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  %ret = alloca i64, align 8, !ctir !1650
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10843, metadata !DIExpression()), !dbg !10844
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !10847, !tbaa !2442
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10847, !ctir !1718
  %1 = load i32, i32* %st_mode, align 8, !dbg !10847, !tbaa !4189, !ctir !201
  %and = and i32 %1, 61440, !dbg !10847
  %cmp = icmp eq i32 %and, 40960, !dbg !10847
  br i1 %cmp, label %if.end32, label %if.then, !dbg !10849

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10850, metadata !DIExpression()), !dbg !10852
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10853, !tbaa !2442
  %call = call i64 @getxattr(i8* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.284, i64 0, i64 0), i8* null, i64 0) #13, !dbg !10854
  store i64 %call, i64* %ret, align 8, !dbg !10855, !tbaa !2579
  %3 = load i64, i64* %ret, align 8, !dbg !10856, !tbaa !2579
  %cmp1 = icmp slt i64 %3, 0, !dbg !10858
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !10859

land.lhs.true:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #17, !dbg !10860
  %4 = load i32, i32* %call2, align 4, !dbg !10860, !tbaa !2436, !ctir !27
  %cmp3 = icmp eq i32 %4, 61, !dbg !10861
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !10862

if.then4:                                         ; preds = %land.lhs.true
  store i64 0, i64* %ret, align 8, !dbg !10863, !tbaa !2579
  br label %if.end7, !dbg !10864

if.else:                                          ; preds = %land.lhs.true, %if.then
  %5 = load i64, i64* %ret, align 8, !dbg !10865, !tbaa !2579
  %cmp5 = icmp sgt i64 %5, 0, !dbg !10867
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10868

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !10869
  br label %return, !dbg !10869

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then4
  %6 = load i64, i64* %ret, align 8, !dbg !10870, !tbaa !2579
  %cmp8 = icmp eq i64 %6, 0, !dbg !10872
  br i1 %cmp8, label %land.lhs.true9, label %if.end25, !dbg !10873

land.lhs.true9:                                   ; preds = %if.end7
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !10874, !tbaa !2442
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 3, !dbg !10874, !ctir !1718
  %8 = load i32, i32* %st_mode10, align 8, !dbg !10874, !tbaa !4189, !ctir !201
  %and11 = and i32 %8, 61440, !dbg !10874
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !10874
  br i1 %cmp12, label %if.then13, label %if.end25, !dbg !10875

if.then13:                                        ; preds = %land.lhs.true9
  %9 = load i8*, i8** %name.addr, align 8, !dbg !10876, !tbaa !2442
  %call14 = call i64 @getxattr(i8* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.285, i64 0, i64 0), i8* null, i64 0) #13, !dbg !10878
  store i64 %call14, i64* %ret, align 8, !dbg !10879, !tbaa !2579
  %10 = load i64, i64* %ret, align 8, !dbg !10880, !tbaa !2579
  %cmp15 = icmp slt i64 %10, 0, !dbg !10882
  br i1 %cmp15, label %land.lhs.true16, label %if.else20, !dbg !10883

land.lhs.true16:                                  ; preds = %if.then13
  %call17 = call i32* @__errno_location() #17, !dbg !10884
  %11 = load i32, i32* %call17, align 4, !dbg !10884, !tbaa !2436, !ctir !27
  %cmp18 = icmp eq i32 %11, 61, !dbg !10885
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !10886

if.then19:                                        ; preds = %land.lhs.true16
  store i64 0, i64* %ret, align 8, !dbg !10887, !tbaa !2579
  br label %if.end24, !dbg !10888

if.else20:                                        ; preds = %land.lhs.true16, %if.then13
  %12 = load i64, i64* %ret, align 8, !dbg !10889, !tbaa !2579
  %cmp21 = icmp sgt i64 %12, 0, !dbg !10891
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10892

if.then22:                                        ; preds = %if.else20
  store i32 1, i32* %retval, align 4, !dbg !10893
  br label %return, !dbg !10893

if.end23:                                         ; preds = %if.else20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then19
  br label %if.end25, !dbg !10894

if.end25:                                         ; preds = %if.end24, %land.lhs.true9, %if.end7
  %13 = load i64, i64* %ret, align 8, !dbg !10895, !tbaa !2579
  %cmp26 = icmp slt i64 %13, 0, !dbg !10897
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !10898

if.then27:                                        ; preds = %if.end25
  %call28 = call i32* @__errno_location() #17, !dbg !10899
  %14 = load i32, i32* %call28, align 4, !dbg !10899, !tbaa !2436, !ctir !27
  %call29 = call zeroext i1 @acl_errno_valid(i32 %14) #17, !dbg !10900
  %conv = zext i1 %call29 to i32, !dbg !10900
  %sub = sub nsw i32 0, %conv, !dbg !10901
  store i32 %sub, i32* %retval, align 4, !dbg !10902
  br label %return, !dbg !10902

if.end30:                                         ; preds = %if.end25
  %15 = load i64, i64* %ret, align 8, !dbg !10903, !tbaa !2579
  %conv31 = trunc i64 %15 to i32, !dbg !10903
  store i32 %conv31, i32* %retval, align 4, !dbg !10904
  br label %return, !dbg !10904

if.end32:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10905
  br label %return, !dbg !10905

return:                                           ; preds = %if.end32, %if.end30, %if.then27, %if.then22, %if.then6
  %16 = load i32, i32* %retval, align 4, !dbg !10906
  ret i32 %16, !dbg !10906
}

; Function Attrs: nounwind
declare dso_local i64 @getxattr(i8*, i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #0 !dbg !10907 !ctir !1743 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1768
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1768
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10909, metadata !DIExpression()), !dbg !10910
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10911, metadata !DIExpression()), !dbg !10912
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10915, metadata !DIExpression()), !dbg !10916
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10917, !tbaa !2442
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10919
  br i1 %cmp, label %if.then, label %if.end, !dbg !10920

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10921

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10922
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10922
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10923, !tbaa !2442
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10924, !tbaa !2442
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10925
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10926, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10927, !ctir !1769
  store i8* %call1, i8** %name, align 8, !dbg !10928, !tbaa !10929, !ctir !143
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10931, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10932, !ctir !1746
  %5 = load i64, i64* %st_ino, align 8, !dbg !10932, !tbaa !4827, !ctir !197
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10933, !tbaa !2442
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10934, !ctir !1769
  store i64 %5, i64* %st_ino2, align 8, !dbg !10935, !tbaa !10936, !ctir !258
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10937, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10938, !ctir !1746
  %8 = load i64, i64* %st_dev, align 8, !dbg !10938, !tbaa !4825, !ctir !195
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10939, !tbaa !2442
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10940, !ctir !1769
  store i64 %8, i64* %st_dev3, align 8, !dbg !10941, !tbaa !10942, !ctir !260
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10943, metadata !DIExpression()), !dbg !10945
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10946, !tbaa !2442
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10947, !tbaa !2442
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10947
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10948
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10948
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10945, !tbaa !2442
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10949, !tbaa !2442
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10951
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10952

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !10953
  unreachable, !dbg !10953

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10955, !tbaa !2442
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10957, !tbaa !2442
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10958
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10959

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10960, !tbaa !2442
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10960
  call void @triple_free(i8* %18), !dbg !10962
  br label %if.end10, !dbg !10963

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 !dbg !10965 !ctir !1775 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1769
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10970, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10972, metadata !DIExpression()), !dbg !10973
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10974, !tbaa !2442
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10976
  br i1 %cmp, label %if.then, label %if.end, !dbg !10977

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10978
  br label %return, !dbg !10978

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10979, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10980, !ctir !1769
  store i8* %1, i8** %name, align 8, !dbg !10981, !tbaa !10929, !ctir !143
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10982, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10983, !ctir !1746
  %3 = load i64, i64* %st_ino, align 8, !dbg !10983, !tbaa !4827, !ctir !197
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10984, !ctir !1769
  store i64 %3, i64* %st_ino1, align 8, !dbg !10985, !tbaa !10936, !ctir !258
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10986, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10987, !ctir !1746
  %5 = load i64, i64* %st_dev, align 8, !dbg !10987, !tbaa !4825, !ctir !195
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10988, !ctir !1769
  store i64 %5, i64* %st_dev2, align 8, !dbg !10989, !tbaa !10942, !ctir !260
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10990, !tbaa !2442
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10991
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10992
  %tobool = icmp ne i8* %call, null, !dbg !10993
  %lnot = xor i1 %tobool, true, !dbg !10993
  %lnot3 = xor i1 %lnot, true, !dbg !10994
  store i1 %lnot3, i1* %retval, align 1, !dbg !10995
  br label %return, !dbg !10995

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10996
  ret i1 %8, !dbg !10996
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #0 !dbg !10997 !ctir !1782 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  %0 = load i32, i32* %mode.addr, align 4, !dbg !11003, !tbaa !2436
  %call = call signext i8 @ftypelet(i32 %0), !dbg !11004
  %1 = load i8*, i8** %str.addr, align 8, !dbg !11005, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11005, !ctir !143
  store i8 %call, i8* %arrayidx, align 1, !dbg !11006, !tbaa !2497
  %2 = load i32, i32* %mode.addr, align 4, !dbg !11007, !tbaa !2436
  %and = and i32 %2, 256, !dbg !11008
  %tobool = icmp ne i32 %and, 0, !dbg !11007
  %3 = zext i1 %tobool to i64, !dbg !11007
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !11007
  %conv = trunc i32 %cond to i8, !dbg !11007
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11009, !tbaa !2442
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11009, !ctir !143
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !11010, !tbaa !2497
  %5 = load i32, i32* %mode.addr, align 4, !dbg !11011, !tbaa !2436
  %and2 = and i32 %5, 128, !dbg !11012
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11011
  %6 = zext i1 %tobool3 to i64, !dbg !11011
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !11011
  %conv5 = trunc i32 %cond4 to i8, !dbg !11011
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11013, !tbaa !2442
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !11013, !ctir !143
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !11014, !tbaa !2497
  %8 = load i32, i32* %mode.addr, align 4, !dbg !11015, !tbaa !2436
  %and7 = and i32 %8, 2048, !dbg !11016
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11016
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !11015

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !11017, !tbaa !2436
  %and9 = and i32 %9, 64, !dbg !11018
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11017
  %10 = zext i1 %tobool10 to i64, !dbg !11017
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !11017
  br label %cond.end, !dbg !11015

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !11019, !tbaa !2436
  %and12 = and i32 %11, 64, !dbg !11020
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11019
  %12 = zext i1 %tobool13 to i64, !dbg !11019
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !11019
  br label %cond.end, !dbg !11015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !11015
  %conv16 = trunc i32 %cond15 to i8, !dbg !11021
  %13 = load i8*, i8** %str.addr, align 8, !dbg !11022, !tbaa !2442
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11022, !ctir !143
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !11023, !tbaa !2497
  %14 = load i32, i32* %mode.addr, align 4, !dbg !11024, !tbaa !2436
  %and18 = and i32 %14, 32, !dbg !11025
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11024
  %15 = zext i1 %tobool19 to i64, !dbg !11024
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !11024
  %conv21 = trunc i32 %cond20 to i8, !dbg !11024
  %16 = load i8*, i8** %str.addr, align 8, !dbg !11026, !tbaa !2442
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !11026, !ctir !143
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !11027, !tbaa !2497
  %17 = load i32, i32* %mode.addr, align 4, !dbg !11028, !tbaa !2436
  %and23 = and i32 %17, 16, !dbg !11029
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11028
  %18 = zext i1 %tobool24 to i64, !dbg !11028
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !11028
  %conv26 = trunc i32 %cond25 to i8, !dbg !11028
  %19 = load i8*, i8** %str.addr, align 8, !dbg !11030, !tbaa !2442
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !11030, !ctir !143
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !11031, !tbaa !2497
  %20 = load i32, i32* %mode.addr, align 4, !dbg !11032, !tbaa !2436
  %and28 = and i32 %20, 1024, !dbg !11033
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11033
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !11032

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !11034, !tbaa !2436
  %and31 = and i32 %21, 8, !dbg !11035
  %tobool32 = icmp ne i32 %and31, 0, !dbg !11034
  %22 = zext i1 %tobool32 to i64, !dbg !11034
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !11034
  br label %cond.end38, !dbg !11032

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !11036, !tbaa !2436
  %and35 = and i32 %23, 8, !dbg !11037
  %tobool36 = icmp ne i32 %and35, 0, !dbg !11036
  %24 = zext i1 %tobool36 to i64, !dbg !11036
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !11036
  br label %cond.end38, !dbg !11032

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !11032
  %conv40 = trunc i32 %cond39 to i8, !dbg !11038
  %25 = load i8*, i8** %str.addr, align 8, !dbg !11039, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !11039, !ctir !143
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !11040, !tbaa !2497
  %26 = load i32, i32* %mode.addr, align 4, !dbg !11041, !tbaa !2436
  %and42 = and i32 %26, 4, !dbg !11042
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11041
  %27 = zext i1 %tobool43 to i64, !dbg !11041
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !11041
  %conv45 = trunc i32 %cond44 to i8, !dbg !11041
  %28 = load i8*, i8** %str.addr, align 8, !dbg !11043, !tbaa !2442
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !11043, !ctir !143
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !11044, !tbaa !2497
  %29 = load i32, i32* %mode.addr, align 4, !dbg !11045, !tbaa !2436
  %and47 = and i32 %29, 2, !dbg !11046
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11045
  %30 = zext i1 %tobool48 to i64, !dbg !11045
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !11045
  %conv50 = trunc i32 %cond49 to i8, !dbg !11045
  %31 = load i8*, i8** %str.addr, align 8, !dbg !11047, !tbaa !2442
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !11047, !ctir !143
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !11048, !tbaa !2497
  %32 = load i32, i32* %mode.addr, align 4, !dbg !11049, !tbaa !2436
  %and52 = and i32 %32, 512, !dbg !11050
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11050
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !11049

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !11051, !tbaa !2436
  %and55 = and i32 %33, 1, !dbg !11052
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11051
  %34 = zext i1 %tobool56 to i64, !dbg !11051
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !11051
  br label %cond.end62, !dbg !11049

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !11053, !tbaa !2436
  %and59 = and i32 %35, 1, !dbg !11054
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11053
  %36 = zext i1 %tobool60 to i64, !dbg !11053
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !11053
  br label %cond.end62, !dbg !11049

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !11049
  %conv64 = trunc i32 %cond63 to i8, !dbg !11055
  %37 = load i8*, i8** %str.addr, align 8, !dbg !11056, !tbaa !2442
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !11056, !ctir !143
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !11057, !tbaa !2497
  %38 = load i8*, i8** %str.addr, align 8, !dbg !11058, !tbaa !2442
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !11058, !ctir !143
  store i8 32, i8* %arrayidx66, align 1, !dbg !11059, !tbaa !2497
  %39 = load i8*, i8** %str.addr, align 8, !dbg !11060, !tbaa !2442
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !11060, !ctir !143
  store i8 0, i8* %arrayidx67, align 1, !dbg !11061, !tbaa !2497
  ret void, !dbg !11062
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #0 !dbg !11063 !ctir !1809 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11066, !tbaa !2436
  %and = and i32 %0, 61440, !dbg !11066
  %cmp = icmp eq i32 %and, 32768, !dbg !11066
  br i1 %cmp, label %if.then, label %if.end, !dbg !11068

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !11069
  br label %return, !dbg !11069

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !11070, !tbaa !2436
  %and1 = and i32 %1, 61440, !dbg !11070
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !11070
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11072

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !11073
  br label %return, !dbg !11073

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11074, !tbaa !2436
  %and5 = and i32 %2, 61440, !dbg !11074
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11074
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11076

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11077
  br label %return, !dbg !11077

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11078, !tbaa !2436
  %and9 = and i32 %3, 61440, !dbg !11078
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11078
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11080

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11081
  br label %return, !dbg !11081

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11082, !tbaa !2436
  %and13 = and i32 %4, 61440, !dbg !11082
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11082
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11084

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11085
  br label %return, !dbg !11085

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11086, !tbaa !2436
  %and17 = and i32 %5, 61440, !dbg !11086
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11086
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11088

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11089
  br label %return, !dbg !11089

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11090, !tbaa !2436
  %and21 = and i32 %6, 61440, !dbg !11090
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11090
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11092

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11093
  br label %return, !dbg !11093

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11094
  br label %return, !dbg !11094

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11095
  ret i8 %7, !dbg !11095
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #0 !dbg !11096 !ctir !1784 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11101, !tbaa !2442
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11102, !ctir !1787
  %1 = load i32, i32* %st_mode, align 8, !dbg !11102, !tbaa !4189, !ctir !201
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11103, !tbaa !2442
  call void @strmode(i32 %1, i8* %2), !dbg !11104
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11105, !tbaa !2442
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11105, !ctir !1787
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11105, !tbaa !4189, !ctir !201
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11105, !tbaa !2442
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11105, !ctir !1787
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11105, !tbaa !4189, !ctir !201
  %sub = sub i32 %4, %6, !dbg !11105
  %tobool = icmp ne i32 %sub, 0, !dbg !11105
  br i1 %tobool, label %if.then, label %if.else, !dbg !11107

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11108, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11108, !ctir !143
  store i8 70, i8* %arrayidx, align 1, !dbg !11109, !tbaa !2497
  br label %if.end18, !dbg !11108

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11110, !tbaa !2442
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11110, !ctir !1787
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11110, !tbaa !4189, !ctir !201
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11110, !tbaa !2442
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11110, !ctir !1787
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11110, !tbaa !4189, !ctir !201
  %sub5 = sub i32 %9, %11, !dbg !11110
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11110
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11113

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11114, !tbaa !2442
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11114, !ctir !143
  store i8 81, i8* %arrayidx8, align 1, !dbg !11115, !tbaa !2497
  br label %if.end17, !dbg !11114

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11116, !tbaa !2442
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11116, !ctir !1787
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11116, !tbaa !4189, !ctir !201
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11116, !tbaa !2442
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11116, !ctir !1787
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11116, !tbaa !4189, !ctir !201
  %sub12 = sub i32 %14, %16, !dbg !11116
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11116
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11118

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11119, !tbaa !2442
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11119, !ctir !143
  store i8 83, i8* %arrayidx15, align 1, !dbg !11120, !tbaa !2497
  br label %if.end, !dbg !11119

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11121
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11122 !ctir !1814 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  store i8* %base, i8** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11130, metadata !DIExpression()), !dbg !11131
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11132, !tbaa !2442
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11133, !tbaa !2442
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11134, !tbaa !2442
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11135
  store i8* %call, i8** %p, align 8, !dbg !11131, !tbaa !2442
  %3 = load i8*, i8** %p, align 8, !dbg !11136, !tbaa !2442
  %cmp = icmp eq i8* %3, null, !dbg !11138
  br i1 %cmp, label %if.then, label %if.end, !dbg !11139

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !11140
  unreachable, !dbg !11140

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11141, !tbaa !2442
  ret i8* %4, !dbg !11142
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11143 !ctir !1814 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !146
  %dirbaselen = alloca i64, align 8, !ctir !149
  %dirlen = alloca i64, align 8, !ctir !149
  %baselen = alloca i64, align 8, !ctir !149
  %sep = alloca i8, align 1, !ctir !144
  %p_concat = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  store i8* %base, i8** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11151, metadata !DIExpression()), !dbg !11152
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11153, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !11154
  store i8* %call, i8** %dirbase, align 8, !dbg !11152, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11155, metadata !DIExpression()), !dbg !11156
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11157, !tbaa !2442
  %call1 = call i64 @base_len(i8* %1) #16, !dbg !11158
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11156, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11159, metadata !DIExpression()), !dbg !11160
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11161, !tbaa !2442
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11162, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11163
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11163
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11163
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11164, !tbaa !2579
  %add = add i64 %sub.ptr.sub, %4, !dbg !11165
  store i64 %add, i64* %dirlen, align 8, !dbg !11160, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11166, metadata !DIExpression()), !dbg !11167
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11168, !tbaa !2442
  %call2 = call i64 @strlen(i8* %5) #16, !dbg !11169
  store i64 %call2, i64* %baselen, align 8, !dbg !11167, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11170, metadata !DIExpression()), !dbg !11171
  store i8 0, i8* %sep, align 1, !dbg !11171, !tbaa !2497
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11172, !tbaa !2579
  %tobool = icmp ne i64 %6, 0, !dbg !11172
  br i1 %tobool, label %if.then, label %if.else, !dbg !11174

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11175, !tbaa !2442
  %8 = load i64, i64* %dirlen, align 8, !dbg !11175, !tbaa !2579
  %sub = sub i64 %8, 1, !dbg !11175
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11175, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11175, !tbaa !2497
  %conv = sext i8 %9 to i32, !dbg !11175
  %cmp = icmp eq i32 %conv, 47, !dbg !11175
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11178

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11179, !tbaa !2442
  %11 = load i8, i8* %10, align 1, !dbg !11179, !tbaa !2497, !ctir !147
  %conv4 = sext i8 %11 to i32, !dbg !11179
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11179
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11180

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11181, !tbaa !2497
  br label %if.end, !dbg !11182

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11183

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11184, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !11184, !tbaa !2497, !ctir !147
  %conv8 = sext i8 %13 to i32, !dbg !11184
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11184
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11186

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11187, !tbaa !2497
  br label %if.end12, !dbg !11189

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11190, metadata !DIExpression()), !dbg !11191
  %14 = load i64, i64* %dirlen, align 8, !dbg !11192, !tbaa !2579
  %15 = load i8, i8* %sep, align 1, !dbg !11193, !tbaa !2497
  %conv14 = sext i8 %15 to i32, !dbg !11193
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11194
  %conv16 = zext i1 %cmp15 to i32, !dbg !11194
  %conv17 = sext i32 %conv16 to i64, !dbg !11195
  %add18 = add i64 %14, %conv17, !dbg !11196
  %16 = load i64, i64* %baselen, align 8, !dbg !11197, !tbaa !2579
  %add19 = add i64 %add18, %16, !dbg !11198
  %add20 = add i64 %add19, 1, !dbg !11199
  %call21 = call noalias i8* @malloc(i64 %add20) #13, !dbg !11200
  store i8* %call21, i8** %p_concat, align 8, !dbg !11191, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11201, metadata !DIExpression()), !dbg !11202
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11203, !tbaa !2442
  %cmp22 = icmp eq i8* %17, null, !dbg !11205
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11206

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11207
  br label %return, !dbg !11207

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11208, !tbaa !2442
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11209, !tbaa !2442
  %20 = load i64, i64* %dirlen, align 8, !dbg !11210, !tbaa !2579
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #13, !dbg !11211
  store i8* %call26, i8** %p, align 8, !dbg !11212, !tbaa !2442
  %21 = load i8, i8* %sep, align 1, !dbg !11213, !tbaa !2497
  %22 = load i8*, i8** %p, align 8, !dbg !11214, !tbaa !2442
  store i8 %21, i8* %22, align 1, !dbg !11215, !tbaa !2497, !ctir !144
  %23 = load i8, i8* %sep, align 1, !dbg !11216, !tbaa !2497
  %conv27 = sext i8 %23 to i32, !dbg !11216
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11217
  %conv29 = zext i1 %cmp28 to i32, !dbg !11217
  %24 = load i8*, i8** %p, align 8, !dbg !11218, !tbaa !2442
  %idx.ext = sext i32 %conv29 to i64, !dbg !11218
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11218
  store i8* %add.ptr, i8** %p, align 8, !dbg !11218, !tbaa !2442
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11219, !tbaa !2442
  %tobool30 = icmp ne i8** %25, null, !dbg !11219
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11221

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11222, !tbaa !2442
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11223, !tbaa !2442
  store i8* %26, i8** %27, align 8, !dbg !11224, !tbaa !2442, !ctir !143
  br label %if.end32, !dbg !11225

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11226, !tbaa !2442
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11227, !tbaa !2442
  %30 = load i64, i64* %baselen, align 8, !dbg !11228, !tbaa !2579
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #13, !dbg !11229
  store i8* %call33, i8** %p, align 8, !dbg !11230, !tbaa !2442
  %31 = load i8*, i8** %p, align 8, !dbg !11231, !tbaa !2442
  store i8 0, i8* %31, align 1, !dbg !11232, !tbaa !2497, !ctir !144
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11233, !tbaa !2442
  store i8* %32, i8** %retval, align 8, !dbg !11234
  br label %return, !dbg !11234

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11235
  ret i8* %33, !dbg !11235
}

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !11236 !ctir !731 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %s1_pos = alloca i8*, align 8, !ctir !146
  %s2_pos = alloca i8*, align 8, !ctir !146
  %s1_suffix = alloca i8*, align 8, !ctir !146
  %s2_suffix = alloca i8*, align 8, !ctir !146
  %s1_len = alloca i64, align 8, !ctir !149
  %s2_len = alloca i64, align 8, !ctir !149
  %result = alloca i32, align 4, !ctir !27
  %simple_cmp = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11238, metadata !DIExpression()), !dbg !11239
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11240, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !11242, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !11244, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !11246, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !11248, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !11250, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !11252, metadata !DIExpression()), !dbg !11253
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11254, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !11256, metadata !DIExpression()), !dbg !11257
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11258, !tbaa !2442
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !11259, !tbaa !2442
  %call = call i32 @strcmp(i8* %0, i8* %1) #16, !dbg !11260
  store i32 %call, i32* %simple_cmp, align 4, !dbg !11257, !tbaa !2436
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !11261, !tbaa !2436
  %cmp = icmp eq i32 %2, 0, !dbg !11263
  br i1 %cmp, label %if.then, label %if.end, !dbg !11264

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11265
  br label %return, !dbg !11265

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !11266, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !11268, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %4, 0, !dbg !11268
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11269

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11270
  br label %return, !dbg !11270

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !11271, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !11273, !tbaa !2497, !ctir !147
  %tobool3 = icmp ne i8 %6, 0, !dbg !11273
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11274

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !11275
  br label %return, !dbg !11275

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11276, !tbaa !2442
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.298, i64 0, i64 0), i8* %7) #16, !dbg !11278
  %cmp7 = icmp eq i32 0, %call6, !dbg !11279
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11280

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !11281
  br label %return, !dbg !11281

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !11282, !tbaa !2442
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.298, i64 0, i64 0), i8* %8) #16, !dbg !11284
  %cmp11 = icmp eq i32 0, %call10, !dbg !11285
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11286

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !11287
  br label %return, !dbg !11287

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !11288, !tbaa !2442
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.299, i64 0, i64 0), i8* %9) #16, !dbg !11290
  %cmp15 = icmp eq i32 0, %call14, !dbg !11291
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11292

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !11293
  br label %return, !dbg !11293

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !11294, !tbaa !2442
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.299, i64 0, i64 0), i8* %10) #16, !dbg !11296
  %cmp19 = icmp eq i32 0, %call18, !dbg !11297
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11298

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11299
  br label %return, !dbg !11299

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !11300, !tbaa !2442
  %12 = load i8, i8* %11, align 1, !dbg !11302, !tbaa !2497, !ctir !147
  %conv = sext i8 %12 to i32, !dbg !11302
  %cmp22 = icmp eq i32 %conv, 46, !dbg !11303
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !11304

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !11305, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !11306, !tbaa !2497, !ctir !147
  %conv24 = sext i8 %14 to i32, !dbg !11306
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !11307
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11308

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11309
  br label %return, !dbg !11309

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !11310, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !11312, !tbaa !2497, !ctir !147
  %conv29 = sext i8 %16 to i32, !dbg !11312
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !11313
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !11314

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !11315, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !11316, !tbaa !2497, !ctir !147
  %conv33 = sext i8 %18 to i32, !dbg !11316
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !11317
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11318

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !11319
  br label %return, !dbg !11319

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11320, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !11322, !tbaa !2497, !ctir !147
  %conv38 = sext i8 %20 to i32, !dbg !11322
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !11323
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !11324

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !11325, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !11326, !tbaa !2497, !ctir !147
  %conv42 = sext i8 %22 to i32, !dbg !11326
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !11327
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11328

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !11329, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11329
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11329, !tbaa !2442
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11331, !tbaa !2442
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11331
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !11331, !tbaa !2442
  br label %if.end47, !dbg !11332

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !11333, !tbaa !2442
  store i8* %25, i8** %s1_pos, align 8, !dbg !11334, !tbaa !2442
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !11335, !tbaa !2442
  store i8* %26, i8** %s2_pos, align 8, !dbg !11336, !tbaa !2442
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !11337
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !11338, !tbaa !2442
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !11339
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !11340, !tbaa !2442
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !11341, !tbaa !2442
  %tobool50 = icmp ne i8* %27, null, !dbg !11341
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !11341

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !11342, !tbaa !2442
  br label %cond.end, !dbg !11341

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !11343, !tbaa !2442
  br label %cond.end, !dbg !11341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11341
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !11344, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !11345
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !11345
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11345
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !11346, !tbaa !2579
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !11347, !tbaa !2442
  %tobool51 = icmp ne i8* %31, null, !dbg !11347
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !11347

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !11348, !tbaa !2442
  br label %cond.end54, !dbg !11347

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !11349, !tbaa !2442
  br label %cond.end54, !dbg !11347

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !11347
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !11350, !tbaa !2442
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !11351
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !11351
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !11351
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !11352, !tbaa !2579
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !11353, !tbaa !2442
  %tobool59 = icmp ne i8* %35, null, !dbg !11353
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11355

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !11356, !tbaa !2442
  %tobool60 = icmp ne i8* %36, null, !dbg !11356
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !11357

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !11358, !tbaa !2579
  %38 = load i64, i64* %s2_len, align 8, !dbg !11359, !tbaa !2579
  %cmp62 = icmp eq i64 %37, %38, !dbg !11360
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !11361

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !11362, !tbaa !2442
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !11363, !tbaa !2442
  %41 = load i64, i64* %s1_len, align 8, !dbg !11364, !tbaa !2579
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #16, !dbg !11365
  %cmp66 = icmp eq i32 0, %call65, !dbg !11366
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !11367

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !11368, !tbaa !2442
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !11370, !tbaa !2442
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !11371
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !11371
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !11371
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !11372, !tbaa !2579
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !11373, !tbaa !2442
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !11374, !tbaa !2442
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !11375
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !11375
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !11375
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !11376, !tbaa !2579
  br label %if.end75, !dbg !11377

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !11378, !tbaa !2442
  %47 = load i64, i64* %s1_len, align 8, !dbg !11379, !tbaa !2579
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !11380, !tbaa !2442
  %49 = load i64, i64* %s2_len, align 8, !dbg !11381, !tbaa !2579
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #16, !dbg !11382
  store i32 %call76, i32* %result, align 4, !dbg !11383, !tbaa !2436
  %50 = load i32, i32* %result, align 4, !dbg !11384, !tbaa !2436
  %cmp77 = icmp eq i32 %50, 0, !dbg !11385
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !11384

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !11386, !tbaa !2436
  br label %cond.end81, !dbg !11384

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !11387, !tbaa !2436
  br label %cond.end81, !dbg !11384

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !11384
  store i32 %cond82, i32* %retval, align 4, !dbg !11388
  br label %return, !dbg !11388

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11389
  ret i32 %53, !dbg !11389
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #0 !dbg !11390 !ctir !1822 {
entry:
  %str.addr = alloca i8**, align 8
  %match = alloca i8*, align 8, !ctir !146
  %read_alpha = alloca i8, align 1, !ctir !141
  store i8** %str, i8*** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata i8** %match, metadata !11393, metadata !DIExpression()), !dbg !11394
  store i8* null, i8** %match, align 8, !dbg !11394, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !11395, metadata !DIExpression()), !dbg !11396
  store i8 0, i8* %read_alpha, align 1, !dbg !11396, !tbaa !2461
  br label %while.cond, !dbg !11397

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !11398, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !11399, !tbaa !2442, !ctir !146
  %2 = load i8, i8* %1, align 1, !dbg !11400, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !11397
  br i1 %tobool, label %while.body, label %while.end, !dbg !11397

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !11401, !tbaa !2461
  %tobool1 = trunc i8 %3 to i1, !dbg !11401
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11404

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !11405, !tbaa !2461
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !11407, !tbaa !2442
  %5 = load i8*, i8** %4, align 8, !dbg !11409, !tbaa !2442, !ctir !146
  %6 = load i8, i8* %5, align 1, !dbg !11410, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !11410
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !11411
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !11412

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !11413, !tbaa !2442
  %8 = load i8*, i8** %7, align 8, !dbg !11414, !tbaa !2442, !ctir !146
  %9 = load i8, i8* %8, align 1, !dbg !11415, !tbaa !2497, !ctir !147
  %conv2 = sext i8 %9 to i32, !dbg !11415
  %cmp = icmp ne i32 126, %conv2, !dbg !11416
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11417

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !11418, !tbaa !2442
  br label %if.end, !dbg !11419

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !11420

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !11421, !tbaa !2442
  %11 = load i8*, i8** %10, align 8, !dbg !11423, !tbaa !2442, !ctir !146
  %12 = load i8, i8* %11, align 1, !dbg !11424, !tbaa !2497, !ctir !147
  %conv5 = sext i8 %12 to i32, !dbg !11424
  %cmp6 = icmp eq i32 46, %conv5, !dbg !11425
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11426

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !11427, !tbaa !2461
  %13 = load i8*, i8** %match, align 8, !dbg !11429, !tbaa !2442
  %tobool9 = icmp ne i8* %13, null, !dbg !11429
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11431

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !11432, !tbaa !2442
  %15 = load i8*, i8** %14, align 8, !dbg !11433, !tbaa !2442, !ctir !146
  store i8* %15, i8** %match, align 8, !dbg !11434, !tbaa !2442
  br label %if.end11, !dbg !11435

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !11436

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !11437, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !11439, !tbaa !2442, !ctir !146
  %18 = load i8, i8* %17, align 1, !dbg !11440, !tbaa !2497, !ctir !147
  %conv13 = sext i8 %18 to i32, !dbg !11440
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !11441
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !11442

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !11443, !tbaa !2442
  %20 = load i8*, i8** %19, align 8, !dbg !11444, !tbaa !2442, !ctir !146
  %21 = load i8, i8* %20, align 1, !dbg !11445, !tbaa !2497, !ctir !147
  %conv16 = sext i8 %21 to i32, !dbg !11445
  %cmp17 = icmp ne i32 126, %conv16, !dbg !11446
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11447

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !11448, !tbaa !2442
  br label %if.end20, !dbg !11449

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !11450, !tbaa !2442
  %23 = load i8*, i8** %22, align 8, !dbg !11451, !tbaa !2442, !ctir !146
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11451
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !11451, !tbaa !2442, !ctir !146
  br label %while.cond, !dbg !11397, !llvm.loop !11452

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !11454, !tbaa !2442
  ret i8* %24, !dbg !11455
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !11456 !ctir !1824 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1_len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2_len.addr = alloca i64, align 8
  %s1_pos = alloca i64, align 8, !ctir !149
  %s2_pos = alloca i64, align 8, !ctir !149
  %first_diff = alloca i32, align 4, !ctir !27
  %s1_c = alloca i32, align 4, !ctir !27
  %s2_c = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i64 %s1_len, i64* %s1_len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !11459, metadata !DIExpression()), !dbg !11460
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11461, metadata !DIExpression()), !dbg !11462
  store i64 %s2_len, i64* %s2_len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !11463, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !11465, metadata !DIExpression()), !dbg !11466
  store i64 0, i64* %s1_pos, align 8, !dbg !11466, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !11467, metadata !DIExpression()), !dbg !11468
  store i64 0, i64* %s2_pos, align 8, !dbg !11468, !tbaa !2579
  br label %while.cond, !dbg !11469

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !11470, !tbaa !2579
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !11471, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !11472
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11473

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !11474, !tbaa !2579
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !11475, !tbaa !2579
  %cmp1 = icmp ult i64 %2, %3, !dbg !11476
  br label %lor.end, !dbg !11473

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !11469

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !11477, metadata !DIExpression()), !dbg !11479
  store i32 0, i32* %first_diff, align 4, !dbg !11479, !tbaa !2436
  br label %while.cond2, !dbg !11480

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !11481, !tbaa !2579
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !11482, !tbaa !2579
  %cmp3 = icmp ult i64 %5, %6, !dbg !11483
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !11484

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11485, !tbaa !2442
  %8 = load i64, i64* %s1_pos, align 8, !dbg !11486, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11485, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11485, !tbaa !2497
  %conv = sext i8 %9 to i32, !dbg !11485
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11487
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !11488

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !11489, !tbaa !2579
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !11490, !tbaa !2579
  %cmp5 = icmp ult i64 %10, %11, !dbg !11491
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !11492

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !11493, !tbaa !2442
  %13 = load i64, i64* %s2_pos, align 8, !dbg !11494, !tbaa !2579
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11493, !ctir !146
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !11493, !tbaa !2497
  %conv8 = sext i8 %14 to i32, !dbg !11493
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !11495
  %lnot = xor i1 %call9, true, !dbg !11496
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !11497
  br label %lor.end10, !dbg !11488

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !11480

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !11498, metadata !DIExpression()), !dbg !11500
  %17 = load i64, i64* %s1_pos, align 8, !dbg !11501, !tbaa !2579
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !11502, !tbaa !2579
  %cmp12 = icmp eq i64 %17, %18, !dbg !11503
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11504

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !11504

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11505, !tbaa !2442
  %20 = load i64, i64* %s1_pos, align 8, !dbg !11506, !tbaa !2579
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11505, !ctir !146
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11505, !tbaa !2497
  %call15 = call i32 @order(i8 zeroext %21), !dbg !11507
  br label %cond.end, !dbg !11504

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !11504
  store i32 %cond, i32* %s1_c, align 4, !dbg !11500, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !11508, metadata !DIExpression()), !dbg !11509
  %22 = load i64, i64* %s2_pos, align 8, !dbg !11510, !tbaa !2579
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11511, !tbaa !2579
  %cmp16 = icmp eq i64 %22, %23, !dbg !11512
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11513

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11513

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11514, !tbaa !2442
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11515, !tbaa !2579
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11514, !ctir !146
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11514, !tbaa !2497
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11516
  br label %cond.end22, !dbg !11513

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11513
  store i32 %cond23, i32* %s2_c, align 4, !dbg !11509, !tbaa !2436
  %27 = load i32, i32* %s1_c, align 4, !dbg !11517, !tbaa !2436
  %28 = load i32, i32* %s2_c, align 4, !dbg !11519, !tbaa !2436
  %cmp24 = icmp ne i32 %27, %28, !dbg !11520
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11521

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11522, !tbaa !2436
  %30 = load i32, i32* %s2_c, align 4, !dbg !11523, !tbaa !2436
  %sub = sub nsw i32 %29, %30, !dbg !11524
  store i32 %sub, i32* %retval, align 4, !dbg !11525
  br label %return, !dbg !11525

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11526, !tbaa !2579
  %inc = add i64 %31, 1, !dbg !11526
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11526, !tbaa !2579
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11527, !tbaa !2579
  %inc26 = add i64 %32, 1, !dbg !11527
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11527, !tbaa !2579
  br label %while.cond2, !dbg !11480, !llvm.loop !11528

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11530

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11531, !tbaa !2442
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11532, !tbaa !2579
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11531, !ctir !146
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11531, !tbaa !2497
  %conv29 = sext i8 %35 to i32, !dbg !11531
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11533
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11530

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11534, !tbaa !2579
  %inc33 = add i64 %36, 1, !dbg !11534
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11534, !tbaa !2579
  br label %while.cond27, !dbg !11530, !llvm.loop !11535

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11536

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11537, !tbaa !2442
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11538, !tbaa !2579
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11537, !ctir !146
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11537, !tbaa !2497
  %conv37 = sext i8 %39 to i32, !dbg !11537
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11539
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11536

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11540, !tbaa !2579
  %inc41 = add i64 %40, 1, !dbg !11540
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11540, !tbaa !2579
  br label %while.cond35, !dbg !11536, !llvm.loop !11541

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11542

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11543, !tbaa !2442
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11544, !tbaa !2579
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11543, !ctir !146
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11543, !tbaa !2497
  %conv45 = sext i8 %43 to i32, !dbg !11543
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11545
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11546

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11547, !tbaa !2442
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11548, !tbaa !2579
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11547, !ctir !146
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11547, !tbaa !2497
  %conv50 = sext i8 %46 to i32, !dbg !11547
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11549
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !11497
  br i1 %47, label %while.body54, label %while.end64, !dbg !11542

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11550, !tbaa !2436
  %tobool = icmp ne i32 %48, 0, !dbg !11550
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11553

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11554, !tbaa !2442
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11555, !tbaa !2579
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11554, !ctir !146
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11554, !tbaa !2497
  %conv57 = sext i8 %51 to i32, !dbg !11554
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11556, !tbaa !2442
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11557, !tbaa !2579
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11556, !ctir !146
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11556, !tbaa !2497
  %conv59 = sext i8 %54 to i32, !dbg !11556
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11558
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11559, !tbaa !2436
  br label %if.end61, !dbg !11560

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11561, !tbaa !2579
  %inc62 = add i64 %55, 1, !dbg !11561
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11561, !tbaa !2579
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11562, !tbaa !2579
  %inc63 = add i64 %56, 1, !dbg !11562
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11562, !tbaa !2579
  br label %while.cond43, !dbg !11542, !llvm.loop !11563

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11565, !tbaa !2442
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11567, !tbaa !2579
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11565, !ctir !146
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11565, !tbaa !2497
  %conv66 = sext i8 %59 to i32, !dbg !11565
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11568
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11569

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11570
  br label %return, !dbg !11570

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11571, !tbaa !2442
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11573, !tbaa !2579
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11571, !ctir !146
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11571, !tbaa !2497
  %conv71 = sext i8 %62 to i32, !dbg !11571
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11574
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11575

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11576
  br label %return, !dbg !11576

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11577, !tbaa !2436
  %tobool75 = icmp ne i32 %63, 0, !dbg !11577
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11579

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11580, !tbaa !2436
  store i32 %64, i32* %retval, align 4, !dbg !11581
  br label %return, !dbg !11581

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !11469, !llvm.loop !11582

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11584
  br label %return, !dbg !11584

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11585
  ret i32 %65, !dbg !11585
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #0 !dbg !11586 !ctir !1826 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  %0 = load i8, i8* %c.addr, align 1, !dbg !11589, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !11589
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11591
  br i1 %call, label %if.then, label %if.else, !dbg !11592

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11593
  br label %return, !dbg !11593

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11594, !tbaa !2497
  %conv1 = zext i8 %1 to i32, !dbg !11594
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11596
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11597

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11598, !tbaa !2497
  %conv4 = zext i8 %2 to i32, !dbg !11598
  store i32 %conv4, i32* %retval, align 4, !dbg !11599
  br label %return, !dbg !11599

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11600, !tbaa !2497
  %conv6 = zext i8 %3 to i32, !dbg !11600
  %cmp = icmp eq i32 %conv6, 126, !dbg !11602
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11603

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11604
  br label %return, !dbg !11604

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11605, !tbaa !2497
  %conv10 = zext i8 %4 to i32, !dbg !11606
  %add = add nsw i32 %conv10, 255, !dbg !11607
  %add11 = add nsw i32 %add, 1, !dbg !11608
  store i32 %add11, i32* %retval, align 4, !dbg !11609
  br label %return, !dbg !11609

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11610
  ret i32 %5, !dbg !11610
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.dev_ino* nonnull %ts) #0 !dbg !11611 !ctir !1831 {
entry:
  %ts.addr = alloca %struct.dev_ino*, align 8
  store %struct.dev_ino* %ts, %struct.dev_ino** %ts.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ts.addr, metadata !11613, metadata !DIExpression()), !dbg !11614
  %0 = load %struct.dev_ino*, %struct.dev_ino** %ts.addr, align 8, !dbg !11615, !tbaa !2442
  %call = call i32 @clock_gettime(i32 0, %struct.dev_ino* %0) #13, !dbg !11616
  ret void, !dbg !11617
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.dev_ino*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #0 !dbg !11618 !ctir !1838 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @gettime(%struct.dev_ino* %retval), !dbg !11621
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !11622
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !11622
  ret { i64, i64 } %1, !dbg !11622
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #0 !dbg !11623 !ctir !680 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  store i32 %category, i32* %category.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11627, metadata !DIExpression()), !dbg !11628
  store i8 1, i8* %hard, align 1, !dbg !11628, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11629, metadata !DIExpression()), !dbg !11630
  %0 = load i32, i32* %category.addr, align 4, !dbg !11631, !tbaa !2436
  %call = call i8* @setlocale(i32 %0, i8* null) #13, !dbg !11632
  store i8* %call, i8** %p, align 8, !dbg !11630, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !11633, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !11633
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11635

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11636, !tbaa !2442
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.304, i64 0, i64 0)) #16, !dbg !11641
  %cmp = icmp eq i32 %call1, 0, !dbg !11642
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11643

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11644, !tbaa !2442
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.305, i64 0, i64 0)) #16, !dbg !11645
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11646
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11647

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11648, !tbaa !2461
  br label %if.end, !dbg !11649

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11650

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11651, !tbaa !2461
  %tobool6 = trunc i8 %4 to i1, !dbg !11651
  ret i1 %tobool6, !dbg !11652
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11653 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11656, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11657, !ctir !1156
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11657, !tbaa !11658, !ctir !149
  ret i64 %1, !dbg !11660
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11661 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11662, metadata !DIExpression()), !dbg !11663
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11664, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11665, !ctir !1156
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11665, !tbaa !11666, !ctir !149
  ret i64 %1, !dbg !11667
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11668 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11669, metadata !DIExpression()), !dbg !11670
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11671, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11672, !ctir !1156
  %1 = load i64, i64* %n_entries, align 8, !dbg !11672, !tbaa !11673, !ctir !149
  ret i64 %1, !dbg !11674
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11675 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %max_bucket_length = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  %bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11678, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11680, metadata !DIExpression()), !dbg !11681
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11681, !tbaa !2579
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11682, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11684, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11684, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11686, !tbaa !2442
  br label %for.cond, !dbg !11687

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11688, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11690, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11691, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11691, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11693
  br i1 %cmp, label %for.body, label %for.end, !dbg !11694

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11695, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11698, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !11698, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11695
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11701

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11702, metadata !DIExpression()), !dbg !11704
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11705, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11704, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11706, metadata !DIExpression()), !dbg !11707
  store i64 1, i64* %bucket_length, align 8, !dbg !11707, !tbaa !2579
  br label %while.cond, !dbg !11708

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11709, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11710, !ctir !1169
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11710, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11712, !tbaa !2442
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11713, !tbaa !2442
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11708
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11708

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11714, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !11714
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11714, !tbaa !2579
  br label %while.cond, !dbg !11708, !llvm.loop !11715

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11716, !tbaa !2579
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11718, !tbaa !2579
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11719
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11720

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11721, !tbaa !2579
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11722, !tbaa !2579
  br label %if.end, !dbg !11723

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11724

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11725

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11726, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11726
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11726, !tbaa !2442
  br label %for.cond, !dbg !11727, !llvm.loop !11728

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11730, !tbaa !2579
  ret i64 %16, !dbg !11731
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11732 !ctir !1194 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %n_entries = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11733, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11735, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11737, metadata !DIExpression()), !dbg !11738
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11738, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11739, metadata !DIExpression()), !dbg !11740
  store i64 0, i64* %n_entries, align 8, !dbg !11740, !tbaa !2579
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11741, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11743, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11743, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11744, !tbaa !2442
  br label %for.cond, !dbg !11745

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11746, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11748, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11749, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11749, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11750
  br i1 %cmp, label %for.body, label %for.end, !dbg !11751

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11752, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11755, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !11755, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11752
  br i1 %tobool, label %if.then, label %if.end, !dbg !11756

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11757, metadata !DIExpression()), !dbg !11759
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11760, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11759, !tbaa !2442
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11761, !tbaa !2579
  %inc = add i64 %8, 1, !dbg !11761
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11761, !tbaa !2579
  %9 = load i64, i64* %n_entries, align 8, !dbg !11762, !tbaa !2579
  %inc2 = add i64 %9, 1, !dbg !11762
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11762, !tbaa !2579
  br label %while.cond, !dbg !11763

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11764, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11765, !ctir !1169
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11765, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11766, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11767, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11763
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11763

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11768, !tbaa !2579
  %inc4 = add i64 %13, 1, !dbg !11768
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11768, !tbaa !2579
  br label %while.cond, !dbg !11763, !llvm.loop !11769

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11770

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11771

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11772, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11772
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11772, !tbaa !2442
  br label %for.cond, !dbg !11773, !llvm.loop !11774

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11776, !tbaa !2579
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11778, !tbaa !2442
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11779, !ctir !1156
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11779, !tbaa !11666, !ctir !149
  %cmp6 = icmp eq i64 %15, %17, !dbg !11780
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11781

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11782, !tbaa !2579
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11783, !tbaa !2442
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11784, !ctir !1156
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11784, !tbaa !11673, !ctir !149
  %cmp8 = icmp eq i64 %18, %20, !dbg !11785
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11786

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11787
  br label %return, !dbg !11787

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11788
  br label %return, !dbg !11788

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11789
  ret i1 %21, !dbg !11789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 !dbg !11790 !ctir !1196 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !149
  %n_buckets = alloca i64, align 8, !ctir !149
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %max_bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11791, metadata !DIExpression()), !dbg !11792
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11793, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11795, metadata !DIExpression()), !dbg !11796
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11797, !tbaa !2442
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #16, !dbg !11798
  store i64 %call, i64* %n_entries, align 8, !dbg !11796, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11799, metadata !DIExpression()), !dbg !11800
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11801, !tbaa !2442
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #16, !dbg !11802
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11800, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11803, metadata !DIExpression()), !dbg !11804
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11805, !tbaa !2442
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #16, !dbg !11806
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11804, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11807, metadata !DIExpression()), !dbg !11808
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11809, !tbaa !2442
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #16, !dbg !11810
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11808, !tbaa !2579
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11811, !tbaa !2442
  %5 = load i64, i64* %n_entries, align 8, !dbg !11812, !tbaa !2579
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.308, i64 0, i64 0), i64 %5), !dbg !11813
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11814, !tbaa !2442
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11815, !tbaa !2579
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.309, i64 0, i64 0), i64 %7), !dbg !11816
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11817, !tbaa !2442
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11818, !tbaa !2579
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11819, !tbaa !2579
  %conv = uitofp i64 %10 to double, !dbg !11819
  %mul = fmul double 1.000000e+02, %conv, !dbg !11820
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11821, !tbaa !2579
  %conv6 = uitofp i64 %11 to double, !dbg !11821
  %div = fdiv double %mul, %conv6, !dbg !11822
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.310, i64 0, i64 0), i64 %9, double %div), !dbg !11823
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11824, !tbaa !2442
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11825, !tbaa !2579
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.311, i64 0, i64 0), i64 %13), !dbg !11826
  ret void, !dbg !11827
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11828 !ctir !1232 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11829, metadata !DIExpression()), !dbg !11830
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11831, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11833, metadata !DIExpression()), !dbg !11834
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11835, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11836, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11837
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11834, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11838, metadata !DIExpression()), !dbg !11839
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11840, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11842, !ctir !1169
  %3 = load i8*, i8** %data, align 8, !dbg !11842, !tbaa !11699, !ctir !167
  %cmp = icmp eq i8* %3, null, !dbg !11843
  br i1 %cmp, label %if.then, label %if.end, !dbg !11844

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11845
  br label %return, !dbg !11845

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11846, !tbaa !2442
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11848, !tbaa !2442
  br label %for.cond, !dbg !11849

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11850, !tbaa !2442
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11852
  br i1 %tobool, label %for.body, label %for.end, !dbg !11852

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11853, !tbaa !2442
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11855, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11856, !ctir !1169
  %8 = load i8*, i8** %data2, align 8, !dbg !11856, !tbaa !11699, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !11857
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11858

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11859, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11860, !ctir !1156
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11860, !tbaa !11861, !ctir !1189
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11862, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11863, !tbaa !2442
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11864, !ctir !1169
  %13 = load i8*, i8** %data4, align 8, !dbg !11864, !tbaa !11699, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11859
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11865

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11866, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11867, !ctir !1169
  %15 = load i8*, i8** %data7, align 8, !dbg !11867, !tbaa !11699, !ctir !167
  store i8* %15, i8** %retval, align 8, !dbg !11868
  br label %return, !dbg !11868

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11869

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11870, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11871, !ctir !1169
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11871, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11872, !tbaa !2442
  br label %for.cond, !dbg !11873, !llvm.loop !11874

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11876
  br label %return, !dbg !11876

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11877
  ret i8* %18, !dbg !11877
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #0 !dbg !11878 !ctir !1260 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  store i8* %key, i8** %key.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11881, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11883, metadata !DIExpression()), !dbg !11884
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11885, !tbaa !2442
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11886, !ctir !1156
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11886, !tbaa !11887, !ctir !1186
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11888, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11889, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11890, !ctir !1156
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11890, !tbaa !11658, !ctir !149
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11885
  store i64 %call, i64* %n, align 8, !dbg !11884, !tbaa !2579
  %5 = load i64, i64* %n, align 8, !dbg !11891, !tbaa !2579
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11893, !tbaa !2442
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11894, !ctir !1156
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11894, !tbaa !11658, !ctir !149
  %cmp = icmp ult i64 %5, %7, !dbg !11895
  br i1 %cmp, label %if.end, label %if.then, !dbg !11896

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !11897
  unreachable, !dbg !11897

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11898, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11899, !ctir !1156
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11899, !tbaa !11685, !ctir !1162
  %10 = load i64, i64* %n, align 8, !dbg !11900, !tbaa !2579
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11901
  ret %struct.hash_entry* %add.ptr, !dbg !11902
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11903 !ctir !1234 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11906, metadata !DIExpression()), !dbg !11907
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11908, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11910, !ctir !1156
  %1 = load i64, i64* %n_entries, align 8, !dbg !11910, !tbaa !11673, !ctir !149
  %cmp = icmp eq i64 %1, 0, !dbg !11911
  br i1 %cmp, label %if.then, label %if.end, !dbg !11912

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11913
  br label %return, !dbg !11913

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11914, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11916, !ctir !1156
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11916, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11917, !tbaa !2442
  br label %for.cond, !dbg !11918

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11919, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11922, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11923, !ctir !1156
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11923, !tbaa !11692, !ctir !1168
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11924
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11925

if.then3:                                         ; preds = %for.cond
  call void @abort() #15, !dbg !11926
  unreachable, !dbg !11926

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11927, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11929, !ctir !1169
  %8 = load i8*, i8** %data, align 8, !dbg !11929, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %8, null, !dbg !11927
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11930

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11931, !tbaa !2442
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11932, !ctir !1169
  %10 = load i8*, i8** %data5, align 8, !dbg !11932, !tbaa !11699, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11933
  br label %return, !dbg !11933

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11934

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11935, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11935
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11935, !tbaa !2442
  br label %for.cond, !dbg !11936, !llvm.loop !11937

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11940
  ret i8* %12, !dbg !11940
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11941 !ctir !1232 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11946, metadata !DIExpression()), !dbg !11947
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11948, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11949, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11950
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11947, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11951, metadata !DIExpression()), !dbg !11952
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11953, !tbaa !2442
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11954, !tbaa !2442
  br label %do.body, !dbg !11955

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11956, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11959, !ctir !1169
  %4 = load i8*, i8** %data, align 8, !dbg !11959, !tbaa !11699, !ctir !167
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11960, !tbaa !2442
  %cmp = icmp eq i8* %4, %5, !dbg !11961
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11962

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11963, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11964, !ctir !1169
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11964, !tbaa !11711, !ctir !1162
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11963
  br i1 %tobool, label %if.then, label %if.end, !dbg !11965

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11966, !tbaa !2442
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11967, !ctir !1169
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11967, !tbaa !11711, !ctir !1162
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11968, !ctir !1163
  %10 = load i8*, i8** %data3, align 8, !dbg !11968, !tbaa !11699, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11969
  br label %return, !dbg !11969

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11970, !tbaa !2442
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11971, !ctir !1169
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11971, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11972, !tbaa !2442
  br label %do.cond, !dbg !11973

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11974, !tbaa !2442
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11975
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11973, !llvm.loop !11976

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11978

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11979, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11979
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11979, !tbaa !2442
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11980, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11981, !ctir !1156
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11981, !tbaa !11692, !ctir !1168
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11982
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11978

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11983, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11985, !ctir !1169
  %18 = load i8*, i8** %data7, align 8, !dbg !11985, !tbaa !11699, !ctir !167
  %tobool8 = icmp ne i8* %18, null, !dbg !11983
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11986

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11987, !tbaa !2442
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11988, !ctir !1169
  %20 = load i8*, i8** %data10, align 8, !dbg !11988, !tbaa !11699, !ctir !167
  store i8* %20, i8** %retval, align 8, !dbg !11989
  br label %return, !dbg !11989

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11978, !llvm.loop !11990

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11992
  br label %return, !dbg !11992

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11993
  ret i8* %21, !dbg !11993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 !dbg !11994 !ctir !1236 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11999, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12001, metadata !DIExpression()), !dbg !12002
  store i64 0, i64* %counter, align 8, !dbg !12002, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12003, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12005, metadata !DIExpression()), !dbg !12006
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12007, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12009, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12009, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12010, !tbaa !2442
  br label %for.cond, !dbg !12011

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12012, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12014, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12015, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12015, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12016
  br i1 %cmp, label %for.body, label %for.end10, !dbg !12017

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12018, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12021, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !12021, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12018
  br i1 %tobool, label %if.then, label %if.end8, !dbg !12022

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12023, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12026, !tbaa !2442
  br label %for.cond2, !dbg !12027

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12028, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12030
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12030

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !12031, !tbaa !2579
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !12034, !tbaa !2579
  %cmp5 = icmp uge i64 %9, %10, !dbg !12035
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12036

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !12037, !tbaa !2579
  store i64 %11, i64* %retval, align 8, !dbg !12038
  br label %return, !dbg !12038

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12039, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12040, !ctir !1169
  %13 = load i8*, i8** %data7, align 8, !dbg !12040, !tbaa !11699, !ctir !167
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !12041, !tbaa !2442
  %15 = load i64, i64* %counter, align 8, !dbg !12042, !tbaa !2579
  %inc = add i64 %15, 1, !dbg !12042
  store i64 %inc, i64* %counter, align 8, !dbg !12042, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !12041, !ctir !663
  store i8* %13, i8** %arrayidx, align 8, !dbg !12043, !tbaa !2442
  br label %for.inc, !dbg !12044

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12045, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !12046, !ctir !1169
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12046, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !12047, !tbaa !2442
  br label %for.cond2, !dbg !12048, !llvm.loop !12049

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !12051

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !12052

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12053, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !12053
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12053, !tbaa !2442
  br label %for.cond, !dbg !12054, !llvm.loop !12055

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !12057, !tbaa !2579
  store i64 %19, i64* %retval, align 8, !dbg !12058
  br label %return, !dbg !12058

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !12059
  ret i64 %20, !dbg !12059
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 !dbg !12060 !ctir !1238 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !12065, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12067, metadata !DIExpression()), !dbg !12068
  store i64 0, i64* %counter, align 8, !dbg !12068, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12069, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12071, metadata !DIExpression()), !dbg !12072
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12073, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12075, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12075, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12076, !tbaa !2442
  br label %for.cond, !dbg !12077

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12078, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12080, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12081, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12081, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12082
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12083

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12084, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12087, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !12087, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12084
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12088

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12089, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12092, !tbaa !2442
  br label %for.cond2, !dbg !12093

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12094, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12096
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12096

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12097, !tbaa !2442
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12100, !tbaa !2442
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12101, !ctir !1169
  %11 = load i8*, i8** %data5, align 8, !dbg !12101, !tbaa !11699, !ctir !167
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12102, !tbaa !2442
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12097
  br i1 %call, label %if.end, label %if.then6, !dbg !12103

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12104, !tbaa !2579
  store i64 %13, i64* %retval, align 8, !dbg !12105
  br label %return, !dbg !12105

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12106, !tbaa !2579
  %inc = add i64 %14, 1, !dbg !12106
  store i64 %inc, i64* %counter, align 8, !dbg !12106, !tbaa !2579
  br label %for.inc, !dbg !12107

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12108, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12109, !ctir !1169
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12109, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12110, !tbaa !2442
  br label %for.cond2, !dbg !12111, !llvm.loop !12112

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12114

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12115

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12116, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12116
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12116, !tbaa !2442
  br label %for.cond, !dbg !12117, !llvm.loop !12118

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12120, !tbaa !2579
  store i64 %18, i64* %retval, align 8, !dbg !12121
  br label %return, !dbg !12121

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12122
  ret i64 %19, !dbg !12122
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12123 !ctir !1244 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !149
  %ch = alloca i8, align 1, !ctir !591
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12124, metadata !DIExpression()), !dbg !12125
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12126, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12128, metadata !DIExpression()), !dbg !12129
  store i64 0, i64* %value, align 8, !dbg !12129, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12130, metadata !DIExpression()), !dbg !12131
  br label %for.cond, !dbg !12132

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12133, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !12136, !tbaa !2497, !ctir !147
  store i8 %1, i8* %ch, align 1, !dbg !12137, !tbaa !2497
  %tobool = icmp ne i8 %1, 0, !dbg !12138
  br i1 %tobool, label %for.body, label %for.end, !dbg !12138

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12139, !tbaa !2579
  %mul = mul i64 %2, 31, !dbg !12140
  %3 = load i8, i8* %ch, align 1, !dbg !12141, !tbaa !2497
  %conv = zext i8 %3 to i64, !dbg !12141
  %add = add i64 %mul, %conv, !dbg !12142
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12143, !tbaa !2579
  %rem = urem i64 %add, %4, !dbg !12144
  store i64 %rem, i64* %value, align 8, !dbg !12145, !tbaa !2579
  br label %for.inc, !dbg !12146

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12147, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12147
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12147, !tbaa !2442
  br label %for.cond, !dbg !12148, !llvm.loop !12149

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12151, !tbaa !2579
  ret i64 %6, !dbg !12152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 !dbg !12153 !ctir !1246 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12154, metadata !DIExpression()), !dbg !12155
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12156, !tbaa !2442
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12157, !tbaa.struct !12158
  ret void, !dbg !12161
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 !dbg !12162 !ctir !1249 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !1251
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12163, metadata !DIExpression()), !dbg !12164
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12165, metadata !DIExpression()), !dbg !12166
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12167, metadata !DIExpression()), !dbg !12168
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12169, metadata !DIExpression()), !dbg !12170
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12171, metadata !DIExpression()), !dbg !12172
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12173, metadata !DIExpression()), !dbg !12174
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12175, !tbaa !2442
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12177
  br i1 %cmp, label %if.then, label %if.end, !dbg !12178

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12179, !tbaa !2442
  br label %if.end, !dbg !12180

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12181, !tbaa !2442
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12183
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12184

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12185, !tbaa !2442
  br label %if.end3, !dbg !12186

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #13, !dbg !12187
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12187
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12188, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12189, !tbaa !2442
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12191
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12192

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12193
  br label %return, !dbg !12193

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12194, !tbaa !2442
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12194
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12196

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12197, !tbaa !2442
  br label %if.end8, !dbg !12198

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12199, !tbaa !2442
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12200, !tbaa !2442
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12201, !ctir !1157
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12202, !tbaa !12203, !ctir !1174
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12204, !tbaa !2442
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12206
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12207

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12208

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12210, !tbaa !2579
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12211, !tbaa !2442
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #16, !dbg !12212
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12213, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12214, !ctir !1157
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12215, !tbaa !11658, !ctir !149
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12216, !tbaa !2442
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12218, !ctir !1157
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12218, !tbaa !11658, !ctir !149
  %tobool15 = icmp ne i64 %12, 0, !dbg !12216
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12219

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12220

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12221, !tbaa !2442
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12222, !ctir !1157
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12222, !tbaa !11658, !ctir !149
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #13, !dbg !12223
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12223
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12224, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12225, !ctir !1157
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12226, !tbaa !11685, !ctir !1162
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12227, !tbaa !2442
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12229, !ctir !1157
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12229, !tbaa !11685, !ctir !1162
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12230
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12231

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12232

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12233, !tbaa !2442
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12234, !ctir !1157
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12234, !tbaa !11685, !ctir !1162
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12235, !tbaa !2442
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12236, !ctir !1157
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12236, !tbaa !11658, !ctir !149
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12237
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12238, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12239, !ctir !1157
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12240, !tbaa !11692, !ctir !1168
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12241, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12242, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12243, !tbaa !11666, !ctir !149
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12244, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12245, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12246, !tbaa !11673, !ctir !149
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12247, !tbaa !2442
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12248, !tbaa !2442
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12249, !ctir !1157
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12250, !tbaa !11887, !ctir !1186
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12251, !tbaa !2442
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12252, !tbaa !2442
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12253, !ctir !1157
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12254, !tbaa !11861, !ctir !1189
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12255, !tbaa !2442
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12256, !tbaa !2442
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12257, !ctir !1157
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12258, !tbaa !12259, !ctir !1192
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12260, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12261, !ctir !1157
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12262, !tbaa !12263, !ctir !1162
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12264, !tbaa !2442
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12265
  br label %return, !dbg !12265

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12266), !dbg !12267
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12268, !tbaa !2442
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12268
  call void @free(i8* %35) #13, !dbg !12269
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12270
  br label %return, !dbg !12270

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12271
  ret %struct.hash_table* %36, !dbg !12271
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #0 !dbg !12272 !ctir !333 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !149
  store i8* %data, i8** %data.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12275, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12277, metadata !DIExpression()), !dbg !12278
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12279, !tbaa !2442
  %1 = ptrtoint i8* %0 to i64, !dbg !12280
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12281
  store i64 %call, i64* %val, align 8, !dbg !12278, !tbaa !2579
  %2 = load i64, i64* %val, align 8, !dbg !12282, !tbaa !2579
  %3 = load i64, i64* %n.addr, align 8, !dbg !12283, !tbaa !2579
  %rem = urem i64 %2, %3, !dbg !12284
  ret i64 %rem, !dbg !12285
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #0 !dbg !12286 !ctir !337 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12287, metadata !DIExpression()), !dbg !12288
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12289, metadata !DIExpression()), !dbg !12290
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12291, !tbaa !2442
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12292, !tbaa !2442
  %cmp = icmp eq i8* %0, %1, !dbg !12293
  ret i1 %cmp, !dbg !12294
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 !dbg !12295 !ctir !1262 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %epsilon = alloca float, align 4, !ctir !1180
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12296, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12298, metadata !DIExpression()), !dbg !12299
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12300, !tbaa !2442
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12301, !ctir !1157
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12301, !tbaa !12203, !ctir !1174
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12299, !tbaa !2442
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12302, metadata !DIExpression()), !dbg !12303
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12304, !tbaa !2442
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12306
  br i1 %cmp, label %if.then, label %if.end, !dbg !12307

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12308
  br label %return, !dbg !12308

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12309, !tbaa !12159
  %3 = load float, float* %epsilon, align 4, !dbg !12310, !tbaa !12159
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12312, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12313, !ctir !1175
  %5 = load float, float* %growth_threshold, align 4, !dbg !12313, !tbaa !12314, !ctir !1180
  %cmp2 = fcmp olt float %3, %5, !dbg !12316
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12317

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12318, !tbaa !2442
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12319, !ctir !1175
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12319, !tbaa !12314, !ctir !1180
  %8 = load float, float* %epsilon, align 4, !dbg !12320, !tbaa !12159
  %sub = fsub float 1.000000e+00, %8, !dbg !12321
  %cmp4 = fcmp olt float %7, %sub, !dbg !12322
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12323

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12324, !tbaa !12159
  %add = fadd float 1.000000e+00, %9, !dbg !12325
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12326, !tbaa !2442
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12327, !ctir !1175
  %11 = load float, float* %growth_factor, align 4, !dbg !12327, !tbaa !12328, !ctir !1180
  %cmp6 = fcmp olt float %add, %11, !dbg !12329
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12330

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12331, !tbaa !2442
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12332, !ctir !1175
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12332, !tbaa !12333, !ctir !1180
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12334
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12335

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12336, !tbaa !2442
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12337, !ctir !1175
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12337, !tbaa !12333, !ctir !1180
  %16 = load float, float* %epsilon, align 4, !dbg !12338, !tbaa !12159
  %add11 = fadd float %15, %16, !dbg !12339
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12340, !tbaa !2442
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12341, !ctir !1175
  %18 = load float, float* %shrink_factor, align 4, !dbg !12341, !tbaa !12342, !ctir !1180
  %cmp12 = fcmp olt float %add11, %18, !dbg !12343
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12344

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12345, !tbaa !2442
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12346, !ctir !1175
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12346, !tbaa !12342, !ctir !1180
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12347
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12348

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12349, !tbaa !2442
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12350, !ctir !1175
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12350, !tbaa !12333, !ctir !1180
  %23 = load float, float* %epsilon, align 4, !dbg !12351, !tbaa !12159
  %add18 = fadd float %22, %23, !dbg !12352
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12353, !tbaa !2442
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12354, !ctir !1175
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12354, !tbaa !12314, !ctir !1180
  %cmp20 = fcmp olt float %add18, %25, !dbg !12355
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12356

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12357
  br label %return, !dbg !12357

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12358, !tbaa !2442
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12359, !ctir !1157
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12360, !tbaa !12203, !ctir !1174
  store i1 false, i1* %retval, align 1, !dbg !12361
  br label %return, !dbg !12361

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12362
  ret i1 %27, !dbg !12362
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12363 !ctir !1264 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !1180
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12364, metadata !DIExpression()), !dbg !12365
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12366, metadata !DIExpression()), !dbg !12367
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12368, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12370, !ctir !1175
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12370, !tbaa !12371
  %tobool = trunc i8 %1 to i1, !dbg !12370, !ctir !141
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12372

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12373, metadata !DIExpression()), !dbg !12375
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12376, !tbaa !2579
  %conv = uitofp i64 %2 to float, !dbg !12376
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12377, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12378, !ctir !1175
  %4 = load float, float* %growth_threshold, align 4, !dbg !12378, !tbaa !12314, !ctir !1180
  %div = fdiv float %conv, %4, !dbg !12379
  store float %div, float* %new_candidate, align 4, !dbg !12375, !tbaa !12159
  %5 = load float, float* %new_candidate, align 4, !dbg !12380, !tbaa !12159
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12382
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12383

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12384
  br label %return, !dbg !12384

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12385, !tbaa !12159
  %conv3 = fptoui float %6 to i64, !dbg !12385
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12386, !tbaa !2579
  br label %if.end4, !dbg !12387

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12388, !tbaa !2579
  %call = call i64 @next_prime(i64 %7) #17, !dbg !12389
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12390, !tbaa !2579
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12391, !tbaa !2579
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12391
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12393

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12394
  br label %return, !dbg !12394

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12395, !tbaa !2579
  store i64 %9, i64* %retval, align 8, !dbg !12396
  br label %return, !dbg !12396

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12397
  ret i64 %10, !dbg !12397
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #12 !dbg !12398 !ctir !1266 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12399, metadata !DIExpression()), !dbg !12400
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12401, !tbaa !2579
  %cmp = icmp ult i64 %0, 10, !dbg !12403
  br i1 %cmp, label %if.then, label %if.end, !dbg !12404

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12405, !tbaa !2579
  br label %if.end, !dbg !12406

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12407, !tbaa !2579
  %or = or i64 %1, 1, !dbg !12407
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12407, !tbaa !2579
  br label %while.cond, !dbg !12408

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12409, !tbaa !2579
  %cmp1 = icmp ne i64 -1, %2, !dbg !12410
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12411

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12412, !tbaa !2579
  %call = call zeroext i1 @is_prime(i64 %3) #17, !dbg !12413
  %lnot = xor i1 %call, true, !dbg !12414
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12415
  br i1 %4, label %while.body, label %while.end, !dbg !12408

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12416, !tbaa !2579
  %add = add i64 %5, 2, !dbg !12416
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12416, !tbaa !2579
  br label %while.cond, !dbg !12408, !llvm.loop !12417

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12419, !tbaa !2579
  ret i64 %6, !dbg !12420
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #12 !dbg !12421 !ctir !1268 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !149
  %square = alloca i64, align 8, !ctir !149
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12422, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12424, metadata !DIExpression()), !dbg !12425
  store i64 3, i64* %divisor, align 8, !dbg !12425, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12426, metadata !DIExpression()), !dbg !12427
  %0 = load i64, i64* %divisor, align 8, !dbg !12428, !tbaa !2579
  %1 = load i64, i64* %divisor, align 8, !dbg !12429, !tbaa !2579
  %mul = mul i64 %0, %1, !dbg !12430
  store i64 %mul, i64* %square, align 8, !dbg !12427, !tbaa !2579
  br label %while.cond, !dbg !12431

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12432, !tbaa !2579
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12433, !tbaa !2579
  %cmp = icmp ult i64 %2, %3, !dbg !12434
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12435

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12436, !tbaa !2579
  %5 = load i64, i64* %divisor, align 8, !dbg !12437, !tbaa !2579
  %rem = urem i64 %4, %5, !dbg !12438
  %tobool = icmp ne i64 %rem, 0, !dbg !12435
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12439
  br i1 %6, label %while.body, label %while.end, !dbg !12431

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12440, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !12440
  store i64 %inc, i64* %divisor, align 8, !dbg !12440, !tbaa !2579
  %8 = load i64, i64* %divisor, align 8, !dbg !12442, !tbaa !2579
  %mul1 = mul i64 4, %8, !dbg !12443
  %9 = load i64, i64* %square, align 8, !dbg !12444, !tbaa !2579
  %add = add i64 %9, %mul1, !dbg !12444
  store i64 %add, i64* %square, align 8, !dbg !12444, !tbaa !2579
  %10 = load i64, i64* %divisor, align 8, !dbg !12445, !tbaa !2579
  %inc2 = add i64 %10, 1, !dbg !12445
  store i64 %inc2, i64* %divisor, align 8, !dbg !12445, !tbaa !2579
  br label %while.cond, !dbg !12431, !llvm.loop !12446

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12448, !tbaa !2579
  %12 = load i64, i64* %divisor, align 8, !dbg !12449, !tbaa !2579
  %rem3 = urem i64 %11, %12, !dbg !12450
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12448
  %13 = zext i1 %tobool4 to i64, !dbg !12448
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12448
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12451
  ret i1 %tobool5, !dbg !12452
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #0 !dbg !12453 !ctir !1252 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12454, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12456, metadata !DIExpression()), !dbg !12457
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12458, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12460, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12460, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12461, !tbaa !2442
  br label %for.cond, !dbg !12462

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12463, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12465, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12466, !ctir !1157
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12466, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12467
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12468

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12469, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12472, !ctir !1163
  %6 = load i8*, i8** %data, align 8, !dbg !12472, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12469
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12473

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12474, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12477, metadata !DIExpression()), !dbg !12478
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12479, !tbaa !2442
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12481, !ctir !1163
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12481, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12482, !tbaa !2442
  br label %for.cond3, !dbg !12483

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12484, !tbaa !2442
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12486
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12486

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12487, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12490, !ctir !1157
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12490, !tbaa !12259, !ctir !1192
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12487
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12491

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12492, !tbaa !2442
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12493, !ctir !1157
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12493, !tbaa !12259, !ctir !1192
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12494, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12495, !ctir !1163
  %15 = load i8*, i8** %data9, align 8, !dbg !12495, !tbaa !11699, !ctir !167
  call void %13(i8* %15), !dbg !12492
  br label %if.end, !dbg !12492

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12496, !tbaa !2442
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12497, !ctir !1163
  store i8* null, i8** %data10, align 8, !dbg !12498, !tbaa !11699, !ctir !167
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12499, !tbaa !2442
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12500, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12500, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12501, !tbaa !2442
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12502, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12503, !ctir !1157
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12503, !tbaa !12263, !ctir !1162
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12504, !tbaa !2442
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12505, !ctir !1163
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12506, !tbaa !11711, !ctir !1162
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12507, !tbaa !2442
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12508, !tbaa !2442
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12509, !ctir !1157
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12510, !tbaa !12263, !ctir !1162
  br label %for.inc, !dbg !12511

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12512, !tbaa !2442
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12513, !tbaa !2442
  br label %for.cond3, !dbg !12514, !llvm.loop !12515

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12517, !tbaa !2442
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12519, !ctir !1157
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12519, !tbaa !12259, !ctir !1192
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12517
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12520

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12521, !tbaa !2442
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12522, !ctir !1157
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12522, !tbaa !12259, !ctir !1192
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12523, !tbaa !2442
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12524, !ctir !1163
  %30 = load i8*, i8** %data18, align 8, !dbg !12524, !tbaa !11699, !ctir !167
  call void %28(i8* %30), !dbg !12521
  br label %if.end19, !dbg !12521

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12525, !tbaa !2442
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12526, !ctir !1163
  store i8* null, i8** %data20, align 8, !dbg !12527, !tbaa !11699, !ctir !167
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12528, !tbaa !2442
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12529, !ctir !1163
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12530, !tbaa !11711, !ctir !1162
  br label %if.end22, !dbg !12531

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12532

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12533, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12533
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12533, !tbaa !2442
  br label %for.cond, !dbg !12534, !llvm.loop !12535

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12537, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12538, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12539, !tbaa !11666, !ctir !149
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12540, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12541, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12542, !tbaa !11673, !ctir !149
  ret void, !dbg !12543
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #0 !dbg !12544 !ctir !1252 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12545, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12547, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12549, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12551, metadata !DIExpression()), !dbg !12552
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12553, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12555, !ctir !1157
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12555, !tbaa !12259, !ctir !1192
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12553
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12556

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12557, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12558, !ctir !1157
  %3 = load i64, i64* %n_entries, align 8, !dbg !12558, !tbaa !11673, !ctir !149
  %tobool1 = icmp ne i64 %3, 0, !dbg !12557
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12559

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12560, !tbaa !2442
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12563, !ctir !1157
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12563, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12564, !tbaa !2442
  br label %for.cond, !dbg !12565

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12566, !tbaa !2442
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12568, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12569, !ctir !1157
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12569, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12570
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12571

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12572, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12575, !ctir !1163
  %10 = load i8*, i8** %data, align 8, !dbg !12575, !tbaa !11699, !ctir !167
  %tobool3 = icmp ne i8* %10, null, !dbg !12572
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12576

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12577, !tbaa !2442
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12580, !tbaa !2442
  br label %for.cond5, !dbg !12581

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12582, !tbaa !2442
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12584
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12584

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12585, !tbaa !2442
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12586, !ctir !1157
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12586, !tbaa !12259, !ctir !1192
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12587, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12588, !ctir !1163
  %16 = load i8*, i8** %data9, align 8, !dbg !12588, !tbaa !11699, !ctir !167
  call void %14(i8* %16), !dbg !12585
  br label %for.inc, !dbg !12585

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12589, !tbaa !2442
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12590, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12590, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12591, !tbaa !2442
  br label %for.cond5, !dbg !12592, !llvm.loop !12593

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12595

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12596

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12597, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12597
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12597, !tbaa !2442
  br label %for.cond, !dbg !12598, !llvm.loop !12599

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12601

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12602, !tbaa !2442
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12604, !ctir !1157
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12604, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12605, !tbaa !2442
  br label %for.cond15, !dbg !12606

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12607, !tbaa !2442
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12609, !tbaa !2442
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12610, !ctir !1157
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12610, !tbaa !11692, !ctir !1168
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12611
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12612

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12613, !tbaa !2442
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12616, !ctir !1163
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12616, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12617, !tbaa !2442
  br label %for.cond20, !dbg !12618

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12619, !tbaa !2442
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12621
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12621

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12622, !tbaa !2442
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12624, !ctir !1163
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12624, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12625, !tbaa !2442
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12626, !tbaa !2442
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12626
  call void @free(i8* %31) #13, !dbg !12627
  br label %for.inc24, !dbg !12628

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12629, !tbaa !2442
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12630, !tbaa !2442
  br label %for.cond20, !dbg !12631, !llvm.loop !12632

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12634

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12635, !tbaa !2442
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12635
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12635, !tbaa !2442
  br label %for.cond15, !dbg !12636, !llvm.loop !12637

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12639, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12641, !ctir !1157
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12641, !tbaa !12263, !ctir !1162
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12642, !tbaa !2442
  br label %for.cond29, !dbg !12643

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12644, !tbaa !2442
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12646
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12646

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12647, !tbaa !2442
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12649, !ctir !1163
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12649, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12650, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12651, !tbaa !2442
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12651
  call void @free(i8* %40) #13, !dbg !12652
  br label %for.inc33, !dbg !12653

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12654, !tbaa !2442
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12655, !tbaa !2442
  br label %for.cond29, !dbg !12656, !llvm.loop !12657

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12659, !tbaa !2442
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12660, !ctir !1157
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12660, !tbaa !11685, !ctir !1162
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12659
  call void @free(i8* %44) #13, !dbg !12661
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12662, !tbaa !2442
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12662
  call void @free(i8* %46) #13, !dbg !12663
  ret void, !dbg !12664
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 !dbg !12665 !ctir !1254 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !1157
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1251
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12666, metadata !DIExpression()), !dbg !12667
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12668, metadata !DIExpression()), !dbg !12669
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12670, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12672, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12674, metadata !DIExpression()), !dbg !12675
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12676, !tbaa !2579
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12677, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12678, !ctir !1157
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12678, !tbaa !12203, !ctir !1174
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #16, !dbg !12679
  store i64 %call, i64* %new_size, align 8, !dbg !12675, !tbaa !2579
  %3 = load i64, i64* %new_size, align 8, !dbg !12680, !tbaa !2579
  %tobool = icmp ne i64 %3, 0, !dbg !12680
  br i1 %tobool, label %if.end, label %if.then, !dbg !12682

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12683
  br label %return, !dbg !12683

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12684, !tbaa !2579
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12686, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12687, !ctir !1157
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12687, !tbaa !11658, !ctir !149
  %cmp = icmp eq i64 %4, %6, !dbg !12688
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12689

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12690
  br label %return, !dbg !12690

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12691, !tbaa !2442
  %7 = load i64, i64* %new_size, align 8, !dbg !12692, !tbaa !2579
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #13, !dbg !12693
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12693
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12694, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12695, !ctir !1157
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12696, !tbaa !11685, !ctir !1162
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12697, !tbaa !2442
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12699, !ctir !1157
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12699, !tbaa !11685, !ctir !1162
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12700
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12701

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12702
  br label %return, !dbg !12702

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12703, !tbaa !2579
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12704, !tbaa !2442
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12705, !ctir !1157
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12706, !tbaa !11658, !ctir !149
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12707, !tbaa !2442
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12708, !ctir !1157
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12708, !tbaa !11685, !ctir !1162
  %16 = load i64, i64* %new_size, align 8, !dbg !12709, !tbaa !2579
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12710
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12711, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12712, !ctir !1157
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12713, !tbaa !11692, !ctir !1168
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12714, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12715, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12716, !tbaa !11666, !ctir !149
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12717, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12718, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12719, !tbaa !11673, !ctir !149
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12720, !tbaa !2442
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12721, !ctir !1157
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12721, !tbaa !12203, !ctir !1174
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12722, !tbaa !2442
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12723, !ctir !1157
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12724, !tbaa !12203, !ctir !1174
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12725, !tbaa !2442
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12726, !ctir !1157
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12726, !tbaa !11887, !ctir !1186
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12727, !tbaa !2442
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12728, !ctir !1157
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12729, !tbaa !11887, !ctir !1186
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12730, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12731, !ctir !1157
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12731, !tbaa !11861, !ctir !1189
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12732, !tbaa !2442
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12733, !ctir !1157
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12734, !tbaa !11861, !ctir !1189
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12735, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12736, !ctir !1157
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12736, !tbaa !12259, !ctir !1192
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12737, !tbaa !2442
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12738, !ctir !1157
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12739, !tbaa !12259, !ctir !1192
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12740, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12741, !ctir !1157
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12741, !tbaa !12263, !ctir !1162
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12742, !tbaa !2442
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12743, !ctir !1157
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12744, !tbaa !12263, !ctir !1162
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12745, !tbaa !2442
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12747, !tbaa !2442
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12748
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12749

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12750, !tbaa !2442
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12752, !ctir !1157
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12752, !tbaa !11685, !ctir !1162
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12750
  call void @free(i8* %39) #13, !dbg !12753
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12754, !tbaa !2442
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12755, !ctir !1157
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12755, !tbaa !11685, !ctir !1162
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12756, !tbaa !2442
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12757, !ctir !1157
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12758, !tbaa !11685, !ctir !1162
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12759, !tbaa !2442
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12760, !ctir !1157
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12760, !tbaa !11692, !ctir !1168
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12761, !tbaa !2442
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12762, !ctir !1157
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12763, !tbaa !11692, !ctir !1168
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12764, !tbaa !2442
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12765, !ctir !1157
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12765, !tbaa !11658, !ctir !149
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12766, !tbaa !2442
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12767, !ctir !1157
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12768, !tbaa !11658, !ctir !149
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12769, !tbaa !2442
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12770, !ctir !1157
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12770, !tbaa !11666, !ctir !149
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12771, !tbaa !2442
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12772, !ctir !1157
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12773, !tbaa !11666, !ctir !149
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12774, !tbaa !2442
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12775, !ctir !1157
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12775, !tbaa !12263, !ctir !1162
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12776, !tbaa !2442
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12777, !ctir !1157
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12778, !tbaa !12263, !ctir !1162
  store i1 true, i1* %retval, align 1, !dbg !12779
  br label %return, !dbg !12779

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12780, !tbaa !2442
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12781, !ctir !1157
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12781, !tbaa !12263, !ctir !1162
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12782, !tbaa !2442
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12783, !ctir !1157
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12784, !tbaa !12263, !ctir !1162
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12785, !tbaa !2442
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12787, !tbaa !2442
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12788
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12789

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12790, !tbaa !2442
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12791, !tbaa !2442
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12792
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12793

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #15, !dbg !12794
  unreachable, !dbg !12794

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12795, !tbaa !2442
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12796, !ctir !1157
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12796, !tbaa !11685, !ctir !1162
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12795
  call void @free(i8* %64) #13, !dbg !12797
  store i1 false, i1* %retval, align 1, !dbg !12798
  br label %return, !dbg !12798

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12799
  ret i1 %65, !dbg !12799
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #0 !dbg !12800 !ctir !1270 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data2 = alloca i8*, align 8, !ctir !167
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12803, metadata !DIExpression()), !dbg !12804
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12805, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12807, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12809, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12811, metadata !DIExpression()), !dbg !12812
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12813, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12815, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12815, !tbaa !11685, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12816, !tbaa !2442
  br label %for.cond, !dbg !12817

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12818, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12820, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12821, !ctir !1157
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12821, !tbaa !11692, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12822
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12823

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12824, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12826, !ctir !1163
  %6 = load i8*, i8** %data, align 8, !dbg !12826, !tbaa !11699, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12824
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12827

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12831, metadata !DIExpression()), !dbg !12832
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12833, !tbaa !2442
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12835, !ctir !1163
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12835, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12836, !tbaa !2442
  br label %for.cond4, !dbg !12837

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12838, !tbaa !2442
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12840
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12840

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12841, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12843, !ctir !1163
  %11 = load i8*, i8** %data7, align 8, !dbg !12843, !tbaa !11699, !ctir !167
  store i8* %11, i8** %data2, align 8, !dbg !12844, !tbaa !2442
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12845, !tbaa !2442
  %13 = load i8*, i8** %data2, align 8, !dbg !12846, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12847
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12848, !tbaa !2442
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12849, !tbaa !2442
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12850, !ctir !1163
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12850, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12851, !tbaa !2442
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12852, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12854, !ctir !1163
  %17 = load i8*, i8** %data9, align 8, !dbg !12854, !tbaa !11699, !ctir !167
  %tobool10 = icmp ne i8* %17, null, !dbg !12852
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12855

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12856, !tbaa !2442
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12858, !ctir !1163
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12858, !tbaa !11711, !ctir !1162
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12859, !tbaa !2442
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12860, !ctir !1163
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12861, !tbaa !11711, !ctir !1162
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12862, !tbaa !2442
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12863, !tbaa !2442
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12864, !ctir !1163
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12865, !tbaa !11711, !ctir !1162
  br label %if.end, !dbg !12866

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12867, !tbaa !2442
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12869, !tbaa !2442
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12870, !ctir !1163
  store i8* %23, i8** %data15, align 8, !dbg !12871, !tbaa !11699, !ctir !167
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12872, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12873, !ctir !1157
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12874, !tbaa !11666, !ctir !149
  %inc = add i64 %26, 1, !dbg !12874
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12874, !tbaa !11666, !ctir !149
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12875, !tbaa !2442
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12876, !tbaa !2442
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12877
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12878

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12879, !tbaa !2442
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12880, !tbaa !2442
  br label %for.cond4, !dbg !12881, !llvm.loop !12882

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12884, !tbaa !2442
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12885, !ctir !1163
  %31 = load i8*, i8** %data16, align 8, !dbg !12885, !tbaa !11699, !ctir !167
  store i8* %31, i8** %data2, align 8, !dbg !12886, !tbaa !2442
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12887, !tbaa !2442
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12888, !ctir !1163
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12889, !tbaa !11711, !ctir !1162
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12890, !tbaa !2461
  %tobool18 = trunc i8 %33 to i1, !dbg !12890
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12892

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12893

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12894, !tbaa !2442
  %35 = load i8*, i8** %data2, align 8, !dbg !12895, !tbaa !2442
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12896
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12897, !tbaa !2442
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12898, !tbaa !2442
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12900, !ctir !1163
  %37 = load i8*, i8** %data22, align 8, !dbg !12900, !tbaa !11699, !ctir !167
  %tobool23 = icmp ne i8* %37, null, !dbg !12898
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12901

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12902, metadata !DIExpression()), !dbg !12904
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12905, !tbaa !2442
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12906
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12904, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12907, !tbaa !2442
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12909
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12910

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12911
  br label %return, !dbg !12911

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12912, !tbaa !2442
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12913, !tbaa !2442
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12914, !ctir !1163
  store i8* %40, i8** %data29, align 8, !dbg !12915, !tbaa !11699, !ctir !167
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12916, !tbaa !2442
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12917, !ctir !1163
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12917, !tbaa !11711, !ctir !1162
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12918, !tbaa !2442
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12919, !ctir !1163
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12920, !tbaa !11711, !ctir !1162
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12921, !tbaa !2442
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12922, !tbaa !2442
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12923, !ctir !1163
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12924, !tbaa !11711, !ctir !1162
  br label %if.end37, !dbg !12925

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12926, !tbaa !2442
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12928, !tbaa !2442
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12929, !ctir !1163
  store i8* %47, i8** %data34, align 8, !dbg !12930, !tbaa !11699, !ctir !167
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12931, !tbaa !2442
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12932, !ctir !1157
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12933, !tbaa !11666, !ctir !149
  %inc36 = add i64 %50, 1, !dbg !12933
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12933, !tbaa !11666, !ctir !149
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12934, !tbaa !2442
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12935, !ctir !1163
  store i8* null, i8** %data38, align 8, !dbg !12936, !tbaa !11699, !ctir !167
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12937, !tbaa !2442
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12938, !ctir !1157
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12939, !tbaa !11666, !ctir !149
  %dec = add i64 %53, -1, !dbg !12939
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12939, !tbaa !11666, !ctir !149
  br label %if.end40, !dbg !12940

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12826

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12941, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12941
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12941, !tbaa !2442
  br label %for.cond, !dbg !12942, !llvm.loop !12943

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12945
  br label %return, !dbg !12945

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12946
  ret i1 %55, !dbg !12946
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 !dbg !12947 !ctir !1272 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12948, metadata !DIExpression()), !dbg !12949
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12950, metadata !DIExpression()), !dbg !12951
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12952, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12953, !ctir !1163
  store i8* null, i8** %data, align 8, !dbg !12954, !tbaa !11699, !ctir !167
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12955, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12956, !ctir !1157
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12956, !tbaa !12263, !ctir !1162
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12957, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12958, !ctir !1163
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12959, !tbaa !11711, !ctir !1162
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12960, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12961, !tbaa !2442
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12962, !ctir !1157
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12963, !tbaa !12263, !ctir !1162
  ret void, !dbg !12964
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 !dbg !12965 !ctir !1277 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12968, metadata !DIExpression()), !dbg !12969
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12970, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12972, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12972, !tbaa !12263, !ctir !1162
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12970
  br i1 %tobool, label %if.then, label %if.else, !dbg !12973

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12974, !tbaa !2442
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12976, !ctir !1157
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12976, !tbaa !12263, !ctir !1162
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12977, !tbaa !2442
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12978, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12979, !ctir !1163
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12979, !tbaa !11711, !ctir !1162
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12980, !tbaa !2442
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12981, !ctir !1157
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12982, !tbaa !12263, !ctir !1162
  br label %if.end, !dbg !12983

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #13, !dbg !12984
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12984
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12986, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12987, !tbaa !2442
  ret %struct.hash_entry* %8, !dbg !12988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #0 !dbg !12989 !ctir !1256 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %candidate = alloca float, align 4, !ctir !1180
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12994, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12996, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12998, metadata !DIExpression()), !dbg !12999
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !13000, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !13000
  br i1 %tobool, label %if.end, label %if.then, !dbg !13002

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !13003
  unreachable, !dbg !13003

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13004, !tbaa !2442
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !13006, !tbaa !2442
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13007
  store i8* %call, i8** %data, align 8, !dbg !13008, !tbaa !2442
  %cmp = icmp ne i8* %call, null, !dbg !13009
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !13010

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13011, !tbaa !2442
  %tobool3 = icmp ne i8** %3, null, !dbg !13011
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13014

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !13015, !tbaa !2442
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !13016, !tbaa !2442
  store i8* %4, i8** %5, align 8, !dbg !13017, !tbaa !2442, !ctir !176
  br label %if.end5, !dbg !13018

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !13019
  br label %return, !dbg !13019

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13020, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !13022, !ctir !1157
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !13022, !tbaa !11666, !ctir !149
  %conv = uitofp i64 %7 to float, !dbg !13020
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13023, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !13024, !ctir !1157
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13024, !tbaa !12203, !ctir !1174
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !13025, !ctir !1175
  %10 = load float, float* %growth_threshold, align 4, !dbg !13025, !tbaa !12314, !ctir !1180
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13026, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !13027, !ctir !1157
  %12 = load i64, i64* %n_buckets, align 8, !dbg !13027, !tbaa !11658, !ctir !149
  %conv7 = uitofp i64 %12 to float, !dbg !13026
  %mul = fmul float %10, %conv7, !dbg !13028
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !13029
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !13030

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13031, !tbaa !2442
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !13033
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13034, !tbaa !2442
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !13036, !ctir !1157
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !13036, !tbaa !11666, !ctir !149
  %conv13 = uitofp i64 %15 to float, !dbg !13034
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13037, !tbaa !2442
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !13038, !ctir !1157
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !13038, !tbaa !12203, !ctir !1174
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !13039, !ctir !1175
  %18 = load float, float* %growth_threshold15, align 4, !dbg !13039, !tbaa !12314, !ctir !1180
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13040, !tbaa !2442
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !13041, !ctir !1157
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !13041, !tbaa !11658, !ctir !149
  %conv17 = uitofp i64 %20 to float, !dbg !13040
  %mul18 = fmul float %18, %conv17, !dbg !13042
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !13043
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !13044

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !13045, metadata !DIExpression()), !dbg !13047
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13048, !tbaa !2442
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !13049, !ctir !1157
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !13049, !tbaa !12203, !ctir !1174
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !13047, !tbaa !2442
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !13050, metadata !DIExpression()), !dbg !13051
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13052, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !13053, !ctir !1175
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !13053, !tbaa !12371
  %tobool24 = trunc i8 %24 to i1, !dbg !13053, !ctir !141
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !13052

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13054, !tbaa !2442
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !13055, !ctir !1157
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !13055, !tbaa !11658, !ctir !149
  %conv27 = uitofp i64 %26 to float, !dbg !13054
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13056, !tbaa !2442
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !13057, !ctir !1175
  %28 = load float, float* %growth_factor, align 4, !dbg !13057, !tbaa !12328, !ctir !1180
  %mul28 = fmul float %conv27, %28, !dbg !13058
  br label %cond.end, !dbg !13052

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13059, !tbaa !2442
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !13060, !ctir !1157
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !13060, !tbaa !11658, !ctir !149
  %conv30 = uitofp i64 %30 to float, !dbg !13059
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13061, !tbaa !2442
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !13062, !ctir !1175
  %32 = load float, float* %growth_factor31, align 4, !dbg !13062, !tbaa !12328, !ctir !1180
  %mul32 = fmul float %conv30, %32, !dbg !13063
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13064, !tbaa !2442
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !13065, !ctir !1175
  %34 = load float, float* %growth_threshold33, align 4, !dbg !13065, !tbaa !12314, !ctir !1180
  %mul34 = fmul float %mul32, %34, !dbg !13066
  br label %cond.end, !dbg !13052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !13052
  store float %cond, float* %candidate, align 4, !dbg !13051, !tbaa !12159
  %35 = load float, float* %candidate, align 4, !dbg !13067, !tbaa !12159
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !13069
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13070

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !13071
  br label %return, !dbg !13071

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13072, !tbaa !2442
  %37 = load float, float* %candidate, align 4, !dbg !13074, !tbaa !12159
  %conv39 = fptoui float %37 to i64, !dbg !13074
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13075
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13076

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13077
  br label %return, !dbg !13077

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13078, !tbaa !2442
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13080, !tbaa !2442
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13081
  %cmp44 = icmp ne i8* %call43, null, !dbg !13082
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13083

if.then46:                                        ; preds = %if.end42
  call void @abort() #15, !dbg !13084
  unreachable, !dbg !13084

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13085

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13086

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13087, !tbaa !2442
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13089, !ctir !1163
  %41 = load i8*, i8** %data50, align 8, !dbg !13089, !tbaa !11699, !ctir !167
  %tobool51 = icmp ne i8* %41, null, !dbg !13087
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13090

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13091, metadata !DIExpression()), !dbg !13093
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13094, !tbaa !2442
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13095
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13093, !tbaa !2442
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13096, !tbaa !2442
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13098
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13099

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13100
  br label %return, !dbg !13100

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13101, !tbaa !2442
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13102, !tbaa !2442
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13103, !ctir !1163
  store i8* %44, i8** %data58, align 8, !dbg !13104, !tbaa !11699, !ctir !167
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13105, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13106, !ctir !1163
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13106, !tbaa !11711, !ctir !1162
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13107, !tbaa !2442
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13108, !ctir !1163
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13109, !tbaa !11711, !ctir !1162
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13110, !tbaa !2442
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13111, !tbaa !2442
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13112, !ctir !1163
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13113, !tbaa !11711, !ctir !1162
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13114, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13115, !ctir !1157
  %52 = load i64, i64* %n_entries, align 8, !dbg !13116, !tbaa !11673, !ctir !149
  %inc = add i64 %52, 1, !dbg !13116
  store i64 %inc, i64* %n_entries, align 8, !dbg !13116, !tbaa !11673, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13117
  br label %return, !dbg !13117

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13118, !tbaa !2442
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13119, !tbaa !2442
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13120, !ctir !1163
  store i8* %53, i8** %data62, align 8, !dbg !13121, !tbaa !11699, !ctir !167
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13122, !tbaa !2442
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13123, !ctir !1157
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13124, !tbaa !11673, !ctir !149
  %inc64 = add i64 %56, 1, !dbg !13124
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13124, !tbaa !11673, !ctir !149
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13125, !tbaa !2442
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13126, !ctir !1157
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13127, !tbaa !11666, !ctir !149
  %inc66 = add i64 %58, 1, !dbg !13127
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13127, !tbaa !11666, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13128
  br label %return, !dbg !13128

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13129
  ret i32 %59, !dbg !13129
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 !dbg !13130 !ctir !1274 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data7 = alloca i8*, align 8, !ctir !167
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data29 = alloca i8*, align 8, !ctir !167
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13131, metadata !DIExpression()), !dbg !13132
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13133, metadata !DIExpression()), !dbg !13134
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13139, metadata !DIExpression()), !dbg !13140
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13141, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13142, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13143
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13140, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13144, metadata !DIExpression()), !dbg !13145
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13146, !tbaa !2442
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13147, !tbaa !2442
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13148, !tbaa !2442, !ctir !1162
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13149, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13151, !ctir !1163
  %5 = load i8*, i8** %data, align 8, !dbg !13151, !tbaa !11699, !ctir !167
  %cmp = icmp eq i8* %5, null, !dbg !13152
  br i1 %cmp, label %if.then, label %if.end, !dbg !13153

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13154
  br label %return, !dbg !13154

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13155, !tbaa !2442
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13157, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13158, !ctir !1163
  %8 = load i8*, i8** %data2, align 8, !dbg !13158, !tbaa !11699, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !13159
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13160

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13161, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13162, !ctir !1157
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13162, !tbaa !11861, !ctir !1189
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13163, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13164, !tbaa !2442
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13165, !ctir !1163
  %13 = load i8*, i8** %data4, align 8, !dbg !13165, !tbaa !11699, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13161
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13166

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13167, metadata !DIExpression()), !dbg !13169
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13170, !tbaa !2442
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13171, !ctir !1163
  %15 = load i8*, i8** %data8, align 8, !dbg !13171, !tbaa !11699, !ctir !167
  store i8* %15, i8** %data7, align 8, !dbg !13169, !tbaa !2442
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13172, !tbaa !2461
  %tobool = trunc i8 %16 to i1, !dbg !13172
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13174

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13175, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13178, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13178, !tbaa !11711, !ctir !1162
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13175
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13179

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13180, metadata !DIExpression()), !dbg !13182
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13183, !tbaa !2442
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13184, !ctir !1163
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13184, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13182, !tbaa !2442
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13185, !tbaa !2442
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13186, !tbaa !2442
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13187
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13187, !tbaa.struct !13188
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13189, !tbaa !2442
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13190, !tbaa !2442
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13191
  br label %if.end15, !dbg !13192

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13193, !tbaa !2442
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13195, !ctir !1163
  store i8* null, i8** %data14, align 8, !dbg !13196, !tbaa !11699, !ctir !167
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13197

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13198, !tbaa !2442
  store i8* %28, i8** %retval, align 8, !dbg !13199
  br label %return, !dbg !13199

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13200, !tbaa !2442
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13202, !tbaa !2442
  br label %for.cond, !dbg !13203

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13204, !tbaa !2442
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13206, !ctir !1163
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13206, !tbaa !11711, !ctir !1162
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13207
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13207

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13208, !tbaa !2442
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13211, !tbaa !2442
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13212, !ctir !1163
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13212, !tbaa !11711, !ctir !1162
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13213, !ctir !1163
  %35 = load i8*, i8** %data21, align 8, !dbg !13213, !tbaa !11699, !ctir !167
  %cmp22 = icmp eq i8* %32, %35, !dbg !13214
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13215

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13216, !tbaa !2442
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13217, !ctir !1157
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13217, !tbaa !11861, !ctir !1189
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13218, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13219, !tbaa !2442
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13220, !ctir !1163
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13220, !tbaa !11711, !ctir !1162
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13221, !ctir !1163
  %41 = load i8*, i8** %data26, align 8, !dbg !13221, !tbaa !11699, !ctir !167
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13216
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13222

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13223, metadata !DIExpression()), !dbg !13225
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13226, !tbaa !2442
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13227, !ctir !1163
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13227, !tbaa !11711, !ctir !1162
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13228, !ctir !1163
  %44 = load i8*, i8** %data31, align 8, !dbg !13228, !tbaa !11699, !ctir !167
  store i8* %44, i8** %data29, align 8, !dbg !13225, !tbaa !2442
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13229, !tbaa !2461
  %tobool32 = trunc i8 %45 to i1, !dbg !13229
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13231

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13232, metadata !DIExpression()), !dbg !13234
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13235, !tbaa !2442
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13236, !ctir !1163
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13236, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13234, !tbaa !2442
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13237, !tbaa !2442
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13238, !ctir !1163
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13238, !tbaa !11711, !ctir !1162
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13239, !tbaa !2442
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13240, !ctir !1163
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13241, !tbaa !11711, !ctir !1162
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13242, !tbaa !2442
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13243, !tbaa !2442
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13244
  br label %if.end38, !dbg !13245

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13246, !tbaa !2442
  store i8* %53, i8** %retval, align 8, !dbg !13247
  br label %return, !dbg !13247

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13248

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13249, !tbaa !2442
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13250, !ctir !1163
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13250, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13251, !tbaa !2442
  br label %for.cond, !dbg !13252, !llvm.loop !13253

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13255
  br label %return, !dbg !13255

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13256
  ret i8* %56, !dbg !13256
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13257 !ctir !1258 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !176
  %err = alloca i32, align 4, !ctir !27
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13258, metadata !DIExpression()), !dbg !13259
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13260, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13262, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13264, metadata !DIExpression()), !dbg !13265
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13266, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13267, !tbaa !2442
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13268
  store i32 %call, i32* %err, align 4, !dbg !13265, !tbaa !2436
  %2 = load i32, i32* %err, align 4, !dbg !13269, !tbaa !2436
  %cmp = icmp eq i32 %2, -1, !dbg !13270
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13269

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13269

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13271, !tbaa !2436
  %cmp2 = icmp eq i32 %3, 0, !dbg !13272
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13271

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13273, !tbaa !2442
  br label %cond.end, !dbg !13271

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13274, !tbaa !2442
  br label %cond.end, !dbg !13271

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13271
  br label %cond.end5, !dbg !13269

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13269
  ret i8* %cond6, !dbg !13275
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13276 !ctir !1258 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %candidate = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13277, metadata !DIExpression()), !dbg !13278
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13279, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13281, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13283, metadata !DIExpression()), !dbg !13284
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13285, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13286, !tbaa !2442
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13287
  store i8* %call, i8** %data, align 8, !dbg !13288, !tbaa !2442
  %2 = load i8*, i8** %data, align 8, !dbg !13289, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !13289
  br i1 %tobool, label %if.end, label %if.then, !dbg !13291

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13292
  br label %return, !dbg !13292

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13293, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13294, !ctir !1157
  %4 = load i64, i64* %n_entries, align 8, !dbg !13295, !tbaa !11673, !ctir !149
  %dec = add i64 %4, -1, !dbg !13295
  store i64 %dec, i64* %n_entries, align 8, !dbg !13295, !tbaa !11673, !ctir !149
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13296, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13298, !ctir !1163
  %6 = load i8*, i8** %data2, align 8, !dbg !13298, !tbaa !11699, !ctir !167
  %tobool3 = icmp ne i8* %6, null, !dbg !13296
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13299

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13300, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13302, !ctir !1157
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13303, !tbaa !11666, !ctir !149
  %dec5 = add i64 %8, -1, !dbg !13303
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13303, !tbaa !11666, !ctir !149
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13304, !tbaa !2442
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13306, !ctir !1157
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13306, !tbaa !11666, !ctir !149
  %conv = uitofp i64 %10 to float, !dbg !13304
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13307, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13308, !ctir !1157
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13308, !tbaa !12203, !ctir !1174
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13309, !ctir !1175
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13309, !tbaa !12333, !ctir !1180
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13310, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13311, !ctir !1157
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13311, !tbaa !11658, !ctir !149
  %conv7 = uitofp i64 %15 to float, !dbg !13310
  %mul = fmul float %13, %conv7, !dbg !13312
  %cmp = fcmp olt float %conv, %mul, !dbg !13313
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13314

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13315, !tbaa !2442
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13317
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13318, !tbaa !2442
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13320, !ctir !1157
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13320, !tbaa !11666, !ctir !149
  %conv12 = uitofp i64 %18 to float, !dbg !13318
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13321, !tbaa !2442
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13322, !ctir !1157
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13322, !tbaa !12203, !ctir !1174
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13323, !ctir !1175
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13323, !tbaa !12333, !ctir !1180
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13324, !tbaa !2442
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13325, !ctir !1157
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13325, !tbaa !11658, !ctir !149
  %conv16 = uitofp i64 %23 to float, !dbg !13324
  %mul17 = fmul float %21, %conv16, !dbg !13326
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13327
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13328

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13329, metadata !DIExpression()), !dbg !13331
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13332, !tbaa !2442
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13333, !ctir !1157
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13333, !tbaa !12203, !ctir !1174
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13331, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13334, metadata !DIExpression()), !dbg !13335
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13336, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13337, !ctir !1175
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13337, !tbaa !12371
  %tobool23 = trunc i8 %27 to i1, !dbg !13337, !ctir !141
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13336

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13338, !tbaa !2442
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13339, !ctir !1157
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13339, !tbaa !11658, !ctir !149
  %conv26 = uitofp i64 %29 to float, !dbg !13338
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13340, !tbaa !2442
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13341, !ctir !1175
  %31 = load float, float* %shrink_factor, align 4, !dbg !13341, !tbaa !12342, !ctir !1180
  %mul27 = fmul float %conv26, %31, !dbg !13342
  br label %cond.end, !dbg !13336

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13343, !tbaa !2442
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13344, !ctir !1157
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13344, !tbaa !11658, !ctir !149
  %conv29 = uitofp i64 %33 to float, !dbg !13343
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13345, !tbaa !2442
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13346, !ctir !1175
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13346, !tbaa !12342, !ctir !1180
  %mul31 = fmul float %conv29, %35, !dbg !13347
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13348, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13349, !ctir !1175
  %37 = load float, float* %growth_threshold, align 4, !dbg !13349, !tbaa !12314, !ctir !1180
  %mul32 = fmul float %mul31, %37, !dbg !13350
  br label %cond.end, !dbg !13336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13336
  %conv33 = fptoui float %cond to i64, !dbg !13351
  store i64 %conv33, i64* %candidate, align 8, !dbg !13335, !tbaa !2579
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13352, !tbaa !2442
  %39 = load i64, i64* %candidate, align 8, !dbg !13354, !tbaa !2579
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13355
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13356

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13357, metadata !DIExpression()), !dbg !13359
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13360, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13361, !ctir !1157
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13361, !tbaa !12263, !ctir !1162
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13359, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13362, metadata !DIExpression()), !dbg !13363
  br label %while.cond, !dbg !13364

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13365, !tbaa !2442
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13364
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13364

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13366, !tbaa !2442
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13368, !ctir !1163
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13368, !tbaa !11711, !ctir !1162
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13369, !tbaa !2442
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13370, !tbaa !2442
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13370
  call void @free(i8* %46) #13, !dbg !13371
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13372, !tbaa !2442
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13373, !tbaa !2442
  br label %while.cond, !dbg !13364, !llvm.loop !13374

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13376, !tbaa !2442
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13377, !ctir !1157
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13378, !tbaa !12263, !ctir !1162
  br label %if.end39, !dbg !13379

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13380

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13381

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13382

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13383, !tbaa !2442
  store i8* %49, i8** %retval, align 8, !dbg !13384
  br label %return, !dbg !13384

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13385
  ret i8* %50, !dbg !13385
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13386 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1846
  %tmp = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13390, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13392, metadata !DIExpression()), !dbg !13393
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13394, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13394
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13393, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13395, metadata !DIExpression()), !dbg !13396
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13397, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13398, !ctir !1847
  %3 = load i8*, i8** %name, align 8, !dbg !13398, !tbaa !10929, !ctir !143
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13399, !tbaa !2579
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #16, !dbg !13400
  store i64 %call, i64* %tmp, align 8, !dbg !13396, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !13401, !tbaa !2579
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13402, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13403, !ctir !1847
  %7 = load i64, i64* %st_ino, align 8, !dbg !13403, !tbaa !10936, !ctir !258
  %xor = xor i64 %5, %7, !dbg !13404
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13405, !tbaa !2579
  %rem = urem i64 %xor, %8, !dbg !13406
  ret i64 %rem, !dbg !13407
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13408 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13409, metadata !DIExpression()), !dbg !13410
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13413, metadata !DIExpression()), !dbg !13414
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13415, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13415
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13414, !tbaa !2442
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13416, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13417, !ctir !1847
  %3 = load i64, i64* %st_ino, align 8, !dbg !13417, !tbaa !10936, !ctir !258
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13418, !tbaa !2579
  %rem = urem i64 %3, %4, !dbg !13419
  ret i64 %rem, !dbg !13420
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #0 !dbg !13421 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1846
  %b = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13426, metadata !DIExpression()), !dbg !13427
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13428, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13428
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13427, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13429, metadata !DIExpression()), !dbg !13430
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13431, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13431
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13430, !tbaa !2442
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13432, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13432, !ctir !1847
  %5 = load i64, i64* %st_ino, align 8, !dbg !13432, !tbaa !10936, !ctir !258
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13432, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13432, !ctir !1847
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13432, !tbaa !10936, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !13432
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13432

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13432, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13432, !ctir !1847
  %9 = load i64, i64* %st_dev, align 8, !dbg !13432, !tbaa !10942, !ctir !260
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13432, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13432, !ctir !1847
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13432, !tbaa !10942, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !13432
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13433

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13434, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13435, !ctir !1847
  %13 = load i8*, i8** %name, align 8, !dbg !13435, !tbaa !10929, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13436, !tbaa !2442
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13437, !ctir !1847
  %15 = load i8*, i8** %name4, align 8, !dbg !13437, !tbaa !10929, !ctir !143
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13438
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13439
  %17 = zext i1 %16 to i64, !dbg !13440
  %cond = select i1 %16, i32 1, i32 0, !dbg !13440
  %tobool = icmp ne i32 %cond, 0, !dbg !13440
  ret i1 %tobool, !dbg !13441
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13442 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1846
  %b = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13443, metadata !DIExpression()), !dbg !13444
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13445, metadata !DIExpression()), !dbg !13446
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13447, metadata !DIExpression()), !dbg !13448
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13449, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13449
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13448, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13450, metadata !DIExpression()), !dbg !13451
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13452, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13452
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13451, !tbaa !2442
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13453, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13453, !ctir !1847
  %5 = load i64, i64* %st_ino, align 8, !dbg !13453, !tbaa !10936, !ctir !258
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13453, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13453, !ctir !1847
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13453, !tbaa !10936, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !13453
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13453

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13453, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13453, !ctir !1847
  %9 = load i64, i64* %st_dev, align 8, !dbg !13453, !tbaa !10942, !ctir !260
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13453, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13453, !ctir !1847
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13453, !tbaa !10942, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !13453
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13454

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13455, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13455, !ctir !1847
  %13 = load i8*, i8** %name, align 8, !dbg !13455, !tbaa !10929, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13455, !tbaa !2442
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13455, !ctir !1847
  %15 = load i8*, i8** %name4, align 8, !dbg !13455, !tbaa !10929, !ctir !143
  %call = call i32 @strcmp(i8* %13, i8* %15) #16, !dbg !13455
  %cmp5 = icmp eq i32 %call, 0, !dbg !13455
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13456
  %17 = zext i1 %16 to i64, !dbg !13457
  %cond = select i1 %16, i32 1, i32 0, !dbg !13457
  %tobool = icmp ne i32 %cond, 0, !dbg !13457
  ret i1 %tobool, !dbg !13458
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #0 !dbg !13459 !ctir !339 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1853
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13462, metadata !DIExpression()), !dbg !13463
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13464, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13464
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13463, !tbaa !2442
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13465, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13466, !ctir !1848
  %3 = load i8*, i8** %name, align 8, !dbg !13466, !tbaa !10929, !ctir !143
  call void @free(i8* %3) #13, !dbg !13467
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13468, !tbaa !2442
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13468
  call void @free(i8* %5) #13, !dbg !13469
  ret void, !dbg !13470
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) #0 !dbg !13471 !ctir !1286 {
entry:
  %n.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %opts.addr = alloca i32, align 4
  %from_block_size.addr = alloca i64, align 8
  %to_block_size.addr = alloca i64, align 8
  %inexact_style = alloca i32, align 4, !ctir !27
  %base = alloca i32, align 4, !ctir !6
  %amt = alloca i64, align 8, !ctir !168
  %tenths = alloca i32, align 4, !ctir !27
  %exponent = alloca i32, align 4, !ctir !27
  %exponent_max = alloca i32, align 4, !ctir !27
  %p = alloca i8*, align 8, !ctir !143
  %psuffix = alloca i8*, align 8, !ctir !143
  %integerlim = alloca i8*, align 8, !ctir !146
  %rounding = alloca i32, align 4, !ctir !27
  %decimal_point = alloca i8*, align 8, !ctir !146
  %decimal_pointlen = alloca i64, align 8, !ctir !149
  %grouping = alloca i8*, align 8, !ctir !146
  %thousands_sep = alloca i8*, align 8, !ctir !146
  %l = alloca %struct.lconv*, align 8, !ctir !1288
  %pointlen = alloca i64, align 8, !ctir !149
  %multiplier = alloca i64, align 8, !ctir !168
  %divisor = alloca i64, align 8, !ctir !168
  %r10 = alloca i64, align 8, !ctir !168
  %r2 = alloca i64, align 8, !ctir !168
  %dto_block_size = alloca x86_fp80, align 16, !ctir !1317
  %damt = alloca x86_fp80, align 16, !ctir !1317
  %buflen = alloca i64, align 8, !ctir !149
  %nonintegerlen = alloca i64, align 8, !ctir !149
  %e = alloca x86_fp80, align 16, !ctir !1317
  %r10103 = alloca i32, align 4, !ctir !6
  %r2110 = alloca i32, align 4, !ctir !6
  %digit = alloca i32, align 4, !ctir !27
  %power = alloca i64, align 8, !ctir !168
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13472, metadata !DIExpression()), !dbg !13473
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13474, metadata !DIExpression()), !dbg !13475
  store i32 %opts, i32* %opts.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opts.addr, metadata !13476, metadata !DIExpression()), !dbg !13477
  store i64 %from_block_size, i64* %from_block_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %from_block_size.addr, metadata !13478, metadata !DIExpression()), !dbg !13479
  store i64 %to_block_size, i64* %to_block_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %to_block_size.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.declare(metadata i32* %inexact_style, metadata !13482, metadata !DIExpression()), !dbg !13483
  %0 = load i32, i32* %opts.addr, align 4, !dbg !13484, !tbaa !2436
  %and = and i32 %0, 3, !dbg !13485
  store i32 %and, i32* %inexact_style, align 4, !dbg !13483, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base, metadata !13486, metadata !DIExpression()), !dbg !13487
  %1 = load i32, i32* %opts.addr, align 4, !dbg !13488, !tbaa !2436
  %and1 = and i32 %1, 32, !dbg !13489
  %tobool = icmp ne i32 %and1, 0, !dbg !13488
  %2 = zext i1 %tobool to i64, !dbg !13488
  %cond = select i1 %tobool, i32 1024, i32 1000, !dbg !13488
  store i32 %cond, i32* %base, align 4, !dbg !13487, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %amt, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata i32* %tenths, metadata !13492, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !13494, metadata !DIExpression()), !dbg !13495
  store i32 -1, i32* %exponent, align 4, !dbg !13495, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %exponent_max, metadata !13496, metadata !DIExpression()), !dbg !13497
  store i32 8, i32* %exponent_max, align 4, !dbg !13497, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13498, metadata !DIExpression()), !dbg !13499
  call void @llvm.dbg.declare(metadata i8** %psuffix, metadata !13500, metadata !DIExpression()), !dbg !13501
  call void @llvm.dbg.declare(metadata i8** %integerlim, metadata !13502, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata i32* %rounding, metadata !13504, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.declare(metadata i8** %decimal_point, metadata !13506, metadata !DIExpression()), !dbg !13507
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.330, i64 0, i64 0), i8** %decimal_point, align 8, !dbg !13507, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %decimal_pointlen, metadata !13508, metadata !DIExpression()), !dbg !13509
  store i64 1, i64* %decimal_pointlen, align 8, !dbg !13509, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %grouping, metadata !13510, metadata !DIExpression()), !dbg !13511
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.331, i64 0, i64 0), i8** %grouping, align 8, !dbg !13511, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %thousands_sep, metadata !13512, metadata !DIExpression()), !dbg !13513
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.331, i64 0, i64 0), i8** %thousands_sep, align 8, !dbg !13513, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.lconv** %l, metadata !13514, metadata !DIExpression()), !dbg !13515
  %call = call %struct.lconv* @localeconv() #13, !dbg !13516
  store %struct.lconv* %call, %struct.lconv** %l, align 8, !dbg !13515, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %pointlen, metadata !13517, metadata !DIExpression()), !dbg !13518
  %3 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13519, !tbaa !2442
  %decimal_point2 = getelementptr inbounds %struct.lconv, %struct.lconv* %3, i32 0, i32 0, !dbg !13520, !ctir !1289
  %4 = load i8*, i8** %decimal_point2, align 8, !dbg !13520, !tbaa !13521, !ctir !143
  %call3 = call i64 @strlen(i8* %4) #16, !dbg !13523
  store i64 %call3, i64* %pointlen, align 8, !dbg !13518, !tbaa !2579
  %5 = load i64, i64* %pointlen, align 8, !dbg !13524, !tbaa !2579
  %cmp = icmp ult i64 0, %5, !dbg !13526
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13527

land.lhs.true:                                    ; preds = %entry
  %6 = load i64, i64* %pointlen, align 8, !dbg !13528, !tbaa !2579
  %cmp4 = icmp ule i64 %6, 16, !dbg !13529
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13530

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13531, !tbaa !2442
  %decimal_point5 = getelementptr inbounds %struct.lconv, %struct.lconv* %7, i32 0, i32 0, !dbg !13533, !ctir !1289
  %8 = load i8*, i8** %decimal_point5, align 8, !dbg !13533, !tbaa !13521, !ctir !143
  store i8* %8, i8** %decimal_point, align 8, !dbg !13534, !tbaa !2442
  %9 = load i64, i64* %pointlen, align 8, !dbg !13535, !tbaa !2579
  store i64 %9, i64* %decimal_pointlen, align 8, !dbg !13536, !tbaa !2579
  br label %if.end, !dbg !13537

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13538, !tbaa !2442
  %grouping6 = getelementptr inbounds %struct.lconv, %struct.lconv* %10, i32 0, i32 2, !dbg !13539, !ctir !1289
  %11 = load i8*, i8** %grouping6, align 8, !dbg !13539, !tbaa !13540, !ctir !143
  store i8* %11, i8** %grouping, align 8, !dbg !13541, !tbaa !2442
  %12 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13542, !tbaa !2442
  %thousands_sep7 = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !13544, !ctir !1289
  %13 = load i8*, i8** %thousands_sep7, align 8, !dbg !13544, !tbaa !13545, !ctir !143
  %call8 = call i64 @strlen(i8* %13) #16, !dbg !13546
  %cmp9 = icmp ule i64 %call8, 16, !dbg !13547
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13548

if.then10:                                        ; preds = %if.end
  %14 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13549, !tbaa !2442
  %thousands_sep11 = getelementptr inbounds %struct.lconv, %struct.lconv* %14, i32 0, i32 1, !dbg !13550, !ctir !1289
  %15 = load i8*, i8** %thousands_sep11, align 8, !dbg !13550, !tbaa !13545, !ctir !143
  store i8* %15, i8** %thousands_sep, align 8, !dbg !13551, !tbaa !2442
  br label %if.end12, !dbg !13552

if.end12:                                         ; preds = %if.then10, %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !13553, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 651, !dbg !13554
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !13555
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr13, i64 -3, !dbg !13556
  store i8* %add.ptr14, i8** %psuffix, align 8, !dbg !13557, !tbaa !2442
  %17 = load i8*, i8** %psuffix, align 8, !dbg !13558, !tbaa !2442
  store i8* %17, i8** %p, align 8, !dbg !13559, !tbaa !2442
  %18 = load i64, i64* %to_block_size.addr, align 8, !dbg !13560, !tbaa !2579
  %19 = load i64, i64* %from_block_size.addr, align 8, !dbg !13562, !tbaa !2579
  %cmp15 = icmp ule i64 %18, %19, !dbg !13563
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !13564

if.then16:                                        ; preds = %if.end12
  %20 = load i64, i64* %from_block_size.addr, align 8, !dbg !13565, !tbaa !2579
  %21 = load i64, i64* %to_block_size.addr, align 8, !dbg !13568, !tbaa !2579
  %rem = urem i64 %20, %21, !dbg !13569
  %cmp17 = icmp eq i64 %rem, 0, !dbg !13570
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !13571

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i64* %multiplier, metadata !13572, metadata !DIExpression()), !dbg !13574
  %22 = load i64, i64* %from_block_size.addr, align 8, !dbg !13575, !tbaa !2579
  %23 = load i64, i64* %to_block_size.addr, align 8, !dbg !13576, !tbaa !2579
  %div = udiv i64 %22, %23, !dbg !13577
  store i64 %div, i64* %multiplier, align 8, !dbg !13574, !tbaa !2579
  %24 = load i64, i64* %n.addr, align 8, !dbg !13578, !tbaa !2579
  %25 = load i64, i64* %multiplier, align 8, !dbg !13579, !tbaa !2579
  %mul = mul i64 %24, %25, !dbg !13580
  store i64 %mul, i64* %amt, align 8, !dbg !13581, !tbaa !2579
  %26 = load i64, i64* %amt, align 8, !dbg !13582, !tbaa !2579
  %27 = load i64, i64* %multiplier, align 8, !dbg !13584, !tbaa !2579
  %div19 = udiv i64 %26, %27, !dbg !13585
  %28 = load i64, i64* %n.addr, align 8, !dbg !13586, !tbaa !2579
  %cmp20 = icmp eq i64 %div19, %28, !dbg !13587
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !13588

if.then21:                                        ; preds = %if.then18
  store i32 0, i32* %tenths, align 4, !dbg !13589, !tbaa !2436
  store i32 0, i32* %rounding, align 4, !dbg !13591, !tbaa !2436
  br label %use_integer_arithmetic, !dbg !13592

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !13593

if.end23:                                         ; preds = %if.end22, %if.then16
  br label %if.end44, !dbg !13594

if.else:                                          ; preds = %if.end12
  %29 = load i64, i64* %from_block_size.addr, align 8, !dbg !13595, !tbaa !2579
  %cmp24 = icmp ne i64 %29, 0, !dbg !13597
  br i1 %cmp24, label %land.lhs.true25, label %if.end43, !dbg !13598

land.lhs.true25:                                  ; preds = %if.else
  %30 = load i64, i64* %to_block_size.addr, align 8, !dbg !13599, !tbaa !2579
  %31 = load i64, i64* %from_block_size.addr, align 8, !dbg !13600, !tbaa !2579
  %rem26 = urem i64 %30, %31, !dbg !13601
  %cmp27 = icmp eq i64 %rem26, 0, !dbg !13602
  br i1 %cmp27, label %if.then28, label %if.end43, !dbg !13603

if.then28:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !13604, metadata !DIExpression()), !dbg !13606
  %32 = load i64, i64* %to_block_size.addr, align 8, !dbg !13607, !tbaa !2579
  %33 = load i64, i64* %from_block_size.addr, align 8, !dbg !13608, !tbaa !2579
  %div29 = udiv i64 %32, %33, !dbg !13609
  store i64 %div29, i64* %divisor, align 8, !dbg !13606, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %r10, metadata !13610, metadata !DIExpression()), !dbg !13611
  %34 = load i64, i64* %n.addr, align 8, !dbg !13612, !tbaa !2579
  %35 = load i64, i64* %divisor, align 8, !dbg !13613, !tbaa !2579
  %rem30 = urem i64 %34, %35, !dbg !13614
  %mul31 = mul i64 %rem30, 10, !dbg !13615
  store i64 %mul31, i64* %r10, align 8, !dbg !13611, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %r2, metadata !13616, metadata !DIExpression()), !dbg !13617
  %36 = load i64, i64* %r10, align 8, !dbg !13618, !tbaa !2579
  %37 = load i64, i64* %divisor, align 8, !dbg !13619, !tbaa !2579
  %rem32 = urem i64 %36, %37, !dbg !13620
  %mul33 = mul i64 %rem32, 2, !dbg !13621
  store i64 %mul33, i64* %r2, align 8, !dbg !13617, !tbaa !2579
  %38 = load i64, i64* %n.addr, align 8, !dbg !13622, !tbaa !2579
  %39 = load i64, i64* %divisor, align 8, !dbg !13623, !tbaa !2579
  %div34 = udiv i64 %38, %39, !dbg !13624
  store i64 %div34, i64* %amt, align 8, !dbg !13625, !tbaa !2579
  %40 = load i64, i64* %r10, align 8, !dbg !13626, !tbaa !2579
  %41 = load i64, i64* %divisor, align 8, !dbg !13627, !tbaa !2579
  %div35 = udiv i64 %40, %41, !dbg !13628
  %conv = trunc i64 %div35 to i32, !dbg !13626
  store i32 %conv, i32* %tenths, align 4, !dbg !13629, !tbaa !2436
  %42 = load i64, i64* %r2, align 8, !dbg !13630, !tbaa !2579
  %43 = load i64, i64* %divisor, align 8, !dbg !13631, !tbaa !2579
  %cmp36 = icmp ult i64 %42, %43, !dbg !13632
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !13630

cond.true:                                        ; preds = %if.then28
  %44 = load i64, i64* %r2, align 8, !dbg !13633, !tbaa !2579
  %cmp38 = icmp ult i64 0, %44, !dbg !13634
  %conv39 = zext i1 %cmp38 to i32, !dbg !13634
  br label %cond.end, !dbg !13630

cond.false:                                       ; preds = %if.then28
  %45 = load i64, i64* %divisor, align 8, !dbg !13635, !tbaa !2579
  %46 = load i64, i64* %r2, align 8, !dbg !13636, !tbaa !2579
  %cmp40 = icmp ult i64 %45, %46, !dbg !13637
  %conv41 = zext i1 %cmp40 to i32, !dbg !13637
  %add = add nsw i32 2, %conv41, !dbg !13638
  br label %cond.end, !dbg !13630

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond42 = phi i32 [ %conv39, %cond.true ], [ %add, %cond.false ], !dbg !13630
  store i32 %cond42, i32* %rounding, align 4, !dbg !13639, !tbaa !2436
  br label %use_integer_arithmetic, !dbg !13640

if.end43:                                         ; preds = %land.lhs.true25, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end23
  call void @llvm.dbg.declare(metadata x86_fp80* %dto_block_size, metadata !13641, metadata !DIExpression()), !dbg !13643
  %47 = load i64, i64* %to_block_size.addr, align 8, !dbg !13644, !tbaa !2579
  %conv45 = uitofp i64 %47 to x86_fp80, !dbg !13644
  store x86_fp80 %conv45, x86_fp80* %dto_block_size, align 16, !dbg !13643, !tbaa !13645
  call void @llvm.dbg.declare(metadata x86_fp80* %damt, metadata !13647, metadata !DIExpression()), !dbg !13648
  %48 = load i64, i64* %n.addr, align 8, !dbg !13649, !tbaa !2579
  %conv46 = uitofp i64 %48 to x86_fp80, !dbg !13649
  %49 = load i64, i64* %from_block_size.addr, align 8, !dbg !13650, !tbaa !2579
  %conv47 = uitofp i64 %49 to x86_fp80, !dbg !13650
  %50 = load x86_fp80, x86_fp80* %dto_block_size, align 16, !dbg !13651, !tbaa !13645
  %div48 = fdiv x86_fp80 %conv47, %50, !dbg !13652
  %mul49 = fmul x86_fp80 %conv46, %div48, !dbg !13653
  store x86_fp80 %mul49, x86_fp80* %damt, align 16, !dbg !13648, !tbaa !13645
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !13654, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.declare(metadata i64* %nonintegerlen, metadata !13656, metadata !DIExpression()), !dbg !13657
  %51 = load i32, i32* %opts.addr, align 4, !dbg !13658, !tbaa !2436
  %and50 = and i32 %51, 16, !dbg !13660
  %tobool51 = icmp ne i32 %and50, 0, !dbg !13660
  br i1 %tobool51, label %if.else56, label %if.then52, !dbg !13661

if.then52:                                        ; preds = %if.end44
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !13662, !tbaa !2442
  %53 = load i32, i32* %inexact_style, align 4, !dbg !13664, !tbaa !2436
  %54 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13665, !tbaa !13645
  %call53 = call x86_fp80 @adjust_value(i32 %53, x86_fp80 %54), !dbg !13666
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.332, i64 0, i64 0), x86_fp80 %call53) #13, !dbg !13667
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !13668, !tbaa !2442
  %call55 = call i64 @strlen(i8* %55) #16, !dbg !13669
  store i64 %call55, i64* %buflen, align 8, !dbg !13670, !tbaa !2579
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13671, !tbaa !2579
  br label %if.end90, !dbg !13672

if.else56:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata x86_fp80* %e, metadata !13673, metadata !DIExpression()), !dbg !13675
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16, !dbg !13675, !tbaa !13645
  store i32 0, i32* %exponent, align 4, !dbg !13676, !tbaa !2436
  br label %do.body, !dbg !13677

do.body:                                          ; preds = %land.end, %if.else56
  %56 = load i32, i32* %base, align 4, !dbg !13678, !tbaa !2436
  %conv57 = uitofp i32 %56 to x86_fp80, !dbg !13678
  %57 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13680, !tbaa !13645
  %mul58 = fmul x86_fp80 %57, %conv57, !dbg !13680
  store x86_fp80 %mul58, x86_fp80* %e, align 16, !dbg !13680, !tbaa !13645
  %58 = load i32, i32* %exponent, align 4, !dbg !13681, !tbaa !2436
  %inc = add nsw i32 %58, 1, !dbg !13681
  store i32 %inc, i32* %exponent, align 4, !dbg !13681, !tbaa !2436
  br label %do.cond, !dbg !13682

do.cond:                                          ; preds = %do.body
  %59 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13683, !tbaa !13645
  %60 = load i32, i32* %base, align 4, !dbg !13684, !tbaa !2436
  %conv59 = uitofp i32 %60 to x86_fp80, !dbg !13684
  %mul60 = fmul x86_fp80 %59, %conv59, !dbg !13685
  %61 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13686, !tbaa !13645
  %cmp61 = fcmp ole x86_fp80 %mul60, %61, !dbg !13687
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !13688

land.rhs:                                         ; preds = %do.cond
  %62 = load i32, i32* %exponent, align 4, !dbg !13689, !tbaa !2436
  %63 = load i32, i32* %exponent_max, align 4, !dbg !13690, !tbaa !2436
  %cmp63 = icmp slt i32 %62, %63, !dbg !13691
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %64 = phi i1 [ false, %do.cond ], [ %cmp63, %land.rhs ], !dbg !13692
  br i1 %64, label %do.body, label %do.end, !dbg !13682, !llvm.loop !13693

do.end:                                           ; preds = %land.end
  %65 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13695, !tbaa !13645
  %66 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13696, !tbaa !13645
  %div65 = fdiv x86_fp80 %66, %65, !dbg !13696
  store x86_fp80 %div65, x86_fp80* %damt, align 16, !dbg !13696, !tbaa !13645
  %67 = load i8*, i8** %buf.addr, align 8, !dbg !13697, !tbaa !2442
  %68 = load i32, i32* %inexact_style, align 4, !dbg !13698, !tbaa !2436
  %69 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13699, !tbaa !13645
  %call66 = call x86_fp80 @adjust_value(i32 %68, x86_fp80 %69), !dbg !13700
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.333, i64 0, i64 0), x86_fp80 %call66) #13, !dbg !13701
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !13702, !tbaa !2442
  %call68 = call i64 @strlen(i8* %70) #16, !dbg !13703
  store i64 %call68, i64* %buflen, align 8, !dbg !13704, !tbaa !2579
  %71 = load i64, i64* %decimal_pointlen, align 8, !dbg !13705, !tbaa !2579
  %add69 = add i64 %71, 1, !dbg !13706
  store i64 %add69, i64* %nonintegerlen, align 8, !dbg !13707, !tbaa !2579
  %72 = load i64, i64* %nonintegerlen, align 8, !dbg !13708, !tbaa !2579
  %add70 = add i64 1, %72, !dbg !13710
  %73 = load i32, i32* %opts.addr, align 4, !dbg !13711, !tbaa !2436
  %and71 = and i32 %73, 32, !dbg !13712
  %tobool72 = icmp ne i32 %and71, 0, !dbg !13713
  %lnot = xor i1 %tobool72, true, !dbg !13713
  %lnot.ext = zext i1 %lnot to i32, !dbg !13713
  %conv73 = sext i32 %lnot.ext to i64, !dbg !13713
  %add74 = add i64 %add70, %conv73, !dbg !13714
  %74 = load i64, i64* %buflen, align 8, !dbg !13715, !tbaa !2579
  %cmp75 = icmp ult i64 %add74, %74, !dbg !13716
  br i1 %cmp75, label %if.then83, label %lor.lhs.false, !dbg !13717

lor.lhs.false:                                    ; preds = %do.end
  %75 = load i32, i32* %opts.addr, align 4, !dbg !13718, !tbaa !2436
  %and77 = and i32 %75, 8, !dbg !13719
  %tobool78 = icmp ne i32 %and77, 0, !dbg !13719
  br i1 %tobool78, label %land.lhs.true79, label %if.end89, !dbg !13720

land.lhs.true79:                                  ; preds = %lor.lhs.false
  %76 = load i8*, i8** %buf.addr, align 8, !dbg !13721, !tbaa !2442
  %77 = load i64, i64* %buflen, align 8, !dbg !13722, !tbaa !2579
  %sub = sub i64 %77, 1, !dbg !13723
  %arrayidx = getelementptr inbounds i8, i8* %76, i64 %sub, !dbg !13721, !ctir !143
  %78 = load i8, i8* %arrayidx, align 1, !dbg !13721, !tbaa !2497
  %conv80 = sext i8 %78 to i32, !dbg !13721
  %cmp81 = icmp eq i32 %conv80, 48, !dbg !13724
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !13725

if.then83:                                        ; preds = %land.lhs.true79, %do.end
  %79 = load i8*, i8** %buf.addr, align 8, !dbg !13726, !tbaa !2442
  %80 = load i32, i32* %inexact_style, align 4, !dbg !13728, !tbaa !2436
  %81 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13729, !tbaa !13645
  %mul84 = fmul x86_fp80 %81, 0xK4002A000000000000000, !dbg !13730
  %call85 = call x86_fp80 @adjust_value(i32 %80, x86_fp80 %mul84), !dbg !13731
  %div86 = fdiv x86_fp80 %call85, 0xK4002A000000000000000, !dbg !13732
  %call87 = call i32 (i8*, i8*, ...) @sprintf(i8* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.332, i64 0, i64 0), x86_fp80 %div86) #13, !dbg !13733
  %82 = load i8*, i8** %buf.addr, align 8, !dbg !13734, !tbaa !2442
  %call88 = call i64 @strlen(i8* %82) #16, !dbg !13735
  store i64 %call88, i64* %buflen, align 8, !dbg !13736, !tbaa !2579
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13737, !tbaa !2579
  br label %if.end89, !dbg !13738

if.end89:                                         ; preds = %if.then83, %land.lhs.true79, %lor.lhs.false
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then52
  %83 = load i8*, i8** %psuffix, align 8, !dbg !13739, !tbaa !2442
  %84 = load i64, i64* %buflen, align 8, !dbg !13740, !tbaa !2579
  %idx.neg = sub i64 0, %84, !dbg !13741
  %add.ptr91 = getelementptr inbounds i8, i8* %83, i64 %idx.neg, !dbg !13741
  store i8* %add.ptr91, i8** %p, align 8, !dbg !13742, !tbaa !2442
  %85 = load i8*, i8** %p, align 8, !dbg !13743, !tbaa !2442
  %86 = load i8*, i8** %buf.addr, align 8, !dbg !13744, !tbaa !2442
  %87 = load i64, i64* %buflen, align 8, !dbg !13745, !tbaa !2579
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %87, i1 false), !dbg !13746
  %88 = load i8*, i8** %p, align 8, !dbg !13747, !tbaa !2442
  %89 = load i64, i64* %buflen, align 8, !dbg !13748, !tbaa !2579
  %add.ptr92 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !13749
  %90 = load i64, i64* %nonintegerlen, align 8, !dbg !13750, !tbaa !2579
  %idx.neg93 = sub i64 0, %90, !dbg !13751
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr92, i64 %idx.neg93, !dbg !13751
  store i8* %add.ptr94, i8** %integerlim, align 8, !dbg !13752, !tbaa !2442
  br label %do_grouping, !dbg !13753

use_integer_arithmetic:                           ; preds = %cond.end, %if.then21
  call void @llvm.dbg.label(metadata !13754), !dbg !13755
  %91 = load i32, i32* %opts.addr, align 4, !dbg !13756, !tbaa !2436
  %and95 = and i32 %91, 16, !dbg !13759
  %tobool96 = icmp ne i32 %and95, 0, !dbg !13759
  br i1 %tobool96, label %if.then97, label %if.end179, !dbg !13760

if.then97:                                        ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4, !dbg !13761, !tbaa !2436
  %92 = load i32, i32* %base, align 4, !dbg !13763, !tbaa !2436
  %conv98 = zext i32 %92 to i64, !dbg !13763
  %93 = load i64, i64* %amt, align 8, !dbg !13765, !tbaa !2579
  %cmp99 = icmp ule i64 %conv98, %93, !dbg !13766
  br i1 %cmp99, label %if.then101, label %if.end178, !dbg !13767

if.then101:                                       ; preds = %if.then97
  br label %do.body102, !dbg !13768

do.body102:                                       ; preds = %land.end138, %if.then101
  call void @llvm.dbg.declare(metadata i32* %r10103, metadata !13770, metadata !DIExpression()), !dbg !13772
  %94 = load i64, i64* %amt, align 8, !dbg !13773, !tbaa !2579
  %95 = load i32, i32* %base, align 4, !dbg !13774, !tbaa !2436
  %conv104 = zext i32 %95 to i64, !dbg !13774
  %rem105 = urem i64 %94, %conv104, !dbg !13775
  %mul106 = mul i64 %rem105, 10, !dbg !13776
  %96 = load i32, i32* %tenths, align 4, !dbg !13777, !tbaa !2436
  %conv107 = sext i32 %96 to i64, !dbg !13777
  %add108 = add i64 %mul106, %conv107, !dbg !13778
  %conv109 = trunc i64 %add108 to i32, !dbg !13779
  store i32 %conv109, i32* %r10103, align 4, !dbg !13772, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %r2110, metadata !13780, metadata !DIExpression()), !dbg !13781
  %97 = load i32, i32* %r10103, align 4, !dbg !13782, !tbaa !2436
  %98 = load i32, i32* %base, align 4, !dbg !13783, !tbaa !2436
  %rem111 = urem i32 %97, %98, !dbg !13784
  %mul112 = mul i32 %rem111, 2, !dbg !13785
  %99 = load i32, i32* %rounding, align 4, !dbg !13786, !tbaa !2436
  %shr = ashr i32 %99, 1, !dbg !13787
  %add113 = add i32 %mul112, %shr, !dbg !13788
  store i32 %add113, i32* %r2110, align 4, !dbg !13781, !tbaa !2436
  %100 = load i32, i32* %base, align 4, !dbg !13789, !tbaa !2436
  %conv114 = zext i32 %100 to i64, !dbg !13789
  %101 = load i64, i64* %amt, align 8, !dbg !13790, !tbaa !2579
  %div115 = udiv i64 %101, %conv114, !dbg !13790
  store i64 %div115, i64* %amt, align 8, !dbg !13790, !tbaa !2579
  %102 = load i32, i32* %r10103, align 4, !dbg !13791, !tbaa !2436
  %103 = load i32, i32* %base, align 4, !dbg !13792, !tbaa !2436
  %div116 = udiv i32 %102, %103, !dbg !13793
  store i32 %div116, i32* %tenths, align 4, !dbg !13794, !tbaa !2436
  %104 = load i32, i32* %r2110, align 4, !dbg !13795, !tbaa !2436
  %105 = load i32, i32* %base, align 4, !dbg !13796, !tbaa !2436
  %cmp117 = icmp ult i32 %104, %105, !dbg !13797
  br i1 %cmp117, label %cond.true119, label %cond.false123, !dbg !13795

cond.true119:                                     ; preds = %do.body102
  %106 = load i32, i32* %r2110, align 4, !dbg !13798, !tbaa !2436
  %107 = load i32, i32* %rounding, align 4, !dbg !13799, !tbaa !2436
  %add120 = add i32 %106, %107, !dbg !13800
  %cmp121 = icmp ne i32 %add120, 0, !dbg !13801
  %conv122 = zext i1 %cmp121 to i32, !dbg !13801
  br label %cond.end128, !dbg !13795

cond.false123:                                    ; preds = %do.body102
  %108 = load i32, i32* %base, align 4, !dbg !13802, !tbaa !2436
  %109 = load i32, i32* %r2110, align 4, !dbg !13803, !tbaa !2436
  %110 = load i32, i32* %rounding, align 4, !dbg !13804, !tbaa !2436
  %add124 = add i32 %109, %110, !dbg !13805
  %cmp125 = icmp ult i32 %108, %add124, !dbg !13806
  %conv126 = zext i1 %cmp125 to i32, !dbg !13806
  %add127 = add nsw i32 2, %conv126, !dbg !13807
  br label %cond.end128, !dbg !13795

cond.end128:                                      ; preds = %cond.false123, %cond.true119
  %cond129 = phi i32 [ %conv122, %cond.true119 ], [ %add127, %cond.false123 ], !dbg !13795
  store i32 %cond129, i32* %rounding, align 4, !dbg !13808, !tbaa !2436
  %111 = load i32, i32* %exponent, align 4, !dbg !13809, !tbaa !2436
  %inc130 = add nsw i32 %111, 1, !dbg !13809
  store i32 %inc130, i32* %exponent, align 4, !dbg !13809, !tbaa !2436
  br label %do.cond131, !dbg !13810

do.cond131:                                       ; preds = %cond.end128
  %112 = load i32, i32* %base, align 4, !dbg !13811, !tbaa !2436
  %conv132 = zext i32 %112 to i64, !dbg !13811
  %113 = load i64, i64* %amt, align 8, !dbg !13812, !tbaa !2579
  %cmp133 = icmp ule i64 %conv132, %113, !dbg !13813
  br i1 %cmp133, label %land.rhs135, label %land.end138, !dbg !13814

land.rhs135:                                      ; preds = %do.cond131
  %114 = load i32, i32* %exponent, align 4, !dbg !13815, !tbaa !2436
  %115 = load i32, i32* %exponent_max, align 4, !dbg !13816, !tbaa !2436
  %cmp136 = icmp slt i32 %114, %115, !dbg !13817
  br label %land.end138

land.end138:                                      ; preds = %land.rhs135, %do.cond131
  %116 = phi i1 [ false, %do.cond131 ], [ %cmp136, %land.rhs135 ], !dbg !13818
  br i1 %116, label %do.body102, label %do.end139, !dbg !13810, !llvm.loop !13819

do.end139:                                        ; preds = %land.end138
  %117 = load i64, i64* %amt, align 8, !dbg !13821, !tbaa !2579
  %cmp140 = icmp ult i64 %117, 10, !dbg !13823
  br i1 %cmp140, label %if.then142, label %if.end177, !dbg !13824

if.then142:                                       ; preds = %do.end139
  %118 = load i32, i32* %inexact_style, align 4, !dbg !13825, !tbaa !2436
  %cmp143 = icmp eq i32 %118, 1, !dbg !13828
  br i1 %cmp143, label %cond.true145, label %cond.false150, !dbg !13829

cond.true145:                                     ; preds = %if.then142
  %119 = load i32, i32* %rounding, align 4, !dbg !13830, !tbaa !2436
  %120 = load i32, i32* %tenths, align 4, !dbg !13831, !tbaa !2436
  %and146 = and i32 %120, 1, !dbg !13832
  %add147 = add nsw i32 %119, %and146, !dbg !13833
  %cmp148 = icmp slt i32 2, %add147, !dbg !13834
  br i1 %cmp148, label %if.then156, label %if.end163, !dbg !13825

cond.false150:                                    ; preds = %if.then142
  %121 = load i32, i32* %inexact_style, align 4, !dbg !13835, !tbaa !2436
  %cmp151 = icmp eq i32 %121, 0, !dbg !13836
  br i1 %cmp151, label %land.lhs.true153, label %if.end163, !dbg !13837

land.lhs.true153:                                 ; preds = %cond.false150
  %122 = load i32, i32* %rounding, align 4, !dbg !13838, !tbaa !2436
  %cmp154 = icmp slt i32 0, %122, !dbg !13839
  br i1 %cmp154, label %if.then156, label %if.end163, !dbg !13829

if.then156:                                       ; preds = %land.lhs.true153, %cond.true145
  %123 = load i32, i32* %tenths, align 4, !dbg !13840, !tbaa !2436
  %inc157 = add nsw i32 %123, 1, !dbg !13840
  store i32 %inc157, i32* %tenths, align 4, !dbg !13840, !tbaa !2436
  store i32 0, i32* %rounding, align 4, !dbg !13842, !tbaa !2436
  %124 = load i32, i32* %tenths, align 4, !dbg !13843, !tbaa !2436
  %cmp158 = icmp eq i32 %124, 10, !dbg !13845
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !13846

if.then160:                                       ; preds = %if.then156
  %125 = load i64, i64* %amt, align 8, !dbg !13847, !tbaa !2579
  %inc161 = add i64 %125, 1, !dbg !13847
  store i64 %inc161, i64* %amt, align 8, !dbg !13847, !tbaa !2579
  store i32 0, i32* %tenths, align 4, !dbg !13849, !tbaa !2436
  br label %if.end162, !dbg !13850

if.end162:                                        ; preds = %if.then160, %if.then156
  br label %if.end163, !dbg !13851

if.end163:                                        ; preds = %if.end162, %land.lhs.true153, %cond.false150, %cond.true145
  %126 = load i64, i64* %amt, align 8, !dbg !13852, !tbaa !2579
  %cmp164 = icmp ult i64 %126, 10, !dbg !13854
  br i1 %cmp164, label %land.lhs.true166, label %if.end176, !dbg !13855

land.lhs.true166:                                 ; preds = %if.end163
  %127 = load i32, i32* %tenths, align 4, !dbg !13856, !tbaa !2436
  %tobool167 = icmp ne i32 %127, 0, !dbg !13856
  br i1 %tobool167, label %if.then171, label %lor.lhs.false168, !dbg !13857

lor.lhs.false168:                                 ; preds = %land.lhs.true166
  %128 = load i32, i32* %opts.addr, align 4, !dbg !13858, !tbaa !2436
  %and169 = and i32 %128, 8, !dbg !13859
  %tobool170 = icmp ne i32 %and169, 0, !dbg !13859
  br i1 %tobool170, label %if.end176, label %if.then171, !dbg !13860

if.then171:                                       ; preds = %lor.lhs.false168, %land.lhs.true166
  %129 = load i32, i32* %tenths, align 4, !dbg !13861, !tbaa !2436
  %add172 = add nsw i32 48, %129, !dbg !13863
  %conv173 = trunc i32 %add172 to i8, !dbg !13864
  %130 = load i8*, i8** %p, align 8, !dbg !13865, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 -1, !dbg !13865
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13865, !tbaa !2442
  store i8 %conv173, i8* %incdec.ptr, align 1, !dbg !13866, !tbaa !2497, !ctir !144
  %131 = load i64, i64* %decimal_pointlen, align 8, !dbg !13867, !tbaa !2579
  %132 = load i8*, i8** %p, align 8, !dbg !13868, !tbaa !2442
  %idx.neg174 = sub i64 0, %131, !dbg !13868
  %add.ptr175 = getelementptr inbounds i8, i8* %132, i64 %idx.neg174, !dbg !13868
  store i8* %add.ptr175, i8** %p, align 8, !dbg !13868, !tbaa !2442
  %133 = load i8*, i8** %p, align 8, !dbg !13869, !tbaa !2442
  %134 = load i8*, i8** %decimal_point, align 8, !dbg !13870, !tbaa !2442
  %135 = load i64, i64* %decimal_pointlen, align 8, !dbg !13871, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 1 %134, i64 %135, i1 false), !dbg !13872
  store i32 0, i32* %rounding, align 4, !dbg !13873, !tbaa !2436
  store i32 0, i32* %tenths, align 4, !dbg !13874, !tbaa !2436
  br label %if.end176, !dbg !13875

if.end176:                                        ; preds = %if.then171, %lor.lhs.false168, %if.end163
  br label %if.end177, !dbg !13876

if.end177:                                        ; preds = %if.end176, %do.end139
  br label %if.end178, !dbg !13877

if.end178:                                        ; preds = %if.end177, %if.then97
  br label %if.end179, !dbg !13878

if.end179:                                        ; preds = %if.end178, %use_integer_arithmetic
  %136 = load i32, i32* %inexact_style, align 4, !dbg !13879, !tbaa !2436
  %cmp180 = icmp eq i32 %136, 1, !dbg !13881
  br i1 %cmp180, label %cond.true182, label %cond.false191, !dbg !13882

cond.true182:                                     ; preds = %if.end179
  %137 = load i32, i32* %tenths, align 4, !dbg !13883, !tbaa !2436
  %138 = load i32, i32* %rounding, align 4, !dbg !13884, !tbaa !2436
  %conv183 = sext i32 %138 to i64, !dbg !13884
  %139 = load i64, i64* %amt, align 8, !dbg !13885, !tbaa !2579
  %and184 = and i64 %139, 1, !dbg !13886
  %add185 = add i64 %conv183, %and184, !dbg !13887
  %cmp186 = icmp ult i64 0, %add185, !dbg !13888
  %conv187 = zext i1 %cmp186 to i32, !dbg !13888
  %add188 = add nsw i32 %137, %conv187, !dbg !13889
  %cmp189 = icmp slt i32 5, %add188, !dbg !13890
  br i1 %cmp189, label %if.then198, label %if.end219, !dbg !13879

cond.false191:                                    ; preds = %if.end179
  %140 = load i32, i32* %inexact_style, align 4, !dbg !13891, !tbaa !2436
  %cmp192 = icmp eq i32 %140, 0, !dbg !13892
  br i1 %cmp192, label %land.lhs.true194, label %if.end219, !dbg !13893

land.lhs.true194:                                 ; preds = %cond.false191
  %141 = load i32, i32* %tenths, align 4, !dbg !13894, !tbaa !2436
  %142 = load i32, i32* %rounding, align 4, !dbg !13895, !tbaa !2436
  %add195 = add nsw i32 %141, %142, !dbg !13896
  %cmp196 = icmp slt i32 0, %add195, !dbg !13897
  br i1 %cmp196, label %if.then198, label %if.end219, !dbg !13882

if.then198:                                       ; preds = %land.lhs.true194, %cond.true182
  %143 = load i64, i64* %amt, align 8, !dbg !13898, !tbaa !2579
  %inc199 = add i64 %143, 1, !dbg !13898
  store i64 %inc199, i64* %amt, align 8, !dbg !13898, !tbaa !2579
  %144 = load i32, i32* %opts.addr, align 4, !dbg !13900, !tbaa !2436
  %and200 = and i32 %144, 16, !dbg !13902
  %tobool201 = icmp ne i32 %and200, 0, !dbg !13902
  br i1 %tobool201, label %land.lhs.true202, label %if.end218, !dbg !13903

land.lhs.true202:                                 ; preds = %if.then198
  %145 = load i64, i64* %amt, align 8, !dbg !13904, !tbaa !2579
  %146 = load i32, i32* %base, align 4, !dbg !13905, !tbaa !2436
  %conv203 = zext i32 %146 to i64, !dbg !13905
  %cmp204 = icmp eq i64 %145, %conv203, !dbg !13906
  br i1 %cmp204, label %land.lhs.true206, label %if.end218, !dbg !13907

land.lhs.true206:                                 ; preds = %land.lhs.true202
  %147 = load i32, i32* %exponent, align 4, !dbg !13908, !tbaa !2436
  %148 = load i32, i32* %exponent_max, align 4, !dbg !13909, !tbaa !2436
  %cmp207 = icmp slt i32 %147, %148, !dbg !13910
  br i1 %cmp207, label %if.then209, label %if.end218, !dbg !13911

if.then209:                                       ; preds = %land.lhs.true206
  %149 = load i32, i32* %exponent, align 4, !dbg !13912, !tbaa !2436
  %inc210 = add nsw i32 %149, 1, !dbg !13912
  store i32 %inc210, i32* %exponent, align 4, !dbg !13912, !tbaa !2436
  %150 = load i32, i32* %opts.addr, align 4, !dbg !13914, !tbaa !2436
  %and211 = and i32 %150, 8, !dbg !13916
  %tobool212 = icmp ne i32 %and211, 0, !dbg !13916
  br i1 %tobool212, label %if.end217, label %if.then213, !dbg !13917

if.then213:                                       ; preds = %if.then209
  %151 = load i8*, i8** %p, align 8, !dbg !13918, !tbaa !2442
  %incdec.ptr214 = getelementptr inbounds i8, i8* %151, i32 -1, !dbg !13918
  store i8* %incdec.ptr214, i8** %p, align 8, !dbg !13918, !tbaa !2442
  store i8 48, i8* %incdec.ptr214, align 1, !dbg !13920, !tbaa !2497, !ctir !144
  %152 = load i64, i64* %decimal_pointlen, align 8, !dbg !13921, !tbaa !2579
  %153 = load i8*, i8** %p, align 8, !dbg !13922, !tbaa !2442
  %idx.neg215 = sub i64 0, %152, !dbg !13922
  %add.ptr216 = getelementptr inbounds i8, i8* %153, i64 %idx.neg215, !dbg !13922
  store i8* %add.ptr216, i8** %p, align 8, !dbg !13922, !tbaa !2442
  %154 = load i8*, i8** %p, align 8, !dbg !13923, !tbaa !2442
  %155 = load i8*, i8** %decimal_point, align 8, !dbg !13924, !tbaa !2442
  %156 = load i64, i64* %decimal_pointlen, align 8, !dbg !13925, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %156, i1 false), !dbg !13926
  br label %if.end217, !dbg !13927

if.end217:                                        ; preds = %if.then213, %if.then209
  store i64 1, i64* %amt, align 8, !dbg !13928, !tbaa !2579
  br label %if.end218, !dbg !13929

if.end218:                                        ; preds = %if.end217, %land.lhs.true206, %land.lhs.true202, %if.then198
  br label %if.end219, !dbg !13930

if.end219:                                        ; preds = %if.end218, %land.lhs.true194, %cond.false191, %cond.true182
  %157 = load i8*, i8** %p, align 8, !dbg !13931, !tbaa !2442
  store i8* %157, i8** %integerlim, align 8, !dbg !13932, !tbaa !2442
  br label %do.body220, !dbg !13933

do.body220:                                       ; preds = %do.cond226, %if.end219
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !13934, metadata !DIExpression()), !dbg !13936
  %158 = load i64, i64* %amt, align 8, !dbg !13937, !tbaa !2579
  %rem221 = urem i64 %158, 10, !dbg !13938
  %conv222 = trunc i64 %rem221 to i32, !dbg !13937
  store i32 %conv222, i32* %digit, align 4, !dbg !13936, !tbaa !2436
  %159 = load i32, i32* %digit, align 4, !dbg !13939, !tbaa !2436
  %add223 = add nsw i32 %159, 48, !dbg !13940
  %conv224 = trunc i32 %add223 to i8, !dbg !13939
  %160 = load i8*, i8** %p, align 8, !dbg !13941, !tbaa !2442
  %incdec.ptr225 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !13941
  store i8* %incdec.ptr225, i8** %p, align 8, !dbg !13941, !tbaa !2442
  store i8 %conv224, i8* %incdec.ptr225, align 1, !dbg !13942, !tbaa !2497, !ctir !144
  br label %do.cond226, !dbg !13943

do.cond226:                                       ; preds = %do.body220
  %161 = load i64, i64* %amt, align 8, !dbg !13944, !tbaa !2579
  %div227 = udiv i64 %161, 10, !dbg !13944
  store i64 %div227, i64* %amt, align 8, !dbg !13944, !tbaa !2579
  %cmp228 = icmp ne i64 %div227, 0, !dbg !13945
  br i1 %cmp228, label %do.body220, label %do.end230, !dbg !13943, !llvm.loop !13946

do.end230:                                        ; preds = %do.cond226
  br label %do_grouping, !dbg !13948

do_grouping:                                      ; preds = %do.end230, %if.end90
  call void @llvm.dbg.label(metadata !13949), !dbg !13950
  %162 = load i32, i32* %opts.addr, align 4, !dbg !13951, !tbaa !2436
  %and231 = and i32 %162, 4, !dbg !13953
  %tobool232 = icmp ne i32 %and231, 0, !dbg !13953
  br i1 %tobool232, label %if.then233, label %if.end235, !dbg !13954

if.then233:                                       ; preds = %do_grouping
  %163 = load i8*, i8** %p, align 8, !dbg !13955, !tbaa !2442
  %164 = load i8*, i8** %integerlim, align 8, !dbg !13956, !tbaa !2442
  %165 = load i8*, i8** %p, align 8, !dbg !13957, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %164 to i64, !dbg !13958
  %sub.ptr.rhs.cast = ptrtoint i8* %165 to i64, !dbg !13958
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13958
  %166 = load i8*, i8** %grouping, align 8, !dbg !13959, !tbaa !2442
  %167 = load i8*, i8** %thousands_sep, align 8, !dbg !13960, !tbaa !2442
  %call234 = call i8* @group_number(i8* %163, i64 %sub.ptr.sub, i8* %166, i8* %167), !dbg !13961
  store i8* %call234, i8** %p, align 8, !dbg !13962, !tbaa !2442
  br label %if.end235, !dbg !13963

if.end235:                                        ; preds = %if.then233, %do_grouping
  %168 = load i32, i32* %opts.addr, align 4, !dbg !13964, !tbaa !2436
  %and236 = and i32 %168, 128, !dbg !13966
  %tobool237 = icmp ne i32 %and236, 0, !dbg !13966
  br i1 %tobool237, label %if.then238, label %if.end288, !dbg !13967

if.then238:                                       ; preds = %if.end235
  %169 = load i32, i32* %exponent, align 4, !dbg !13968, !tbaa !2436
  %cmp239 = icmp slt i32 %169, 0, !dbg !13971
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !13972

if.then241:                                       ; preds = %if.then238
  call void @llvm.dbg.declare(metadata i64* %power, metadata !13973, metadata !DIExpression()), !dbg !13975
  store i32 0, i32* %exponent, align 4, !dbg !13976, !tbaa !2436
  store i64 1, i64* %power, align 8, !dbg !13977, !tbaa !2579
  br label %for.cond, !dbg !13979

for.cond:                                         ; preds = %for.inc, %if.then241
  %170 = load i64, i64* %power, align 8, !dbg !13980, !tbaa !2579
  %171 = load i64, i64* %to_block_size.addr, align 8, !dbg !13982, !tbaa !2579
  %cmp242 = icmp ult i64 %170, %171, !dbg !13983
  br i1 %cmp242, label %for.body, label %for.end, !dbg !13984

for.body:                                         ; preds = %for.cond
  %172 = load i32, i32* %exponent, align 4, !dbg !13985, !tbaa !2436
  %inc244 = add nsw i32 %172, 1, !dbg !13985
  store i32 %inc244, i32* %exponent, align 4, !dbg !13985, !tbaa !2436
  %173 = load i32, i32* %exponent_max, align 4, !dbg !13987, !tbaa !2436
  %cmp245 = icmp eq i32 %inc244, %173, !dbg !13988
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !13989

if.then247:                                       ; preds = %for.body
  br label %for.end, !dbg !13990

if.end248:                                        ; preds = %for.body
  br label %for.inc, !dbg !13987

for.inc:                                          ; preds = %if.end248
  %174 = load i32, i32* %base, align 4, !dbg !13991, !tbaa !2436
  %conv249 = zext i32 %174 to i64, !dbg !13991
  %175 = load i64, i64* %power, align 8, !dbg !13992, !tbaa !2579
  %mul250 = mul i64 %175, %conv249, !dbg !13992
  store i64 %mul250, i64* %power, align 8, !dbg !13992, !tbaa !2579
  br label %for.cond, !dbg !13993, !llvm.loop !13994

for.end:                                          ; preds = %if.then247, %for.cond
  br label %if.end251, !dbg !13996

if.end251:                                        ; preds = %for.end, %if.then238
  %176 = load i32, i32* %exponent, align 4, !dbg !13997, !tbaa !2436
  %177 = load i32, i32* %opts.addr, align 4, !dbg !13999, !tbaa !2436
  %and252 = and i32 %177, 256, !dbg !14000
  %or = or i32 %176, %and252, !dbg !14001
  %tobool253 = icmp ne i32 %or, 0, !dbg !14001
  br i1 %tobool253, label %land.lhs.true254, label %if.end259, !dbg !14002

land.lhs.true254:                                 ; preds = %if.end251
  %178 = load i32, i32* %opts.addr, align 4, !dbg !14003, !tbaa !2436
  %and255 = and i32 %178, 64, !dbg !14004
  %tobool256 = icmp ne i32 %and255, 0, !dbg !14004
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !14005

if.then257:                                       ; preds = %land.lhs.true254
  %179 = load i8*, i8** %psuffix, align 8, !dbg !14006, !tbaa !2442
  %incdec.ptr258 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !14006
  store i8* %incdec.ptr258, i8** %psuffix, align 8, !dbg !14006, !tbaa !2442
  store i8 32, i8* %179, align 1, !dbg !14007, !tbaa !2497, !ctir !144
  br label %if.end259, !dbg !14008

if.end259:                                        ; preds = %if.then257, %land.lhs.true254, %if.end251
  %180 = load i32, i32* %exponent, align 4, !dbg !14009, !tbaa !2436
  %tobool260 = icmp ne i32 %180, 0, !dbg !14009
  br i1 %tobool260, label %if.then261, label %if.end275, !dbg !14011

if.then261:                                       ; preds = %if.end259
  %181 = load i32, i32* %opts.addr, align 4, !dbg !14012, !tbaa !2436
  %and262 = and i32 %181, 32, !dbg !14013
  %tobool263 = icmp ne i32 %and262, 0, !dbg !14013
  br i1 %tobool263, label %cond.false268, label %land.lhs.true264, !dbg !14014

land.lhs.true264:                                 ; preds = %if.then261
  %182 = load i32, i32* %exponent, align 4, !dbg !14015, !tbaa !2436
  %cmp265 = icmp eq i32 %182, 1, !dbg !14016
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !14017

cond.true267:                                     ; preds = %land.lhs.true264
  br label %cond.end271, !dbg !14017

cond.false268:                                    ; preds = %land.lhs.true264, %if.then261
  %183 = load i32, i32* %exponent, align 4, !dbg !14018, !tbaa !2436
  %idxprom = sext i32 %183 to i64, !dbg !14019
  %arrayidx269 = getelementptr inbounds [9 x i8], [9 x i8]* @power_letter, i64 0, i64 %idxprom, !dbg !14019, !ctir !1318
  %184 = load i8, i8* %arrayidx269, align 1, !dbg !14019, !tbaa !2497
  %conv270 = sext i8 %184 to i32, !dbg !14019
  br label %cond.end271, !dbg !14017

cond.end271:                                      ; preds = %cond.false268, %cond.true267
  %cond272 = phi i32 [ 107, %cond.true267 ], [ %conv270, %cond.false268 ], !dbg !14017
  %conv273 = trunc i32 %cond272 to i8, !dbg !14020
  %185 = load i8*, i8** %psuffix, align 8, !dbg !14021, !tbaa !2442
  %incdec.ptr274 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !14021
  store i8* %incdec.ptr274, i8** %psuffix, align 8, !dbg !14021, !tbaa !2442
  store i8 %conv273, i8* %185, align 1, !dbg !14022, !tbaa !2497, !ctir !144
  br label %if.end275, !dbg !14023

if.end275:                                        ; preds = %cond.end271, %if.end259
  %186 = load i32, i32* %opts.addr, align 4, !dbg !14024, !tbaa !2436
  %and276 = and i32 %186, 256, !dbg !14026
  %tobool277 = icmp ne i32 %and276, 0, !dbg !14026
  br i1 %tobool277, label %if.then278, label %if.end287, !dbg !14027

if.then278:                                       ; preds = %if.end275
  %187 = load i32, i32* %opts.addr, align 4, !dbg !14028, !tbaa !2436
  %and279 = and i32 %187, 32, !dbg !14031
  %tobool280 = icmp ne i32 %and279, 0, !dbg !14031
  br i1 %tobool280, label %land.lhs.true281, label %if.end285, !dbg !14032

land.lhs.true281:                                 ; preds = %if.then278
  %188 = load i32, i32* %exponent, align 4, !dbg !14033, !tbaa !2436
  %tobool282 = icmp ne i32 %188, 0, !dbg !14033
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !14034

if.then283:                                       ; preds = %land.lhs.true281
  %189 = load i8*, i8** %psuffix, align 8, !dbg !14035, !tbaa !2442
  %incdec.ptr284 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !14035
  store i8* %incdec.ptr284, i8** %psuffix, align 8, !dbg !14035, !tbaa !2442
  store i8 105, i8* %189, align 1, !dbg !14036, !tbaa !2497, !ctir !144
  br label %if.end285, !dbg !14037

if.end285:                                        ; preds = %if.then283, %land.lhs.true281, %if.then278
  %190 = load i8*, i8** %psuffix, align 8, !dbg !14038, !tbaa !2442
  %incdec.ptr286 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !14038
  store i8* %incdec.ptr286, i8** %psuffix, align 8, !dbg !14038, !tbaa !2442
  store i8 66, i8* %190, align 1, !dbg !14039, !tbaa !2497, !ctir !144
  br label %if.end287, !dbg !14040

if.end287:                                        ; preds = %if.end285, %if.end275
  br label %if.end288, !dbg !14041

if.end288:                                        ; preds = %if.end287, %if.end235
  %191 = load i8*, i8** %psuffix, align 8, !dbg !14042, !tbaa !2442
  store i8 0, i8* %191, align 1, !dbg !14043, !tbaa !2497, !ctir !144
  %192 = load i8*, i8** %p, align 8, !dbg !14044, !tbaa !2442
  ret i8* %192, !dbg !14045
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) #0 !dbg !14046 !ctir !1323 {
entry:
  %inexact_style.addr = alloca i32, align 4
  %value.addr = alloca x86_fp80, align 16
  %u = alloca i64, align 8, !ctir !168
  store i32 %inexact_style, i32* %inexact_style.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %inexact_style.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  store x86_fp80 %value, x86_fp80* %value.addr, align 16, !tbaa !13645
  call void @llvm.dbg.declare(metadata x86_fp80* %value.addr, metadata !14049, metadata !DIExpression()), !dbg !14050
  %0 = load i32, i32* %inexact_style.addr, align 4, !dbg !14051, !tbaa !2436
  %cmp = icmp ne i32 %0, 1, !dbg !14053
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14054

land.lhs.true:                                    ; preds = %entry
  %1 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14055, !tbaa !13645
  %cmp1 = fcmp olt x86_fp80 %1, 0xK403EFFFFFFFFFFFFFFFF, !dbg !14056
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14057

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %u, metadata !14058, metadata !DIExpression()), !dbg !14060
  %2 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14061, !tbaa !13645
  %conv = fptoui x86_fp80 %2 to i64, !dbg !14061
  store i64 %conv, i64* %u, align 8, !dbg !14060, !tbaa !2579
  %3 = load i64, i64* %u, align 8, !dbg !14062, !tbaa !2579
  %4 = load i32, i32* %inexact_style.addr, align 4, !dbg !14063, !tbaa !2436
  %cmp2 = icmp eq i32 %4, 0, !dbg !14064
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !14065

land.rhs:                                         ; preds = %if.then
  %5 = load i64, i64* %u, align 8, !dbg !14066, !tbaa !2579
  %conv4 = uitofp i64 %5 to x86_fp80, !dbg !14066
  %6 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14067, !tbaa !13645
  %cmp5 = fcmp une x86_fp80 %conv4, %6, !dbg !14068
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp5, %land.rhs ], !dbg !14069
  %land.ext = zext i1 %7 to i32, !dbg !14065
  %conv7 = sext i32 %land.ext to i64, !dbg !14070
  %add = add i64 %3, %conv7, !dbg !14071
  %conv8 = uitofp i64 %add to x86_fp80, !dbg !14062
  store x86_fp80 %conv8, x86_fp80* %value.addr, align 16, !dbg !14072, !tbaa !13645
  br label %if.end, !dbg !14073

if.end:                                           ; preds = %land.end, %land.lhs.true, %entry
  %8 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14074, !tbaa !13645
  ret x86_fp80 %8, !dbg !14075
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) #0 !dbg !14076 !ctir !1325 {
entry:
  %number.addr = alloca i8*, align 8
  %numberlen.addr = alloca i64, align 8
  %grouping.addr = alloca i8*, align 8
  %thousands_sep.addr = alloca i8*, align 8
  %d = alloca i8*, align 8, !ctir !143
  %grouplen = alloca i64, align 8, !ctir !149
  %thousands_seplen = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %buf = alloca [41 x i8], align 16, !ctir !1327
  %g = alloca i8, align 1, !ctir !591
  store i8* %number, i8** %number.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !14077, metadata !DIExpression()), !dbg !14078
  store i64 %numberlen, i64* %numberlen.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %numberlen.addr, metadata !14079, metadata !DIExpression()), !dbg !14080
  store i8* %grouping, i8** %grouping.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %grouping.addr, metadata !14081, metadata !DIExpression()), !dbg !14082
  store i8* %thousands_sep, i8** %thousands_sep.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %thousands_sep.addr, metadata !14083, metadata !DIExpression()), !dbg !14084
  call void @llvm.dbg.declare(metadata i8** %d, metadata !14085, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.declare(metadata i64* %grouplen, metadata !14087, metadata !DIExpression()), !dbg !14088
  store i64 -1, i64* %grouplen, align 8, !dbg !14088, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %thousands_seplen, metadata !14089, metadata !DIExpression()), !dbg !14090
  %0 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14091, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !14092
  store i64 %call, i64* %thousands_seplen, align 8, !dbg !14090, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14093, metadata !DIExpression()), !dbg !14094
  %1 = load i64, i64* %numberlen.addr, align 8, !dbg !14095, !tbaa !2579
  store i64 %1, i64* %i, align 8, !dbg !14094, !tbaa !2579
  call void @llvm.dbg.declare(metadata [41 x i8]* %buf, metadata !14096, metadata !DIExpression()), !dbg !14097
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14098
  %2 = load i8*, i8** %number.addr, align 8, !dbg !14099, !tbaa !2442
  %3 = load i64, i64* %numberlen.addr, align 8, !dbg !14100, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %2, i64 %3, i1 false), !dbg !14098
  %4 = load i8*, i8** %number.addr, align 8, !dbg !14101, !tbaa !2442
  %5 = load i64, i64* %numberlen.addr, align 8, !dbg !14102, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !14103
  store i8* %add.ptr, i8** %d, align 8, !dbg !14104, !tbaa !2442
  br label %for.cond, !dbg !14105

for.cond:                                         ; preds = %if.end13, %entry
  call void @llvm.dbg.declare(metadata i8* %g, metadata !14106, metadata !DIExpression()), !dbg !14110
  %6 = load i8*, i8** %grouping.addr, align 8, !dbg !14111, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !14112, !tbaa !2497, !ctir !147
  store i8 %7, i8* %g, align 1, !dbg !14110, !tbaa !2497
  %8 = load i8, i8* %g, align 1, !dbg !14113, !tbaa !2497
  %tobool = icmp ne i8 %8, 0, !dbg !14113
  br i1 %tobool, label %if.then, label %if.end, !dbg !14115

if.then:                                          ; preds = %for.cond
  %9 = load i8, i8* %g, align 1, !dbg !14116, !tbaa !2497
  %conv = zext i8 %9 to i32, !dbg !14116
  %cmp = icmp slt i32 %conv, 127, !dbg !14118
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14116

cond.true:                                        ; preds = %if.then
  %10 = load i8, i8* %g, align 1, !dbg !14119, !tbaa !2497
  %conv2 = zext i8 %10 to i64, !dbg !14119
  br label %cond.end, !dbg !14116

cond.false:                                       ; preds = %if.then
  %11 = load i64, i64* %i, align 8, !dbg !14120, !tbaa !2579
  br label %cond.end, !dbg !14116

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv2, %cond.true ], [ %11, %cond.false ], !dbg !14116
  store i64 %cond, i64* %grouplen, align 8, !dbg !14121, !tbaa !2579
  %12 = load i8*, i8** %grouping.addr, align 8, !dbg !14122, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !14122
  store i8* %incdec.ptr, i8** %grouping.addr, align 8, !dbg !14122, !tbaa !2442
  br label %if.end, !dbg !14123

if.end:                                           ; preds = %cond.end, %for.cond
  %13 = load i64, i64* %i, align 8, !dbg !14124, !tbaa !2579
  %14 = load i64, i64* %grouplen, align 8, !dbg !14126, !tbaa !2579
  %cmp3 = icmp ult i64 %13, %14, !dbg !14127
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !14128

if.then5:                                         ; preds = %if.end
  %15 = load i64, i64* %i, align 8, !dbg !14129, !tbaa !2579
  store i64 %15, i64* %grouplen, align 8, !dbg !14130, !tbaa !2579
  br label %if.end6, !dbg !14131

if.end6:                                          ; preds = %if.then5, %if.end
  %16 = load i64, i64* %grouplen, align 8, !dbg !14132, !tbaa !2579
  %17 = load i8*, i8** %d, align 8, !dbg !14133, !tbaa !2442
  %idx.neg = sub i64 0, %16, !dbg !14133
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %idx.neg, !dbg !14133
  store i8* %add.ptr7, i8** %d, align 8, !dbg !14133, !tbaa !2442
  %18 = load i64, i64* %grouplen, align 8, !dbg !14134, !tbaa !2579
  %19 = load i64, i64* %i, align 8, !dbg !14135, !tbaa !2579
  %sub = sub i64 %19, %18, !dbg !14135
  store i64 %sub, i64* %i, align 8, !dbg !14135, !tbaa !2579
  %20 = load i8*, i8** %d, align 8, !dbg !14136, !tbaa !2442
  %arraydecay8 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14137
  %21 = load i64, i64* %i, align 8, !dbg !14138, !tbaa !2579
  %add.ptr9 = getelementptr inbounds i8, i8* %arraydecay8, i64 %21, !dbg !14139
  %22 = load i64, i64* %grouplen, align 8, !dbg !14140, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %add.ptr9, i64 %22, i1 false), !dbg !14141
  %23 = load i64, i64* %i, align 8, !dbg !14142, !tbaa !2579
  %cmp10 = icmp eq i64 %23, 0, !dbg !14144
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14145

if.then12:                                        ; preds = %if.end6
  %24 = load i8*, i8** %d, align 8, !dbg !14146, !tbaa !2442
  ret i8* %24, !dbg !14147

if.end13:                                         ; preds = %if.end6
  %25 = load i64, i64* %thousands_seplen, align 8, !dbg !14148, !tbaa !2579
  %26 = load i8*, i8** %d, align 8, !dbg !14149, !tbaa !2442
  %idx.neg14 = sub i64 0, %25, !dbg !14149
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %idx.neg14, !dbg !14149
  store i8* %add.ptr15, i8** %d, align 8, !dbg !14149, !tbaa !2442
  %27 = load i8*, i8** %d, align 8, !dbg !14150, !tbaa !2442
  %28 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14151, !tbaa !2442
  %29 = load i64, i64* %thousands_seplen, align 8, !dbg !14152, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false), !dbg !14153
  br label %for.cond, !dbg !14154, !llvm.loop !14155
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) #0 !dbg !14158 !ctir !1319 {
entry:
  %spec.addr = alloca i8*, align 8
  %opts.addr = alloca i32*, align 8
  %block_size.addr = alloca i64*, align 8
  %e = alloca i32, align 4, !ctir !1322
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14159, metadata !DIExpression()), !dbg !14160
  store i32* %opts, i32** %opts.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %opts.addr, metadata !14161, metadata !DIExpression()), !dbg !14162
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14163, metadata !DIExpression()), !dbg !14164
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14165, metadata !DIExpression()), !dbg !14166
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14167, !tbaa !2442
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14168, !tbaa !2442
  %2 = load i32*, i32** %opts.addr, align 8, !dbg !14169, !tbaa !2442
  %call = call i32 @humblock(i8* %0, i64* %1, i32* %2), !dbg !14170
  store i32 %call, i32* %e, align 4, !dbg !14166, !tbaa !2497
  %3 = load i64*, i64** %block_size.addr, align 8, !dbg !14171, !tbaa !2442
  %4 = load i64, i64* %3, align 8, !dbg !14173, !tbaa !2579, !ctir !168
  %cmp = icmp eq i64 %4, 0, !dbg !14174
  br i1 %cmp, label %if.then, label %if.end, !dbg !14175

if.then:                                          ; preds = %entry
  %call1 = call i64 @default_block_size(), !dbg !14176
  %5 = load i64*, i64** %block_size.addr, align 8, !dbg !14178, !tbaa !2442
  store i64 %call1, i64* %5, align 8, !dbg !14179, !tbaa !2579, !ctir !168
  store i32 4, i32* %e, align 4, !dbg !14180, !tbaa !2497
  br label %if.end, !dbg !14181

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %e, align 4, !dbg !14182, !tbaa !2497
  ret i32 %6, !dbg !14183
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) #0 !dbg !14184 !ctir !1330 {
entry:
  %retval = alloca i32, align 4
  %spec.addr = alloca i8*, align 8
  %block_size.addr = alloca i64*, align 8
  %options.addr = alloca i32*, align 8
  %i = alloca i32, align 4, !ctir !27
  %opts = alloca i32, align 4, !ctir !27
  %ptr = alloca i8*, align 8, !ctir !143
  %e = alloca i32, align 4, !ctir !1322
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14185, metadata !DIExpression()), !dbg !14186
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14187, metadata !DIExpression()), !dbg !14188
  store i32* %options, i32** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %options.addr, metadata !14189, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14191, metadata !DIExpression()), !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %opts, metadata !14193, metadata !DIExpression()), !dbg !14194
  store i32 0, i32* %opts, align 4, !dbg !14194, !tbaa !2436
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14195, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !14195
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14197

land.lhs.true:                                    ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.337, i64 0, i64 0)) #13, !dbg !14198
  store i8* %call, i8** %spec.addr, align 8, !dbg !14199, !tbaa !2442
  %tobool1 = icmp ne i8* %call, null, !dbg !14199
  br i1 %tobool1, label %if.else, label %land.lhs.true2, !dbg !14200

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.338, i64 0, i64 0)) #13, !dbg !14201
  store i8* %call3, i8** %spec.addr, align 8, !dbg !14202, !tbaa !2442
  %tobool4 = icmp ne i8* %call3, null, !dbg !14202
  br i1 %tobool4, label %if.else, label %if.then, !dbg !14203

if.then:                                          ; preds = %land.lhs.true2
  %call5 = call i64 @default_block_size(), !dbg !14204
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14205, !tbaa !2442
  store i64 %call5, i64* %1, align 8, !dbg !14206, !tbaa !2579, !ctir !168
  br label %if.end51, !dbg !14207

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %2 = load i8*, i8** %spec.addr, align 8, !dbg !14208, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !14211, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !14211
  %cmp = icmp eq i32 %conv, 39, !dbg !14212
  br i1 %cmp, label %if.then7, label %if.end, !dbg !14213

if.then7:                                         ; preds = %if.else
  %4 = load i32, i32* %opts, align 4, !dbg !14214, !tbaa !2436
  %or = or i32 %4, 4, !dbg !14214
  store i32 %or, i32* %opts, align 4, !dbg !14214, !tbaa !2436
  %5 = load i8*, i8** %spec.addr, align 8, !dbg !14216, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !14216
  store i8* %incdec.ptr, i8** %spec.addr, align 8, !dbg !14216, !tbaa !2442
  br label %if.end, !dbg !14217

if.end:                                           ; preds = %if.then7, %if.else
  %6 = load i8*, i8** %spec.addr, align 8, !dbg !14218, !tbaa !2442
  %call8 = call i64 @argmatch(i8* %6, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) #16, !dbg !14218
  %conv9 = trunc i64 %call8 to i32, !dbg !14218
  store i32 %conv9, i32* %i, align 4, !dbg !14220, !tbaa !2436
  %cmp10 = icmp sle i32 0, %conv9, !dbg !14221
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !14222

if.then12:                                        ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !14223, !tbaa !2436
  %idxprom = sext i32 %7 to i64, !dbg !14225
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @block_size_opts, i64 0, i64 %idxprom, !dbg !14225, !ctir !1333
  %8 = load i32, i32* %arrayidx, align 4, !dbg !14225, !tbaa !2436
  %9 = load i32, i32* %opts, align 4, !dbg !14226, !tbaa !2436
  %or13 = or i32 %9, %8, !dbg !14226
  store i32 %or13, i32* %opts, align 4, !dbg !14226, !tbaa !2436
  %10 = load i64*, i64** %block_size.addr, align 8, !dbg !14227, !tbaa !2442
  store i64 1, i64* %10, align 8, !dbg !14228, !tbaa !2579, !ctir !168
  br label %if.end50, !dbg !14229

if.else14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !14230, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14233, metadata !DIExpression()), !dbg !14234
  %11 = load i8*, i8** %spec.addr, align 8, !dbg !14235, !tbaa !2442
  %12 = load i64*, i64** %block_size.addr, align 8, !dbg !14236, !tbaa !2442
  %call15 = call i32 @xstrtoumax(i8* %11, i8** %ptr, i32 0, i64* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.339, i64 0, i64 0)), !dbg !14237
  store i32 %call15, i32* %e, align 4, !dbg !14234, !tbaa !2497
  %13 = load i32, i32* %e, align 4, !dbg !14238, !tbaa !2497
  %cmp16 = icmp ne i32 %13, 0, !dbg !14240
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !14241

if.then18:                                        ; preds = %if.else14
  %14 = load i32*, i32** %options.addr, align 8, !dbg !14242, !tbaa !2442
  store i32 0, i32* %14, align 4, !dbg !14244, !tbaa !2436, !ctir !27
  %15 = load i32, i32* %e, align 4, !dbg !14245, !tbaa !2497
  store i32 %15, i32* %retval, align 4, !dbg !14246
  br label %return, !dbg !14246

if.end19:                                         ; preds = %if.else14
  br label %for.cond, !dbg !14247

for.cond:                                         ; preds = %for.inc, %if.end19
  %16 = load i8*, i8** %spec.addr, align 8, !dbg !14248, !tbaa !2442
  %17 = load i8, i8* %16, align 1, !dbg !14251, !tbaa !2497, !ctir !147
  %conv20 = sext i8 %17 to i32, !dbg !14251
  %cmp21 = icmp sle i32 48, %conv20, !dbg !14252
  br i1 %cmp21, label %land.rhs, label %land.end, !dbg !14253

land.rhs:                                         ; preds = %for.cond
  %18 = load i8*, i8** %spec.addr, align 8, !dbg !14254, !tbaa !2442
  %19 = load i8, i8* %18, align 1, !dbg !14255, !tbaa !2497, !ctir !147
  %conv23 = sext i8 %19 to i32, !dbg !14255
  %cmp24 = icmp sle i32 %conv23, 57, !dbg !14256
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp24, %land.rhs ], !dbg !14257
  %lnot = xor i1 %20, true, !dbg !14258
  br i1 %lnot, label %for.body, label %for.end, !dbg !14259

for.body:                                         ; preds = %land.end
  %21 = load i8*, i8** %spec.addr, align 8, !dbg !14260, !tbaa !2442
  %22 = load i8*, i8** %ptr, align 8, !dbg !14262, !tbaa !2442
  %cmp26 = icmp eq i8* %21, %22, !dbg !14263
  br i1 %cmp26, label %if.then28, label %if.end48, !dbg !14264

if.then28:                                        ; preds = %for.body
  %23 = load i32, i32* %opts, align 4, !dbg !14265, !tbaa !2436
  %or29 = or i32 %23, 128, !dbg !14265
  store i32 %or29, i32* %opts, align 4, !dbg !14265, !tbaa !2436
  %24 = load i8*, i8** %ptr, align 8, !dbg !14267, !tbaa !2442
  %arrayidx30 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !14267, !ctir !143
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !14267, !tbaa !2497
  %conv31 = sext i8 %25 to i32, !dbg !14267
  %cmp32 = icmp eq i32 %conv31, 66, !dbg !14269
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !14270

if.then34:                                        ; preds = %if.then28
  %26 = load i32, i32* %opts, align 4, !dbg !14271, !tbaa !2436
  %or35 = or i32 %26, 256, !dbg !14271
  store i32 %or35, i32* %opts, align 4, !dbg !14271, !tbaa !2436
  br label %if.end36, !dbg !14272

if.end36:                                         ; preds = %if.then34, %if.then28
  %27 = load i8*, i8** %ptr, align 8, !dbg !14273, !tbaa !2442
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !14273, !ctir !143
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !14273, !tbaa !2497
  %conv38 = sext i8 %28 to i32, !dbg !14273
  %cmp39 = icmp ne i32 %conv38, 66, !dbg !14275
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !14276

lor.lhs.false:                                    ; preds = %if.end36
  %29 = load i8*, i8** %ptr, align 8, !dbg !14277, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 -2, !dbg !14277, !ctir !143
  %30 = load i8, i8* %arrayidx41, align 1, !dbg !14277, !tbaa !2497
  %conv42 = sext i8 %30 to i32, !dbg !14277
  %cmp43 = icmp eq i32 %conv42, 105, !dbg !14278
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !14279

if.then45:                                        ; preds = %lor.lhs.false, %if.end36
  %31 = load i32, i32* %opts, align 4, !dbg !14280, !tbaa !2436
  %or46 = or i32 %31, 32, !dbg !14280
  store i32 %or46, i32* %opts, align 4, !dbg !14280, !tbaa !2436
  br label %if.end47, !dbg !14281

if.end47:                                         ; preds = %if.then45, %lor.lhs.false
  br label %for.end, !dbg !14282

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !14262

for.inc:                                          ; preds = %if.end48
  %32 = load i8*, i8** %spec.addr, align 8, !dbg !14283, !tbaa !2442
  %incdec.ptr49 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !14283
  store i8* %incdec.ptr49, i8** %spec.addr, align 8, !dbg !14283, !tbaa !2442
  br label %for.cond, !dbg !14284, !llvm.loop !14285

for.end:                                          ; preds = %if.end47, %land.end
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.then12
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %33 = load i32, i32* %opts, align 4, !dbg !14287, !tbaa !2436
  %34 = load i32*, i32** %options.addr, align 8, !dbg !14288, !tbaa !2442
  store i32 %33, i32* %34, align 4, !dbg !14289, !tbaa !2436, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !14290
  br label %return, !dbg !14290

return:                                           ; preds = %if.end51, %if.then18
  %35 = load i32, i32* %retval, align 4, !dbg !14291
  ret i32 %35, !dbg !14291
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_block_size() #0 !dbg !14292 !ctir !1334 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.336, i64 0, i64 0)) #13, !dbg !14293
  %tobool = icmp ne i8* %call, null, !dbg !14293
  %0 = zext i1 %tobool to i64, !dbg !14293
  %cond = select i1 %tobool, i32 512, i32 1024, !dbg !14293
  %conv = sext i32 %cond to i64, !dbg !14293
  ret i64 %conv, !dbg !14294
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getuser(i32 %uid) #0 !dbg !14295 !ctir !1347 {
entry:
  %uid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %match = alloca %struct.userid*, align 8, !ctir !1349
  %pwent = alloca %struct.passwd*, align 8, !ctir !1360
  %name = alloca i8*, align 8, !ctir !146
  store i32 %uid, i32* %uid.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !14296, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14298, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14300, metadata !DIExpression()), !dbg !14301
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14301, !tbaa !2442
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14302, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14304, !tbaa !2442
  br label %for.cond, !dbg !14305

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14306, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14308
  br i1 %tobool, label %for.body, label %for.end, !dbg !14308

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14309, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14312, !ctir !1350
  %u = bitcast %union.anon.12* %id to i32*, !dbg !14313
  %3 = load i32, i32* %u, align 8, !dbg !14313, !tbaa !2497, !ctir !1354
  %4 = load i32, i32* %uid.addr, align 4, !dbg !14314, !tbaa !2436
  %cmp = icmp eq i32 %3, %4, !dbg !14315
  br i1 %cmp, label %if.then, label %if.end, !dbg !14316

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14317, !tbaa !2442
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14319, !tbaa !2442
  br label %for.end, !dbg !14320

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14321

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14322, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14323, !ctir !1350
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14323, !tbaa !2442, !ctir !1349
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14324, !tbaa !2442
  br label %for.cond, !dbg !14325, !llvm.loop !14326

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14328, !tbaa !2442
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14330
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14331

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14332, metadata !DIExpression()), !dbg !14334
  %9 = load i32, i32* %uid.addr, align 4, !dbg !14335, !tbaa !2436
  %call = call %struct.passwd* @getpwuid(i32 %9), !dbg !14336
  store %struct.passwd* %call, %struct.passwd** %pwent, align 8, !dbg !14334, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14337, metadata !DIExpression()), !dbg !14338
  %10 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14339, !tbaa !2442
  %tobool3 = icmp ne %struct.passwd* %10, null, !dbg !14339
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14339

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14340, !tbaa !2442
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %11, i32 0, i32 0, !dbg !14341, !ctir !1361
  %12 = load i8*, i8** %pw_name, align 8, !dbg !14341, !tbaa !14342, !ctir !143
  br label %cond.end, !dbg !14339

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.344, i64 0, i64 0), %cond.false ], !dbg !14339
  store i8* %cond, i8** %name, align 8, !dbg !14338, !tbaa !2442
  %13 = load i8*, i8** %name, align 8, !dbg !14344, !tbaa !2442
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14344
  %add = add i64 %call4, 1, !dbg !14344
  %add5 = add i64 23, %add, !dbg !14344
  %and = and i64 %add5, -8, !dbg !14344
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14345
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14345
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14346, !tbaa !2442
  %15 = load i32, i32* %uid.addr, align 4, !dbg !14347, !tbaa !2436
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14348, !tbaa !2442
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14349, !ctir !1350
  %u8 = bitcast %union.anon.12* %id7 to i32*, !dbg !14350
  store i32 %15, i32* %u8, align 8, !dbg !14351, !tbaa !2497, !ctir !1354
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14352, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14353, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14352
  %18 = load i8*, i8** %name, align 8, !dbg !14354, !tbaa !2442
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14355
  %19 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14356, !tbaa !2442
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14357, !tbaa !2442
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14358, !ctir !1350
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14359, !tbaa !2442, !ctir !1349
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14360, !tbaa !2442
  store %struct.userid* %21, %struct.userid** @user_alist, align 8, !dbg !14361, !tbaa !2442
  br label %if.end12, !dbg !14362

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14363, !tbaa !2442
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14364, !ctir !1350
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14363, !ctir !361
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14363, !tbaa !2497
  %conv = sext i8 %23 to i32, !dbg !14363
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14363
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14363

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14365, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14366, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14365
  br label %cond.end19, !dbg !14363

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14363

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14363
  ret i8* %cond20, !dbg !14367
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getuidbyname(i8* %user) #0 !dbg !14368 !ctir !1371 {
entry:
  %retval = alloca i32*, align 8
  %user.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %pwent = alloca %struct.passwd*, align 8, !ctir !1360
  store i8* %user, i8** %user.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14371, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14373, metadata !DIExpression()), !dbg !14374
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14375, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14377, !tbaa !2442
  br label %for.cond, !dbg !14378

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14379, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14381
  br i1 %tobool, label %for.body, label %for.end, !dbg !14381

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14382, !tbaa !2442
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14384, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14385
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14385, !tbaa !2497, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14385
  %4 = load i8*, i8** %user.addr, align 8, !dbg !14386, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !14387, !tbaa !2497, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14387
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14388
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14389

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14390, !tbaa !2442
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14391, !ctir !1350
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14390
  %7 = load i8*, i8** %user.addr, align 8, !dbg !14392, !tbaa !2442
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14393
  %tobool5 = icmp ne i32 %call, 0, !dbg !14393
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14394

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14395, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14396, !ctir !1350
  %u = bitcast %union.anon.12* %id to i32*, !dbg !14397
  store i32* %u, i32** %retval, align 8, !dbg !14398
  br label %return, !dbg !14398

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14399

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14400, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14401, !ctir !1350
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14401, !tbaa !2442, !ctir !1349
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14402, !tbaa !2442
  br label %for.cond, !dbg !14403, !llvm.loop !14404

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14406, !tbaa !2442
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14408, !tbaa !2442
  br label %for.cond6, !dbg !14409

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14410, !tbaa !2442
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14412
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14412

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14413, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14415, !ctir !1350
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14416
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14416, !tbaa !2497, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14416
  %15 = load i8*, i8** %user.addr, align 8, !dbg !14417, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !14418, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14418
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14419
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14420

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14421, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14422, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14421
  %18 = load i8*, i8** %user.addr, align 8, !dbg !14423, !tbaa !2442
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14424
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14424
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14425

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14426
  br label %return, !dbg !14426

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14427

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14428, !tbaa !2442
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14429, !ctir !1350
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14429, !tbaa !2442, !ctir !1349
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14430, !tbaa !2442
  br label %for.cond6, !dbg !14431, !llvm.loop !14432

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %user.addr, align 8, !dbg !14434, !tbaa !2442
  %call25 = call %struct.passwd* @getpwnam(i8* %21), !dbg !14435
  store %struct.passwd* %call25, %struct.passwd** %pwent, align 8, !dbg !14436, !tbaa !2442
  %22 = load i8*, i8** %user.addr, align 8, !dbg !14437, !tbaa !2442
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14437
  %add = add i64 %call26, 1, !dbg !14437
  %add27 = add i64 23, %add, !dbg !14437
  %and = and i64 %add27, -8, !dbg !14437
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14438
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14438
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14439, !tbaa !2442
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14440, !tbaa !2442
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14441, !ctir !1350
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14440
  %25 = load i8*, i8** %user.addr, align 8, !dbg !14442, !tbaa !2442
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14443
  %26 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14444, !tbaa !2442
  %tobool32 = icmp ne %struct.passwd* %26, null, !dbg !14444
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14446

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14447, !tbaa !2442
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %27, i32 0, i32 2, !dbg !14449, !ctir !1361
  %28 = load i32, i32* %pw_uid, align 8, !dbg !14449, !tbaa !14450, !ctir !203
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14451, !tbaa !2442
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14452, !ctir !1350
  %u35 = bitcast %union.anon.12* %id34 to i32*, !dbg !14453
  store i32 %28, i32* %u35, align 8, !dbg !14454, !tbaa !2497, !ctir !1354
  %30 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14455, !tbaa !2442
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14456, !tbaa !2442
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14457, !ctir !1350
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14458, !tbaa !2442, !ctir !1349
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14459, !tbaa !2442
  store %struct.userid* %32, %struct.userid** @user_alist, align 8, !dbg !14460, !tbaa !2442
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14461, !tbaa !2442
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14462, !ctir !1350
  %u38 = bitcast %union.anon.12* %id37 to i32*, !dbg !14463
  store i32* %u38, i32** %retval, align 8, !dbg !14464
  br label %return, !dbg !14464

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14465, !tbaa !2442
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14466, !tbaa !2442
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14467, !ctir !1350
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14468, !tbaa !2442, !ctir !1349
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14469, !tbaa !2442
  store %struct.userid* %36, %struct.userid** @nouser_alist, align 8, !dbg !14470, !tbaa !2442
  store i32* null, i32** %retval, align 8, !dbg !14471
  br label %return, !dbg !14471

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14472
  ret i32* %37, !dbg !14472
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getgroup(i32 %gid) #0 !dbg !14473 !ctir !1374 {
entry:
  %gid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %match = alloca %struct.userid*, align 8, !ctir !1349
  %grent = alloca %struct.group*, align 8, !ctir !1376
  %name = alloca i8*, align 8, !ctir !146
  store i32 %gid, i32* %gid.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !14474, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14476, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14478, metadata !DIExpression()), !dbg !14479
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14479, !tbaa !2442
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14480, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14482, !tbaa !2442
  br label %for.cond, !dbg !14483

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14484, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14486
  br i1 %tobool, label %for.body, label %for.end, !dbg !14486

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14487, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14490, !ctir !1350
  %g = bitcast %union.anon.12* %id to i32*, !dbg !14491
  %3 = load i32, i32* %g, align 8, !dbg !14491, !tbaa !2497, !ctir !1354
  %4 = load i32, i32* %gid.addr, align 4, !dbg !14492, !tbaa !2436
  %cmp = icmp eq i32 %3, %4, !dbg !14493
  br i1 %cmp, label %if.then, label %if.end, !dbg !14494

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14495, !tbaa !2442
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14497, !tbaa !2442
  br label %for.end, !dbg !14498

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14499

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14500, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14501, !ctir !1350
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14501, !tbaa !2442, !ctir !1349
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14502, !tbaa !2442
  br label %for.cond, !dbg !14503, !llvm.loop !14504

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14506, !tbaa !2442
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14508
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14509

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14510, metadata !DIExpression()), !dbg !14512
  %9 = load i32, i32* %gid.addr, align 4, !dbg !14513, !tbaa !2436
  %call = call %struct.group* @getgrgid(i32 %9), !dbg !14514
  store %struct.group* %call, %struct.group** %grent, align 8, !dbg !14512, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14515, metadata !DIExpression()), !dbg !14516
  %10 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14517, !tbaa !2442
  %tobool3 = icmp ne %struct.group* %10, null, !dbg !14517
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14517

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14518, !tbaa !2442
  %gr_name = getelementptr inbounds %struct.group, %struct.group* %11, i32 0, i32 0, !dbg !14519, !ctir !1377
  %12 = load i8*, i8** %gr_name, align 8, !dbg !14519, !tbaa !14520, !ctir !143
  br label %cond.end, !dbg !14517

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.344, i64 0, i64 0), %cond.false ], !dbg !14517
  store i8* %cond, i8** %name, align 8, !dbg !14516, !tbaa !2442
  %13 = load i8*, i8** %name, align 8, !dbg !14522, !tbaa !2442
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14522
  %add = add i64 %call4, 1, !dbg !14522
  %add5 = add i64 23, %add, !dbg !14522
  %and = and i64 %add5, -8, !dbg !14522
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14523
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14523
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14524, !tbaa !2442
  %15 = load i32, i32* %gid.addr, align 4, !dbg !14525, !tbaa !2436
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14526, !tbaa !2442
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14527, !ctir !1350
  %g8 = bitcast %union.anon.12* %id7 to i32*, !dbg !14528
  store i32 %15, i32* %g8, align 8, !dbg !14529, !tbaa !2497, !ctir !1354
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14530, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14531, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14530
  %18 = load i8*, i8** %name, align 8, !dbg !14532, !tbaa !2442
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14533
  %19 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14534, !tbaa !2442
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14535, !tbaa !2442
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14536, !ctir !1350
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14537, !tbaa !2442, !ctir !1349
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14538, !tbaa !2442
  store %struct.userid* %21, %struct.userid** @group_alist, align 8, !dbg !14539, !tbaa !2442
  br label %if.end12, !dbg !14540

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14541, !tbaa !2442
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14542, !ctir !1350
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14541, !ctir !361
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14541, !tbaa !2497
  %conv = sext i8 %23 to i32, !dbg !14541
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14541
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14541

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14543, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14544, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14543
  br label %cond.end19, !dbg !14541

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14541

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14541
  ret i8* %cond20, !dbg !14545
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getgidbyname(i8* %group) #0 !dbg !14546 !ctir !1384 {
entry:
  %retval = alloca i32*, align 8
  %group.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %grent = alloca %struct.group*, align 8, !ctir !1376
  store i8* %group, i8** %group.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %group.addr, metadata !14547, metadata !DIExpression()), !dbg !14548
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14549, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14551, metadata !DIExpression()), !dbg !14552
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14553, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14555, !tbaa !2442
  br label %for.cond, !dbg !14556

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14557, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14559
  br i1 %tobool, label %for.body, label %for.end, !dbg !14559

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14560, !tbaa !2442
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14562, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14563
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14563, !tbaa !2497, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14563
  %4 = load i8*, i8** %group.addr, align 8, !dbg !14564, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !14565, !tbaa !2497, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14565
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14566
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14567

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14568, !tbaa !2442
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14569, !ctir !1350
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14568
  %7 = load i8*, i8** %group.addr, align 8, !dbg !14570, !tbaa !2442
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14571
  %tobool5 = icmp ne i32 %call, 0, !dbg !14571
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14572

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14573, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14574, !ctir !1350
  %g = bitcast %union.anon.12* %id to i32*, !dbg !14575
  store i32* %g, i32** %retval, align 8, !dbg !14576
  br label %return, !dbg !14576

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14577

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14578, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14579, !ctir !1350
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14579, !tbaa !2442, !ctir !1349
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14580, !tbaa !2442
  br label %for.cond, !dbg !14581, !llvm.loop !14582

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14584, !tbaa !2442
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14586, !tbaa !2442
  br label %for.cond6, !dbg !14587

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14588, !tbaa !2442
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14590
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14590

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14591, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14593, !ctir !1350
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14594
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14594, !tbaa !2497, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14594
  %15 = load i8*, i8** %group.addr, align 8, !dbg !14595, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !14596, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14596
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14597
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14598

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14599, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14600, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14599
  %18 = load i8*, i8** %group.addr, align 8, !dbg !14601, !tbaa !2442
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14602
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14602
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14603

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14604
  br label %return, !dbg !14604

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14605

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14606, !tbaa !2442
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14607, !ctir !1350
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14607, !tbaa !2442, !ctir !1349
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14608, !tbaa !2442
  br label %for.cond6, !dbg !14609, !llvm.loop !14610

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %group.addr, align 8, !dbg !14612, !tbaa !2442
  %call25 = call %struct.group* @getgrnam(i8* %21), !dbg !14613
  store %struct.group* %call25, %struct.group** %grent, align 8, !dbg !14614, !tbaa !2442
  %22 = load i8*, i8** %group.addr, align 8, !dbg !14615, !tbaa !2442
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14615
  %add = add i64 %call26, 1, !dbg !14615
  %add27 = add i64 23, %add, !dbg !14615
  %and = and i64 %add27, -8, !dbg !14615
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14616
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14616
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14617, !tbaa !2442
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14618, !tbaa !2442
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14619, !ctir !1350
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14618
  %25 = load i8*, i8** %group.addr, align 8, !dbg !14620, !tbaa !2442
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14621
  %26 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14622, !tbaa !2442
  %tobool32 = icmp ne %struct.group* %26, null, !dbg !14622
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14624

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14625, !tbaa !2442
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %27, i32 0, i32 2, !dbg !14627, !ctir !1377
  %28 = load i32, i32* %gr_gid, align 8, !dbg !14627, !tbaa !14628, !ctir !205
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14629, !tbaa !2442
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14630, !ctir !1350
  %g35 = bitcast %union.anon.12* %id34 to i32*, !dbg !14631
  store i32 %28, i32* %g35, align 8, !dbg !14632, !tbaa !2497, !ctir !1354
  %30 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14633, !tbaa !2442
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14634, !tbaa !2442
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14635, !ctir !1350
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14636, !tbaa !2442, !ctir !1349
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14637, !tbaa !2442
  store %struct.userid* %32, %struct.userid** @group_alist, align 8, !dbg !14638, !tbaa !2442
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14639, !tbaa !2442
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14640, !ctir !1350
  %g38 = bitcast %union.anon.12* %id37 to i32*, !dbg !14641
  store i32* %g38, i32** %retval, align 8, !dbg !14642
  br label %return, !dbg !14642

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14643, !tbaa !2442
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14644, !tbaa !2442
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14645, !ctir !1350
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14646, !tbaa !2442, !ctir !1349
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14647, !tbaa !2442
  store %struct.userid* %36, %struct.userid** @nogroup_alist, align 8, !dbg !14648, !tbaa !2442
  store i32* null, i32** %retval, align 8, !dbg !14649
  br label %return, !dbg !14649

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14650
  ret i32* %37, !dbg !14650
}

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @imaxtostr(i64 %i, i8* %buf) #0 !dbg !14651 !ctir !1859 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14653, metadata !DIExpression()), !dbg !14654
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14655, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14657, metadata !DIExpression()), !dbg !14658
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14659, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14660
  store i8* %add.ptr, i8** %p, align 8, !dbg !14658, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !14661, !tbaa !2442
  store i8 0, i8* %1, align 1, !dbg !14662, !tbaa !2497, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14663, !tbaa !2579
  %cmp = icmp slt i64 %2, 0, !dbg !14665
  br i1 %cmp, label %if.then, label %if.else, !dbg !14666

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14667

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14669, !tbaa !2579
  %rem = srem i64 %3, 10, !dbg !14670
  %sub = sub nsw i64 48, %rem, !dbg !14671
  %conv = trunc i64 %sub to i8, !dbg !14672
  %4 = load i8*, i8** %p, align 8, !dbg !14673, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14673
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14673, !tbaa !2442
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14674, !tbaa !2497, !ctir !144
  br label %do.cond, !dbg !14675

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14676, !tbaa !2579
  %div = sdiv i64 %5, 10, !dbg !14676
  store i64 %div, i64* %i.addr, align 8, !dbg !14676, !tbaa !2579
  %cmp1 = icmp ne i64 %div, 0, !dbg !14677
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14675, !llvm.loop !14678

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14680, !tbaa !2442
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14680
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14680, !tbaa !2442
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14681, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !14682

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14683

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14685, !tbaa !2579
  %rem5 = srem i64 %7, 10, !dbg !14686
  %add = add nsw i64 48, %rem5, !dbg !14687
  %conv6 = trunc i64 %add to i8, !dbg !14688
  %8 = load i8*, i8** %p, align 8, !dbg !14689, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14689
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14689, !tbaa !2442
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14690, !tbaa !2497, !ctir !144
  br label %do.cond8, !dbg !14691

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14692, !tbaa !2579
  %div9 = sdiv i64 %9, 10, !dbg !14692
  store i64 %div9, i64* %i.addr, align 8, !dbg !14692, !tbaa !2579
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14693
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14691, !llvm.loop !14694

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14696, !tbaa !2442
  ret i8* %10, !dbg !14697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #0 !dbg !14698 !ctir !1864 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14703, metadata !DIExpression()), !dbg !14704
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14705, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14706
  store i8* %add.ptr, i8** %p, align 8, !dbg !14704, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !14707, !tbaa !2442
  store i8 0, i8* %1, align 1, !dbg !14708, !tbaa !2497, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14709, !tbaa !2579
  %cmp = icmp ult i64 %2, 0, !dbg !14711
  br i1 %cmp, label %if.then, label %if.else, !dbg !14712

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14713

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14715, !tbaa !2579
  %rem = urem i64 %3, 10, !dbg !14716
  %sub = sub i64 48, %rem, !dbg !14717
  %conv = trunc i64 %sub to i8, !dbg !14718
  %4 = load i8*, i8** %p, align 8, !dbg !14719, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14719
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14719, !tbaa !2442
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14720, !tbaa !2497, !ctir !144
  br label %do.cond, !dbg !14721

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14722, !tbaa !2579
  %div = udiv i64 %5, 10, !dbg !14722
  store i64 %div, i64* %i.addr, align 8, !dbg !14722, !tbaa !2579
  %cmp1 = icmp ne i64 %div, 0, !dbg !14723
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14721, !llvm.loop !14724

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14726, !tbaa !2442
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14726
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14726, !tbaa !2442
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14727, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !14728

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14729

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14731, !tbaa !2579
  %rem5 = urem i64 %7, 10, !dbg !14732
  %add = add i64 48, %rem5, !dbg !14733
  %conv6 = trunc i64 %add to i8, !dbg !14734
  %8 = load i8*, i8** %p, align 8, !dbg !14735, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14735
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14735, !tbaa !2442
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14736, !tbaa !2497, !ctir !144
  br label %do.cond8, !dbg !14737

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14738, !tbaa !2579
  %div9 = udiv i64 %9, 10, !dbg !14738
  store i64 %div9, i64* %i.addr, align 8, !dbg !14738, !tbaa !2579
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14739
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14737, !llvm.loop !14740

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14742, !tbaa !2442
  ret i8* %10, !dbg !14743
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) #0 !dbg !14744 !ctir !1872 {
entry:
  %src.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_size.addr = alloca i64, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %ret = alloca i64, align 8, !ctir !149
  %src_size = alloca i64, align 8, !ctir !149
  %newstr = alloca i8*, align 8, !ctir !143
  %str_wc = alloca i32*, align 8, !ctir !1874
  %str_to_print = alloca i8*, align 8, !ctir !146
  %n_cols = alloca i64, align 8, !ctir !149
  %n_used_bytes = alloca i64, align 8, !ctir !149
  %n_spaces = alloca i64, align 8, !ctir !149
  %conversion = alloca i8, align 1, !ctir !141
  %wc_enabled = alloca i8, align 1, !ctir !141
  %src_chars = alloca i64, align 8, !ctir !149
  %start_spaces = alloca i64, align 8, !ctir !149
  %end_spaces = alloca i64, align 8, !ctir !149
  %space_left = alloca i64, align 8, !ctir !149
  %dest_end = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14746, metadata !DIExpression()), !dbg !14747
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14748, metadata !DIExpression()), !dbg !14749
  store i64 %dest_size, i64* %dest_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dest_size.addr, metadata !14750, metadata !DIExpression()), !dbg !14751
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !14752, metadata !DIExpression()), !dbg !14753
  store i32 %align, i32* %align.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !14754, metadata !DIExpression()), !dbg !14755
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14756, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !14758, metadata !DIExpression()), !dbg !14759
  store i64 -1, i64* %ret, align 8, !dbg !14759, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %src_size, metadata !14760, metadata !DIExpression()), !dbg !14761
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14762, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !14763
  %add = add i64 %call, 1, !dbg !14764
  store i64 %add, i64* %src_size, align 8, !dbg !14761, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !14765, metadata !DIExpression()), !dbg !14766
  store i8* null, i8** %newstr, align 8, !dbg !14766, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %str_wc, metadata !14767, metadata !DIExpression()), !dbg !14768
  store i32* null, i32** %str_wc, align 8, !dbg !14768, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str_to_print, metadata !14769, metadata !DIExpression()), !dbg !14770
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14771, !tbaa !2442
  store i8* %1, i8** %str_to_print, align 8, !dbg !14770, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %n_cols, metadata !14772, metadata !DIExpression()), !dbg !14773
  %2 = load i64, i64* %src_size, align 8, !dbg !14774, !tbaa !2579
  %sub = sub i64 %2, 1, !dbg !14775
  store i64 %sub, i64* %n_cols, align 8, !dbg !14773, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_used_bytes, metadata !14776, metadata !DIExpression()), !dbg !14777
  %3 = load i64, i64* %n_cols, align 8, !dbg !14778, !tbaa !2579
  store i64 %3, i64* %n_used_bytes, align 8, !dbg !14777, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_spaces, metadata !14779, metadata !DIExpression()), !dbg !14780
  store i64 0, i64* %n_spaces, align 8, !dbg !14780, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %conversion, metadata !14781, metadata !DIExpression()), !dbg !14782
  store i8 0, i8* %conversion, align 1, !dbg !14782, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %wc_enabled, metadata !14783, metadata !DIExpression()), !dbg !14784
  store i8 0, i8* %wc_enabled, align 1, !dbg !14784, !tbaa !2461
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14785, !tbaa !2436
  %and = and i32 %4, 2, !dbg !14787
  %tobool = icmp ne i32 %and, 0, !dbg !14787
  br i1 %tobool, label %if.end24, label %land.lhs.true, !dbg !14788

land.lhs.true:                                    ; preds = %entry
  %call1 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !14789
  %cmp = icmp ugt i64 %call1, 1, !dbg !14790
  br i1 %cmp, label %if.then, label %if.end24, !dbg !14791

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_chars, metadata !14792, metadata !DIExpression()), !dbg !14794
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14795, !tbaa !2442
  %call2 = call i64 @mbstowcs(i32* null, i8* %5, i64 0) #13, !dbg !14796
  store i64 %call2, i64* %src_chars, align 8, !dbg !14794, !tbaa !2579
  %6 = load i64, i64* %src_chars, align 8, !dbg !14797, !tbaa !2579
  %cmp3 = icmp eq i64 %6, -1, !dbg !14799
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !14800

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %flags.addr, align 4, !dbg !14801, !tbaa !2436
  %and5 = and i32 %7, 1, !dbg !14804
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14804
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !14805

if.then7:                                         ; preds = %if.then4
  br label %mbsalign_unibyte, !dbg !14806

if.else:                                          ; preds = %if.then4
  br label %mbsalign_cleanup, !dbg !14807

if.end:                                           ; preds = %if.then
  %8 = load i64, i64* %src_chars, align 8, !dbg !14808, !tbaa !2579
  %add8 = add i64 %8, 1, !dbg !14808
  store i64 %add8, i64* %src_chars, align 8, !dbg !14808, !tbaa !2579
  %9 = load i64, i64* %src_chars, align 8, !dbg !14809, !tbaa !2579
  %mul = mul i64 %9, 4, !dbg !14810
  %call9 = call noalias i8* @malloc(i64 %mul) #13, !dbg !14811
  %10 = bitcast i8* %call9 to i32*, !dbg !14811
  store i32* %10, i32** %str_wc, align 8, !dbg !14812, !tbaa !2442
  %11 = load i32*, i32** %str_wc, align 8, !dbg !14813, !tbaa !2442
  %cmp10 = icmp eq i32* %11, null, !dbg !14815
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !14816

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14817, !tbaa !2436
  %and12 = and i32 %12, 1, !dbg !14820
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14820
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !14821

if.then14:                                        ; preds = %if.then11
  br label %mbsalign_unibyte, !dbg !14822

if.else15:                                        ; preds = %if.then11
  br label %mbsalign_cleanup, !dbg !14823

if.end16:                                         ; preds = %if.end
  %13 = load i32*, i32** %str_wc, align 8, !dbg !14824, !tbaa !2442
  %14 = load i8*, i8** %src.addr, align 8, !dbg !14826, !tbaa !2442
  %15 = load i64, i64* %src_chars, align 8, !dbg !14827, !tbaa !2579
  %call17 = call i64 @mbstowcs(i32* %13, i8* %14, i64 %15) #13, !dbg !14828
  %cmp18 = icmp ne i64 %call17, 0, !dbg !14829
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !14830

if.then19:                                        ; preds = %if.end16
  %16 = load i32*, i32** %str_wc, align 8, !dbg !14831, !tbaa !2442
  %17 = load i64, i64* %src_chars, align 8, !dbg !14833, !tbaa !2579
  %sub20 = sub i64 %17, 1, !dbg !14834
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %sub20, !dbg !14831, !ctir !1874
  store i32 0, i32* %arrayidx, align 4, !dbg !14835, !tbaa !2436
  store i8 1, i8* %wc_enabled, align 1, !dbg !14836, !tbaa !2461
  %18 = load i32*, i32** %str_wc, align 8, !dbg !14837, !tbaa !2442
  %call21 = call zeroext i1 @wc_ensure_printable(i32* %18), !dbg !14838
  %frombool = zext i1 %call21 to i8, !dbg !14839
  store i8 %frombool, i8* %conversion, align 1, !dbg !14839, !tbaa !2461
  %19 = load i32*, i32** %str_wc, align 8, !dbg !14840, !tbaa !2442
  %20 = load i64, i64* %src_chars, align 8, !dbg !14841, !tbaa !2579
  %call22 = call i32 @wcswidth(i32* %19, i64 %20) #13, !dbg !14842
  %conv = sext i32 %call22 to i64, !dbg !14842
  store i64 %conv, i64* %n_cols, align 8, !dbg !14843, !tbaa !2579
  br label %if.end23, !dbg !14844

if.end23:                                         ; preds = %if.then19, %if.end16
  br label %if.end24, !dbg !14845

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  %21 = load i8, i8* %wc_enabled, align 1, !dbg !14846, !tbaa !2461
  %tobool25 = trunc i8 %21 to i1, !dbg !14846
  br i1 %tobool25, label %land.lhs.true27, label %if.end49, !dbg !14848

land.lhs.true27:                                  ; preds = %if.end24
  %22 = load i8, i8* %conversion, align 1, !dbg !14849, !tbaa !2461
  %tobool28 = trunc i8 %22 to i1, !dbg !14849
  br i1 %tobool28, label %if.then32, label %lor.lhs.false, !dbg !14850

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %23 = load i64, i64* %n_cols, align 8, !dbg !14851, !tbaa !2579
  %24 = load i64*, i64** %width.addr, align 8, !dbg !14852, !tbaa !2442
  %25 = load i64, i64* %24, align 8, !dbg !14853, !tbaa !2579, !ctir !149
  %cmp30 = icmp ugt i64 %23, %25, !dbg !14854
  br i1 %cmp30, label %if.then32, label %if.end49, !dbg !14855

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %26 = load i8, i8* %conversion, align 1, !dbg !14856, !tbaa !2461
  %tobool33 = trunc i8 %26 to i1, !dbg !14856
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !14859

if.then34:                                        ; preds = %if.then32
  %27 = load i32*, i32** %str_wc, align 8, !dbg !14860, !tbaa !2442
  %call35 = call i64 @wcstombs(i8* null, i32* %27, i64 0) #13, !dbg !14862
  %add36 = add i64 %call35, 1, !dbg !14863
  store i64 %add36, i64* %src_size, align 8, !dbg !14864, !tbaa !2579
  br label %if.end37, !dbg !14865

if.end37:                                         ; preds = %if.then34, %if.then32
  %28 = load i64, i64* %src_size, align 8, !dbg !14866, !tbaa !2579
  %call38 = call noalias i8* @malloc(i64 %28) #13, !dbg !14867
  store i8* %call38, i8** %newstr, align 8, !dbg !14868, !tbaa !2442
  %29 = load i8*, i8** %newstr, align 8, !dbg !14869, !tbaa !2442
  %cmp39 = icmp eq i8* %29, null, !dbg !14871
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !14872

if.then41:                                        ; preds = %if.end37
  %30 = load i32, i32* %flags.addr, align 4, !dbg !14873, !tbaa !2436
  %and42 = and i32 %30, 1, !dbg !14876
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14876
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !14877

if.then44:                                        ; preds = %if.then41
  br label %mbsalign_unibyte, !dbg !14878

if.else45:                                        ; preds = %if.then41
  br label %mbsalign_cleanup, !dbg !14879

if.end46:                                         ; preds = %if.end37
  %31 = load i8*, i8** %newstr, align 8, !dbg !14880, !tbaa !2442
  store i8* %31, i8** %str_to_print, align 8, !dbg !14881, !tbaa !2442
  %32 = load i32*, i32** %str_wc, align 8, !dbg !14882, !tbaa !2442
  %33 = load i64*, i64** %width.addr, align 8, !dbg !14883, !tbaa !2442
  %34 = load i64, i64* %33, align 8, !dbg !14884, !tbaa !2579, !ctir !149
  %call47 = call i64 @wc_truncate(i32* %32, i64 %34), !dbg !14885
  store i64 %call47, i64* %n_cols, align 8, !dbg !14886, !tbaa !2579
  %35 = load i8*, i8** %newstr, align 8, !dbg !14887, !tbaa !2442
  %36 = load i32*, i32** %str_wc, align 8, !dbg !14888, !tbaa !2442
  %37 = load i64, i64* %src_size, align 8, !dbg !14889, !tbaa !2579
  %call48 = call i64 @wcstombs(i8* %35, i32* %36, i64 %37) #13, !dbg !14890
  store i64 %call48, i64* %n_used_bytes, align 8, !dbg !14891, !tbaa !2579
  br label %if.end49, !dbg !14892

if.end49:                                         ; preds = %if.end46, %lor.lhs.false, %if.end24
  br label %mbsalign_unibyte, !dbg !14893

mbsalign_unibyte:                                 ; preds = %if.end49, %if.then44, %if.then14, %if.then7
  call void @llvm.dbg.label(metadata !14894), !dbg !14895
  %38 = load i64, i64* %n_cols, align 8, !dbg !14896, !tbaa !2579
  %39 = load i64*, i64** %width.addr, align 8, !dbg !14898, !tbaa !2442
  %40 = load i64, i64* %39, align 8, !dbg !14899, !tbaa !2579, !ctir !149
  %cmp50 = icmp ugt i64 %38, %40, !dbg !14900
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !14901

if.then52:                                        ; preds = %mbsalign_unibyte
  %41 = load i64*, i64** %width.addr, align 8, !dbg !14902, !tbaa !2442
  %42 = load i64, i64* %41, align 8, !dbg !14904, !tbaa !2579, !ctir !149
  store i64 %42, i64* %n_cols, align 8, !dbg !14905, !tbaa !2579
  %43 = load i64, i64* %n_cols, align 8, !dbg !14906, !tbaa !2579
  store i64 %43, i64* %n_used_bytes, align 8, !dbg !14907, !tbaa !2579
  br label %if.end53, !dbg !14908

if.end53:                                         ; preds = %if.then52, %mbsalign_unibyte
  %44 = load i64*, i64** %width.addr, align 8, !dbg !14909, !tbaa !2442
  %45 = load i64, i64* %44, align 8, !dbg !14911, !tbaa !2579, !ctir !149
  %46 = load i64, i64* %n_cols, align 8, !dbg !14912, !tbaa !2579
  %cmp54 = icmp ugt i64 %45, %46, !dbg !14913
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !14914

if.then56:                                        ; preds = %if.end53
  %47 = load i64*, i64** %width.addr, align 8, !dbg !14915, !tbaa !2442
  %48 = load i64, i64* %47, align 8, !dbg !14916, !tbaa !2579, !ctir !149
  %49 = load i64, i64* %n_cols, align 8, !dbg !14917, !tbaa !2579
  %sub57 = sub i64 %48, %49, !dbg !14918
  store i64 %sub57, i64* %n_spaces, align 8, !dbg !14919, !tbaa !2579
  br label %if.end58, !dbg !14920

if.end58:                                         ; preds = %if.then56, %if.end53
  %50 = load i64, i64* %n_cols, align 8, !dbg !14921, !tbaa !2579
  %51 = load i64*, i64** %width.addr, align 8, !dbg !14922, !tbaa !2442
  store i64 %50, i64* %51, align 8, !dbg !14923, !tbaa !2579, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %start_spaces, metadata !14924, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.declare(metadata i64* %end_spaces, metadata !14927, metadata !DIExpression()), !dbg !14928
  %52 = load i32, i32* %align.addr, align 4, !dbg !14929, !tbaa !2497
  switch i32 %52, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
    i32 2, label %sw.bb60
  ], !dbg !14930

sw.bb:                                            ; preds = %if.end58
  store i64 0, i64* %start_spaces, align 8, !dbg !14931, !tbaa !2579
  %53 = load i64, i64* %n_spaces, align 8, !dbg !14933, !tbaa !2579
  store i64 %53, i64* %end_spaces, align 8, !dbg !14934, !tbaa !2579
  br label %sw.epilog, !dbg !14935

sw.bb59:                                          ; preds = %if.end58
  %54 = load i64, i64* %n_spaces, align 8, !dbg !14936, !tbaa !2579
  store i64 %54, i64* %start_spaces, align 8, !dbg !14937, !tbaa !2579
  store i64 0, i64* %end_spaces, align 8, !dbg !14938, !tbaa !2579
  br label %sw.epilog, !dbg !14939

sw.bb60:                                          ; preds = %if.end58
  br label %sw.default, !dbg !14939

sw.default:                                       ; preds = %if.end58, %sw.bb60
  %55 = load i64, i64* %n_spaces, align 8, !dbg !14940, !tbaa !2579
  %div = udiv i64 %55, 2, !dbg !14941
  %56 = load i64, i64* %n_spaces, align 8, !dbg !14942, !tbaa !2579
  %rem = urem i64 %56, 2, !dbg !14943
  %add61 = add i64 %div, %rem, !dbg !14944
  store i64 %add61, i64* %start_spaces, align 8, !dbg !14945, !tbaa !2579
  %57 = load i64, i64* %n_spaces, align 8, !dbg !14946, !tbaa !2579
  %div62 = udiv i64 %57, 2, !dbg !14947
  store i64 %div62, i64* %end_spaces, align 8, !dbg !14948, !tbaa !2579
  br label %sw.epilog, !dbg !14949

sw.epilog:                                        ; preds = %sw.default, %sw.bb59, %sw.bb
  %58 = load i32, i32* %flags.addr, align 4, !dbg !14950, !tbaa !2436
  %and63 = and i32 %58, 4, !dbg !14952
  %tobool64 = icmp ne i32 %and63, 0, !dbg !14952
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !14953

if.then65:                                        ; preds = %sw.epilog
  store i64 0, i64* %start_spaces, align 8, !dbg !14954, !tbaa !2579
  br label %if.end66, !dbg !14955

if.end66:                                         ; preds = %if.then65, %sw.epilog
  %59 = load i32, i32* %flags.addr, align 4, !dbg !14956, !tbaa !2436
  %and67 = and i32 %59, 8, !dbg !14958
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14958
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !14959

if.then69:                                        ; preds = %if.end66
  store i64 0, i64* %end_spaces, align 8, !dbg !14960, !tbaa !2579
  br label %if.end70, !dbg !14961

if.end70:                                         ; preds = %if.then69, %if.end66
  %60 = load i64, i64* %dest_size.addr, align 8, !dbg !14962, !tbaa !2579
  %cmp71 = icmp ne i64 %60, 0, !dbg !14964
  br i1 %cmp71, label %if.then73, label %if.end80, !dbg !14965

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i64* %space_left, metadata !14966, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.declare(metadata i8** %dest_end, metadata !14969, metadata !DIExpression()), !dbg !14970
  %61 = load i8*, i8** %dest.addr, align 8, !dbg !14971, !tbaa !2442
  %62 = load i64, i64* %dest_size.addr, align 8, !dbg !14972, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !14973
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !14974
  store i8* %add.ptr74, i8** %dest_end, align 8, !dbg !14970, !tbaa !2442
  %63 = load i8*, i8** %dest.addr, align 8, !dbg !14975, !tbaa !2442
  %64 = load i8*, i8** %dest_end, align 8, !dbg !14976, !tbaa !2442
  %65 = load i64, i64* %start_spaces, align 8, !dbg !14977, !tbaa !2579
  %call75 = call i8* @mbs_align_pad(i8* %63, i8* %64, i64 %65), !dbg !14978
  store i8* %call75, i8** %dest.addr, align 8, !dbg !14979, !tbaa !2442
  %66 = load i8*, i8** %dest_end, align 8, !dbg !14980, !tbaa !2442
  %67 = load i8*, i8** %dest.addr, align 8, !dbg !14981, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %66 to i64, !dbg !14982
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i64, !dbg !14982
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14982
  store i64 %sub.ptr.sub, i64* %space_left, align 8, !dbg !14983, !tbaa !2579
  %68 = load i8*, i8** %dest.addr, align 8, !dbg !14984, !tbaa !2442
  %69 = load i8*, i8** %str_to_print, align 8, !dbg !14985, !tbaa !2442
  %70 = load i64, i64* %n_used_bytes, align 8, !dbg !14986, !tbaa !2579
  %71 = load i64, i64* %space_left, align 8, !dbg !14986, !tbaa !2579
  %cmp76 = icmp ult i64 %70, %71, !dbg !14986
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !14986

cond.true:                                        ; preds = %if.then73
  %72 = load i64, i64* %n_used_bytes, align 8, !dbg !14986, !tbaa !2579
  br label %cond.end, !dbg !14986

cond.false:                                       ; preds = %if.then73
  %73 = load i64, i64* %space_left, align 8, !dbg !14986, !tbaa !2579
  br label %cond.end, !dbg !14986

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %72, %cond.true ], [ %73, %cond.false ], !dbg !14986
  %call78 = call i8* @mempcpy(i8* %68, i8* %69, i64 %cond) #13, !dbg !14987
  store i8* %call78, i8** %dest.addr, align 8, !dbg !14988, !tbaa !2442
  %74 = load i8*, i8** %dest.addr, align 8, !dbg !14989, !tbaa !2442
  %75 = load i8*, i8** %dest_end, align 8, !dbg !14990, !tbaa !2442
  %76 = load i64, i64* %end_spaces, align 8, !dbg !14991, !tbaa !2579
  %call79 = call i8* @mbs_align_pad(i8* %74, i8* %75, i64 %76), !dbg !14992
  br label %if.end80, !dbg !14993

if.end80:                                         ; preds = %cond.end, %if.end70
  %77 = load i64, i64* %n_used_bytes, align 8, !dbg !14994, !tbaa !2579
  %78 = load i64, i64* %start_spaces, align 8, !dbg !14995, !tbaa !2579
  %79 = load i64, i64* %end_spaces, align 8, !dbg !14996, !tbaa !2579
  %add81 = add i64 %78, %79, !dbg !14997
  %mul82 = mul i64 %add81, 1, !dbg !14998
  %add83 = add i64 %77, %mul82, !dbg !14999
  store i64 %add83, i64* %ret, align 8, !dbg !15000, !tbaa !2579
  br label %mbsalign_cleanup, !dbg !15001

mbsalign_cleanup:                                 ; preds = %if.end80, %if.else45, %if.else15, %if.else
  call void @llvm.dbg.label(metadata !15002), !dbg !15003
  %80 = load i32*, i32** %str_wc, align 8, !dbg !15004, !tbaa !2442
  %81 = bitcast i32* %80 to i8*, !dbg !15004
  call void @free(i8* %81) #13, !dbg !15005
  %82 = load i8*, i8** %newstr, align 8, !dbg !15006, !tbaa !2442
  call void @free(i8* %82) #13, !dbg !15007
  %83 = load i64, i64* %ret, align 8, !dbg !15008, !tbaa !2579
  ret i64 %83, !dbg !15009
}

; Function Attrs: nounwind
declare dso_local i64 @mbstowcs(i32*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc_ensure_printable(i32* %wchars) #0 !dbg !15010 !ctir !1877 {
entry:
  %wchars.addr = alloca i32*, align 8
  %replaced = alloca i8, align 1, !ctir !141
  %wc = alloca i32*, align 8, !ctir !1874
  store i32* %wchars, i32** %wchars.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %wchars.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.declare(metadata i8* %replaced, metadata !15013, metadata !DIExpression()), !dbg !15014
  store i8 0, i8* %replaced, align 1, !dbg !15014, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32** %wc, metadata !15015, metadata !DIExpression()), !dbg !15016
  %0 = load i32*, i32** %wchars.addr, align 8, !dbg !15017, !tbaa !2442
  store i32* %0, i32** %wc, align 8, !dbg !15016, !tbaa !2442
  br label %while.cond, !dbg !15018

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32*, i32** %wc, align 8, !dbg !15019, !tbaa !2442
  %2 = load i32, i32* %1, align 4, !dbg !15020, !tbaa !2436, !ctir !654
  %tobool = icmp ne i32 %2, 0, !dbg !15018
  br i1 %tobool, label %while.body, label %while.end, !dbg !15018

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %wc, align 8, !dbg !15021, !tbaa !2442
  %4 = load i32, i32* %3, align 4, !dbg !15024, !tbaa !2436, !ctir !654
  %call = call i32 @iswprint(i32 %4) #13, !dbg !15025
  %tobool1 = icmp ne i32 %call, 0, !dbg !15025
  br i1 %tobool1, label %if.end, label %if.then, !dbg !15026

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc, align 8, !dbg !15027, !tbaa !2442
  store i32 65533, i32* %5, align 4, !dbg !15029, !tbaa !2436, !ctir !654
  store i8 1, i8* %replaced, align 1, !dbg !15030, !tbaa !2461
  br label %if.end, !dbg !15031

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i32*, i32** %wc, align 8, !dbg !15032, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1, !dbg !15032
  store i32* %incdec.ptr, i32** %wc, align 8, !dbg !15032, !tbaa !2442
  br label %while.cond, !dbg !15018, !llvm.loop !15033

while.end:                                        ; preds = %while.cond
  %7 = load i8, i8* %replaced, align 1, !dbg !15035, !tbaa !2461
  %tobool2 = trunc i8 %7 to i1, !dbg !15035
  ret i1 %tobool2, !dbg !15036
}

; Function Attrs: nounwind
declare dso_local i32 @wcswidth(i32*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @wcstombs(i8*, i32*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @wc_truncate(i32* %wc, i64 %width) #0 !dbg !15037 !ctir !1879 {
entry:
  %wc.addr = alloca i32*, align 8
  %width.addr = alloca i64, align 8
  %cells = alloca i64, align 8, !ctir !149
  %next_cells = alloca i32, align 4, !ctir !27
  store i32* %wc, i32** %wc.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %wc.addr, metadata !15038, metadata !DIExpression()), !dbg !15039
  store i64 %width, i64* %width.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata i64* %cells, metadata !15042, metadata !DIExpression()), !dbg !15043
  store i64 0, i64* %cells, align 8, !dbg !15043, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %next_cells, metadata !15044, metadata !DIExpression()), !dbg !15045
  store i32 0, i32* %next_cells, align 4, !dbg !15045, !tbaa !2436
  br label %while.cond, !dbg !15046

while.cond:                                       ; preds = %if.end4, %entry
  %0 = load i32*, i32** %wc.addr, align 8, !dbg !15047, !tbaa !2442
  %1 = load i32, i32* %0, align 4, !dbg !15048, !tbaa !2436, !ctir !654
  %tobool = icmp ne i32 %1, 0, !dbg !15046
  br i1 %tobool, label %while.body, label %while.end, !dbg !15046

while.body:                                       ; preds = %while.cond
  %2 = load i32*, i32** %wc.addr, align 8, !dbg !15049, !tbaa !2442
  %3 = load i32, i32* %2, align 4, !dbg !15051, !tbaa !2436, !ctir !654
  %call = call i32 @wcwidth(i32 %3) #13, !dbg !15052
  store i32 %call, i32* %next_cells, align 4, !dbg !15053, !tbaa !2436
  %4 = load i32, i32* %next_cells, align 4, !dbg !15054, !tbaa !2436
  %cmp = icmp eq i32 %4, -1, !dbg !15056
  br i1 %cmp, label %if.then, label %if.end, !dbg !15057

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc.addr, align 8, !dbg !15058, !tbaa !2442
  store i32 65533, i32* %5, align 4, !dbg !15060, !tbaa !2436, !ctir !654
  store i32 1, i32* %next_cells, align 4, !dbg !15061, !tbaa !2436
  br label %if.end, !dbg !15062

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i64, i64* %cells, align 8, !dbg !15063, !tbaa !2579
  %7 = load i32, i32* %next_cells, align 4, !dbg !15065, !tbaa !2436
  %conv = sext i32 %7 to i64, !dbg !15065
  %add = add i64 %6, %conv, !dbg !15066
  %8 = load i64, i64* %width.addr, align 8, !dbg !15067, !tbaa !2579
  %cmp1 = icmp ugt i64 %add, %8, !dbg !15068
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !15069

if.then3:                                         ; preds = %if.end
  br label %while.end, !dbg !15070

if.end4:                                          ; preds = %if.end
  %9 = load i32, i32* %next_cells, align 4, !dbg !15071, !tbaa !2436
  %conv5 = sext i32 %9 to i64, !dbg !15071
  %10 = load i64, i64* %cells, align 8, !dbg !15072, !tbaa !2579
  %add6 = add i64 %10, %conv5, !dbg !15072
  store i64 %add6, i64* %cells, align 8, !dbg !15072, !tbaa !2579
  %11 = load i32*, i32** %wc.addr, align 8, !dbg !15073, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !15073
  store i32* %incdec.ptr, i32** %wc.addr, align 8, !dbg !15073, !tbaa !2442
  br label %while.cond, !dbg !15046, !llvm.loop !15074

while.end:                                        ; preds = %if.then3, %while.cond
  %12 = load i32*, i32** %wc.addr, align 8, !dbg !15076, !tbaa !2442
  store i32 0, i32* %12, align 4, !dbg !15077, !tbaa !2436, !ctir !654
  %13 = load i64, i64* %cells, align 8, !dbg !15078, !tbaa !2579
  ret i64 %13, !dbg !15079
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) #0 !dbg !15080 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %dest_end.addr = alloca i8*, align 8
  %n_spaces.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15081, metadata !DIExpression()), !dbg !15082
  store i8* %dest_end, i8** %dest_end.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest_end.addr, metadata !15083, metadata !DIExpression()), !dbg !15084
  store i64 %n_spaces, i64* %n_spaces.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_spaces.addr, metadata !15085, metadata !DIExpression()), !dbg !15086
  br label %while.cond, !dbg !15087

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %n_spaces.addr, align 8, !dbg !15088, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !15088
  store i64 %dec, i64* %n_spaces.addr, align 8, !dbg !15088, !tbaa !2579
  %tobool = icmp ne i64 %0, 0, !dbg !15088
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15089

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15090, !tbaa !2442
  %2 = load i8*, i8** %dest_end.addr, align 8, !dbg !15091, !tbaa !2442
  %cmp = icmp ult i8* %1, %2, !dbg !15092
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !15093
  br i1 %3, label %while.body, label %while.end, !dbg !15087

while.body:                                       ; preds = %land.end
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !15094, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15094
  store i8* %incdec.ptr, i8** %dest.addr, align 8, !dbg !15094, !tbaa !2442
  store i8 32, i8* %4, align 1, !dbg !15095, !tbaa !2497, !ctir !144
  br label %while.cond, !dbg !15087, !llvm.loop !15096

while.end:                                        ; preds = %land.end
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !15098, !tbaa !2442
  store i8 0, i8* %5, align 1, !dbg !15099, !tbaa !2497, !ctir !144
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !15100, !tbaa !2442
  ret i8* %6, !dbg !15101
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) #0 !dbg !15102 !ctir !1875 {
entry:
  %src.addr = alloca i8*, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %orig_width = alloca i64, align 8, !ctir !149
  %size = alloca i64, align 8, !ctir !149
  %req = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %nbuf = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15103, metadata !DIExpression()), !dbg !15104
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !15105, metadata !DIExpression()), !dbg !15106
  store i32 %align, i32* %align.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !15107, metadata !DIExpression()), !dbg !15108
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15109, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.declare(metadata i64* %orig_width, metadata !15111, metadata !DIExpression()), !dbg !15112
  %0 = load i64*, i64** %width.addr, align 8, !dbg !15113, !tbaa !2442
  %1 = load i64, i64* %0, align 8, !dbg !15114, !tbaa !2579, !ctir !149
  store i64 %1, i64* %orig_width, align 8, !dbg !15112, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15115, metadata !DIExpression()), !dbg !15116
  %2 = load i64*, i64** %width.addr, align 8, !dbg !15117, !tbaa !2442
  %3 = load i64, i64* %2, align 8, !dbg !15118, !tbaa !2579, !ctir !149
  store i64 %3, i64* %size, align 8, !dbg !15116, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %req, metadata !15119, metadata !DIExpression()), !dbg !15120
  %4 = load i64, i64* %size, align 8, !dbg !15121, !tbaa !2579
  store i64 %4, i64* %req, align 8, !dbg !15120, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15122, metadata !DIExpression()), !dbg !15123
  store i8* null, i8** %buf, align 8, !dbg !15123, !tbaa !2442
  br label %while.cond, !dbg !15124

while.cond:                                       ; preds = %if.end5, %entry
  %5 = load i64, i64* %req, align 8, !dbg !15125, !tbaa !2579
  %6 = load i64, i64* %size, align 8, !dbg !15126, !tbaa !2579
  %cmp = icmp uge i64 %5, %6, !dbg !15127
  br i1 %cmp, label %while.body, label %while.end, !dbg !15124

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %nbuf, metadata !15128, metadata !DIExpression()), !dbg !15130
  %7 = load i64, i64* %req, align 8, !dbg !15131, !tbaa !2579
  %add = add i64 %7, 1, !dbg !15132
  store i64 %add, i64* %size, align 8, !dbg !15133, !tbaa !2579
  %8 = load i8*, i8** %buf, align 8, !dbg !15134, !tbaa !2442
  %9 = load i64, i64* %size, align 8, !dbg !15135, !tbaa !2579
  %call = call i8* @realloc(i8* %8, i64 %9) #13, !dbg !15136
  store i8* %call, i8** %nbuf, align 8, !dbg !15137, !tbaa !2442
  %10 = load i8*, i8** %nbuf, align 8, !dbg !15138, !tbaa !2442
  %cmp1 = icmp eq i8* %10, null, !dbg !15140
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15141

if.then:                                          ; preds = %while.body
  %11 = load i8*, i8** %buf, align 8, !dbg !15142, !tbaa !2442
  call void @free(i8* %11) #13, !dbg !15144
  store i8* null, i8** %buf, align 8, !dbg !15145, !tbaa !2442
  br label %while.end, !dbg !15146

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %nbuf, align 8, !dbg !15147, !tbaa !2442
  store i8* %12, i8** %buf, align 8, !dbg !15148, !tbaa !2442
  %13 = load i64, i64* %orig_width, align 8, !dbg !15149, !tbaa !2579
  %14 = load i64*, i64** %width.addr, align 8, !dbg !15150, !tbaa !2442
  store i64 %13, i64* %14, align 8, !dbg !15151, !tbaa !2579, !ctir !149
  %15 = load i8*, i8** %src.addr, align 8, !dbg !15152, !tbaa !2442
  %16 = load i8*, i8** %buf, align 8, !dbg !15153, !tbaa !2442
  %17 = load i64, i64* %size, align 8, !dbg !15154, !tbaa !2579
  %18 = load i64*, i64** %width.addr, align 8, !dbg !15155, !tbaa !2442
  %19 = load i32, i32* %align.addr, align 4, !dbg !15156, !tbaa !2497
  %20 = load i32, i32* %flags.addr, align 4, !dbg !15157, !tbaa !2436
  %call2 = call i64 @mbsalign(i8* %15, i8* %16, i64 %17, i64* %18, i32 %19, i32 %20), !dbg !15158
  store i64 %call2, i64* %req, align 8, !dbg !15159, !tbaa !2579
  %21 = load i64, i64* %req, align 8, !dbg !15160, !tbaa !2579
  %cmp3 = icmp eq i64 %21, -1, !dbg !15162
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !15163

if.then4:                                         ; preds = %if.end
  %22 = load i8*, i8** %buf, align 8, !dbg !15164, !tbaa !2442
  call void @free(i8* %22) #13, !dbg !15166
  store i8* null, i8** %buf, align 8, !dbg !15167, !tbaa !2442
  br label %while.end, !dbg !15168

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !15124, !llvm.loop !15169

while.end:                                        ; preds = %if.then4, %if.then, %while.cond
  %23 = load i8*, i8** %buf, align 8, !dbg !15171, !tbaa !2442
  ret i8* %23, !dbg !15172
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #0 !dbg !15173 !ctir !1886 {
entry:
  %string.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15175, metadata !DIExpression()), !dbg !15176
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15177, metadata !DIExpression()), !dbg !15178
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15179, !tbaa !2442
  %1 = load i8*, i8** %string.addr, align 8, !dbg !15180, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !15181
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15182, !tbaa !2436
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !15183
  ret i32 %call1, !dbg !15184
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #0 !dbg !15185 !ctir !1888 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %width = alloca i32, align 4, !ctir !27
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1890
  %wc = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %c = alloca i8, align 1, !ctir !591
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15186, metadata !DIExpression()), !dbg !15187
  store i64 %nbytes, i64* %nbytes.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15190, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15192, metadata !DIExpression()), !dbg !15193
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15194, !tbaa !2442
  store i8* %0, i8** %p, align 8, !dbg !15193, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !15195, metadata !DIExpression()), !dbg !15196
  %1 = load i8*, i8** %p, align 8, !dbg !15197, !tbaa !2442
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !15198, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !15199
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !15196, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %width, metadata !15200, metadata !DIExpression()), !dbg !15201
  store i32 0, i32* %width, align 4, !dbg !15202, !tbaa !2436
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !15203
  %cmp = icmp ugt i64 %call, 1, !dbg !15205
  br i1 %cmp, label %if.then, label %if.end49, !dbg !15206

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !15207

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !15209, !tbaa !2442
  %4 = load i8*, i8** %plimit, align 8, !dbg !15210, !tbaa !2442
  %cmp1 = icmp ult i8* %3, %4, !dbg !15211
  br i1 %cmp1, label %while.body, label %while.end, !dbg !15207

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !15212, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !15213, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !15213
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !15214

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !15215, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15215
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !15215, !tbaa !2442
  %8 = load i32, i32* %width, align 4, !dbg !15217, !tbaa !2436
  %inc = add nsw i32 %8, 1, !dbg !15217
  store i32 %inc, i32* %width, align 4, !dbg !15217, !tbaa !2436
  br label %sw.epilog, !dbg !15218

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !15219, metadata !DIExpression()), !dbg !15221
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !15222
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !15222
  br label %do.body, !dbg !15223

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !15224, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15227, metadata !DIExpression()), !dbg !15228
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15229, metadata !DIExpression()), !dbg !15230
  %10 = load i8*, i8** %p, align 8, !dbg !15231, !tbaa !2442
  %11 = load i8*, i8** %plimit, align 8, !dbg !15232, !tbaa !2442
  %12 = load i8*, i8** %p, align 8, !dbg !15233, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !15234
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !15234
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15234
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !15235
  store i64 %call2, i64* %bytes, align 8, !dbg !15236, !tbaa !2579
  %13 = load i64, i64* %bytes, align 8, !dbg !15237, !tbaa !2579
  %cmp3 = icmp eq i64 %13, -1, !dbg !15239
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !15240

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15241, !tbaa !2436
  %and = and i32 %14, 1, !dbg !15244
  %tobool = icmp ne i32 %and, 0, !dbg !15244
  br i1 %tobool, label %if.else, label %if.then6, !dbg !15245

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !15246, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !15246
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !15246, !tbaa !2442
  %16 = load i32, i32* %width, align 4, !dbg !15248, !tbaa !2436
  %inc8 = add nsw i32 %16, 1, !dbg !15248
  store i32 %inc8, i32* %width, align 4, !dbg !15248, !tbaa !2436
  br label %do.end, !dbg !15249

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !15250
  br label %return, !dbg !15250

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !15251, !tbaa !2579
  %cmp9 = icmp eq i64 %17, -2, !dbg !15253
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15254

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !15255, !tbaa !2436
  %and12 = and i32 %18, 1, !dbg !15258
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15258
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !15259

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !15260, !tbaa !2442
  store i8* %19, i8** %p, align 8, !dbg !15262, !tbaa !2442
  %20 = load i32, i32* %width, align 4, !dbg !15263, !tbaa !2436
  %inc15 = add nsw i32 %20, 1, !dbg !15263
  store i32 %inc15, i32* %width, align 4, !dbg !15263, !tbaa !2436
  br label %do.end, !dbg !15264

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !15265
  br label %return, !dbg !15265

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !15266, !tbaa !2579
  %cmp18 = icmp eq i64 %21, 0, !dbg !15268
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15269

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !15270, !tbaa !2579
  br label %if.end21, !dbg !15271

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !15272, !tbaa !2436
  %call22 = call i32 @wcwidth(i32 %22) #13, !dbg !15273
  store i32 %call22, i32* %w, align 4, !dbg !15274, !tbaa !2436
  %23 = load i32, i32* %w, align 4, !dbg !15275, !tbaa !2436
  %cmp23 = icmp sge i32 %23, 0, !dbg !15277
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !15278

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !15279, !tbaa !2436
  %25 = load i32, i32* %width, align 4, !dbg !15282, !tbaa !2436
  %sub = sub nsw i32 2147483647, %25, !dbg !15283
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !15284
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15285

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !15286

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !15287, !tbaa !2436
  %27 = load i32, i32* %width, align 4, !dbg !15288, !tbaa !2436
  %add = add nsw i32 %27, %26, !dbg !15288
  store i32 %add, i32* %width, align 4, !dbg !15288, !tbaa !2436
  br label %if.end45, !dbg !15289

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !15290, !tbaa !2436
  %and31 = and i32 %28, 2, !dbg !15292
  %tobool32 = icmp ne i32 %and31, 0, !dbg !15292
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !15293

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !15294, !tbaa !2436
  %call34 = call i32 @iswcntrl(i32 %29) #13, !dbg !15297
  %tobool35 = icmp ne i32 %call34, 0, !dbg !15297
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !15298

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !15299, !tbaa !2436
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !15302
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !15303

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !15304

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !15305, !tbaa !2436
  %inc41 = add nsw i32 %31, 1, !dbg !15305
  store i32 %inc41, i32* %width, align 4, !dbg !15305, !tbaa !2436
  br label %if.end42, !dbg !15306

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !15307

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !15308
  br label %return, !dbg !15308

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !15309, !tbaa !2579
  %33 = load i8*, i8** %p, align 8, !dbg !15310, !tbaa !2442
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !15310
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15310, !tbaa !2442
  br label %do.cond, !dbg !15311

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !15312
  %tobool48 = icmp ne i32 %call47, 0, !dbg !15313
  %lnot = xor i1 %tobool48, true, !dbg !15313
  br i1 %lnot, label %do.body, label %do.end, !dbg !15311, !llvm.loop !15314

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !15316

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !15207, !llvm.loop !15317

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !15319, !tbaa !2436
  store i32 %34, i32* %retval, align 4, !dbg !15320
  br label %return, !dbg !15320

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !15321

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !15322, !tbaa !2442
  %36 = load i8*, i8** %plimit, align 8, !dbg !15323, !tbaa !2442
  %cmp51 = icmp ult i8* %35, %36, !dbg !15324
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !15321

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !15325, metadata !DIExpression()), !dbg !15327
  %37 = load i8*, i8** %p, align 8, !dbg !15328, !tbaa !2442
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !15328
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !15328, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !15329, !tbaa !2497, !ctir !147
  store i8 %38, i8* %c, align 1, !dbg !15327, !tbaa !2497
  %call55 = call i16** @__ctype_b_loc() #17, !dbg !15330
  %39 = load i16*, i16** %call55, align 8, !dbg !15330, !tbaa !2442, !ctir !587
  %40 = load i8, i8* %c, align 1, !dbg !15330, !tbaa !2497
  %conv56 = zext i8 %40 to i32, !dbg !15330
  %idxprom = sext i32 %conv56 to i64, !dbg !15330
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !15330, !ctir !587
  %41 = load i16, i16* %arrayidx, align 2, !dbg !15330, !tbaa !5835
  %conv57 = zext i16 %41 to i32, !dbg !15330
  %and58 = and i32 %conv57, 16384, !dbg !15330
  %tobool59 = icmp ne i32 %and58, 0, !dbg !15330
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !15332

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !15333, !tbaa !2436
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !15336
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !15337

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !15338

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !15339, !tbaa !2436
  %inc65 = add nsw i32 %43, 1, !dbg !15339
  store i32 %inc65, i32* %width, align 4, !dbg !15339, !tbaa !2436
  br label %if.end86, !dbg !15340

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !15341, !tbaa !2436
  %and67 = and i32 %44, 2, !dbg !15343
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15343
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !15344

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #17, !dbg !15345
  %45 = load i16*, i16** %call70, align 8, !dbg !15345, !tbaa !2442, !ctir !587
  %46 = load i8, i8* %c, align 1, !dbg !15345, !tbaa !2497
  %conv71 = zext i8 %46 to i32, !dbg !15345
  %idxprom72 = sext i32 %conv71 to i64, !dbg !15345
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !15345, !ctir !587
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !15345, !tbaa !5835
  %conv74 = zext i16 %47 to i32, !dbg !15345
  %and75 = and i32 %conv74, 2, !dbg !15345
  %tobool76 = icmp ne i32 %and75, 0, !dbg !15345
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !15348

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !15349, !tbaa !2436
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !15352
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !15353

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !15354

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !15355, !tbaa !2436
  %inc82 = add nsw i32 %49, 1, !dbg !15355
  store i32 %inc82, i32* %width, align 4, !dbg !15355, !tbaa !2436
  br label %if.end83, !dbg !15356

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !15357

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !15358
  br label %return, !dbg !15358

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !15321, !llvm.loop !15359

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !15361, !tbaa !2436
  store i32 %50, i32* %retval, align 4, !dbg !15362
  br label %return, !dbg !15362

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !15363), !dbg !15364
  store i32 2147483647, i32* %retval, align 4, !dbg !15365
  br label %return, !dbg !15365

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !15366
  ret i32 %51, !dbg !15366
}

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mpsort(i8** %base, i64 %n, i32 (i8*, i8*)* %cmp) #0 !dbg !15367 !ctir !1903 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15368, metadata !DIExpression()), !dbg !15369
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15370, metadata !DIExpression()), !dbg !15371
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15372, metadata !DIExpression()), !dbg !15373
  %0 = load i8**, i8*** %base.addr, align 8, !dbg !15374, !tbaa !2442
  %1 = load i64, i64* %n.addr, align 8, !dbg !15375, !tbaa !2579
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15376, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !15377, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !15378
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15379, !tbaa !2442
  call void @mpsort_with_tmp(i8** %0, i64 %1, i8** %add.ptr, i32 (i8*, i8*)* %4), !dbg !15380
  ret void, !dbg !15381
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_with_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15382 !ctir !1910 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %p0 = alloca i8*, align 8, !ctir !176
  %p1 = alloca i8*, align 8, !ctir !176
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %tlim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %bb = alloca i8*, align 8, !ctir !176
  %tt = alloca i8*, align 8, !ctir !176
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15383, metadata !DIExpression()), !dbg !15384
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15385, metadata !DIExpression()), !dbg !15386
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15387, metadata !DIExpression()), !dbg !15388
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15389, metadata !DIExpression()), !dbg !15390
  %0 = load i64, i64* %n.addr, align 8, !dbg !15391, !tbaa !2579
  %cmp1 = icmp ule i64 %0, 2, !dbg !15393
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15394

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !15395, !tbaa !2579
  %cmp2 = icmp eq i64 %1, 2, !dbg !15398
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !15399

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !15400, metadata !DIExpression()), !dbg !15402
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15403, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !15403, !ctir !182
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !15403, !tbaa !2442
  store i8* %3, i8** %p0, align 8, !dbg !15402, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !15404, metadata !DIExpression()), !dbg !15405
  %4 = load i8**, i8*** %base.addr, align 8, !dbg !15406, !tbaa !2442
  %arrayidx4 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !15406, !ctir !182
  %5 = load i8*, i8** %arrayidx4, align 8, !dbg !15406, !tbaa !2442
  store i8* %5, i8** %p1, align 8, !dbg !15405, !tbaa !2442
  %6 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15407, !tbaa !2442
  %7 = load i8*, i8** %p0, align 8, !dbg !15409, !tbaa !2442
  %8 = load i8*, i8** %p1, align 8, !dbg !15410, !tbaa !2442
  %call = call i32 %6(i8* %7, i8* %8), !dbg !15407
  %cmp5 = icmp sle i32 %call, 0, !dbg !15411
  br i1 %cmp5, label %if.end, label %if.then6, !dbg !15412

if.then6:                                         ; preds = %if.then3
  %9 = load i8*, i8** %p1, align 8, !dbg !15413, !tbaa !2442
  %10 = load i8**, i8*** %base.addr, align 8, !dbg !15415, !tbaa !2442
  %arrayidx7 = getelementptr inbounds i8*, i8** %10, i64 0, !dbg !15415, !ctir !182
  store i8* %9, i8** %arrayidx7, align 8, !dbg !15416, !tbaa !2442
  %11 = load i8*, i8** %p0, align 8, !dbg !15417, !tbaa !2442
  %12 = load i8**, i8*** %base.addr, align 8, !dbg !15418, !tbaa !2442
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 1, !dbg !15418, !ctir !182
  store i8* %11, i8** %arrayidx8, align 8, !dbg !15419, !tbaa !2442
  br label %if.end, !dbg !15420

if.end:                                           ; preds = %if.then6, %if.then3
  br label %if.end9, !dbg !15421

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end39, !dbg !15422

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15423, metadata !DIExpression()), !dbg !15425
  %13 = load i64, i64* %n.addr, align 8, !dbg !15426, !tbaa !2579
  %div = udiv i64 %13, 2, !dbg !15427
  store i64 %div, i64* %n1, align 8, !dbg !15425, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15428, metadata !DIExpression()), !dbg !15429
  %14 = load i64, i64* %n.addr, align 8, !dbg !15430, !tbaa !2579
  %15 = load i64, i64* %n1, align 8, !dbg !15431, !tbaa !2579
  %sub = sub i64 %14, %15, !dbg !15432
  store i64 %sub, i64* %n2, align 8, !dbg !15429, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15433, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.declare(metadata i64* %t, metadata !15435, metadata !DIExpression()), !dbg !15436
  store i64 0, i64* %t, align 8, !dbg !15436, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %tlim, metadata !15437, metadata !DIExpression()), !dbg !15438
  %16 = load i64, i64* %n1, align 8, !dbg !15439, !tbaa !2579
  store i64 %16, i64* %tlim, align 8, !dbg !15438, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15440, metadata !DIExpression()), !dbg !15441
  %17 = load i64, i64* %n1, align 8, !dbg !15442, !tbaa !2579
  store i64 %17, i64* %b, align 8, !dbg !15441, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15443, metadata !DIExpression()), !dbg !15444
  %18 = load i64, i64* %n.addr, align 8, !dbg !15445, !tbaa !2579
  store i64 %18, i64* %blim, align 8, !dbg !15444, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15446, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.declare(metadata i8** %tt, metadata !15448, metadata !DIExpression()), !dbg !15449
  %19 = load i8**, i8*** %base.addr, align 8, !dbg !15450, !tbaa !2442
  %20 = load i64, i64* %n1, align 8, !dbg !15451, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %19, i64 %20, !dbg !15452
  %21 = load i64, i64* %n2, align 8, !dbg !15453, !tbaa !2579
  %22 = load i8**, i8*** %tmp.addr, align 8, !dbg !15454, !tbaa !2442
  %23 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15455, !tbaa !2442
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %21, i8** %22, i32 (i8*, i8*)* %23), !dbg !15456
  %24 = load i64, i64* %n1, align 8, !dbg !15457, !tbaa !2579
  %cmp10 = icmp ult i64 %24, 2, !dbg !15459
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !15460

if.then11:                                        ; preds = %if.else
  %25 = load i8**, i8*** %base.addr, align 8, !dbg !15461, !tbaa !2442
  %arrayidx12 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !15461, !ctir !182
  %26 = load i8*, i8** %arrayidx12, align 8, !dbg !15461, !tbaa !2442
  %27 = load i8**, i8*** %tmp.addr, align 8, !dbg !15462, !tbaa !2442
  %arrayidx13 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !15462, !ctir !182
  store i8* %26, i8** %arrayidx13, align 8, !dbg !15463, !tbaa !2442
  br label %if.end15, !dbg !15462

if.else14:                                        ; preds = %if.else
  %28 = load i8**, i8*** %base.addr, align 8, !dbg !15464, !tbaa !2442
  %29 = load i64, i64* %n1, align 8, !dbg !15465, !tbaa !2579
  %30 = load i8**, i8*** %tmp.addr, align 8, !dbg !15466, !tbaa !2442
  %31 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15467, !tbaa !2442
  call void @mpsort_into_tmp(i8** %28, i64 %29, i8** %30, i32 (i8*, i8*)* %31), !dbg !15468
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then11
  %32 = load i8**, i8*** %tmp.addr, align 8, !dbg !15469, !tbaa !2442
  %33 = load i64, i64* %t, align 8, !dbg !15470, !tbaa !2579
  %arrayidx16 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !15469, !ctir !182
  %34 = load i8*, i8** %arrayidx16, align 8, !dbg !15469, !tbaa !2442
  store i8* %34, i8** %tt, align 8, !dbg !15471, !tbaa !2442
  %35 = load i8**, i8*** %base.addr, align 8, !dbg !15472, !tbaa !2442
  %36 = load i64, i64* %b, align 8, !dbg !15473, !tbaa !2579
  %arrayidx17 = getelementptr inbounds i8*, i8** %35, i64 %36, !dbg !15472, !ctir !182
  %37 = load i8*, i8** %arrayidx17, align 8, !dbg !15472, !tbaa !2442
  store i8* %37, i8** %bb, align 8, !dbg !15474, !tbaa !2442
  store i64 0, i64* %i, align 8, !dbg !15475, !tbaa !2579
  br label %for.cond, !dbg !15477

for.cond:                                         ; preds = %if.end38, %if.end15
  %38 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15478, !tbaa !2442
  %39 = load i8*, i8** %tt, align 8, !dbg !15481, !tbaa !2442
  %40 = load i8*, i8** %bb, align 8, !dbg !15482, !tbaa !2442
  %call18 = call i32 %38(i8* %39, i8* %40), !dbg !15478
  %cmp19 = icmp sle i32 %call18, 0, !dbg !15483
  br i1 %cmp19, label %if.then20, label %if.else27, !dbg !15484

if.then20:                                        ; preds = %for.cond
  %41 = load i8*, i8** %tt, align 8, !dbg !15485, !tbaa !2442
  %42 = load i8**, i8*** %base.addr, align 8, !dbg !15487, !tbaa !2442
  %43 = load i64, i64* %i, align 8, !dbg !15488, !tbaa !2579
  %inc = add i64 %43, 1, !dbg !15488
  store i64 %inc, i64* %i, align 8, !dbg !15488, !tbaa !2579
  %arrayidx21 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !15487, !ctir !182
  store i8* %41, i8** %arrayidx21, align 8, !dbg !15489, !tbaa !2442
  %44 = load i64, i64* %t, align 8, !dbg !15490, !tbaa !2579
  %inc22 = add i64 %44, 1, !dbg !15490
  store i64 %inc22, i64* %t, align 8, !dbg !15490, !tbaa !2579
  %45 = load i64, i64* %t, align 8, !dbg !15491, !tbaa !2579
  %46 = load i64, i64* %tlim, align 8, !dbg !15493, !tbaa !2579
  %cmp23 = icmp eq i64 %45, %46, !dbg !15494
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !15495

if.then24:                                        ; preds = %if.then20
  br label %for.end, !dbg !15496

if.end25:                                         ; preds = %if.then20
  %47 = load i8**, i8*** %tmp.addr, align 8, !dbg !15497, !tbaa !2442
  %48 = load i64, i64* %t, align 8, !dbg !15498, !tbaa !2579
  %arrayidx26 = getelementptr inbounds i8*, i8** %47, i64 %48, !dbg !15497, !ctir !182
  %49 = load i8*, i8** %arrayidx26, align 8, !dbg !15497, !tbaa !2442
  store i8* %49, i8** %tt, align 8, !dbg !15499, !tbaa !2442
  br label %if.end38, !dbg !15500

if.else27:                                        ; preds = %for.cond
  %50 = load i8*, i8** %bb, align 8, !dbg !15501, !tbaa !2442
  %51 = load i8**, i8*** %base.addr, align 8, !dbg !15503, !tbaa !2442
  %52 = load i64, i64* %i, align 8, !dbg !15504, !tbaa !2579
  %inc28 = add i64 %52, 1, !dbg !15504
  store i64 %inc28, i64* %i, align 8, !dbg !15504, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i8*, i8** %51, i64 %52, !dbg !15503, !ctir !182
  store i8* %50, i8** %arrayidx29, align 8, !dbg !15505, !tbaa !2442
  %53 = load i64, i64* %b, align 8, !dbg !15506, !tbaa !2579
  %inc30 = add i64 %53, 1, !dbg !15506
  store i64 %inc30, i64* %b, align 8, !dbg !15506, !tbaa !2579
  %54 = load i64, i64* %b, align 8, !dbg !15507, !tbaa !2579
  %55 = load i64, i64* %blim, align 8, !dbg !15509, !tbaa !2579
  %cmp31 = icmp eq i64 %54, %55, !dbg !15510
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !15511

if.then32:                                        ; preds = %if.else27
  %56 = load i8**, i8*** %base.addr, align 8, !dbg !15512, !tbaa !2442
  %57 = load i64, i64* %i, align 8, !dbg !15514, !tbaa !2579
  %add.ptr33 = getelementptr inbounds i8*, i8** %56, i64 %57, !dbg !15515
  %58 = bitcast i8** %add.ptr33 to i8*, !dbg !15516
  %59 = load i8**, i8*** %tmp.addr, align 8, !dbg !15517, !tbaa !2442
  %60 = load i64, i64* %t, align 8, !dbg !15518, !tbaa !2579
  %add.ptr34 = getelementptr inbounds i8*, i8** %59, i64 %60, !dbg !15519
  %61 = bitcast i8** %add.ptr34 to i8*, !dbg !15516
  %62 = load i64, i64* %tlim, align 8, !dbg !15520, !tbaa !2579
  %63 = load i64, i64* %t, align 8, !dbg !15521, !tbaa !2579
  %sub35 = sub i64 %62, %63, !dbg !15522
  %mul = mul i64 %sub35, 8, !dbg !15523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %61, i64 %mul, i1 false), !dbg !15516
  br label %for.end, !dbg !15524

if.end36:                                         ; preds = %if.else27
  %64 = load i8**, i8*** %base.addr, align 8, !dbg !15525, !tbaa !2442
  %65 = load i64, i64* %b, align 8, !dbg !15526, !tbaa !2579
  %arrayidx37 = getelementptr inbounds i8*, i8** %64, i64 %65, !dbg !15525, !ctir !182
  %66 = load i8*, i8** %arrayidx37, align 8, !dbg !15525, !tbaa !2442
  store i8* %66, i8** %bb, align 8, !dbg !15527, !tbaa !2442
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.end25
  br label %for.cond, !dbg !15528, !llvm.loop !15529

for.end:                                          ; preds = %if.then32, %if.then24
  br label %if.end39

if.end39:                                         ; preds = %for.end, %if.end9
  ret void, !dbg !15532
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_into_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15533 !ctir !1910 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %a = alloca i64, align 8, !ctir !149
  %alim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %ba = alloca i8*, align 8, !ctir !176
  %bb = alloca i8*, align 8, !ctir !176
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15534, metadata !DIExpression()), !dbg !15535
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15536, metadata !DIExpression()), !dbg !15537
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15538, metadata !DIExpression()), !dbg !15539
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15540, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15542, metadata !DIExpression()), !dbg !15543
  %0 = load i64, i64* %n.addr, align 8, !dbg !15544, !tbaa !2579
  %div = udiv i64 %0, 2, !dbg !15545
  store i64 %div, i64* %n1, align 8, !dbg !15543, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15546, metadata !DIExpression()), !dbg !15547
  %1 = load i64, i64* %n.addr, align 8, !dbg !15548, !tbaa !2579
  %2 = load i64, i64* %n1, align 8, !dbg !15549, !tbaa !2579
  %sub = sub i64 %1, %2, !dbg !15550
  store i64 %sub, i64* %n2, align 8, !dbg !15547, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %a, metadata !15551, metadata !DIExpression()), !dbg !15552
  store i64 0, i64* %a, align 8, !dbg !15552, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alim, metadata !15553, metadata !DIExpression()), !dbg !15554
  %3 = load i64, i64* %n1, align 8, !dbg !15555, !tbaa !2579
  store i64 %3, i64* %alim, align 8, !dbg !15554, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15556, metadata !DIExpression()), !dbg !15557
  %4 = load i64, i64* %n1, align 8, !dbg !15558, !tbaa !2579
  store i64 %4, i64* %b, align 8, !dbg !15557, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15559, metadata !DIExpression()), !dbg !15560
  %5 = load i64, i64* %n.addr, align 8, !dbg !15561, !tbaa !2579
  store i64 %5, i64* %blim, align 8, !dbg !15560, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %ba, metadata !15562, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15564, metadata !DIExpression()), !dbg !15565
  %6 = load i8**, i8*** %base.addr, align 8, !dbg !15566, !tbaa !2442
  %7 = load i64, i64* %n1, align 8, !dbg !15567, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !15568
  %8 = load i64, i64* %n2, align 8, !dbg !15569, !tbaa !2579
  %9 = load i8**, i8*** %tmp.addr, align 8, !dbg !15570, !tbaa !2442
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15571, !tbaa !2442
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %8, i8** %9, i32 (i8*, i8*)* %10), !dbg !15572
  %11 = load i8**, i8*** %base.addr, align 8, !dbg !15573, !tbaa !2442
  %12 = load i64, i64* %n1, align 8, !dbg !15574, !tbaa !2579
  %13 = load i8**, i8*** %tmp.addr, align 8, !dbg !15575, !tbaa !2442
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15576, !tbaa !2442
  call void @mpsort_with_tmp(i8** %11, i64 %12, i8** %13, i32 (i8*, i8*)* %14), !dbg !15577
  %15 = load i8**, i8*** %base.addr, align 8, !dbg !15578, !tbaa !2442
  %16 = load i64, i64* %a, align 8, !dbg !15579, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !15578, !ctir !182
  %17 = load i8*, i8** %arrayidx, align 8, !dbg !15578, !tbaa !2442
  store i8* %17, i8** %ba, align 8, !dbg !15580, !tbaa !2442
  %18 = load i8**, i8*** %base.addr, align 8, !dbg !15581, !tbaa !2442
  %19 = load i64, i64* %b, align 8, !dbg !15582, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !15581, !ctir !182
  %20 = load i8*, i8** %arrayidx1, align 8, !dbg !15581, !tbaa !2442
  store i8* %20, i8** %bb, align 8, !dbg !15583, !tbaa !2442
  br label %for.cond, !dbg !15584

for.cond:                                         ; preds = %if.end12, %entry
  %21 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15585, !tbaa !2442
  %22 = load i8*, i8** %ba, align 8, !dbg !15589, !tbaa !2442
  %23 = load i8*, i8** %bb, align 8, !dbg !15590, !tbaa !2442
  %call = call i32 %21(i8* %22, i8* %23), !dbg !15585
  %cmp2 = icmp sle i32 %call, 0, !dbg !15591
  br i1 %cmp2, label %if.then, label %if.else, !dbg !15592

if.then:                                          ; preds = %for.cond
  %24 = load i8*, i8** %ba, align 8, !dbg !15593, !tbaa !2442
  %25 = load i8**, i8*** %tmp.addr, align 8, !dbg !15595, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8*, i8** %25, i32 1, !dbg !15595
  store i8** %incdec.ptr, i8*** %tmp.addr, align 8, !dbg !15595, !tbaa !2442
  store i8* %24, i8** %25, align 8, !dbg !15596, !tbaa !2442, !ctir !176
  %26 = load i64, i64* %a, align 8, !dbg !15597, !tbaa !2579
  %inc = add i64 %26, 1, !dbg !15597
  store i64 %inc, i64* %a, align 8, !dbg !15597, !tbaa !2579
  %27 = load i64, i64* %a, align 8, !dbg !15598, !tbaa !2579
  %28 = load i64, i64* %alim, align 8, !dbg !15600, !tbaa !2579
  %cmp3 = icmp eq i64 %27, %28, !dbg !15601
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15602

if.then4:                                         ; preds = %if.then
  %29 = load i64, i64* %b, align 8, !dbg !15603, !tbaa !2579
  store i64 %29, i64* %a, align 8, !dbg !15605, !tbaa !2579
  %30 = load i64, i64* %blim, align 8, !dbg !15606, !tbaa !2579
  store i64 %30, i64* %alim, align 8, !dbg !15607, !tbaa !2579
  br label %for.end, !dbg !15608

if.end:                                           ; preds = %if.then
  %31 = load i8**, i8*** %base.addr, align 8, !dbg !15609, !tbaa !2442
  %32 = load i64, i64* %a, align 8, !dbg !15610, !tbaa !2579
  %arrayidx5 = getelementptr inbounds i8*, i8** %31, i64 %32, !dbg !15609, !ctir !182
  %33 = load i8*, i8** %arrayidx5, align 8, !dbg !15609, !tbaa !2442
  store i8* %33, i8** %ba, align 8, !dbg !15611, !tbaa !2442
  br label %if.end12, !dbg !15612

if.else:                                          ; preds = %for.cond
  %34 = load i8*, i8** %bb, align 8, !dbg !15613, !tbaa !2442
  %35 = load i8**, i8*** %tmp.addr, align 8, !dbg !15615, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8*, i8** %35, i32 1, !dbg !15615
  store i8** %incdec.ptr6, i8*** %tmp.addr, align 8, !dbg !15615, !tbaa !2442
  store i8* %34, i8** %35, align 8, !dbg !15616, !tbaa !2442, !ctir !176
  %36 = load i64, i64* %b, align 8, !dbg !15617, !tbaa !2579
  %inc7 = add i64 %36, 1, !dbg !15617
  store i64 %inc7, i64* %b, align 8, !dbg !15617, !tbaa !2579
  %37 = load i64, i64* %b, align 8, !dbg !15618, !tbaa !2579
  %38 = load i64, i64* %blim, align 8, !dbg !15620, !tbaa !2579
  %cmp8 = icmp eq i64 %37, %38, !dbg !15621
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !15622

if.then9:                                         ; preds = %if.else
  br label %for.end, !dbg !15623

if.end10:                                         ; preds = %if.else
  %39 = load i8**, i8*** %base.addr, align 8, !dbg !15624, !tbaa !2442
  %40 = load i64, i64* %b, align 8, !dbg !15625, !tbaa !2579
  %arrayidx11 = getelementptr inbounds i8*, i8** %39, i64 %40, !dbg !15624, !ctir !182
  %41 = load i8*, i8** %arrayidx11, align 8, !dbg !15624, !tbaa !2442
  store i8* %41, i8** %bb, align 8, !dbg !15626, !tbaa !2442
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end
  br label %for.cond, !dbg !15627, !llvm.loop !15628

for.end:                                          ; preds = %if.then9, %if.then4
  %42 = load i8**, i8*** %tmp.addr, align 8, !dbg !15631, !tbaa !2442
  %43 = bitcast i8** %42 to i8*, !dbg !15632
  %44 = load i8**, i8*** %base.addr, align 8, !dbg !15633, !tbaa !2442
  %45 = load i64, i64* %a, align 8, !dbg !15634, !tbaa !2579
  %add.ptr13 = getelementptr inbounds i8*, i8** %44, i64 %45, !dbg !15635
  %46 = bitcast i8** %add.ptr13 to i8*, !dbg !15632
  %47 = load i64, i64* %alim, align 8, !dbg !15636, !tbaa !2579
  %48 = load i64, i64* %a, align 8, !dbg !15637, !tbaa !2579
  %sub14 = sub i64 %47, %48, !dbg !15638
  %mul = mul i64 %sub14, 8, !dbg !15639
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %46, i64 %mul, i1 false), !dbg !15632
  ret void, !dbg !15640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @nstrftime(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15641 !ctir !1916 {
entry:
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %tzset_called = alloca i8, align 1, !ctir !141
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15643, metadata !DIExpression()), !dbg !15644
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15645, metadata !DIExpression()), !dbg !15646
  store i8* %format, i8** %format.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15647, metadata !DIExpression()), !dbg !15648
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15649, metadata !DIExpression()), !dbg !15650
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15651, metadata !DIExpression()), !dbg !15652
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15653, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.declare(metadata i8* %tzset_called, metadata !15654, metadata !DIExpression()), !dbg !15655
  store i8 0, i8* %tzset_called, align 1, !dbg !15655, !tbaa !2461
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15656, !tbaa !2442
  %1 = load i64, i64* %maxsize.addr, align 8, !dbg !15657, !tbaa !2579
  %2 = load i8*, i8** %format.addr, align 8, !dbg !15658, !tbaa !2442
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15659, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15660, !tbaa !2442
  %5 = load i32, i32* %ns.addr, align 4, !dbg !15660, !tbaa !2436
  %call = call i64 @__strftime_internal(i8* %0, i64 %1, i8* %2, %struct.tm* %3, i1 zeroext false, i32 0, i32 -1, i8* %tzset_called, %struct.tm_zone* %4, i32 %5), !dbg !15661
  ret i64 %call, !dbg !15662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, i1 zeroext %upcase, i32 %yr_spec, i32 %width, i8* %tzset_called, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15663 !ctir !1941 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %upcase.addr = alloca i8, align 1
  %yr_spec.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %tzset_called.addr = alloca i8*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %hour12 = alloca i32, align 4, !ctir !27
  %zone = alloca i8*, align 8, !ctir !146
  %i = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %f = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %modifier = alloca i32, align 4, !ctir !27
  %digits = alloca i32, align 4, !ctir !27
  %number_value = alloca i32, align 4, !ctir !27
  %u_number_value = alloca i32, align 4, !ctir !6
  %negative_number = alloca i8, align 1, !ctir !141
  %always_output_a_sign = alloca i8, align 1, !ctir !141
  %tz_colon_mask = alloca i32, align 4, !ctir !27
  %subfmt = alloca i8*, align 8, !ctir !146
  %sign_char = alloca i8, align 1, !ctir !144
  %bufp = alloca i8*, align 8, !ctir !143
  %buf = alloca [23 x i8], align 16, !ctir !1943
  %to_lowcase = alloca i8, align 1, !ctir !141
  %to_uppcase = alloca i8, align 1, !ctir !141
  %colons = alloca i64, align 8, !ctir !149
  %change_case = alloca i8, align 1, !ctir !141
  %format_char = alloca i32, align 4, !ctir !27
  %subwidth = alloca i32, align 4, !ctir !27
  %_n = alloca i64, align 8, !ctir !149
  %_w = alloca i64, align 8, !ctir !149
  %_incr = alloca i64, align 8, !ctir !149
  %_delta = alloca i64, align 8, !ctir !149
  %_n95 = alloca i64, align 8, !ctir !149
  %_w96 = alloca i64, align 8, !ctir !149
  %_incr104 = alloca i64, align 8, !ctir !149
  %_delta124 = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %_n182 = alloca i64, align 8, !ctir !149
  %_w183 = alloca i64, align 8, !ctir !149
  %_incr191 = alloca i64, align 8, !ctir !149
  %_delta211 = alloca i64, align 8, !ctir !149
  %ufmt = alloca [5 x i8], align 1, !ctir !1946
  %u = alloca i8*, align 8, !ctir !143
  %ubuf = alloca [1024 x i8], align 16, !ctir !1947
  %len233 = alloca i64, align 8, !ctir !149
  %_n251 = alloca i64, align 8, !ctir !149
  %_w253 = alloca i64, align 8, !ctir !149
  %_incr261 = alloca i64, align 8, !ctir !149
  %_delta281 = alloca i64, align 8, !ctir !149
  %century = alloca i32, align 4, !ctir !27
  %_n437 = alloca i64, align 8, !ctir !149
  %_w438 = alloca i64, align 8, !ctir !149
  %_incr446 = alloca i64, align 8, !ctir !149
  %_delta466 = alloca i64, align 8, !ctir !149
  %padding = alloca i32, align 4, !ctir !27
  %_n525 = alloca i64, align 8, !ctir !149
  %_w526 = alloca i64, align 8, !ctir !149
  %_incr534 = alloca i64, align 8, !ctir !149
  %_delta554 = alloca i64, align 8, !ctir !149
  %_n584 = alloca i64, align 8, !ctir !149
  %_w585 = alloca i64, align 8, !ctir !149
  %_incr593 = alloca i64, align 8, !ctir !149
  %_delta613 = alloca i64, align 8, !ctir !149
  %_n646 = alloca i64, align 8, !ctir !149
  %_w647 = alloca i64, align 8, !ctir !149
  %_incr655 = alloca i64, align 8, !ctir !149
  %_delta675 = alloca i64, align 8, !ctir !149
  %_n698 = alloca i64, align 8, !ctir !149
  %_w704 = alloca i64, align 8, !ctir !149
  %_incr712 = alloca i64, align 8, !ctir !149
  %_delta732 = alloca i64, align 8, !ctir !149
  %j = alloca i32, align 4, !ctir !27
  %_n867 = alloca i64, align 8, !ctir !149
  %_w868 = alloca i64, align 8, !ctir !149
  %_incr876 = alloca i64, align 8, !ctir !149
  %_delta896 = alloca i64, align 8, !ctir !149
  %ltm = alloca %struct.tm, align 8, !ctir !1920
  %t = alloca i64, align 8, !ctir !162
  %d = alloca i32, align 4, !ctir !27
  %_n971 = alloca i64, align 8, !ctir !149
  %_w972 = alloca i64, align 8, !ctir !149
  %_incr980 = alloca i64, align 8, !ctir !149
  %_delta1000 = alloca i64, align 8, !ctir !149
  %year = alloca i32, align 4, !ctir !27
  %year_adjust = alloca i32, align 4, !ctir !27
  %days = alloca i32, align 4, !ctir !27
  %d1080 = alloca i32, align 4, !ctir !27
  %yy = alloca i32, align 4, !ctir !27
  %yy1197 = alloca i32, align 4, !ctir !27
  %_n1221 = alloca i64, align 8, !ctir !149
  %_w1223 = alloca i64, align 8, !ctir !149
  %_incr1231 = alloca i64, align 8, !ctir !149
  %_delta1251 = alloca i64, align 8, !ctir !149
  %diff = alloca i32, align 4, !ctir !27
  %hour_diff = alloca i32, align 4, !ctir !27
  %min_diff = alloca i32, align 4, !ctir !27
  %sec_diff = alloca i32, align 4, !ctir !27
  %flen = alloca i32, align 4, !ctir !27
  %_n1367 = alloca i64, align 8, !ctir !149
  %_w1369 = alloca i64, align 8, !ctir !149
  %_incr1377 = alloca i64, align 8, !ctir !149
  %_delta1397 = alloca i64, align 8, !ctir !149
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15664, metadata !DIExpression()), !dbg !15665
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15666, metadata !DIExpression()), !dbg !15667
  store i8* %format, i8** %format.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15668, metadata !DIExpression()), !dbg !15669
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15670, metadata !DIExpression()), !dbg !15671
  %frombool = zext i1 %upcase to i8
  store i8 %frombool, i8* %upcase.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %upcase.addr, metadata !15672, metadata !DIExpression()), !dbg !15673
  store i32 %yr_spec, i32* %yr_spec.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %yr_spec.addr, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  store i8* %tzset_called, i8** %tzset_called.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tzset_called.addr, metadata !15678, metadata !DIExpression()), !dbg !15679
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15680, metadata !DIExpression()), !dbg !15681
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15682, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.declare(metadata i32* %hour12, metadata !15683, metadata !DIExpression()), !dbg !15684
  %0 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15685, !tbaa !2442
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 2, !dbg !15686, !ctir !1919
  %1 = load i32, i32* %tm_hour, align 8, !dbg !15686, !tbaa !15687, !ctir !27
  store i32 %1, i32* %hour12, align 4, !dbg !15684, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !15688, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15690, metadata !DIExpression()), !dbg !15691
  store i64 0, i64* %i, align 8, !dbg !15691, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15692, metadata !DIExpression()), !dbg !15693
  %2 = load i8*, i8** %s.addr, align 8, !dbg !15694, !tbaa !2442
  store i8* %2, i8** %p, align 8, !dbg !15693, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %f, metadata !15695, metadata !DIExpression()), !dbg !15696
  store i8* null, i8** %zone, align 8, !dbg !15697, !tbaa !2442
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15698, !tbaa !2442
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 10, !dbg !15699, !ctir !1919
  %4 = load i8*, i8** %tm_zone, align 8, !dbg !15699, !tbaa !15700, !ctir !146
  store i8* %4, i8** %zone, align 8, !dbg !15701, !tbaa !2442
  %5 = load i8*, i8** %zone, align 8, !dbg !15702, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !15702
  br i1 %tobool, label %if.end, label %if.then, !dbg !15704

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.361, i64 0, i64 0), i8** %zone, align 8, !dbg !15705, !tbaa !2442
  br label %if.end, !dbg !15706

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %hour12, align 4, !dbg !15707, !tbaa !2436
  %cmp = icmp sgt i32 %6, 12, !dbg !15709
  br i1 %cmp, label %if.then1, label %if.else, !dbg !15710

if.then1:                                         ; preds = %if.end
  %7 = load i32, i32* %hour12, align 4, !dbg !15711, !tbaa !2436
  %sub = sub nsw i32 %7, 12, !dbg !15711
  store i32 %sub, i32* %hour12, align 4, !dbg !15711, !tbaa !2436
  br label %if.end5, !dbg !15712

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %hour12, align 4, !dbg !15713, !tbaa !2436
  %cmp2 = icmp eq i32 %8, 0, !dbg !15715
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !15716

if.then3:                                         ; preds = %if.else
  store i32 12, i32* %hour12, align 4, !dbg !15717, !tbaa !2436
  br label %if.end4, !dbg !15718

if.end4:                                          ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end4, %if.then1
  %9 = load i8*, i8** %format.addr, align 8, !dbg !15719, !tbaa !2442
  store i8* %9, i8** %f, align 8, !dbg !15721, !tbaa !2442
  br label %for.cond, !dbg !15722

for.cond:                                         ; preds = %for.inc1436, %if.end5
  %10 = load i8*, i8** %f, align 8, !dbg !15723, !tbaa !2442
  %11 = load i8, i8* %10, align 1, !dbg !15725, !tbaa !2497, !ctir !147
  %conv = sext i8 %11 to i32, !dbg !15725
  %cmp6 = icmp ne i32 %conv, 0, !dbg !15726
  br i1 %cmp6, label %for.body, label %for.end1438, !dbg !15727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !15728, metadata !DIExpression()), !dbg !15730
  store i32 0, i32* %pad, align 4, !dbg !15730, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %modifier, metadata !15731, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !15733, metadata !DIExpression()), !dbg !15734
  store i32 0, i32* %digits, align 4, !dbg !15734, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %number_value, metadata !15735, metadata !DIExpression()), !dbg !15736
  call void @llvm.dbg.declare(metadata i32* %u_number_value, metadata !15737, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.declare(metadata i8* %negative_number, metadata !15739, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.declare(metadata i8* %always_output_a_sign, metadata !15741, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.declare(metadata i32* %tz_colon_mask, metadata !15743, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.declare(metadata i8** %subfmt, metadata !15745, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.declare(metadata i8* %sign_char, metadata !15747, metadata !DIExpression()), !dbg !15748
  call void @llvm.dbg.declare(metadata i8** %bufp, metadata !15749, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.declare(metadata [23 x i8]* %buf, metadata !15751, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.declare(metadata i8* %to_lowcase, metadata !15753, metadata !DIExpression()), !dbg !15754
  store i8 0, i8* %to_lowcase, align 1, !dbg !15754, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %to_uppcase, metadata !15755, metadata !DIExpression()), !dbg !15756
  %12 = load i8, i8* %upcase.addr, align 1, !dbg !15757, !tbaa !2461
  %tobool8 = trunc i8 %12 to i1, !dbg !15757
  %frombool9 = zext i1 %tobool8 to i8, !dbg !15756
  store i8 %frombool9, i8* %to_uppcase, align 1, !dbg !15756, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %colons, metadata !15758, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.declare(metadata i8* %change_case, metadata !15760, metadata !DIExpression()), !dbg !15761
  store i8 0, i8* %change_case, align 1, !dbg !15761, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %format_char, metadata !15762, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.declare(metadata i32* %subwidth, metadata !15764, metadata !DIExpression()), !dbg !15765
  %13 = load i8*, i8** %f, align 8, !dbg !15766, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !15768, !tbaa !2497, !ctir !147
  %conv10 = sext i8 %14 to i32, !dbg !15768
  %cmp11 = icmp ne i32 %conv10, 37, !dbg !15769
  br i1 %cmp11, label %if.then13, label %if.end48, !dbg !15770

if.then13:                                        ; preds = %for.body
  br label %do.body, !dbg !15771

do.body:                                          ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i64* %_n, metadata !15773, metadata !DIExpression()), !dbg !15775
  store i64 1, i64* %_n, align 8, !dbg !15775, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w, metadata !15776, metadata !DIExpression()), !dbg !15775
  %15 = load i32, i32* %width.addr, align 4, !dbg !15775, !tbaa !2436
  %cmp14 = icmp slt i32 %15, 0, !dbg !15775
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !15775

cond.true:                                        ; preds = %do.body
  br label %cond.end, !dbg !15775

cond.false:                                       ; preds = %do.body
  %16 = load i32, i32* %width.addr, align 4, !dbg !15775, !tbaa !2436
  br label %cond.end, !dbg !15775

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %16, %cond.false ], !dbg !15775
  %conv16 = sext i32 %cond to i64, !dbg !15775
  store i64 %conv16, i64* %_w, align 8, !dbg !15775, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr, metadata !15777, metadata !DIExpression()), !dbg !15775
  %17 = load i64, i64* %_n, align 8, !dbg !15775, !tbaa !2579
  %18 = load i64, i64* %_w, align 8, !dbg !15775, !tbaa !2579
  %cmp17 = icmp ult i64 %17, %18, !dbg !15775
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !15775

cond.true19:                                      ; preds = %cond.end
  %19 = load i64, i64* %_w, align 8, !dbg !15775, !tbaa !2579
  br label %cond.end21, !dbg !15775

cond.false20:                                     ; preds = %cond.end
  %20 = load i64, i64* %_n, align 8, !dbg !15775, !tbaa !2579
  br label %cond.end21, !dbg !15775

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i64 [ %19, %cond.true19 ], [ %20, %cond.false20 ], !dbg !15775
  store i64 %cond22, i64* %_incr, align 8, !dbg !15775, !tbaa !2579
  %21 = load i64, i64* %_incr, align 8, !dbg !15778, !tbaa !2579
  %22 = load i64, i64* %maxsize.addr, align 8, !dbg !15778, !tbaa !2579
  %23 = load i64, i64* %i, align 8, !dbg !15778, !tbaa !2579
  %sub23 = sub i64 %22, %23, !dbg !15778
  %cmp24 = icmp uge i64 %21, %sub23, !dbg !15778
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !15775

if.then26:                                        ; preds = %cond.end21
  store i64 0, i64* %retval, align 8, !dbg !15778
  br label %return, !dbg !15778

if.end27:                                         ; preds = %cond.end21
  %24 = load i8*, i8** %p, align 8, !dbg !15780, !tbaa !2442
  %tobool28 = icmp ne i8* %24, null, !dbg !15780
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !15775

if.then29:                                        ; preds = %if.end27
  %25 = load i32, i32* %digits, align 4, !dbg !15782, !tbaa !2436
  %cmp30 = icmp eq i32 %25, 0, !dbg !15782
  br i1 %cmp30, label %land.lhs.true, label %if.end45, !dbg !15782

land.lhs.true:                                    ; preds = %if.then29
  %26 = load i64, i64* %_n, align 8, !dbg !15782, !tbaa !2579
  %27 = load i64, i64* %_w, align 8, !dbg !15782, !tbaa !2579
  %cmp32 = icmp ult i64 %26, %27, !dbg !15782
  br i1 %cmp32, label %if.then34, label %if.end45, !dbg !15785

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %_delta, metadata !15786, metadata !DIExpression()), !dbg !15788
  %28 = load i32, i32* %width.addr, align 4, !dbg !15788, !tbaa !2436
  %conv35 = sext i32 %28 to i64, !dbg !15788
  %29 = load i64, i64* %_n, align 8, !dbg !15788, !tbaa !2579
  %sub36 = sub i64 %conv35, %29, !dbg !15788
  store i64 %sub36, i64* %_delta, align 8, !dbg !15788, !tbaa !2579
  %30 = load i32, i32* %pad, align 4, !dbg !15789, !tbaa !2436
  %cmp37 = icmp eq i32 %30, 48, !dbg !15789
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !15789

lor.lhs.false:                                    ; preds = %if.then34
  %31 = load i32, i32* %pad, align 4, !dbg !15789, !tbaa !2436
  %cmp39 = icmp eq i32 %31, 43, !dbg !15789
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !15788

if.then41:                                        ; preds = %lor.lhs.false, %if.then34
  %32 = load i8*, i8** %p, align 8, !dbg !15789, !tbaa !2442
  %33 = load i64, i64* %_delta, align 8, !dbg !15789, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 48, i64 %33, i1 false), !dbg !15789
  %34 = load i64, i64* %_delta, align 8, !dbg !15789, !tbaa !2579
  %35 = load i8*, i8** %p, align 8, !dbg !15789, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !15789
  store i8* %add.ptr, i8** %p, align 8, !dbg !15789, !tbaa !2442
  br label %if.end44, !dbg !15789

if.else42:                                        ; preds = %lor.lhs.false
  %36 = load i8*, i8** %p, align 8, !dbg !15789, !tbaa !2442
  %37 = load i64, i64* %_delta, align 8, !dbg !15789, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 32, i64 %37, i1 false), !dbg !15789
  %38 = load i64, i64* %_delta, align 8, !dbg !15789, !tbaa !2579
  %39 = load i8*, i8** %p, align 8, !dbg !15789, !tbaa !2442
  %add.ptr43 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !15789
  store i8* %add.ptr43, i8** %p, align 8, !dbg !15789, !tbaa !2442
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  br label %if.end45, !dbg !15788

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.then29
  %40 = load i8*, i8** %f, align 8, !dbg !15785, !tbaa !2442
  %41 = load i8, i8* %40, align 1, !dbg !15785, !tbaa !2497, !ctir !147
  %42 = load i8*, i8** %p, align 8, !dbg !15785, !tbaa !2442
  store i8 %41, i8* %42, align 1, !dbg !15785, !tbaa !2497, !ctir !144
  %43 = load i64, i64* %_n, align 8, !dbg !15785, !tbaa !2579
  %44 = load i8*, i8** %p, align 8, !dbg !15785, !tbaa !2442
  %add.ptr46 = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !15785
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15785, !tbaa !2442
  br label %if.end47, !dbg !15785

if.end47:                                         ; preds = %if.end45, %if.end27
  %45 = load i64, i64* %_incr, align 8, !dbg !15775, !tbaa !2579
  %46 = load i64, i64* %i, align 8, !dbg !15775, !tbaa !2579
  %add = add i64 %46, %45, !dbg !15775
  store i64 %add, i64* %i, align 8, !dbg !15775, !tbaa !2579
  br label %do.end, !dbg !15775

do.end:                                           ; preds = %if.end47
  br label %for.inc1436, !dbg !15791

if.end48:                                         ; preds = %for.body
  br label %while.body, !dbg !15792

while.body:                                       ; preds = %if.end48, %sw.bb, %sw.bb51, %sw.bb52
  %47 = load i8*, i8** %f, align 8, !dbg !15793, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !15793
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !15793, !tbaa !2442
  %48 = load i8, i8* %incdec.ptr, align 1, !dbg !15795, !tbaa !2497, !ctir !147
  %conv49 = sext i8 %48 to i32, !dbg !15795
  switch i32 %conv49, label %sw.default [
    i32 95, label %sw.bb
    i32 45, label %sw.bb
    i32 43, label %sw.bb
    i32 48, label %sw.bb
    i32 94, label %sw.bb51
    i32 35, label %sw.bb52
  ], !dbg !15796

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %49 = load i8*, i8** %f, align 8, !dbg !15797, !tbaa !2442
  %50 = load i8, i8* %49, align 1, !dbg !15799, !tbaa !2497, !ctir !147
  %conv50 = sext i8 %50 to i32, !dbg !15799
  store i32 %conv50, i32* %pad, align 4, !dbg !15800, !tbaa !2436
  br label %while.body, !dbg !15801, !llvm.loop !15802

sw.bb51:                                          ; preds = %while.body
  store i8 1, i8* %to_uppcase, align 1, !dbg !15804, !tbaa !2461
  br label %while.body, !dbg !15805, !llvm.loop !15802

sw.bb52:                                          ; preds = %while.body
  store i8 1, i8* %change_case, align 1, !dbg !15806, !tbaa !2461
  br label %while.body, !dbg !15807, !llvm.loop !15802

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15808

sw.epilog:                                        ; preds = %sw.default
  br label %while.end, !dbg !15809

while.end:                                        ; preds = %sw.epilog
  %51 = load i8*, i8** %f, align 8, !dbg !15810, !tbaa !2442
  %52 = load i8, i8* %51, align 1, !dbg !15810, !tbaa !2497, !ctir !147
  %conv53 = sext i8 %52 to i32, !dbg !15810
  %sub54 = sub i32 %conv53, 48, !dbg !15810
  %cmp55 = icmp ule i32 %sub54, 9, !dbg !15810
  br i1 %cmp55, label %if.then57, label %if.end81, !dbg !15812

if.then57:                                        ; preds = %while.end
  store i32 0, i32* %width.addr, align 4, !dbg !15813, !tbaa !2436
  br label %do.body58, !dbg !15815

do.body58:                                        ; preds = %do.cond, %if.then57
  %53 = load i32, i32* %width.addr, align 4, !dbg !15816, !tbaa !2436
  %cmp59 = icmp sgt i32 %53, 214748364, !dbg !15819
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !15820

lor.lhs.false61:                                  ; preds = %do.body58
  %54 = load i32, i32* %width.addr, align 4, !dbg !15821, !tbaa !2436
  %cmp62 = icmp eq i32 %54, 214748364, !dbg !15822
  br i1 %cmp62, label %land.lhs.true64, label %if.else70, !dbg !15823

land.lhs.true64:                                  ; preds = %lor.lhs.false61
  %55 = load i8*, i8** %f, align 8, !dbg !15824, !tbaa !2442
  %56 = load i8, i8* %55, align 1, !dbg !15825, !tbaa !2497, !ctir !147
  %conv65 = sext i8 %56 to i32, !dbg !15825
  %sub66 = sub nsw i32 %conv65, 48, !dbg !15826
  %cmp67 = icmp sgt i32 %sub66, 7, !dbg !15827
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !15828

if.then69:                                        ; preds = %land.lhs.true64, %do.body58
  store i32 2147483647, i32* %width.addr, align 4, !dbg !15829, !tbaa !2436
  br label %if.end74, !dbg !15830

if.else70:                                        ; preds = %land.lhs.true64, %lor.lhs.false61
  %57 = load i32, i32* %width.addr, align 4, !dbg !15831, !tbaa !2436
  %mul = mul nsw i32 %57, 10, !dbg !15831
  store i32 %mul, i32* %width.addr, align 4, !dbg !15831, !tbaa !2436
  %58 = load i8*, i8** %f, align 8, !dbg !15833, !tbaa !2442
  %59 = load i8, i8* %58, align 1, !dbg !15834, !tbaa !2497, !ctir !147
  %conv71 = sext i8 %59 to i32, !dbg !15834
  %sub72 = sub nsw i32 %conv71, 48, !dbg !15835
  %60 = load i32, i32* %width.addr, align 4, !dbg !15836, !tbaa !2436
  %add73 = add nsw i32 %60, %sub72, !dbg !15836
  store i32 %add73, i32* %width.addr, align 4, !dbg !15836, !tbaa !2436
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %if.then69
  %61 = load i8*, i8** %f, align 8, !dbg !15837, !tbaa !2442
  %incdec.ptr75 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !15837
  store i8* %incdec.ptr75, i8** %f, align 8, !dbg !15837, !tbaa !2442
  br label %do.cond, !dbg !15838

do.cond:                                          ; preds = %if.end74
  %62 = load i8*, i8** %f, align 8, !dbg !15839, !tbaa !2442
  %63 = load i8, i8* %62, align 1, !dbg !15839, !tbaa !2497, !ctir !147
  %conv76 = sext i8 %63 to i32, !dbg !15839
  %sub77 = sub i32 %conv76, 48, !dbg !15839
  %cmp78 = icmp ule i32 %sub77, 9, !dbg !15839
  br i1 %cmp78, label %do.body58, label %do.end80, !dbg !15838, !llvm.loop !15840

do.end80:                                         ; preds = %do.cond
  br label %if.end81, !dbg !15842

if.end81:                                         ; preds = %do.end80, %while.end
  %64 = load i8*, i8** %f, align 8, !dbg !15843, !tbaa !2442
  %65 = load i8, i8* %64, align 1, !dbg !15844, !tbaa !2497, !ctir !147
  %conv82 = sext i8 %65 to i32, !dbg !15844
  switch i32 %conv82, label %sw.default86 [
    i32 69, label %sw.bb83
    i32 79, label %sw.bb83
  ], !dbg !15845

sw.bb83:                                          ; preds = %if.end81, %if.end81
  %66 = load i8*, i8** %f, align 8, !dbg !15846, !tbaa !2442
  %incdec.ptr84 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !15846
  store i8* %incdec.ptr84, i8** %f, align 8, !dbg !15846, !tbaa !2442
  %67 = load i8, i8* %66, align 1, !dbg !15848, !tbaa !2497, !ctir !147
  %conv85 = sext i8 %67 to i32, !dbg !15848
  store i32 %conv85, i32* %modifier, align 4, !dbg !15849, !tbaa !2436
  br label %sw.epilog87, !dbg !15850

sw.default86:                                     ; preds = %if.end81
  store i32 0, i32* %modifier, align 4, !dbg !15851, !tbaa !2436
  br label %sw.epilog87, !dbg !15852

sw.epilog87:                                      ; preds = %sw.default86, %sw.bb83
  %68 = load i8*, i8** %f, align 8, !dbg !15853, !tbaa !2442
  %69 = load i8, i8* %68, align 1, !dbg !15854, !tbaa !2497, !ctir !147
  %conv88 = sext i8 %69 to i32, !dbg !15854
  store i32 %conv88, i32* %format_char, align 4, !dbg !15855, !tbaa !2436
  %70 = load i32, i32* %format_char, align 4, !dbg !15856, !tbaa !2436
  switch i32 %70, label %sw.default1355 [
    i32 37, label %sw.bb89
    i32 97, label %sw.bb143
    i32 65, label %sw.bb151
    i32 98, label %sw.bb159
    i32 104, label %sw.bb159
    i32 66, label %sw.bb167
    i32 99, label %sw.bb175
    i32 67, label %sw.bb317
    i32 120, label %sw.bb336
    i32 68, label %sw.bb341
    i32 100, label %sw.bb346
    i32 101, label %sw.bb354
    i32 70, label %sw.bb761
    i32 72, label %sw.bb779
    i32 73, label %sw.bb788
    i32 107, label %sw.bb796
    i32 108, label %sw.bb805
    i32 106, label %sw.bb813
    i32 77, label %sw.bb826
    i32 109, label %sw.bb834
    i32 78, label %sw.bb847
    i32 110, label %sw.bb865
    i32 80, label %sw.bb915
    i32 112, label %sw.bb916
    i32 113, label %sw.bb920
    i32 82, label %sw.bb928
    i32 114, label %sw.bb929
    i32 83, label %sw.bb930
    i32 115, label %sw.bb938
    i32 88, label %sw.bb963
    i32 84, label %sw.bb968
    i32 116, label %sw.bb969
    i32 117, label %sw.bb1019
    i32 85, label %sw.bb1027
    i32 86, label %sw.bb1040
    i32 103, label %sw.bb1040
    i32 71, label %sw.bb1040
    i32 87, label %sw.bb1149
    i32 119, label %sw.bb1165
    i32 89, label %sw.bb1174
    i32 121, label %sw.bb1192
    i32 90, label %sw.bb1216
    i32 58, label %sw.bb1280
    i32 122, label %sw.bb1296
    i32 0, label %sw.bb1353
  ], !dbg !15857

sw.bb89:                                          ; preds = %sw.epilog87
  %71 = load i32, i32* %modifier, align 4, !dbg !15858, !tbaa !2436
  %cmp90 = icmp ne i32 %71, 0, !dbg !15861
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !15862

if.then92:                                        ; preds = %sw.bb89
  br label %bad_format, !dbg !15863

if.end93:                                         ; preds = %sw.bb89
  br label %do.body94, !dbg !15864

do.body94:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata i64* %_n95, metadata !15865, metadata !DIExpression()), !dbg !15867
  store i64 1, i64* %_n95, align 8, !dbg !15867, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w96, metadata !15868, metadata !DIExpression()), !dbg !15867
  %72 = load i32, i32* %width.addr, align 4, !dbg !15867, !tbaa !2436
  %cmp97 = icmp slt i32 %72, 0, !dbg !15867
  br i1 %cmp97, label %cond.true99, label %cond.false100, !dbg !15867

cond.true99:                                      ; preds = %do.body94
  br label %cond.end101, !dbg !15867

cond.false100:                                    ; preds = %do.body94
  %73 = load i32, i32* %width.addr, align 4, !dbg !15867, !tbaa !2436
  br label %cond.end101, !dbg !15867

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond102 = phi i32 [ 0, %cond.true99 ], [ %73, %cond.false100 ], !dbg !15867
  %conv103 = sext i32 %cond102 to i64, !dbg !15867
  store i64 %conv103, i64* %_w96, align 8, !dbg !15867, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr104, metadata !15869, metadata !DIExpression()), !dbg !15867
  %74 = load i64, i64* %_n95, align 8, !dbg !15867, !tbaa !2579
  %75 = load i64, i64* %_w96, align 8, !dbg !15867, !tbaa !2579
  %cmp105 = icmp ult i64 %74, %75, !dbg !15867
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !15867

cond.true107:                                     ; preds = %cond.end101
  %76 = load i64, i64* %_w96, align 8, !dbg !15867, !tbaa !2579
  br label %cond.end109, !dbg !15867

cond.false108:                                    ; preds = %cond.end101
  %77 = load i64, i64* %_n95, align 8, !dbg !15867, !tbaa !2579
  br label %cond.end109, !dbg !15867

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i64 [ %76, %cond.true107 ], [ %77, %cond.false108 ], !dbg !15867
  store i64 %cond110, i64* %_incr104, align 8, !dbg !15867, !tbaa !2579
  %78 = load i64, i64* %_incr104, align 8, !dbg !15870, !tbaa !2579
  %79 = load i64, i64* %maxsize.addr, align 8, !dbg !15870, !tbaa !2579
  %80 = load i64, i64* %i, align 8, !dbg !15870, !tbaa !2579
  %sub111 = sub i64 %79, %80, !dbg !15870
  %cmp112 = icmp uge i64 %78, %sub111, !dbg !15870
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !15867

if.then114:                                       ; preds = %cond.end109
  store i64 0, i64* %retval, align 8, !dbg !15870
  br label %return, !dbg !15870

if.end115:                                        ; preds = %cond.end109
  %81 = load i8*, i8** %p, align 8, !dbg !15872, !tbaa !2442
  %tobool116 = icmp ne i8* %81, null, !dbg !15872
  br i1 %tobool116, label %if.then117, label %if.end139, !dbg !15867

if.then117:                                       ; preds = %if.end115
  %82 = load i32, i32* %digits, align 4, !dbg !15874, !tbaa !2436
  %cmp118 = icmp eq i32 %82, 0, !dbg !15874
  br i1 %cmp118, label %land.lhs.true120, label %if.end137, !dbg !15874

land.lhs.true120:                                 ; preds = %if.then117
  %83 = load i64, i64* %_n95, align 8, !dbg !15874, !tbaa !2579
  %84 = load i64, i64* %_w96, align 8, !dbg !15874, !tbaa !2579
  %cmp121 = icmp ult i64 %83, %84, !dbg !15874
  br i1 %cmp121, label %if.then123, label %if.end137, !dbg !15877

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i64* %_delta124, metadata !15878, metadata !DIExpression()), !dbg !15880
  %85 = load i32, i32* %width.addr, align 4, !dbg !15880, !tbaa !2436
  %conv125 = sext i32 %85 to i64, !dbg !15880
  %86 = load i64, i64* %_n95, align 8, !dbg !15880, !tbaa !2579
  %sub126 = sub i64 %conv125, %86, !dbg !15880
  store i64 %sub126, i64* %_delta124, align 8, !dbg !15880, !tbaa !2579
  %87 = load i32, i32* %pad, align 4, !dbg !15881, !tbaa !2436
  %cmp127 = icmp eq i32 %87, 48, !dbg !15881
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !15881

lor.lhs.false129:                                 ; preds = %if.then123
  %88 = load i32, i32* %pad, align 4, !dbg !15881, !tbaa !2436
  %cmp130 = icmp eq i32 %88, 43, !dbg !15881
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !15880

if.then132:                                       ; preds = %lor.lhs.false129, %if.then123
  %89 = load i8*, i8** %p, align 8, !dbg !15881, !tbaa !2442
  %90 = load i64, i64* %_delta124, align 8, !dbg !15881, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 48, i64 %90, i1 false), !dbg !15881
  %91 = load i64, i64* %_delta124, align 8, !dbg !15881, !tbaa !2579
  %92 = load i8*, i8** %p, align 8, !dbg !15881, !tbaa !2442
  %add.ptr133 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !15881
  store i8* %add.ptr133, i8** %p, align 8, !dbg !15881, !tbaa !2442
  br label %if.end136, !dbg !15881

if.else134:                                       ; preds = %lor.lhs.false129
  %93 = load i8*, i8** %p, align 8, !dbg !15881, !tbaa !2442
  %94 = load i64, i64* %_delta124, align 8, !dbg !15881, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 32, i64 %94, i1 false), !dbg !15881
  %95 = load i64, i64* %_delta124, align 8, !dbg !15881, !tbaa !2579
  %96 = load i8*, i8** %p, align 8, !dbg !15881, !tbaa !2442
  %add.ptr135 = getelementptr inbounds i8, i8* %96, i64 %95, !dbg !15881
  store i8* %add.ptr135, i8** %p, align 8, !dbg !15881, !tbaa !2442
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137, !dbg !15880

if.end137:                                        ; preds = %if.end136, %land.lhs.true120, %if.then117
  %97 = load i8*, i8** %f, align 8, !dbg !15877, !tbaa !2442
  %98 = load i8, i8* %97, align 1, !dbg !15877, !tbaa !2497, !ctir !147
  %99 = load i8*, i8** %p, align 8, !dbg !15877, !tbaa !2442
  store i8 %98, i8* %99, align 1, !dbg !15877, !tbaa !2497, !ctir !144
  %100 = load i64, i64* %_n95, align 8, !dbg !15877, !tbaa !2579
  %101 = load i8*, i8** %p, align 8, !dbg !15877, !tbaa !2442
  %add.ptr138 = getelementptr inbounds i8, i8* %101, i64 %100, !dbg !15877
  store i8* %add.ptr138, i8** %p, align 8, !dbg !15877, !tbaa !2442
  br label %if.end139, !dbg !15877

if.end139:                                        ; preds = %if.end137, %if.end115
  %102 = load i64, i64* %_incr104, align 8, !dbg !15867, !tbaa !2579
  %103 = load i64, i64* %i, align 8, !dbg !15867, !tbaa !2579
  %add140 = add i64 %103, %102, !dbg !15867
  store i64 %add140, i64* %i, align 8, !dbg !15867, !tbaa !2579
  br label %do.end142, !dbg !15867

do.end142:                                        ; preds = %if.end139
  br label %sw.epilog1435, !dbg !15883

sw.bb143:                                         ; preds = %sw.epilog87
  %104 = load i32, i32* %modifier, align 4, !dbg !15884, !tbaa !2436
  %cmp144 = icmp ne i32 %104, 0, !dbg !15886
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !15887

if.then146:                                       ; preds = %sw.bb143
  br label %bad_format, !dbg !15888

if.end147:                                        ; preds = %sw.bb143
  %105 = load i8, i8* %change_case, align 1, !dbg !15889, !tbaa !2461
  %tobool148 = trunc i8 %105 to i1, !dbg !15889
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !15891

if.then149:                                       ; preds = %if.end147
  store i8 1, i8* %to_uppcase, align 1, !dbg !15892, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15894, !tbaa !2461
  br label %if.end150, !dbg !15895

if.end150:                                        ; preds = %if.then149, %if.end147
  br label %underlying_strftime, !dbg !15896

sw.bb151:                                         ; preds = %sw.epilog87
  %106 = load i32, i32* %modifier, align 4, !dbg !15897, !tbaa !2436
  %cmp152 = icmp ne i32 %106, 0, !dbg !15899
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !15900

if.then154:                                       ; preds = %sw.bb151
  br label %bad_format, !dbg !15901

if.end155:                                        ; preds = %sw.bb151
  %107 = load i8, i8* %change_case, align 1, !dbg !15902, !tbaa !2461
  %tobool156 = trunc i8 %107 to i1, !dbg !15902
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !15904

if.then157:                                       ; preds = %if.end155
  store i8 1, i8* %to_uppcase, align 1, !dbg !15905, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15907, !tbaa !2461
  br label %if.end158, !dbg !15908

if.end158:                                        ; preds = %if.then157, %if.end155
  br label %underlying_strftime, !dbg !15909

sw.bb159:                                         ; preds = %sw.epilog87, %sw.epilog87
  %108 = load i8, i8* %change_case, align 1, !dbg !15910, !tbaa !2461
  %tobool160 = trunc i8 %108 to i1, !dbg !15910
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !15912

if.then161:                                       ; preds = %sw.bb159
  store i8 1, i8* %to_uppcase, align 1, !dbg !15913, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15915, !tbaa !2461
  br label %if.end162, !dbg !15916

if.end162:                                        ; preds = %if.then161, %sw.bb159
  %109 = load i32, i32* %modifier, align 4, !dbg !15917, !tbaa !2436
  %cmp163 = icmp eq i32 %109, 69, !dbg !15919
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !15920

if.then165:                                       ; preds = %if.end162
  br label %bad_format, !dbg !15921

if.end166:                                        ; preds = %if.end162
  br label %underlying_strftime, !dbg !15922

sw.bb167:                                         ; preds = %sw.epilog87
  %110 = load i32, i32* %modifier, align 4, !dbg !15923, !tbaa !2436
  %cmp168 = icmp eq i32 %110, 69, !dbg !15925
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !15926

if.then170:                                       ; preds = %sw.bb167
  br label %bad_format, !dbg !15927

if.end171:                                        ; preds = %sw.bb167
  %111 = load i8, i8* %change_case, align 1, !dbg !15928, !tbaa !2461
  %tobool172 = trunc i8 %111 to i1, !dbg !15928
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !15930

if.then173:                                       ; preds = %if.end171
  store i8 1, i8* %to_uppcase, align 1, !dbg !15931, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15933, !tbaa !2461
  br label %if.end174, !dbg !15934

if.end174:                                        ; preds = %if.then173, %if.end171
  br label %underlying_strftime, !dbg !15935

sw.bb175:                                         ; preds = %sw.epilog87
  %112 = load i32, i32* %modifier, align 4, !dbg !15936, !tbaa !2436
  %cmp176 = icmp eq i32 %112, 79, !dbg !15938
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !15939

if.then178:                                       ; preds = %sw.bb175
  br label %bad_format, !dbg !15940

if.end179:                                        ; preds = %sw.bb175
  br label %underlying_strftime, !dbg !15941

subformat:                                        ; preds = %sw.bb968, %sw.bb928, %if.end345
  call void @llvm.dbg.label(metadata !15942), !dbg !15943
  store i32 -1, i32* %subwidth, align 4, !dbg !15944, !tbaa !2436
  br label %subformat_width, !dbg !15945

subformat_width:                                  ; preds = %if.end778, %subformat
  call void @llvm.dbg.label(metadata !15946), !dbg !15947
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15948, metadata !DIExpression()), !dbg !15950
  %113 = load i8*, i8** %subfmt, align 8, !dbg !15951, !tbaa !2442
  %114 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15952, !tbaa !2442
  %115 = load i8, i8* %to_uppcase, align 1, !dbg !15953, !tbaa !2461
  %tobool180 = trunc i8 %115 to i1, !dbg !15953
  %116 = load i32, i32* %pad, align 4, !dbg !15954, !tbaa !2436
  %117 = load i32, i32* %subwidth, align 4, !dbg !15955, !tbaa !2436
  %118 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15956, !tbaa !2442
  %119 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15957, !tbaa !2442
  %120 = load i32, i32* %ns.addr, align 4, !dbg !15957, !tbaa !2436
  %call = call i64 @__strftime_internal(i8* null, i64 -1, i8* %113, %struct.tm* %114, i1 zeroext %tobool180, i32 %116, i32 %117, i8* %118, %struct.tm_zone* %119, i32 %120), !dbg !15958
  store i64 %call, i64* %len, align 8, !dbg !15950, !tbaa !2579
  br label %do.body181, !dbg !15959

do.body181:                                       ; preds = %subformat_width
  call void @llvm.dbg.declare(metadata i64* %_n182, metadata !15960, metadata !DIExpression()), !dbg !15962
  %121 = load i64, i64* %len, align 8, !dbg !15962, !tbaa !2579
  store i64 %121, i64* %_n182, align 8, !dbg !15962, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w183, metadata !15963, metadata !DIExpression()), !dbg !15962
  %122 = load i32, i32* %width.addr, align 4, !dbg !15962, !tbaa !2436
  %cmp184 = icmp slt i32 %122, 0, !dbg !15962
  br i1 %cmp184, label %cond.true186, label %cond.false187, !dbg !15962

cond.true186:                                     ; preds = %do.body181
  br label %cond.end188, !dbg !15962

cond.false187:                                    ; preds = %do.body181
  %123 = load i32, i32* %width.addr, align 4, !dbg !15962, !tbaa !2436
  br label %cond.end188, !dbg !15962

cond.end188:                                      ; preds = %cond.false187, %cond.true186
  %cond189 = phi i32 [ 0, %cond.true186 ], [ %123, %cond.false187 ], !dbg !15962
  %conv190 = sext i32 %cond189 to i64, !dbg !15962
  store i64 %conv190, i64* %_w183, align 8, !dbg !15962, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr191, metadata !15964, metadata !DIExpression()), !dbg !15962
  %124 = load i64, i64* %_n182, align 8, !dbg !15962, !tbaa !2579
  %125 = load i64, i64* %_w183, align 8, !dbg !15962, !tbaa !2579
  %cmp192 = icmp ult i64 %124, %125, !dbg !15962
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !15962

cond.true194:                                     ; preds = %cond.end188
  %126 = load i64, i64* %_w183, align 8, !dbg !15962, !tbaa !2579
  br label %cond.end196, !dbg !15962

cond.false195:                                    ; preds = %cond.end188
  %127 = load i64, i64* %_n182, align 8, !dbg !15962, !tbaa !2579
  br label %cond.end196, !dbg !15962

cond.end196:                                      ; preds = %cond.false195, %cond.true194
  %cond197 = phi i64 [ %126, %cond.true194 ], [ %127, %cond.false195 ], !dbg !15962
  store i64 %cond197, i64* %_incr191, align 8, !dbg !15962, !tbaa !2579
  %128 = load i64, i64* %_incr191, align 8, !dbg !15965, !tbaa !2579
  %129 = load i64, i64* %maxsize.addr, align 8, !dbg !15965, !tbaa !2579
  %130 = load i64, i64* %i, align 8, !dbg !15965, !tbaa !2579
  %sub198 = sub i64 %129, %130, !dbg !15965
  %cmp199 = icmp uge i64 %128, %sub198, !dbg !15965
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !15962

if.then201:                                       ; preds = %cond.end196
  store i64 0, i64* %retval, align 8, !dbg !15965
  br label %return, !dbg !15965

if.end202:                                        ; preds = %cond.end196
  %131 = load i8*, i8** %p, align 8, !dbg !15967, !tbaa !2442
  %tobool203 = icmp ne i8* %131, null, !dbg !15967
  br i1 %tobool203, label %if.then204, label %if.end229, !dbg !15962

if.then204:                                       ; preds = %if.end202
  %132 = load i32, i32* %digits, align 4, !dbg !15969, !tbaa !2436
  %cmp205 = icmp eq i32 %132, 0, !dbg !15969
  br i1 %cmp205, label %land.lhs.true207, label %if.end224, !dbg !15969

land.lhs.true207:                                 ; preds = %if.then204
  %133 = load i64, i64* %_n182, align 8, !dbg !15969, !tbaa !2579
  %134 = load i64, i64* %_w183, align 8, !dbg !15969, !tbaa !2579
  %cmp208 = icmp ult i64 %133, %134, !dbg !15969
  br i1 %cmp208, label %if.then210, label %if.end224, !dbg !15972

if.then210:                                       ; preds = %land.lhs.true207
  call void @llvm.dbg.declare(metadata i64* %_delta211, metadata !15973, metadata !DIExpression()), !dbg !15975
  %135 = load i32, i32* %width.addr, align 4, !dbg !15975, !tbaa !2436
  %conv212 = sext i32 %135 to i64, !dbg !15975
  %136 = load i64, i64* %_n182, align 8, !dbg !15975, !tbaa !2579
  %sub213 = sub i64 %conv212, %136, !dbg !15975
  store i64 %sub213, i64* %_delta211, align 8, !dbg !15975, !tbaa !2579
  %137 = load i32, i32* %pad, align 4, !dbg !15976, !tbaa !2436
  %cmp214 = icmp eq i32 %137, 48, !dbg !15976
  br i1 %cmp214, label %if.then219, label %lor.lhs.false216, !dbg !15976

lor.lhs.false216:                                 ; preds = %if.then210
  %138 = load i32, i32* %pad, align 4, !dbg !15976, !tbaa !2436
  %cmp217 = icmp eq i32 %138, 43, !dbg !15976
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !15975

if.then219:                                       ; preds = %lor.lhs.false216, %if.then210
  %139 = load i8*, i8** %p, align 8, !dbg !15976, !tbaa !2442
  %140 = load i64, i64* %_delta211, align 8, !dbg !15976, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %139, i8 48, i64 %140, i1 false), !dbg !15976
  %141 = load i64, i64* %_delta211, align 8, !dbg !15976, !tbaa !2579
  %142 = load i8*, i8** %p, align 8, !dbg !15976, !tbaa !2442
  %add.ptr220 = getelementptr inbounds i8, i8* %142, i64 %141, !dbg !15976
  store i8* %add.ptr220, i8** %p, align 8, !dbg !15976, !tbaa !2442
  br label %if.end223, !dbg !15976

if.else221:                                       ; preds = %lor.lhs.false216
  %143 = load i8*, i8** %p, align 8, !dbg !15976, !tbaa !2442
  %144 = load i64, i64* %_delta211, align 8, !dbg !15976, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 32, i64 %144, i1 false), !dbg !15976
  %145 = load i64, i64* %_delta211, align 8, !dbg !15976, !tbaa !2579
  %146 = load i8*, i8** %p, align 8, !dbg !15976, !tbaa !2442
  %add.ptr222 = getelementptr inbounds i8, i8* %146, i64 %145, !dbg !15976
  store i8* %add.ptr222, i8** %p, align 8, !dbg !15976, !tbaa !2442
  br label %if.end223

if.end223:                                        ; preds = %if.else221, %if.then219
  br label %if.end224, !dbg !15975

if.end224:                                        ; preds = %if.end223, %land.lhs.true207, %if.then204
  %147 = load i8*, i8** %p, align 8, !dbg !15972, !tbaa !2442
  %148 = load i64, i64* %maxsize.addr, align 8, !dbg !15972, !tbaa !2579
  %149 = load i64, i64* %i, align 8, !dbg !15972, !tbaa !2579
  %sub225 = sub i64 %148, %149, !dbg !15972
  %150 = load i8*, i8** %subfmt, align 8, !dbg !15972, !tbaa !2442
  %151 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15972, !tbaa !2442
  %152 = load i8, i8* %to_uppcase, align 1, !dbg !15972, !tbaa !2461
  %tobool226 = trunc i8 %152 to i1, !dbg !15972
  %153 = load i32, i32* %pad, align 4, !dbg !15972, !tbaa !2436
  %154 = load i32, i32* %subwidth, align 4, !dbg !15972, !tbaa !2436
  %155 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15972, !tbaa !2442
  %156 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15972, !tbaa !2442
  %157 = load i32, i32* %ns.addr, align 4, !dbg !15972, !tbaa !2436
  %call227 = call i64 @__strftime_internal(i8* %147, i64 %sub225, i8* %150, %struct.tm* %151, i1 zeroext %tobool226, i32 %153, i32 %154, i8* %155, %struct.tm_zone* %156, i32 %157), !dbg !15972
  %158 = load i64, i64* %_n182, align 8, !dbg !15972, !tbaa !2579
  %159 = load i8*, i8** %p, align 8, !dbg !15972, !tbaa !2442
  %add.ptr228 = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !15972
  store i8* %add.ptr228, i8** %p, align 8, !dbg !15972, !tbaa !2442
  br label %if.end229, !dbg !15972

if.end229:                                        ; preds = %if.end224, %if.end202
  %160 = load i64, i64* %_incr191, align 8, !dbg !15962, !tbaa !2579
  %161 = load i64, i64* %i, align 8, !dbg !15962, !tbaa !2579
  %add230 = add i64 %161, %160, !dbg !15962
  store i64 %add230, i64* %i, align 8, !dbg !15962, !tbaa !2579
  br label %do.end232, !dbg !15962

do.end232:                                        ; preds = %if.end229
  br label %sw.epilog1435, !dbg !15978

underlying_strftime:                              ; preds = %if.then1195, %if.then1177, %if.end967, %sw.bb929, %if.end919, %if.then391, %if.end340, %if.then320, %if.end179, %if.end174, %if.end166, %if.end158, %if.end150
  call void @llvm.dbg.label(metadata !15979), !dbg !15980
  call void @llvm.dbg.declare(metadata [5 x i8]* %ufmt, metadata !15981, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.declare(metadata i8** %u, metadata !15984, metadata !DIExpression()), !dbg !15985
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15986
  store i8* %arraydecay, i8** %u, align 8, !dbg !15985, !tbaa !2442
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ubuf, metadata !15987, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.declare(metadata i64* %len233, metadata !15989, metadata !DIExpression()), !dbg !15990
  %162 = load i8*, i8** %u, align 8, !dbg !15991, !tbaa !2442
  %incdec.ptr234 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !15991
  store i8* %incdec.ptr234, i8** %u, align 8, !dbg !15991, !tbaa !2442
  store i8 32, i8* %162, align 1, !dbg !15992, !tbaa !2497, !ctir !144
  %163 = load i8*, i8** %u, align 8, !dbg !15993, !tbaa !2442
  %incdec.ptr235 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !15993
  store i8* %incdec.ptr235, i8** %u, align 8, !dbg !15993, !tbaa !2442
  store i8 37, i8* %163, align 1, !dbg !15994, !tbaa !2497, !ctir !144
  %164 = load i32, i32* %modifier, align 4, !dbg !15995, !tbaa !2436
  %cmp236 = icmp ne i32 %164, 0, !dbg !15997
  br i1 %cmp236, label %if.then238, label %if.end241, !dbg !15998

if.then238:                                       ; preds = %underlying_strftime
  %165 = load i32, i32* %modifier, align 4, !dbg !15999, !tbaa !2436
  %conv239 = trunc i32 %165 to i8, !dbg !15999
  %166 = load i8*, i8** %u, align 8, !dbg !16000, !tbaa !2442
  %incdec.ptr240 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !16000
  store i8* %incdec.ptr240, i8** %u, align 8, !dbg !16000, !tbaa !2442
  store i8 %conv239, i8* %166, align 1, !dbg !16001, !tbaa !2497, !ctir !144
  br label %if.end241, !dbg !16002

if.end241:                                        ; preds = %if.then238, %underlying_strftime
  %167 = load i32, i32* %format_char, align 4, !dbg !16003, !tbaa !2436
  %conv242 = trunc i32 %167 to i8, !dbg !16003
  %168 = load i8*, i8** %u, align 8, !dbg !16004, !tbaa !2442
  %incdec.ptr243 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !16004
  store i8* %incdec.ptr243, i8** %u, align 8, !dbg !16004, !tbaa !2442
  store i8 %conv242, i8* %168, align 1, !dbg !16005, !tbaa !2497, !ctir !144
  %169 = load i8*, i8** %u, align 8, !dbg !16006, !tbaa !2442
  store i8 0, i8* %169, align 1, !dbg !16007, !tbaa !2497, !ctir !144
  %arraydecay244 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !16008
  %arraydecay245 = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !16009
  %170 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16010, !tbaa !2442
  %call246 = call i64 @strftime(i8* %arraydecay244, i64 1024, i8* %arraydecay245, %struct.tm* %170) #13, !dbg !16011
  store i64 %call246, i64* %len233, align 8, !dbg !16012, !tbaa !2579
  %171 = load i64, i64* %len233, align 8, !dbg !16013, !tbaa !2579
  %cmp247 = icmp ne i64 %171, 0, !dbg !16015
  br i1 %cmp247, label %if.then249, label %if.end316, !dbg !16016

if.then249:                                       ; preds = %if.end241
  br label %do.body250, !dbg !16017

do.body250:                                       ; preds = %if.then249
  call void @llvm.dbg.declare(metadata i64* %_n251, metadata !16018, metadata !DIExpression()), !dbg !16020
  %172 = load i64, i64* %len233, align 8, !dbg !16020, !tbaa !2579
  %sub252 = sub i64 %172, 1, !dbg !16020
  store i64 %sub252, i64* %_n251, align 8, !dbg !16020, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w253, metadata !16021, metadata !DIExpression()), !dbg !16020
  %173 = load i32, i32* %width.addr, align 4, !dbg !16020, !tbaa !2436
  %cmp254 = icmp slt i32 %173, 0, !dbg !16020
  br i1 %cmp254, label %cond.true256, label %cond.false257, !dbg !16020

cond.true256:                                     ; preds = %do.body250
  br label %cond.end258, !dbg !16020

cond.false257:                                    ; preds = %do.body250
  %174 = load i32, i32* %width.addr, align 4, !dbg !16020, !tbaa !2436
  br label %cond.end258, !dbg !16020

cond.end258:                                      ; preds = %cond.false257, %cond.true256
  %cond259 = phi i32 [ 0, %cond.true256 ], [ %174, %cond.false257 ], !dbg !16020
  %conv260 = sext i32 %cond259 to i64, !dbg !16020
  store i64 %conv260, i64* %_w253, align 8, !dbg !16020, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr261, metadata !16022, metadata !DIExpression()), !dbg !16020
  %175 = load i64, i64* %_n251, align 8, !dbg !16020, !tbaa !2579
  %176 = load i64, i64* %_w253, align 8, !dbg !16020, !tbaa !2579
  %cmp262 = icmp ult i64 %175, %176, !dbg !16020
  br i1 %cmp262, label %cond.true264, label %cond.false265, !dbg !16020

cond.true264:                                     ; preds = %cond.end258
  %177 = load i64, i64* %_w253, align 8, !dbg !16020, !tbaa !2579
  br label %cond.end266, !dbg !16020

cond.false265:                                    ; preds = %cond.end258
  %178 = load i64, i64* %_n251, align 8, !dbg !16020, !tbaa !2579
  br label %cond.end266, !dbg !16020

cond.end266:                                      ; preds = %cond.false265, %cond.true264
  %cond267 = phi i64 [ %177, %cond.true264 ], [ %178, %cond.false265 ], !dbg !16020
  store i64 %cond267, i64* %_incr261, align 8, !dbg !16020, !tbaa !2579
  %179 = load i64, i64* %_incr261, align 8, !dbg !16023, !tbaa !2579
  %180 = load i64, i64* %maxsize.addr, align 8, !dbg !16023, !tbaa !2579
  %181 = load i64, i64* %i, align 8, !dbg !16023, !tbaa !2579
  %sub268 = sub i64 %180, %181, !dbg !16023
  %cmp269 = icmp uge i64 %179, %sub268, !dbg !16023
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !16020

if.then271:                                       ; preds = %cond.end266
  store i64 0, i64* %retval, align 8, !dbg !16023
  br label %return, !dbg !16023

if.end272:                                        ; preds = %cond.end266
  %182 = load i8*, i8** %p, align 8, !dbg !16025, !tbaa !2442
  %tobool273 = icmp ne i8* %182, null, !dbg !16025
  br i1 %tobool273, label %if.then274, label %if.end312, !dbg !16020

if.then274:                                       ; preds = %if.end272
  %183 = load i32, i32* %digits, align 4, !dbg !16027, !tbaa !2436
  %cmp275 = icmp eq i32 %183, 0, !dbg !16027
  br i1 %cmp275, label %land.lhs.true277, label %if.end294, !dbg !16027

land.lhs.true277:                                 ; preds = %if.then274
  %184 = load i64, i64* %_n251, align 8, !dbg !16027, !tbaa !2579
  %185 = load i64, i64* %_w253, align 8, !dbg !16027, !tbaa !2579
  %cmp278 = icmp ult i64 %184, %185, !dbg !16027
  br i1 %cmp278, label %if.then280, label %if.end294, !dbg !16030

if.then280:                                       ; preds = %land.lhs.true277
  call void @llvm.dbg.declare(metadata i64* %_delta281, metadata !16031, metadata !DIExpression()), !dbg !16033
  %186 = load i32, i32* %width.addr, align 4, !dbg !16033, !tbaa !2436
  %conv282 = sext i32 %186 to i64, !dbg !16033
  %187 = load i64, i64* %_n251, align 8, !dbg !16033, !tbaa !2579
  %sub283 = sub i64 %conv282, %187, !dbg !16033
  store i64 %sub283, i64* %_delta281, align 8, !dbg !16033, !tbaa !2579
  %188 = load i32, i32* %pad, align 4, !dbg !16034, !tbaa !2436
  %cmp284 = icmp eq i32 %188, 48, !dbg !16034
  br i1 %cmp284, label %if.then289, label %lor.lhs.false286, !dbg !16034

lor.lhs.false286:                                 ; preds = %if.then280
  %189 = load i32, i32* %pad, align 4, !dbg !16034, !tbaa !2436
  %cmp287 = icmp eq i32 %189, 43, !dbg !16034
  br i1 %cmp287, label %if.then289, label %if.else291, !dbg !16033

if.then289:                                       ; preds = %lor.lhs.false286, %if.then280
  %190 = load i8*, i8** %p, align 8, !dbg !16034, !tbaa !2442
  %191 = load i64, i64* %_delta281, align 8, !dbg !16034, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %190, i8 48, i64 %191, i1 false), !dbg !16034
  %192 = load i64, i64* %_delta281, align 8, !dbg !16034, !tbaa !2579
  %193 = load i8*, i8** %p, align 8, !dbg !16034, !tbaa !2442
  %add.ptr290 = getelementptr inbounds i8, i8* %193, i64 %192, !dbg !16034
  store i8* %add.ptr290, i8** %p, align 8, !dbg !16034, !tbaa !2442
  br label %if.end293, !dbg !16034

if.else291:                                       ; preds = %lor.lhs.false286
  %194 = load i8*, i8** %p, align 8, !dbg !16034, !tbaa !2442
  %195 = load i64, i64* %_delta281, align 8, !dbg !16034, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %194, i8 32, i64 %195, i1 false), !dbg !16034
  %196 = load i64, i64* %_delta281, align 8, !dbg !16034, !tbaa !2579
  %197 = load i8*, i8** %p, align 8, !dbg !16034, !tbaa !2442
  %add.ptr292 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !16034
  store i8* %add.ptr292, i8** %p, align 8, !dbg !16034, !tbaa !2442
  br label %if.end293

if.end293:                                        ; preds = %if.else291, %if.then289
  br label %if.end294, !dbg !16033

if.end294:                                        ; preds = %if.end293, %land.lhs.true277, %if.then274
  %198 = load i8, i8* %to_lowcase, align 1, !dbg !16036, !tbaa !2461
  %tobool295 = trunc i8 %198 to i1, !dbg !16036
  br i1 %tobool295, label %if.then296, label %if.else300, !dbg !16030

if.then296:                                       ; preds = %if.end294
  %199 = load i8*, i8** %p, align 8, !dbg !16036, !tbaa !2442
  %arraydecay297 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !16036
  %add.ptr298 = getelementptr inbounds i8, i8* %arraydecay297, i64 1, !dbg !16036
  %200 = load i64, i64* %_n251, align 8, !dbg !16036, !tbaa !2579
  %call299 = call i8* @memcpy_lowcase(i8* %199, i8* %add.ptr298, i64 %200), !dbg !16036
  br label %if.end310, !dbg !16036

if.else300:                                       ; preds = %if.end294
  %201 = load i8, i8* %to_uppcase, align 1, !dbg !16038, !tbaa !2461
  %tobool301 = trunc i8 %201 to i1, !dbg !16038
  br i1 %tobool301, label %if.then302, label %if.else306, !dbg !16036

if.then302:                                       ; preds = %if.else300
  %202 = load i8*, i8** %p, align 8, !dbg !16038, !tbaa !2442
  %arraydecay303 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !16038
  %add.ptr304 = getelementptr inbounds i8, i8* %arraydecay303, i64 1, !dbg !16038
  %203 = load i64, i64* %_n251, align 8, !dbg !16038, !tbaa !2579
  %call305 = call i8* @memcpy_uppcase(i8* %202, i8* %add.ptr304, i64 %203), !dbg !16038
  br label %if.end309, !dbg !16038

if.else306:                                       ; preds = %if.else300
  %204 = load i8*, i8** %p, align 8, !dbg !16038, !tbaa !2442
  %arraydecay307 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !16038
  %add.ptr308 = getelementptr inbounds i8, i8* %arraydecay307, i64 1, !dbg !16038
  %205 = load i64, i64* %_n251, align 8, !dbg !16038, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 %add.ptr308, i64 %205, i1 false), !dbg !16038
  br label %if.end309

if.end309:                                        ; preds = %if.else306, %if.then302
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then296
  %206 = load i64, i64* %_n251, align 8, !dbg !16030, !tbaa !2579
  %207 = load i8*, i8** %p, align 8, !dbg !16030, !tbaa !2442
  %add.ptr311 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !16030
  store i8* %add.ptr311, i8** %p, align 8, !dbg !16030, !tbaa !2442
  br label %if.end312, !dbg !16030

if.end312:                                        ; preds = %if.end310, %if.end272
  %208 = load i64, i64* %_incr261, align 8, !dbg !16020, !tbaa !2579
  %209 = load i64, i64* %i, align 8, !dbg !16020, !tbaa !2579
  %add313 = add i64 %209, %208, !dbg !16020
  store i64 %add313, i64* %i, align 8, !dbg !16020, !tbaa !2579
  br label %do.end315, !dbg !16020

do.end315:                                        ; preds = %if.end312
  br label %if.end316, !dbg !16020

if.end316:                                        ; preds = %do.end315, %if.end241
  br label %sw.epilog1435, !dbg !16040

sw.bb317:                                         ; preds = %sw.epilog87
  %210 = load i32, i32* %modifier, align 4, !dbg !16041, !tbaa !2436
  %cmp318 = icmp eq i32 %210, 69, !dbg !16043
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !16044

if.then320:                                       ; preds = %sw.bb317
  br label %underlying_strftime, !dbg !16045

if.end321:                                        ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %century, metadata !16047, metadata !DIExpression()), !dbg !16049
  %211 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16050, !tbaa !2442
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %211, i32 0, i32 5, !dbg !16051, !ctir !1919
  %212 = load i32, i32* %tm_year, align 4, !dbg !16051, !tbaa !16052, !ctir !27
  %div = sdiv i32 %212, 100, !dbg !16053
  %add322 = add nsw i32 %div, 19, !dbg !16054
  store i32 %add322, i32* %century, align 4, !dbg !16049, !tbaa !2436
  %213 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16055, !tbaa !2442
  %tm_year323 = getelementptr inbounds %struct.tm, %struct.tm* %213, i32 0, i32 5, !dbg !16056, !ctir !1919
  %214 = load i32, i32* %tm_year323, align 4, !dbg !16056, !tbaa !16052, !ctir !27
  %rem = srem i32 %214, 100, !dbg !16057
  %cmp324 = icmp slt i32 %rem, 0, !dbg !16058
  br i1 %cmp324, label %land.rhs, label %land.end, !dbg !16059

land.rhs:                                         ; preds = %if.end321
  %215 = load i32, i32* %century, align 4, !dbg !16060, !tbaa !2436
  %cmp326 = icmp slt i32 0, %215, !dbg !16061
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end321
  %216 = phi i1 [ false, %if.end321 ], [ %cmp326, %land.rhs ], !dbg !16062
  %land.ext = zext i1 %216 to i32, !dbg !16059
  %217 = load i32, i32* %century, align 4, !dbg !16063, !tbaa !2436
  %sub328 = sub nsw i32 %217, %land.ext, !dbg !16063
  store i32 %sub328, i32* %century, align 4, !dbg !16063, !tbaa !2436
  br label %do.body329, !dbg !16064

do.body329:                                       ; preds = %land.end
  store i32 2, i32* %digits, align 4, !dbg !16065, !tbaa !2436
  %218 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16065, !tbaa !2442
  %tm_year330 = getelementptr inbounds %struct.tm, %struct.tm* %218, i32 0, i32 5, !dbg !16065, !ctir !1919
  %219 = load i32, i32* %tm_year330, align 4, !dbg !16065, !tbaa !16052, !ctir !27
  %cmp331 = icmp slt i32 %219, -1900, !dbg !16065
  %frombool333 = zext i1 %cmp331 to i8, !dbg !16065
  store i8 %frombool333, i8* %negative_number, align 1, !dbg !16065, !tbaa !2461
  %220 = load i32, i32* %century, align 4, !dbg !16065, !tbaa !2436
  store i32 %220, i32* %u_number_value, align 4, !dbg !16065, !tbaa !2436
  br label %do_yearish, !dbg !16065

do.end335:                                        ; No predecessors!
  br label %sw.bb336, !dbg !16067

sw.bb336:                                         ; preds = %sw.epilog87, %do.end335
  %221 = load i32, i32* %modifier, align 4, !dbg !16068, !tbaa !2436
  %cmp337 = icmp eq i32 %221, 79, !dbg !16070
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !16071

if.then339:                                       ; preds = %sw.bb336
  br label %bad_format, !dbg !16072

if.end340:                                        ; preds = %sw.bb336
  br label %underlying_strftime, !dbg !16073

sw.bb341:                                         ; preds = %sw.epilog87
  %222 = load i32, i32* %modifier, align 4, !dbg !16074, !tbaa !2436
  %cmp342 = icmp ne i32 %222, 0, !dbg !16076
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !16077

if.then344:                                       ; preds = %sw.bb341
  br label %bad_format, !dbg !16078

if.end345:                                        ; preds = %sw.bb341
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.362, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16079, !tbaa !2442
  br label %subformat, !dbg !16080

sw.bb346:                                         ; preds = %sw.epilog87
  %223 = load i32, i32* %modifier, align 4, !dbg !16081, !tbaa !2436
  %cmp347 = icmp eq i32 %223, 69, !dbg !16083
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !16084

if.then349:                                       ; preds = %sw.bb346
  br label %bad_format, !dbg !16085

if.end350:                                        ; preds = %sw.bb346
  br label %do.body351, !dbg !16086

do.body351:                                       ; preds = %if.end350
  store i32 2, i32* %digits, align 4, !dbg !16087, !tbaa !2436
  %224 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16087, !tbaa !2442
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %224, i32 0, i32 3, !dbg !16087, !ctir !1919
  %225 = load i32, i32* %tm_mday, align 4, !dbg !16087, !tbaa !16089, !ctir !27
  store i32 %225, i32* %number_value, align 4, !dbg !16087, !tbaa !2436
  br label %do_number, !dbg !16087

do.end353:                                        ; No predecessors!
  br label %sw.bb354, !dbg !16087

sw.bb354:                                         ; preds = %sw.epilog87, %do.end353
  %226 = load i32, i32* %modifier, align 4, !dbg !16090, !tbaa !2436
  %cmp355 = icmp eq i32 %226, 69, !dbg !16092
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !16093

if.then357:                                       ; preds = %sw.bb354
  br label %bad_format, !dbg !16094

if.end358:                                        ; preds = %sw.bb354
  br label %do.body359, !dbg !16095

do.body359:                                       ; preds = %if.end358
  store i32 2, i32* %digits, align 4, !dbg !16096, !tbaa !2436
  %227 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16096, !tbaa !2442
  %tm_mday360 = getelementptr inbounds %struct.tm, %struct.tm* %227, i32 0, i32 3, !dbg !16096, !ctir !1919
  %228 = load i32, i32* %tm_mday360, align 4, !dbg !16096, !tbaa !16089, !ctir !27
  store i32 %228, i32* %number_value, align 4, !dbg !16096, !tbaa !2436
  br label %do_number_spacepad, !dbg !16096

do.end362:                                        ; No predecessors!
  br label %do_tz_offset, !dbg !16096

do_tz_offset:                                     ; preds = %do.body1349, %do.body1333, %do.body1327, %do.body1321, %do.end362
  call void @llvm.dbg.label(metadata !16098), !dbg !16099
  store i8 1, i8* %always_output_a_sign, align 1, !dbg !16100, !tbaa !2461
  br label %do_number_body, !dbg !16101

do_yearish:                                       ; preds = %do.body1213, %do.body1183, %do.body1131, %cond.end1126, %do.body329
  call void @llvm.dbg.label(metadata !16102), !dbg !16103
  %229 = load i32, i32* %pad, align 4, !dbg !16104, !tbaa !2436
  %cmp363 = icmp eq i32 %229, 0, !dbg !16106
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !16107

if.then365:                                       ; preds = %do_yearish
  %230 = load i32, i32* %yr_spec.addr, align 4, !dbg !16108, !tbaa !2436
  store i32 %230, i32* %pad, align 4, !dbg !16109, !tbaa !2436
  br label %if.end366, !dbg !16110

if.end366:                                        ; preds = %if.then365, %do_yearish
  %231 = load i32, i32* %pad, align 4, !dbg !16111, !tbaa !2436
  %cmp367 = icmp eq i32 %231, 43, !dbg !16112
  br i1 %cmp367, label %land.rhs369, label %land.end377, !dbg !16113

land.rhs369:                                      ; preds = %if.end366
  %232 = load i32, i32* %digits, align 4, !dbg !16114, !tbaa !2436
  %cmp370 = icmp eq i32 %232, 2, !dbg !16115
  %233 = zext i1 %cmp370 to i64, !dbg !16114
  %cond372 = select i1 %cmp370, i32 99, i32 9999, !dbg !16114
  %234 = load i32, i32* %u_number_value, align 4, !dbg !16116, !tbaa !2436
  %cmp373 = icmp ult i32 %cond372, %234, !dbg !16117
  br i1 %cmp373, label %lor.end, label %lor.rhs, !dbg !16118

lor.rhs:                                          ; preds = %land.rhs369
  %235 = load i32, i32* %digits, align 4, !dbg !16119, !tbaa !2436
  %236 = load i32, i32* %width.addr, align 4, !dbg !16120, !tbaa !2436
  %cmp375 = icmp slt i32 %235, %236, !dbg !16121
  br label %lor.end, !dbg !16118

lor.end:                                          ; preds = %lor.rhs, %land.rhs369
  %237 = phi i1 [ true, %land.rhs369 ], [ %cmp375, %lor.rhs ]
  br label %land.end377

land.end377:                                      ; preds = %lor.end, %if.end366
  %238 = phi i1 [ false, %if.end366 ], [ %237, %lor.end ], !dbg !16122
  %frombool379 = zext i1 %238 to i8, !dbg !16123
  store i8 %frombool379, i8* %always_output_a_sign, align 1, !dbg !16123, !tbaa !2461
  br label %do_maybe_signed_number, !dbg !16124

do_number_spacepad:                               ; preds = %do.body810, %do.body801, %do.body359
  call void @llvm.dbg.label(metadata !16125), !dbg !16126
  %239 = load i32, i32* %pad, align 4, !dbg !16127, !tbaa !2436
  %cmp380 = icmp eq i32 %239, 0, !dbg !16129
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !16130

if.then382:                                       ; preds = %do_number_spacepad
  store i32 95, i32* %pad, align 4, !dbg !16131, !tbaa !2436
  br label %if.end383, !dbg !16132

if.end383:                                        ; preds = %if.then382, %do_number_spacepad
  br label %do_number, !dbg !16133

do_number:                                        ; preds = %do.body1170, %do.body1154, %do.body1143, %do.body1032, %do.body1020, %do.body935, %do.body862, %do.body831, %do.body793, %do.body784, %if.end383, %do.body351
  call void @llvm.dbg.label(metadata !16134), !dbg !16135
  %240 = load i32, i32* %number_value, align 4, !dbg !16136, !tbaa !2436
  %cmp384 = icmp slt i32 %240, 0, !dbg !16137
  %frombool386 = zext i1 %cmp384 to i8, !dbg !16138
  store i8 %frombool386, i8* %negative_number, align 1, !dbg !16138, !tbaa !2461
  %241 = load i32, i32* %number_value, align 4, !dbg !16139, !tbaa !2436
  store i32 %241, i32* %u_number_value, align 4, !dbg !16140, !tbaa !2436
  br label %do_signed_number, !dbg !16141

do_signed_number:                                 ; preds = %do.body921, %do.body839, %do.body818, %do_number
  call void @llvm.dbg.label(metadata !16142), !dbg !16143
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16144, !tbaa !2461
  br label %do_maybe_signed_number, !dbg !16145

do_maybe_signed_number:                           ; preds = %do_signed_number, %land.end377
  call void @llvm.dbg.label(metadata !16146), !dbg !16147
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16148, !tbaa !2436
  br label %do_number_body, !dbg !16149

do_number_body:                                   ; preds = %do_maybe_signed_number, %do_tz_offset
  call void @llvm.dbg.label(metadata !16150), !dbg !16151
  %242 = load i32, i32* %modifier, align 4, !dbg !16152, !tbaa !2436
  %cmp387 = icmp eq i32 %242, 79, !dbg !16154
  br i1 %cmp387, label %land.lhs.true389, label %if.end392, !dbg !16155

land.lhs.true389:                                 ; preds = %do_number_body
  %243 = load i8, i8* %negative_number, align 1, !dbg !16156, !tbaa !2461
  %tobool390 = trunc i8 %243 to i1, !dbg !16156
  br i1 %tobool390, label %if.end392, label %if.then391, !dbg !16157

if.then391:                                       ; preds = %land.lhs.true389
  br label %underlying_strftime, !dbg !16158

if.end392:                                        ; preds = %land.lhs.true389, %do_number_body
  %arraydecay393 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16160
  %add.ptr394 = getelementptr inbounds i8, i8* %arraydecay393, i64 23, !dbg !16161
  store i8* %add.ptr394, i8** %bufp, align 8, !dbg !16162, !tbaa !2442
  %244 = load i8, i8* %negative_number, align 1, !dbg !16163, !tbaa !2461
  %tobool395 = trunc i8 %244 to i1, !dbg !16163
  br i1 %tobool395, label %if.then396, label %if.end398, !dbg !16165

if.then396:                                       ; preds = %if.end392
  %245 = load i32, i32* %u_number_value, align 4, !dbg !16166, !tbaa !2436
  %sub397 = sub i32 0, %245, !dbg !16167
  store i32 %sub397, i32* %u_number_value, align 4, !dbg !16168, !tbaa !2436
  br label %if.end398, !dbg !16169

if.end398:                                        ; preds = %if.then396, %if.end392
  br label %do.body399, !dbg !16170

do.body399:                                       ; preds = %lor.end415, %if.end398
  %246 = load i32, i32* %tz_colon_mask, align 4, !dbg !16171, !tbaa !2436
  %and = and i32 %246, 1, !dbg !16174
  %tobool400 = icmp ne i32 %and, 0, !dbg !16174
  br i1 %tobool400, label %if.then401, label %if.end403, !dbg !16175

if.then401:                                       ; preds = %do.body399
  %247 = load i8*, i8** %bufp, align 8, !dbg !16176, !tbaa !2442
  %incdec.ptr402 = getelementptr inbounds i8, i8* %247, i32 -1, !dbg !16176
  store i8* %incdec.ptr402, i8** %bufp, align 8, !dbg !16176, !tbaa !2442
  store i8 58, i8* %incdec.ptr402, align 1, !dbg !16177, !tbaa !2497, !ctir !144
  br label %if.end403, !dbg !16178

if.end403:                                        ; preds = %if.then401, %do.body399
  %248 = load i32, i32* %tz_colon_mask, align 4, !dbg !16179, !tbaa !2436
  %shr = ashr i32 %248, 1, !dbg !16179
  store i32 %shr, i32* %tz_colon_mask, align 4, !dbg !16179, !tbaa !2436
  %249 = load i32, i32* %u_number_value, align 4, !dbg !16180, !tbaa !2436
  %rem404 = urem i32 %249, 10, !dbg !16181
  %add405 = add i32 %rem404, 48, !dbg !16182
  %conv406 = trunc i32 %add405 to i8, !dbg !16180
  %250 = load i8*, i8** %bufp, align 8, !dbg !16183, !tbaa !2442
  %incdec.ptr407 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !16183
  store i8* %incdec.ptr407, i8** %bufp, align 8, !dbg !16183, !tbaa !2442
  store i8 %conv406, i8* %incdec.ptr407, align 1, !dbg !16184, !tbaa !2497, !ctir !144
  %251 = load i32, i32* %u_number_value, align 4, !dbg !16185, !tbaa !2436
  %div408 = udiv i32 %251, 10, !dbg !16185
  store i32 %div408, i32* %u_number_value, align 4, !dbg !16185, !tbaa !2436
  br label %do.cond409, !dbg !16186

do.cond409:                                       ; preds = %if.end403
  %252 = load i32, i32* %u_number_value, align 4, !dbg !16187, !tbaa !2436
  %cmp410 = icmp ne i32 %252, 0, !dbg !16188
  br i1 %cmp410, label %lor.end415, label %lor.rhs412, !dbg !16189

lor.rhs412:                                       ; preds = %do.cond409
  %253 = load i32, i32* %tz_colon_mask, align 4, !dbg !16190, !tbaa !2436
  %cmp413 = icmp ne i32 %253, 0, !dbg !16191
  br label %lor.end415, !dbg !16189

lor.end415:                                       ; preds = %lor.rhs412, %do.cond409
  %254 = phi i1 [ true, %do.cond409 ], [ %cmp413, %lor.rhs412 ]
  br i1 %254, label %do.body399, label %do.end416, !dbg !16186, !llvm.loop !16192

do.end416:                                        ; preds = %lor.end415
  br label %do_number_sign_and_padding, !dbg !16186

do_number_sign_and_padding:                       ; preds = %do.end962, %do.end416
  call void @llvm.dbg.label(metadata !16194), !dbg !16195
  %255 = load i32, i32* %digits, align 4, !dbg !16196, !tbaa !2436
  %256 = load i32, i32* %width.addr, align 4, !dbg !16198, !tbaa !2436
  %cmp417 = icmp slt i32 %255, %256, !dbg !16199
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !16200

if.then419:                                       ; preds = %do_number_sign_and_padding
  %257 = load i32, i32* %width.addr, align 4, !dbg !16201, !tbaa !2436
  store i32 %257, i32* %digits, align 4, !dbg !16202, !tbaa !2436
  br label %if.end420, !dbg !16203

if.end420:                                        ; preds = %if.then419, %do_number_sign_and_padding
  %258 = load i8, i8* %negative_number, align 1, !dbg !16204, !tbaa !2461
  %tobool421 = trunc i8 %258 to i1, !dbg !16204
  br i1 %tobool421, label %cond.true423, label %cond.false424, !dbg !16204

cond.true423:                                     ; preds = %if.end420
  br label %cond.end428, !dbg !16204

cond.false424:                                    ; preds = %if.end420
  %259 = load i8, i8* %always_output_a_sign, align 1, !dbg !16205, !tbaa !2461
  %tobool425 = trunc i8 %259 to i1, !dbg !16205
  %260 = zext i1 %tobool425 to i64, !dbg !16205
  %cond427 = select i1 %tobool425, i32 43, i32 0, !dbg !16205
  br label %cond.end428, !dbg !16204

cond.end428:                                      ; preds = %cond.false424, %cond.true423
  %cond429 = phi i32 [ 45, %cond.true423 ], [ %cond427, %cond.false424 ], !dbg !16204
  %conv430 = trunc i32 %cond429 to i8, !dbg !16206
  store i8 %conv430, i8* %sign_char, align 1, !dbg !16207, !tbaa !2497
  %261 = load i32, i32* %pad, align 4, !dbg !16208, !tbaa !2436
  %cmp431 = icmp eq i32 %261, 45, !dbg !16210
  br i1 %cmp431, label %if.then433, label %if.else486, !dbg !16211

if.then433:                                       ; preds = %cond.end428
  %262 = load i8, i8* %sign_char, align 1, !dbg !16212, !tbaa !2497
  %tobool434 = icmp ne i8 %262, 0, !dbg !16212
  br i1 %tobool434, label %if.then435, label %if.end485, !dbg !16215

if.then435:                                       ; preds = %if.then433
  br label %do.body436, !dbg !16216

do.body436:                                       ; preds = %if.then435
  call void @llvm.dbg.declare(metadata i64* %_n437, metadata !16217, metadata !DIExpression()), !dbg !16219
  store i64 1, i64* %_n437, align 8, !dbg !16219, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w438, metadata !16220, metadata !DIExpression()), !dbg !16219
  %263 = load i32, i32* %width.addr, align 4, !dbg !16219, !tbaa !2436
  %cmp439 = icmp slt i32 %263, 0, !dbg !16219
  br i1 %cmp439, label %cond.true441, label %cond.false442, !dbg !16219

cond.true441:                                     ; preds = %do.body436
  br label %cond.end443, !dbg !16219

cond.false442:                                    ; preds = %do.body436
  %264 = load i32, i32* %width.addr, align 4, !dbg !16219, !tbaa !2436
  br label %cond.end443, !dbg !16219

cond.end443:                                      ; preds = %cond.false442, %cond.true441
  %cond444 = phi i32 [ 0, %cond.true441 ], [ %264, %cond.false442 ], !dbg !16219
  %conv445 = sext i32 %cond444 to i64, !dbg !16219
  store i64 %conv445, i64* %_w438, align 8, !dbg !16219, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr446, metadata !16221, metadata !DIExpression()), !dbg !16219
  %265 = load i64, i64* %_n437, align 8, !dbg !16219, !tbaa !2579
  %266 = load i64, i64* %_w438, align 8, !dbg !16219, !tbaa !2579
  %cmp447 = icmp ult i64 %265, %266, !dbg !16219
  br i1 %cmp447, label %cond.true449, label %cond.false450, !dbg !16219

cond.true449:                                     ; preds = %cond.end443
  %267 = load i64, i64* %_w438, align 8, !dbg !16219, !tbaa !2579
  br label %cond.end451, !dbg !16219

cond.false450:                                    ; preds = %cond.end443
  %268 = load i64, i64* %_n437, align 8, !dbg !16219, !tbaa !2579
  br label %cond.end451, !dbg !16219

cond.end451:                                      ; preds = %cond.false450, %cond.true449
  %cond452 = phi i64 [ %267, %cond.true449 ], [ %268, %cond.false450 ], !dbg !16219
  store i64 %cond452, i64* %_incr446, align 8, !dbg !16219, !tbaa !2579
  %269 = load i64, i64* %_incr446, align 8, !dbg !16222, !tbaa !2579
  %270 = load i64, i64* %maxsize.addr, align 8, !dbg !16222, !tbaa !2579
  %271 = load i64, i64* %i, align 8, !dbg !16222, !tbaa !2579
  %sub453 = sub i64 %270, %271, !dbg !16222
  %cmp454 = icmp uge i64 %269, %sub453, !dbg !16222
  br i1 %cmp454, label %if.then456, label %if.end457, !dbg !16219

if.then456:                                       ; preds = %cond.end451
  store i64 0, i64* %retval, align 8, !dbg !16222
  br label %return, !dbg !16222

if.end457:                                        ; preds = %cond.end451
  %272 = load i8*, i8** %p, align 8, !dbg !16224, !tbaa !2442
  %tobool458 = icmp ne i8* %272, null, !dbg !16224
  br i1 %tobool458, label %if.then459, label %if.end481, !dbg !16219

if.then459:                                       ; preds = %if.end457
  %273 = load i32, i32* %digits, align 4, !dbg !16226, !tbaa !2436
  %cmp460 = icmp eq i32 %273, 0, !dbg !16226
  br i1 %cmp460, label %land.lhs.true462, label %if.end479, !dbg !16226

land.lhs.true462:                                 ; preds = %if.then459
  %274 = load i64, i64* %_n437, align 8, !dbg !16226, !tbaa !2579
  %275 = load i64, i64* %_w438, align 8, !dbg !16226, !tbaa !2579
  %cmp463 = icmp ult i64 %274, %275, !dbg !16226
  br i1 %cmp463, label %if.then465, label %if.end479, !dbg !16229

if.then465:                                       ; preds = %land.lhs.true462
  call void @llvm.dbg.declare(metadata i64* %_delta466, metadata !16230, metadata !DIExpression()), !dbg !16232
  %276 = load i32, i32* %width.addr, align 4, !dbg !16232, !tbaa !2436
  %conv467 = sext i32 %276 to i64, !dbg !16232
  %277 = load i64, i64* %_n437, align 8, !dbg !16232, !tbaa !2579
  %sub468 = sub i64 %conv467, %277, !dbg !16232
  store i64 %sub468, i64* %_delta466, align 8, !dbg !16232, !tbaa !2579
  %278 = load i32, i32* %pad, align 4, !dbg !16233, !tbaa !2436
  %cmp469 = icmp eq i32 %278, 48, !dbg !16233
  br i1 %cmp469, label %if.then474, label %lor.lhs.false471, !dbg !16233

lor.lhs.false471:                                 ; preds = %if.then465
  %279 = load i32, i32* %pad, align 4, !dbg !16233, !tbaa !2436
  %cmp472 = icmp eq i32 %279, 43, !dbg !16233
  br i1 %cmp472, label %if.then474, label %if.else476, !dbg !16232

if.then474:                                       ; preds = %lor.lhs.false471, %if.then465
  %280 = load i8*, i8** %p, align 8, !dbg !16233, !tbaa !2442
  %281 = load i64, i64* %_delta466, align 8, !dbg !16233, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %280, i8 48, i64 %281, i1 false), !dbg !16233
  %282 = load i64, i64* %_delta466, align 8, !dbg !16233, !tbaa !2579
  %283 = load i8*, i8** %p, align 8, !dbg !16233, !tbaa !2442
  %add.ptr475 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !16233
  store i8* %add.ptr475, i8** %p, align 8, !dbg !16233, !tbaa !2442
  br label %if.end478, !dbg !16233

if.else476:                                       ; preds = %lor.lhs.false471
  %284 = load i8*, i8** %p, align 8, !dbg !16233, !tbaa !2442
  %285 = load i64, i64* %_delta466, align 8, !dbg !16233, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %284, i8 32, i64 %285, i1 false), !dbg !16233
  %286 = load i64, i64* %_delta466, align 8, !dbg !16233, !tbaa !2579
  %287 = load i8*, i8** %p, align 8, !dbg !16233, !tbaa !2442
  %add.ptr477 = getelementptr inbounds i8, i8* %287, i64 %286, !dbg !16233
  store i8* %add.ptr477, i8** %p, align 8, !dbg !16233, !tbaa !2442
  br label %if.end478

if.end478:                                        ; preds = %if.else476, %if.then474
  br label %if.end479, !dbg !16232

if.end479:                                        ; preds = %if.end478, %land.lhs.true462, %if.then459
  %288 = load i8, i8* %sign_char, align 1, !dbg !16229, !tbaa !2497
  %289 = load i8*, i8** %p, align 8, !dbg !16229, !tbaa !2442
  store i8 %288, i8* %289, align 1, !dbg !16229, !tbaa !2497, !ctir !144
  %290 = load i64, i64* %_n437, align 8, !dbg !16229, !tbaa !2579
  %291 = load i8*, i8** %p, align 8, !dbg !16229, !tbaa !2442
  %add.ptr480 = getelementptr inbounds i8, i8* %291, i64 %290, !dbg !16229
  store i8* %add.ptr480, i8** %p, align 8, !dbg !16229, !tbaa !2442
  br label %if.end481, !dbg !16229

if.end481:                                        ; preds = %if.end479, %if.end457
  %292 = load i64, i64* %_incr446, align 8, !dbg !16219, !tbaa !2579
  %293 = load i64, i64* %i, align 8, !dbg !16219, !tbaa !2579
  %add482 = add i64 %293, %292, !dbg !16219
  store i64 %add482, i64* %i, align 8, !dbg !16219, !tbaa !2579
  br label %do.end484, !dbg !16219

do.end484:                                        ; preds = %if.end481
  br label %if.end485, !dbg !16219

if.end485:                                        ; preds = %do.end484, %if.then433
  br label %if.end696, !dbg !16235

if.else486:                                       ; preds = %cond.end428
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !16236, metadata !DIExpression()), !dbg !16238
  %294 = load i32, i32* %digits, align 4, !dbg !16239, !tbaa !2436
  %conv487 = sext i32 %294 to i64, !dbg !16239
  %arraydecay488 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16240
  %add.ptr489 = getelementptr inbounds i8, i8* %arraydecay488, i64 23, !dbg !16241
  %295 = load i8*, i8** %bufp, align 8, !dbg !16242, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr489 to i64, !dbg !16243
  %sub.ptr.rhs.cast = ptrtoint i8* %295 to i64, !dbg !16243
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16243
  %sub490 = sub nsw i64 %conv487, %sub.ptr.sub, !dbg !16244
  %296 = load i8, i8* %sign_char, align 1, !dbg !16245, !tbaa !2497
  %tobool491 = icmp ne i8 %296, 0, !dbg !16246
  %lnot = xor i1 %tobool491, true, !dbg !16246
  %lnot492 = xor i1 %lnot, true, !dbg !16247
  %lnot.ext = zext i1 %lnot492 to i32, !dbg !16247
  %conv493 = sext i32 %lnot.ext to i64, !dbg !16247
  %sub494 = sub nsw i64 %sub490, %conv493, !dbg !16248
  %conv495 = trunc i64 %sub494 to i32, !dbg !16239
  store i32 %conv495, i32* %padding, align 4, !dbg !16238, !tbaa !2436
  %297 = load i32, i32* %padding, align 4, !dbg !16249, !tbaa !2436
  %cmp496 = icmp sgt i32 %297, 0, !dbg !16251
  br i1 %cmp496, label %if.then498, label %if.else642, !dbg !16252

if.then498:                                       ; preds = %if.else486
  %298 = load i32, i32* %pad, align 4, !dbg !16253, !tbaa !2436
  %cmp499 = icmp eq i32 %298, 95, !dbg !16256
  br i1 %cmp499, label %if.then501, label %if.else574, !dbg !16257

if.then501:                                       ; preds = %if.then498
  %299 = load i32, i32* %padding, align 4, !dbg !16258, !tbaa !2436
  %conv502 = sext i32 %299 to i64, !dbg !16261
  %300 = load i64, i64* %maxsize.addr, align 8, !dbg !16262, !tbaa !2579
  %301 = load i64, i64* %i, align 8, !dbg !16263, !tbaa !2579
  %sub503 = sub i64 %300, %301, !dbg !16264
  %cmp504 = icmp uge i64 %conv502, %sub503, !dbg !16265
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !16266

if.then506:                                       ; preds = %if.then501
  store i64 0, i64* %retval, align 8, !dbg !16267
  br label %return, !dbg !16267

if.end507:                                        ; preds = %if.then501
  %302 = load i8*, i8** %p, align 8, !dbg !16268, !tbaa !2442
  %tobool508 = icmp ne i8* %302, null, !dbg !16268
  br i1 %tobool508, label %if.then509, label %if.end512, !dbg !16270

if.then509:                                       ; preds = %if.end507
  %303 = load i8*, i8** %p, align 8, !dbg !16271, !tbaa !2442
  %304 = load i32, i32* %padding, align 4, !dbg !16271, !tbaa !2436
  %conv510 = sext i32 %304 to i64, !dbg !16271
  call void @llvm.memset.p0i8.i64(i8* align 1 %303, i8 32, i64 %conv510, i1 false), !dbg !16271
  %305 = load i32, i32* %padding, align 4, !dbg !16271, !tbaa !2436
  %306 = load i8*, i8** %p, align 8, !dbg !16271, !tbaa !2442
  %idx.ext = sext i32 %305 to i64, !dbg !16271
  %add.ptr511 = getelementptr inbounds i8, i8* %306, i64 %idx.ext, !dbg !16271
  store i8* %add.ptr511, i8** %p, align 8, !dbg !16271, !tbaa !2442
  br label %if.end512, !dbg !16271

if.end512:                                        ; preds = %if.then509, %if.end507
  %307 = load i32, i32* %padding, align 4, !dbg !16272, !tbaa !2436
  %conv513 = sext i32 %307 to i64, !dbg !16272
  %308 = load i64, i64* %i, align 8, !dbg !16273, !tbaa !2579
  %add514 = add i64 %308, %conv513, !dbg !16273
  store i64 %add514, i64* %i, align 8, !dbg !16273, !tbaa !2579
  %309 = load i32, i32* %width.addr, align 4, !dbg !16274, !tbaa !2436
  %310 = load i32, i32* %padding, align 4, !dbg !16275, !tbaa !2436
  %cmp515 = icmp sgt i32 %309, %310, !dbg !16276
  br i1 %cmp515, label %cond.true517, label %cond.false519, !dbg !16274

cond.true517:                                     ; preds = %if.end512
  %311 = load i32, i32* %width.addr, align 4, !dbg !16277, !tbaa !2436
  %312 = load i32, i32* %padding, align 4, !dbg !16278, !tbaa !2436
  %sub518 = sub nsw i32 %311, %312, !dbg !16279
  br label %cond.end520, !dbg !16274

cond.false519:                                    ; preds = %if.end512
  br label %cond.end520, !dbg !16274

cond.end520:                                      ; preds = %cond.false519, %cond.true517
  %cond521 = phi i32 [ %sub518, %cond.true517 ], [ 0, %cond.false519 ], !dbg !16274
  store i32 %cond521, i32* %width.addr, align 4, !dbg !16280, !tbaa !2436
  %313 = load i8, i8* %sign_char, align 1, !dbg !16281, !tbaa !2497
  %tobool522 = icmp ne i8 %313, 0, !dbg !16281
  br i1 %tobool522, label %if.then523, label %if.end573, !dbg !16283

if.then523:                                       ; preds = %cond.end520
  br label %do.body524, !dbg !16284

do.body524:                                       ; preds = %if.then523
  call void @llvm.dbg.declare(metadata i64* %_n525, metadata !16285, metadata !DIExpression()), !dbg !16287
  store i64 1, i64* %_n525, align 8, !dbg !16287, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w526, metadata !16288, metadata !DIExpression()), !dbg !16287
  %314 = load i32, i32* %width.addr, align 4, !dbg !16287, !tbaa !2436
  %cmp527 = icmp slt i32 %314, 0, !dbg !16287
  br i1 %cmp527, label %cond.true529, label %cond.false530, !dbg !16287

cond.true529:                                     ; preds = %do.body524
  br label %cond.end531, !dbg !16287

cond.false530:                                    ; preds = %do.body524
  %315 = load i32, i32* %width.addr, align 4, !dbg !16287, !tbaa !2436
  br label %cond.end531, !dbg !16287

cond.end531:                                      ; preds = %cond.false530, %cond.true529
  %cond532 = phi i32 [ 0, %cond.true529 ], [ %315, %cond.false530 ], !dbg !16287
  %conv533 = sext i32 %cond532 to i64, !dbg !16287
  store i64 %conv533, i64* %_w526, align 8, !dbg !16287, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr534, metadata !16289, metadata !DIExpression()), !dbg !16287
  %316 = load i64, i64* %_n525, align 8, !dbg !16287, !tbaa !2579
  %317 = load i64, i64* %_w526, align 8, !dbg !16287, !tbaa !2579
  %cmp535 = icmp ult i64 %316, %317, !dbg !16287
  br i1 %cmp535, label %cond.true537, label %cond.false538, !dbg !16287

cond.true537:                                     ; preds = %cond.end531
  %318 = load i64, i64* %_w526, align 8, !dbg !16287, !tbaa !2579
  br label %cond.end539, !dbg !16287

cond.false538:                                    ; preds = %cond.end531
  %319 = load i64, i64* %_n525, align 8, !dbg !16287, !tbaa !2579
  br label %cond.end539, !dbg !16287

cond.end539:                                      ; preds = %cond.false538, %cond.true537
  %cond540 = phi i64 [ %318, %cond.true537 ], [ %319, %cond.false538 ], !dbg !16287
  store i64 %cond540, i64* %_incr534, align 8, !dbg !16287, !tbaa !2579
  %320 = load i64, i64* %_incr534, align 8, !dbg !16290, !tbaa !2579
  %321 = load i64, i64* %maxsize.addr, align 8, !dbg !16290, !tbaa !2579
  %322 = load i64, i64* %i, align 8, !dbg !16290, !tbaa !2579
  %sub541 = sub i64 %321, %322, !dbg !16290
  %cmp542 = icmp uge i64 %320, %sub541, !dbg !16290
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !16287

if.then544:                                       ; preds = %cond.end539
  store i64 0, i64* %retval, align 8, !dbg !16290
  br label %return, !dbg !16290

if.end545:                                        ; preds = %cond.end539
  %323 = load i8*, i8** %p, align 8, !dbg !16292, !tbaa !2442
  %tobool546 = icmp ne i8* %323, null, !dbg !16292
  br i1 %tobool546, label %if.then547, label %if.end569, !dbg !16287

if.then547:                                       ; preds = %if.end545
  %324 = load i32, i32* %digits, align 4, !dbg !16294, !tbaa !2436
  %cmp548 = icmp eq i32 %324, 0, !dbg !16294
  br i1 %cmp548, label %land.lhs.true550, label %if.end567, !dbg !16294

land.lhs.true550:                                 ; preds = %if.then547
  %325 = load i64, i64* %_n525, align 8, !dbg !16294, !tbaa !2579
  %326 = load i64, i64* %_w526, align 8, !dbg !16294, !tbaa !2579
  %cmp551 = icmp ult i64 %325, %326, !dbg !16294
  br i1 %cmp551, label %if.then553, label %if.end567, !dbg !16297

if.then553:                                       ; preds = %land.lhs.true550
  call void @llvm.dbg.declare(metadata i64* %_delta554, metadata !16298, metadata !DIExpression()), !dbg !16300
  %327 = load i32, i32* %width.addr, align 4, !dbg !16300, !tbaa !2436
  %conv555 = sext i32 %327 to i64, !dbg !16300
  %328 = load i64, i64* %_n525, align 8, !dbg !16300, !tbaa !2579
  %sub556 = sub i64 %conv555, %328, !dbg !16300
  store i64 %sub556, i64* %_delta554, align 8, !dbg !16300, !tbaa !2579
  %329 = load i32, i32* %pad, align 4, !dbg !16301, !tbaa !2436
  %cmp557 = icmp eq i32 %329, 48, !dbg !16301
  br i1 %cmp557, label %if.then562, label %lor.lhs.false559, !dbg !16301

lor.lhs.false559:                                 ; preds = %if.then553
  %330 = load i32, i32* %pad, align 4, !dbg !16301, !tbaa !2436
  %cmp560 = icmp eq i32 %330, 43, !dbg !16301
  br i1 %cmp560, label %if.then562, label %if.else564, !dbg !16300

if.then562:                                       ; preds = %lor.lhs.false559, %if.then553
  %331 = load i8*, i8** %p, align 8, !dbg !16301, !tbaa !2442
  %332 = load i64, i64* %_delta554, align 8, !dbg !16301, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %331, i8 48, i64 %332, i1 false), !dbg !16301
  %333 = load i64, i64* %_delta554, align 8, !dbg !16301, !tbaa !2579
  %334 = load i8*, i8** %p, align 8, !dbg !16301, !tbaa !2442
  %add.ptr563 = getelementptr inbounds i8, i8* %334, i64 %333, !dbg !16301
  store i8* %add.ptr563, i8** %p, align 8, !dbg !16301, !tbaa !2442
  br label %if.end566, !dbg !16301

if.else564:                                       ; preds = %lor.lhs.false559
  %335 = load i8*, i8** %p, align 8, !dbg !16301, !tbaa !2442
  %336 = load i64, i64* %_delta554, align 8, !dbg !16301, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %335, i8 32, i64 %336, i1 false), !dbg !16301
  %337 = load i64, i64* %_delta554, align 8, !dbg !16301, !tbaa !2579
  %338 = load i8*, i8** %p, align 8, !dbg !16301, !tbaa !2442
  %add.ptr565 = getelementptr inbounds i8, i8* %338, i64 %337, !dbg !16301
  store i8* %add.ptr565, i8** %p, align 8, !dbg !16301, !tbaa !2442
  br label %if.end566

if.end566:                                        ; preds = %if.else564, %if.then562
  br label %if.end567, !dbg !16300

if.end567:                                        ; preds = %if.end566, %land.lhs.true550, %if.then547
  %339 = load i8, i8* %sign_char, align 1, !dbg !16297, !tbaa !2497
  %340 = load i8*, i8** %p, align 8, !dbg !16297, !tbaa !2442
  store i8 %339, i8* %340, align 1, !dbg !16297, !tbaa !2497, !ctir !144
  %341 = load i64, i64* %_n525, align 8, !dbg !16297, !tbaa !2579
  %342 = load i8*, i8** %p, align 8, !dbg !16297, !tbaa !2442
  %add.ptr568 = getelementptr inbounds i8, i8* %342, i64 %341, !dbg !16297
  store i8* %add.ptr568, i8** %p, align 8, !dbg !16297, !tbaa !2442
  br label %if.end569, !dbg !16297

if.end569:                                        ; preds = %if.end567, %if.end545
  %343 = load i64, i64* %_incr534, align 8, !dbg !16287, !tbaa !2579
  %344 = load i64, i64* %i, align 8, !dbg !16287, !tbaa !2579
  %add570 = add i64 %344, %343, !dbg !16287
  store i64 %add570, i64* %i, align 8, !dbg !16287, !tbaa !2579
  br label %do.end572, !dbg !16287

do.end572:                                        ; preds = %if.end569
  br label %if.end573, !dbg !16287

if.end573:                                        ; preds = %do.end572, %cond.end520
  br label %if.end641, !dbg !16303

if.else574:                                       ; preds = %if.then498
  %345 = load i32, i32* %digits, align 4, !dbg !16304, !tbaa !2436
  %conv575 = sext i32 %345 to i64, !dbg !16307
  %346 = load i64, i64* %maxsize.addr, align 8, !dbg !16308, !tbaa !2579
  %347 = load i64, i64* %i, align 8, !dbg !16309, !tbaa !2579
  %sub576 = sub i64 %346, %347, !dbg !16310
  %cmp577 = icmp uge i64 %conv575, %sub576, !dbg !16311
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !16312

if.then579:                                       ; preds = %if.else574
  store i64 0, i64* %retval, align 8, !dbg !16313
  br label %return, !dbg !16313

if.end580:                                        ; preds = %if.else574
  %348 = load i8, i8* %sign_char, align 1, !dbg !16314, !tbaa !2497
  %tobool581 = icmp ne i8 %348, 0, !dbg !16314
  br i1 %tobool581, label %if.then582, label %if.end632, !dbg !16316

if.then582:                                       ; preds = %if.end580
  br label %do.body583, !dbg !16317

do.body583:                                       ; preds = %if.then582
  call void @llvm.dbg.declare(metadata i64* %_n584, metadata !16318, metadata !DIExpression()), !dbg !16320
  store i64 1, i64* %_n584, align 8, !dbg !16320, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w585, metadata !16321, metadata !DIExpression()), !dbg !16320
  %349 = load i32, i32* %width.addr, align 4, !dbg !16320, !tbaa !2436
  %cmp586 = icmp slt i32 %349, 0, !dbg !16320
  br i1 %cmp586, label %cond.true588, label %cond.false589, !dbg !16320

cond.true588:                                     ; preds = %do.body583
  br label %cond.end590, !dbg !16320

cond.false589:                                    ; preds = %do.body583
  %350 = load i32, i32* %width.addr, align 4, !dbg !16320, !tbaa !2436
  br label %cond.end590, !dbg !16320

cond.end590:                                      ; preds = %cond.false589, %cond.true588
  %cond591 = phi i32 [ 0, %cond.true588 ], [ %350, %cond.false589 ], !dbg !16320
  %conv592 = sext i32 %cond591 to i64, !dbg !16320
  store i64 %conv592, i64* %_w585, align 8, !dbg !16320, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr593, metadata !16322, metadata !DIExpression()), !dbg !16320
  %351 = load i64, i64* %_n584, align 8, !dbg !16320, !tbaa !2579
  %352 = load i64, i64* %_w585, align 8, !dbg !16320, !tbaa !2579
  %cmp594 = icmp ult i64 %351, %352, !dbg !16320
  br i1 %cmp594, label %cond.true596, label %cond.false597, !dbg !16320

cond.true596:                                     ; preds = %cond.end590
  %353 = load i64, i64* %_w585, align 8, !dbg !16320, !tbaa !2579
  br label %cond.end598, !dbg !16320

cond.false597:                                    ; preds = %cond.end590
  %354 = load i64, i64* %_n584, align 8, !dbg !16320, !tbaa !2579
  br label %cond.end598, !dbg !16320

cond.end598:                                      ; preds = %cond.false597, %cond.true596
  %cond599 = phi i64 [ %353, %cond.true596 ], [ %354, %cond.false597 ], !dbg !16320
  store i64 %cond599, i64* %_incr593, align 8, !dbg !16320, !tbaa !2579
  %355 = load i64, i64* %_incr593, align 8, !dbg !16323, !tbaa !2579
  %356 = load i64, i64* %maxsize.addr, align 8, !dbg !16323, !tbaa !2579
  %357 = load i64, i64* %i, align 8, !dbg !16323, !tbaa !2579
  %sub600 = sub i64 %356, %357, !dbg !16323
  %cmp601 = icmp uge i64 %355, %sub600, !dbg !16323
  br i1 %cmp601, label %if.then603, label %if.end604, !dbg !16320

if.then603:                                       ; preds = %cond.end598
  store i64 0, i64* %retval, align 8, !dbg !16323
  br label %return, !dbg !16323

if.end604:                                        ; preds = %cond.end598
  %358 = load i8*, i8** %p, align 8, !dbg !16325, !tbaa !2442
  %tobool605 = icmp ne i8* %358, null, !dbg !16325
  br i1 %tobool605, label %if.then606, label %if.end628, !dbg !16320

if.then606:                                       ; preds = %if.end604
  %359 = load i32, i32* %digits, align 4, !dbg !16327, !tbaa !2436
  %cmp607 = icmp eq i32 %359, 0, !dbg !16327
  br i1 %cmp607, label %land.lhs.true609, label %if.end626, !dbg !16327

land.lhs.true609:                                 ; preds = %if.then606
  %360 = load i64, i64* %_n584, align 8, !dbg !16327, !tbaa !2579
  %361 = load i64, i64* %_w585, align 8, !dbg !16327, !tbaa !2579
  %cmp610 = icmp ult i64 %360, %361, !dbg !16327
  br i1 %cmp610, label %if.then612, label %if.end626, !dbg !16330

if.then612:                                       ; preds = %land.lhs.true609
  call void @llvm.dbg.declare(metadata i64* %_delta613, metadata !16331, metadata !DIExpression()), !dbg !16333
  %362 = load i32, i32* %width.addr, align 4, !dbg !16333, !tbaa !2436
  %conv614 = sext i32 %362 to i64, !dbg !16333
  %363 = load i64, i64* %_n584, align 8, !dbg !16333, !tbaa !2579
  %sub615 = sub i64 %conv614, %363, !dbg !16333
  store i64 %sub615, i64* %_delta613, align 8, !dbg !16333, !tbaa !2579
  %364 = load i32, i32* %pad, align 4, !dbg !16334, !tbaa !2436
  %cmp616 = icmp eq i32 %364, 48, !dbg !16334
  br i1 %cmp616, label %if.then621, label %lor.lhs.false618, !dbg !16334

lor.lhs.false618:                                 ; preds = %if.then612
  %365 = load i32, i32* %pad, align 4, !dbg !16334, !tbaa !2436
  %cmp619 = icmp eq i32 %365, 43, !dbg !16334
  br i1 %cmp619, label %if.then621, label %if.else623, !dbg !16333

if.then621:                                       ; preds = %lor.lhs.false618, %if.then612
  %366 = load i8*, i8** %p, align 8, !dbg !16334, !tbaa !2442
  %367 = load i64, i64* %_delta613, align 8, !dbg !16334, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %366, i8 48, i64 %367, i1 false), !dbg !16334
  %368 = load i64, i64* %_delta613, align 8, !dbg !16334, !tbaa !2579
  %369 = load i8*, i8** %p, align 8, !dbg !16334, !tbaa !2442
  %add.ptr622 = getelementptr inbounds i8, i8* %369, i64 %368, !dbg !16334
  store i8* %add.ptr622, i8** %p, align 8, !dbg !16334, !tbaa !2442
  br label %if.end625, !dbg !16334

if.else623:                                       ; preds = %lor.lhs.false618
  %370 = load i8*, i8** %p, align 8, !dbg !16334, !tbaa !2442
  %371 = load i64, i64* %_delta613, align 8, !dbg !16334, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %370, i8 32, i64 %371, i1 false), !dbg !16334
  %372 = load i64, i64* %_delta613, align 8, !dbg !16334, !tbaa !2579
  %373 = load i8*, i8** %p, align 8, !dbg !16334, !tbaa !2442
  %add.ptr624 = getelementptr inbounds i8, i8* %373, i64 %372, !dbg !16334
  store i8* %add.ptr624, i8** %p, align 8, !dbg !16334, !tbaa !2442
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then621
  br label %if.end626, !dbg !16333

if.end626:                                        ; preds = %if.end625, %land.lhs.true609, %if.then606
  %374 = load i8, i8* %sign_char, align 1, !dbg !16330, !tbaa !2497
  %375 = load i8*, i8** %p, align 8, !dbg !16330, !tbaa !2442
  store i8 %374, i8* %375, align 1, !dbg !16330, !tbaa !2497, !ctir !144
  %376 = load i64, i64* %_n584, align 8, !dbg !16330, !tbaa !2579
  %377 = load i8*, i8** %p, align 8, !dbg !16330, !tbaa !2442
  %add.ptr627 = getelementptr inbounds i8, i8* %377, i64 %376, !dbg !16330
  store i8* %add.ptr627, i8** %p, align 8, !dbg !16330, !tbaa !2442
  br label %if.end628, !dbg !16330

if.end628:                                        ; preds = %if.end626, %if.end604
  %378 = load i64, i64* %_incr593, align 8, !dbg !16320, !tbaa !2579
  %379 = load i64, i64* %i, align 8, !dbg !16320, !tbaa !2579
  %add629 = add i64 %379, %378, !dbg !16320
  store i64 %add629, i64* %i, align 8, !dbg !16320, !tbaa !2579
  br label %do.end631, !dbg !16320

do.end631:                                        ; preds = %if.end628
  br label %if.end632, !dbg !16320

if.end632:                                        ; preds = %do.end631, %if.end580
  %380 = load i8*, i8** %p, align 8, !dbg !16336, !tbaa !2442
  %tobool633 = icmp ne i8* %380, null, !dbg !16336
  br i1 %tobool633, label %if.then634, label %if.end638, !dbg !16338

if.then634:                                       ; preds = %if.end632
  %381 = load i8*, i8** %p, align 8, !dbg !16339, !tbaa !2442
  %382 = load i32, i32* %padding, align 4, !dbg !16339, !tbaa !2436
  %conv635 = sext i32 %382 to i64, !dbg !16339
  call void @llvm.memset.p0i8.i64(i8* align 1 %381, i8 48, i64 %conv635, i1 false), !dbg !16339
  %383 = load i32, i32* %padding, align 4, !dbg !16339, !tbaa !2436
  %384 = load i8*, i8** %p, align 8, !dbg !16339, !tbaa !2442
  %idx.ext636 = sext i32 %383 to i64, !dbg !16339
  %add.ptr637 = getelementptr inbounds i8, i8* %384, i64 %idx.ext636, !dbg !16339
  store i8* %add.ptr637, i8** %p, align 8, !dbg !16339, !tbaa !2442
  br label %if.end638, !dbg !16339

if.end638:                                        ; preds = %if.then634, %if.end632
  %385 = load i32, i32* %padding, align 4, !dbg !16340, !tbaa !2436
  %conv639 = sext i32 %385 to i64, !dbg !16340
  %386 = load i64, i64* %i, align 8, !dbg !16341, !tbaa !2579
  %add640 = add i64 %386, %conv639, !dbg !16341
  store i64 %add640, i64* %i, align 8, !dbg !16341, !tbaa !2579
  store i32 0, i32* %width.addr, align 4, !dbg !16342, !tbaa !2436
  br label %if.end641

if.end641:                                        ; preds = %if.end638, %if.end573
  br label %if.end695, !dbg !16343

if.else642:                                       ; preds = %if.else486
  %387 = load i8, i8* %sign_char, align 1, !dbg !16344, !tbaa !2497
  %tobool643 = icmp ne i8 %387, 0, !dbg !16344
  br i1 %tobool643, label %if.then644, label %if.end694, !dbg !16347

if.then644:                                       ; preds = %if.else642
  br label %do.body645, !dbg !16348

do.body645:                                       ; preds = %if.then644
  call void @llvm.dbg.declare(metadata i64* %_n646, metadata !16349, metadata !DIExpression()), !dbg !16351
  store i64 1, i64* %_n646, align 8, !dbg !16351, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w647, metadata !16352, metadata !DIExpression()), !dbg !16351
  %388 = load i32, i32* %width.addr, align 4, !dbg !16351, !tbaa !2436
  %cmp648 = icmp slt i32 %388, 0, !dbg !16351
  br i1 %cmp648, label %cond.true650, label %cond.false651, !dbg !16351

cond.true650:                                     ; preds = %do.body645
  br label %cond.end652, !dbg !16351

cond.false651:                                    ; preds = %do.body645
  %389 = load i32, i32* %width.addr, align 4, !dbg !16351, !tbaa !2436
  br label %cond.end652, !dbg !16351

cond.end652:                                      ; preds = %cond.false651, %cond.true650
  %cond653 = phi i32 [ 0, %cond.true650 ], [ %389, %cond.false651 ], !dbg !16351
  %conv654 = sext i32 %cond653 to i64, !dbg !16351
  store i64 %conv654, i64* %_w647, align 8, !dbg !16351, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr655, metadata !16353, metadata !DIExpression()), !dbg !16351
  %390 = load i64, i64* %_n646, align 8, !dbg !16351, !tbaa !2579
  %391 = load i64, i64* %_w647, align 8, !dbg !16351, !tbaa !2579
  %cmp656 = icmp ult i64 %390, %391, !dbg !16351
  br i1 %cmp656, label %cond.true658, label %cond.false659, !dbg !16351

cond.true658:                                     ; preds = %cond.end652
  %392 = load i64, i64* %_w647, align 8, !dbg !16351, !tbaa !2579
  br label %cond.end660, !dbg !16351

cond.false659:                                    ; preds = %cond.end652
  %393 = load i64, i64* %_n646, align 8, !dbg !16351, !tbaa !2579
  br label %cond.end660, !dbg !16351

cond.end660:                                      ; preds = %cond.false659, %cond.true658
  %cond661 = phi i64 [ %392, %cond.true658 ], [ %393, %cond.false659 ], !dbg !16351
  store i64 %cond661, i64* %_incr655, align 8, !dbg !16351, !tbaa !2579
  %394 = load i64, i64* %_incr655, align 8, !dbg !16354, !tbaa !2579
  %395 = load i64, i64* %maxsize.addr, align 8, !dbg !16354, !tbaa !2579
  %396 = load i64, i64* %i, align 8, !dbg !16354, !tbaa !2579
  %sub662 = sub i64 %395, %396, !dbg !16354
  %cmp663 = icmp uge i64 %394, %sub662, !dbg !16354
  br i1 %cmp663, label %if.then665, label %if.end666, !dbg !16351

if.then665:                                       ; preds = %cond.end660
  store i64 0, i64* %retval, align 8, !dbg !16354
  br label %return, !dbg !16354

if.end666:                                        ; preds = %cond.end660
  %397 = load i8*, i8** %p, align 8, !dbg !16356, !tbaa !2442
  %tobool667 = icmp ne i8* %397, null, !dbg !16356
  br i1 %tobool667, label %if.then668, label %if.end690, !dbg !16351

if.then668:                                       ; preds = %if.end666
  %398 = load i32, i32* %digits, align 4, !dbg !16358, !tbaa !2436
  %cmp669 = icmp eq i32 %398, 0, !dbg !16358
  br i1 %cmp669, label %land.lhs.true671, label %if.end688, !dbg !16358

land.lhs.true671:                                 ; preds = %if.then668
  %399 = load i64, i64* %_n646, align 8, !dbg !16358, !tbaa !2579
  %400 = load i64, i64* %_w647, align 8, !dbg !16358, !tbaa !2579
  %cmp672 = icmp ult i64 %399, %400, !dbg !16358
  br i1 %cmp672, label %if.then674, label %if.end688, !dbg !16361

if.then674:                                       ; preds = %land.lhs.true671
  call void @llvm.dbg.declare(metadata i64* %_delta675, metadata !16362, metadata !DIExpression()), !dbg !16364
  %401 = load i32, i32* %width.addr, align 4, !dbg !16364, !tbaa !2436
  %conv676 = sext i32 %401 to i64, !dbg !16364
  %402 = load i64, i64* %_n646, align 8, !dbg !16364, !tbaa !2579
  %sub677 = sub i64 %conv676, %402, !dbg !16364
  store i64 %sub677, i64* %_delta675, align 8, !dbg !16364, !tbaa !2579
  %403 = load i32, i32* %pad, align 4, !dbg !16365, !tbaa !2436
  %cmp678 = icmp eq i32 %403, 48, !dbg !16365
  br i1 %cmp678, label %if.then683, label %lor.lhs.false680, !dbg !16365

lor.lhs.false680:                                 ; preds = %if.then674
  %404 = load i32, i32* %pad, align 4, !dbg !16365, !tbaa !2436
  %cmp681 = icmp eq i32 %404, 43, !dbg !16365
  br i1 %cmp681, label %if.then683, label %if.else685, !dbg !16364

if.then683:                                       ; preds = %lor.lhs.false680, %if.then674
  %405 = load i8*, i8** %p, align 8, !dbg !16365, !tbaa !2442
  %406 = load i64, i64* %_delta675, align 8, !dbg !16365, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %405, i8 48, i64 %406, i1 false), !dbg !16365
  %407 = load i64, i64* %_delta675, align 8, !dbg !16365, !tbaa !2579
  %408 = load i8*, i8** %p, align 8, !dbg !16365, !tbaa !2442
  %add.ptr684 = getelementptr inbounds i8, i8* %408, i64 %407, !dbg !16365
  store i8* %add.ptr684, i8** %p, align 8, !dbg !16365, !tbaa !2442
  br label %if.end687, !dbg !16365

if.else685:                                       ; preds = %lor.lhs.false680
  %409 = load i8*, i8** %p, align 8, !dbg !16365, !tbaa !2442
  %410 = load i64, i64* %_delta675, align 8, !dbg !16365, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %409, i8 32, i64 %410, i1 false), !dbg !16365
  %411 = load i64, i64* %_delta675, align 8, !dbg !16365, !tbaa !2579
  %412 = load i8*, i8** %p, align 8, !dbg !16365, !tbaa !2442
  %add.ptr686 = getelementptr inbounds i8, i8* %412, i64 %411, !dbg !16365
  store i8* %add.ptr686, i8** %p, align 8, !dbg !16365, !tbaa !2442
  br label %if.end687

if.end687:                                        ; preds = %if.else685, %if.then683
  br label %if.end688, !dbg !16364

if.end688:                                        ; preds = %if.end687, %land.lhs.true671, %if.then668
  %413 = load i8, i8* %sign_char, align 1, !dbg !16361, !tbaa !2497
  %414 = load i8*, i8** %p, align 8, !dbg !16361, !tbaa !2442
  store i8 %413, i8* %414, align 1, !dbg !16361, !tbaa !2497, !ctir !144
  %415 = load i64, i64* %_n646, align 8, !dbg !16361, !tbaa !2579
  %416 = load i8*, i8** %p, align 8, !dbg !16361, !tbaa !2442
  %add.ptr689 = getelementptr inbounds i8, i8* %416, i64 %415, !dbg !16361
  store i8* %add.ptr689, i8** %p, align 8, !dbg !16361, !tbaa !2442
  br label %if.end690, !dbg !16361

if.end690:                                        ; preds = %if.end688, %if.end666
  %417 = load i64, i64* %_incr655, align 8, !dbg !16351, !tbaa !2579
  %418 = load i64, i64* %i, align 8, !dbg !16351, !tbaa !2579
  %add691 = add i64 %418, %417, !dbg !16351
  store i64 %add691, i64* %i, align 8, !dbg !16351, !tbaa !2579
  br label %do.end693, !dbg !16351

do.end693:                                        ; preds = %if.end690
  br label %if.end694, !dbg !16351

if.end694:                                        ; preds = %do.end693, %if.else642
  br label %if.end695

if.end695:                                        ; preds = %if.end694, %if.end641
  br label %if.end696

if.end696:                                        ; preds = %if.end695, %if.end485
  br label %do.body697, !dbg !16367

do.body697:                                       ; preds = %if.end696
  call void @llvm.dbg.declare(metadata i64* %_n698, metadata !16368, metadata !DIExpression()), !dbg !16370
  %arraydecay699 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16370
  %add.ptr700 = getelementptr inbounds i8, i8* %arraydecay699, i64 23, !dbg !16370
  %419 = load i8*, i8** %bufp, align 8, !dbg !16370, !tbaa !2442
  %sub.ptr.lhs.cast701 = ptrtoint i8* %add.ptr700 to i64, !dbg !16370
  %sub.ptr.rhs.cast702 = ptrtoint i8* %419 to i64, !dbg !16370
  %sub.ptr.sub703 = sub i64 %sub.ptr.lhs.cast701, %sub.ptr.rhs.cast702, !dbg !16370
  store i64 %sub.ptr.sub703, i64* %_n698, align 8, !dbg !16370, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w704, metadata !16371, metadata !DIExpression()), !dbg !16370
  %420 = load i32, i32* %width.addr, align 4, !dbg !16370, !tbaa !2436
  %cmp705 = icmp slt i32 %420, 0, !dbg !16370
  br i1 %cmp705, label %cond.true707, label %cond.false708, !dbg !16370

cond.true707:                                     ; preds = %do.body697
  br label %cond.end709, !dbg !16370

cond.false708:                                    ; preds = %do.body697
  %421 = load i32, i32* %width.addr, align 4, !dbg !16370, !tbaa !2436
  br label %cond.end709, !dbg !16370

cond.end709:                                      ; preds = %cond.false708, %cond.true707
  %cond710 = phi i32 [ 0, %cond.true707 ], [ %421, %cond.false708 ], !dbg !16370
  %conv711 = sext i32 %cond710 to i64, !dbg !16370
  store i64 %conv711, i64* %_w704, align 8, !dbg !16370, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr712, metadata !16372, metadata !DIExpression()), !dbg !16370
  %422 = load i64, i64* %_n698, align 8, !dbg !16370, !tbaa !2579
  %423 = load i64, i64* %_w704, align 8, !dbg !16370, !tbaa !2579
  %cmp713 = icmp ult i64 %422, %423, !dbg !16370
  br i1 %cmp713, label %cond.true715, label %cond.false716, !dbg !16370

cond.true715:                                     ; preds = %cond.end709
  %424 = load i64, i64* %_w704, align 8, !dbg !16370, !tbaa !2579
  br label %cond.end717, !dbg !16370

cond.false716:                                    ; preds = %cond.end709
  %425 = load i64, i64* %_n698, align 8, !dbg !16370, !tbaa !2579
  br label %cond.end717, !dbg !16370

cond.end717:                                      ; preds = %cond.false716, %cond.true715
  %cond718 = phi i64 [ %424, %cond.true715 ], [ %425, %cond.false716 ], !dbg !16370
  store i64 %cond718, i64* %_incr712, align 8, !dbg !16370, !tbaa !2579
  %426 = load i64, i64* %_incr712, align 8, !dbg !16373, !tbaa !2579
  %427 = load i64, i64* %maxsize.addr, align 8, !dbg !16373, !tbaa !2579
  %428 = load i64, i64* %i, align 8, !dbg !16373, !tbaa !2579
  %sub719 = sub i64 %427, %428, !dbg !16373
  %cmp720 = icmp uge i64 %426, %sub719, !dbg !16373
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !16370

if.then722:                                       ; preds = %cond.end717
  store i64 0, i64* %retval, align 8, !dbg !16373
  br label %return, !dbg !16373

if.end723:                                        ; preds = %cond.end717
  %429 = load i8*, i8** %p, align 8, !dbg !16375, !tbaa !2442
  %tobool724 = icmp ne i8* %429, null, !dbg !16375
  br i1 %tobool724, label %if.then725, label %if.end757, !dbg !16370

if.then725:                                       ; preds = %if.end723
  %430 = load i32, i32* %digits, align 4, !dbg !16377, !tbaa !2436
  %cmp726 = icmp eq i32 %430, 0, !dbg !16377
  br i1 %cmp726, label %land.lhs.true728, label %if.end745, !dbg !16377

land.lhs.true728:                                 ; preds = %if.then725
  %431 = load i64, i64* %_n698, align 8, !dbg !16377, !tbaa !2579
  %432 = load i64, i64* %_w704, align 8, !dbg !16377, !tbaa !2579
  %cmp729 = icmp ult i64 %431, %432, !dbg !16377
  br i1 %cmp729, label %if.then731, label %if.end745, !dbg !16380

if.then731:                                       ; preds = %land.lhs.true728
  call void @llvm.dbg.declare(metadata i64* %_delta732, metadata !16381, metadata !DIExpression()), !dbg !16383
  %433 = load i32, i32* %width.addr, align 4, !dbg !16383, !tbaa !2436
  %conv733 = sext i32 %433 to i64, !dbg !16383
  %434 = load i64, i64* %_n698, align 8, !dbg !16383, !tbaa !2579
  %sub734 = sub i64 %conv733, %434, !dbg !16383
  store i64 %sub734, i64* %_delta732, align 8, !dbg !16383, !tbaa !2579
  %435 = load i32, i32* %pad, align 4, !dbg !16384, !tbaa !2436
  %cmp735 = icmp eq i32 %435, 48, !dbg !16384
  br i1 %cmp735, label %if.then740, label %lor.lhs.false737, !dbg !16384

lor.lhs.false737:                                 ; preds = %if.then731
  %436 = load i32, i32* %pad, align 4, !dbg !16384, !tbaa !2436
  %cmp738 = icmp eq i32 %436, 43, !dbg !16384
  br i1 %cmp738, label %if.then740, label %if.else742, !dbg !16383

if.then740:                                       ; preds = %lor.lhs.false737, %if.then731
  %437 = load i8*, i8** %p, align 8, !dbg !16384, !tbaa !2442
  %438 = load i64, i64* %_delta732, align 8, !dbg !16384, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %437, i8 48, i64 %438, i1 false), !dbg !16384
  %439 = load i64, i64* %_delta732, align 8, !dbg !16384, !tbaa !2579
  %440 = load i8*, i8** %p, align 8, !dbg !16384, !tbaa !2442
  %add.ptr741 = getelementptr inbounds i8, i8* %440, i64 %439, !dbg !16384
  store i8* %add.ptr741, i8** %p, align 8, !dbg !16384, !tbaa !2442
  br label %if.end744, !dbg !16384

if.else742:                                       ; preds = %lor.lhs.false737
  %441 = load i8*, i8** %p, align 8, !dbg !16384, !tbaa !2442
  %442 = load i64, i64* %_delta732, align 8, !dbg !16384, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %441, i8 32, i64 %442, i1 false), !dbg !16384
  %443 = load i64, i64* %_delta732, align 8, !dbg !16384, !tbaa !2579
  %444 = load i8*, i8** %p, align 8, !dbg !16384, !tbaa !2442
  %add.ptr743 = getelementptr inbounds i8, i8* %444, i64 %443, !dbg !16384
  store i8* %add.ptr743, i8** %p, align 8, !dbg !16384, !tbaa !2442
  br label %if.end744

if.end744:                                        ; preds = %if.else742, %if.then740
  br label %if.end745, !dbg !16383

if.end745:                                        ; preds = %if.end744, %land.lhs.true728, %if.then725
  %445 = load i8, i8* %to_lowcase, align 1, !dbg !16386, !tbaa !2461
  %tobool746 = trunc i8 %445 to i1, !dbg !16386
  br i1 %tobool746, label %if.then747, label %if.else749, !dbg !16380

if.then747:                                       ; preds = %if.end745
  %446 = load i8*, i8** %p, align 8, !dbg !16386, !tbaa !2442
  %447 = load i8*, i8** %bufp, align 8, !dbg !16386, !tbaa !2442
  %448 = load i64, i64* %_n698, align 8, !dbg !16386, !tbaa !2579
  %call748 = call i8* @memcpy_lowcase(i8* %446, i8* %447, i64 %448), !dbg !16386
  br label %if.end755, !dbg !16386

if.else749:                                       ; preds = %if.end745
  %449 = load i8, i8* %to_uppcase, align 1, !dbg !16388, !tbaa !2461
  %tobool750 = trunc i8 %449 to i1, !dbg !16388
  br i1 %tobool750, label %if.then751, label %if.else753, !dbg !16386

if.then751:                                       ; preds = %if.else749
  %450 = load i8*, i8** %p, align 8, !dbg !16388, !tbaa !2442
  %451 = load i8*, i8** %bufp, align 8, !dbg !16388, !tbaa !2442
  %452 = load i64, i64* %_n698, align 8, !dbg !16388, !tbaa !2579
  %call752 = call i8* @memcpy_uppcase(i8* %450, i8* %451, i64 %452), !dbg !16388
  br label %if.end754, !dbg !16388

if.else753:                                       ; preds = %if.else749
  %453 = load i8*, i8** %p, align 8, !dbg !16388, !tbaa !2442
  %454 = load i8*, i8** %bufp, align 8, !dbg !16388, !tbaa !2442
  %455 = load i64, i64* %_n698, align 8, !dbg !16388, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %453, i8* align 1 %454, i64 %455, i1 false), !dbg !16388
  br label %if.end754

if.end754:                                        ; preds = %if.else753, %if.then751
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.then747
  %456 = load i64, i64* %_n698, align 8, !dbg !16380, !tbaa !2579
  %457 = load i8*, i8** %p, align 8, !dbg !16380, !tbaa !2442
  %add.ptr756 = getelementptr inbounds i8, i8* %457, i64 %456, !dbg !16380
  store i8* %add.ptr756, i8** %p, align 8, !dbg !16380, !tbaa !2442
  br label %if.end757, !dbg !16380

if.end757:                                        ; preds = %if.end755, %if.end723
  %458 = load i64, i64* %_incr712, align 8, !dbg !16370, !tbaa !2579
  %459 = load i64, i64* %i, align 8, !dbg !16370, !tbaa !2579
  %add758 = add i64 %459, %458, !dbg !16370
  store i64 %add758, i64* %i, align 8, !dbg !16370, !tbaa !2579
  br label %do.end760, !dbg !16370

do.end760:                                        ; preds = %if.end757
  br label %sw.epilog1435, !dbg !16390

sw.bb761:                                         ; preds = %sw.epilog87
  %460 = load i32, i32* %modifier, align 4, !dbg !16391, !tbaa !2436
  %cmp762 = icmp ne i32 %460, 0, !dbg !16393
  br i1 %cmp762, label %if.then764, label %if.end765, !dbg !16394

if.then764:                                       ; preds = %sw.bb761
  br label %bad_format, !dbg !16395

if.end765:                                        ; preds = %sw.bb761
  %461 = load i32, i32* %pad, align 4, !dbg !16396, !tbaa !2436
  %cmp766 = icmp eq i32 %461, 0, !dbg !16398
  br i1 %cmp766, label %land.lhs.true768, label %if.else772, !dbg !16399

land.lhs.true768:                                 ; preds = %if.end765
  %462 = load i32, i32* %width.addr, align 4, !dbg !16400, !tbaa !2436
  %cmp769 = icmp slt i32 %462, 0, !dbg !16401
  br i1 %cmp769, label %if.then771, label %if.else772, !dbg !16402

if.then771:                                       ; preds = %land.lhs.true768
  store i32 43, i32* %pad, align 4, !dbg !16403, !tbaa !2436
  store i32 4, i32* %subwidth, align 4, !dbg !16405, !tbaa !2436
  br label %if.end778, !dbg !16406

if.else772:                                       ; preds = %land.lhs.true768, %if.end765
  %463 = load i32, i32* %width.addr, align 4, !dbg !16407, !tbaa !2436
  %sub773 = sub nsw i32 %463, 6, !dbg !16409
  store i32 %sub773, i32* %subwidth, align 4, !dbg !16410, !tbaa !2436
  %464 = load i32, i32* %subwidth, align 4, !dbg !16411, !tbaa !2436
  %cmp774 = icmp slt i32 %464, 0, !dbg !16413
  br i1 %cmp774, label %if.then776, label %if.end777, !dbg !16414

if.then776:                                       ; preds = %if.else772
  store i32 0, i32* %subwidth, align 4, !dbg !16415, !tbaa !2436
  br label %if.end777, !dbg !16416

if.end777:                                        ; preds = %if.then776, %if.else772
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.then771
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.363, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16417, !tbaa !2442
  br label %subformat_width, !dbg !16418

sw.bb779:                                         ; preds = %sw.epilog87
  %465 = load i32, i32* %modifier, align 4, !dbg !16419, !tbaa !2436
  %cmp780 = icmp eq i32 %465, 69, !dbg !16421
  br i1 %cmp780, label %if.then782, label %if.end783, !dbg !16422

if.then782:                                       ; preds = %sw.bb779
  br label %bad_format, !dbg !16423

if.end783:                                        ; preds = %sw.bb779
  br label %do.body784, !dbg !16424

do.body784:                                       ; preds = %if.end783
  store i32 2, i32* %digits, align 4, !dbg !16425, !tbaa !2436
  %466 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16425, !tbaa !2442
  %tm_hour785 = getelementptr inbounds %struct.tm, %struct.tm* %466, i32 0, i32 2, !dbg !16425, !ctir !1919
  %467 = load i32, i32* %tm_hour785, align 8, !dbg !16425, !tbaa !15687, !ctir !27
  store i32 %467, i32* %number_value, align 4, !dbg !16425, !tbaa !2436
  br label %do_number, !dbg !16425

do.end787:                                        ; No predecessors!
  br label %sw.bb788, !dbg !16425

sw.bb788:                                         ; preds = %sw.epilog87, %do.end787
  %468 = load i32, i32* %modifier, align 4, !dbg !16427, !tbaa !2436
  %cmp789 = icmp eq i32 %468, 69, !dbg !16429
  br i1 %cmp789, label %if.then791, label %if.end792, !dbg !16430

if.then791:                                       ; preds = %sw.bb788
  br label %bad_format, !dbg !16431

if.end792:                                        ; preds = %sw.bb788
  br label %do.body793, !dbg !16432

do.body793:                                       ; preds = %if.end792
  store i32 2, i32* %digits, align 4, !dbg !16433, !tbaa !2436
  %469 = load i32, i32* %hour12, align 4, !dbg !16433, !tbaa !2436
  store i32 %469, i32* %number_value, align 4, !dbg !16433, !tbaa !2436
  br label %do_number, !dbg !16433

do.end795:                                        ; No predecessors!
  br label %sw.bb796, !dbg !16433

sw.bb796:                                         ; preds = %sw.epilog87, %do.end795
  %470 = load i32, i32* %modifier, align 4, !dbg !16435, !tbaa !2436
  %cmp797 = icmp eq i32 %470, 69, !dbg !16437
  br i1 %cmp797, label %if.then799, label %if.end800, !dbg !16438

if.then799:                                       ; preds = %sw.bb796
  br label %bad_format, !dbg !16439

if.end800:                                        ; preds = %sw.bb796
  br label %do.body801, !dbg !16440

do.body801:                                       ; preds = %if.end800
  store i32 2, i32* %digits, align 4, !dbg !16441, !tbaa !2436
  %471 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16441, !tbaa !2442
  %tm_hour802 = getelementptr inbounds %struct.tm, %struct.tm* %471, i32 0, i32 2, !dbg !16441, !ctir !1919
  %472 = load i32, i32* %tm_hour802, align 8, !dbg !16441, !tbaa !15687, !ctir !27
  store i32 %472, i32* %number_value, align 4, !dbg !16441, !tbaa !2436
  br label %do_number_spacepad, !dbg !16441

do.end804:                                        ; No predecessors!
  br label %sw.bb805, !dbg !16441

sw.bb805:                                         ; preds = %sw.epilog87, %do.end804
  %473 = load i32, i32* %modifier, align 4, !dbg !16443, !tbaa !2436
  %cmp806 = icmp eq i32 %473, 69, !dbg !16445
  br i1 %cmp806, label %if.then808, label %if.end809, !dbg !16446

if.then808:                                       ; preds = %sw.bb805
  br label %bad_format, !dbg !16447

if.end809:                                        ; preds = %sw.bb805
  br label %do.body810, !dbg !16448

do.body810:                                       ; preds = %if.end809
  store i32 2, i32* %digits, align 4, !dbg !16449, !tbaa !2436
  %474 = load i32, i32* %hour12, align 4, !dbg !16449, !tbaa !2436
  store i32 %474, i32* %number_value, align 4, !dbg !16449, !tbaa !2436
  br label %do_number_spacepad, !dbg !16449

do.end812:                                        ; No predecessors!
  br label %sw.bb813, !dbg !16449

sw.bb813:                                         ; preds = %sw.epilog87, %do.end812
  %475 = load i32, i32* %modifier, align 4, !dbg !16451, !tbaa !2436
  %cmp814 = icmp eq i32 %475, 69, !dbg !16453
  br i1 %cmp814, label %if.then816, label %if.end817, !dbg !16454

if.then816:                                       ; preds = %sw.bb813
  br label %bad_format, !dbg !16455

if.end817:                                        ; preds = %sw.bb813
  br label %do.body818, !dbg !16456

do.body818:                                       ; preds = %if.end817
  store i32 3, i32* %digits, align 4, !dbg !16457, !tbaa !2436
  %476 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16457, !tbaa !2442
  %tm_yday = getelementptr inbounds %struct.tm, %struct.tm* %476, i32 0, i32 7, !dbg !16457, !ctir !1919
  %477 = load i32, i32* %tm_yday, align 4, !dbg !16457, !tbaa !16459, !ctir !27
  %cmp819 = icmp slt i32 %477, -1, !dbg !16457
  %frombool821 = zext i1 %cmp819 to i8, !dbg !16457
  store i8 %frombool821, i8* %negative_number, align 1, !dbg !16457, !tbaa !2461
  %478 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16457, !tbaa !2442
  %tm_yday822 = getelementptr inbounds %struct.tm, %struct.tm* %478, i32 0, i32 7, !dbg !16457, !ctir !1919
  %479 = load i32, i32* %tm_yday822, align 4, !dbg !16457, !tbaa !16459, !ctir !27
  %add823 = add i32 %479, 1, !dbg !16457
  store i32 %add823, i32* %u_number_value, align 4, !dbg !16457, !tbaa !2436
  br label %do_signed_number, !dbg !16457

do.end825:                                        ; No predecessors!
  br label %sw.bb826, !dbg !16457

sw.bb826:                                         ; preds = %sw.epilog87, %do.end825
  %480 = load i32, i32* %modifier, align 4, !dbg !16460, !tbaa !2436
  %cmp827 = icmp eq i32 %480, 69, !dbg !16462
  br i1 %cmp827, label %if.then829, label %if.end830, !dbg !16463

if.then829:                                       ; preds = %sw.bb826
  br label %bad_format, !dbg !16464

if.end830:                                        ; preds = %sw.bb826
  br label %do.body831, !dbg !16465

do.body831:                                       ; preds = %if.end830
  store i32 2, i32* %digits, align 4, !dbg !16466, !tbaa !2436
  %481 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16466, !tbaa !2442
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %481, i32 0, i32 1, !dbg !16466, !ctir !1919
  %482 = load i32, i32* %tm_min, align 4, !dbg !16466, !tbaa !16468, !ctir !27
  store i32 %482, i32* %number_value, align 4, !dbg !16466, !tbaa !2436
  br label %do_number, !dbg !16466

do.end833:                                        ; No predecessors!
  br label %sw.bb834, !dbg !16466

sw.bb834:                                         ; preds = %sw.epilog87, %do.end833
  %483 = load i32, i32* %modifier, align 4, !dbg !16469, !tbaa !2436
  %cmp835 = icmp eq i32 %483, 69, !dbg !16471
  br i1 %cmp835, label %if.then837, label %if.end838, !dbg !16472

if.then837:                                       ; preds = %sw.bb834
  br label %bad_format, !dbg !16473

if.end838:                                        ; preds = %sw.bb834
  br label %do.body839, !dbg !16474

do.body839:                                       ; preds = %if.end838
  store i32 2, i32* %digits, align 4, !dbg !16475, !tbaa !2436
  %484 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16475, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %484, i32 0, i32 4, !dbg !16475, !ctir !1919
  %485 = load i32, i32* %tm_mon, align 8, !dbg !16475, !tbaa !6836, !ctir !27
  %cmp840 = icmp slt i32 %485, -1, !dbg !16475
  %frombool842 = zext i1 %cmp840 to i8, !dbg !16475
  store i8 %frombool842, i8* %negative_number, align 1, !dbg !16475, !tbaa !2461
  %486 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16475, !tbaa !2442
  %tm_mon843 = getelementptr inbounds %struct.tm, %struct.tm* %486, i32 0, i32 4, !dbg !16475, !ctir !1919
  %487 = load i32, i32* %tm_mon843, align 8, !dbg !16475, !tbaa !6836, !ctir !27
  %add844 = add i32 %487, 1, !dbg !16475
  store i32 %add844, i32* %u_number_value, align 4, !dbg !16475, !tbaa !2436
  br label %do_signed_number, !dbg !16475

do.end846:                                        ; No predecessors!
  br label %sw.bb847, !dbg !16475

sw.bb847:                                         ; preds = %sw.epilog87, %do.end846
  %488 = load i32, i32* %modifier, align 4, !dbg !16477, !tbaa !2436
  %cmp848 = icmp eq i32 %488, 69, !dbg !16479
  br i1 %cmp848, label %if.then850, label %if.end851, !dbg !16480

if.then850:                                       ; preds = %sw.bb847
  br label %bad_format, !dbg !16481

if.end851:                                        ; preds = %sw.bb847
  %489 = load i32, i32* %ns.addr, align 4, !dbg !16482, !tbaa !2436
  store i32 %489, i32* %number_value, align 4, !dbg !16483, !tbaa !2436
  %490 = load i32, i32* %width.addr, align 4, !dbg !16484, !tbaa !2436
  %cmp852 = icmp eq i32 %490, -1, !dbg !16486
  br i1 %cmp852, label %if.then854, label %if.else855, !dbg !16487

if.then854:                                       ; preds = %if.end851
  store i32 9, i32* %width.addr, align 4, !dbg !16488, !tbaa !2436
  br label %if.end861, !dbg !16489

if.else855:                                       ; preds = %if.end851
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16490, metadata !DIExpression()), !dbg !16492
  %491 = load i32, i32* %width.addr, align 4, !dbg !16493, !tbaa !2436
  store i32 %491, i32* %j, align 4, !dbg !16495, !tbaa !2436
  br label %for.cond856, !dbg !16496

for.cond856:                                      ; preds = %for.inc, %if.else855
  %492 = load i32, i32* %j, align 4, !dbg !16497, !tbaa !2436
  %cmp857 = icmp slt i32 %492, 9, !dbg !16499
  br i1 %cmp857, label %for.body859, label %for.end, !dbg !16500

for.body859:                                      ; preds = %for.cond856
  %493 = load i32, i32* %number_value, align 4, !dbg !16501, !tbaa !2436
  %div860 = sdiv i32 %493, 10, !dbg !16501
  store i32 %div860, i32* %number_value, align 4, !dbg !16501, !tbaa !2436
  br label %for.inc, !dbg !16502

for.inc:                                          ; preds = %for.body859
  %494 = load i32, i32* %j, align 4, !dbg !16503, !tbaa !2436
  %inc = add nsw i32 %494, 1, !dbg !16503
  store i32 %inc, i32* %j, align 4, !dbg !16503, !tbaa !2436
  br label %for.cond856, !dbg !16504, !llvm.loop !16505

for.end:                                          ; preds = %for.cond856
  br label %if.end861

if.end861:                                        ; preds = %for.end, %if.then854
  br label %do.body862, !dbg !16507

do.body862:                                       ; preds = %if.end861
  %495 = load i32, i32* %width.addr, align 4, !dbg !16508, !tbaa !2436
  store i32 %495, i32* %digits, align 4, !dbg !16508, !tbaa !2436
  %496 = load i32, i32* %number_value, align 4, !dbg !16508, !tbaa !2436
  store i32 %496, i32* %number_value, align 4, !dbg !16508, !tbaa !2436
  br label %do_number, !dbg !16508

do.end864:                                        ; No predecessors!
  br label %sw.bb865, !dbg !16508

sw.bb865:                                         ; preds = %sw.epilog87, %do.end864
  br label %do.body866, !dbg !16510

do.body866:                                       ; preds = %sw.bb865
  call void @llvm.dbg.declare(metadata i64* %_n867, metadata !16511, metadata !DIExpression()), !dbg !16513
  store i64 1, i64* %_n867, align 8, !dbg !16513, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w868, metadata !16514, metadata !DIExpression()), !dbg !16513
  %497 = load i32, i32* %width.addr, align 4, !dbg !16513, !tbaa !2436
  %cmp869 = icmp slt i32 %497, 0, !dbg !16513
  br i1 %cmp869, label %cond.true871, label %cond.false872, !dbg !16513

cond.true871:                                     ; preds = %do.body866
  br label %cond.end873, !dbg !16513

cond.false872:                                    ; preds = %do.body866
  %498 = load i32, i32* %width.addr, align 4, !dbg !16513, !tbaa !2436
  br label %cond.end873, !dbg !16513

cond.end873:                                      ; preds = %cond.false872, %cond.true871
  %cond874 = phi i32 [ 0, %cond.true871 ], [ %498, %cond.false872 ], !dbg !16513
  %conv875 = sext i32 %cond874 to i64, !dbg !16513
  store i64 %conv875, i64* %_w868, align 8, !dbg !16513, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr876, metadata !16515, metadata !DIExpression()), !dbg !16513
  %499 = load i64, i64* %_n867, align 8, !dbg !16513, !tbaa !2579
  %500 = load i64, i64* %_w868, align 8, !dbg !16513, !tbaa !2579
  %cmp877 = icmp ult i64 %499, %500, !dbg !16513
  br i1 %cmp877, label %cond.true879, label %cond.false880, !dbg !16513

cond.true879:                                     ; preds = %cond.end873
  %501 = load i64, i64* %_w868, align 8, !dbg !16513, !tbaa !2579
  br label %cond.end881, !dbg !16513

cond.false880:                                    ; preds = %cond.end873
  %502 = load i64, i64* %_n867, align 8, !dbg !16513, !tbaa !2579
  br label %cond.end881, !dbg !16513

cond.end881:                                      ; preds = %cond.false880, %cond.true879
  %cond882 = phi i64 [ %501, %cond.true879 ], [ %502, %cond.false880 ], !dbg !16513
  store i64 %cond882, i64* %_incr876, align 8, !dbg !16513, !tbaa !2579
  %503 = load i64, i64* %_incr876, align 8, !dbg !16516, !tbaa !2579
  %504 = load i64, i64* %maxsize.addr, align 8, !dbg !16516, !tbaa !2579
  %505 = load i64, i64* %i, align 8, !dbg !16516, !tbaa !2579
  %sub883 = sub i64 %504, %505, !dbg !16516
  %cmp884 = icmp uge i64 %503, %sub883, !dbg !16516
  br i1 %cmp884, label %if.then886, label %if.end887, !dbg !16513

if.then886:                                       ; preds = %cond.end881
  store i64 0, i64* %retval, align 8, !dbg !16516
  br label %return, !dbg !16516

if.end887:                                        ; preds = %cond.end881
  %506 = load i8*, i8** %p, align 8, !dbg !16518, !tbaa !2442
  %tobool888 = icmp ne i8* %506, null, !dbg !16518
  br i1 %tobool888, label %if.then889, label %if.end911, !dbg !16513

if.then889:                                       ; preds = %if.end887
  %507 = load i32, i32* %digits, align 4, !dbg !16520, !tbaa !2436
  %cmp890 = icmp eq i32 %507, 0, !dbg !16520
  br i1 %cmp890, label %land.lhs.true892, label %if.end909, !dbg !16520

land.lhs.true892:                                 ; preds = %if.then889
  %508 = load i64, i64* %_n867, align 8, !dbg !16520, !tbaa !2579
  %509 = load i64, i64* %_w868, align 8, !dbg !16520, !tbaa !2579
  %cmp893 = icmp ult i64 %508, %509, !dbg !16520
  br i1 %cmp893, label %if.then895, label %if.end909, !dbg !16523

if.then895:                                       ; preds = %land.lhs.true892
  call void @llvm.dbg.declare(metadata i64* %_delta896, metadata !16524, metadata !DIExpression()), !dbg !16526
  %510 = load i32, i32* %width.addr, align 4, !dbg !16526, !tbaa !2436
  %conv897 = sext i32 %510 to i64, !dbg !16526
  %511 = load i64, i64* %_n867, align 8, !dbg !16526, !tbaa !2579
  %sub898 = sub i64 %conv897, %511, !dbg !16526
  store i64 %sub898, i64* %_delta896, align 8, !dbg !16526, !tbaa !2579
  %512 = load i32, i32* %pad, align 4, !dbg !16527, !tbaa !2436
  %cmp899 = icmp eq i32 %512, 48, !dbg !16527
  br i1 %cmp899, label %if.then904, label %lor.lhs.false901, !dbg !16527

lor.lhs.false901:                                 ; preds = %if.then895
  %513 = load i32, i32* %pad, align 4, !dbg !16527, !tbaa !2436
  %cmp902 = icmp eq i32 %513, 43, !dbg !16527
  br i1 %cmp902, label %if.then904, label %if.else906, !dbg !16526

if.then904:                                       ; preds = %lor.lhs.false901, %if.then895
  %514 = load i8*, i8** %p, align 8, !dbg !16527, !tbaa !2442
  %515 = load i64, i64* %_delta896, align 8, !dbg !16527, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %514, i8 48, i64 %515, i1 false), !dbg !16527
  %516 = load i64, i64* %_delta896, align 8, !dbg !16527, !tbaa !2579
  %517 = load i8*, i8** %p, align 8, !dbg !16527, !tbaa !2442
  %add.ptr905 = getelementptr inbounds i8, i8* %517, i64 %516, !dbg !16527
  store i8* %add.ptr905, i8** %p, align 8, !dbg !16527, !tbaa !2442
  br label %if.end908, !dbg !16527

if.else906:                                       ; preds = %lor.lhs.false901
  %518 = load i8*, i8** %p, align 8, !dbg !16527, !tbaa !2442
  %519 = load i64, i64* %_delta896, align 8, !dbg !16527, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %518, i8 32, i64 %519, i1 false), !dbg !16527
  %520 = load i64, i64* %_delta896, align 8, !dbg !16527, !tbaa !2579
  %521 = load i8*, i8** %p, align 8, !dbg !16527, !tbaa !2442
  %add.ptr907 = getelementptr inbounds i8, i8* %521, i64 %520, !dbg !16527
  store i8* %add.ptr907, i8** %p, align 8, !dbg !16527, !tbaa !2442
  br label %if.end908

if.end908:                                        ; preds = %if.else906, %if.then904
  br label %if.end909, !dbg !16526

if.end909:                                        ; preds = %if.end908, %land.lhs.true892, %if.then889
  %522 = load i8*, i8** %p, align 8, !dbg !16523, !tbaa !2442
  store i8 10, i8* %522, align 1, !dbg !16523, !tbaa !2497, !ctir !144
  %523 = load i64, i64* %_n867, align 8, !dbg !16523, !tbaa !2579
  %524 = load i8*, i8** %p, align 8, !dbg !16523, !tbaa !2442
  %add.ptr910 = getelementptr inbounds i8, i8* %524, i64 %523, !dbg !16523
  store i8* %add.ptr910, i8** %p, align 8, !dbg !16523, !tbaa !2442
  br label %if.end911, !dbg !16523

if.end911:                                        ; preds = %if.end909, %if.end887
  %525 = load i64, i64* %_incr876, align 8, !dbg !16513, !tbaa !2579
  %526 = load i64, i64* %i, align 8, !dbg !16513, !tbaa !2579
  %add912 = add i64 %526, %525, !dbg !16513
  store i64 %add912, i64* %i, align 8, !dbg !16513, !tbaa !2579
  br label %do.end914, !dbg !16513

do.end914:                                        ; preds = %if.end911
  br label %sw.epilog1435, !dbg !16529

sw.bb915:                                         ; preds = %sw.epilog87
  store i8 1, i8* %to_lowcase, align 1, !dbg !16530, !tbaa !2461
  store i32 112, i32* %format_char, align 4, !dbg !16531, !tbaa !2436
  br label %sw.bb916, !dbg !16532

sw.bb916:                                         ; preds = %sw.epilog87, %sw.bb915
  %527 = load i8, i8* %change_case, align 1, !dbg !16533, !tbaa !2461
  %tobool917 = trunc i8 %527 to i1, !dbg !16533
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !16535

if.then918:                                       ; preds = %sw.bb916
  store i8 0, i8* %to_uppcase, align 1, !dbg !16536, !tbaa !2461
  store i8 1, i8* %to_lowcase, align 1, !dbg !16538, !tbaa !2461
  br label %if.end919, !dbg !16539

if.end919:                                        ; preds = %if.then918, %sw.bb916
  br label %underlying_strftime, !dbg !16540

sw.bb920:                                         ; preds = %sw.epilog87
  br label %do.body921, !dbg !16541

do.body921:                                       ; preds = %sw.bb920
  store i32 1, i32* %digits, align 4, !dbg !16542, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16542, !tbaa !2461
  %528 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16542, !tbaa !2442
  %tm_mon922 = getelementptr inbounds %struct.tm, %struct.tm* %528, i32 0, i32 4, !dbg !16542, !ctir !1919
  %529 = load i32, i32* %tm_mon922, align 8, !dbg !16542, !tbaa !6836, !ctir !27
  %mul923 = mul nsw i32 %529, 11, !dbg !16542
  %shr924 = ashr i32 %mul923, 5, !dbg !16542
  %add925 = add nsw i32 %shr924, 1, !dbg !16542
  store i32 %add925, i32* %u_number_value, align 4, !dbg !16542, !tbaa !2436
  br label %do_signed_number, !dbg !16542

do.end927:                                        ; No predecessors!
  br label %sw.epilog1435, !dbg !16544

sw.bb928:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.364, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16545, !tbaa !2442
  br label %subformat, !dbg !16546

sw.bb929:                                         ; preds = %sw.epilog87
  br label %underlying_strftime, !dbg !16547

sw.bb930:                                         ; preds = %sw.epilog87
  %530 = load i32, i32* %modifier, align 4, !dbg !16548, !tbaa !2436
  %cmp931 = icmp eq i32 %530, 69, !dbg !16550
  br i1 %cmp931, label %if.then933, label %if.end934, !dbg !16551

if.then933:                                       ; preds = %sw.bb930
  br label %bad_format, !dbg !16552

if.end934:                                        ; preds = %sw.bb930
  br label %do.body935, !dbg !16553

do.body935:                                       ; preds = %if.end934
  store i32 2, i32* %digits, align 4, !dbg !16554, !tbaa !2436
  %531 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16554, !tbaa !2442
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %531, i32 0, i32 0, !dbg !16554, !ctir !1919
  %532 = load i32, i32* %tm_sec, align 8, !dbg !16554, !tbaa !16556, !ctir !27
  store i32 %532, i32* %number_value, align 4, !dbg !16554, !tbaa !2436
  br label %do_number, !dbg !16554

do.end937:                                        ; No predecessors!
  br label %sw.bb938, !dbg !16554

sw.bb938:                                         ; preds = %sw.epilog87, %do.end937
  call void @llvm.dbg.declare(metadata %struct.tm* %ltm, metadata !16557, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.declare(metadata i64* %t, metadata !16560, metadata !DIExpression()), !dbg !16561
  %533 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16562, !tbaa !2442
  %534 = bitcast %struct.tm* %ltm to i8*, !dbg !16563
  %535 = bitcast %struct.tm* %533 to i8*, !dbg !16563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* align 8 %535, i64 56, i1 false), !dbg !16563, !tbaa.struct !16564
  %536 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !16565, !tbaa !2442
  %call939 = call i64 @mktime_z(%struct.tm_zone* %536, %struct.tm* %ltm), !dbg !16566
  store i64 %call939, i64* %t, align 8, !dbg !16567, !tbaa !2579
  %arraydecay940 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16568
  %add.ptr941 = getelementptr inbounds i8, i8* %arraydecay940, i64 23, !dbg !16569
  store i8* %add.ptr941, i8** %bufp, align 8, !dbg !16570, !tbaa !2442
  %537 = load i64, i64* %t, align 8, !dbg !16571, !tbaa !2579
  %cmp942 = icmp slt i64 %537, 0, !dbg !16572
  %frombool944 = zext i1 %cmp942 to i8, !dbg !16573
  store i8 %frombool944, i8* %negative_number, align 1, !dbg !16573, !tbaa !2461
  br label %do.body945, !dbg !16574

do.body945:                                       ; preds = %do.cond959, %sw.bb938
  call void @llvm.dbg.declare(metadata i32* %d, metadata !16575, metadata !DIExpression()), !dbg !16577
  %538 = load i64, i64* %t, align 8, !dbg !16578, !tbaa !2579
  %rem946 = srem i64 %538, 10, !dbg !16579
  %conv947 = trunc i64 %rem946 to i32, !dbg !16578
  store i32 %conv947, i32* %d, align 4, !dbg !16577, !tbaa !2436
  %539 = load i64, i64* %t, align 8, !dbg !16580, !tbaa !2579
  %div948 = sdiv i64 %539, 10, !dbg !16580
  store i64 %div948, i64* %t, align 8, !dbg !16580, !tbaa !2579
  %540 = load i8, i8* %negative_number, align 1, !dbg !16581, !tbaa !2461
  %tobool949 = trunc i8 %540 to i1, !dbg !16581
  br i1 %tobool949, label %cond.true951, label %cond.false953, !dbg !16581

cond.true951:                                     ; preds = %do.body945
  %541 = load i32, i32* %d, align 4, !dbg !16582, !tbaa !2436
  %sub952 = sub nsw i32 0, %541, !dbg !16583
  br label %cond.end954, !dbg !16581

cond.false953:                                    ; preds = %do.body945
  %542 = load i32, i32* %d, align 4, !dbg !16584, !tbaa !2436
  br label %cond.end954, !dbg !16581

cond.end954:                                      ; preds = %cond.false953, %cond.true951
  %cond955 = phi i32 [ %sub952, %cond.true951 ], [ %542, %cond.false953 ], !dbg !16581
  %add956 = add nsw i32 %cond955, 48, !dbg !16585
  %conv957 = trunc i32 %add956 to i8, !dbg !16586
  %543 = load i8*, i8** %bufp, align 8, !dbg !16587, !tbaa !2442
  %incdec.ptr958 = getelementptr inbounds i8, i8* %543, i32 -1, !dbg !16587
  store i8* %incdec.ptr958, i8** %bufp, align 8, !dbg !16587, !tbaa !2442
  store i8 %conv957, i8* %incdec.ptr958, align 1, !dbg !16588, !tbaa !2497, !ctir !144
  br label %do.cond959, !dbg !16589

do.cond959:                                       ; preds = %cond.end954
  %544 = load i64, i64* %t, align 8, !dbg !16590, !tbaa !2579
  %cmp960 = icmp ne i64 %544, 0, !dbg !16591
  br i1 %cmp960, label %do.body945, label %do.end962, !dbg !16589, !llvm.loop !16592

do.end962:                                        ; preds = %do.cond959
  store i32 1, i32* %digits, align 4, !dbg !16594, !tbaa !2436
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16595, !tbaa !2461
  br label %do_number_sign_and_padding, !dbg !16596

sw.bb963:                                         ; preds = %sw.epilog87
  %545 = load i32, i32* %modifier, align 4, !dbg !16597, !tbaa !2436
  %cmp964 = icmp eq i32 %545, 79, !dbg !16599
  br i1 %cmp964, label %if.then966, label %if.end967, !dbg !16600

if.then966:                                       ; preds = %sw.bb963
  br label %bad_format, !dbg !16601

if.end967:                                        ; preds = %sw.bb963
  br label %underlying_strftime, !dbg !16602

sw.bb968:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.365, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16603, !tbaa !2442
  br label %subformat, !dbg !16604

sw.bb969:                                         ; preds = %sw.epilog87
  br label %do.body970, !dbg !16605

do.body970:                                       ; preds = %sw.bb969
  call void @llvm.dbg.declare(metadata i64* %_n971, metadata !16606, metadata !DIExpression()), !dbg !16608
  store i64 1, i64* %_n971, align 8, !dbg !16608, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w972, metadata !16609, metadata !DIExpression()), !dbg !16608
  %546 = load i32, i32* %width.addr, align 4, !dbg !16608, !tbaa !2436
  %cmp973 = icmp slt i32 %546, 0, !dbg !16608
  br i1 %cmp973, label %cond.true975, label %cond.false976, !dbg !16608

cond.true975:                                     ; preds = %do.body970
  br label %cond.end977, !dbg !16608

cond.false976:                                    ; preds = %do.body970
  %547 = load i32, i32* %width.addr, align 4, !dbg !16608, !tbaa !2436
  br label %cond.end977, !dbg !16608

cond.end977:                                      ; preds = %cond.false976, %cond.true975
  %cond978 = phi i32 [ 0, %cond.true975 ], [ %547, %cond.false976 ], !dbg !16608
  %conv979 = sext i32 %cond978 to i64, !dbg !16608
  store i64 %conv979, i64* %_w972, align 8, !dbg !16608, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr980, metadata !16610, metadata !DIExpression()), !dbg !16608
  %548 = load i64, i64* %_n971, align 8, !dbg !16608, !tbaa !2579
  %549 = load i64, i64* %_w972, align 8, !dbg !16608, !tbaa !2579
  %cmp981 = icmp ult i64 %548, %549, !dbg !16608
  br i1 %cmp981, label %cond.true983, label %cond.false984, !dbg !16608

cond.true983:                                     ; preds = %cond.end977
  %550 = load i64, i64* %_w972, align 8, !dbg !16608, !tbaa !2579
  br label %cond.end985, !dbg !16608

cond.false984:                                    ; preds = %cond.end977
  %551 = load i64, i64* %_n971, align 8, !dbg !16608, !tbaa !2579
  br label %cond.end985, !dbg !16608

cond.end985:                                      ; preds = %cond.false984, %cond.true983
  %cond986 = phi i64 [ %550, %cond.true983 ], [ %551, %cond.false984 ], !dbg !16608
  store i64 %cond986, i64* %_incr980, align 8, !dbg !16608, !tbaa !2579
  %552 = load i64, i64* %_incr980, align 8, !dbg !16611, !tbaa !2579
  %553 = load i64, i64* %maxsize.addr, align 8, !dbg !16611, !tbaa !2579
  %554 = load i64, i64* %i, align 8, !dbg !16611, !tbaa !2579
  %sub987 = sub i64 %553, %554, !dbg !16611
  %cmp988 = icmp uge i64 %552, %sub987, !dbg !16611
  br i1 %cmp988, label %if.then990, label %if.end991, !dbg !16608

if.then990:                                       ; preds = %cond.end985
  store i64 0, i64* %retval, align 8, !dbg !16611
  br label %return, !dbg !16611

if.end991:                                        ; preds = %cond.end985
  %555 = load i8*, i8** %p, align 8, !dbg !16613, !tbaa !2442
  %tobool992 = icmp ne i8* %555, null, !dbg !16613
  br i1 %tobool992, label %if.then993, label %if.end1015, !dbg !16608

if.then993:                                       ; preds = %if.end991
  %556 = load i32, i32* %digits, align 4, !dbg !16615, !tbaa !2436
  %cmp994 = icmp eq i32 %556, 0, !dbg !16615
  br i1 %cmp994, label %land.lhs.true996, label %if.end1013, !dbg !16615

land.lhs.true996:                                 ; preds = %if.then993
  %557 = load i64, i64* %_n971, align 8, !dbg !16615, !tbaa !2579
  %558 = load i64, i64* %_w972, align 8, !dbg !16615, !tbaa !2579
  %cmp997 = icmp ult i64 %557, %558, !dbg !16615
  br i1 %cmp997, label %if.then999, label %if.end1013, !dbg !16618

if.then999:                                       ; preds = %land.lhs.true996
  call void @llvm.dbg.declare(metadata i64* %_delta1000, metadata !16619, metadata !DIExpression()), !dbg !16621
  %559 = load i32, i32* %width.addr, align 4, !dbg !16621, !tbaa !2436
  %conv1001 = sext i32 %559 to i64, !dbg !16621
  %560 = load i64, i64* %_n971, align 8, !dbg !16621, !tbaa !2579
  %sub1002 = sub i64 %conv1001, %560, !dbg !16621
  store i64 %sub1002, i64* %_delta1000, align 8, !dbg !16621, !tbaa !2579
  %561 = load i32, i32* %pad, align 4, !dbg !16622, !tbaa !2436
  %cmp1003 = icmp eq i32 %561, 48, !dbg !16622
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005, !dbg !16622

lor.lhs.false1005:                                ; preds = %if.then999
  %562 = load i32, i32* %pad, align 4, !dbg !16622, !tbaa !2436
  %cmp1006 = icmp eq i32 %562, 43, !dbg !16622
  br i1 %cmp1006, label %if.then1008, label %if.else1010, !dbg !16621

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.then999
  %563 = load i8*, i8** %p, align 8, !dbg !16622, !tbaa !2442
  %564 = load i64, i64* %_delta1000, align 8, !dbg !16622, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %563, i8 48, i64 %564, i1 false), !dbg !16622
  %565 = load i64, i64* %_delta1000, align 8, !dbg !16622, !tbaa !2579
  %566 = load i8*, i8** %p, align 8, !dbg !16622, !tbaa !2442
  %add.ptr1009 = getelementptr inbounds i8, i8* %566, i64 %565, !dbg !16622
  store i8* %add.ptr1009, i8** %p, align 8, !dbg !16622, !tbaa !2442
  br label %if.end1012, !dbg !16622

if.else1010:                                      ; preds = %lor.lhs.false1005
  %567 = load i8*, i8** %p, align 8, !dbg !16622, !tbaa !2442
  %568 = load i64, i64* %_delta1000, align 8, !dbg !16622, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %567, i8 32, i64 %568, i1 false), !dbg !16622
  %569 = load i64, i64* %_delta1000, align 8, !dbg !16622, !tbaa !2579
  %570 = load i8*, i8** %p, align 8, !dbg !16622, !tbaa !2442
  %add.ptr1011 = getelementptr inbounds i8, i8* %570, i64 %569, !dbg !16622
  store i8* %add.ptr1011, i8** %p, align 8, !dbg !16622, !tbaa !2442
  br label %if.end1012

if.end1012:                                       ; preds = %if.else1010, %if.then1008
  br label %if.end1013, !dbg !16621

if.end1013:                                       ; preds = %if.end1012, %land.lhs.true996, %if.then993
  %571 = load i8*, i8** %p, align 8, !dbg !16618, !tbaa !2442
  store i8 9, i8* %571, align 1, !dbg !16618, !tbaa !2497, !ctir !144
  %572 = load i64, i64* %_n971, align 8, !dbg !16618, !tbaa !2579
  %573 = load i8*, i8** %p, align 8, !dbg !16618, !tbaa !2442
  %add.ptr1014 = getelementptr inbounds i8, i8* %573, i64 %572, !dbg !16618
  store i8* %add.ptr1014, i8** %p, align 8, !dbg !16618, !tbaa !2442
  br label %if.end1015, !dbg !16618

if.end1015:                                       ; preds = %if.end1013, %if.end991
  %574 = load i64, i64* %_incr980, align 8, !dbg !16608, !tbaa !2579
  %575 = load i64, i64* %i, align 8, !dbg !16608, !tbaa !2579
  %add1016 = add i64 %575, %574, !dbg !16608
  store i64 %add1016, i64* %i, align 8, !dbg !16608, !tbaa !2579
  br label %do.end1018, !dbg !16608

do.end1018:                                       ; preds = %if.end1015
  br label %sw.epilog1435, !dbg !16624

sw.bb1019:                                        ; preds = %sw.epilog87
  br label %do.body1020, !dbg !16625

do.body1020:                                      ; preds = %sw.bb1019
  store i32 1, i32* %digits, align 4, !dbg !16626, !tbaa !2436
  %576 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16626, !tbaa !2442
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %576, i32 0, i32 6, !dbg !16626, !ctir !1919
  %577 = load i32, i32* %tm_wday, align 8, !dbg !16626, !tbaa !16628, !ctir !27
  %sub1021 = sub nsw i32 %577, 1, !dbg !16626
  %add1022 = add nsw i32 %sub1021, 7, !dbg !16626
  %rem1023 = srem i32 %add1022, 7, !dbg !16626
  %add1024 = add nsw i32 %rem1023, 1, !dbg !16626
  store i32 %add1024, i32* %number_value, align 4, !dbg !16626, !tbaa !2436
  br label %do_number, !dbg !16626

do.end1026:                                       ; No predecessors!
  br label %sw.bb1027, !dbg !16626

sw.bb1027:                                        ; preds = %sw.epilog87, %do.end1026
  %578 = load i32, i32* %modifier, align 4, !dbg !16629, !tbaa !2436
  %cmp1028 = icmp eq i32 %578, 69, !dbg !16631
  br i1 %cmp1028, label %if.then1030, label %if.end1031, !dbg !16632

if.then1030:                                      ; preds = %sw.bb1027
  br label %bad_format, !dbg !16633

if.end1031:                                       ; preds = %sw.bb1027
  br label %do.body1032, !dbg !16634

do.body1032:                                      ; preds = %if.end1031
  store i32 2, i32* %digits, align 4, !dbg !16635, !tbaa !2436
  %579 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16635, !tbaa !2442
  %tm_yday1033 = getelementptr inbounds %struct.tm, %struct.tm* %579, i32 0, i32 7, !dbg !16635, !ctir !1919
  %580 = load i32, i32* %tm_yday1033, align 4, !dbg !16635, !tbaa !16459, !ctir !27
  %581 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16635, !tbaa !2442
  %tm_wday1034 = getelementptr inbounds %struct.tm, %struct.tm* %581, i32 0, i32 6, !dbg !16635, !ctir !1919
  %582 = load i32, i32* %tm_wday1034, align 8, !dbg !16635, !tbaa !16628, !ctir !27
  %sub1035 = sub nsw i32 %580, %582, !dbg !16635
  %add1036 = add nsw i32 %sub1035, 7, !dbg !16635
  %div1037 = sdiv i32 %add1036, 7, !dbg !16635
  store i32 %div1037, i32* %number_value, align 4, !dbg !16635, !tbaa !2436
  br label %do_number, !dbg !16635

do.end1039:                                       ; No predecessors!
  br label %sw.bb1040, !dbg !16635

sw.bb1040:                                        ; preds = %sw.epilog87, %sw.epilog87, %sw.epilog87, %do.end1039
  %583 = load i32, i32* %modifier, align 4, !dbg !16637, !tbaa !2436
  %cmp1041 = icmp eq i32 %583, 69, !dbg !16639
  br i1 %cmp1041, label %if.then1043, label %if.end1044, !dbg !16640

if.then1043:                                      ; preds = %sw.bb1040
  br label %bad_format, !dbg !16641

if.end1044:                                       ; preds = %sw.bb1040
  call void @llvm.dbg.declare(metadata i32* %year, metadata !16642, metadata !DIExpression()), !dbg !16644
  %584 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16645, !tbaa !2442
  %tm_year1045 = getelementptr inbounds %struct.tm, %struct.tm* %584, i32 0, i32 5, !dbg !16646, !ctir !1919
  %585 = load i32, i32* %tm_year1045, align 4, !dbg !16646, !tbaa !16052, !ctir !27
  %586 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16647, !tbaa !2442
  %tm_year1046 = getelementptr inbounds %struct.tm, %struct.tm* %586, i32 0, i32 5, !dbg !16648, !ctir !1919
  %587 = load i32, i32* %tm_year1046, align 4, !dbg !16648, !tbaa !16052, !ctir !27
  %cmp1047 = icmp slt i32 %587, 0, !dbg !16649
  %588 = zext i1 %cmp1047 to i64, !dbg !16647
  %cond1049 = select i1 %cmp1047, i32 300, i32 -100, !dbg !16647
  %add1050 = add nsw i32 %585, %cond1049, !dbg !16650
  store i32 %add1050, i32* %year, align 4, !dbg !16644, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %year_adjust, metadata !16651, metadata !DIExpression()), !dbg !16652
  store i32 0, i32* %year_adjust, align 4, !dbg !16652, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %days, metadata !16653, metadata !DIExpression()), !dbg !16654
  %589 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16655, !tbaa !2442
  %tm_yday1051 = getelementptr inbounds %struct.tm, %struct.tm* %589, i32 0, i32 7, !dbg !16656, !ctir !1919
  %590 = load i32, i32* %tm_yday1051, align 4, !dbg !16656, !tbaa !16459, !ctir !27
  %591 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16657, !tbaa !2442
  %tm_wday1052 = getelementptr inbounds %struct.tm, %struct.tm* %591, i32 0, i32 6, !dbg !16658, !ctir !1919
  %592 = load i32, i32* %tm_wday1052, align 8, !dbg !16658, !tbaa !16628, !ctir !27
  %call1053 = call i32 @iso_week_days(i32 %590, i32 %592), !dbg !16659
  store i32 %call1053, i32* %days, align 4, !dbg !16654, !tbaa !2436
  %593 = load i32, i32* %days, align 4, !dbg !16660, !tbaa !2436
  %cmp1054 = icmp slt i32 %593, 0, !dbg !16662
  br i1 %cmp1054, label %if.then1056, label %if.else1079, !dbg !16663

if.then1056:                                      ; preds = %if.end1044
  store i32 -1, i32* %year_adjust, align 4, !dbg !16664, !tbaa !2436
  %594 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16666, !tbaa !2442
  %tm_yday1057 = getelementptr inbounds %struct.tm, %struct.tm* %594, i32 0, i32 7, !dbg !16667, !ctir !1919
  %595 = load i32, i32* %tm_yday1057, align 4, !dbg !16667, !tbaa !16459, !ctir !27
  %596 = load i32, i32* %year, align 4, !dbg !16668, !tbaa !2436
  %sub1058 = sub nsw i32 %596, 1, !dbg !16668
  %rem1059 = srem i32 %sub1058, 4, !dbg !16668
  %cmp1060 = icmp eq i32 %rem1059, 0, !dbg !16668
  br i1 %cmp1060, label %land.rhs1062, label %land.end1073, !dbg !16668

land.rhs1062:                                     ; preds = %if.then1056
  %597 = load i32, i32* %year, align 4, !dbg !16668, !tbaa !2436
  %sub1063 = sub nsw i32 %597, 1, !dbg !16668
  %rem1064 = srem i32 %sub1063, 100, !dbg !16668
  %cmp1065 = icmp ne i32 %rem1064, 0, !dbg !16668
  br i1 %cmp1065, label %lor.end1072, label %lor.rhs1067, !dbg !16668

lor.rhs1067:                                      ; preds = %land.rhs1062
  %598 = load i32, i32* %year, align 4, !dbg !16668, !tbaa !2436
  %sub1068 = sub nsw i32 %598, 1, !dbg !16668
  %rem1069 = srem i32 %sub1068, 400, !dbg !16668
  %cmp1070 = icmp eq i32 %rem1069, 0, !dbg !16668
  br label %lor.end1072, !dbg !16668

lor.end1072:                                      ; preds = %lor.rhs1067, %land.rhs1062
  %599 = phi i1 [ true, %land.rhs1062 ], [ %cmp1070, %lor.rhs1067 ]
  br label %land.end1073

land.end1073:                                     ; preds = %lor.end1072, %if.then1056
  %600 = phi i1 [ false, %if.then1056 ], [ %599, %lor.end1072 ], !dbg !16669
  %land.ext1074 = zext i1 %600 to i32, !dbg !16668
  %add1075 = add nsw i32 365, %land.ext1074, !dbg !16670
  %add1076 = add nsw i32 %595, %add1075, !dbg !16671
  %601 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16672, !tbaa !2442
  %tm_wday1077 = getelementptr inbounds %struct.tm, %struct.tm* %601, i32 0, i32 6, !dbg !16673, !ctir !1919
  %602 = load i32, i32* %tm_wday1077, align 8, !dbg !16673, !tbaa !16628, !ctir !27
  %call1078 = call i32 @iso_week_days(i32 %add1076, i32 %602), !dbg !16674
  store i32 %call1078, i32* %days, align 4, !dbg !16675, !tbaa !2436
  br label %if.end1104, !dbg !16676

if.else1079:                                      ; preds = %if.end1044
  call void @llvm.dbg.declare(metadata i32* %d1080, metadata !16677, metadata !DIExpression()), !dbg !16679
  %603 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16680, !tbaa !2442
  %tm_yday1081 = getelementptr inbounds %struct.tm, %struct.tm* %603, i32 0, i32 7, !dbg !16681, !ctir !1919
  %604 = load i32, i32* %tm_yday1081, align 4, !dbg !16681, !tbaa !16459, !ctir !27
  %605 = load i32, i32* %year, align 4, !dbg !16682, !tbaa !2436
  %rem1082 = srem i32 %605, 4, !dbg !16682
  %cmp1083 = icmp eq i32 %rem1082, 0, !dbg !16682
  br i1 %cmp1083, label %land.rhs1085, label %land.end1094, !dbg !16682

land.rhs1085:                                     ; preds = %if.else1079
  %606 = load i32, i32* %year, align 4, !dbg !16682, !tbaa !2436
  %rem1086 = srem i32 %606, 100, !dbg !16682
  %cmp1087 = icmp ne i32 %rem1086, 0, !dbg !16682
  br i1 %cmp1087, label %lor.end1093, label %lor.rhs1089, !dbg !16682

lor.rhs1089:                                      ; preds = %land.rhs1085
  %607 = load i32, i32* %year, align 4, !dbg !16682, !tbaa !2436
  %rem1090 = srem i32 %607, 400, !dbg !16682
  %cmp1091 = icmp eq i32 %rem1090, 0, !dbg !16682
  br label %lor.end1093, !dbg !16682

lor.end1093:                                      ; preds = %lor.rhs1089, %land.rhs1085
  %608 = phi i1 [ true, %land.rhs1085 ], [ %cmp1091, %lor.rhs1089 ]
  br label %land.end1094

land.end1094:                                     ; preds = %lor.end1093, %if.else1079
  %609 = phi i1 [ false, %if.else1079 ], [ %608, %lor.end1093 ], !dbg !16683
  %land.ext1095 = zext i1 %609 to i32, !dbg !16682
  %add1096 = add nsw i32 365, %land.ext1095, !dbg !16684
  %sub1097 = sub nsw i32 %604, %add1096, !dbg !16685
  %610 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16686, !tbaa !2442
  %tm_wday1098 = getelementptr inbounds %struct.tm, %struct.tm* %610, i32 0, i32 6, !dbg !16687, !ctir !1919
  %611 = load i32, i32* %tm_wday1098, align 8, !dbg !16687, !tbaa !16628, !ctir !27
  %call1099 = call i32 @iso_week_days(i32 %sub1097, i32 %611), !dbg !16688
  store i32 %call1099, i32* %d1080, align 4, !dbg !16679, !tbaa !2436
  %612 = load i32, i32* %d1080, align 4, !dbg !16689, !tbaa !2436
  %cmp1100 = icmp sle i32 0, %612, !dbg !16691
  br i1 %cmp1100, label %if.then1102, label %if.end1103, !dbg !16692

if.then1102:                                      ; preds = %land.end1094
  store i32 1, i32* %year_adjust, align 4, !dbg !16693, !tbaa !2436
  %613 = load i32, i32* %d1080, align 4, !dbg !16695, !tbaa !2436
  store i32 %613, i32* %days, align 4, !dbg !16696, !tbaa !2436
  br label %if.end1103, !dbg !16697

if.end1103:                                       ; preds = %if.then1102, %land.end1094
  br label %if.end1104

if.end1104:                                       ; preds = %if.end1103, %land.end1073
  %614 = load i8*, i8** %f, align 8, !dbg !16698, !tbaa !2442
  %615 = load i8, i8* %614, align 1, !dbg !16699, !tbaa !2497, !ctir !147
  %conv1105 = sext i8 %615 to i32, !dbg !16699
  switch i32 %conv1105, label %sw.default1142 [
    i32 103, label %sw.bb1106
    i32 71, label %sw.bb1130
  ], !dbg !16700

sw.bb1106:                                        ; preds = %if.end1104
  call void @llvm.dbg.declare(metadata i32* %yy, metadata !16701, metadata !DIExpression()), !dbg !16704
  %616 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16705, !tbaa !2442
  %tm_year1107 = getelementptr inbounds %struct.tm, %struct.tm* %616, i32 0, i32 5, !dbg !16706, !ctir !1919
  %617 = load i32, i32* %tm_year1107, align 4, !dbg !16706, !tbaa !16052, !ctir !27
  %rem1108 = srem i32 %617, 100, !dbg !16707
  %618 = load i32, i32* %year_adjust, align 4, !dbg !16708, !tbaa !2436
  %add1109 = add nsw i32 %rem1108, %618, !dbg !16709
  %rem1110 = srem i32 %add1109, 100, !dbg !16710
  store i32 %rem1110, i32* %yy, align 4, !dbg !16704, !tbaa !2436
  br label %do.body1111, !dbg !16711

do.body1111:                                      ; preds = %sw.bb1106
  store i32 2, i32* %digits, align 4, !dbg !16712, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16712, !tbaa !2461
  %619 = load i32, i32* %yy, align 4, !dbg !16712, !tbaa !2436
  %cmp1112 = icmp sle i32 0, %619, !dbg !16712
  br i1 %cmp1112, label %cond.true1114, label %cond.false1115, !dbg !16712

cond.true1114:                                    ; preds = %do.body1111
  %620 = load i32, i32* %yy, align 4, !dbg !16712, !tbaa !2436
  br label %cond.end1126, !dbg !16712

cond.false1115:                                   ; preds = %do.body1111
  %621 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16712, !tbaa !2442
  %tm_year1116 = getelementptr inbounds %struct.tm, %struct.tm* %621, i32 0, i32 5, !dbg !16712, !ctir !1919
  %622 = load i32, i32* %tm_year1116, align 4, !dbg !16712, !tbaa !16052, !ctir !27
  %623 = load i32, i32* %year_adjust, align 4, !dbg !16712, !tbaa !2436
  %sub1117 = sub nsw i32 -1900, %623, !dbg !16712
  %cmp1118 = icmp slt i32 %622, %sub1117, !dbg !16712
  br i1 %cmp1118, label %cond.true1120, label %cond.false1122, !dbg !16712

cond.true1120:                                    ; preds = %cond.false1115
  %624 = load i32, i32* %yy, align 4, !dbg !16712, !tbaa !2436
  %sub1121 = sub nsw i32 0, %624, !dbg !16712
  br label %cond.end1124, !dbg !16712

cond.false1122:                                   ; preds = %cond.false1115
  %625 = load i32, i32* %yy, align 4, !dbg !16712, !tbaa !2436
  %add1123 = add nsw i32 %625, 100, !dbg !16712
  br label %cond.end1124, !dbg !16712

cond.end1124:                                     ; preds = %cond.false1122, %cond.true1120
  %cond1125 = phi i32 [ %sub1121, %cond.true1120 ], [ %add1123, %cond.false1122 ], !dbg !16712
  br label %cond.end1126, !dbg !16712

cond.end1126:                                     ; preds = %cond.end1124, %cond.true1114
  %cond1127 = phi i32 [ %620, %cond.true1114 ], [ %cond1125, %cond.end1124 ], !dbg !16712
  store i32 %cond1127, i32* %u_number_value, align 4, !dbg !16712, !tbaa !2436
  br label %do_yearish, !dbg !16712

do.end1129:                                       ; No predecessors!
  br label %sw.bb1130, !dbg !16714

sw.bb1130:                                        ; preds = %if.end1104, %do.end1129
  br label %do.body1131, !dbg !16715

do.body1131:                                      ; preds = %sw.bb1130
  store i32 4, i32* %digits, align 4, !dbg !16716, !tbaa !2436
  %626 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16716, !tbaa !2442
  %tm_year1132 = getelementptr inbounds %struct.tm, %struct.tm* %626, i32 0, i32 5, !dbg !16716, !ctir !1919
  %627 = load i32, i32* %tm_year1132, align 4, !dbg !16716, !tbaa !16052, !ctir !27
  %628 = load i32, i32* %year_adjust, align 4, !dbg !16716, !tbaa !2436
  %sub1133 = sub nsw i32 -1900, %628, !dbg !16716
  %cmp1134 = icmp slt i32 %627, %sub1133, !dbg !16716
  %frombool1136 = zext i1 %cmp1134 to i8, !dbg !16716
  store i8 %frombool1136, i8* %negative_number, align 1, !dbg !16716, !tbaa !2461
  %629 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16716, !tbaa !2442
  %tm_year1137 = getelementptr inbounds %struct.tm, %struct.tm* %629, i32 0, i32 5, !dbg !16716, !ctir !1919
  %630 = load i32, i32* %tm_year1137, align 4, !dbg !16716, !tbaa !16052, !ctir !27
  %add1138 = add i32 %630, 1900, !dbg !16716
  %631 = load i32, i32* %year_adjust, align 4, !dbg !16716, !tbaa !2436
  %add1139 = add i32 %add1138, %631, !dbg !16716
  store i32 %add1139, i32* %u_number_value, align 4, !dbg !16716, !tbaa !2436
  br label %do_yearish, !dbg !16716

do.end1141:                                       ; No predecessors!
  br label %sw.default1142, !dbg !16716

sw.default1142:                                   ; preds = %if.end1104, %do.end1141
  br label %do.body1143, !dbg !16718

do.body1143:                                      ; preds = %sw.default1142
  store i32 2, i32* %digits, align 4, !dbg !16719, !tbaa !2436
  %632 = load i32, i32* %days, align 4, !dbg !16719, !tbaa !2436
  %div1144 = sdiv i32 %632, 7, !dbg !16719
  %add1145 = add nsw i32 %div1144, 1, !dbg !16719
  store i32 %add1145, i32* %number_value, align 4, !dbg !16719, !tbaa !2436
  br label %do_number, !dbg !16719

do.end1147:                                       ; No predecessors!
  br label %sw.epilog1148, !dbg !16721

sw.epilog1148:                                    ; preds = %do.end1147
  br label %sw.bb1149, !dbg !16722

sw.bb1149:                                        ; preds = %sw.epilog87, %sw.epilog1148
  %633 = load i32, i32* %modifier, align 4, !dbg !16723, !tbaa !2436
  %cmp1150 = icmp eq i32 %633, 69, !dbg !16725
  br i1 %cmp1150, label %if.then1152, label %if.end1153, !dbg !16726

if.then1152:                                      ; preds = %sw.bb1149
  br label %bad_format, !dbg !16727

if.end1153:                                       ; preds = %sw.bb1149
  br label %do.body1154, !dbg !16728

do.body1154:                                      ; preds = %if.end1153
  store i32 2, i32* %digits, align 4, !dbg !16729, !tbaa !2436
  %634 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16729, !tbaa !2442
  %tm_yday1155 = getelementptr inbounds %struct.tm, %struct.tm* %634, i32 0, i32 7, !dbg !16729, !ctir !1919
  %635 = load i32, i32* %tm_yday1155, align 4, !dbg !16729, !tbaa !16459, !ctir !27
  %636 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16729, !tbaa !2442
  %tm_wday1156 = getelementptr inbounds %struct.tm, %struct.tm* %636, i32 0, i32 6, !dbg !16729, !ctir !1919
  %637 = load i32, i32* %tm_wday1156, align 8, !dbg !16729, !tbaa !16628, !ctir !27
  %sub1157 = sub nsw i32 %637, 1, !dbg !16729
  %add1158 = add nsw i32 %sub1157, 7, !dbg !16729
  %rem1159 = srem i32 %add1158, 7, !dbg !16729
  %sub1160 = sub nsw i32 %635, %rem1159, !dbg !16729
  %add1161 = add nsw i32 %sub1160, 7, !dbg !16729
  %div1162 = sdiv i32 %add1161, 7, !dbg !16729
  store i32 %div1162, i32* %number_value, align 4, !dbg !16729, !tbaa !2436
  br label %do_number, !dbg !16729

do.end1164:                                       ; No predecessors!
  br label %sw.bb1165, !dbg !16729

sw.bb1165:                                        ; preds = %sw.epilog87, %do.end1164
  %638 = load i32, i32* %modifier, align 4, !dbg !16731, !tbaa !2436
  %cmp1166 = icmp eq i32 %638, 69, !dbg !16733
  br i1 %cmp1166, label %if.then1168, label %if.end1169, !dbg !16734

if.then1168:                                      ; preds = %sw.bb1165
  br label %bad_format, !dbg !16735

if.end1169:                                       ; preds = %sw.bb1165
  br label %do.body1170, !dbg !16736

do.body1170:                                      ; preds = %if.end1169
  store i32 1, i32* %digits, align 4, !dbg !16737, !tbaa !2436
  %639 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16737, !tbaa !2442
  %tm_wday1171 = getelementptr inbounds %struct.tm, %struct.tm* %639, i32 0, i32 6, !dbg !16737, !ctir !1919
  %640 = load i32, i32* %tm_wday1171, align 8, !dbg !16737, !tbaa !16628, !ctir !27
  store i32 %640, i32* %number_value, align 4, !dbg !16737, !tbaa !2436
  br label %do_number, !dbg !16737

do.end1173:                                       ; No predecessors!
  br label %sw.bb1174, !dbg !16737

sw.bb1174:                                        ; preds = %sw.epilog87, %do.end1173
  %641 = load i32, i32* %modifier, align 4, !dbg !16739, !tbaa !2436
  %cmp1175 = icmp eq i32 %641, 69, !dbg !16741
  br i1 %cmp1175, label %if.then1177, label %if.end1178, !dbg !16742

if.then1177:                                      ; preds = %sw.bb1174
  br label %underlying_strftime, !dbg !16743

if.end1178:                                       ; preds = %sw.bb1174
  %642 = load i32, i32* %modifier, align 4, !dbg !16745, !tbaa !2436
  %cmp1179 = icmp eq i32 %642, 79, !dbg !16747
  br i1 %cmp1179, label %if.then1181, label %if.end1182, !dbg !16748

if.then1181:                                      ; preds = %if.end1178
  br label %bad_format, !dbg !16749

if.end1182:                                       ; preds = %if.end1178
  br label %do.body1183, !dbg !16750

do.body1183:                                      ; preds = %if.end1182
  store i32 4, i32* %digits, align 4, !dbg !16751, !tbaa !2436
  %643 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16751, !tbaa !2442
  %tm_year1184 = getelementptr inbounds %struct.tm, %struct.tm* %643, i32 0, i32 5, !dbg !16751, !ctir !1919
  %644 = load i32, i32* %tm_year1184, align 4, !dbg !16751, !tbaa !16052, !ctir !27
  %cmp1185 = icmp slt i32 %644, -1900, !dbg !16751
  %frombool1187 = zext i1 %cmp1185 to i8, !dbg !16751
  store i8 %frombool1187, i8* %negative_number, align 1, !dbg !16751, !tbaa !2461
  %645 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16751, !tbaa !2442
  %tm_year1188 = getelementptr inbounds %struct.tm, %struct.tm* %645, i32 0, i32 5, !dbg !16751, !ctir !1919
  %646 = load i32, i32* %tm_year1188, align 4, !dbg !16751, !tbaa !16052, !ctir !27
  %add1189 = add i32 %646, 1900, !dbg !16751
  store i32 %add1189, i32* %u_number_value, align 4, !dbg !16751, !tbaa !2436
  br label %do_yearish, !dbg !16751

do.end1191:                                       ; No predecessors!
  br label %sw.bb1192, !dbg !16751

sw.bb1192:                                        ; preds = %sw.epilog87, %do.end1191
  %647 = load i32, i32* %modifier, align 4, !dbg !16753, !tbaa !2436
  %cmp1193 = icmp eq i32 %647, 69, !dbg !16755
  br i1 %cmp1193, label %if.then1195, label %if.end1196, !dbg !16756

if.then1195:                                      ; preds = %sw.bb1192
  br label %underlying_strftime, !dbg !16757

if.end1196:                                       ; preds = %sw.bb1192
  call void @llvm.dbg.declare(metadata i32* %yy1197, metadata !16759, metadata !DIExpression()), !dbg !16761
  %648 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16762, !tbaa !2442
  %tm_year1198 = getelementptr inbounds %struct.tm, %struct.tm* %648, i32 0, i32 5, !dbg !16763, !ctir !1919
  %649 = load i32, i32* %tm_year1198, align 4, !dbg !16763, !tbaa !16052, !ctir !27
  %rem1199 = srem i32 %649, 100, !dbg !16764
  store i32 %rem1199, i32* %yy1197, align 4, !dbg !16761, !tbaa !2436
  %650 = load i32, i32* %yy1197, align 4, !dbg !16765, !tbaa !2436
  %cmp1200 = icmp slt i32 %650, 0, !dbg !16767
  br i1 %cmp1200, label %if.then1202, label %if.end1212, !dbg !16768

if.then1202:                                      ; preds = %if.end1196
  %651 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16769, !tbaa !2442
  %tm_year1203 = getelementptr inbounds %struct.tm, %struct.tm* %651, i32 0, i32 5, !dbg !16770, !ctir !1919
  %652 = load i32, i32* %tm_year1203, align 4, !dbg !16770, !tbaa !16052, !ctir !27
  %cmp1204 = icmp slt i32 %652, -1900, !dbg !16771
  br i1 %cmp1204, label %cond.true1206, label %cond.false1208, !dbg !16769

cond.true1206:                                    ; preds = %if.then1202
  %653 = load i32, i32* %yy1197, align 4, !dbg !16772, !tbaa !2436
  %sub1207 = sub nsw i32 0, %653, !dbg !16773
  br label %cond.end1210, !dbg !16769

cond.false1208:                                   ; preds = %if.then1202
  %654 = load i32, i32* %yy1197, align 4, !dbg !16774, !tbaa !2436
  %add1209 = add nsw i32 %654, 100, !dbg !16775
  br label %cond.end1210, !dbg !16769

cond.end1210:                                     ; preds = %cond.false1208, %cond.true1206
  %cond1211 = phi i32 [ %sub1207, %cond.true1206 ], [ %add1209, %cond.false1208 ], !dbg !16769
  store i32 %cond1211, i32* %yy1197, align 4, !dbg !16776, !tbaa !2436
  br label %if.end1212, !dbg !16777

if.end1212:                                       ; preds = %cond.end1210, %if.end1196
  br label %do.body1213, !dbg !16778

do.body1213:                                      ; preds = %if.end1212
  store i32 2, i32* %digits, align 4, !dbg !16779, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16779, !tbaa !2461
  %655 = load i32, i32* %yy1197, align 4, !dbg !16779, !tbaa !2436
  store i32 %655, i32* %u_number_value, align 4, !dbg !16779, !tbaa !2436
  br label %do_yearish, !dbg !16779

do.end1215:                                       ; No predecessors!
  br label %sw.bb1216, !dbg !16781

sw.bb1216:                                        ; preds = %sw.epilog87, %do.end1215
  %656 = load i8, i8* %change_case, align 1, !dbg !16782, !tbaa !2461
  %tobool1217 = trunc i8 %656 to i1, !dbg !16782
  br i1 %tobool1217, label %if.then1218, label %if.end1219, !dbg !16784

if.then1218:                                      ; preds = %sw.bb1216
  store i8 0, i8* %to_uppcase, align 1, !dbg !16785, !tbaa !2461
  store i8 1, i8* %to_lowcase, align 1, !dbg !16787, !tbaa !2461
  br label %if.end1219, !dbg !16788

if.end1219:                                       ; preds = %if.then1218, %sw.bb1216
  br label %do.body1220, !dbg !16789

do.body1220:                                      ; preds = %if.end1219
  call void @llvm.dbg.declare(metadata i64* %_n1221, metadata !16790, metadata !DIExpression()), !dbg !16792
  %657 = load i8*, i8** %zone, align 8, !dbg !16792, !tbaa !2442
  %call1222 = call i64 @strlen(i8* %657) #16, !dbg !16792
  store i64 %call1222, i64* %_n1221, align 8, !dbg !16792, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w1223, metadata !16793, metadata !DIExpression()), !dbg !16792
  %658 = load i32, i32* %width.addr, align 4, !dbg !16792, !tbaa !2436
  %cmp1224 = icmp slt i32 %658, 0, !dbg !16792
  br i1 %cmp1224, label %cond.true1226, label %cond.false1227, !dbg !16792

cond.true1226:                                    ; preds = %do.body1220
  br label %cond.end1228, !dbg !16792

cond.false1227:                                   ; preds = %do.body1220
  %659 = load i32, i32* %width.addr, align 4, !dbg !16792, !tbaa !2436
  br label %cond.end1228, !dbg !16792

cond.end1228:                                     ; preds = %cond.false1227, %cond.true1226
  %cond1229 = phi i32 [ 0, %cond.true1226 ], [ %659, %cond.false1227 ], !dbg !16792
  %conv1230 = sext i32 %cond1229 to i64, !dbg !16792
  store i64 %conv1230, i64* %_w1223, align 8, !dbg !16792, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr1231, metadata !16794, metadata !DIExpression()), !dbg !16792
  %660 = load i64, i64* %_n1221, align 8, !dbg !16792, !tbaa !2579
  %661 = load i64, i64* %_w1223, align 8, !dbg !16792, !tbaa !2579
  %cmp1232 = icmp ult i64 %660, %661, !dbg !16792
  br i1 %cmp1232, label %cond.true1234, label %cond.false1235, !dbg !16792

cond.true1234:                                    ; preds = %cond.end1228
  %662 = load i64, i64* %_w1223, align 8, !dbg !16792, !tbaa !2579
  br label %cond.end1236, !dbg !16792

cond.false1235:                                   ; preds = %cond.end1228
  %663 = load i64, i64* %_n1221, align 8, !dbg !16792, !tbaa !2579
  br label %cond.end1236, !dbg !16792

cond.end1236:                                     ; preds = %cond.false1235, %cond.true1234
  %cond1237 = phi i64 [ %662, %cond.true1234 ], [ %663, %cond.false1235 ], !dbg !16792
  store i64 %cond1237, i64* %_incr1231, align 8, !dbg !16792, !tbaa !2579
  %664 = load i64, i64* %_incr1231, align 8, !dbg !16795, !tbaa !2579
  %665 = load i64, i64* %maxsize.addr, align 8, !dbg !16795, !tbaa !2579
  %666 = load i64, i64* %i, align 8, !dbg !16795, !tbaa !2579
  %sub1238 = sub i64 %665, %666, !dbg !16795
  %cmp1239 = icmp uge i64 %664, %sub1238, !dbg !16795
  br i1 %cmp1239, label %if.then1241, label %if.end1242, !dbg !16792

if.then1241:                                      ; preds = %cond.end1236
  store i64 0, i64* %retval, align 8, !dbg !16795
  br label %return, !dbg !16795

if.end1242:                                       ; preds = %cond.end1236
  %667 = load i8*, i8** %p, align 8, !dbg !16797, !tbaa !2442
  %tobool1243 = icmp ne i8* %667, null, !dbg !16797
  br i1 %tobool1243, label %if.then1244, label %if.end1276, !dbg !16792

if.then1244:                                      ; preds = %if.end1242
  %668 = load i32, i32* %digits, align 4, !dbg !16799, !tbaa !2436
  %cmp1245 = icmp eq i32 %668, 0, !dbg !16799
  br i1 %cmp1245, label %land.lhs.true1247, label %if.end1264, !dbg !16799

land.lhs.true1247:                                ; preds = %if.then1244
  %669 = load i64, i64* %_n1221, align 8, !dbg !16799, !tbaa !2579
  %670 = load i64, i64* %_w1223, align 8, !dbg !16799, !tbaa !2579
  %cmp1248 = icmp ult i64 %669, %670, !dbg !16799
  br i1 %cmp1248, label %if.then1250, label %if.end1264, !dbg !16802

if.then1250:                                      ; preds = %land.lhs.true1247
  call void @llvm.dbg.declare(metadata i64* %_delta1251, metadata !16803, metadata !DIExpression()), !dbg !16805
  %671 = load i32, i32* %width.addr, align 4, !dbg !16805, !tbaa !2436
  %conv1252 = sext i32 %671 to i64, !dbg !16805
  %672 = load i64, i64* %_n1221, align 8, !dbg !16805, !tbaa !2579
  %sub1253 = sub i64 %conv1252, %672, !dbg !16805
  store i64 %sub1253, i64* %_delta1251, align 8, !dbg !16805, !tbaa !2579
  %673 = load i32, i32* %pad, align 4, !dbg !16806, !tbaa !2436
  %cmp1254 = icmp eq i32 %673, 48, !dbg !16806
  br i1 %cmp1254, label %if.then1259, label %lor.lhs.false1256, !dbg !16806

lor.lhs.false1256:                                ; preds = %if.then1250
  %674 = load i32, i32* %pad, align 4, !dbg !16806, !tbaa !2436
  %cmp1257 = icmp eq i32 %674, 43, !dbg !16806
  br i1 %cmp1257, label %if.then1259, label %if.else1261, !dbg !16805

if.then1259:                                      ; preds = %lor.lhs.false1256, %if.then1250
  %675 = load i8*, i8** %p, align 8, !dbg !16806, !tbaa !2442
  %676 = load i64, i64* %_delta1251, align 8, !dbg !16806, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %675, i8 48, i64 %676, i1 false), !dbg !16806
  %677 = load i64, i64* %_delta1251, align 8, !dbg !16806, !tbaa !2579
  %678 = load i8*, i8** %p, align 8, !dbg !16806, !tbaa !2442
  %add.ptr1260 = getelementptr inbounds i8, i8* %678, i64 %677, !dbg !16806
  store i8* %add.ptr1260, i8** %p, align 8, !dbg !16806, !tbaa !2442
  br label %if.end1263, !dbg !16806

if.else1261:                                      ; preds = %lor.lhs.false1256
  %679 = load i8*, i8** %p, align 8, !dbg !16806, !tbaa !2442
  %680 = load i64, i64* %_delta1251, align 8, !dbg !16806, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %679, i8 32, i64 %680, i1 false), !dbg !16806
  %681 = load i64, i64* %_delta1251, align 8, !dbg !16806, !tbaa !2579
  %682 = load i8*, i8** %p, align 8, !dbg !16806, !tbaa !2442
  %add.ptr1262 = getelementptr inbounds i8, i8* %682, i64 %681, !dbg !16806
  store i8* %add.ptr1262, i8** %p, align 8, !dbg !16806, !tbaa !2442
  br label %if.end1263

if.end1263:                                       ; preds = %if.else1261, %if.then1259
  br label %if.end1264, !dbg !16805

if.end1264:                                       ; preds = %if.end1263, %land.lhs.true1247, %if.then1244
  %683 = load i8, i8* %to_lowcase, align 1, !dbg !16808, !tbaa !2461
  %tobool1265 = trunc i8 %683 to i1, !dbg !16808
  br i1 %tobool1265, label %if.then1266, label %if.else1268, !dbg !16802

if.then1266:                                      ; preds = %if.end1264
  %684 = load i8*, i8** %p, align 8, !dbg !16808, !tbaa !2442
  %685 = load i8*, i8** %zone, align 8, !dbg !16808, !tbaa !2442
  %686 = load i64, i64* %_n1221, align 8, !dbg !16808, !tbaa !2579
  %call1267 = call i8* @memcpy_lowcase(i8* %684, i8* %685, i64 %686), !dbg !16808
  br label %if.end1274, !dbg !16808

if.else1268:                                      ; preds = %if.end1264
  %687 = load i8, i8* %to_uppcase, align 1, !dbg !16810, !tbaa !2461
  %tobool1269 = trunc i8 %687 to i1, !dbg !16810
  br i1 %tobool1269, label %if.then1270, label %if.else1272, !dbg !16808

if.then1270:                                      ; preds = %if.else1268
  %688 = load i8*, i8** %p, align 8, !dbg !16810, !tbaa !2442
  %689 = load i8*, i8** %zone, align 8, !dbg !16810, !tbaa !2442
  %690 = load i64, i64* %_n1221, align 8, !dbg !16810, !tbaa !2579
  %call1271 = call i8* @memcpy_uppcase(i8* %688, i8* %689, i64 %690), !dbg !16810
  br label %if.end1273, !dbg !16810

if.else1272:                                      ; preds = %if.else1268
  %691 = load i8*, i8** %p, align 8, !dbg !16810, !tbaa !2442
  %692 = load i8*, i8** %zone, align 8, !dbg !16810, !tbaa !2442
  %693 = load i64, i64* %_n1221, align 8, !dbg !16810, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %691, i8* align 1 %692, i64 %693, i1 false), !dbg !16810
  br label %if.end1273

if.end1273:                                       ; preds = %if.else1272, %if.then1270
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1273, %if.then1266
  %694 = load i64, i64* %_n1221, align 8, !dbg !16802, !tbaa !2579
  %695 = load i8*, i8** %p, align 8, !dbg !16802, !tbaa !2442
  %add.ptr1275 = getelementptr inbounds i8, i8* %695, i64 %694, !dbg !16802
  store i8* %add.ptr1275, i8** %p, align 8, !dbg !16802, !tbaa !2442
  br label %if.end1276, !dbg !16802

if.end1276:                                       ; preds = %if.end1274, %if.end1242
  %696 = load i64, i64* %_incr1231, align 8, !dbg !16792, !tbaa !2579
  %697 = load i64, i64* %i, align 8, !dbg !16792, !tbaa !2579
  %add1277 = add i64 %697, %696, !dbg !16792
  store i64 %add1277, i64* %i, align 8, !dbg !16792, !tbaa !2579
  br label %do.end1279, !dbg !16792

do.end1279:                                       ; preds = %if.end1276
  br label %sw.epilog1435, !dbg !16812

sw.bb1280:                                        ; preds = %sw.epilog87
  store i64 1, i64* %colons, align 8, !dbg !16813, !tbaa !2579
  br label %for.cond1281, !dbg !16815

for.cond1281:                                     ; preds = %for.inc1286, %sw.bb1280
  %698 = load i8*, i8** %f, align 8, !dbg !16816, !tbaa !2442
  %699 = load i64, i64* %colons, align 8, !dbg !16818, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %698, i64 %699, !dbg !16816, !ctir !146
  %700 = load i8, i8* %arrayidx, align 1, !dbg !16816, !tbaa !2497
  %conv1282 = sext i8 %700 to i32, !dbg !16816
  %cmp1283 = icmp eq i32 %conv1282, 58, !dbg !16819
  br i1 %cmp1283, label %for.body1285, label %for.end1288, !dbg !16820

for.body1285:                                     ; preds = %for.cond1281
  br label %for.inc1286, !dbg !16821

for.inc1286:                                      ; preds = %for.body1285
  %701 = load i64, i64* %colons, align 8, !dbg !16822, !tbaa !2579
  %inc1287 = add i64 %701, 1, !dbg !16822
  store i64 %inc1287, i64* %colons, align 8, !dbg !16822, !tbaa !2579
  br label %for.cond1281, !dbg !16823, !llvm.loop !16824

for.end1288:                                      ; preds = %for.cond1281
  %702 = load i8*, i8** %f, align 8, !dbg !16826, !tbaa !2442
  %703 = load i64, i64* %colons, align 8, !dbg !16828, !tbaa !2579
  %arrayidx1289 = getelementptr inbounds i8, i8* %702, i64 %703, !dbg !16826, !ctir !146
  %704 = load i8, i8* %arrayidx1289, align 1, !dbg !16826, !tbaa !2497
  %conv1290 = sext i8 %704 to i32, !dbg !16826
  %cmp1291 = icmp ne i32 %conv1290, 122, !dbg !16829
  br i1 %cmp1291, label %if.then1293, label %if.end1294, !dbg !16830

if.then1293:                                      ; preds = %for.end1288
  br label %bad_format, !dbg !16831

if.end1294:                                       ; preds = %for.end1288
  %705 = load i64, i64* %colons, align 8, !dbg !16832, !tbaa !2579
  %706 = load i8*, i8** %f, align 8, !dbg !16833, !tbaa !2442
  %add.ptr1295 = getelementptr inbounds i8, i8* %706, i64 %705, !dbg !16833
  store i8* %add.ptr1295, i8** %f, align 8, !dbg !16833, !tbaa !2442
  br label %do_z_conversion, !dbg !16834

sw.bb1296:                                        ; preds = %sw.epilog87
  store i64 0, i64* %colons, align 8, !dbg !16835, !tbaa !2579
  br label %do_z_conversion, !dbg !16836

do_z_conversion:                                  ; preds = %sw.bb1296, %if.end1294
  call void @llvm.dbg.label(metadata !16837), !dbg !16838
  %707 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16839, !tbaa !2442
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %707, i32 0, i32 8, !dbg !16841, !ctir !1919
  %708 = load i32, i32* %tm_isdst, align 8, !dbg !16841, !tbaa !16842, !ctir !27
  %cmp1297 = icmp slt i32 %708, 0, !dbg !16843
  br i1 %cmp1297, label %if.then1299, label %if.end1300, !dbg !16844

if.then1299:                                      ; preds = %do_z_conversion
  br label %sw.epilog1435, !dbg !16845

if.end1300:                                       ; preds = %do_z_conversion
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !16846, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.declare(metadata i32* %hour_diff, metadata !16849, metadata !DIExpression()), !dbg !16850
  call void @llvm.dbg.declare(metadata i32* %min_diff, metadata !16851, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.declare(metadata i32* %sec_diff, metadata !16853, metadata !DIExpression()), !dbg !16854
  %709 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16855, !tbaa !2442
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %709, i32 0, i32 9, !dbg !16856, !ctir !1919
  %710 = load i64, i64* %tm_gmtoff, align 8, !dbg !16856, !tbaa !16857, !ctir !166
  %conv1301 = trunc i64 %710 to i32, !dbg !16855
  store i32 %conv1301, i32* %diff, align 4, !dbg !16858, !tbaa !2436
  %711 = load i32, i32* %diff, align 4, !dbg !16859, !tbaa !2436
  %cmp1302 = icmp slt i32 %711, 0, !dbg !16860
  br i1 %cmp1302, label %lor.end1313, label %lor.rhs1304, !dbg !16861

lor.rhs1304:                                      ; preds = %if.end1300
  %712 = load i32, i32* %diff, align 4, !dbg !16862, !tbaa !2436
  %cmp1305 = icmp eq i32 %712, 0, !dbg !16863
  br i1 %cmp1305, label %land.rhs1307, label %land.end1311, !dbg !16864

land.rhs1307:                                     ; preds = %lor.rhs1304
  %713 = load i8*, i8** %zone, align 8, !dbg !16865, !tbaa !2442
  %714 = load i8, i8* %713, align 1, !dbg !16866, !tbaa !2497, !ctir !147
  %conv1308 = sext i8 %714 to i32, !dbg !16866
  %cmp1309 = icmp eq i32 %conv1308, 45, !dbg !16867
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1307, %lor.rhs1304
  %715 = phi i1 [ false, %lor.rhs1304 ], [ %cmp1309, %land.rhs1307 ], !dbg !16868
  br label %lor.end1313, !dbg !16861

lor.end1313:                                      ; preds = %land.end1311, %if.end1300
  %716 = phi i1 [ true, %if.end1300 ], [ %715, %land.end1311 ]
  %frombool1314 = zext i1 %716 to i8, !dbg !16869
  store i8 %frombool1314, i8* %negative_number, align 1, !dbg !16869, !tbaa !2461
  %717 = load i32, i32* %diff, align 4, !dbg !16870, !tbaa !2436
  %div1315 = sdiv i32 %717, 60, !dbg !16871
  %div1316 = sdiv i32 %div1315, 60, !dbg !16872
  store i32 %div1316, i32* %hour_diff, align 4, !dbg !16873, !tbaa !2436
  %718 = load i32, i32* %diff, align 4, !dbg !16874, !tbaa !2436
  %div1317 = sdiv i32 %718, 60, !dbg !16875
  %rem1318 = srem i32 %div1317, 60, !dbg !16876
  store i32 %rem1318, i32* %min_diff, align 4, !dbg !16877, !tbaa !2436
  %719 = load i32, i32* %diff, align 4, !dbg !16878, !tbaa !2436
  %rem1319 = srem i32 %719, 60, !dbg !16879
  store i32 %rem1319, i32* %sec_diff, align 4, !dbg !16880, !tbaa !2436
  %720 = load i64, i64* %colons, align 8, !dbg !16881, !tbaa !2579
  switch i64 %720, label %sw.default1352 [
    i64 0, label %sw.bb1320
    i64 1, label %sw.bb1326
    i64 2, label %sw.bb1332
    i64 3, label %sw.bb1340
  ], !dbg !16882

sw.bb1320:                                        ; preds = %lor.end1313
  br label %do.body1321, !dbg !16883

do.body1321:                                      ; preds = %sw.bb1320
  store i32 5, i32* %digits, align 4, !dbg !16885, !tbaa !2436
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16885, !tbaa !2436
  %721 = load i32, i32* %hour_diff, align 4, !dbg !16885, !tbaa !2436
  %mul1322 = mul nsw i32 %721, 100, !dbg !16885
  %722 = load i32, i32* %min_diff, align 4, !dbg !16885, !tbaa !2436
  %add1323 = add nsw i32 %mul1322, %722, !dbg !16885
  store i32 %add1323, i32* %u_number_value, align 4, !dbg !16885, !tbaa !2436
  br label %do_tz_offset, !dbg !16885

do.end1325:                                       ; No predecessors!
  br label %sw.bb1326, !dbg !16885

sw.bb1326:                                        ; preds = %lor.end1313, %do.end1325
  br label %tz_hh_mm, !dbg !16885

tz_hh_mm:                                         ; preds = %if.then1347, %sw.bb1326
  call void @llvm.dbg.label(metadata !16887), !dbg !16888
  br label %do.body1327, !dbg !16889

do.body1327:                                      ; preds = %tz_hh_mm
  store i32 6, i32* %digits, align 4, !dbg !16890, !tbaa !2436
  store i32 4, i32* %tz_colon_mask, align 4, !dbg !16890, !tbaa !2436
  %723 = load i32, i32* %hour_diff, align 4, !dbg !16890, !tbaa !2436
  %mul1328 = mul nsw i32 %723, 100, !dbg !16890
  %724 = load i32, i32* %min_diff, align 4, !dbg !16890, !tbaa !2436
  %add1329 = add nsw i32 %mul1328, %724, !dbg !16890
  store i32 %add1329, i32* %u_number_value, align 4, !dbg !16890, !tbaa !2436
  br label %do_tz_offset, !dbg !16890

do.end1331:                                       ; No predecessors!
  br label %sw.bb1332, !dbg !16890

sw.bb1332:                                        ; preds = %lor.end1313, %do.end1331
  br label %tz_hh_mm_ss, !dbg !16890

tz_hh_mm_ss:                                      ; preds = %if.then1343, %sw.bb1332
  call void @llvm.dbg.label(metadata !16892), !dbg !16893
  br label %do.body1333, !dbg !16894

do.body1333:                                      ; preds = %tz_hh_mm_ss
  store i32 9, i32* %digits, align 4, !dbg !16895, !tbaa !2436
  store i32 20, i32* %tz_colon_mask, align 4, !dbg !16895, !tbaa !2436
  %725 = load i32, i32* %hour_diff, align 4, !dbg !16895, !tbaa !2436
  %mul1334 = mul nsw i32 %725, 10000, !dbg !16895
  %726 = load i32, i32* %min_diff, align 4, !dbg !16895, !tbaa !2436
  %mul1335 = mul nsw i32 %726, 100, !dbg !16895
  %add1336 = add nsw i32 %mul1334, %mul1335, !dbg !16895
  %727 = load i32, i32* %sec_diff, align 4, !dbg !16895, !tbaa !2436
  %add1337 = add nsw i32 %add1336, %727, !dbg !16895
  store i32 %add1337, i32* %u_number_value, align 4, !dbg !16895, !tbaa !2436
  br label %do_tz_offset, !dbg !16895

do.end1339:                                       ; No predecessors!
  br label %sw.bb1340, !dbg !16895

sw.bb1340:                                        ; preds = %lor.end1313, %do.end1339
  %728 = load i32, i32* %sec_diff, align 4, !dbg !16897, !tbaa !2436
  %cmp1341 = icmp ne i32 %728, 0, !dbg !16899
  br i1 %cmp1341, label %if.then1343, label %if.end1344, !dbg !16900

if.then1343:                                      ; preds = %sw.bb1340
  br label %tz_hh_mm_ss, !dbg !16901

if.end1344:                                       ; preds = %sw.bb1340
  %729 = load i32, i32* %min_diff, align 4, !dbg !16902, !tbaa !2436
  %cmp1345 = icmp ne i32 %729, 0, !dbg !16904
  br i1 %cmp1345, label %if.then1347, label %if.end1348, !dbg !16905

if.then1347:                                      ; preds = %if.end1344
  br label %tz_hh_mm, !dbg !16906

if.end1348:                                       ; preds = %if.end1344
  br label %do.body1349, !dbg !16907

do.body1349:                                      ; preds = %if.end1348
  store i32 3, i32* %digits, align 4, !dbg !16908, !tbaa !2436
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16908, !tbaa !2436
  %730 = load i32, i32* %hour_diff, align 4, !dbg !16908, !tbaa !2436
  store i32 %730, i32* %u_number_value, align 4, !dbg !16908, !tbaa !2436
  br label %do_tz_offset, !dbg !16908

do.end1351:                                       ; No predecessors!
  br label %sw.default1352, !dbg !16908

sw.default1352:                                   ; preds = %lor.end1313, %do.end1351
  br label %bad_format, !dbg !16910

sw.bb1353:                                        ; preds = %sw.epilog87
  %731 = load i8*, i8** %f, align 8, !dbg !16911, !tbaa !2442
  %incdec.ptr1354 = getelementptr inbounds i8, i8* %731, i32 -1, !dbg !16911
  store i8* %incdec.ptr1354, i8** %f, align 8, !dbg !16911, !tbaa !2442
  br label %sw.default1355, !dbg !16912

sw.default1355:                                   ; preds = %sw.epilog87, %sw.bb1353
  br label %bad_format, !dbg !16912

bad_format:                                       ; preds = %sw.default1355, %sw.default1352, %if.then1293, %if.then1181, %if.then1168, %if.then1152, %if.then1043, %if.then1030, %if.then966, %if.then933, %if.then850, %if.then837, %if.then829, %if.then816, %if.then808, %if.then799, %if.then791, %if.then782, %if.then764, %if.then357, %if.then349, %if.then344, %if.then339, %if.then178, %if.then170, %if.then165, %if.then154, %if.then146, %if.then92
  call void @llvm.dbg.label(metadata !16913), !dbg !16914
  call void @llvm.dbg.declare(metadata i32* %flen, metadata !16915, metadata !DIExpression()), !dbg !16917
  store i32 1, i32* %flen, align 4, !dbg !16918, !tbaa !2436
  br label %for.cond1356, !dbg !16920

for.cond1356:                                     ; preds = %for.inc1363, %bad_format
  %732 = load i8*, i8** %f, align 8, !dbg !16921, !tbaa !2442
  %733 = load i32, i32* %flen, align 4, !dbg !16923, !tbaa !2436
  %sub1357 = sub nsw i32 1, %733, !dbg !16924
  %idxprom = sext i32 %sub1357 to i64, !dbg !16921
  %arrayidx1358 = getelementptr inbounds i8, i8* %732, i64 %idxprom, !dbg !16921, !ctir !146
  %734 = load i8, i8* %arrayidx1358, align 1, !dbg !16921, !tbaa !2497
  %conv1359 = sext i8 %734 to i32, !dbg !16921
  %cmp1360 = icmp ne i32 %conv1359, 37, !dbg !16925
  br i1 %cmp1360, label %for.body1362, label %for.end1365, !dbg !16926

for.body1362:                                     ; preds = %for.cond1356
  br label %for.inc1363, !dbg !16927

for.inc1363:                                      ; preds = %for.body1362
  %735 = load i32, i32* %flen, align 4, !dbg !16928, !tbaa !2436
  %inc1364 = add nsw i32 %735, 1, !dbg !16928
  store i32 %inc1364, i32* %flen, align 4, !dbg !16928, !tbaa !2436
  br label %for.cond1356, !dbg !16929, !llvm.loop !16930

for.end1365:                                      ; preds = %for.cond1356
  br label %do.body1366, !dbg !16932

do.body1366:                                      ; preds = %for.end1365
  call void @llvm.dbg.declare(metadata i64* %_n1367, metadata !16933, metadata !DIExpression()), !dbg !16935
  %736 = load i32, i32* %flen, align 4, !dbg !16935, !tbaa !2436
  %conv1368 = sext i32 %736 to i64, !dbg !16935
  store i64 %conv1368, i64* %_n1367, align 8, !dbg !16935, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w1369, metadata !16936, metadata !DIExpression()), !dbg !16935
  %737 = load i32, i32* %width.addr, align 4, !dbg !16935, !tbaa !2436
  %cmp1370 = icmp slt i32 %737, 0, !dbg !16935
  br i1 %cmp1370, label %cond.true1372, label %cond.false1373, !dbg !16935

cond.true1372:                                    ; preds = %do.body1366
  br label %cond.end1374, !dbg !16935

cond.false1373:                                   ; preds = %do.body1366
  %738 = load i32, i32* %width.addr, align 4, !dbg !16935, !tbaa !2436
  br label %cond.end1374, !dbg !16935

cond.end1374:                                     ; preds = %cond.false1373, %cond.true1372
  %cond1375 = phi i32 [ 0, %cond.true1372 ], [ %738, %cond.false1373 ], !dbg !16935
  %conv1376 = sext i32 %cond1375 to i64, !dbg !16935
  store i64 %conv1376, i64* %_w1369, align 8, !dbg !16935, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr1377, metadata !16937, metadata !DIExpression()), !dbg !16935
  %739 = load i64, i64* %_n1367, align 8, !dbg !16935, !tbaa !2579
  %740 = load i64, i64* %_w1369, align 8, !dbg !16935, !tbaa !2579
  %cmp1378 = icmp ult i64 %739, %740, !dbg !16935
  br i1 %cmp1378, label %cond.true1380, label %cond.false1381, !dbg !16935

cond.true1380:                                    ; preds = %cond.end1374
  %741 = load i64, i64* %_w1369, align 8, !dbg !16935, !tbaa !2579
  br label %cond.end1382, !dbg !16935

cond.false1381:                                   ; preds = %cond.end1374
  %742 = load i64, i64* %_n1367, align 8, !dbg !16935, !tbaa !2579
  br label %cond.end1382, !dbg !16935

cond.end1382:                                     ; preds = %cond.false1381, %cond.true1380
  %cond1383 = phi i64 [ %741, %cond.true1380 ], [ %742, %cond.false1381 ], !dbg !16935
  store i64 %cond1383, i64* %_incr1377, align 8, !dbg !16935, !tbaa !2579
  %743 = load i64, i64* %_incr1377, align 8, !dbg !16938, !tbaa !2579
  %744 = load i64, i64* %maxsize.addr, align 8, !dbg !16938, !tbaa !2579
  %745 = load i64, i64* %i, align 8, !dbg !16938, !tbaa !2579
  %sub1384 = sub i64 %744, %745, !dbg !16938
  %cmp1385 = icmp uge i64 %743, %sub1384, !dbg !16938
  br i1 %cmp1385, label %if.then1387, label %if.end1388, !dbg !16935

if.then1387:                                      ; preds = %cond.end1382
  store i64 0, i64* %retval, align 8, !dbg !16938
  br label %return, !dbg !16938

if.end1388:                                       ; preds = %cond.end1382
  %746 = load i8*, i8** %p, align 8, !dbg !16940, !tbaa !2442
  %tobool1389 = icmp ne i8* %746, null, !dbg !16940
  br i1 %tobool1389, label %if.then1390, label %if.end1431, !dbg !16935

if.then1390:                                      ; preds = %if.end1388
  %747 = load i32, i32* %digits, align 4, !dbg !16942, !tbaa !2436
  %cmp1391 = icmp eq i32 %747, 0, !dbg !16942
  br i1 %cmp1391, label %land.lhs.true1393, label %if.end1410, !dbg !16942

land.lhs.true1393:                                ; preds = %if.then1390
  %748 = load i64, i64* %_n1367, align 8, !dbg !16942, !tbaa !2579
  %749 = load i64, i64* %_w1369, align 8, !dbg !16942, !tbaa !2579
  %cmp1394 = icmp ult i64 %748, %749, !dbg !16942
  br i1 %cmp1394, label %if.then1396, label %if.end1410, !dbg !16945

if.then1396:                                      ; preds = %land.lhs.true1393
  call void @llvm.dbg.declare(metadata i64* %_delta1397, metadata !16946, metadata !DIExpression()), !dbg !16948
  %750 = load i32, i32* %width.addr, align 4, !dbg !16948, !tbaa !2436
  %conv1398 = sext i32 %750 to i64, !dbg !16948
  %751 = load i64, i64* %_n1367, align 8, !dbg !16948, !tbaa !2579
  %sub1399 = sub i64 %conv1398, %751, !dbg !16948
  store i64 %sub1399, i64* %_delta1397, align 8, !dbg !16948, !tbaa !2579
  %752 = load i32, i32* %pad, align 4, !dbg !16949, !tbaa !2436
  %cmp1400 = icmp eq i32 %752, 48, !dbg !16949
  br i1 %cmp1400, label %if.then1405, label %lor.lhs.false1402, !dbg !16949

lor.lhs.false1402:                                ; preds = %if.then1396
  %753 = load i32, i32* %pad, align 4, !dbg !16949, !tbaa !2436
  %cmp1403 = icmp eq i32 %753, 43, !dbg !16949
  br i1 %cmp1403, label %if.then1405, label %if.else1407, !dbg !16948

if.then1405:                                      ; preds = %lor.lhs.false1402, %if.then1396
  %754 = load i8*, i8** %p, align 8, !dbg !16949, !tbaa !2442
  %755 = load i64, i64* %_delta1397, align 8, !dbg !16949, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %754, i8 48, i64 %755, i1 false), !dbg !16949
  %756 = load i64, i64* %_delta1397, align 8, !dbg !16949, !tbaa !2579
  %757 = load i8*, i8** %p, align 8, !dbg !16949, !tbaa !2442
  %add.ptr1406 = getelementptr inbounds i8, i8* %757, i64 %756, !dbg !16949
  store i8* %add.ptr1406, i8** %p, align 8, !dbg !16949, !tbaa !2442
  br label %if.end1409, !dbg !16949

if.else1407:                                      ; preds = %lor.lhs.false1402
  %758 = load i8*, i8** %p, align 8, !dbg !16949, !tbaa !2442
  %759 = load i64, i64* %_delta1397, align 8, !dbg !16949, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %758, i8 32, i64 %759, i1 false), !dbg !16949
  %760 = load i64, i64* %_delta1397, align 8, !dbg !16949, !tbaa !2579
  %761 = load i8*, i8** %p, align 8, !dbg !16949, !tbaa !2442
  %add.ptr1408 = getelementptr inbounds i8, i8* %761, i64 %760, !dbg !16949
  store i8* %add.ptr1408, i8** %p, align 8, !dbg !16949, !tbaa !2442
  br label %if.end1409

if.end1409:                                       ; preds = %if.else1407, %if.then1405
  br label %if.end1410, !dbg !16948

if.end1410:                                       ; preds = %if.end1409, %land.lhs.true1393, %if.then1390
  %762 = load i8, i8* %to_lowcase, align 1, !dbg !16951, !tbaa !2461
  %tobool1411 = trunc i8 %762 to i1, !dbg !16951
  br i1 %tobool1411, label %if.then1412, label %if.else1417, !dbg !16945

if.then1412:                                      ; preds = %if.end1410
  %763 = load i8*, i8** %p, align 8, !dbg !16951, !tbaa !2442
  %764 = load i8*, i8** %f, align 8, !dbg !16951, !tbaa !2442
  %765 = load i32, i32* %flen, align 4, !dbg !16951, !tbaa !2436
  %sub1413 = sub nsw i32 1, %765, !dbg !16951
  %idxprom1414 = sext i32 %sub1413 to i64, !dbg !16951
  %arrayidx1415 = getelementptr inbounds i8, i8* %764, i64 %idxprom1414, !dbg !16951, !ctir !146
  %766 = load i64, i64* %_n1367, align 8, !dbg !16951, !tbaa !2579
  %call1416 = call i8* @memcpy_lowcase(i8* %763, i8* %arrayidx1415, i64 %766), !dbg !16951
  br label %if.end1429, !dbg !16951

if.else1417:                                      ; preds = %if.end1410
  %767 = load i8, i8* %to_uppcase, align 1, !dbg !16953, !tbaa !2461
  %tobool1418 = trunc i8 %767 to i1, !dbg !16953
  br i1 %tobool1418, label %if.then1419, label %if.else1424, !dbg !16951

if.then1419:                                      ; preds = %if.else1417
  %768 = load i8*, i8** %p, align 8, !dbg !16953, !tbaa !2442
  %769 = load i8*, i8** %f, align 8, !dbg !16953, !tbaa !2442
  %770 = load i32, i32* %flen, align 4, !dbg !16953, !tbaa !2436
  %sub1420 = sub nsw i32 1, %770, !dbg !16953
  %idxprom1421 = sext i32 %sub1420 to i64, !dbg !16953
  %arrayidx1422 = getelementptr inbounds i8, i8* %769, i64 %idxprom1421, !dbg !16953, !ctir !146
  %771 = load i64, i64* %_n1367, align 8, !dbg !16953, !tbaa !2579
  %call1423 = call i8* @memcpy_uppcase(i8* %768, i8* %arrayidx1422, i64 %771), !dbg !16953
  br label %if.end1428, !dbg !16953

if.else1424:                                      ; preds = %if.else1417
  %772 = load i8*, i8** %p, align 8, !dbg !16953, !tbaa !2442
  %773 = load i8*, i8** %f, align 8, !dbg !16953, !tbaa !2442
  %774 = load i32, i32* %flen, align 4, !dbg !16953, !tbaa !2436
  %sub1425 = sub nsw i32 1, %774, !dbg !16953
  %idxprom1426 = sext i32 %sub1425 to i64, !dbg !16953
  %arrayidx1427 = getelementptr inbounds i8, i8* %773, i64 %idxprom1426, !dbg !16953, !ctir !146
  %775 = load i64, i64* %_n1367, align 8, !dbg !16953, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %772, i8* align 1 %arrayidx1427, i64 %775, i1 false), !dbg !16953
  br label %if.end1428

if.end1428:                                       ; preds = %if.else1424, %if.then1419
  br label %if.end1429

if.end1429:                                       ; preds = %if.end1428, %if.then1412
  %776 = load i64, i64* %_n1367, align 8, !dbg !16945, !tbaa !2579
  %777 = load i8*, i8** %p, align 8, !dbg !16945, !tbaa !2442
  %add.ptr1430 = getelementptr inbounds i8, i8* %777, i64 %776, !dbg !16945
  store i8* %add.ptr1430, i8** %p, align 8, !dbg !16945, !tbaa !2442
  br label %if.end1431, !dbg !16945

if.end1431:                                       ; preds = %if.end1429, %if.end1388
  %778 = load i64, i64* %_incr1377, align 8, !dbg !16935, !tbaa !2579
  %779 = load i64, i64* %i, align 8, !dbg !16935, !tbaa !2579
  %add1432 = add i64 %779, %778, !dbg !16935
  store i64 %add1432, i64* %i, align 8, !dbg !16935, !tbaa !2579
  br label %do.end1434, !dbg !16935

do.end1434:                                       ; preds = %if.end1431
  br label %sw.epilog1435, !dbg !16955

sw.epilog1435:                                    ; preds = %do.end1434, %if.then1299, %do.end1279, %do.end1018, %do.end927, %do.end914, %do.end760, %if.end316, %do.end232, %do.end142
  br label %for.inc1436, !dbg !16956

for.inc1436:                                      ; preds = %sw.epilog1435, %do.end
  store i32 -1, i32* %width.addr, align 4, !dbg !16957, !tbaa !2436
  %780 = load i8*, i8** %f, align 8, !dbg !16958, !tbaa !2442
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %780, i32 1, !dbg !16958
  store i8* %incdec.ptr1437, i8** %f, align 8, !dbg !16958, !tbaa !2442
  br label %for.cond, !dbg !16959, !llvm.loop !16960

for.end1438:                                      ; preds = %for.cond
  %781 = load i8*, i8** %p, align 8, !dbg !16962, !tbaa !2442
  %tobool1439 = icmp ne i8* %781, null, !dbg !16962
  br i1 %tobool1439, label %land.lhs.true1440, label %if.end1444, !dbg !16964

land.lhs.true1440:                                ; preds = %for.end1438
  %782 = load i64, i64* %maxsize.addr, align 8, !dbg !16965, !tbaa !2579
  %cmp1441 = icmp ne i64 %782, 0, !dbg !16966
  br i1 %cmp1441, label %if.then1443, label %if.end1444, !dbg !16967

if.then1443:                                      ; preds = %land.lhs.true1440
  %783 = load i8*, i8** %p, align 8, !dbg !16968, !tbaa !2442
  store i8 0, i8* %783, align 1, !dbg !16969, !tbaa !2497, !ctir !144
  br label %if.end1444, !dbg !16970

if.end1444:                                       ; preds = %if.then1443, %land.lhs.true1440, %for.end1438
  %784 = load i64, i64* %i, align 8, !dbg !16971, !tbaa !2579
  store i64 %784, i64* %retval, align 8, !dbg !16972
  br label %return, !dbg !16972

return:                                           ; preds = %if.end1444, %if.then1387, %if.then1241, %if.then990, %if.then886, %if.then722, %if.then665, %if.then603, %if.then579, %if.then544, %if.then506, %if.then456, %if.then271, %if.then201, %if.then114, %if.then26
  %785 = load i64, i64* %retval, align 8, !dbg !16973
  ret i64 %785, !dbg !16973
}

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_lowcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16974 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16975, metadata !DIExpression()), !dbg !16976
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16977, metadata !DIExpression()), !dbg !16978
  store i64 %len, i64* %len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16979, metadata !DIExpression()), !dbg !16980
  br label %while.cond, !dbg !16981

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16982, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !16982
  store i64 %dec, i64* %len.addr, align 8, !dbg !16982, !tbaa !2579
  %cmp = icmp ugt i64 %0, 0, !dbg !16983
  br i1 %cmp, label %while.body, label %while.end, !dbg !16981

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16984, !tbaa !2442
  %2 = load i64, i64* %len.addr, align 8, !dbg !16984, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16984, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16984, !tbaa !2497
  %conv = zext i8 %3 to i32, !dbg !16984
  %call = call i32 @tolower(i32 %conv) #16, !dbg !16984
  %conv1 = trunc i32 %call to i8, !dbg !16984
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16985, !tbaa !2442
  %5 = load i64, i64* %len.addr, align 8, !dbg !16986, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16985, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16987, !tbaa !2497
  br label %while.cond, !dbg !16981, !llvm.loop !16988

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16989, !tbaa !2442
  ret i8* %6, !dbg !16990
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_uppcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16991 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16992, metadata !DIExpression()), !dbg !16993
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16994, metadata !DIExpression()), !dbg !16995
  store i64 %len, i64* %len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  br label %while.cond, !dbg !16998

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16999, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !16999
  store i64 %dec, i64* %len.addr, align 8, !dbg !16999, !tbaa !2579
  %cmp = icmp ugt i64 %0, 0, !dbg !17000
  br i1 %cmp, label %while.body, label %while.end, !dbg !16998

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !17001, !tbaa !2442
  %2 = load i64, i64* %len.addr, align 8, !dbg !17001, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !17001, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !17001, !tbaa !2497
  %conv = zext i8 %3 to i32, !dbg !17001
  %call = call i32 @toupper(i32 %conv) #16, !dbg !17001
  %conv1 = trunc i32 %call to i8, !dbg !17001
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !17002, !tbaa !2442
  %5 = load i64, i64* %len.addr, align 8, !dbg !17003, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !17002, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !17004, !tbaa !2497
  br label %while.cond, !dbg !16998, !llvm.loop !17005

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !17006, !tbaa !2442
  ret i8* %6, !dbg !17007
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days(i32 %yday, i32 %wday) #0 !dbg !17008 !ctir !1950 {
entry:
  %yday.addr = alloca i32, align 4
  %wday.addr = alloca i32, align 4
  %big_enough_multiple_of_7 = alloca i32, align 4, !ctir !27
  store i32 %yday, i32* %yday.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %yday.addr, metadata !17009, metadata !DIExpression()), !dbg !17010
  store i32 %wday, i32* %wday.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %wday.addr, metadata !17011, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.declare(metadata i32* %big_enough_multiple_of_7, metadata !17013, metadata !DIExpression()), !dbg !17014
  store i32 378, i32* %big_enough_multiple_of_7, align 4, !dbg !17014, !tbaa !2436
  %0 = load i32, i32* %yday.addr, align 4, !dbg !17015, !tbaa !2436
  %1 = load i32, i32* %yday.addr, align 4, !dbg !17016, !tbaa !2436
  %2 = load i32, i32* %wday.addr, align 4, !dbg !17017, !tbaa !2436
  %sub = sub nsw i32 %1, %2, !dbg !17018
  %add = add nsw i32 %sub, 4, !dbg !17019
  %3 = load i32, i32* %big_enough_multiple_of_7, align 4, !dbg !17020, !tbaa !2436
  %add1 = add nsw i32 %add, %3, !dbg !17021
  %rem = srem i32 %add1, 7, !dbg !17022
  %sub2 = sub nsw i32 %0, %rem, !dbg !17023
  %add3 = add nsw i32 %sub2, 4, !dbg !17024
  %sub4 = sub nsw i32 %add3, 1, !dbg !17025
  ret i32 %sub4, !dbg !17026
}

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #0 !dbg !17027 !ctir !570 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !17028, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !17030, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.declare(metadata i8** %base, metadata !17032, metadata !DIExpression()), !dbg !17033
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !17034, !tbaa !2442
  %cmp = icmp eq i8* %0, null, !dbg !17036
  br i1 %cmp, label %if.then, label %if.end, !dbg !17037

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17038, !tbaa !2442
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.370, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !17040
  call void @abort() #15, !dbg !17041
  unreachable, !dbg !17041

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !17042, !tbaa !2442
  %call1 = call i8* @strrchr(i8* %2, i32 47) #16, !dbg !17043
  store i8* %call1, i8** %slash, align 8, !dbg !17044, !tbaa !2442
  %3 = load i8*, i8** %slash, align 8, !dbg !17045, !tbaa !2442
  %cmp2 = icmp ne i8* %3, null, !dbg !17046
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !17045

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !17047, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !17048
  br label %cond.end, !dbg !17045

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !17049, !tbaa !2442
  br label %cond.end, !dbg !17045

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !17045
  store i8* %cond, i8** %base, align 8, !dbg !17050, !tbaa !2442
  %6 = load i8*, i8** %base, align 8, !dbg !17051, !tbaa !2442
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !17053, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !17054
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !17054
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17054
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !17055
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !17056

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !17057, !tbaa !2442
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !17058
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.371, i64 0, i64 0), i64 7) #16, !dbg !17059
  %cmp6 = icmp eq i32 %call5, 0, !dbg !17060
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !17061

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !17062, !tbaa !2442
  store i8* %9, i8** %argv0.addr, align 8, !dbg !17064, !tbaa !2442
  %10 = load i8*, i8** %base, align 8, !dbg !17065, !tbaa !2442
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.372, i64 0, i64 0), i64 3) #16, !dbg !17067
  %cmp9 = icmp eq i32 %call8, 0, !dbg !17068
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !17069

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !17070, !tbaa !2442
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !17072
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !17073, !tbaa !2442
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !17074, !tbaa !2442
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !17075, !tbaa !2442
  br label %if.end12, !dbg !17076

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !17077

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !17078, !tbaa !2442
  store i8* %13, i8** @program_name, align 8, !dbg !17079, !tbaa !2442
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !17080, !tbaa !2442
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !17081, !tbaa !2442
  ret void, !dbg !17082
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 !dbg !17083 !ctir !1443 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %p = alloca %struct.quoting_options*, align 8, !ctir !1445
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17084, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17086, metadata !DIExpression()), !dbg !17087
  %call = call i32* @__errno_location() #17, !dbg !17088
  %0 = load i32, i32* %call, align 4, !dbg !17088, !tbaa !2436, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !17087, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17089, metadata !DIExpression()), !dbg !17090
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17091, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17091
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17091

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17092, !tbaa !2442
  br label %cond.end, !dbg !17091

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17091
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !17091
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !17093
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !17093
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !17090, !tbaa !2442
  %5 = load i32, i32* %e, align 4, !dbg !17094, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !17095
  store i32 %5, i32* %call2, align 4, !dbg !17096, !tbaa !2436, !ctir !27
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17097, !tbaa !2442
  ret %struct.quoting_options* %6, !dbg !17098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #0 !dbg !17099 !ctir !1455 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17100, metadata !DIExpression()), !dbg !17101
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17102, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17102
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17102

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17103, !tbaa !2442
  br label %cond.end, !dbg !17102

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17102

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17102
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17104, !ctir !1458
  %2 = load i32, i32* %style, align 8, !dbg !17104, !tbaa !17105, !ctir !95
  ret i32 %2, !dbg !17107
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 !dbg !17108 !ctir !1459 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17109, metadata !DIExpression()), !dbg !17110
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !17111, metadata !DIExpression()), !dbg !17112
  %0 = load i32, i32* %s.addr, align 4, !dbg !17113, !tbaa !2497
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17114, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17114
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17114

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17115, !tbaa !2442
  br label %cond.end, !dbg !17114

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17114
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17116, !ctir !1446
  store i32 %0, i32* %style, align 8, !dbg !17117, !tbaa !17105, !ctir !95
  ret void, !dbg !17118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 !dbg !17119 !ctir !1461 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !591
  %p = alloca i32*, align 8, !ctir !1463
  %shift = alloca i32, align 4, !ctir !27
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17120, metadata !DIExpression()), !dbg !17121
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !17122, metadata !DIExpression()), !dbg !17123
  store i32 %i, i32* %i.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17124, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !17126, metadata !DIExpression()), !dbg !17127
  %0 = load i8, i8* %c.addr, align 1, !dbg !17128, !tbaa !2497
  store i8 %0, i8* %uc, align 1, !dbg !17127, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32** %p, metadata !17129, metadata !DIExpression()), !dbg !17130
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17131, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17131
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17131

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17132, !tbaa !2442
  br label %cond.end, !dbg !17131

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17131
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !17133, !ctir !1446
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17134
  %3 = load i8, i8* %uc, align 1, !dbg !17135, !tbaa !2497
  %conv = zext i8 %3 to i64, !dbg !17135
  %div = udiv i64 %conv, 32, !dbg !17136
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !17137
  store i32* %add.ptr, i32** %p, align 8, !dbg !17130, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !17138, metadata !DIExpression()), !dbg !17139
  %4 = load i8, i8* %uc, align 1, !dbg !17140, !tbaa !2497
  %conv1 = zext i8 %4 to i64, !dbg !17140
  %rem = urem i64 %conv1, 32, !dbg !17141
  %conv2 = trunc i64 %rem to i32, !dbg !17140
  store i32 %conv2, i32* %shift, align 4, !dbg !17139, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17142, metadata !DIExpression()), !dbg !17143
  %5 = load i32*, i32** %p, align 8, !dbg !17144, !tbaa !2442
  %6 = load i32, i32* %5, align 4, !dbg !17145, !tbaa !2436, !ctir !6
  %7 = load i32, i32* %shift, align 4, !dbg !17146, !tbaa !2436
  %shr = lshr i32 %6, %7, !dbg !17147
  %and = and i32 %shr, 1, !dbg !17148
  store i32 %and, i32* %r, align 4, !dbg !17143, !tbaa !2436
  %8 = load i32, i32* %i.addr, align 4, !dbg !17149, !tbaa !2436
  %and3 = and i32 %8, 1, !dbg !17150
  %9 = load i32, i32* %r, align 4, !dbg !17151, !tbaa !2436
  %xor = xor i32 %and3, %9, !dbg !17152
  %10 = load i32, i32* %shift, align 4, !dbg !17153, !tbaa !2436
  %shl = shl i32 %xor, %10, !dbg !17154
  %11 = load i32*, i32** %p, align 8, !dbg !17155, !tbaa !2442
  %12 = load i32, i32* %11, align 4, !dbg !17156, !tbaa !2436, !ctir !6
  %xor4 = xor i32 %12, %shl, !dbg !17156
  store i32 %xor4, i32* %11, align 4, !dbg !17156, !tbaa !2436, !ctir !6
  %13 = load i32, i32* %r, align 4, !dbg !17157, !tbaa !2436
  ret i32 %13, !dbg !17158
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #0 !dbg !17159 !ctir !1464 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17160, metadata !DIExpression()), !dbg !17161
  store i32 %i, i32* %i.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17162, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17164, metadata !DIExpression()), !dbg !17165
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17166, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17166
  br i1 %tobool, label %if.end, label %if.then, !dbg !17168

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17169, !tbaa !2442
  br label %if.end, !dbg !17170

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17171, !tbaa !2442
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !17172, !ctir !1446
  %2 = load i32, i32* %flags, align 4, !dbg !17172, !tbaa !17173, !ctir !27
  store i32 %2, i32* %r, align 4, !dbg !17174, !tbaa !2436
  %3 = load i32, i32* %i.addr, align 4, !dbg !17175, !tbaa !2436
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17176, !tbaa !2442
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !17177, !ctir !1446
  store i32 %3, i32* %flags1, align 4, !dbg !17178, !tbaa !17173, !ctir !27
  %5 = load i32, i32* %r, align 4, !dbg !17179, !tbaa !2436
  ret i32 %5, !dbg !17180
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #0 !dbg !17181 !ctir !1466 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17182, metadata !DIExpression()), !dbg !17183
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17184, metadata !DIExpression()), !dbg !17185
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17186, metadata !DIExpression()), !dbg !17187
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17188, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17188
  br i1 %tobool, label %if.end, label %if.then, !dbg !17190

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17191, !tbaa !2442
  br label %if.end, !dbg !17192

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17193, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !17194, !ctir !1446
  store i32 10, i32* %style, align 8, !dbg !17195, !tbaa !17105, !ctir !95
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !17196, !tbaa !2442
  %tobool1 = icmp ne i8* %2, null, !dbg !17196
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !17198

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !17199, !tbaa !2442
  %tobool2 = icmp ne i8* %3, null, !dbg !17199
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !17200

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #15, !dbg !17201
  unreachable, !dbg !17201

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !17202, !tbaa !2442
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17203, !tbaa !2442
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !17204, !ctir !1446
  store i8* %4, i8** %left_quote5, align 8, !dbg !17205, !tbaa !17206, !ctir !146
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !17207, !tbaa !2442
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17208, !tbaa !2442
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !17209, !ctir !1446
  store i8* %6, i8** %right_quote6, align 8, !dbg !17210, !tbaa !17211, !ctir !146
  ret void, !dbg !17212
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !17213 !ctir !1468 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1457
  %e = alloca i32, align 4, !ctir !27
  %r = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17214, metadata !DIExpression()), !dbg !17215
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17216, metadata !DIExpression()), !dbg !17217
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17218, metadata !DIExpression()), !dbg !17219
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17220, metadata !DIExpression()), !dbg !17221
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17222, metadata !DIExpression()), !dbg !17223
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17224, metadata !DIExpression()), !dbg !17225
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17226, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17226
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17226

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17227, !tbaa !2442
  br label %cond.end, !dbg !17226

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17226
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !17225, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17228, metadata !DIExpression()), !dbg !17229
  %call = call i32* @__errno_location() #17, !dbg !17230
  %2 = load i32, i32* %call, align 4, !dbg !17230, !tbaa !2436, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !17229, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %r, metadata !17231, metadata !DIExpression()), !dbg !17232
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !17233, !tbaa !2442
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17234, !tbaa !2579
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !17235, !tbaa !2442
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !17236, !tbaa !2579
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17237, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !17238, !ctir !1458
  %8 = load i32, i32* %style, align 8, !dbg !17238, !tbaa !17105, !ctir !95
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17239, !tbaa !2442
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !17240, !ctir !1458
  %10 = load i32, i32* %flags, align 4, !dbg !17240, !tbaa !17173, !ctir !27
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17241, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !17242, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17241
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17243, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !17244, !ctir !1458
  %13 = load i8*, i8** %left_quote, align 8, !dbg !17244, !tbaa !17206, !ctir !146
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17245, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !17246, !ctir !1458
  %15 = load i8*, i8** %right_quote, align 8, !dbg !17246, !tbaa !17211, !ctir !146
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !17247
  store i64 %call1, i64* %r, align 8, !dbg !17232, !tbaa !2579
  %16 = load i32, i32* %e, align 4, !dbg !17248, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !17249
  store i32 %16, i32* %call2, align 4, !dbg !17250, !tbaa !2436, !ctir !27
  %17 = load i64, i64* %r, align 8, !dbg !17251, !tbaa !2579
  ret i64 %17, !dbg !17252
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #0 !dbg !17253 !ctir !1511 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %orig_buffersize = alloca i64, align 8, !ctir !149
  %quote_string = alloca i8*, align 8, !ctir !146
  %quote_string_len = alloca i64, align 8, !ctir !149
  %backslash_escapes = alloca i8, align 1, !ctir !141
  %unibyte_locale = alloca i8, align 1, !ctir !141
  %elide_outer_quotes = alloca i8, align 1, !ctir !141
  %pending_shell_escape_end = alloca i8, align 1, !ctir !141
  %encountered_single_quote = alloca i8, align 1, !ctir !141
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %c = alloca i8, align 1, !ctir !591
  %esc = alloca i8, align 1, !ctir !591
  %is_right_quote = alloca i8, align 1, !ctir !141
  %escaping = alloca i8, align 1, !ctir !141
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %m = alloca i64, align 8, !ctir !149
  %printable = alloca i8, align 1, !ctir !141
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1515
  %w = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ilim = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17254, metadata !DIExpression()), !dbg !17255
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17256, metadata !DIExpression()), !dbg !17257
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17258, metadata !DIExpression()), !dbg !17259
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17260, metadata !DIExpression()), !dbg !17261
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !17262, metadata !DIExpression()), !dbg !17263
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17264, metadata !DIExpression()), !dbg !17265
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !17266, metadata !DIExpression()), !dbg !17267
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17268, metadata !DIExpression()), !dbg !17269
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17270, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17272, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17274, metadata !DIExpression()), !dbg !17275
  store i64 0, i64* %len, align 8, !dbg !17275, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !17276, metadata !DIExpression()), !dbg !17277
  store i64 0, i64* %orig_buffersize, align 8, !dbg !17277, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !17278, metadata !DIExpression()), !dbg !17279
  store i8* null, i8** %quote_string, align 8, !dbg !17279, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !17280, metadata !DIExpression()), !dbg !17281
  store i64 0, i64* %quote_string_len, align 8, !dbg !17281, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !17282, metadata !DIExpression()), !dbg !17283
  store i8 0, i8* %backslash_escapes, align 1, !dbg !17283, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !17284, metadata !DIExpression()), !dbg !17285
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !17286
  %cmp = icmp eq i64 %call, 1, !dbg !17287
  %frombool = zext i1 %cmp to i8, !dbg !17285
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !17285, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !17288, metadata !DIExpression()), !dbg !17289
  %0 = load i32, i32* %flags.addr, align 4, !dbg !17290, !tbaa !2436
  %and = and i32 %0, 2, !dbg !17291
  %cmp1 = icmp ne i32 %and, 0, !dbg !17292
  %frombool2 = zext i1 %cmp1 to i8, !dbg !17289
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !17289, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !17293, metadata !DIExpression()), !dbg !17294
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17294, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !17295, metadata !DIExpression()), !dbg !17296
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !17296, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !17297, metadata !DIExpression()), !dbg !17298
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17298, !tbaa !2461
  br label %process_input, !dbg !17299

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !17300), !dbg !17301
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !17302, !tbaa !2497
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !17303

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !17304, !tbaa !2497
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17306, !tbaa !2461
  br label %sw.bb3, !dbg !17307

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17308, !tbaa !2461
  %tobool = trunc i8 %2 to i1, !dbg !17308
  br i1 %tobool, label %if.end6, label %if.then, !dbg !17310

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !17311

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !17312, !tbaa !2579
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17312, !tbaa !2579
  %cmp4 = icmp ult i64 %3, %4, !dbg !17312
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !17315

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !17312, !tbaa !2442
  %6 = load i64, i64* %len, align 8, !dbg !17312, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !17312, !ctir !143
  store i8 34, i8* %arrayidx, align 1, !dbg !17312, !tbaa !2497
  br label %if.end, !dbg !17312

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !17315, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !17315
  store i64 %inc, i64* %len, align 8, !dbg !17315, !tbaa !2579
  br label %do.end, !dbg !17315

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !17315

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17316, !tbaa !2461
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.397, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17317, !tbaa !2442
  store i64 1, i64* %quote_string_len, align 8, !dbg !17318, !tbaa !2579
  br label %sw.epilog, !dbg !17319

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17320, !tbaa !2461
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17321, !tbaa !2461
  br label %sw.epilog, !dbg !17322

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !17323, !tbaa !2497
  %cmp9 = icmp ne i32 %8, 10, !dbg !17326
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !17327

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !17328, !tbaa !2497
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.398, i64 0, i64 0), i32 %9), !dbg !17330
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !17331, !tbaa !2442
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !17332, !tbaa !2497
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), i32 %10), !dbg !17333
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !17334, !tbaa !2442
  br label %if.end13, !dbg !17335

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17336, !tbaa !2461
  %tobool14 = trunc i8 %11 to i1, !dbg !17336
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !17338

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !17339, !tbaa !2442
  store i8* %12, i8** %quote_string, align 8, !dbg !17341, !tbaa !2442
  br label %for.cond, !dbg !17342

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !17343, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !17345, !tbaa !2497, !ctir !147
  %tobool16 = icmp ne i8 %14, 0, !dbg !17346
  br i1 %tobool16, label %for.body, label %for.end, !dbg !17346

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !17347

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !17348, !tbaa !2579
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !17348, !tbaa !2579
  %cmp18 = icmp ult i64 %15, %16, !dbg !17348
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !17351

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !17348, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !17348, !tbaa !2497, !ctir !147
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !17348, !tbaa !2442
  %20 = load i64, i64* %len, align 8, !dbg !17348, !tbaa !2579
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !17348, !ctir !143
  store i8 %18, i8* %arrayidx20, align 1, !dbg !17348, !tbaa !2497
  br label %if.end21, !dbg !17348

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !17351, !tbaa !2579
  %inc22 = add i64 %21, 1, !dbg !17351
  store i64 %inc22, i64* %len, align 8, !dbg !17351, !tbaa !2579
  br label %do.end23, !dbg !17351

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !17351

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !17352, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !17352
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !17352, !tbaa !2442
  br label %for.cond, !dbg !17353, !llvm.loop !17354

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !17355

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17356, !tbaa !2461
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !17357, !tbaa !2442
  store i8* %23, i8** %quote_string, align 8, !dbg !17358, !tbaa !2442
  %24 = load i8*, i8** %quote_string, align 8, !dbg !17359, !tbaa !2442
  %call25 = call i64 @strlen(i8* %24) #16, !dbg !17360
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !17361, !tbaa !2579
  br label %sw.epilog, !dbg !17362

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17363, !tbaa !2461
  br label %sw.bb27, !dbg !17364

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17365, !tbaa !2461
  br label %sw.bb28, !dbg !17366

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17367, !tbaa !2461
  %tobool29 = trunc i8 %25 to i1, !dbg !17367
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !17369

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17370, !tbaa !2461
  br label %if.end31, !dbg !17371

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !17372

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !17373, !tbaa !2497
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17374, !tbaa !2461
  %tobool33 = trunc i8 %26 to i1, !dbg !17374
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !17376

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !17377

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !17378, !tbaa !2579
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !17378, !tbaa !2579
  %cmp36 = icmp ult i64 %27, %28, !dbg !17378
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !17381

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !17378, !tbaa !2442
  %30 = load i64, i64* %len, align 8, !dbg !17378, !tbaa !2579
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !17378, !ctir !143
  store i8 39, i8* %arrayidx38, align 1, !dbg !17378, !tbaa !2497
  br label %if.end39, !dbg !17378

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !17381, !tbaa !2579
  %inc40 = add i64 %31, 1, !dbg !17381
  store i64 %inc40, i64* %len, align 8, !dbg !17381, !tbaa !2579
  br label %do.end41, !dbg !17381

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !17381

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17382, !tbaa !2442
  store i64 1, i64* %quote_string_len, align 8, !dbg !17383, !tbaa !2579
  br label %sw.epilog, !dbg !17384

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17385, !tbaa !2461
  br label %sw.epilog, !dbg !17386

sw.default:                                       ; preds = %process_input
  call void @abort() #15, !dbg !17387
  unreachable, !dbg !17387

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !17388, !tbaa !2579
  br label %for.cond44, !dbg !17390

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !17391, !tbaa !2579
  %cmp45 = icmp eq i64 %32, -1, !dbg !17393
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !17391

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !17394, !tbaa !2442
  %34 = load i64, i64* %i, align 8, !dbg !17395, !tbaa !2579
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !17394, !ctir !146
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !17394, !tbaa !2497
  %conv = sext i8 %35 to i32, !dbg !17394
  %cmp47 = icmp eq i32 %conv, 0, !dbg !17396
  %conv48 = zext i1 %cmp47 to i32, !dbg !17396
  br label %cond.end, !dbg !17391

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !17397, !tbaa !2579
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !17398, !tbaa !2579
  %cmp49 = icmp eq i64 %36, %37, !dbg !17399
  %conv50 = zext i1 %cmp49 to i32, !dbg !17399
  br label %cond.end, !dbg !17391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !17391
  %tobool51 = icmp ne i32 %cond, 0, !dbg !17400
  %lnot = xor i1 %tobool51, true, !dbg !17400
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !17401

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !17402, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !17405, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !17407, metadata !DIExpression()), !dbg !17408
  store i8 0, i8* %is_right_quote, align 1, !dbg !17408, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !17409, metadata !DIExpression()), !dbg !17410
  store i8 0, i8* %escaping, align 1, !dbg !17410, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !17411, metadata !DIExpression()), !dbg !17412
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !17412, !tbaa !2461
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !17413, !tbaa !2461
  %tobool53 = trunc i8 %38 to i1, !dbg !17413
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !17415

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !17416, !tbaa !2497
  %cmp55 = icmp ne i32 %39, 2, !dbg !17417
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !17418

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !17419, !tbaa !2579
  %tobool58 = icmp ne i64 %40, 0, !dbg !17419
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !17420

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !17421, !tbaa !2579
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !17422, !tbaa !2579
  %add = add i64 %41, %42, !dbg !17423
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !17424, !tbaa !2579
  %cmp60 = icmp eq i64 %43, -1, !dbg !17425
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !17426

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !17427, !tbaa !2579
  %cmp63 = icmp ult i64 1, %44, !dbg !17428
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !17424

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !17429, !tbaa !2442
  %call66 = call i64 @strlen(i8* %45) #16, !dbg !17430
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !17431, !tbaa !2579
  br label %cond.end68, !dbg !17424

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !17432, !tbaa !2579
  br label %cond.end68, !dbg !17424

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !17424
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !17433
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !17434

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !17435, !tbaa !2442
  %48 = load i64, i64* %i, align 8, !dbg !17436, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !17437
  %49 = load i8*, i8** %quote_string, align 8, !dbg !17438, !tbaa !2442
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !17439, !tbaa !2579
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #16, !dbg !17440
  %cmp74 = icmp eq i32 %call73, 0, !dbg !17441
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !17442

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17443, !tbaa !2461
  %tobool77 = trunc i8 %51 to i1, !dbg !17443
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !17446

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !17447

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !17448, !tbaa !2461
  br label %if.end80, !dbg !17449

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !17450, !tbaa !2442
  %53 = load i64, i64* %i, align 8, !dbg !17451, !tbaa !2579
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !17450, !ctir !146
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !17450, !tbaa !2497
  store i8 %54, i8* %c, align 1, !dbg !17452, !tbaa !2497
  %55 = load i8, i8* %c, align 1, !dbg !17453, !tbaa !2497
  %conv82 = zext i8 %55 to i32, !dbg !17453
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !17454

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !17455, !tbaa !2461
  %tobool84 = trunc i8 %56 to i1, !dbg !17455
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !17458

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !17459

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17461, !tbaa !2461
  %tobool87 = trunc i8 %57 to i1, !dbg !17461
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !17464

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !17461

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !17464, !tbaa !2461
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !17465, !tbaa !2497
  %cmp90 = icmp eq i32 %58, 2, !dbg !17465
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !17465

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17465, !tbaa !2461
  %tobool93 = trunc i8 %59 to i1, !dbg !17465
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !17464

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !17467

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !17469, !tbaa !2579
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !17469, !tbaa !2579
  %cmp96 = icmp ult i64 %60, %61, !dbg !17469
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !17472

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !17469, !tbaa !2442
  %63 = load i64, i64* %len, align 8, !dbg !17469, !tbaa !2579
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !17469, !ctir !143
  store i8 39, i8* %arrayidx99, align 1, !dbg !17469, !tbaa !2497
  br label %if.end100, !dbg !17469

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !17472, !tbaa !2579
  %inc101 = add i64 %64, 1, !dbg !17472
  store i64 %inc101, i64* %len, align 8, !dbg !17472, !tbaa !2579
  br label %do.end102, !dbg !17472

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !17467

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !17473, !tbaa !2579
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !17473, !tbaa !2579
  %cmp104 = icmp ult i64 %65, %66, !dbg !17473
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !17476

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !17473, !tbaa !2442
  %68 = load i64, i64* %len, align 8, !dbg !17473, !tbaa !2579
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !17473, !ctir !143
  store i8 36, i8* %arrayidx107, align 1, !dbg !17473, !tbaa !2497
  br label %if.end108, !dbg !17473

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !17476, !tbaa !2579
  %inc109 = add i64 %69, 1, !dbg !17476
  store i64 %inc109, i64* %len, align 8, !dbg !17476, !tbaa !2579
  br label %do.end110, !dbg !17476

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !17467

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !17477, !tbaa !2579
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !17477, !tbaa !2579
  %cmp112 = icmp ult i64 %70, %71, !dbg !17477
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !17480

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !17477, !tbaa !2442
  %73 = load i64, i64* %len, align 8, !dbg !17477, !tbaa !2579
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !17477, !ctir !143
  store i8 39, i8* %arrayidx115, align 1, !dbg !17477, !tbaa !2497
  br label %if.end116, !dbg !17477

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !17480, !tbaa !2579
  %inc117 = add i64 %74, 1, !dbg !17480
  store i64 %inc117, i64* %len, align 8, !dbg !17480, !tbaa !2579
  br label %do.end118, !dbg !17480

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17467, !tbaa !2461
  br label %if.end119, !dbg !17467

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !17464

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !17481, !tbaa !2579
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !17481, !tbaa !2579
  %cmp121 = icmp ult i64 %75, %76, !dbg !17481
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !17484

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !17481, !tbaa !2442
  %78 = load i64, i64* %len, align 8, !dbg !17481, !tbaa !2579
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !17481, !ctir !143
  store i8 92, i8* %arrayidx124, align 1, !dbg !17481, !tbaa !2497
  br label %if.end125, !dbg !17481

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !17484, !tbaa !2579
  %inc126 = add i64 %79, 1, !dbg !17484
  store i64 %inc126, i64* %len, align 8, !dbg !17484, !tbaa !2579
  br label %do.end127, !dbg !17484

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !17464

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !17485, !tbaa !2497
  %cmp129 = icmp ne i32 %80, 2, !dbg !17487
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !17488

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !17489, !tbaa !2579
  %add132 = add i64 %81, 1, !dbg !17490
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !17491, !tbaa !2579
  %cmp133 = icmp ult i64 %add132, %82, !dbg !17492
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !17493

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !17494, !tbaa !2442
  %84 = load i64, i64* %i, align 8, !dbg !17495, !tbaa !2579
  %add136 = add i64 %84, 1, !dbg !17496
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !17494, !ctir !146
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !17494, !tbaa !2497
  %conv138 = sext i8 %85 to i32, !dbg !17494
  %cmp139 = icmp sle i32 48, %conv138, !dbg !17497
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !17498

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !17499, !tbaa !2442
  %87 = load i64, i64* %i, align 8, !dbg !17500, !tbaa !2579
  %add142 = add i64 %87, 1, !dbg !17501
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !17499, !ctir !146
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !17499, !tbaa !2497
  %conv144 = sext i8 %88 to i32, !dbg !17499
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !17502
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !17503

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !17504

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !17506, !tbaa !2579
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !17506, !tbaa !2579
  %cmp149 = icmp ult i64 %89, %90, !dbg !17506
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !17509

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !17506, !tbaa !2442
  %92 = load i64, i64* %len, align 8, !dbg !17506, !tbaa !2579
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !17506, !ctir !143
  store i8 48, i8* %arrayidx152, align 1, !dbg !17506, !tbaa !2497
  br label %if.end153, !dbg !17506

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !17509, !tbaa !2579
  %inc154 = add i64 %93, 1, !dbg !17509
  store i64 %inc154, i64* %len, align 8, !dbg !17509, !tbaa !2579
  br label %do.end155, !dbg !17509

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !17510

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !17511, !tbaa !2579
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !17511, !tbaa !2579
  %cmp157 = icmp ult i64 %94, %95, !dbg !17511
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !17514

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !17511, !tbaa !2442
  %97 = load i64, i64* %len, align 8, !dbg !17511, !tbaa !2579
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !17511, !ctir !143
  store i8 48, i8* %arrayidx160, align 1, !dbg !17511, !tbaa !2497
  br label %if.end161, !dbg !17511

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !17514, !tbaa !2579
  %inc162 = add i64 %98, 1, !dbg !17514
  store i64 %inc162, i64* %len, align 8, !dbg !17514, !tbaa !2579
  br label %do.end163, !dbg !17514

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !17515

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !17516, !tbaa !2497
  br label %if.end169, !dbg !17517

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !17518, !tbaa !2436
  %and165 = and i32 %99, 1, !dbg !17520
  %tobool166 = icmp ne i32 %and165, 0, !dbg !17520
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !17521

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !17522

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !17523

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !17524, !tbaa !2497
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !17525

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17526, !tbaa !2461
  %tobool172 = trunc i8 %101 to i1, !dbg !17526
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !17529

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !17530

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !17531

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !17532, !tbaa !2436
  %and176 = and i32 %102, 4, !dbg !17534
  %tobool177 = icmp ne i32 %and176, 0, !dbg !17534
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !17535

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !17536, !tbaa !2579
  %add179 = add i64 %103, 2, !dbg !17537
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !17538, !tbaa !2579
  %cmp180 = icmp ult i64 %add179, %104, !dbg !17539
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !17540

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !17541, !tbaa !2442
  %106 = load i64, i64* %i, align 8, !dbg !17542, !tbaa !2579
  %add183 = add i64 %106, 1, !dbg !17543
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !17541, !ctir !146
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !17541, !tbaa !2497
  %conv185 = sext i8 %107 to i32, !dbg !17541
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !17544
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !17545

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !17546, !tbaa !2442
  %109 = load i64, i64* %i, align 8, !dbg !17547, !tbaa !2579
  %add189 = add i64 %109, 2, !dbg !17548
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !17546, !ctir !146
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !17546, !tbaa !2497
  %conv191 = sext i8 %110 to i32, !dbg !17546
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !17549

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17550, !tbaa !2461
  %tobool193 = trunc i8 %111 to i1, !dbg !17550
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !17553

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !17554

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !17555, !tbaa !2442
  %113 = load i64, i64* %i, align 8, !dbg !17556, !tbaa !2579
  %add196 = add i64 %113, 2, !dbg !17557
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !17555, !ctir !146
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !17555, !tbaa !2497
  store i8 %114, i8* %c, align 1, !dbg !17558, !tbaa !2497
  %115 = load i64, i64* %i, align 8, !dbg !17559, !tbaa !2579
  %add198 = add i64 %115, 2, !dbg !17559
  store i64 %add198, i64* %i, align 8, !dbg !17559, !tbaa !2579
  br label %do.body199, !dbg !17560

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !17561, !tbaa !2579
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !17561, !tbaa !2579
  %cmp200 = icmp ult i64 %116, %117, !dbg !17561
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !17564

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !17561, !tbaa !2442
  %119 = load i64, i64* %len, align 8, !dbg !17561, !tbaa !2579
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !17561, !ctir !143
  store i8 63, i8* %arrayidx203, align 1, !dbg !17561, !tbaa !2497
  br label %if.end204, !dbg !17561

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !17564, !tbaa !2579
  %inc205 = add i64 %120, 1, !dbg !17564
  store i64 %inc205, i64* %len, align 8, !dbg !17564, !tbaa !2579
  br label %do.end206, !dbg !17564

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !17565

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !17566, !tbaa !2579
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !17566, !tbaa !2579
  %cmp208 = icmp ult i64 %121, %122, !dbg !17566
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !17569

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !17566, !tbaa !2442
  %124 = load i64, i64* %len, align 8, !dbg !17566, !tbaa !2579
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !17566, !ctir !143
  store i8 34, i8* %arrayidx211, align 1, !dbg !17566, !tbaa !2497
  br label %if.end212, !dbg !17566

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !17569, !tbaa !2579
  %inc213 = add i64 %125, 1, !dbg !17569
  store i64 %inc213, i64* %len, align 8, !dbg !17569, !tbaa !2579
  br label %do.end214, !dbg !17569

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !17570

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !17571, !tbaa !2579
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !17571, !tbaa !2579
  %cmp216 = icmp ult i64 %126, %127, !dbg !17571
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !17574

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !17571, !tbaa !2442
  %129 = load i64, i64* %len, align 8, !dbg !17571, !tbaa !2579
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !17571, !ctir !143
  store i8 34, i8* %arrayidx219, align 1, !dbg !17571, !tbaa !2497
  br label %if.end220, !dbg !17571

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !17574, !tbaa !2579
  %inc221 = add i64 %130, 1, !dbg !17574
  store i64 %inc221, i64* %len, align 8, !dbg !17574, !tbaa !2579
  br label %do.end222, !dbg !17574

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !17575

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !17576, !tbaa !2579
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !17576, !tbaa !2579
  %cmp224 = icmp ult i64 %131, %132, !dbg !17576
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !17579

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !17576, !tbaa !2442
  %134 = load i64, i64* %len, align 8, !dbg !17576, !tbaa !2579
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !17576, !ctir !143
  store i8 63, i8* %arrayidx227, align 1, !dbg !17576, !tbaa !2497
  br label %if.end228, !dbg !17576

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !17579, !tbaa !2579
  %inc229 = add i64 %135, 1, !dbg !17579
  store i64 %inc229, i64* %len, align 8, !dbg !17579, !tbaa !2579
  br label %do.end230, !dbg !17579

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !17580

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !17581

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !17582

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !17583

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !17584

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !17585

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !17586, !tbaa !2497
  br label %c_escape, !dbg !17587

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !17588, !tbaa !2497
  br label %c_escape, !dbg !17589

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !17590, !tbaa !2497
  br label %c_escape, !dbg !17591

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !17592, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17593

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !17594, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17595

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !17596, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17597

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !17598, !tbaa !2497
  br label %c_escape, !dbg !17599

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !17600, !tbaa !2497
  store i8 %136, i8* %esc, align 1, !dbg !17601, !tbaa !2497
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !17602, !tbaa !2497
  %cmp244 = icmp eq i32 %137, 2, !dbg !17604
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !17605

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17606, !tbaa !2461
  %tobool247 = trunc i8 %138 to i1, !dbg !17606
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !17609

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !17610

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !17611

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !17612, !tbaa !2461
  %tobool251 = trunc i8 %139 to i1, !dbg !17612
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !17614

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17615, !tbaa !2461
  %tobool254 = trunc i8 %140 to i1, !dbg !17615
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !17616

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !17617, !tbaa !2579
  %tobool257 = icmp ne i64 %141, 0, !dbg !17617
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !17618

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !17619

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !17617

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !17620), !dbg !17621
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !17622, !tbaa !2497
  %cmp260 = icmp eq i32 %142, 2, !dbg !17624
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !17625

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17626, !tbaa !2461
  %tobool263 = trunc i8 %143 to i1, !dbg !17626
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !17627

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !17628

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !17626

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !17629), !dbg !17630
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !17631, !tbaa !2461
  %tobool267 = trunc i8 %144 to i1, !dbg !17631
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !17633

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !17634, !tbaa !2497
  store i8 %145, i8* %c, align 1, !dbg !17636, !tbaa !2497
  br label %store_escape, !dbg !17637

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !17638

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !17639, !tbaa !2579
  %cmp271 = icmp eq i64 %146, -1, !dbg !17641
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !17642

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !17643, !tbaa !2442
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !17643, !ctir !146
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !17643, !tbaa !2497
  %conv275 = sext i8 %148 to i32, !dbg !17643
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !17644
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !17639

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !17645, !tbaa !2579
  %cmp279 = icmp eq i64 %149, 1, !dbg !17646
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !17642

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !17647

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !17648

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !17649, !tbaa !2579
  %cmp284 = icmp ne i64 %150, 0, !dbg !17651
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !17652

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !17653

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !17654

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17655, !tbaa !2461
  br label %sw.bb289, !dbg !17656

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !17657, !tbaa !2497
  %cmp290 = icmp eq i32 %151, 2, !dbg !17659
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !17660

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17661, !tbaa !2461
  %tobool293 = trunc i8 %152 to i1, !dbg !17661
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !17662

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !17663

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !17664

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !17665, !tbaa !2461
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17666, !tbaa !2461
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !17667, !tbaa !2497
  %cmp298 = icmp eq i32 %153, 2, !dbg !17669
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !17670

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17671, !tbaa !2461
  %tobool301 = trunc i8 %154 to i1, !dbg !17671
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !17674

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !17675

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !17676, !tbaa !2579
  %tobool304 = icmp ne i64 %155, 0, !dbg !17676
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !17678

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !17679, !tbaa !2579
  %tobool306 = icmp ne i64 %156, 0, !dbg !17679
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !17680

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !17681, !tbaa !2579
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !17683, !tbaa !2579
  store i64 0, i64* %buffersize.addr, align 8, !dbg !17684, !tbaa !2579
  br label %if.end308, !dbg !17685

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !17686

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !17687, !tbaa !2579
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !17687, !tbaa !2579
  %cmp310 = icmp ult i64 %158, %159, !dbg !17687
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !17690

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !17687, !tbaa !2442
  %161 = load i64, i64* %len, align 8, !dbg !17687, !tbaa !2579
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !17687, !ctir !143
  store i8 39, i8* %arrayidx313, align 1, !dbg !17687, !tbaa !2497
  br label %if.end314, !dbg !17687

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !17690, !tbaa !2579
  %inc315 = add i64 %162, 1, !dbg !17690
  store i64 %inc315, i64* %len, align 8, !dbg !17690, !tbaa !2579
  br label %do.end316, !dbg !17690

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !17691

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !17692, !tbaa !2579
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !17692, !tbaa !2579
  %cmp318 = icmp ult i64 %163, %164, !dbg !17692
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !17695

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !17692, !tbaa !2442
  %166 = load i64, i64* %len, align 8, !dbg !17692, !tbaa !2579
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !17692, !ctir !143
  store i8 92, i8* %arrayidx321, align 1, !dbg !17692, !tbaa !2497
  br label %if.end322, !dbg !17692

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !17695, !tbaa !2579
  %inc323 = add i64 %167, 1, !dbg !17695
  store i64 %inc323, i64* %len, align 8, !dbg !17695, !tbaa !2579
  br label %do.end324, !dbg !17695

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !17696

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !17697, !tbaa !2579
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !17697, !tbaa !2579
  %cmp326 = icmp ult i64 %168, %169, !dbg !17697
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !17700

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !17697, !tbaa !2442
  %171 = load i64, i64* %len, align 8, !dbg !17697, !tbaa !2579
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !17697, !ctir !143
  store i8 39, i8* %arrayidx329, align 1, !dbg !17697, !tbaa !2497
  br label %if.end330, !dbg !17697

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !17700, !tbaa !2579
  %inc331 = add i64 %172, 1, !dbg !17700
  store i64 %inc331, i64* %len, align 8, !dbg !17700, !tbaa !2579
  br label %do.end332, !dbg !17700

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17701, !tbaa !2461
  br label %if.end333, !dbg !17702

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !17703

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17704, !tbaa !2461
  br label %sw.epilog564, !dbg !17705

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !17706, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !17709, metadata !DIExpression()), !dbg !17710
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !17711, !tbaa !2461
  %tobool336 = trunc i8 %173 to i1, !dbg !17711
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !17713

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !17714, !tbaa !2579
  %call338 = call i16** @__ctype_b_loc() #17, !dbg !17716
  %174 = load i16*, i16** %call338, align 8, !dbg !17716, !tbaa !2442, !ctir !587
  %175 = load i8, i8* %c, align 1, !dbg !17716, !tbaa !2497
  %conv339 = zext i8 %175 to i32, !dbg !17716
  %idxprom = sext i32 %conv339 to i64, !dbg !17716
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !17716, !ctir !587
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !17716, !tbaa !5835
  %conv341 = zext i16 %176 to i32, !dbg !17716
  %and342 = and i32 %conv341, 16384, !dbg !17716
  %cmp343 = icmp ne i32 %and342, 0, !dbg !17717
  %frombool345 = zext i1 %cmp343 to i8, !dbg !17718
  store i8 %frombool345, i8* %printable, align 1, !dbg !17718, !tbaa !2461
  br label %if.end410, !dbg !17719

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !17720, metadata !DIExpression()), !dbg !17722
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !17723
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !17723
  store i64 0, i64* %m, align 8, !dbg !17724, !tbaa !2579
  store i8 1, i8* %printable, align 1, !dbg !17725, !tbaa !2461
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !17726, !tbaa !2579
  %cmp347 = icmp eq i64 %178, -1, !dbg !17728
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !17729

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !17730, !tbaa !2442
  %call350 = call i64 @strlen(i8* %179) #16, !dbg !17731
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !17732, !tbaa !2579
  br label %if.end351, !dbg !17733

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !17734

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !17735, metadata !DIExpression()), !dbg !17737
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17738, metadata !DIExpression()), !dbg !17739
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !17740, !tbaa !2442
  %181 = load i64, i64* %i, align 8, !dbg !17741, !tbaa !2579
  %182 = load i64, i64* %m, align 8, !dbg !17742, !tbaa !2579
  %add353 = add i64 %181, %182, !dbg !17743
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !17740, !ctir !146
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !17744, !tbaa !2579
  %184 = load i64, i64* %i, align 8, !dbg !17745, !tbaa !2579
  %185 = load i64, i64* %m, align 8, !dbg !17746, !tbaa !2579
  %add355 = add i64 %184, %185, !dbg !17747
  %sub = sub i64 %183, %add355, !dbg !17748
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !17749
  store i64 %call356, i64* %bytes, align 8, !dbg !17739, !tbaa !2579
  %186 = load i64, i64* %bytes, align 8, !dbg !17750, !tbaa !2579
  %cmp357 = icmp eq i64 %186, 0, !dbg !17752
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !17753

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !17754

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !17755, !tbaa !2579
  %cmp361 = icmp eq i64 %187, -1, !dbg !17757
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !17758

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !17759, !tbaa !2461
  br label %do.end409, !dbg !17761

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !17762, !tbaa !2579
  %cmp365 = icmp eq i64 %188, -2, !dbg !17764
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !17765

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !17766, !tbaa !2461
  br label %while.cond, !dbg !17768

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !17769, !tbaa !2579
  %190 = load i64, i64* %m, align 8, !dbg !17770, !tbaa !2579
  %add368 = add i64 %189, %190, !dbg !17771
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !17772, !tbaa !2579
  %cmp369 = icmp ult i64 %add368, %191, !dbg !17773
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !17774

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !17775, !tbaa !2442
  %193 = load i64, i64* %i, align 8, !dbg !17776, !tbaa !2579
  %194 = load i64, i64* %m, align 8, !dbg !17777, !tbaa !2579
  %add371 = add i64 %193, %194, !dbg !17778
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !17775, !ctir !146
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !17775, !tbaa !2497
  %conv373 = sext i8 %195 to i32, !dbg !17775
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !17774
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !17779
  br i1 %196, label %while.body, label %while.end, !dbg !17768

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !17780, !tbaa !2579
  %inc375 = add i64 %197, 1, !dbg !17780
  store i64 %inc375, i64* %m, align 8, !dbg !17780, !tbaa !2579
  br label %while.cond, !dbg !17768, !llvm.loop !17781

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !17782

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17783, !tbaa !2461
  %tobool377 = trunc i8 %198 to i1, !dbg !17783
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !17786

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !17787, !tbaa !2497
  %cmp380 = icmp eq i32 %199, 2, !dbg !17788
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !17789

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !17790, metadata !DIExpression()), !dbg !17792
  store i64 1, i64* %j, align 8, !dbg !17793, !tbaa !2579
  br label %for.cond383, !dbg !17795

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !17796, !tbaa !2579
  %201 = load i64, i64* %bytes, align 8, !dbg !17798, !tbaa !2579
  %cmp384 = icmp ult i64 %200, %201, !dbg !17799
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !17800

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !17801, !tbaa !2442
  %203 = load i64, i64* %i, align 8, !dbg !17802, !tbaa !2579
  %204 = load i64, i64* %m, align 8, !dbg !17803, !tbaa !2579
  %add387 = add i64 %203, %204, !dbg !17804
  %205 = load i64, i64* %j, align 8, !dbg !17805, !tbaa !2579
  %add388 = add i64 %add387, %205, !dbg !17806
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !17801, !ctir !146
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !17801, !tbaa !2497
  %conv390 = sext i8 %206 to i32, !dbg !17801
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !17807

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !17808

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !17810

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !17811

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !17812, !tbaa !2579
  %inc395 = add i64 %207, 1, !dbg !17812
  store i64 %inc395, i64* %j, align 8, !dbg !17812, !tbaa !2579
  br label %for.cond383, !dbg !17813, !llvm.loop !17814

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !17816

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !17817, !tbaa !2436
  %call398 = call i32 @iswprint(i32 %208) #13, !dbg !17819
  %tobool399 = icmp ne i32 %call398, 0, !dbg !17819
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !17820

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !17821, !tbaa !2461
  br label %if.end401, !dbg !17822

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !17823, !tbaa !2579
  %210 = load i64, i64* %m, align 8, !dbg !17824, !tbaa !2579
  %add402 = add i64 %210, %209, !dbg !17824
  store i64 %add402, i64* %m, align 8, !dbg !17824, !tbaa !2579
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !17825

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !17826
  %tobool407 = icmp ne i32 %call406, 0, !dbg !17827
  %lnot408 = xor i1 %tobool407, true, !dbg !17827
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !17825, !llvm.loop !17828

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !17830, !tbaa !2461
  %tobool411 = trunc i8 %211 to i1, !dbg !17830
  %frombool412 = zext i1 %tobool411 to i8, !dbg !17831
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !17831, !tbaa !2461
  %212 = load i64, i64* %m, align 8, !dbg !17832, !tbaa !2579
  %cmp413 = icmp ult i64 1, %212, !dbg !17834
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !17835

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !17836, !tbaa !2461
  %tobool415 = trunc i8 %213 to i1, !dbg !17836
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !17837

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !17838, !tbaa !2461
  %tobool418 = trunc i8 %214 to i1, !dbg !17838
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !17839

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !17840, metadata !DIExpression()), !dbg !17842
  %215 = load i64, i64* %i, align 8, !dbg !17843, !tbaa !2579
  %216 = load i64, i64* %m, align 8, !dbg !17844, !tbaa !2579
  %add420 = add i64 %215, %216, !dbg !17845
  store i64 %add420, i64* %ilim, align 8, !dbg !17842, !tbaa !2579
  br label %for.cond421, !dbg !17846

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !17847, !tbaa !2461
  %tobool422 = trunc i8 %217 to i1, !dbg !17847
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !17852

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !17853, !tbaa !2461
  %tobool425 = trunc i8 %218 to i1, !dbg !17853
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !17854

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !17855

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17857, !tbaa !2461
  %tobool428 = trunc i8 %219 to i1, !dbg !17857
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !17860

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !17857

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !17860, !tbaa !2461
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !17861, !tbaa !2497
  %cmp431 = icmp eq i32 %220, 2, !dbg !17861
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !17861

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17861, !tbaa !2461
  %tobool434 = trunc i8 %221 to i1, !dbg !17861
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !17860

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !17863

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !17865, !tbaa !2579
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !17865, !tbaa !2579
  %cmp437 = icmp ult i64 %222, %223, !dbg !17865
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !17868

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !17865, !tbaa !2442
  %225 = load i64, i64* %len, align 8, !dbg !17865, !tbaa !2579
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !17865, !ctir !143
  store i8 39, i8* %arrayidx440, align 1, !dbg !17865, !tbaa !2497
  br label %if.end441, !dbg !17865

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !17868, !tbaa !2579
  %inc442 = add i64 %226, 1, !dbg !17868
  store i64 %inc442, i64* %len, align 8, !dbg !17868, !tbaa !2579
  br label %do.end444, !dbg !17868

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !17863

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !17869, !tbaa !2579
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !17869, !tbaa !2579
  %cmp446 = icmp ult i64 %227, %228, !dbg !17869
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !17872

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !17869, !tbaa !2442
  %230 = load i64, i64* %len, align 8, !dbg !17869, !tbaa !2579
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !17869, !ctir !143
  store i8 36, i8* %arrayidx449, align 1, !dbg !17869, !tbaa !2497
  br label %if.end450, !dbg !17869

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !17872, !tbaa !2579
  %inc451 = add i64 %231, 1, !dbg !17872
  store i64 %inc451, i64* %len, align 8, !dbg !17872, !tbaa !2579
  br label %do.end453, !dbg !17872

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !17863

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !17873, !tbaa !2579
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !17873, !tbaa !2579
  %cmp455 = icmp ult i64 %232, %233, !dbg !17873
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !17876

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !17873, !tbaa !2442
  %235 = load i64, i64* %len, align 8, !dbg !17873, !tbaa !2579
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !17873, !ctir !143
  store i8 39, i8* %arrayidx458, align 1, !dbg !17873, !tbaa !2497
  br label %if.end459, !dbg !17873

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !17876, !tbaa !2579
  %inc460 = add i64 %236, 1, !dbg !17876
  store i64 %inc460, i64* %len, align 8, !dbg !17876, !tbaa !2579
  br label %do.end462, !dbg !17876

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17863, !tbaa !2461
  br label %if.end463, !dbg !17863

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !17860

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !17877, !tbaa !2579
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !17877, !tbaa !2579
  %cmp465 = icmp ult i64 %237, %238, !dbg !17877
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !17880

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !17877, !tbaa !2442
  %240 = load i64, i64* %len, align 8, !dbg !17877, !tbaa !2579
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !17877, !ctir !143
  store i8 92, i8* %arrayidx468, align 1, !dbg !17877, !tbaa !2497
  br label %if.end469, !dbg !17877

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !17880, !tbaa !2579
  %inc470 = add i64 %241, 1, !dbg !17880
  store i64 %inc470, i64* %len, align 8, !dbg !17880, !tbaa !2579
  br label %do.end472, !dbg !17880

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !17860

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !17881

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !17882, !tbaa !2579
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !17882, !tbaa !2579
  %cmp476 = icmp ult i64 %242, %243, !dbg !17882
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !17885

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !17882, !tbaa !2497
  %conv479 = zext i8 %244 to i32, !dbg !17882
  %shr = ashr i32 %conv479, 6, !dbg !17882
  %add480 = add nsw i32 48, %shr, !dbg !17882
  %conv481 = trunc i32 %add480 to i8, !dbg !17882
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !17882, !tbaa !2442
  %246 = load i64, i64* %len, align 8, !dbg !17882, !tbaa !2579
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !17882, !ctir !143
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !17882, !tbaa !2497
  br label %if.end483, !dbg !17882

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !17885, !tbaa !2579
  %inc484 = add i64 %247, 1, !dbg !17885
  store i64 %inc484, i64* %len, align 8, !dbg !17885, !tbaa !2579
  br label %do.end486, !dbg !17885

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !17886

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !17887, !tbaa !2579
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !17887, !tbaa !2579
  %cmp488 = icmp ult i64 %248, %249, !dbg !17887
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !17890

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !17887, !tbaa !2497
  %conv491 = zext i8 %250 to i32, !dbg !17887
  %shr492 = ashr i32 %conv491, 3, !dbg !17887
  %and493 = and i32 %shr492, 7, !dbg !17887
  %add494 = add nsw i32 48, %and493, !dbg !17887
  %conv495 = trunc i32 %add494 to i8, !dbg !17887
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !17887, !tbaa !2442
  %252 = load i64, i64* %len, align 8, !dbg !17887, !tbaa !2579
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !17887, !ctir !143
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !17887, !tbaa !2497
  br label %if.end497, !dbg !17887

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !17890, !tbaa !2579
  %inc498 = add i64 %253, 1, !dbg !17890
  store i64 %inc498, i64* %len, align 8, !dbg !17890, !tbaa !2579
  br label %do.end500, !dbg !17890

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !17891, !tbaa !2497
  %conv501 = zext i8 %254 to i32, !dbg !17891
  %and502 = and i32 %conv501, 7, !dbg !17892
  %add503 = add nsw i32 48, %and502, !dbg !17893
  %conv504 = trunc i32 %add503 to i8, !dbg !17894
  store i8 %conv504, i8* %c, align 1, !dbg !17895, !tbaa !2497
  br label %if.end518, !dbg !17896

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !17897, !tbaa !2461
  %tobool506 = trunc i8 %255 to i1, !dbg !17897
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !17899

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !17900

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !17902, !tbaa !2579
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !17902, !tbaa !2579
  %cmp509 = icmp ult i64 %256, %257, !dbg !17902
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !17905

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !17902, !tbaa !2442
  %259 = load i64, i64* %len, align 8, !dbg !17902, !tbaa !2579
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !17902, !ctir !143
  store i8 92, i8* %arrayidx512, align 1, !dbg !17902, !tbaa !2497
  br label %if.end513, !dbg !17902

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !17905, !tbaa !2579
  %inc514 = add i64 %260, 1, !dbg !17905
  store i64 %inc514, i64* %len, align 8, !dbg !17905, !tbaa !2579
  br label %do.end516, !dbg !17905

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !17906, !tbaa !2461
  br label %if.end517, !dbg !17907

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !17908, !tbaa !2579
  %262 = load i64, i64* %i, align 8, !dbg !17910, !tbaa !2579
  %add519 = add i64 %262, 1, !dbg !17911
  %cmp520 = icmp ule i64 %261, %add519, !dbg !17912
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !17913

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !17914

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !17915

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17916, !tbaa !2461
  %tobool525 = trunc i8 %263 to i1, !dbg !17916
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !17916

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !17916, !tbaa !2461
  %tobool528 = trunc i8 %264 to i1, !dbg !17916
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !17919

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !17920

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !17922, !tbaa !2579
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !17922, !tbaa !2579
  %cmp531 = icmp ult i64 %265, %266, !dbg !17922
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !17925

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !17922, !tbaa !2442
  %268 = load i64, i64* %len, align 8, !dbg !17922, !tbaa !2579
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !17922, !ctir !143
  store i8 39, i8* %arrayidx534, align 1, !dbg !17922, !tbaa !2497
  br label %if.end535, !dbg !17922

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !17925, !tbaa !2579
  %inc536 = add i64 %269, 1, !dbg !17925
  store i64 %inc536, i64* %len, align 8, !dbg !17925, !tbaa !2579
  br label %do.end538, !dbg !17925

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !17920

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !17926, !tbaa !2579
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !17926, !tbaa !2579
  %cmp540 = icmp ult i64 %270, %271, !dbg !17926
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !17929

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !17926, !tbaa !2442
  %273 = load i64, i64* %len, align 8, !dbg !17926, !tbaa !2579
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !17926, !ctir !143
  store i8 39, i8* %arrayidx543, align 1, !dbg !17926, !tbaa !2497
  br label %if.end544, !dbg !17926

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !17929, !tbaa !2579
  %inc545 = add i64 %274, 1, !dbg !17929
  store i64 %inc545, i64* %len, align 8, !dbg !17929, !tbaa !2579
  br label %do.end547, !dbg !17929

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17920, !tbaa !2461
  br label %if.end548, !dbg !17920

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !17919

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !17930

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !17931, !tbaa !2579
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !17931, !tbaa !2579
  %cmp552 = icmp ult i64 %275, %276, !dbg !17931
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !17934

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !17931, !tbaa !2497
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !17931, !tbaa !2442
  %279 = load i64, i64* %len, align 8, !dbg !17931, !tbaa !2579
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !17931, !ctir !143
  store i8 %277, i8* %arrayidx555, align 1, !dbg !17931, !tbaa !2497
  br label %if.end556, !dbg !17931

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !17934, !tbaa !2579
  %inc557 = add i64 %280, 1, !dbg !17934
  store i64 %inc557, i64* %len, align 8, !dbg !17934, !tbaa !2579
  br label %do.end559, !dbg !17934

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !17935, !tbaa !2442
  %282 = load i64, i64* %i, align 8, !dbg !17936, !tbaa !2579
  %inc560 = add i64 %282, 1, !dbg !17936
  store i64 %inc560, i64* %i, align 8, !dbg !17936, !tbaa !2579
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !17935, !ctir !146
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !17935, !tbaa !2497
  store i8 %283, i8* %c, align 1, !dbg !17937, !tbaa !2497
  br label %for.cond421, !dbg !17938, !llvm.loop !17939

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !17942

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !17943

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !17944, !tbaa !2461
  %tobool565 = trunc i8 %284 to i1, !dbg !17944
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !17946

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !17947, !tbaa !2497
  %cmp568 = icmp ne i32 %285, 2, !dbg !17948
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !17949

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17950, !tbaa !2461
  %tobool571 = trunc i8 %286 to i1, !dbg !17950
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !17951

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17952, !tbaa !2442
  %tobool574 = icmp ne i32* %287, null, !dbg !17952
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !17953

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17954, !tbaa !2442
  %289 = load i8, i8* %c, align 1, !dbg !17955, !tbaa !2497
  %conv576 = zext i8 %289 to i64, !dbg !17955
  %div = udiv i64 %conv576, 32, !dbg !17956
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !17954, !ctir !1513
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !17954, !tbaa !2436
  %291 = load i8, i8* %c, align 1, !dbg !17957, !tbaa !2497
  %conv578 = zext i8 %291 to i64, !dbg !17957
  %rem = urem i64 %conv578, 32, !dbg !17958
  %sh_prom = trunc i64 %rem to i32, !dbg !17959
  %shr579 = lshr i32 %290, %sh_prom, !dbg !17959
  %and580 = and i32 %shr579, 1, !dbg !17960
  %tobool581 = icmp ne i32 %and580, 0, !dbg !17960
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !17961

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !17962, !tbaa !2461
  %tobool583 = trunc i8 %292 to i1, !dbg !17962
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !17963

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !17964

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !17962

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !17965), !dbg !17966
  br label %do.body586, !dbg !17967

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17968, !tbaa !2461
  %tobool587 = trunc i8 %293 to i1, !dbg !17968
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !17971

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !17968

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !17971, !tbaa !2461
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !17972, !tbaa !2497
  %cmp590 = icmp eq i32 %294, 2, !dbg !17972
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !17972

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17972, !tbaa !2461
  %tobool593 = trunc i8 %295 to i1, !dbg !17972
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !17971

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !17974

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !17976, !tbaa !2579
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !17976, !tbaa !2579
  %cmp596 = icmp ult i64 %296, %297, !dbg !17976
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !17979

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !17976, !tbaa !2442
  %299 = load i64, i64* %len, align 8, !dbg !17976, !tbaa !2579
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !17976, !ctir !143
  store i8 39, i8* %arrayidx599, align 1, !dbg !17976, !tbaa !2497
  br label %if.end600, !dbg !17976

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !17979, !tbaa !2579
  %inc601 = add i64 %300, 1, !dbg !17979
  store i64 %inc601, i64* %len, align 8, !dbg !17979, !tbaa !2579
  br label %do.end603, !dbg !17979

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !17974

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !17980, !tbaa !2579
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !17980, !tbaa !2579
  %cmp605 = icmp ult i64 %301, %302, !dbg !17980
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !17983

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !17980, !tbaa !2442
  %304 = load i64, i64* %len, align 8, !dbg !17980, !tbaa !2579
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !17980, !ctir !143
  store i8 36, i8* %arrayidx608, align 1, !dbg !17980, !tbaa !2497
  br label %if.end609, !dbg !17980

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !17983, !tbaa !2579
  %inc610 = add i64 %305, 1, !dbg !17983
  store i64 %inc610, i64* %len, align 8, !dbg !17983, !tbaa !2579
  br label %do.end612, !dbg !17983

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !17974

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !17984, !tbaa !2579
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !17984, !tbaa !2579
  %cmp614 = icmp ult i64 %306, %307, !dbg !17984
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !17987

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !17984, !tbaa !2442
  %309 = load i64, i64* %len, align 8, !dbg !17984, !tbaa !2579
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !17984, !ctir !143
  store i8 39, i8* %arrayidx617, align 1, !dbg !17984, !tbaa !2497
  br label %if.end618, !dbg !17984

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !17987, !tbaa !2579
  %inc619 = add i64 %310, 1, !dbg !17987
  store i64 %inc619, i64* %len, align 8, !dbg !17987, !tbaa !2579
  br label %do.end621, !dbg !17987

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17974, !tbaa !2461
  br label %if.end622, !dbg !17974

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !17971

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !17988, !tbaa !2579
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !17988, !tbaa !2579
  %cmp624 = icmp ult i64 %311, %312, !dbg !17988
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !17991

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !17988, !tbaa !2442
  %314 = load i64, i64* %len, align 8, !dbg !17988, !tbaa !2579
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !17988, !ctir !143
  store i8 92, i8* %arrayidx627, align 1, !dbg !17988, !tbaa !2497
  br label %if.end628, !dbg !17988

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !17991, !tbaa !2579
  %inc629 = add i64 %315, 1, !dbg !17991
  store i64 %inc629, i64* %len, align 8, !dbg !17991, !tbaa !2579
  br label %do.end631, !dbg !17991

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !17971

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !17971

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !17992), !dbg !17993
  br label %do.body634, !dbg !17994

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17995, !tbaa !2461
  %tobool635 = trunc i8 %316 to i1, !dbg !17995
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !17995

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !17995, !tbaa !2461
  %tobool638 = trunc i8 %317 to i1, !dbg !17995
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !17998

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !17999

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !18001, !tbaa !2579
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !18001, !tbaa !2579
  %cmp641 = icmp ult i64 %318, %319, !dbg !18001
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !18004

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !18001, !tbaa !2442
  %321 = load i64, i64* %len, align 8, !dbg !18001, !tbaa !2579
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !18001, !ctir !143
  store i8 39, i8* %arrayidx644, align 1, !dbg !18001, !tbaa !2497
  br label %if.end645, !dbg !18001

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !18004, !tbaa !2579
  %inc646 = add i64 %322, 1, !dbg !18004
  store i64 %inc646, i64* %len, align 8, !dbg !18004, !tbaa !2579
  br label %do.end648, !dbg !18004

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !17999

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !18005, !tbaa !2579
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !18005, !tbaa !2579
  %cmp650 = icmp ult i64 %323, %324, !dbg !18005
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !18008

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !18005, !tbaa !2442
  %326 = load i64, i64* %len, align 8, !dbg !18005, !tbaa !2579
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !18005, !ctir !143
  store i8 39, i8* %arrayidx653, align 1, !dbg !18005, !tbaa !2497
  br label %if.end654, !dbg !18005

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !18008, !tbaa !2579
  %inc655 = add i64 %327, 1, !dbg !18008
  store i64 %inc655, i64* %len, align 8, !dbg !18008, !tbaa !2579
  br label %do.end657, !dbg !18008

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17999, !tbaa !2461
  br label %if.end658, !dbg !17999

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !17998

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !18009

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !18010, !tbaa !2579
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !18010, !tbaa !2579
  %cmp662 = icmp ult i64 %328, %329, !dbg !18010
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !18013

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !18010, !tbaa !2497
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !18010, !tbaa !2442
  %332 = load i64, i64* %len, align 8, !dbg !18010, !tbaa !2579
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !18010, !ctir !143
  store i8 %330, i8* %arrayidx665, align 1, !dbg !18010, !tbaa !2497
  br label %if.end666, !dbg !18010

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !18013, !tbaa !2579
  %inc667 = add i64 %333, 1, !dbg !18013
  store i64 %inc667, i64* %len, align 8, !dbg !18013, !tbaa !2579
  br label %do.end669, !dbg !18013

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !18014, !tbaa !2461
  %tobool670 = trunc i8 %334 to i1, !dbg !18014
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !18016

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !18017, !tbaa !2461
  br label %if.end672, !dbg !18018

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !18019

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !18020, !tbaa !2579
  %inc674 = add i64 %335, 1, !dbg !18020
  store i64 %inc674, i64* %i, align 8, !dbg !18020, !tbaa !2579
  br label %for.cond44, !dbg !18021, !llvm.loop !18022

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !18024, !tbaa !2579
  %cmp676 = icmp eq i64 %336, 0, !dbg !18026
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !18027

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !18028, !tbaa !2497
  %cmp679 = icmp eq i32 %337, 2, !dbg !18029
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !18030

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !18031, !tbaa !2461
  %tobool682 = trunc i8 %338 to i1, !dbg !18031
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !18032

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !18033

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !18034, !tbaa !2497
  %cmp686 = icmp eq i32 %339, 2, !dbg !18036
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !18037

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !18038, !tbaa !2461
  %tobool689 = trunc i8 %340 to i1, !dbg !18038
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !18039

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !18040, !tbaa !2461
  %tobool691 = trunc i8 %341 to i1, !dbg !18040
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !18041

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !18042, !tbaa !2461
  %tobool694 = trunc i8 %342 to i1, !dbg !18042
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !18045

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !18046, !tbaa !2442
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !18047, !tbaa !2579
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !18048, !tbaa !2442
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !18049, !tbaa !2579
  %347 = load i32, i32* %flags.addr, align 4, !dbg !18050, !tbaa !2436
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !18051, !tbaa !2442
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !18052, !tbaa !2442
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !18053, !tbaa !2442
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !18054
  store i64 %call696, i64* %retval, align 8, !dbg !18055
  br label %return, !dbg !18055

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !18056, !tbaa !2579
  %tobool698 = icmp ne i64 %351, 0, !dbg !18056
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !18058

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !18059, !tbaa !2579
  %tobool700 = icmp ne i64 %352, 0, !dbg !18059
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !18060

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !18061, !tbaa !2579
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !18063, !tbaa !2579
  store i64 0, i64* %len, align 8, !dbg !18064, !tbaa !2579
  br label %process_input, !dbg !18065

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !18066

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !18067, !tbaa !2442
  %tobool705 = icmp ne i8* %354, null, !dbg !18067
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !18069

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !18070, !tbaa !2461
  %tobool707 = trunc i8 %355 to i1, !dbg !18070
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !18071

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !18072

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !18073, !tbaa !2442
  %357 = load i8, i8* %356, align 1, !dbg !18076, !tbaa !2497, !ctir !147
  %tobool710 = icmp ne i8 %357, 0, !dbg !18077
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !18077

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !18078

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !18079, !tbaa !2579
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !18079, !tbaa !2579
  %cmp713 = icmp ult i64 %358, %359, !dbg !18079
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !18082

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !18079, !tbaa !2442
  %361 = load i8, i8* %360, align 1, !dbg !18079, !tbaa !2497, !ctir !147
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !18079, !tbaa !2442
  %363 = load i64, i64* %len, align 8, !dbg !18079, !tbaa !2579
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !18079, !ctir !143
  store i8 %361, i8* %arrayidx716, align 1, !dbg !18079, !tbaa !2497
  br label %if.end717, !dbg !18079

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !18082, !tbaa !2579
  %inc718 = add i64 %364, 1, !dbg !18082
  store i64 %inc718, i64* %len, align 8, !dbg !18082, !tbaa !2579
  br label %do.end720, !dbg !18082

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !18082

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !18083, !tbaa !2442
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !18083
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !18083, !tbaa !2442
  br label %for.cond709, !dbg !18084, !llvm.loop !18085

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !18086

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !18087, !tbaa !2579
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !18089, !tbaa !2579
  %cmp725 = icmp ult i64 %366, %367, !dbg !18090
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !18091

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !18092, !tbaa !2442
  %369 = load i64, i64* %len, align 8, !dbg !18093, !tbaa !2579
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !18092, !ctir !143
  store i8 0, i8* %arrayidx728, align 1, !dbg !18094, !tbaa !2497
  br label %if.end729, !dbg !18092

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !18095, !tbaa !2579
  store i64 %370, i64* %retval, align 8, !dbg !18096
  br label %return, !dbg !18096

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !18097), !dbg !18098
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !18099, !tbaa !2497
  %cmp730 = icmp eq i32 %371, 2, !dbg !18101
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !18102

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !18103, !tbaa !2461
  %tobool733 = trunc i8 %372 to i1, !dbg !18103
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !18104

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !18105, !tbaa !2497
  br label %if.end736, !dbg !18106

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !18107, !tbaa !2442
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !18108, !tbaa !2579
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !18109, !tbaa !2442
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !18110, !tbaa !2579
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !18111, !tbaa !2497
  %378 = load i32, i32* %flags.addr, align 4, !dbg !18112, !tbaa !2436
  %and737 = and i32 %378, -3, !dbg !18113
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !18114, !tbaa !2442
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !18115, !tbaa !2442
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !18116
  store i64 %call738, i64* %retval, align 8, !dbg !18117
  br label %return, !dbg !18117

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !18118
  ret i64 %381, !dbg !18118
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 !dbg !18119 !ctir !1525 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !146
  %locale_code = alloca i8*, align 8, !ctir !146
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !18120, metadata !DIExpression()), !dbg !18121
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18122, metadata !DIExpression()), !dbg !18123
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !18124, metadata !DIExpression()), !dbg !18125
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !18126, !tbaa !2442
  %call = call i8* @gettext(i8* %0) #13, !dbg !18126
  store i8* %call, i8** %translation, align 8, !dbg !18125, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !18127, metadata !DIExpression()), !dbg !18128
  %1 = load i8*, i8** %translation, align 8, !dbg !18129, !tbaa !2442
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !18131, !tbaa !2442
  %cmp = icmp ne i8* %1, %2, !dbg !18132
  br i1 %cmp, label %if.then, label %if.end, !dbg !18133

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !18134, !tbaa !2442
  store i8* %3, i8** %retval, align 8, !dbg !18135
  br label %return, !dbg !18135

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !18136
  store i8* %call1, i8** %locale_code, align 8, !dbg !18137, !tbaa !2442
  %4 = load i8*, i8** %locale_code, align 8, !dbg !18138, !tbaa !2442
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.400, i64 0, i64 0)) #16, !dbg !18138
  %cmp3 = icmp eq i32 %call2, 0, !dbg !18138
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !18140

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !18141, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !18141, !ctir !146
  %6 = load i8, i8* %arrayidx, align 1, !dbg !18141, !tbaa !2497
  %conv = sext i8 %6 to i32, !dbg !18141
  %cmp5 = icmp eq i32 %conv, 96, !dbg !18142
  %7 = zext i1 %cmp5 to i64, !dbg !18141
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.401, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.402, i64 0, i64 0), !dbg !18141
  store i8* %cond, i8** %retval, align 8, !dbg !18143
  br label %return, !dbg !18143

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !18144, !tbaa !2442
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.403, i64 0, i64 0)) #16, !dbg !18144
  %cmp9 = icmp eq i32 %call8, 0, !dbg !18144
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !18146

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !18147, !tbaa !2442
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !18147, !ctir !146
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !18147, !tbaa !2497
  %conv13 = sext i8 %10 to i32, !dbg !18147
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !18148
  %11 = zext i1 %cmp14 to i64, !dbg !18147
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.404, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.405, i64 0, i64 0), !dbg !18147
  store i8* %cond16, i8** %retval, align 8, !dbg !18149
  br label %return, !dbg !18149

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !18150, !tbaa !2497
  %cmp18 = icmp eq i32 %12, 9, !dbg !18151
  %13 = zext i1 %cmp18 to i64, !dbg !18150
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.397, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), !dbg !18150
  store i8* %cond20, i8** %retval, align 8, !dbg !18152
  br label %return, !dbg !18152

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !18153
  ret i8* %14, !dbg !18153
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !18154 !ctir !1470 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18155, metadata !DIExpression()), !dbg !18156
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18157, metadata !DIExpression()), !dbg !18158
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18159, metadata !DIExpression()), !dbg !18160
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18161, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18162, !tbaa !2579
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18163, !tbaa !2442
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !18164
  ret i8* %call, !dbg !18165
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #0 !dbg !18166 !ctir !1472 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1457
  %e = alloca i32, align 4, !ctir !27
  %flags = alloca i32, align 4, !ctir !27
  %bufsize = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18167, metadata !DIExpression()), !dbg !18168
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18169, metadata !DIExpression()), !dbg !18170
  store i64* %size, i64** %size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !18171, metadata !DIExpression()), !dbg !18172
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18173, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !18175, metadata !DIExpression()), !dbg !18176
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18177, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !18177
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18177

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18178, !tbaa !2442
  br label %cond.end, !dbg !18177

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18177

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !18177
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !18176, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18179, metadata !DIExpression()), !dbg !18180
  %call = call i32* @__errno_location() #17, !dbg !18181
  %2 = load i32, i32* %call, align 4, !dbg !18181, !tbaa !2436, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !18180, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18182, metadata !DIExpression()), !dbg !18183
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18184, !tbaa !2442
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !18185, !ctir !1458
  %4 = load i32, i32* %flags1, align 4, !dbg !18185, !tbaa !17173, !ctir !27
  %5 = load i64*, i64** %size.addr, align 8, !dbg !18186, !tbaa !2442
  %tobool2 = icmp ne i64* %5, null, !dbg !18186
  %6 = zext i1 %tobool2 to i64, !dbg !18186
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !18186
  %or = or i32 %4, %cond3, !dbg !18187
  store i32 %or, i32* %flags, align 4, !dbg !18183, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !18188, metadata !DIExpression()), !dbg !18189
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !18190, !tbaa !2442
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !18191, !tbaa !2579
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18192, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !18193, !ctir !1458
  %10 = load i32, i32* %style, align 8, !dbg !18193, !tbaa !17105, !ctir !95
  %11 = load i32, i32* %flags, align 4, !dbg !18194, !tbaa !2436
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18195, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !18196, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18195
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18197, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !18198, !ctir !1458
  %14 = load i8*, i8** %left_quote, align 8, !dbg !18198, !tbaa !17206, !ctir !146
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18199, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !18200, !ctir !1458
  %16 = load i8*, i8** %right_quote, align 8, !dbg !18200, !tbaa !17211, !ctir !146
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !18201
  %add = add i64 %call4, 1, !dbg !18202
  store i64 %add, i64* %bufsize, align 8, !dbg !18189, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !18203, metadata !DIExpression()), !dbg !18204
  %17 = load i64, i64* %bufsize, align 8, !dbg !18205, !tbaa !2579
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !18206
  store i8* %call5, i8** %buf, align 8, !dbg !18204, !tbaa !2442
  %18 = load i8*, i8** %buf, align 8, !dbg !18207, !tbaa !2442
  %19 = load i64, i64* %bufsize, align 8, !dbg !18208, !tbaa !2579
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !18209, !tbaa !2442
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !18210, !tbaa !2579
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18211, !tbaa !2442
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !18212, !ctir !1458
  %23 = load i32, i32* %style6, align 8, !dbg !18212, !tbaa !17105, !ctir !95
  %24 = load i32, i32* %flags, align 4, !dbg !18213, !tbaa !2436
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18214, !tbaa !2442
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !18215, !ctir !1458
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !18214
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18216, !tbaa !2442
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !18217, !ctir !1458
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !18217, !tbaa !17206, !ctir !146
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18218, !tbaa !2442
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !18219, !ctir !1458
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !18219, !tbaa !17211, !ctir !146
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !18220
  %30 = load i32, i32* %e, align 4, !dbg !18221, !tbaa !2436
  %call12 = call i32* @__errno_location() #17, !dbg !18222
  store i32 %30, i32* %call12, align 4, !dbg !18223, !tbaa !2436, !ctir !27
  %31 = load i64*, i64** %size.addr, align 8, !dbg !18224, !tbaa !2442
  %tobool13 = icmp ne i64* %31, null, !dbg !18224
  br i1 %tobool13, label %if.then, label %if.end, !dbg !18226

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !18227, !tbaa !2579
  %sub = sub i64 %32, 1, !dbg !18228
  %33 = load i64*, i64** %size.addr, align 8, !dbg !18229, !tbaa !2442
  store i64 %sub, i64* %33, align 8, !dbg !18230, !tbaa !2579, !ctir !149
  br label %if.end, !dbg !18231

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !18232, !tbaa !2442
  ret i8* %34, !dbg !18233
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #0 !dbg !18234 !ctir !341 {
entry:
  %sv = alloca %struct.bin_str*, align 8, !ctir !1474
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18235, metadata !DIExpression()), !dbg !18236
  %0 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18237, !tbaa !2442
  store %struct.bin_str* %0, %struct.bin_str** %sv, align 8, !dbg !18236, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18238, metadata !DIExpression()), !dbg !18239
  store i32 1, i32* %i, align 4, !dbg !18240, !tbaa !2436
  br label %for.cond, !dbg !18242

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !18243, !tbaa !2436
  %2 = load i32, i32* @nslots, align 4, !dbg !18245, !tbaa !2436
  %cmp = icmp slt i32 %1, %2, !dbg !18246
  br i1 %cmp, label %for.body, label %for.end, !dbg !18247

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18248, !tbaa !2442
  %4 = load i32, i32* %i, align 4, !dbg !18249, !tbaa !2436
  %idxprom = sext i32 %4 to i64, !dbg !18248
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i64 %idxprom, !dbg !18248, !ctir !1474
  %val = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 1, !dbg !18250, !ctir !1475
  %5 = load i8*, i8** %val, align 8, !dbg !18250, !tbaa !18251, !ctir !143
  call void @free(i8* %5) #13, !dbg !18253
  br label %for.inc, !dbg !18253

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !18254, !tbaa !2436
  %inc = add nsw i32 %6, 1, !dbg !18254
  store i32 %inc, i32* %i, align 4, !dbg !18254, !tbaa !2436
  br label %for.cond, !dbg !18255, !llvm.loop !18256

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18258, !tbaa !2442
  %arrayidx1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %7, i64 0, !dbg !18258, !ctir !1474
  %val2 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx1, i32 0, i32 1, !dbg !18260, !ctir !1475
  %8 = load i8*, i8** %val2, align 8, !dbg !18260, !tbaa !18251, !ctir !143
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18261
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18262

if.then:                                          ; preds = %for.end
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18263, !tbaa !2442
  %arrayidx4 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %9, i64 0, !dbg !18263, !ctir !1474
  %val5 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx4, i32 0, i32 1, !dbg !18265, !ctir !1475
  %10 = load i8*, i8** %val5, align 8, !dbg !18265, !tbaa !18251, !ctir !143
  call void @free(i8* %10) #13, !dbg !18266
  store i64 256, i64* getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 0), align 8, !dbg !18267, !tbaa !18268, !ctir !149
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 1), align 8, !dbg !18269, !tbaa !18251, !ctir !143
  br label %if.end, !dbg !18270

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18271, !tbaa !2442
  %cmp6 = icmp ne %struct.bin_str* %11, @slotvec0, !dbg !18273
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !18274

if.then7:                                         ; preds = %if.end
  %12 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18275, !tbaa !2442
  %13 = bitcast %struct.bin_str* %12 to i8*, !dbg !18275
  call void @free(i8* %13) #13, !dbg !18277
  store %struct.bin_str* @slotvec0, %struct.bin_str** @slotvec, align 8, !dbg !18278, !tbaa !2442
  br label %if.end8, !dbg !18279

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !18280, !tbaa !2436
  ret void, !dbg !18281
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #0 !dbg !18282 !ctir !1479 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18283, metadata !DIExpression()), !dbg !18284
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18285, metadata !DIExpression()), !dbg !18286
  %0 = load i32, i32* %n.addr, align 4, !dbg !18287, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18288, !tbaa !2442
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !18289
  ret i8* %call, !dbg !18290
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 !dbg !18291 !ctir !1527 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %sv = alloca %struct.bin_str*, align 8, !ctir !1474
  %preallocated = alloca i8, align 1, !ctir !141
  %nmax = alloca i32, align 4, !ctir !27
  %size = alloca i64, align 8, !ctir !149
  %val = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %qsize = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18292, metadata !DIExpression()), !dbg !18293
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18294, metadata !DIExpression()), !dbg !18295
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18296, metadata !DIExpression()), !dbg !18297
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !18298, metadata !DIExpression()), !dbg !18299
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18300, metadata !DIExpression()), !dbg !18301
  %call = call i32* @__errno_location() #17, !dbg !18302
  %0 = load i32, i32* %call, align 4, !dbg !18302, !tbaa !2436, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !18301, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18303, metadata !DIExpression()), !dbg !18304
  %1 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18305, !tbaa !2442
  store %struct.bin_str* %1, %struct.bin_str** %sv, align 8, !dbg !18304, !tbaa !2442
  %2 = load i32, i32* %n.addr, align 4, !dbg !18306, !tbaa !2436
  %cmp = icmp slt i32 %2, 0, !dbg !18308
  br i1 %cmp, label %if.then, label %if.end, !dbg !18309

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18310
  unreachable, !dbg !18310

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !18311, !tbaa !2436
  %4 = load i32, i32* %n.addr, align 4, !dbg !18313, !tbaa !2436
  %cmp1 = icmp sle i32 %3, %4, !dbg !18314
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !18315

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !18316, metadata !DIExpression()), !dbg !18318
  %5 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18319, !tbaa !2442
  %cmp3 = icmp eq %struct.bin_str* %5, @slotvec0, !dbg !18320
  %frombool = zext i1 %cmp3 to i8, !dbg !18318
  store i8 %frombool, i8* %preallocated, align 1, !dbg !18318, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !18321, metadata !DIExpression()), !dbg !18322
  store i32 2147483646, i32* %nmax, align 4, !dbg !18322, !tbaa !2436
  %6 = load i32, i32* %nmax, align 4, !dbg !18323, !tbaa !2436
  %7 = load i32, i32* %n.addr, align 4, !dbg !18325, !tbaa !2436
  %cmp4 = icmp slt i32 %6, %7, !dbg !18326
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18327

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #14, !dbg !18328
  unreachable, !dbg !18328

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !18329, !tbaa !2461
  %tobool = trunc i8 %8 to i1, !dbg !18329
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18329

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !18329

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18330, !tbaa !2442
  br label %cond.end, !dbg !18329

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bin_str* [ null, %cond.true ], [ %9, %cond.false ], !dbg !18329
  %10 = bitcast %struct.bin_str* %cond to i8*, !dbg !18329
  %11 = load i32, i32* %n.addr, align 4, !dbg !18331, !tbaa !2436
  %add = add nsw i32 %11, 1, !dbg !18332
  %conv = sext i32 %add to i64, !dbg !18333
  %mul = mul i64 %conv, 16, !dbg !18334
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !18335
  %12 = bitcast i8* %call7 to %struct.bin_str*, !dbg !18335
  store %struct.bin_str* %12, %struct.bin_str** %sv, align 8, !dbg !18336, !tbaa !2442
  store %struct.bin_str* %12, %struct.bin_str** @slotvec, align 8, !dbg !18337, !tbaa !2442
  %13 = load i8, i8* %preallocated, align 1, !dbg !18338, !tbaa !2461
  %tobool8 = trunc i8 %13 to i1, !dbg !18338
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !18340

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18341, !tbaa !2442
  %15 = bitcast %struct.bin_str* %14 to i8*, !dbg !18342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.bin_str* @slotvec0 to i8*), i64 16, i1 false), !dbg !18342, !tbaa.struct !18343
  br label %if.end10, !dbg !18344

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18345, !tbaa !2442
  %17 = load i32, i32* @nslots, align 4, !dbg !18346, !tbaa !2436
  %idx.ext = sext i32 %17 to i64, !dbg !18347
  %add.ptr = getelementptr inbounds %struct.bin_str, %struct.bin_str* %16, i64 %idx.ext, !dbg !18347
  %18 = bitcast %struct.bin_str* %add.ptr to i8*, !dbg !18348
  %19 = load i32, i32* %n.addr, align 4, !dbg !18349, !tbaa !2436
  %add11 = add nsw i32 %19, 1, !dbg !18350
  %20 = load i32, i32* @nslots, align 4, !dbg !18351, !tbaa !2436
  %sub = sub nsw i32 %add11, %20, !dbg !18352
  %conv12 = sext i32 %sub to i64, !dbg !18353
  %mul13 = mul i64 %conv12, 16, !dbg !18354
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !18348
  %21 = load i32, i32* %n.addr, align 4, !dbg !18355, !tbaa !2436
  %add14 = add nsw i32 %21, 1, !dbg !18356
  store i32 %add14, i32* @nslots, align 4, !dbg !18357, !tbaa !2436
  br label %if.end15, !dbg !18358

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !18359, metadata !DIExpression()), !dbg !18361
  %22 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18362, !tbaa !2442
  %23 = load i32, i32* %n.addr, align 4, !dbg !18363, !tbaa !2436
  %idxprom = sext i32 %23 to i64, !dbg !18362
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %22, i64 %idxprom, !dbg !18362, !ctir !1474
  %size16 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !18364, !ctir !1475
  %24 = load i64, i64* %size16, align 8, !dbg !18364, !tbaa !18268, !ctir !149
  store i64 %24, i64* %size, align 8, !dbg !18361, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %val, metadata !18365, metadata !DIExpression()), !dbg !18366
  %25 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18367, !tbaa !2442
  %26 = load i32, i32* %n.addr, align 4, !dbg !18368, !tbaa !2436
  %idxprom17 = sext i32 %26 to i64, !dbg !18367
  %arrayidx18 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %25, i64 %idxprom17, !dbg !18367, !ctir !1474
  %val19 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx18, i32 0, i32 1, !dbg !18369, !ctir !1475
  %27 = load i8*, i8** %val19, align 8, !dbg !18369, !tbaa !18251, !ctir !143
  store i8* %27, i8** %val, align 8, !dbg !18366, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18370, metadata !DIExpression()), !dbg !18371
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18372, !tbaa !2442
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !18373, !ctir !1458
  %29 = load i32, i32* %flags20, align 4, !dbg !18373, !tbaa !17173, !ctir !27
  %or = or i32 %29, 1, !dbg !18374
  store i32 %or, i32* %flags, align 4, !dbg !18371, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !18375, metadata !DIExpression()), !dbg !18376
  %30 = load i8*, i8** %val, align 8, !dbg !18377, !tbaa !2442
  %31 = load i64, i64* %size, align 8, !dbg !18378, !tbaa !2579
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !18379, !tbaa !2442
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !18380, !tbaa !2579
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18381, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !18382, !ctir !1458
  %35 = load i32, i32* %style, align 8, !dbg !18382, !tbaa !17105, !ctir !95
  %36 = load i32, i32* %flags, align 4, !dbg !18383, !tbaa !2436
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18384, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !18385, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18384
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18386, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !18387, !ctir !1458
  %39 = load i8*, i8** %left_quote, align 8, !dbg !18387, !tbaa !17206, !ctir !146
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18388, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !18389, !ctir !1458
  %41 = load i8*, i8** %right_quote, align 8, !dbg !18389, !tbaa !17211, !ctir !146
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !18390
  store i64 %call21, i64* %qsize, align 8, !dbg !18376, !tbaa !2579
  %42 = load i64, i64* %size, align 8, !dbg !18391, !tbaa !2579
  %43 = load i64, i64* %qsize, align 8, !dbg !18393, !tbaa !2579
  %cmp22 = icmp ule i64 %42, %43, !dbg !18394
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !18395

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !18396, !tbaa !2579
  %add25 = add i64 %44, 1, !dbg !18398
  store i64 %add25, i64* %size, align 8, !dbg !18399, !tbaa !2579
  %45 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18400, !tbaa !2442
  %46 = load i32, i32* %n.addr, align 4, !dbg !18401, !tbaa !2436
  %idxprom26 = sext i32 %46 to i64, !dbg !18400
  %arrayidx27 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %45, i64 %idxprom26, !dbg !18400, !ctir !1474
  %size28 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx27, i32 0, i32 0, !dbg !18402, !ctir !1475
  store i64 %add25, i64* %size28, align 8, !dbg !18403, !tbaa !18268, !ctir !149
  %47 = load i8*, i8** %val, align 8, !dbg !18404, !tbaa !2442
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18406
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !18407

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !18408, !tbaa !2442
  call void @free(i8* %48) #13, !dbg !18409
  br label %if.end32, !dbg !18409

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !18410, !tbaa !2579
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !18411
  store i8* %call33, i8** %val, align 8, !dbg !18412, !tbaa !2442
  %50 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18413, !tbaa !2442
  %51 = load i32, i32* %n.addr, align 4, !dbg !18414, !tbaa !2436
  %idxprom34 = sext i32 %51 to i64, !dbg !18413
  %arrayidx35 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %50, i64 %idxprom34, !dbg !18413, !ctir !1474
  %val36 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx35, i32 0, i32 1, !dbg !18415, !ctir !1475
  store i8* %call33, i8** %val36, align 8, !dbg !18416, !tbaa !18251, !ctir !143
  %52 = load i8*, i8** %val, align 8, !dbg !18417, !tbaa !2442
  %53 = load i64, i64* %size, align 8, !dbg !18418, !tbaa !2579
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !18419, !tbaa !2442
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !18420, !tbaa !2579
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18421, !tbaa !2442
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !18422, !ctir !1458
  %57 = load i32, i32* %style37, align 8, !dbg !18422, !tbaa !17105, !ctir !95
  %58 = load i32, i32* %flags, align 4, !dbg !18423, !tbaa !2436
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18424, !tbaa !2442
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !18425, !ctir !1458
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !18424
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18426, !tbaa !2442
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !18427, !ctir !1458
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !18427, !tbaa !17206, !ctir !146
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18428, !tbaa !2442
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !18429, !ctir !1458
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !18429, !tbaa !17211, !ctir !146
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !18430
  br label %if.end43, !dbg !18431

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !18432, !tbaa !2436
  %call44 = call i32* @__errno_location() #17, !dbg !18433
  store i32 %64, i32* %call44, align 4, !dbg !18434, !tbaa !2436, !ctir !27
  %65 = load i8*, i8** %val, align 8, !dbg !18435, !tbaa !2442
  ret i8* %65, !dbg !18436
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18437 !ctir !1481 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18438, metadata !DIExpression()), !dbg !18439
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18440, metadata !DIExpression()), !dbg !18441
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18442, metadata !DIExpression()), !dbg !18443
  %0 = load i32, i32* %n.addr, align 4, !dbg !18444, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18445, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18446, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !18447
  ret i8* %call, !dbg !18448
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #0 !dbg !18449 !ctir !572 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18450, metadata !DIExpression()), !dbg !18451
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18452, !tbaa !2442
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !18453
  ret i8* %call, !dbg !18454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #0 !dbg !18455 !ctir !1483 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18456, metadata !DIExpression()), !dbg !18457
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18458, metadata !DIExpression()), !dbg !18459
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18460, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18461, !tbaa !2579
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !18462
  ret i8* %call, !dbg !18463
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 !dbg !18464 !ctir !1485 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1458
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18465, metadata !DIExpression()), !dbg !18466
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18467, metadata !DIExpression()), !dbg !18468
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18469, metadata !DIExpression()), !dbg !18470
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18471, metadata !DIExpression()), !dbg !18472
  %0 = load i32, i32* %s.addr, align 4, !dbg !18473, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18474
  %1 = load i32, i32* %n.addr, align 4, !dbg !18475, !tbaa !2436
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18476, !tbaa !2442
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !18477
  ret i8* %call, !dbg !18478
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 !dbg !18479 !ctir !1529 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !18480, metadata !DIExpression()), !dbg !18481
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !18482, metadata !DIExpression()), !dbg !18483
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !18483
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !18483
  %1 = load i32, i32* %style.addr, align 4, !dbg !18484, !tbaa !2497
  %cmp = icmp eq i32 %1, 10, !dbg !18486
  br i1 %cmp, label %if.then, label %if.end, !dbg !18487

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18488
  unreachable, !dbg !18488

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !18489, !tbaa !2497
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !18490, !ctir !1446
  store i32 %2, i32* %style1, align 8, !dbg !18491, !tbaa !17105, !ctir !95
  ret void, !dbg !18492
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18493 !ctir !1487 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1458
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18494, metadata !DIExpression()), !dbg !18495
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18496, metadata !DIExpression()), !dbg !18497
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18498, metadata !DIExpression()), !dbg !18499
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18500, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18502, metadata !DIExpression()), !dbg !18503
  %0 = load i32, i32* %s.addr, align 4, !dbg !18504, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18505
  %1 = load i32, i32* %n.addr, align 4, !dbg !18506, !tbaa !2436
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18507, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18508, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !18509
  ret i8* %call, !dbg !18510
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #0 !dbg !18511 !ctir !1489 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18512, metadata !DIExpression()), !dbg !18513
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18514, metadata !DIExpression()), !dbg !18515
  %0 = load i32, i32* %s.addr, align 4, !dbg !18516, !tbaa !2497
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18517, !tbaa !2442
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !18518
  ret i8* %call, !dbg !18519
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18520 !ctir !1491 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18521, metadata !DIExpression()), !dbg !18522
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18523, metadata !DIExpression()), !dbg !18524
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18525, metadata !DIExpression()), !dbg !18526
  %0 = load i32, i32* %s.addr, align 4, !dbg !18527, !tbaa !2497
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18528, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18529, !tbaa !2579
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !18530
  ret i8* %call, !dbg !18531
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #0 !dbg !18532 !ctir !1493 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1446
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18533, metadata !DIExpression()), !dbg !18534
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18535, metadata !DIExpression()), !dbg !18536
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18537, metadata !DIExpression()), !dbg !18538
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18539, metadata !DIExpression()), !dbg !18540
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !18541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18541, !tbaa.struct !18542
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18543, !tbaa !2497
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !18544
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18545, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18546, !tbaa !2579
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !18547
  ret i8* %call1, !dbg !18548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 !dbg !18549 !ctir !1495 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18550, metadata !DIExpression()), !dbg !18551
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18552, metadata !DIExpression()), !dbg !18553
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18554, !tbaa !2442
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18555, !tbaa !2497
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !18556
  ret i8* %call, !dbg !18557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #0 !dbg !18558 !ctir !572 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18559, metadata !DIExpression()), !dbg !18560
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18561, !tbaa !2442
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !18562
  ret i8* %call, !dbg !18563
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #0 !dbg !18564 !ctir !1483 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18565, metadata !DIExpression()), !dbg !18566
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18567, metadata !DIExpression()), !dbg !18568
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18569, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18570, !tbaa !2579
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !18571
  ret i8* %call, !dbg !18572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #0 !dbg !18573 !ctir !1485 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1446
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18574, metadata !DIExpression()), !dbg !18575
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18576, metadata !DIExpression()), !dbg !18577
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18578, metadata !DIExpression()), !dbg !18579
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18580, metadata !DIExpression()), !dbg !18581
  %0 = load i32, i32* %s.addr, align 4, !dbg !18582, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !18583
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !18583
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !18583
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !18583, !tbaa.struct !18542
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !18584
  %3 = load i32, i32* %n.addr, align 4, !dbg !18585, !tbaa !2436
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18586, !tbaa !2442
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !18587
  ret i8* %call1, !dbg !18588
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18589 !ctir !1497 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18590, metadata !DIExpression()), !dbg !18591
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18592, metadata !DIExpression()), !dbg !18593
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18594, metadata !DIExpression()), !dbg !18595
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18596, metadata !DIExpression()), !dbg !18597
  %0 = load i32, i32* %n.addr, align 4, !dbg !18598, !tbaa !2436
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18599, !tbaa !2442
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18600, !tbaa !2442
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !18601, !tbaa !2442
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !18602
  ret i8* %call, !dbg !18603
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18604 !ctir !1499 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1446
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18605, metadata !DIExpression()), !dbg !18606
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18607, metadata !DIExpression()), !dbg !18608
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18609, metadata !DIExpression()), !dbg !18610
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18611, metadata !DIExpression()), !dbg !18612
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18613, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18615, metadata !DIExpression()), !dbg !18616
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !18617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18617, !tbaa.struct !18542
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18618, !tbaa !2442
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18619, !tbaa !2442
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !18620
  %3 = load i32, i32* %n.addr, align 4, !dbg !18621, !tbaa !2436
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18622, !tbaa !2442
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !18623, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !18624
  ret i8* %call, !dbg !18625
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18626 !ctir !1501 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18627, metadata !DIExpression()), !dbg !18628
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18629, metadata !DIExpression()), !dbg !18630
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18631, metadata !DIExpression()), !dbg !18632
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18633, !tbaa !2442
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18634, !tbaa !2442
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18635, !tbaa !2442
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !18636
  ret i8* %call, !dbg !18637
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18638 !ctir !1503 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18639, metadata !DIExpression()), !dbg !18640
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18641, metadata !DIExpression()), !dbg !18642
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18643, metadata !DIExpression()), !dbg !18644
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18645, metadata !DIExpression()), !dbg !18646
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18647, !tbaa !2442
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18648, !tbaa !2442
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18649, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18650, !tbaa !2579
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !18651
  ret i8* %call, !dbg !18652
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18653 !ctir !1505 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18654, metadata !DIExpression()), !dbg !18655
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18656, metadata !DIExpression()), !dbg !18657
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18658, metadata !DIExpression()), !dbg !18659
  %0 = load i32, i32* %n.addr, align 4, !dbg !18660, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18661, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18662, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !18663
  ret i8* %call, !dbg !18664
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #0 !dbg !18665 !ctir !1507 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18666, metadata !DIExpression()), !dbg !18667
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18668, metadata !DIExpression()), !dbg !18669
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18670, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18671, !tbaa !2579
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !18672
  ret i8* %call, !dbg !18673
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #0 !dbg !18674 !ctir !1509 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18675, metadata !DIExpression()), !dbg !18676
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18677, metadata !DIExpression()), !dbg !18678
  %0 = load i32, i32* %n.addr, align 4, !dbg !18679, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18680, !tbaa !2442
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !18681
  ret i8* %call, !dbg !18682
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #0 !dbg !18683 !ctir !579 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18684, metadata !DIExpression()), !dbg !18685
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18686, !tbaa !2442
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !18687
  ret i8* %call, !dbg !18688
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #0 !dbg !18689 !ctir !1955 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18691, metadata !DIExpression()), !dbg !18692
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18693, metadata !DIExpression()), !dbg !18694
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18695, !tbaa !2442
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18696, !tbaa !2442
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !18697
  ret i1 %call, !dbg !18698
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #0 !dbg !18699 !ctir !1957 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !146
  %dest_basename = alloca i8*, align 8, !ctir !146
  %source_baselen = alloca i64, align 8, !ctir !149
  %dest_baselen = alloca i64, align 8, !ctir !149
  %identical_basenames = alloca i8, align 1, !ctir !141
  %compare_dirs = alloca i8, align 1, !ctir !141
  %same = alloca i8, align 1, !ctir !141
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !18700
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !18700
  %source_dirname = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %dest_dirname = alloca i8*, align 8, !ctir !143
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !18721, metadata !DIExpression()), !dbg !18722
  store i8* %source, i8** %source.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18723, metadata !DIExpression()), !dbg !18724
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !18725, metadata !DIExpression()), !dbg !18726
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18727, metadata !DIExpression()), !dbg !18728
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !18729, metadata !DIExpression()), !dbg !18730
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18731, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !18732
  store i8* %call, i8** %source_basename, align 8, !dbg !18730, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !18733, metadata !DIExpression()), !dbg !18734
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18735, !tbaa !2442
  %call1 = call i8* @last_component(i8* %1) #16, !dbg !18736
  store i8* %call1, i8** %dest_basename, align 8, !dbg !18734, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !18737, metadata !DIExpression()), !dbg !18738
  %2 = load i8*, i8** %source_basename, align 8, !dbg !18739, !tbaa !2442
  %call2 = call i64 @base_len(i8* %2) #16, !dbg !18740
  store i64 %call2, i64* %source_baselen, align 8, !dbg !18738, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !18741, metadata !DIExpression()), !dbg !18742
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !18743, !tbaa !2442
  %call3 = call i64 @base_len(i8* %3) #16, !dbg !18744
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !18742, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !18745, metadata !DIExpression()), !dbg !18746
  %4 = load i64, i64* %source_baselen, align 8, !dbg !18747, !tbaa !2579
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !18748, !tbaa !2579
  %cmp = icmp eq i64 %4, %5, !dbg !18749
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18750

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !18751, !tbaa !2442
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !18752, !tbaa !2442
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !18753, !tbaa !2579
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #16, !dbg !18754
  %cmp5 = icmp eq i32 %call4, 0, !dbg !18755
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !18756
  %frombool = zext i1 %9 to i8, !dbg !18746
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !18746, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !18757, metadata !DIExpression()), !dbg !18758
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !18759, !tbaa !2461
  %tobool = trunc i8 %10 to i1, !dbg !18759
  %frombool6 = zext i1 %tobool to i8, !dbg !18758
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !18758, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %same, metadata !18760, metadata !DIExpression()), !dbg !18761
  store i8 0, i8* %same, align 1, !dbg !18761, !tbaa !2461
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !18762, !tbaa !2461
  %tobool7 = trunc i8 %11 to i1, !dbg !18762
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !18764

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !18765, metadata !DIExpression()), !dbg !18767
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !18768, metadata !DIExpression()), !dbg !18769
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !18770, metadata !DIExpression()), !dbg !18771
  %12 = load i8*, i8** %source.addr, align 8, !dbg !18772, !tbaa !2442
  %call8 = call i8* @dir_name(i8* %12), !dbg !18773
  store i8* %call8, i8** %source_dirname, align 8, !dbg !18771, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18774, metadata !DIExpression()), !dbg !18775
  store i32 256, i32* %flags, align 4, !dbg !18775, !tbaa !2436
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !18776, !tbaa !2436
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !18778, !tbaa !2442
  %15 = load i32, i32* %flags, align 4, !dbg !18779, !tbaa !2436
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #13, !dbg !18780
  %cmp10 = icmp ne i32 %call9, 0, !dbg !18781
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !18782

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #17, !dbg !18783
  %16 = load i32, i32* %call12, align 4, !dbg !18783, !tbaa !2436, !ctir !27
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !18785, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.420, i64 0, i64 0), i8* %17), !dbg !18786
  br label %if.end, !dbg !18787

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !18788, !tbaa !2442
  call void @free(i8* %18) #13, !dbg !18789
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !18790, metadata !DIExpression()), !dbg !18791
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !18792, !tbaa !2442
  %call13 = call i8* @dir_name(i8* %19), !dbg !18793
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !18791, !tbaa !2442
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !18794, !tbaa !2436
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !18796, !tbaa !2442
  %22 = load i32, i32* %flags, align 4, !dbg !18797, !tbaa !2436
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #13, !dbg !18798
  %cmp15 = icmp ne i32 %call14, 0, !dbg !18799
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !18800

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #17, !dbg !18801
  %23 = load i32, i32* %call17, align 4, !dbg !18801, !tbaa !2436, !ctir !27
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !18803, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.420, i64 0, i64 0), i8* %24), !dbg !18804
  br label %if.end18, !dbg !18805

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !18806, !ctir !18700
  %25 = load i64, i64* %st_ino, align 8, !dbg !18806, !tbaa !4827, !ctir !197
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !18806, !ctir !18700
  %26 = load i64, i64* %st_ino19, align 8, !dbg !18806, !tbaa !4827, !ctir !197
  %cmp20 = icmp eq i64 %25, %26, !dbg !18806
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !18806

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !18806, !ctir !18700
  %27 = load i64, i64* %st_dev, align 8, !dbg !18806, !tbaa !4825, !ctir !195
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !18806, !ctir !18700
  %28 = load i64, i64* %st_dev22, align 8, !dbg !18806, !tbaa !4825, !ctir !195
  %cmp23 = icmp eq i64 %27, %28, !dbg !18806
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !18807
  %frombool25 = zext i1 %29 to i8, !dbg !18808
  store i8 %frombool25, i8* %same, align 1, !dbg !18808, !tbaa !2461
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !18809, !tbaa !2442
  call void @free(i8* %30) #13, !dbg !18810
  br label %if.end26, !dbg !18811

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !18812, !tbaa !2461
  %tobool27 = trunc i8 %31 to i1, !dbg !18812
  ret i1 %tobool27, !dbg !18813
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #0 !dbg !18814 !ctir !1962 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  %call = call i32* @__errno_location() #17, !dbg !18817
  store i32 95, i32* %call, align 4, !dbg !18818, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #0 !dbg !18820 !ctir !1967 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18821, metadata !DIExpression()), !dbg !18822
  ret void, !dbg !18823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #0 !dbg !18824 !ctir !1962 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  %call = call i32* @__errno_location() #17, !dbg !18827
  store i32 95, i32* %call, align 4, !dbg !18828, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #0 !dbg !18830 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18831, metadata !DIExpression()), !dbg !18832
  %call = call i32* @__errno_location() #17, !dbg !18833
  store i32 95, i32* %call, align 4, !dbg !18834, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18835
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #0 !dbg !18836 !ctir !1971 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18837, metadata !DIExpression()), !dbg !18838
  store i32 %m, i32* %m.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !18839, metadata !DIExpression()), !dbg !18840
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18841, metadata !DIExpression()), !dbg !18842
  %call = call i32* @__errno_location() #17, !dbg !18843
  store i32 95, i32* %call, align 4, !dbg !18844, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18845
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #0 !dbg !18846 !ctir !1973 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18847, metadata !DIExpression()), !dbg !18848
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18849, metadata !DIExpression()), !dbg !18850
  %call = call i32* @__errno_location() #17, !dbg !18851
  store i32 95, i32* %call, align 4, !dbg !18852, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18853
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #0 !dbg !18854 !ctir !1973 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18855, metadata !DIExpression()), !dbg !18856
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18857, metadata !DIExpression()), !dbg !18858
  %call = call i32* @__errno_location() #17, !dbg !18859
  store i32 95, i32* %call, align 4, !dbg !18860, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18861
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #0 !dbg !18862 !ctir !1975 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18863, metadata !DIExpression()), !dbg !18864
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18865, metadata !DIExpression()), !dbg !18866
  %call = call i32* @__errno_location() #17, !dbg !18867
  store i32 95, i32* %call, align 4, !dbg !18868, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #0 !dbg !18870 !ctir !1977 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18871, metadata !DIExpression()), !dbg !18872
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18873, metadata !DIExpression()), !dbg !18874
  %call = call i32* @__errno_location() #17, !dbg !18875
  store i32 95, i32* %call, align 4, !dbg !18876, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18877
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #0 !dbg !18878 !ctir !1977 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18879, metadata !DIExpression()), !dbg !18880
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18881, metadata !DIExpression()), !dbg !18882
  %call = call i32* @__errno_location() #17, !dbg !18883
  store i32 95, i32* %call, align 4, !dbg !18884, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18885
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #0 !dbg !18886 !ctir !1979 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18887, metadata !DIExpression()), !dbg !18888
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18889, metadata !DIExpression()), !dbg !18890
  %call = call i32* @__errno_location() #17, !dbg !18891
  store i32 95, i32* %call, align 4, !dbg !18892, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18893
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #0 !dbg !18894 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18895, metadata !DIExpression()), !dbg !18896
  %call = call i32* @__errno_location() #17, !dbg !18897
  store i32 95, i32* %call, align 4, !dbg !18898, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #0 !dbg !18900 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18901, metadata !DIExpression()), !dbg !18902
  %call = call i32* @__errno_location() #17, !dbg !18903
  store i32 95, i32* %call, align 4, !dbg !18904, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18905
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #0 !dbg !18906 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18907, metadata !DIExpression()), !dbg !18908
  %call = call i32* @__errno_location() #17, !dbg !18909
  store i32 95, i32* %call, align 4, !dbg !18910, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #0 !dbg !18912 !ctir !1981 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !18913, metadata !DIExpression()), !dbg !18914
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !18915, metadata !DIExpression()), !dbg !18916
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !18917, metadata !DIExpression()), !dbg !18918
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !18919, metadata !DIExpression()), !dbg !18920
  %call = call i32* @__errno_location() #17, !dbg !18921
  store i32 95, i32* %call, align 4, !dbg !18922, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18923
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #0 !dbg !18924 !ctir !1984 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18925, metadata !DIExpression()), !dbg !18926
  %call = call i32* @__errno_location() #17, !dbg !18927
  store i32 95, i32* %call, align 4, !dbg !18928, !tbaa !2436, !ctir !27
  ret i16 0, !dbg !18929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #0 !dbg !18930 !ctir !731 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !18931, metadata !DIExpression()), !dbg !18932
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !18933, metadata !DIExpression()), !dbg !18934
  %call = call i32* @__errno_location() #17, !dbg !18935
  store i32 95, i32* %call, align 4, !dbg !18936, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18937
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !18938 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18940, metadata !DIExpression()), !dbg !18941
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18942, !tbaa !2442
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18942, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_atim, i32 0, i32 1, !dbg !18943, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18943, !tbaa !18944, !ctir !219
  ret i64 %1, !dbg !18945
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !18946 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18947, metadata !DIExpression()), !dbg !18948
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18949, !tbaa !2442
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18949, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_ctim, i32 0, i32 1, !dbg !18950, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18950, !tbaa !18951, !ctir !219
  ret i64 %1, !dbg !18952
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !18953 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18954, metadata !DIExpression()), !dbg !18955
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18956, !tbaa !2442
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18956, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_mtim, i32 0, i32 1, !dbg !18957, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18957, !tbaa !18958, !ctir !219
  ret i64 %1, !dbg !18959
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !18960 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18961, metadata !DIExpression()), !dbg !18962
  ret i64 0, !dbg !18963
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !18964 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18965, metadata !DIExpression()), !dbg !18966
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18967, !tbaa !2442
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18967, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18967
  %2 = bitcast %struct.dev_ino* %st_atim to i8*, !dbg !18967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18967, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18968
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18968
  ret { i64, i64 } %4, !dbg !18968
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !18969 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18970, metadata !DIExpression()), !dbg !18971
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18972, !tbaa !2442
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18972, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18972
  %2 = bitcast %struct.dev_ino* %st_ctim to i8*, !dbg !18972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18972, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18973
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18973
  ret { i64, i64 } %4, !dbg !18973
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !18974 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18975, metadata !DIExpression()), !dbg !18976
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18977, !tbaa !2442
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18977, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18977
  %2 = bitcast %struct.dev_ino* %st_mtim to i8*, !dbg !18977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18977, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18978
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18978
  ret { i64, i64 } %4, !dbg !18978
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !18979 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18980, metadata !DIExpression()), !dbg !18981
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18982, metadata !DIExpression()), !dbg !18983
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18984, !ctir !2007
  store i64 -1, i64* %tv_sec, align 8, !dbg !18985, !tbaa !2465, !ctir !164
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18986, !ctir !2007
  store i64 -1, i64* %tv_nsec, align 8, !dbg !18987, !tbaa !2469, !ctir !219
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18988
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !18988
  ret { i64, i64 } %1, !dbg !18988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #0 !dbg !18989 !ctir !2016 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !18990, metadata !DIExpression()), !dbg !18991
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18992, metadata !DIExpression()), !dbg !18993
  %0 = load i32, i32* %result.addr, align 4, !dbg !18994, !tbaa !2436
  ret i32 %0, !dbg !18995
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #0 !dbg !18996 !ctir !2022 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %s.addr = alloca i64, align 8
  %ns.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18998, metadata !DIExpression()), !dbg !18999
  store i64 %ns, i64* %ns.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !19000, metadata !DIExpression()), !dbg !19001
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !19002, metadata !DIExpression()), !dbg !19003
  %0 = load i64, i64* %s.addr, align 8, !dbg !19004, !tbaa !2579
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !19005, !ctir !2024
  store i64 %0, i64* %tv_sec, align 8, !dbg !19006, !tbaa !2465, !ctir !164
  %1 = load i64, i64* %ns.addr, align 8, !dbg !19007, !tbaa !2579
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !19008, !ctir !2024
  store i64 %1, i64* %tv_nsec, align 8, !dbg !19009, !tbaa !2469, !ctir !219
  %2 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !19010
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !19010
  ret { i64, i64 } %3, !dbg !19010
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !19011 !ctir !2028 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.dev_ino, align 8
  %b = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.dev_ino* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !19012, metadata !DIExpression()), !dbg !19013
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %b, metadata !19014, metadata !DIExpression()), !dbg !19015
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !19016, !ctir !2024
  %6 = load i64, i64* %tv_sec, align 8, !dbg !19016, !tbaa !2465, !ctir !164
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !19018, !ctir !2024
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !19018, !tbaa !2465, !ctir !164
  %cmp = icmp slt i64 %6, %7, !dbg !19019
  br i1 %cmp, label %if.then, label %if.end, !dbg !19020

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !19021
  br label %return, !dbg !19021

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !19022, !ctir !2024
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !19022, !tbaa !2465, !ctir !164
  %tv_sec3 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !19024, !ctir !2024
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !19024, !tbaa !2465, !ctir !164
  %cmp4 = icmp sgt i64 %8, %9, !dbg !19025
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !19026

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !19027
  br label %return, !dbg !19027

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !19028, !ctir !2024
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !19028, !tbaa !2469, !ctir !219
  %cmp7 = icmp sle i64 -1, %10, !dbg !19028
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !19028

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !19028, !ctir !2024
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !19028, !tbaa !2469, !ctir !219
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !19028
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !19028

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !19028

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !19028

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !19028

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !19029, !ctir !2024
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !19029, !tbaa !2469, !ctir !219
  %cmp11 = icmp sle i64 -1, %12, !dbg !19029
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !19029

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !19029, !ctir !2024
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !19029, !tbaa !2469, !ctir !219
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !19029
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !19029

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !19029

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !19029

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !19029

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !19030, !ctir !2024
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !19030, !tbaa !2469, !ctir !219
  %tv_nsec20 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !19031, !ctir !2024
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !19031, !tbaa !2469, !ctir !219
  %sub = sub nsw i64 %14, %15, !dbg !19032
  %conv = trunc i64 %sub to i32, !dbg !19033
  store i32 %conv, i32* %retval, align 4, !dbg !19034
  br label %return, !dbg !19034

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !19035
  ret i32 %16, !dbg !19035
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !19036 !ctir !2030 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !19037, metadata !DIExpression()), !dbg !19038
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !19039, !ctir !2024
  %3 = load i64, i64* %tv_sec, align 8, !dbg !19039, !tbaa !2465, !ctir !164
  %cmp = icmp slt i64 %3, 0, !dbg !19040
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19041

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !19041

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !19042, !ctir !2024
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !19042, !tbaa !2465, !ctir !164
  %tobool = icmp ne i64 %4, 0, !dbg !19043
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !19044

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !19045, !ctir !2024
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !19045, !tbaa !2469, !ctir !219
  %tobool2 = icmp ne i64 %5, 0, !dbg !19044
  br label %lor.end, !dbg !19044

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !19044
  br label %cond.end, !dbg !19041

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !19041
  ret i32 %cond, !dbg !19046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #0 !dbg !19047 !ctir !2032 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !19048, metadata !DIExpression()), !dbg !19049
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !19050, !ctir !2024
  %3 = load i64, i64* %tv_sec, align 8, !dbg !19050, !tbaa !2465, !ctir !164
  %conv = sitofp i64 %3 to double, !dbg !19051
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !19052, !ctir !2024
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !19052, !tbaa !2469, !ctir !219
  %conv1 = sitofp i64 %4 to double, !dbg !19053
  %div = fdiv double %conv1, 1.000000e+09, !dbg !19054
  %add = fadd double %conv, %div, !dbg !19055
  ret double %add, !dbg !19056
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #0 !dbg !19057 !ctir !2038 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19059, metadata !DIExpression()), !dbg !19060
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19063, metadata !DIExpression()), !dbg !19064
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19065, metadata !DIExpression()), !dbg !19066
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !19067, metadata !DIExpression()), !dbg !19068
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !19069, metadata !DIExpression()), !dbg !19070
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !19071, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !19071
  br i1 %tobool, label %if.then, label %if.else, !dbg !19073

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19074, !tbaa !2442
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !19075, !tbaa !2442
  %3 = load i8*, i8** %package.addr, align 8, !dbg !19076, !tbaa !2442
  %4 = load i8*, i8** %version.addr, align 8, !dbg !19077, !tbaa !2442
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.435, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !19078
  br label %if.end, !dbg !19078

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19079, !tbaa !2442
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19080, !tbaa !2442
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19081, !tbaa !2442
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.436, i64 0, i64 0), i8* %6, i8* %7), !dbg !19082
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19083, !tbaa !2442
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.437, i64 0, i64 0)) #13, !dbg !19084
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !19085
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19086, !tbaa !2442
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.438, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !19086
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19087, !tbaa !2442
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.439, i64 0, i64 0)) #13, !dbg !19088
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.440, i64 0, i64 0)), !dbg !19089
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19090, !tbaa !2442
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.438, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !19090
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !19091, !tbaa !2579
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !19092

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !19093

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19095, !tbaa !2442
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.441, i64 0, i64 0)) #13, !dbg !19096
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !19097, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !19097, !ctir !567
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !19097, !tbaa !2442
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !19098
  br label %sw.epilog, !dbg !19099

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19100, !tbaa !2442
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.442, i64 0, i64 0)) #13, !dbg !19101
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !19102, !tbaa !2442
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !19102, !ctir !567
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !19102, !tbaa !2442
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !19103, !tbaa !2442
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !19103, !ctir !567
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !19103, !tbaa !2442
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !19104
  br label %sw.epilog, !dbg !19105

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19106, !tbaa !2442
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.443, i64 0, i64 0)) #13, !dbg !19107
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !19108, !tbaa !2442
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !19108, !ctir !567
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !19108, !tbaa !2442
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !19109, !tbaa !2442
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !19109, !ctir !567
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !19109, !tbaa !2442
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !19110, !tbaa !2442
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !19110, !ctir !567
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !19110, !tbaa !2442
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !19111
  br label %sw.epilog, !dbg !19112

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19113, !tbaa !2442
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.444, i64 0, i64 0)) #13, !dbg !19114
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !19115, !tbaa !2442
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !19115, !ctir !567
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !19115, !tbaa !2442
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !19116, !tbaa !2442
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !19116, !ctir !567
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !19116, !tbaa !2442
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !19117, !tbaa !2442
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !19117, !ctir !567
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !19117, !tbaa !2442
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !19118, !tbaa !2442
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !19118, !ctir !567
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !19118, !tbaa !2442
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !19119
  br label %sw.epilog, !dbg !19120

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19121, !tbaa !2442
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.445, i64 0, i64 0)) #13, !dbg !19122
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !19123, !tbaa !2442
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !19123, !ctir !567
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !19123, !tbaa !2442
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !19124, !tbaa !2442
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !19124, !ctir !567
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !19124, !tbaa !2442
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !19125, !tbaa !2442
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !19125, !ctir !567
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !19125, !tbaa !2442
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !19126, !tbaa !2442
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !19126, !ctir !567
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !19126, !tbaa !2442
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !19127, !tbaa !2442
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !19127, !ctir !567
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !19127, !tbaa !2442
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !19128
  br label %sw.epilog, !dbg !19129

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19130, !tbaa !2442
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.446, i64 0, i64 0)) #13, !dbg !19131
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !19132, !tbaa !2442
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !19132, !ctir !567
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !19132, !tbaa !2442
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !19133, !tbaa !2442
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !19133, !ctir !567
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !19133, !tbaa !2442
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !19134, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !19134, !ctir !567
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !19134, !tbaa !2442
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !19135, !tbaa !2442
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !19135, !ctir !567
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !19135, !tbaa !2442
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !19136, !tbaa !2442
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !19136, !ctir !567
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !19136, !tbaa !2442
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !19137, !tbaa !2442
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !19137, !ctir !567
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !19137, !tbaa !2442
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !19138
  br label %sw.epilog, !dbg !19139

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19140, !tbaa !2442
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.447, i64 0, i64 0)) #13, !dbg !19141
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !19142, !tbaa !2442
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !19142, !ctir !567
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !19142, !tbaa !2442
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !19143, !tbaa !2442
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !19143, !ctir !567
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !19143, !tbaa !2442
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !19144, !tbaa !2442
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !19144, !ctir !567
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !19144, !tbaa !2442
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !19145, !tbaa !2442
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !19145, !ctir !567
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !19145, !tbaa !2442
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !19146, !tbaa !2442
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !19146, !ctir !567
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !19146, !tbaa !2442
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !19147, !tbaa !2442
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !19147, !ctir !567
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !19147, !tbaa !2442
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !19148, !tbaa !2442
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !19148, !ctir !567
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !19148, !tbaa !2442
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !19149
  br label %sw.epilog, !dbg !19150

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19151, !tbaa !2442
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.448, i64 0, i64 0)) #13, !dbg !19152
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !19153, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !19153, !ctir !567
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !19153, !tbaa !2442
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !19154, !tbaa !2442
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !19154, !ctir !567
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !19154, !tbaa !2442
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !19155, !tbaa !2442
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !19155, !ctir !567
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !19155, !tbaa !2442
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !19156, !tbaa !2442
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !19156, !ctir !567
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !19156, !tbaa !2442
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !19157, !tbaa !2442
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !19157, !ctir !567
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !19157, !tbaa !2442
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !19158, !tbaa !2442
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !19158, !ctir !567
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !19158, !tbaa !2442
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !19159, !tbaa !2442
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !19159, !ctir !567
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !19159, !tbaa !2442
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !19160, !tbaa !2442
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !19160, !ctir !567
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !19160, !tbaa !2442
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !19161
  br label %sw.epilog, !dbg !19162

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19163, !tbaa !2442
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.449, i64 0, i64 0)) #13, !dbg !19164
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !19165, !tbaa !2442
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !19165, !ctir !567
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !19165, !tbaa !2442
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !19166, !tbaa !2442
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !19166, !ctir !567
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !19166, !tbaa !2442
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !19167, !tbaa !2442
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !19167, !ctir !567
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !19167, !tbaa !2442
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !19168, !tbaa !2442
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !19168, !ctir !567
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !19168, !tbaa !2442
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !19169, !tbaa !2442
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !19169, !ctir !567
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !19169, !tbaa !2442
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !19170, !tbaa !2442
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !19170, !ctir !567
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !19170, !tbaa !2442
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !19171, !tbaa !2442
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !19171, !ctir !567
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !19171, !tbaa !2442
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !19172, !tbaa !2442
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !19172, !ctir !567
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !19172, !tbaa !2442
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !19173, !tbaa !2442
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !19173, !ctir !567
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !19173, !tbaa !2442
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !19174
  br label %sw.epilog, !dbg !19175

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19176, !tbaa !2442
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.450, i64 0, i64 0)) #13, !dbg !19177
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !19178, !tbaa !2442
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !19178, !ctir !567
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !19178, !tbaa !2442
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !19179, !tbaa !2442
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !19179, !ctir !567
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !19179, !tbaa !2442
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !19180, !tbaa !2442
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !19180, !ctir !567
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !19180, !tbaa !2442
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !19181, !tbaa !2442
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !19181, !ctir !567
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !19181, !tbaa !2442
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !19182, !tbaa !2442
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !19182, !ctir !567
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !19182, !tbaa !2442
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !19183, !tbaa !2442
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !19183, !ctir !567
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !19183, !tbaa !2442
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !19184, !tbaa !2442
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !19184, !ctir !567
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !19184, !tbaa !2442
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !19185, !tbaa !2442
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !19185, !ctir !567
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !19185, !tbaa !2442
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !19186, !tbaa !2442
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !19186, !ctir !567
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !19186, !tbaa !2442
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !19187
  br label %sw.epilog, !dbg !19188

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !19189
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #0 !dbg !19190 !ctir !2075 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19191, metadata !DIExpression()), !dbg !19192
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19193, metadata !DIExpression()), !dbg !19194
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19195, metadata !DIExpression()), !dbg !19196
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19197, metadata !DIExpression()), !dbg !19198
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !19199, metadata !DIExpression()), !dbg !19200
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19201, metadata !DIExpression()), !dbg !19202
  store i64 0, i64* %n_authors, align 8, !dbg !19203, !tbaa !2579
  br label %for.cond, !dbg !19205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !19206, !tbaa !2442
  %1 = load i64, i64* %n_authors, align 8, !dbg !19208, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19206, !ctir !567
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19206, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !19209
  br i1 %tobool, label %for.body, label %for.end, !dbg !19209

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !19209

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !19210, !tbaa !2579
  %inc = add i64 %3, 1, !dbg !19210
  store i64 %inc, i64* %n_authors, align 8, !dbg !19210, !tbaa !2579
  br label %for.cond, !dbg !19211, !llvm.loop !19212

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19214, !tbaa !2442
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !19215, !tbaa !2442
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19216, !tbaa !2442
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19217, !tbaa !2442
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !19218, !tbaa !2442
  %9 = load i64, i64* %n_authors, align 8, !dbg !19219, !tbaa !2579
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !19220
  ret void, !dbg !19221
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 !dbg !19222 !ctir !2077 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  %authtab = alloca [10 x i8*], align 16, !ctir !2086
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19223, metadata !DIExpression()), !dbg !19224
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19225, metadata !DIExpression()), !dbg !19226
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19227, metadata !DIExpression()), !dbg !19228
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19229, metadata !DIExpression()), !dbg !19230
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !19231, metadata !DIExpression()), !dbg !19232
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19233, metadata !DIExpression()), !dbg !19234
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !19235, metadata !DIExpression()), !dbg !19236
  store i64 0, i64* %n_authors, align 8, !dbg !19237, !tbaa !2579
  br label %for.cond, !dbg !19239

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !19240, !tbaa !2579
  %cmp = icmp ult i64 %0, 10, !dbg !19242
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19243

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !19244, !tbaa !2442
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !19244
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !19244
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19244
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19244

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !19244
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !19244
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19244
  %4 = bitcast i8* %3 to i8**, !dbg !19244
  %5 = add i32 %gp_offset, 8, !dbg !19244
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !19244
  br label %vaarg.end, !dbg !19244

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !19244
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19244
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !19244
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19244
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19244
  br label %vaarg.end, !dbg !19244

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !19244
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !19244
  %8 = load i64, i64* %n_authors, align 8, !dbg !19245, !tbaa !2579
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !19246, !ctir !2086
  store i8* %7, i8** %arrayidx, align 8, !dbg !19247, !tbaa !2442
  %cmp1 = icmp ne i8* %7, null, !dbg !19248
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !19249
  br i1 %9, label %for.body, label %for.end, !dbg !19250

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !19250

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !19251, !tbaa !2579
  %inc = add i64 %10, 1, !dbg !19251
  store i64 %inc, i64* %n_authors, align 8, !dbg !19251, !tbaa !2579
  br label %for.cond, !dbg !19252, !llvm.loop !19253

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19255, !tbaa !2442
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !19256, !tbaa !2442
  %13 = load i8*, i8** %package.addr, align 8, !dbg !19257, !tbaa !2442
  %14 = load i8*, i8** %version.addr, align 8, !dbg !19258, !tbaa !2442
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !19259
  %15 = load i64, i64* %n_authors, align 8, !dbg !19260, !tbaa !2579
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !19261
  ret void, !dbg !19262
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 !dbg !19263 !ctir !2087 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2089
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19266, metadata !DIExpression()), !dbg !19267
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19268, metadata !DIExpression()), !dbg !19269
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19270, metadata !DIExpression()), !dbg !19271
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19272, metadata !DIExpression()), !dbg !19273
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !19274, metadata !DIExpression()), !dbg !19275
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19276
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19276
  call void @llvm.va_start(i8* %arraydecay1), !dbg !19276
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19277, !tbaa !2442
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !19278, !tbaa !2442
  %2 = load i8*, i8** %package.addr, align 8, !dbg !19279, !tbaa !2442
  %3 = load i8*, i8** %version.addr, align 8, !dbg !19280, !tbaa !2442
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19281
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !19282
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19283
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19283
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19283
  ret void, !dbg !19284
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #0 !dbg !19285 !ctir !341 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !19286, !tbaa !2442
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.438, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !19286
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.453, i64 0, i64 0)) #13, !dbg !19287
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.454, i64 0, i64 0)), !dbg !19288
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.455, i64 0, i64 0)) #13, !dbg !19289
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.456, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.457, i64 0, i64 0)), !dbg !19290
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.458, i64 0, i64 0)) #13, !dbg !19291
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.459, i64 0, i64 0)), !dbg !19292
  ret void, !dbg !19293
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #0 !dbg !19294 !ctir !2098 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19296, metadata !DIExpression()), !dbg !19297
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19298, metadata !DIExpression()), !dbg !19299
  %0 = load i64, i64* %s.addr, align 8, !dbg !19300, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19300
  %1 = load i64, i64* %n.addr, align 8, !dbg !19300, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19300
  br i1 %cmp, label %if.then, label %if.end, !dbg !19302

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19303
  unreachable, !dbg !19303

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19304, !tbaa !2579
  %3 = load i64, i64* %s.addr, align 8, !dbg !19305, !tbaa !2579
  %mul = mul i64 %2, %3, !dbg !19306
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !19307
  ret i8* %call, !dbg !19308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #0 !dbg !19309 !ctir !376 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19311, metadata !DIExpression()), !dbg !19312
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19313, metadata !DIExpression()), !dbg !19314
  %0 = load i64, i64* %n.addr, align 8, !dbg !19315, !tbaa !2579
  %call = call noalias i8* @malloc(i64 %0) #13, !dbg !19316
  store i8* %call, i8** %p, align 8, !dbg !19314, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !19317, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !19317
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19319

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19320, !tbaa !2579
  %cmp = icmp ne i64 %2, 0, !dbg !19321
  br i1 %cmp, label %if.then, label %if.end, !dbg !19322

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19323
  unreachable, !dbg !19323

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !19324, !tbaa !2442
  ret i8* %3, !dbg !19325
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 !dbg !19326 !ctir !2100 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19327, metadata !DIExpression()), !dbg !19328
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19329, metadata !DIExpression()), !dbg !19330
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19331, metadata !DIExpression()), !dbg !19332
  %0 = load i64, i64* %s.addr, align 8, !dbg !19333, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19333
  %1 = load i64, i64* %n.addr, align 8, !dbg !19333, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19333
  br i1 %cmp, label %if.then, label %if.end, !dbg !19335

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19336
  unreachable, !dbg !19336

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19337, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !19338, !tbaa !2579
  %4 = load i64, i64* %s.addr, align 8, !dbg !19339, !tbaa !2579
  %mul = mul i64 %3, %4, !dbg !19340
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !19341
  ret i8* %call, !dbg !19342
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #0 !dbg !19343 !ctir !380 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19344, metadata !DIExpression()), !dbg !19345
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19346, metadata !DIExpression()), !dbg !19347
  %0 = load i64, i64* %n.addr, align 8, !dbg !19348, !tbaa !2579
  %tobool = icmp ne i64 %0, 0, !dbg !19348
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19350

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19351, !tbaa !2442
  %tobool1 = icmp ne i8* %1, null, !dbg !19351
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19352

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19353, !tbaa !2442
  call void @free(i8* %2) #13, !dbg !19355
  store i8* null, i8** %retval, align 8, !dbg !19356
  br label %return, !dbg !19356

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !19357, !tbaa !2442
  %4 = load i64, i64* %n.addr, align 8, !dbg !19358, !tbaa !2579
  %call = call i8* @realloc(i8* %3, i64 %4) #13, !dbg !19359
  store i8* %call, i8** %p.addr, align 8, !dbg !19360, !tbaa !2442
  %5 = load i8*, i8** %p.addr, align 8, !dbg !19361, !tbaa !2442
  %tobool2 = icmp ne i8* %5, null, !dbg !19361
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !19363

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19364, !tbaa !2579
  %tobool4 = icmp ne i64 %6, 0, !dbg !19364
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19365

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #14, !dbg !19366
  unreachable, !dbg !19366

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !19367, !tbaa !2442
  store i8* %7, i8** %retval, align 8, !dbg !19368
  br label %return, !dbg !19368

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !19369
  ret i8* %8, !dbg !19369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 !dbg !19370 !ctir !2102 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19371, metadata !DIExpression()), !dbg !19372
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19373, metadata !DIExpression()), !dbg !19374
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19375, metadata !DIExpression()), !dbg !19376
  call void @llvm.dbg.declare(metadata i64* %n, metadata !19377, metadata !DIExpression()), !dbg !19378
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !19379, !tbaa !2442
  %1 = load i64, i64* %0, align 8, !dbg !19380, !tbaa !2579, !ctir !149
  store i64 %1, i64* %n, align 8, !dbg !19378, !tbaa !2579
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19381, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !19381
  br i1 %tobool, label %if.else, label %if.then, !dbg !19383

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !19384, !tbaa !2579
  %tobool1 = icmp ne i64 %3, 0, !dbg !19384
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19387

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !19388, !tbaa !2579
  %div = udiv i64 128, %4, !dbg !19390
  store i64 %div, i64* %n, align 8, !dbg !19391, !tbaa !2579
  %5 = load i64, i64* %n, align 8, !dbg !19392, !tbaa !2579
  %tobool3 = icmp ne i64 %5, 0, !dbg !19393
  %lnot = xor i1 %tobool3, true, !dbg !19393
  %lnot.ext = zext i1 %lnot to i32, !dbg !19393
  %conv = sext i32 %lnot.ext to i64, !dbg !19393
  %6 = load i64, i64* %n, align 8, !dbg !19394, !tbaa !2579
  %add = add i64 %6, %conv, !dbg !19394
  store i64 %add, i64* %n, align 8, !dbg !19394, !tbaa !2579
  br label %if.end, !dbg !19395

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !19396, !tbaa !2579
  %div4 = udiv i64 9223372036854775807, %7, !dbg !19396
  %8 = load i64, i64* %n, align 8, !dbg !19396, !tbaa !2579
  %cmp = icmp ult i64 %div4, %8, !dbg !19396
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !19398

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !19399
  unreachable, !dbg !19399

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !19400

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !19401, !tbaa !2579
  %div8 = udiv i64 6148914691236517204, %9, !dbg !19404
  %10 = load i64, i64* %n, align 8, !dbg !19405, !tbaa !2579
  %cmp9 = icmp ule i64 %div8, %10, !dbg !19406
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !19407

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #14, !dbg !19408
  unreachable, !dbg !19408

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !19409, !tbaa !2579
  %div13 = udiv i64 %11, 2, !dbg !19410
  %add14 = add i64 %div13, 1, !dbg !19411
  %12 = load i64, i64* %n, align 8, !dbg !19412, !tbaa !2579
  %add15 = add i64 %12, %add14, !dbg !19412
  store i64 %add15, i64* %n, align 8, !dbg !19412, !tbaa !2579
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !19413, !tbaa !2579
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !19414, !tbaa !2442
  store i64 %13, i64* %14, align 8, !dbg !19415, !tbaa !2579, !ctir !149
  %15 = load i8*, i8** %p.addr, align 8, !dbg !19416, !tbaa !2442
  %16 = load i64, i64* %n, align 8, !dbg !19417, !tbaa !2579
  %17 = load i64, i64* %s.addr, align 8, !dbg !19418, !tbaa !2579
  %mul = mul i64 %16, %17, !dbg !19419
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !19420
  ret i8* %call, !dbg !19421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #0 !dbg !19422 !ctir !2104 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19423, metadata !DIExpression()), !dbg !19424
  %0 = load i64, i64* %n.addr, align 8, !dbg !19425, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19425
  ret i8* %call, !dbg !19426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #0 !dbg !19427 !ctir !2106 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19428, metadata !DIExpression()), !dbg !19429
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19430, metadata !DIExpression()), !dbg !19431
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19432, !tbaa !2442
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !19433, !tbaa !2442
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !19434
  ret i8* %call, !dbg !19435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #0 !dbg !19436 !ctir !376 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19437, metadata !DIExpression()), !dbg !19438
  %0 = load i64, i64* %s.addr, align 8, !dbg !19439, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19440
  %1 = load i64, i64* %s.addr, align 8, !dbg !19441, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !19442
  ret i8* %call, !dbg !19443
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #0 !dbg !19444 !ctir !2098 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19445, metadata !DIExpression()), !dbg !19446
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19447, metadata !DIExpression()), !dbg !19448
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19449, metadata !DIExpression()), !dbg !19450
  %0 = load i64, i64* %s.addr, align 8, !dbg !19451, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19451
  %1 = load i64, i64* %n.addr, align 8, !dbg !19451, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19451
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19453

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19454, !tbaa !2579
  %3 = load i64, i64* %s.addr, align 8, !dbg !19455, !tbaa !2579
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #13, !dbg !19456
  store i8* %call, i8** %p, align 8, !dbg !19457, !tbaa !2442
  %tobool = icmp ne i8* %call, null, !dbg !19457
  br i1 %tobool, label %if.end, label %if.then, !dbg !19458

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #14, !dbg !19459
  unreachable, !dbg !19459

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !19460, !tbaa !2442
  ret i8* %4, !dbg !19461
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #0 !dbg !19462 !ctir !2108 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19463, metadata !DIExpression()), !dbg !19464
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19465, metadata !DIExpression()), !dbg !19466
  %0 = load i64, i64* %s.addr, align 8, !dbg !19467, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19468
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19469, !tbaa !2442
  %2 = load i64, i64* %s.addr, align 8, !dbg !19470, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !19471
  ret i8* %call, !dbg !19472
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #0 !dbg !19473 !ctir !572 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !19474, metadata !DIExpression()), !dbg !19475
  %0 = load i8*, i8** %string.addr, align 8, !dbg !19476, !tbaa !2442
  %1 = load i8*, i8** %string.addr, align 8, !dbg !19477, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !19478
  %add = add i64 %call, 1, !dbg !19479
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !19480
  ret i8* %call1, !dbg !19481
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #10 !dbg !19482 !ctir !341 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !19484, !tbaa !2436
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.478, i64 0, i64 0)) #13, !dbg !19485
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.479, i64 0, i64 0), i8* %call), !dbg !19486
  call void @abort() #15, !dbg !19487
  unreachable, !dbg !19487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xnumtoumax(i8* %n_str, i32 %base, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19488 !ctir !2116 {
entry:
  %n_str.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  %s_err = alloca i32, align 4, !ctir !1322
  %tnum = alloca i64, align 8, !ctir !168
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19490, metadata !DIExpression()), !dbg !19491
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19492, metadata !DIExpression()), !dbg !19493
  store i64 %min, i64* %min.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19494, metadata !DIExpression()), !dbg !19495
  store i64 %max, i64* %max.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19496, metadata !DIExpression()), !dbg !19497
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19498, metadata !DIExpression()), !dbg !19499
  store i8* %err, i8** %err.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19500, metadata !DIExpression()), !dbg !19501
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19502, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.declare(metadata i32* %s_err, metadata !19504, metadata !DIExpression()), !dbg !19505
  call void @llvm.dbg.declare(metadata i64* %tnum, metadata !19506, metadata !DIExpression()), !dbg !19507
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19508, !tbaa !2442
  %1 = load i32, i32* %base.addr, align 4, !dbg !19509, !tbaa !2436
  %2 = load i8*, i8** %suffixes.addr, align 8, !dbg !19510, !tbaa !2442
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 %1, i64* %tnum, i8* %2), !dbg !19511
  store i32 %call, i32* %s_err, align 4, !dbg !19512, !tbaa !2497
  %3 = load i32, i32* %s_err, align 4, !dbg !19513, !tbaa !2497
  %cmp = icmp eq i32 %3, 0, !dbg !19515
  br i1 %cmp, label %if.then, label %if.else9, !dbg !19516

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %tnum, align 8, !dbg !19517, !tbaa !2579
  %5 = load i64, i64* %min.addr, align 8, !dbg !19520, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !19521
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !19522

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i64, i64* %max.addr, align 8, !dbg !19523, !tbaa !2579
  %7 = load i64, i64* %tnum, align 8, !dbg !19524, !tbaa !2579
  %cmp2 = icmp ult i64 %6, %7, !dbg !19525
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !19526

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %s_err, align 4, !dbg !19527, !tbaa !2497
  %8 = load i64, i64* %tnum, align 8, !dbg !19529, !tbaa !2579
  %cmp4 = icmp ugt i64 %8, 1073741823, !dbg !19531
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !19532

if.then5:                                         ; preds = %if.then3
  %call6 = call i32* @__errno_location() #17, !dbg !19533
  store i32 75, i32* %call6, align 4, !dbg !19534, !tbaa !2436, !ctir !27
  br label %if.end, !dbg !19533

if.else:                                          ; preds = %if.then3
  %call7 = call i32* @__errno_location() #17, !dbg !19535
  store i32 34, i32* %call7, align 4, !dbg !19536, !tbaa !2436, !ctir !27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end8, !dbg !19537

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  br label %if.end19, !dbg !19538

if.else9:                                         ; preds = %entry
  %9 = load i32, i32* %s_err, align 4, !dbg !19539, !tbaa !2497
  %cmp10 = icmp eq i32 %9, 1, !dbg !19541
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !19542

if.then11:                                        ; preds = %if.else9
  %call12 = call i32* @__errno_location() #17, !dbg !19543
  store i32 75, i32* %call12, align 4, !dbg !19544, !tbaa !2436, !ctir !27
  br label %if.end18, !dbg !19543

if.else13:                                        ; preds = %if.else9
  %10 = load i32, i32* %s_err, align 4, !dbg !19545, !tbaa !2497
  %cmp14 = icmp eq i32 %10, 3, !dbg !19547
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !19548

if.then15:                                        ; preds = %if.else13
  %call16 = call i32* @__errno_location() #17, !dbg !19549
  store i32 0, i32* %call16, align 4, !dbg !19550, !tbaa !2436, !ctir !27
  br label %if.end17, !dbg !19549

if.end17:                                         ; preds = %if.then15, %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then11
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end8
  %11 = load i32, i32* %s_err, align 4, !dbg !19551, !tbaa !2497
  %cmp20 = icmp ne i32 %11, 0, !dbg !19553
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !19554

if.then21:                                        ; preds = %if.end19
  %12 = load i32, i32* %err_exit.addr, align 4, !dbg !19555, !tbaa !2436
  %tobool = icmp ne i32 %12, 0, !dbg !19555
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19555

cond.true:                                        ; preds = %if.then21
  %13 = load i32, i32* %err_exit.addr, align 4, !dbg !19557, !tbaa !2436
  br label %cond.end, !dbg !19555

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !19555

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 1, %cond.false ], !dbg !19555
  %call22 = call i32* @__errno_location() #17, !dbg !19558
  %14 = load i32, i32* %call22, align 4, !dbg !19558, !tbaa !2436, !ctir !27
  %cmp23 = icmp eq i32 %14, 22, !dbg !19559
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !19558

cond.true24:                                      ; preds = %cond.end
  br label %cond.end27, !dbg !19558

cond.false25:                                     ; preds = %cond.end
  %call26 = call i32* @__errno_location() #17, !dbg !19560
  %15 = load i32, i32* %call26, align 4, !dbg !19560, !tbaa !2436, !ctir !27
  br label %cond.end27, !dbg !19558

cond.end27:                                       ; preds = %cond.false25, %cond.true24
  %cond28 = phi i32 [ 0, %cond.true24 ], [ %15, %cond.false25 ], !dbg !19558
  %16 = load i8*, i8** %err.addr, align 8, !dbg !19561, !tbaa !2442
  %17 = load i8*, i8** %n_str.addr, align 8, !dbg !19562, !tbaa !2442
  %call29 = call i8* @quote(i8* %17), !dbg !19563
  call void (i32, i32, i8*, ...) @error(i32 %cond, i32 %cond28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.482, i64 0, i64 0), i8* %16, i8* %call29), !dbg !19564
  br label %if.end30, !dbg !19565

if.end30:                                         ; preds = %cond.end27, %if.end19
  %18 = load i64, i64* %tnum, align 8, !dbg !19566, !tbaa !2579
  ret i64 %18, !dbg !19567
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xdectoumax(i8* %n_str, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19568 !ctir !2118 {
entry:
  %n_str.addr = alloca i8*, align 8
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19569, metadata !DIExpression()), !dbg !19570
  store i64 %min, i64* %min.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19571, metadata !DIExpression()), !dbg !19572
  store i64 %max, i64* %max.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19573, metadata !DIExpression()), !dbg !19574
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19575, metadata !DIExpression()), !dbg !19576
  store i8* %err, i8** %err.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19577, metadata !DIExpression()), !dbg !19578
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19579, metadata !DIExpression()), !dbg !19580
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19581, !tbaa !2442
  %1 = load i64, i64* %min.addr, align 8, !dbg !19582, !tbaa !2579
  %2 = load i64, i64* %max.addr, align 8, !dbg !19583, !tbaa !2579
  %3 = load i8*, i8** %suffixes.addr, align 8, !dbg !19584, !tbaa !2442
  %4 = load i8*, i8** %err.addr, align 8, !dbg !19585, !tbaa !2442
  %5 = load i32, i32* %err_exit.addr, align 4, !dbg !19586, !tbaa !2436
  %call = call i64 @xnumtoumax(i8* %0, i32 10, i64 %1, i64 %2, i8* %3, i8* %4, i32 %5), !dbg !19587
  ret i64 %call, !dbg !19588
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgetcwd() #0 !dbg !19589 !ctir !2123 {
entry:
  %cwd = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %cwd, metadata !19591, metadata !DIExpression()), !dbg !19592
  %call = call i8* @getcwd(i8* null, i64 0) #13, !dbg !19593
  store i8* %call, i8** %cwd, align 8, !dbg !19592, !tbaa !2442
  %0 = load i8*, i8** %cwd, align 8, !dbg !19594, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !19594
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19596

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !19597
  %1 = load i32, i32* %call1, align 4, !dbg !19597, !tbaa !2436, !ctir !27
  %cmp = icmp eq i32 %1, 12, !dbg !19598
  br i1 %cmp, label %if.then, label %if.end, !dbg !19599

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19600
  unreachable, !dbg !19600

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %cwd, align 8, !dbg !19601, !tbaa !2442
  ret i8* %2, !dbg !19602
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgethostname() #0 !dbg !19603 !ctir !2123 {
entry:
  %retval = alloca i8*, align 8
  %hostname = alloca i8*, align 8, !ctir !143
  %size = alloca i64, align 8, !ctir !149
  %size_1 = alloca i64, align 8, !ctir !149
  %saved_errno = alloca i32, align 4, !ctir !27
  %actual_size = alloca i64, align 8, !ctir !149
  %shrinked_hostname = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !19605, metadata !DIExpression()), !dbg !19606
  store i8* null, i8** %hostname, align 8, !dbg !19606, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %size, metadata !19607, metadata !DIExpression()), !dbg !19608
  store i64 34, i64* %size, align 8, !dbg !19608, !tbaa !2579
  br label %while.body, !dbg !19609

while.body:                                       ; preds = %entry, %if.end21
  call void @llvm.dbg.declare(metadata i64* %size_1, metadata !19610, metadata !DIExpression()), !dbg !19612
  %0 = load i8*, i8** %hostname, align 8, !dbg !19613, !tbaa !2442
  %call = call i8* @x2realloc(i8* %0, i64* %size), !dbg !19614
  store i8* %call, i8** %hostname, align 8, !dbg !19615, !tbaa !2442
  %1 = load i64, i64* %size, align 8, !dbg !19616, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !19617
  store i64 %sub, i64* %size_1, align 8, !dbg !19618, !tbaa !2579
  %2 = load i8*, i8** %hostname, align 8, !dbg !19619, !tbaa !2442
  %3 = load i64, i64* %size_1, align 8, !dbg !19620, !tbaa !2579
  %sub1 = sub i64 %3, 1, !dbg !19621
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub1, !dbg !19619, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !19622, !tbaa !2497
  %call2 = call i32* @__errno_location() #17, !dbg !19623
  store i32 0, i32* %call2, align 4, !dbg !19624, !tbaa !2436, !ctir !27
  %4 = load i8*, i8** %hostname, align 8, !dbg !19625, !tbaa !2442
  %5 = load i64, i64* %size_1, align 8, !dbg !19627, !tbaa !2579
  %call3 = call i32 @gethostname(i8* %4, i64 %5) #13, !dbg !19628
  %cmp = icmp eq i32 %call3, 0, !dbg !19629
  br i1 %cmp, label %if.then, label %if.else, !dbg !19630

if.then:                                          ; preds = %while.body
  %6 = load i8*, i8** %hostname, align 8, !dbg !19631, !tbaa !2442
  %7 = load i64, i64* %size_1, align 8, !dbg !19634, !tbaa !2579
  %sub4 = sub i64 %7, 1, !dbg !19635
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %sub4, !dbg !19631, !ctir !143
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !19631, !tbaa !2497
  %tobool = icmp ne i8 %8, 0, !dbg !19631
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19636

if.then6:                                         ; preds = %if.then
  br label %while.end, !dbg !19637

if.end:                                           ; preds = %if.then
  br label %if.end21, !dbg !19638

if.else:                                          ; preds = %while.body
  %call7 = call i32* @__errno_location() #17, !dbg !19639
  %9 = load i32, i32* %call7, align 4, !dbg !19639, !tbaa !2436, !ctir !27
  %cmp8 = icmp ne i32 %9, 0, !dbg !19641
  br i1 %cmp8, label %land.lhs.true, label %if.end20, !dbg !19642

land.lhs.true:                                    ; preds = %if.else
  %call9 = call i32* @__errno_location() #17, !dbg !19643
  %10 = load i32, i32* %call9, align 4, !dbg !19643, !tbaa !2436, !ctir !27
  %cmp10 = icmp ne i32 %10, 36, !dbg !19644
  br i1 %cmp10, label %land.lhs.true11, label %if.end20, !dbg !19645

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call i32* @__errno_location() #17, !dbg !19646
  %11 = load i32, i32* %call12, align 4, !dbg !19646, !tbaa !2436, !ctir !27
  %cmp13 = icmp ne i32 %11, 22, !dbg !19647
  br i1 %cmp13, label %land.lhs.true14, label %if.end20, !dbg !19648

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %call15 = call i32* @__errno_location() #17, !dbg !19649
  %12 = load i32, i32* %call15, align 4, !dbg !19649, !tbaa !2436, !ctir !27
  %cmp16 = icmp ne i32 %12, 12, !dbg !19650
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !19651

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19652, metadata !DIExpression()), !dbg !19654
  %call18 = call i32* @__errno_location() #17, !dbg !19655
  %13 = load i32, i32* %call18, align 4, !dbg !19655, !tbaa !2436, !ctir !27
  store i32 %13, i32* %saved_errno, align 4, !dbg !19654, !tbaa !2436
  %14 = load i8*, i8** %hostname, align 8, !dbg !19656, !tbaa !2442
  call void @free(i8* %14) #13, !dbg !19657
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19658, !tbaa !2436
  %call19 = call i32* @__errno_location() #17, !dbg !19659
  store i32 %15, i32* %call19, align 4, !dbg !19660, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !19661
  br label %return, !dbg !19661

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %while.body, !dbg !19609, !llvm.loop !19662

while.end:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i64* %actual_size, metadata !19664, metadata !DIExpression()), !dbg !19666
  %16 = load i8*, i8** %hostname, align 8, !dbg !19667, !tbaa !2442
  %call22 = call i64 @strlen(i8* %16) #16, !dbg !19668
  %add = add i64 %call22, 1, !dbg !19669
  store i64 %add, i64* %actual_size, align 8, !dbg !19666, !tbaa !2579
  %17 = load i64, i64* %actual_size, align 8, !dbg !19670, !tbaa !2579
  %18 = load i64, i64* %size, align 8, !dbg !19672, !tbaa !2579
  %cmp23 = icmp ult i64 %17, %18, !dbg !19673
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !19674

if.then24:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %shrinked_hostname, metadata !19675, metadata !DIExpression()), !dbg !19677
  %19 = load i8*, i8** %hostname, align 8, !dbg !19678, !tbaa !2442
  %20 = load i64, i64* %actual_size, align 8, !dbg !19679, !tbaa !2579
  %call25 = call i8* @realloc(i8* %19, i64 %20) #13, !dbg !19680
  store i8* %call25, i8** %shrinked_hostname, align 8, !dbg !19677, !tbaa !2442
  %21 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19681, !tbaa !2442
  %cmp26 = icmp ne i8* %21, null, !dbg !19683
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !19684

if.then27:                                        ; preds = %if.then24
  %22 = load i8*, i8** %shrinked_hostname, align 8, !dbg !19685, !tbaa !2442
  store i8* %22, i8** %hostname, align 8, !dbg !19686, !tbaa !2442
  br label %if.end28, !dbg !19687

if.end28:                                         ; preds = %if.then27, %if.then24
  br label %if.end29, !dbg !19688

if.end29:                                         ; preds = %if.end28, %while.end
  %23 = load i8*, i8** %hostname, align 8, !dbg !19689, !tbaa !2442
  store i8* %23, i8** %retval, align 8, !dbg !19690
  br label %return, !dbg !19690

return:                                           ; preds = %if.end29, %if.then17
  %24 = load i8*, i8** %retval, align 8, !dbg !19691
  ret i8* %24, !dbg !19691
}

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19692 !ctir !2131 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !151
  %err = alloca i32, align 4, !ctir !1322
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !591
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1322
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19694, metadata !DIExpression()), !dbg !19695
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19696, metadata !DIExpression()), !dbg !19697
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19698, metadata !DIExpression()), !dbg !19699
  store i64* %val, i64** %val.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19700, metadata !DIExpression()), !dbg !19701
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19702, metadata !DIExpression()), !dbg !19703
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19704, metadata !DIExpression()), !dbg !19705
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19706, metadata !DIExpression()), !dbg !19707
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19708, metadata !DIExpression()), !dbg !19709
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19710, metadata !DIExpression()), !dbg !19711
  store i32 0, i32* %err, align 4, !dbg !19711, !tbaa !2497
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19712, !tbaa !2436
  %cmp = icmp sle i32 0, %0, !dbg !19712
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19712

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19712, !tbaa !2436
  %cmp1 = icmp sle i32 %1, 36, !dbg !19712
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19715

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !19715

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.489, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.490, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #15, !dbg !19712
  unreachable, !dbg !19712

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !19716, !tbaa !2442
  %tobool = icmp ne i8** %2, null, !dbg !19716
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19716

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19717, !tbaa !2442
  br label %cond.end, !dbg !19716

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19716

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !19716
  store i8** %cond, i8*** %p, align 8, !dbg !19718, !tbaa !2442
  %call = call i32* @__errno_location() #17, !dbg !19719
  store i32 0, i32* %call, align 4, !dbg !19720, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19721, metadata !DIExpression()), !dbg !19724
  %4 = load i8*, i8** %s.addr, align 8, !dbg !19725, !tbaa !2442
  store i8* %4, i8** %q, align 8, !dbg !19724, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19726, metadata !DIExpression()), !dbg !19727
  %5 = load i8*, i8** %q, align 8, !dbg !19728, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !19729, !tbaa !2497, !ctir !147
  store i8 %6, i8* %ch, align 1, !dbg !19727, !tbaa !2497
  br label %while.cond, !dbg !19730

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !19731
  %7 = load i16*, i16** %call2, align 8, !dbg !19731, !tbaa !2442, !ctir !587
  %8 = load i8, i8* %ch, align 1, !dbg !19731, !tbaa !2497
  %conv = zext i8 %8 to i32, !dbg !19731
  %idxprom = sext i32 %conv to i64, !dbg !19731
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !19731, !ctir !587
  %9 = load i16, i16* %arrayidx, align 2, !dbg !19731, !tbaa !5835
  %conv3 = zext i16 %9 to i32, !dbg !19731
  %and = and i32 %conv3, 8192, !dbg !19731
  %tobool4 = icmp ne i32 %and, 0, !dbg !19730
  br i1 %tobool4, label %while.body, label %while.end, !dbg !19730

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !19732, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19732
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19732, !tbaa !2442
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !19733, !tbaa !2497, !ctir !147
  store i8 %11, i8* %ch, align 1, !dbg !19734, !tbaa !2497
  br label %while.cond, !dbg !19730, !llvm.loop !19735

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !19737, !tbaa !2497
  %conv5 = zext i8 %12 to i32, !dbg !19737
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !19739
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19740

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19741
  br label %return, !dbg !19741

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !19742, !tbaa !2442
  %14 = load i8**, i8*** %p, align 8, !dbg !19743, !tbaa !2442
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !19744, !tbaa !2436
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #13, !dbg !19745
  store i64 %call10, i64* %tmp, align 8, !dbg !19746, !tbaa !2579
  %16 = load i8**, i8*** %p, align 8, !dbg !19747, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !19749, !tbaa !2442, !ctir !143
  %18 = load i8*, i8** %s.addr, align 8, !dbg !19750, !tbaa !2442
  %cmp11 = icmp eq i8* %17, %18, !dbg !19751
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !19752

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19753, !tbaa !2442
  %tobool14 = icmp ne i8* %19, null, !dbg !19753
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !19756

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !19757, !tbaa !2442
  %21 = load i8*, i8** %20, align 8, !dbg !19758, !tbaa !2442, !ctir !143
  %22 = load i8, i8* %21, align 1, !dbg !19759, !tbaa !2497, !ctir !144
  %conv16 = sext i8 %22 to i32, !dbg !19759
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !19759
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !19760

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19761, !tbaa !2442
  %24 = load i8**, i8*** %p, align 8, !dbg !19762, !tbaa !2442
  %25 = load i8*, i8** %24, align 8, !dbg !19763, !tbaa !2442, !ctir !143
  %26 = load i8, i8* %25, align 1, !dbg !19764, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %26 to i32, !dbg !19764
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #16, !dbg !19765
  %tobool21 = icmp ne i8* %call20, null, !dbg !19765
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !19766

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !19767, !tbaa !2579
  br label %if.end24, !dbg !19768

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !19769
  br label %return, !dbg !19769

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !19770

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #17, !dbg !19771
  %27 = load i32, i32* %call26, align 4, !dbg !19771, !tbaa !2436, !ctir !27
  %cmp27 = icmp ne i32 %27, 0, !dbg !19773
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19774

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !19775
  %28 = load i32, i32* %call30, align 4, !dbg !19775, !tbaa !2436, !ctir !27
  %cmp31 = icmp ne i32 %28, 34, !dbg !19778
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19779

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19780
  br label %return, !dbg !19780

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19781, !tbaa !2497
  br label %if.end35, !dbg !19782

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19783, !tbaa !2442
  %tobool37 = icmp ne i8* %29, null, !dbg !19783
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19785

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !19786, !tbaa !2579
  %31 = load i64*, i64** %val.addr, align 8, !dbg !19788, !tbaa !2442
  store i64 %30, i64* %31, align 8, !dbg !19789, !tbaa !2579, !ctir !151
  %32 = load i32, i32* %err, align 4, !dbg !19790, !tbaa !2497
  store i32 %32, i32* %retval, align 4, !dbg !19791
  br label %return, !dbg !19791

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !19792, !tbaa !2442
  %34 = load i8*, i8** %33, align 8, !dbg !19794, !tbaa !2442, !ctir !143
  %35 = load i8, i8* %34, align 1, !dbg !19795, !tbaa !2497, !ctir !144
  %conv40 = sext i8 %35 to i32, !dbg !19795
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19796
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19797

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19798, metadata !DIExpression()), !dbg !19800
  store i32 1024, i32* %base, align 4, !dbg !19800, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19801, metadata !DIExpression()), !dbg !19802
  store i32 1, i32* %suffixes, align 4, !dbg !19802, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19803, metadata !DIExpression()), !dbg !19804
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19805, !tbaa !2442
  %37 = load i8**, i8*** %p, align 8, !dbg !19807, !tbaa !2442
  %38 = load i8*, i8** %37, align 8, !dbg !19808, !tbaa !2442, !ctir !143
  %39 = load i8, i8* %38, align 1, !dbg !19809, !tbaa !2497, !ctir !144
  %conv44 = sext i8 %39 to i32, !dbg !19809
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #16, !dbg !19810
  %tobool46 = icmp ne i8* %call45, null, !dbg !19810
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19811

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !19812, !tbaa !2579
  %41 = load i64*, i64** %val.addr, align 8, !dbg !19814, !tbaa !2442
  store i64 %40, i64* %41, align 8, !dbg !19815, !tbaa !2579, !ctir !151
  %42 = load i32, i32* %err, align 4, !dbg !19816, !tbaa !2497
  %or = or i32 %42, 2, !dbg !19817
  store i32 %or, i32* %retval, align 4, !dbg !19818
  br label %return, !dbg !19818

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !19819, !tbaa !2442
  %44 = load i8*, i8** %43, align 8, !dbg !19820, !tbaa !2442, !ctir !143
  %45 = load i8, i8* %44, align 1, !dbg !19821, !tbaa !2497, !ctir !144
  %conv49 = sext i8 %45 to i32, !dbg !19821
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19822

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19823, !tbaa !2442
  %call50 = call i8* @strchr(i8* %46, i32 48) #16, !dbg !19826
  %tobool51 = icmp ne i8* %call50, null, !dbg !19826
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19827

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !19828, !tbaa !2442
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !19828, !ctir !142
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !19828, !tbaa !2442
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !19828, !ctir !143
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !19828, !tbaa !2497
  %conv55 = sext i8 %49 to i32, !dbg !19828
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19829

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !19830, !tbaa !2442
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !19830, !ctir !142
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !19830, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !19830, !ctir !143
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !19830, !tbaa !2497
  %conv59 = sext i8 %52 to i32, !dbg !19830
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19833
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19834

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !19835, !tbaa !2436
  %add = add nsw i32 %53, 2, !dbg !19835
  store i32 %add, i32* %suffixes, align 4, !dbg !19835, !tbaa !2436
  br label %if.end63, !dbg !19836

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19837

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19838, !tbaa !2436
  %54 = load i32, i32* %suffixes, align 4, !dbg !19839, !tbaa !2436
  %inc = add nsw i32 %54, 1, !dbg !19839
  store i32 %inc, i32* %suffixes, align 4, !dbg !19839, !tbaa !2436
  br label %sw.epilog, !dbg !19840

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19841

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19842

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !19843, !tbaa !2442
  %56 = load i8*, i8** %55, align 8, !dbg !19844, !tbaa !2442, !ctir !143
  %57 = load i8, i8* %56, align 1, !dbg !19845, !tbaa !2497, !ctir !144
  %conv67 = sext i8 %57 to i32, !dbg !19845
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19846

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19847
  store i32 %call69, i32* %overflow, align 4, !dbg !19849, !tbaa !2497
  br label %sw.epilog92, !dbg !19850

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19851
  store i32 %call71, i32* %overflow, align 4, !dbg !19852, !tbaa !2497
  br label %sw.epilog92, !dbg !19853

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19854, !tbaa !2497
  br label %sw.epilog92, !dbg !19855

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !19856, !tbaa !2436
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !19857
  store i32 %call74, i32* %overflow, align 4, !dbg !19858, !tbaa !2497
  br label %sw.epilog92, !dbg !19859

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19860, !tbaa !2436
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !19861
  store i32 %call76, i32* %overflow, align 4, !dbg !19862, !tbaa !2497
  br label %sw.epilog92, !dbg !19863

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19864, !tbaa !2436
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !19865
  store i32 %call78, i32* %overflow, align 4, !dbg !19866, !tbaa !2497
  br label %sw.epilog92, !dbg !19867

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19868, !tbaa !2436
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !19869
  store i32 %call80, i32* %overflow, align 4, !dbg !19870, !tbaa !2497
  br label %sw.epilog92, !dbg !19871

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19872, !tbaa !2436
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !19873
  store i32 %call82, i32* %overflow, align 4, !dbg !19874, !tbaa !2497
  br label %sw.epilog92, !dbg !19875

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19876, !tbaa !2436
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !19877
  store i32 %call84, i32* %overflow, align 4, !dbg !19878, !tbaa !2497
  br label %sw.epilog92, !dbg !19879

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19880
  store i32 %call86, i32* %overflow, align 4, !dbg !19881, !tbaa !2497
  br label %sw.epilog92, !dbg !19882

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19883, !tbaa !2436
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !19884
  store i32 %call88, i32* %overflow, align 4, !dbg !19885, !tbaa !2497
  br label %sw.epilog92, !dbg !19886

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19887, !tbaa !2436
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !19888
  store i32 %call90, i32* %overflow, align 4, !dbg !19889, !tbaa !2497
  br label %sw.epilog92, !dbg !19890

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !19891, !tbaa !2579
  %67 = load i64*, i64** %val.addr, align 8, !dbg !19892, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !19893, !tbaa !2579, !ctir !151
  %68 = load i32, i32* %err, align 4, !dbg !19894, !tbaa !2497
  %or91 = or i32 %68, 2, !dbg !19895
  store i32 %or91, i32* %retval, align 4, !dbg !19896
  br label %return, !dbg !19896

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !19897, !tbaa !2497
  %70 = load i32, i32* %err, align 4, !dbg !19898, !tbaa !2497
  %or93 = or i32 %70, %69, !dbg !19898
  store i32 %or93, i32* %err, align 4, !dbg !19898, !tbaa !2497
  %71 = load i32, i32* %suffixes, align 4, !dbg !19899, !tbaa !2436
  %72 = load i8**, i8*** %p, align 8, !dbg !19900, !tbaa !2442
  %73 = load i8*, i8** %72, align 8, !dbg !19901, !tbaa !2442, !ctir !143
  %idx.ext = sext i32 %71 to i64, !dbg !19901
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !19901
  store i8* %add.ptr, i8** %72, align 8, !dbg !19901, !tbaa !2442, !ctir !143
  %74 = load i8**, i8*** %p, align 8, !dbg !19902, !tbaa !2442
  %75 = load i8*, i8** %74, align 8, !dbg !19904, !tbaa !2442, !ctir !143
  %76 = load i8, i8* %75, align 1, !dbg !19905, !tbaa !2497, !ctir !144
  %tobool94 = icmp ne i8 %76, 0, !dbg !19905
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19906

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !19907, !tbaa !2497
  %or96 = or i32 %77, 2, !dbg !19907
  store i32 %or96, i32* %err, align 4, !dbg !19907, !tbaa !2497
  br label %if.end97, !dbg !19908

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19909

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !19910, !tbaa !2579
  %79 = load i64*, i64** %val.addr, align 8, !dbg !19911, !tbaa !2442
  store i64 %78, i64* %79, align 8, !dbg !19912, !tbaa !2579, !ctir !151
  %80 = load i32, i32* %err, align 4, !dbg !19913, !tbaa !2497
  store i32 %80, i32* %retval, align 4, !dbg !19914
  br label %return, !dbg !19914

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !19915
  ret i32 %81, !dbg !19915
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #0 !dbg !19916 !ctir !2134 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19917, metadata !DIExpression()), !dbg !19918
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19919, metadata !DIExpression()), !dbg !19920
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19921, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !19921
  %div = udiv i64 -1, %conv, !dbg !19923
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19924, !tbaa !2442
  %2 = load i64, i64* %1, align 8, !dbg !19925, !tbaa !2579, !ctir !151
  %cmp = icmp ult i64 %div, %2, !dbg !19926
  br i1 %cmp, label %if.then, label %if.end, !dbg !19927

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19928, !tbaa !2442
  store i64 -1, i64* %3, align 8, !dbg !19930, !tbaa !2579, !ctir !151
  store i32 1, i32* %retval, align 4, !dbg !19931
  br label %return, !dbg !19931

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19932, !tbaa !2436
  %conv2 = sext i32 %4 to i64, !dbg !19932
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19933, !tbaa !2442
  %6 = load i64, i64* %5, align 8, !dbg !19934, !tbaa !2579, !ctir !151
  %mul = mul i64 %6, %conv2, !dbg !19934
  store i64 %mul, i64* %5, align 8, !dbg !19934, !tbaa !2579, !ctir !151
  store i32 0, i32* %retval, align 4, !dbg !19935
  br label %return, !dbg !19935

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19936
  ret i32 %7, !dbg !19936
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #0 !dbg !19937 !ctir !2136 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1322
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19938, metadata !DIExpression()), !dbg !19939
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19940, metadata !DIExpression()), !dbg !19941
  store i32 %power, i32* %power.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19942, metadata !DIExpression()), !dbg !19943
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19944, metadata !DIExpression()), !dbg !19945
  store i32 0, i32* %err, align 4, !dbg !19945, !tbaa !2497
  br label %while.cond, !dbg !19946

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19947, !tbaa !2436
  %dec = add nsw i32 %0, -1, !dbg !19947
  store i32 %dec, i32* %power.addr, align 4, !dbg !19947, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !19946
  br i1 %tobool, label %while.body, label %while.end, !dbg !19946

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19948, !tbaa !2442
  %2 = load i32, i32* %base.addr, align 4, !dbg !19949, !tbaa !2436
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19950
  %3 = load i32, i32* %err, align 4, !dbg !19951, !tbaa !2497
  %or = or i32 %3, %call, !dbg !19951
  store i32 %or, i32* %err, align 4, !dbg !19951, !tbaa !2497
  br label %while.cond, !dbg !19946, !llvm.loop !19952

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19954, !tbaa !2497
  ret i32 %4, !dbg !19955
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #10 !dbg !19956 !ctir !2141 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %err, i32* %err.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19958, metadata !DIExpression()), !dbg !19959
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19960, metadata !DIExpression()), !dbg !19961
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19962, metadata !DIExpression()), !dbg !19963
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19964, metadata !DIExpression()), !dbg !19965
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19966, metadata !DIExpression()), !dbg !19967
  %0 = load i32, i32* %err.addr, align 4, !dbg !19968, !tbaa !2497
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19969, !tbaa !2436
  %2 = load i8, i8* %c.addr, align 1, !dbg !19970, !tbaa !2497
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19971, !tbaa !2442
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19972, !tbaa !2442
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !19973, !tbaa !2436
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !19974
  call void @abort() #15, !dbg !19975
  unreachable, !dbg !19975
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #0 !dbg !19976 !ctir !2151 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  %exit_status.addr = alloca i32, align 4
  %hyphens = alloca i8*, align 8, !ctir !146
  %msgid = alloca i8*, align 8, !ctir !146
  %option = alloca i8*, align 8, !ctir !146
  %option_buffer = alloca [2 x i8], align 1, !ctir !666
  store i32 %err, i32* %err.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19977, metadata !DIExpression()), !dbg !19978
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19979, metadata !DIExpression()), !dbg !19980
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19981, metadata !DIExpression()), !dbg !19982
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19983, metadata !DIExpression()), !dbg !19984
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19985, metadata !DIExpression()), !dbg !19986
  store i32 %exit_status, i32* %exit_status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !19987, metadata !DIExpression()), !dbg !19988
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !19989, metadata !DIExpression()), !dbg !19990
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.493, i64 0, i64 0), i8** %hyphens, align 8, !dbg !19990, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !19991, metadata !DIExpression()), !dbg !19992
  call void @llvm.dbg.declare(metadata i8** %option, metadata !19993, metadata !DIExpression()), !dbg !19994
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !19995, metadata !DIExpression()), !dbg !19996
  %0 = load i32, i32* %err.addr, align 4, !dbg !19997, !tbaa !2497
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !19998

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !19999
  unreachable, !dbg !19999

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.494, i64 0, i64 0), i8** %msgid, align 8, !dbg !20001, !tbaa !2442
  br label %sw.epilog, !dbg !20002

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.495, i64 0, i64 0), i8** %msgid, align 8, !dbg !20003, !tbaa !2442
  br label %sw.epilog, !dbg !20004

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.496, i64 0, i64 0), i8** %msgid, align 8, !dbg !20005, !tbaa !2442
  br label %sw.epilog, !dbg !20006

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !20007, !tbaa !2436
  %cmp = icmp slt i32 %1, 0, !dbg !20009
  br i1 %cmp, label %if.then, label %if.else, !dbg !20010

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !20011, !tbaa !2436
  %3 = load i8*, i8** %hyphens, align 8, !dbg !20013, !tbaa !2442
  %idx.ext = sext i32 %2 to i64, !dbg !20013
  %idx.neg = sub i64 0, %idx.ext, !dbg !20013
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !20013
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !20013, !tbaa !2442
  %4 = load i8, i8* %c.addr, align 1, !dbg !20014, !tbaa !2497
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !20015, !ctir !666
  store i8 %4, i8* %arrayidx, align 1, !dbg !20016, !tbaa !2497
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !20017, !ctir !666
  store i8 0, i8* %arrayidx3, align 1, !dbg !20018, !tbaa !2497
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !20019
  store i8* %arraydecay, i8** %option, align 8, !dbg !20020, !tbaa !2442
  br label %if.end, !dbg !20021

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !20022, !tbaa !2442
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !20023, !tbaa !2436
  %idxprom = sext i32 %6 to i64, !dbg !20022
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !20022, !ctir !2143
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !20024, !ctir !2144
  %7 = load i8*, i8** %name, align 8, !dbg !20024, !tbaa !20025, !ctir !146
  store i8* %7, i8** %option, align 8, !dbg !20027, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !20028, !tbaa !2436
  %9 = load i8*, i8** %msgid, align 8, !dbg !20029, !tbaa !2442
  %call = call i8* @gettext(i8* %9) #13, !dbg !20030
  %10 = load i8*, i8** %hyphens, align 8, !dbg !20031, !tbaa !2442
  %11 = load i8*, i8** %option, align 8, !dbg !20032, !tbaa !2442
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !20033, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !20034
  ret void, !dbg !20035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !20036 !ctir !2156 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !168
  %err = alloca i32, align 4, !ctir !1322
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !591
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1322
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20037, metadata !DIExpression()), !dbg !20038
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !20039, metadata !DIExpression()), !dbg !20040
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !20041, metadata !DIExpression()), !dbg !20042
  store i64* %val, i64** %val.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !20043, metadata !DIExpression()), !dbg !20044
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !20045, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !20047, metadata !DIExpression()), !dbg !20048
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !20049, metadata !DIExpression()), !dbg !20050
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !20051, metadata !DIExpression()), !dbg !20052
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20053, metadata !DIExpression()), !dbg !20054
  store i32 0, i32* %err, align 4, !dbg !20054, !tbaa !2497
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !20055, !tbaa !2436
  %cmp = icmp sle i32 0, %0, !dbg !20055
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !20055

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !20055, !tbaa !2436
  %cmp1 = icmp sle i32 %1, 36, !dbg !20055
  br i1 %cmp1, label %if.then, label %if.else, !dbg !20058

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !20058

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.499, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.500, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #15, !dbg !20055
  unreachable, !dbg !20055

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !20059, !tbaa !2442
  %tobool = icmp ne i8** %2, null, !dbg !20059
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20059

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !20060, !tbaa !2442
  br label %cond.end, !dbg !20059

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !20059

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !20059
  store i8** %cond, i8*** %p, align 8, !dbg !20061, !tbaa !2442
  %call = call i32* @__errno_location() #17, !dbg !20062
  store i32 0, i32* %call, align 4, !dbg !20063, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !20064, metadata !DIExpression()), !dbg !20067
  %4 = load i8*, i8** %s.addr, align 8, !dbg !20068, !tbaa !2442
  store i8* %4, i8** %q, align 8, !dbg !20067, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !20069, metadata !DIExpression()), !dbg !20070
  %5 = load i8*, i8** %q, align 8, !dbg !20071, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !20072, !tbaa !2497, !ctir !147
  store i8 %6, i8* %ch, align 1, !dbg !20070, !tbaa !2497
  br label %while.cond, !dbg !20073

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !20074
  %7 = load i16*, i16** %call2, align 8, !dbg !20074, !tbaa !2442, !ctir !587
  %8 = load i8, i8* %ch, align 1, !dbg !20074, !tbaa !2497
  %conv = zext i8 %8 to i32, !dbg !20074
  %idxprom = sext i32 %conv to i64, !dbg !20074
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !20074, !ctir !587
  %9 = load i16, i16* %arrayidx, align 2, !dbg !20074, !tbaa !5835
  %conv3 = zext i16 %9 to i32, !dbg !20074
  %and = and i32 %conv3, 8192, !dbg !20074
  %tobool4 = icmp ne i32 %and, 0, !dbg !20073
  br i1 %tobool4, label %while.body, label %while.end, !dbg !20073

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !20075, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !20075
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !20075, !tbaa !2442
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !20076, !tbaa !2497, !ctir !147
  store i8 %11, i8* %ch, align 1, !dbg !20077, !tbaa !2497
  br label %while.cond, !dbg !20073, !llvm.loop !20078

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !20080, !tbaa !2497
  %conv5 = zext i8 %12 to i32, !dbg !20080
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !20082
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !20083

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !20084
  br label %return, !dbg !20084

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !20085, !tbaa !2442
  %14 = load i8**, i8*** %p, align 8, !dbg !20086, !tbaa !2442
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !20087, !tbaa !2436
  %call10 = call i64 @strtoumax(i8* %13, i8** %14, i32 %15) #13, !dbg !20088
  store i64 %call10, i64* %tmp, align 8, !dbg !20089, !tbaa !2579
  %16 = load i8**, i8*** %p, align 8, !dbg !20090, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !20092, !tbaa !2442, !ctir !143
  %18 = load i8*, i8** %s.addr, align 8, !dbg !20093, !tbaa !2442
  %cmp11 = icmp eq i8* %17, %18, !dbg !20094
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !20095

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20096, !tbaa !2442
  %tobool14 = icmp ne i8* %19, null, !dbg !20096
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !20099

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !20100, !tbaa !2442
  %21 = load i8*, i8** %20, align 8, !dbg !20101, !tbaa !2442, !ctir !143
  %22 = load i8, i8* %21, align 1, !dbg !20102, !tbaa !2497, !ctir !144
  %conv16 = sext i8 %22 to i32, !dbg !20102
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !20102
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !20103

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20104, !tbaa !2442
  %24 = load i8**, i8*** %p, align 8, !dbg !20105, !tbaa !2442
  %25 = load i8*, i8** %24, align 8, !dbg !20106, !tbaa !2442, !ctir !143
  %26 = load i8, i8* %25, align 1, !dbg !20107, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %26 to i32, !dbg !20107
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #16, !dbg !20108
  %tobool21 = icmp ne i8* %call20, null, !dbg !20108
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !20109

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !20110, !tbaa !2579
  br label %if.end24, !dbg !20111

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !20112
  br label %return, !dbg !20112

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !20113

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #17, !dbg !20114
  %27 = load i32, i32* %call26, align 4, !dbg !20114, !tbaa !2436, !ctir !27
  %cmp27 = icmp ne i32 %27, 0, !dbg !20116
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !20117

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !20118
  %28 = load i32, i32* %call30, align 4, !dbg !20118, !tbaa !2436, !ctir !27
  %cmp31 = icmp ne i32 %28, 34, !dbg !20121
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !20122

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !20123
  br label %return, !dbg !20123

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !20124, !tbaa !2497
  br label %if.end35, !dbg !20125

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20126, !tbaa !2442
  %tobool37 = icmp ne i8* %29, null, !dbg !20126
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !20128

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !20129, !tbaa !2579
  %31 = load i64*, i64** %val.addr, align 8, !dbg !20131, !tbaa !2442
  store i64 %30, i64* %31, align 8, !dbg !20132, !tbaa !2579, !ctir !168
  %32 = load i32, i32* %err, align 4, !dbg !20133, !tbaa !2497
  store i32 %32, i32* %retval, align 4, !dbg !20134
  br label %return, !dbg !20134

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !20135, !tbaa !2442
  %34 = load i8*, i8** %33, align 8, !dbg !20137, !tbaa !2442, !ctir !143
  %35 = load i8, i8* %34, align 1, !dbg !20138, !tbaa !2497, !ctir !144
  %conv40 = sext i8 %35 to i32, !dbg !20138
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !20139
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !20140

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !20141, metadata !DIExpression()), !dbg !20143
  store i32 1024, i32* %base, align 4, !dbg !20143, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !20144, metadata !DIExpression()), !dbg !20145
  store i32 1, i32* %suffixes, align 4, !dbg !20145, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !20146, metadata !DIExpression()), !dbg !20147
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20148, !tbaa !2442
  %37 = load i8**, i8*** %p, align 8, !dbg !20150, !tbaa !2442
  %38 = load i8*, i8** %37, align 8, !dbg !20151, !tbaa !2442, !ctir !143
  %39 = load i8, i8* %38, align 1, !dbg !20152, !tbaa !2497, !ctir !144
  %conv44 = sext i8 %39 to i32, !dbg !20152
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #16, !dbg !20153
  %tobool46 = icmp ne i8* %call45, null, !dbg !20153
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !20154

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !20155, !tbaa !2579
  %41 = load i64*, i64** %val.addr, align 8, !dbg !20157, !tbaa !2442
  store i64 %40, i64* %41, align 8, !dbg !20158, !tbaa !2579, !ctir !168
  %42 = load i32, i32* %err, align 4, !dbg !20159, !tbaa !2497
  %or = or i32 %42, 2, !dbg !20160
  store i32 %or, i32* %retval, align 4, !dbg !20161
  br label %return, !dbg !20161

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !20162, !tbaa !2442
  %44 = load i8*, i8** %43, align 8, !dbg !20163, !tbaa !2442, !ctir !143
  %45 = load i8, i8* %44, align 1, !dbg !20164, !tbaa !2497, !ctir !144
  %conv49 = sext i8 %45 to i32, !dbg !20164
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !20165

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20166, !tbaa !2442
  %call50 = call i8* @strchr(i8* %46, i32 48) #16, !dbg !20169
  %tobool51 = icmp ne i8* %call50, null, !dbg !20169
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !20170

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !20171, !tbaa !2442
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !20171, !ctir !142
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !20171, !tbaa !2442
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !20171, !ctir !143
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !20171, !tbaa !2497
  %conv55 = sext i8 %49 to i32, !dbg !20171
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !20172

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !20173, !tbaa !2442
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !20173, !ctir !142
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !20173, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !20173, !ctir !143
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !20173, !tbaa !2497
  %conv59 = sext i8 %52 to i32, !dbg !20173
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !20176
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !20177

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !20178, !tbaa !2436
  %add = add nsw i32 %53, 2, !dbg !20178
  store i32 %add, i32* %suffixes, align 4, !dbg !20178, !tbaa !2436
  br label %if.end63, !dbg !20179

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !20180

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !20181, !tbaa !2436
  %54 = load i32, i32* %suffixes, align 4, !dbg !20182, !tbaa !2436
  %inc = add nsw i32 %54, 1, !dbg !20182
  store i32 %inc, i32* %suffixes, align 4, !dbg !20182, !tbaa !2436
  br label %sw.epilog, !dbg !20183

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !20184

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !20185

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !20186, !tbaa !2442
  %56 = load i8*, i8** %55, align 8, !dbg !20187, !tbaa !2442, !ctir !143
  %57 = load i8, i8* %56, align 1, !dbg !20188, !tbaa !2497, !ctir !144
  %conv67 = sext i8 %57 to i32, !dbg !20188
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !20189

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.501(i64* %tmp, i32 512), !dbg !20190
  store i32 %call69, i32* %overflow, align 4, !dbg !20192, !tbaa !2497
  br label %sw.epilog92, !dbg !20193

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.501(i64* %tmp, i32 1024), !dbg !20194
  store i32 %call71, i32* %overflow, align 4, !dbg !20195, !tbaa !2497
  br label %sw.epilog92, !dbg !20196

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !20197, !tbaa !2497
  br label %sw.epilog92, !dbg !20198

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !20199, !tbaa !2436
  %call74 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %58, i32 6), !dbg !20200
  store i32 %call74, i32* %overflow, align 4, !dbg !20201, !tbaa !2497
  br label %sw.epilog92, !dbg !20202

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !20203, !tbaa !2436
  %call76 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %59, i32 3), !dbg !20204
  store i32 %call76, i32* %overflow, align 4, !dbg !20205, !tbaa !2497
  br label %sw.epilog92, !dbg !20206

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !20207, !tbaa !2436
  %call78 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %60, i32 1), !dbg !20208
  store i32 %call78, i32* %overflow, align 4, !dbg !20209, !tbaa !2497
  br label %sw.epilog92, !dbg !20210

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !20211, !tbaa !2436
  %call80 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %61, i32 2), !dbg !20212
  store i32 %call80, i32* %overflow, align 4, !dbg !20213, !tbaa !2497
  br label %sw.epilog92, !dbg !20214

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !20215, !tbaa !2436
  %call82 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %62, i32 5), !dbg !20216
  store i32 %call82, i32* %overflow, align 4, !dbg !20217, !tbaa !2497
  br label %sw.epilog92, !dbg !20218

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !20219, !tbaa !2436
  %call84 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %63, i32 4), !dbg !20220
  store i32 %call84, i32* %overflow, align 4, !dbg !20221, !tbaa !2497
  br label %sw.epilog92, !dbg !20222

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.501(i64* %tmp, i32 2), !dbg !20223
  store i32 %call86, i32* %overflow, align 4, !dbg !20224, !tbaa !2497
  br label %sw.epilog92, !dbg !20225

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !20226, !tbaa !2436
  %call88 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %64, i32 8), !dbg !20227
  store i32 %call88, i32* %overflow, align 4, !dbg !20228, !tbaa !2497
  br label %sw.epilog92, !dbg !20229

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !20230, !tbaa !2436
  %call90 = call i32 @bkm_scale_by_power.502(i64* %tmp, i32 %65, i32 7), !dbg !20231
  store i32 %call90, i32* %overflow, align 4, !dbg !20232, !tbaa !2497
  br label %sw.epilog92, !dbg !20233

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !20234, !tbaa !2579
  %67 = load i64*, i64** %val.addr, align 8, !dbg !20235, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !20236, !tbaa !2579, !ctir !168
  %68 = load i32, i32* %err, align 4, !dbg !20237, !tbaa !2497
  %or91 = or i32 %68, 2, !dbg !20238
  store i32 %or91, i32* %retval, align 4, !dbg !20239
  br label %return, !dbg !20239

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !20240, !tbaa !2497
  %70 = load i32, i32* %err, align 4, !dbg !20241, !tbaa !2497
  %or93 = or i32 %70, %69, !dbg !20241
  store i32 %or93, i32* %err, align 4, !dbg !20241, !tbaa !2497
  %71 = load i32, i32* %suffixes, align 4, !dbg !20242, !tbaa !2436
  %72 = load i8**, i8*** %p, align 8, !dbg !20243, !tbaa !2442
  %73 = load i8*, i8** %72, align 8, !dbg !20244, !tbaa !2442, !ctir !143
  %idx.ext = sext i32 %71 to i64, !dbg !20244
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !20244
  store i8* %add.ptr, i8** %72, align 8, !dbg !20244, !tbaa !2442, !ctir !143
  %74 = load i8**, i8*** %p, align 8, !dbg !20245, !tbaa !2442
  %75 = load i8*, i8** %74, align 8, !dbg !20247, !tbaa !2442, !ctir !143
  %76 = load i8, i8* %75, align 1, !dbg !20248, !tbaa !2497, !ctir !144
  %tobool94 = icmp ne i8 %76, 0, !dbg !20248
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !20249

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !20250, !tbaa !2497
  %or96 = or i32 %77, 2, !dbg !20250
  store i32 %or96, i32* %err, align 4, !dbg !20250, !tbaa !2497
  br label %if.end97, !dbg !20251

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !20252

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !20253, !tbaa !2579
  %79 = load i64*, i64** %val.addr, align 8, !dbg !20254, !tbaa !2442
  store i64 %78, i64* %79, align 8, !dbg !20255, !tbaa !2579, !ctir !168
  %80 = load i32, i32* %err, align 4, !dbg !20256, !tbaa !2497
  store i32 %80, i32* %retval, align 4, !dbg !20257
  br label %return, !dbg !20257

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !20258
  ret i32 %81, !dbg !20258
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.501(i64* %x, i32 %scale_factor) #0 !dbg !20259 !ctir !2158 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20260, metadata !DIExpression()), !dbg !20261
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !20262, metadata !DIExpression()), !dbg !20263
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !20264, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !20264
  %div = udiv i64 -1, %conv, !dbg !20266
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20267, !tbaa !2442
  %2 = load i64, i64* %1, align 8, !dbg !20268, !tbaa !2579, !ctir !168
  %cmp = icmp ult i64 %div, %2, !dbg !20269
  br i1 %cmp, label %if.then, label %if.end, !dbg !20270

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !20271, !tbaa !2442
  store i64 -1, i64* %3, align 8, !dbg !20273, !tbaa !2579, !ctir !168
  store i32 1, i32* %retval, align 4, !dbg !20274
  br label %return, !dbg !20274

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !20275, !tbaa !2436
  %conv2 = sext i32 %4 to i64, !dbg !20275
  %5 = load i64*, i64** %x.addr, align 8, !dbg !20276, !tbaa !2442
  %6 = load i64, i64* %5, align 8, !dbg !20277, !tbaa !2579, !ctir !168
  %mul = mul i64 %6, %conv2, !dbg !20277
  store i64 %mul, i64* %5, align 8, !dbg !20277, !tbaa !2579, !ctir !168
  store i32 0, i32* %retval, align 4, !dbg !20278
  br label %return, !dbg !20278

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !20279
  ret i32 %7, !dbg !20279
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.502(i64* %x, i32 %base, i32 %power) #0 !dbg !20280 !ctir !2160 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1322
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20281, metadata !DIExpression()), !dbg !20282
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !20283, metadata !DIExpression()), !dbg !20284
  store i32 %power, i32* %power.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !20285, metadata !DIExpression()), !dbg !20286
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20287, metadata !DIExpression()), !dbg !20288
  store i32 0, i32* %err, align 4, !dbg !20288, !tbaa !2497
  br label %while.cond, !dbg !20289

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !20290, !tbaa !2436
  %dec = add nsw i32 %0, -1, !dbg !20290
  store i32 %dec, i32* %power.addr, align 4, !dbg !20290, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !20289
  br i1 %tobool, label %while.body, label %while.end, !dbg !20289

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20291, !tbaa !2442
  %2 = load i32, i32* %base.addr, align 4, !dbg !20292, !tbaa !2436
  %call = call i32 @bkm_scale.501(i64* %1, i32 %2), !dbg !20293
  %3 = load i32, i32* %err, align 4, !dbg !20294, !tbaa !2497
  %or = or i32 %3, %call, !dbg !20294
  store i32 %or, i32* %err, align 4, !dbg !20294, !tbaa !2497
  br label %while.cond, !dbg !20289, !llvm.loop !20295

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !20297, !tbaa !2497
  ret i32 %4, !dbg !20298
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #0 !dbg !20299 !ctir !2165 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !149
  %wc = alloca i32, align 4, !ctir !654
  %uc = alloca i8, align 1, !ctir !591
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !20301, metadata !DIExpression()), !dbg !20302
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20303, metadata !DIExpression()), !dbg !20304
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20305, metadata !DIExpression()), !dbg !20306
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !20307, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !20309, metadata !DIExpression()), !dbg !20310
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !20311, metadata !DIExpression()), !dbg !20312
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !20313, !tbaa !2442
  %tobool = icmp ne i32* %0, null, !dbg !20313
  br i1 %tobool, label %if.end, label %if.then, !dbg !20315

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !20316, !tbaa !2442
  br label %if.end, !dbg !20317

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !20318, !tbaa !2442
  %2 = load i8*, i8** %s.addr, align 8, !dbg !20319, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !20320, !tbaa !2579
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !20321, !tbaa !2442
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #13, !dbg !20322
  store i64 %call, i64* %ret, align 8, !dbg !20323, !tbaa !2579
  %5 = load i64, i64* %ret, align 8, !dbg !20324, !tbaa !2579
  %cmp = icmp ule i64 -2, %5, !dbg !20326
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !20327

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !20328, !tbaa !2579
  %cmp1 = icmp ne i64 %6, 0, !dbg !20329
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !20330

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !20331
  br i1 %call3, label %if.end5, label %if.then4, !dbg !20332

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !20333, metadata !DIExpression()), !dbg !20335
  %7 = load i8*, i8** %s.addr, align 8, !dbg !20336, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !20337, !tbaa !2497, !ctir !147
  store i8 %8, i8* %uc, align 1, !dbg !20335, !tbaa !2497
  %9 = load i8, i8* %uc, align 1, !dbg !20338, !tbaa !2497
  %conv = zext i8 %9 to i32, !dbg !20338
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !20339, !tbaa !2442
  store i32 %conv, i32* %10, align 4, !dbg !20340, !tbaa !2436, !ctir !654
  store i64 1, i64* %retval, align 8, !dbg !20341
  br label %return, !dbg !20341

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !20342, !tbaa !2579
  store i64 %11, i64* %retval, align 8, !dbg !20343
  br label %return, !dbg !20343

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !20344
  ret i64 %12, !dbg !20344
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #10 !dbg !20345 !ctir !341 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20346, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.505, i64 0, i64 0)) #13, !dbg !20347
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.506, i64 0, i64 0), i8* %call), !dbg !20348
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20349, !tbaa !2436
  call void @exit(i32 %1) #15, !dbg !20350
  unreachable, !dbg !20350
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #0 !dbg !20351 !ctir !1561 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i64)*, align 8
  %freefun.addr = alloca void (i8*)*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20352, metadata !DIExpression()), !dbg !20353
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20354, metadata !DIExpression()), !dbg !20355
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20356, metadata !DIExpression()), !dbg !20357
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !20358, metadata !DIExpression()), !dbg !20359
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !20360, metadata !DIExpression()), !dbg !20361
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !20362, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20363, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20364, !ctir !1564
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20365
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !20366, !tbaa !2497, !ctir !1584
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !20367, !tbaa !2442
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20368, !tbaa !2442
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20369, !ctir !1564
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !20370
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !20371, !tbaa !2497, !ctir !1589
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20372, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !20373, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20374
  %bf.clear = and i8 %bf.load, -2, !dbg !20374
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !20374
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20375, !tbaa !2442
  %6 = load i64, i64* %size.addr, align 8, !dbg !20376, !tbaa !2579
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !20377, !tbaa !2579
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !20378
  ret i32 %call, !dbg !20379
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #0 !dbg !20380 !ctir !1607 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %extra = alloca i32, align 4, !ctir !27
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20381, metadata !DIExpression()), !dbg !20382
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20383, metadata !DIExpression()), !dbg !20384
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20385, metadata !DIExpression()), !dbg !20386
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !20387, metadata !DIExpression()), !dbg !20388
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !20389, !tbaa !2579
  %cmp = icmp eq i64 %0, 0, !dbg !20391
  br i1 %cmp, label %if.then, label %if.end, !dbg !20392

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !20393, !tbaa !2579
  br label %if.end, !dbg !20394

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !20395, !tbaa !2579
  %cmp1 = icmp eq i64 %1, 0, !dbg !20397
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !20398

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !20399, metadata !DIExpression()), !dbg !20401
  store i32 32, i32* %extra, align 4, !dbg !20401, !tbaa !2436
  %2 = load i32, i32* %extra, align 4, !dbg !20402, !tbaa !2436
  %sub = sub nsw i32 4096, %2, !dbg !20403
  %conv = sext i32 %sub to i64, !dbg !20404
  store i64 %conv, i64* %size.addr, align 8, !dbg !20405, !tbaa !2579
  br label %if.end3, !dbg !20406

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !20407, !tbaa !2579
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20408, !tbaa !2442
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !20409, !ctir !1564
  store i64 %3, i64* %chunk_size, align 8, !dbg !20410, !tbaa !20411, !ctir !149
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !20412, !tbaa !2579
  %sub4 = sub i64 %5, 1, !dbg !20413
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20414, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !20415, !ctir !1564
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !20416, !tbaa !5069, !ctir !149
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20417, !tbaa !2442
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20418, !tbaa !2442
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !20419, !ctir !1564
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !20419, !tbaa !20411, !ctir !149
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !20420
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20420
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20421, !tbaa !2442
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !20422, !ctir !1564
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !20423, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !20424, !tbaa !2442
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20425, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !20425
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !20427

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20428, !tbaa !2442
  call void %13() #14, !dbg !20429
  unreachable, !dbg !20429

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20430, !tbaa !2442
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !20430, !ctir !1569
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20430
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !20430
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !20430
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !20430, !tbaa !2579
  %sub9 = sub i64 %15, 1, !dbg !20430
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !20430
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !20430, !tbaa !2579
  %sub10 = sub i64 %16, 1, !dbg !20430
  %neg = xor i64 %sub10, -1, !dbg !20430
  %and = and i64 %add, %neg, !dbg !20430
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20430
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20431, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !20432, !ctir !1564
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !20433, !tbaa !4746, !ctir !143
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20434, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !20435, !ctir !1564
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !20436, !tbaa !4744, !ctir !143
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20437, !tbaa !2442
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !20438
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20439, !tbaa !2442
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !20440, !ctir !1564
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !20440, !tbaa !20411, !ctir !149
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !20441
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20442, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !20443, !ctir !1569
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !20444, !tbaa !2442, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20445, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20446, !ctir !1564
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !20447, !tbaa !5073, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20448, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !20449, !ctir !1569
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !20450, !tbaa !2442, !ctir !1568
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20451, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !20452, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20453
  %bf.clear = and i8 %bf.load, -3, !dbg !20453
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !20453
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20454, !tbaa !2442
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !20455, !ctir !1564
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !20456
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !20456
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !20456
  ret i32 1, !dbg !20457
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #0 !dbg !20458 !ctir !1609 {
entry:
  %retval = alloca i8*, align 8
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20459, metadata !DIExpression()), !dbg !20460
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20461, metadata !DIExpression()), !dbg !20462
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20463, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20465, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20465
  %bf.clear = and i8 %bf.load, 1, !dbg !20465
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20465
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20463
  br i1 %tobool, label %if.then, label %if.else, !dbg !20466

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20467, !tbaa !2442
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20468, !ctir !1564
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !20469
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !20469, !tbaa !2497, !ctir !1584
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20470, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20471, !ctir !1564
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20471, !tbaa !20472, !ctir !167
  %5 = load i64, i64* %size.addr, align 8, !dbg !20473, !tbaa !2579
  %call = call i8* %2(i8* %4, i64 %5), !dbg !20467
  store i8* %call, i8** %retval, align 8, !dbg !20474
  br label %return, !dbg !20474

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20475, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !20476, !ctir !1564
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20477
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !20477, !tbaa !2497, !ctir !1584
  %8 = load i64, i64* %size.addr, align 8, !dbg !20478, !tbaa !2579
  %call2 = call i8* %7(i64 %8), !dbg !20475
  store i8* %call2, i8** %retval, align 8, !dbg !20479
  br label %return, !dbg !20479

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !20480
  ret i8* %9, !dbg !20480
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #0 !dbg !20481 !ctir !1597 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8
  %freefun.addr = alloca void (i8*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20482, metadata !DIExpression()), !dbg !20483
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20484, metadata !DIExpression()), !dbg !20485
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20486, metadata !DIExpression()), !dbg !20487
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !20488, metadata !DIExpression()), !dbg !20489
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !20490, metadata !DIExpression()), !dbg !20491
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20492, metadata !DIExpression()), !dbg !20493
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !20494, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20495, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20496, !ctir !1564
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !20497
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !20498, !tbaa !2497, !ctir !1584
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !20499, !tbaa !2442
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20500, !tbaa !2442
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20501, !ctir !1564
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !20502
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !20503, !tbaa !2497, !ctir !1589
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !20504, !tbaa !2442
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20505, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !20506, !ctir !1564
  store i8* %4, i8** %extra_arg, align 8, !dbg !20507, !tbaa !20472, !ctir !167
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20508, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !20509, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20510
  %bf.clear = and i8 %bf.load, -2, !dbg !20510
  %bf.set = or i8 %bf.clear, 1, !dbg !20510
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !20510
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20511, !tbaa !2442
  %8 = load i64, i64* %size.addr, align 8, !dbg !20512, !tbaa !2579
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !20513, !tbaa !2579
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !20514
  ret i32 %call, !dbg !20515
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #0 !dbg !20516 !ctir !1599 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %length.addr = alloca i64, align 8
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %obj_size = alloca i64, align 8, !ctir !149
  %object_base1 = alloca i8*, align 8, !ctir !143
  %sum1 = alloca i64, align 8, !ctir !149
  %sum2 = alloca i64, align 8, !ctir !149
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20517, metadata !DIExpression()), !dbg !20518
  store i64 %length, i64* %length.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !20519, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !20521, metadata !DIExpression()), !dbg !20522
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20523, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20524, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20524, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20522, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !20525, metadata !DIExpression()), !dbg !20526
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20526, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !20527, metadata !DIExpression()), !dbg !20528
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20529, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !20530, !ctir !1564
  %3 = load i8*, i8** %next_free, align 8, !dbg !20530, !tbaa !4744, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20531, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !20532, !ctir !1564
  %5 = load i8*, i8** %object_base, align 8, !dbg !20532, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !20533
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !20533
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20533
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !20528, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !20534, metadata !DIExpression()), !dbg !20535
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !20536, metadata !DIExpression()), !dbg !20537
  %6 = load i64, i64* %obj_size, align 8, !dbg !20538, !tbaa !2579
  %7 = load i64, i64* %length.addr, align 8, !dbg !20539, !tbaa !2579
  %add = add i64 %6, %7, !dbg !20540
  store i64 %add, i64* %sum1, align 8, !dbg !20537, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !20541, metadata !DIExpression()), !dbg !20542
  %8 = load i64, i64* %sum1, align 8, !dbg !20543, !tbaa !2579
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20544, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !20545, !ctir !1564
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !20545, !tbaa !5069, !ctir !149
  %add2 = add i64 %8, %10, !dbg !20546
  store i64 %add2, i64* %sum2, align 8, !dbg !20542, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !20547, metadata !DIExpression()), !dbg !20548
  %11 = load i64, i64* %sum2, align 8, !dbg !20549, !tbaa !2579
  %12 = load i64, i64* %obj_size, align 8, !dbg !20550, !tbaa !2579
  %shr = lshr i64 %12, 3, !dbg !20551
  %add3 = add i64 %11, %shr, !dbg !20552
  %add4 = add i64 %add3, 100, !dbg !20553
  store i64 %add4, i64* %new_size, align 8, !dbg !20548, !tbaa !2579
  %13 = load i64, i64* %new_size, align 8, !dbg !20554, !tbaa !2579
  %14 = load i64, i64* %sum2, align 8, !dbg !20556, !tbaa !2579
  %cmp = icmp ult i64 %13, %14, !dbg !20557
  br i1 %cmp, label %if.then, label %if.end, !dbg !20558

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !20559, !tbaa !2579
  store i64 %15, i64* %new_size, align 8, !dbg !20560, !tbaa !2579
  br label %if.end, !dbg !20561

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !20562, !tbaa !2579
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20564, !tbaa !2442
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !20565, !ctir !1564
  %18 = load i64, i64* %chunk_size, align 8, !dbg !20565, !tbaa !20411, !ctir !149
  %cmp5 = icmp ult i64 %16, %18, !dbg !20566
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !20567

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20568, !tbaa !2442
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !20569, !ctir !1564
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !20569, !tbaa !20411, !ctir !149
  store i64 %20, i64* %new_size, align 8, !dbg !20570, !tbaa !2579
  br label %if.end8, !dbg !20571

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !20572, !tbaa !2579
  %22 = load i64, i64* %sum1, align 8, !dbg !20574, !tbaa !2579
  %cmp9 = icmp ule i64 %21, %22, !dbg !20575
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !20576

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !20577, !tbaa !2579
  %24 = load i64, i64* %sum2, align 8, !dbg !20578, !tbaa !2579
  %cmp10 = icmp ule i64 %23, %24, !dbg !20579
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !20580

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20581, !tbaa !2442
  %26 = load i64, i64* %new_size, align 8, !dbg !20582, !tbaa !2579
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !20583
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20583
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20584, !tbaa !2442
  br label %if.end12, !dbg !20585

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20586, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !20586
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !20588

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20589, !tbaa !2442
  call void %29() #14, !dbg !20590
  unreachable, !dbg !20590

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20591, !tbaa !2442
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20592, !tbaa !2442
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !20593, !ctir !1564
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !20594, !tbaa !5072, !ctir !1568
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20595, !tbaa !2442
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20596, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !20597, !ctir !1569
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !20598, !tbaa !2442, !ctir !1568
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20599, !tbaa !2442
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !20600
  %36 = load i64, i64* %new_size, align 8, !dbg !20601, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !20602
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20603, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !20604, !ctir !1564
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !20605, !tbaa !5073, !ctir !143
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20606, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !20607, !ctir !1569
  store i8* %add.ptr, i8** %limit, align 8, !dbg !20608, !tbaa !2442, !ctir !143
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20609, !tbaa !2442
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !20609, !ctir !1569
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20609
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !20609
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !20609
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20609, !tbaa !2442
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !20609, !ctir !1564
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !20609, !tbaa !5069, !ctir !149
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !20609
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20609, !tbaa !2442
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !20609, !ctir !1564
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !20609, !tbaa !5069, !ctir !149
  %neg = xor i64 %43, -1, !dbg !20609
  %and = and i64 %add19, %neg, !dbg !20609
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20609
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !20610, !tbaa !2442
  %44 = load i8*, i8** %object_base1, align 8, !dbg !20611, !tbaa !2442
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20612, !tbaa !2442
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !20613, !ctir !1564
  %46 = load i8*, i8** %object_base22, align 8, !dbg !20613, !tbaa !4746, !ctir !143
  %47 = load i64, i64* %obj_size, align 8, !dbg !20614, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !20615
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20616, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !20618, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20618
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !20618
  %bf.clear = and i8 %bf.lshr, 1, !dbg !20618
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20618
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !20616
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !20619

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20620, !tbaa !2442
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !20621, !ctir !1564
  %50 = load i8*, i8** %object_base25, align 8, !dbg !20621, !tbaa !4746, !ctir !143
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20622, !tbaa !2442
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !20622, !ctir !1569
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !20622
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !20622
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !20622
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20622, !tbaa !2442
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !20622, !ctir !1564
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !20622, !tbaa !5069, !ctir !149
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !20622
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20622, !tbaa !2442
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !20622, !ctir !1564
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !20622, !tbaa !5069, !ctir !149
  %neg33 = xor i64 %55, -1, !dbg !20622
  %and34 = and i64 %add31, %neg33, !dbg !20622
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !20622
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !20623
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !20624

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20625, !tbaa !2442
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !20627, !ctir !1569
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !20627, !tbaa !2442, !ctir !1568
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20628, !tbaa !2442
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !20629, !ctir !1569
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !20630, !tbaa !2442, !ctir !1568
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20631, !tbaa !2442
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20632, !tbaa !2442
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !20632
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !20633
  br label %if.end40, !dbg !20634

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !20635, !tbaa !2442
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20636, !tbaa !2442
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !20637, !ctir !1564
  store i8* %62, i8** %object_base41, align 8, !dbg !20638, !tbaa !4746, !ctir !143
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20639, !tbaa !2442
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !20640, !ctir !1564
  %65 = load i8*, i8** %object_base42, align 8, !dbg !20640, !tbaa !4746, !ctir !143
  %66 = load i64, i64* %obj_size, align 8, !dbg !20641, !tbaa !2579
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !20642
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20643, !tbaa !2442
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !20644, !ctir !1564
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !20645, !tbaa !4744, !ctir !143
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20646, !tbaa !2442
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !20647, !ctir !1564
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !20648
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !20648
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !20648
  ret void, !dbg !20649
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #0 !dbg !20650 !ctir !1603 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %old_chunk.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20651, metadata !DIExpression()), !dbg !20652
  store i8* %old_chunk, i8** %old_chunk.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !20653, metadata !DIExpression()), !dbg !20654
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20655, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20657, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20657
  %bf.clear = and i8 %bf.load, 1, !dbg !20657
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20657
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20655
  br i1 %tobool, label %if.then, label %if.else, !dbg !20658

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20659, !tbaa !2442
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !20660, !ctir !1564
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !20661
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !20661, !tbaa !2497, !ctir !1589
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20662, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20663, !ctir !1564
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20663, !tbaa !20472, !ctir !167
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20664, !tbaa !2442
  call void %2(i8* %4, i8* %5), !dbg !20659
  br label %if.end, !dbg !20659

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20665, !tbaa !2442
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !20666, !ctir !1564
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !20667
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !20667, !tbaa !2497, !ctir !1589
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20668, !tbaa !2442
  call void %7(i8* %8), !dbg !20665
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20669
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !20670 !ctir !1601 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20671, metadata !DIExpression()), !dbg !20672
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20673, metadata !DIExpression()), !dbg !20674
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20675, metadata !DIExpression()), !dbg !20676
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20677, metadata !DIExpression()), !dbg !20678
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20679, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20680, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20680, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20681, !tbaa !2442
  br label %while.cond, !dbg !20682

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20683, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20684
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20685

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20686, !tbaa !2442
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20687
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20688, !tbaa !2442
  %cmp1 = icmp uge i8* %4, %5, !dbg !20689
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20690

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20691, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20692, !ctir !1569
  %7 = load i8*, i8** %limit, align 8, !dbg !20692, !tbaa !2442, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20693, !tbaa !2442
  %cmp2 = icmp ult i8* %7, %8, !dbg !20694
  br label %lor.end, !dbg !20690

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20695
  br i1 %10, label %while.body, label %while.end, !dbg !20682

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20696, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20698, !ctir !1569
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20698, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20699, !tbaa !2442
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20700, !tbaa !2442
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !20701, !tbaa !2442
  br label %while.cond, !dbg !20682, !llvm.loop !20702

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20704, !tbaa !2442
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !20705
  %conv = zext i1 %cmp3 to i32, !dbg !20705
  ret i32 %conv, !dbg !20706
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #0 !dbg !20707 !ctir !1603 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20708, metadata !DIExpression()), !dbg !20709
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20710, metadata !DIExpression()), !dbg !20711
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20712, metadata !DIExpression()), !dbg !20713
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20714, metadata !DIExpression()), !dbg !20715
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20716, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20717, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20717, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20718, !tbaa !2442
  br label %while.cond, !dbg !20719

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20720, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20721
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20722

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20723, !tbaa !2442
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20724
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20725, !tbaa !2442
  %cmp1 = icmp uge i8* %4, %5, !dbg !20726
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20727

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20728, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20729, !ctir !1569
  %7 = load i8*, i8** %limit, align 8, !dbg !20729, !tbaa !2442, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20730, !tbaa !2442
  %cmp2 = icmp ult i8* %7, %8, !dbg !20731
  br label %lor.end, !dbg !20727

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20732
  br i1 %10, label %while.body, label %while.end, !dbg !20719

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20733, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20735, !ctir !1569
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20735, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20736, !tbaa !2442
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20737, !tbaa !2442
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20738, !tbaa !2442
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !20738
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !20739
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20740, !tbaa !2442
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !20741, !tbaa !2442
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20742, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !20743, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20744
  %bf.clear = and i8 %bf.load, -3, !dbg !20744
  %bf.set = or i8 %bf.clear, 2, !dbg !20744
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !20744
  br label %while.cond, !dbg !20719, !llvm.loop !20745

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20747, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !20747
  br i1 %tobool, label %if.then, label %if.else, !dbg !20749

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !20750, !tbaa !2442
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20752, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !20753, !ctir !1564
  store i8* %19, i8** %next_free, align 8, !dbg !20754, !tbaa !4744, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20755, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !20756, !ctir !1564
  store i8* %19, i8** %object_base, align 8, !dbg !20757, !tbaa !4746, !ctir !143
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20758, !tbaa !2442
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !20759, !ctir !1569
  %23 = load i8*, i8** %limit3, align 8, !dbg !20759, !tbaa !2442, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20760, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20761, !ctir !1564
  store i8* %23, i8** %chunk_limit, align 8, !dbg !20762, !tbaa !5073, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20763, !tbaa !2442
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20764, !tbaa !2442
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !20765, !ctir !1564
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !20766, !tbaa !5072, !ctir !1568
  br label %if.end7, !dbg !20767

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !20768, !tbaa !2442
  %cmp5 = icmp ne i8* %27, null, !dbg !20770
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20771

if.then6:                                         ; preds = %if.else
  call void @abort() #15, !dbg !20772
  unreachable, !dbg !20772

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !20773
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !20774 !ctir !1605 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %nbytes = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20775, metadata !DIExpression()), !dbg !20776
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20777, metadata !DIExpression()), !dbg !20778
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20779, metadata !DIExpression()), !dbg !20780
  store i64 0, i64* %nbytes, align 8, !dbg !20780, !tbaa !2579
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20781, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20783, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20783, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20784, !tbaa !2442
  br label %for.cond, !dbg !20785

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20786, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20788
  br i1 %cmp, label %for.body, label %for.end, !dbg !20789

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20790, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !20792, !ctir !1569
  %4 = load i8*, i8** %limit, align 8, !dbg !20792, !tbaa !2442, !ctir !143
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20793, !tbaa !2442
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !20794
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !20795
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !20795
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20795
  %7 = load i64, i64* %nbytes, align 8, !dbg !20796, !tbaa !2579
  %add = add i64 %7, %sub.ptr.sub, !dbg !20796
  store i64 %add, i64* %nbytes, align 8, !dbg !20796, !tbaa !2579
  br label %for.inc, !dbg !20797

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20798, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !20799, !ctir !1569
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20799, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !20800, !tbaa !2442
  br label %for.cond, !dbg !20801, !llvm.loop !20802

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !20804, !tbaa !2579
  ret i64 %10, !dbg !20805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm_zone* @tzalloc(i8* %name) #0 !dbg !20806 !ctir !2181 {
entry:
  %name.addr = alloca i8*, align 8
  %name_size = alloca i64, align 8, !ctir !149
  %abbr_size = alloca i64, align 8, !ctir !149
  %tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20807, metadata !DIExpression()), !dbg !20808
  call void @llvm.dbg.declare(metadata i64* %name_size, metadata !20809, metadata !DIExpression()), !dbg !20810
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20811, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !20811
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20811

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20812, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !20813
  %add = add i64 %call, 1, !dbg !20814
  br label %cond.end, !dbg !20811

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !20811
  store i64 %cond, i64* %name_size, align 8, !dbg !20810, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %abbr_size, metadata !20815, metadata !DIExpression()), !dbg !20816
  %2 = load i64, i64* %name_size, align 8, !dbg !20817, !tbaa !2579
  %cmp = icmp ult i64 %2, 119, !dbg !20818
  br i1 %cmp, label %cond.true1, label %cond.false2, !dbg !20817

cond.true1:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !20817

cond.false2:                                      ; preds = %cond.end
  %3 = load i64, i64* %name_size, align 8, !dbg !20819, !tbaa !2579
  %add3 = add i64 %3, 1, !dbg !20820
  br label %cond.end4, !dbg !20817

cond.end4:                                        ; preds = %cond.false2, %cond.true1
  %cond5 = phi i64 [ 119, %cond.true1 ], [ %add3, %cond.false2 ], !dbg !20817
  store i64 %cond5, i64* %abbr_size, align 8, !dbg !20816, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz, metadata !20821, metadata !DIExpression()), !dbg !20822
  %4 = load i64, i64* %abbr_size, align 8, !dbg !20823, !tbaa !2579
  %add6 = add i64 16, %4, !dbg !20823
  %and = and i64 %add6, -8, !dbg !20823
  %call7 = call noalias i8* @malloc(i64 %and) #13, !dbg !20824
  %5 = bitcast i8* %call7 to %struct.tm_zone*, !dbg !20824
  store %struct.tm_zone* %5, %struct.tm_zone** %tz, align 8, !dbg !20822, !tbaa !2442
  %6 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20825, !tbaa !2442
  %tobool8 = icmp ne %struct.tm_zone* %6, null, !dbg !20825
  br i1 %tobool8, label %if.then, label %if.end14, !dbg !20827

if.then:                                          ; preds = %cond.end4
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20828, !tbaa !2442
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %7, i32 0, i32 0, !dbg !20830, !ctir !2185
  store %struct.tm_zone* null, %struct.tm_zone** %next, align 8, !dbg !20831, !tbaa !2442, !ctir !2184
  %8 = load i8*, i8** %name.addr, align 8, !dbg !20832, !tbaa !2442
  %tobool9 = icmp ne i8* %8, null, !dbg !20833
  %lnot = xor i1 %tobool9, true, !dbg !20833
  %lnot10 = xor i1 %lnot, true, !dbg !20834
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !20834
  %conv = trunc i32 %lnot.ext to i8, !dbg !20834
  %9 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20835, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %9, i32 0, i32 1, !dbg !20836, !ctir !2185
  store i8 %conv, i8* %tz_is_set, align 8, !dbg !20837, !tbaa !2497, !ctir !144
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20838, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %10, i32 0, i32 2, !dbg !20839, !ctir !2185
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20838, !ctir !361
  store i8 0, i8* %arrayidx, align 1, !dbg !20840, !tbaa !2497
  %11 = load i8*, i8** %name.addr, align 8, !dbg !20841, !tbaa !2442
  %tobool11 = icmp ne i8* %11, null, !dbg !20841
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !20843

if.then12:                                        ; preds = %if.then
  %12 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20844, !tbaa !2442
  %abbrs13 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %12, i32 0, i32 2, !dbg !20845, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs13, i64 0, i64 0, !dbg !20844
  %13 = load i8*, i8** %name.addr, align 8, !dbg !20846, !tbaa !2442
  %14 = load i64, i64* %name_size, align 8, !dbg !20847, !tbaa !2579
  call void @extend_abbrs(i8* %arraydecay, i8* %13, i64 %14), !dbg !20848
  br label %if.end, !dbg !20848

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end14, !dbg !20849

if.end14:                                         ; preds = %if.end, %cond.end4
  %15 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20850, !tbaa !2442
  ret %struct.tm_zone* %15, !dbg !20851
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extend_abbrs(i8* %abbrs, i8* %abbr, i64 %abbr_size) #0 !dbg !20852 !ctir !2212 {
entry:
  %abbrs.addr = alloca i8*, align 8
  %abbr.addr = alloca i8*, align 8
  %abbr_size.addr = alloca i64, align 8
  store i8* %abbrs, i8** %abbrs.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %abbrs.addr, metadata !20853, metadata !DIExpression()), !dbg !20854
  store i8* %abbr, i8** %abbr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %abbr.addr, metadata !20855, metadata !DIExpression()), !dbg !20856
  store i64 %abbr_size, i64* %abbr_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %abbr_size.addr, metadata !20857, metadata !DIExpression()), !dbg !20858
  %0 = load i8*, i8** %abbrs.addr, align 8, !dbg !20859, !tbaa !2442
  %1 = load i8*, i8** %abbr.addr, align 8, !dbg !20860, !tbaa !2442
  %2 = load i64, i64* %abbr_size.addr, align 8, !dbg !20861, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false), !dbg !20862
  %3 = load i8*, i8** %abbrs.addr, align 8, !dbg !20863, !tbaa !2442
  %4 = load i64, i64* %abbr_size.addr, align 8, !dbg !20864, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !20863, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !20865, !tbaa !2497
  ret void, !dbg !20866
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tzfree(%struct.tm_zone* %tz) #0 !dbg !20867 !ctir !2190 {
entry:
  %tz.addr = alloca %struct.tm_zone*, align 8
  %next = alloca %struct.tm_zone*, align 8, !ctir !2183
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20868, metadata !DIExpression()), !dbg !20869
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20870, !tbaa !2442
  %cmp = icmp ne %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !20872
  br i1 %cmp, label %if.then, label %if.end, !dbg !20873

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !20874

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20875, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %1, null, !dbg !20874
  br i1 %tobool, label %while.body, label %while.end, !dbg !20874

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %next, metadata !20876, metadata !DIExpression()), !dbg !20878
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20879, !tbaa !2442
  %next1 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 0, !dbg !20880, !ctir !2185
  %3 = load %struct.tm_zone*, %struct.tm_zone** %next1, align 8, !dbg !20880, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %3, %struct.tm_zone** %next, align 8, !dbg !20878, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20881, !tbaa !2442
  %5 = bitcast %struct.tm_zone* %4 to i8*, !dbg !20881
  call void @free(i8* %5) #13, !dbg !20882
  %6 = load %struct.tm_zone*, %struct.tm_zone** %next, align 8, !dbg !20883, !tbaa !2442
  store %struct.tm_zone* %6, %struct.tm_zone** %tz.addr, align 8, !dbg !20884, !tbaa !2442
  br label %while.cond, !dbg !20874, !llvm.loop !20885

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !20874

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !20887
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm* @localtime_rz(%struct.tm_zone* %tz, i64* nonnull %t, %struct.tm* nonnull %tm) #0 !dbg !20888 !ctir !2192 {
entry:
  %retval = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %t.addr = alloca i64*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %abbr_saved = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20889, metadata !DIExpression()), !dbg !20890
  store i64* %t, i64** %t.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !20891, metadata !DIExpression()), !dbg !20892
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20893, metadata !DIExpression()), !dbg !20894
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20895, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !20895
  br i1 %tobool, label %if.else, label %if.then, !dbg !20897

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %t.addr, align 8, !dbg !20898, !tbaa !2442
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20899, !tbaa !2442
  %call = call %struct.tm* @gmtime_r(i64* %1, %struct.tm* %2) #13, !dbg !20900
  store %struct.tm* %call, %struct.tm** %retval, align 8, !dbg !20901
  br label %return, !dbg !20901

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20902, metadata !DIExpression()), !dbg !20904
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20905, !tbaa !2442
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %3), !dbg !20906
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !20904, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20907, !tbaa !2442
  %tobool2 = icmp ne %struct.tm_zone* %4, null, !dbg !20907
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !20909

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %abbr_saved, metadata !20910, metadata !DIExpression()), !dbg !20912
  %5 = load i64*, i64** %t.addr, align 8, !dbg !20913, !tbaa !2442
  %6 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20914, !tbaa !2442
  %call4 = call %struct.tm* @localtime_r(i64* %5, %struct.tm* %6) #13, !dbg !20915
  %tobool5 = icmp ne %struct.tm* %call4, null, !dbg !20915
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !20916

land.rhs:                                         ; preds = %if.then3
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20917, !tbaa !2442
  %8 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20918, !tbaa !2442
  %call6 = call zeroext i1 @save_abbr(%struct.tm_zone* %7, %struct.tm* %8), !dbg !20919
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then3
  %9 = phi i1 [ false, %if.then3 ], [ %call6, %land.rhs ], !dbg !20920
  %frombool = zext i1 %9 to i8, !dbg !20912
  store i8 %frombool, i8* %abbr_saved, align 1, !dbg !20912, !tbaa !2461
  %10 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20921, !tbaa !2442
  %call7 = call zeroext i1 @revert_tz(%struct.tm_zone* %10), !dbg !20923
  br i1 %call7, label %land.lhs.true, label %if.end, !dbg !20924

land.lhs.true:                                    ; preds = %land.end
  %11 = load i8, i8* %abbr_saved, align 1, !dbg !20925, !tbaa !2461
  %tobool8 = trunc i8 %11 to i1, !dbg !20925
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !20926

if.then9:                                         ; preds = %land.lhs.true
  %12 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20927, !tbaa !2442
  store %struct.tm* %12, %struct.tm** %retval, align 8, !dbg !20928
  br label %return, !dbg !20928

if.end:                                           ; preds = %land.lhs.true, %land.end
  br label %if.end10, !dbg !20929

if.end10:                                         ; preds = %if.end, %if.else
  store %struct.tm* null, %struct.tm** %retval, align 8, !dbg !20930
  br label %return, !dbg !20930

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %13 = load %struct.tm*, %struct.tm** %retval, align 8, !dbg !20931
  ret %struct.tm* %13, !dbg !20931
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @set_tz(%struct.tm_zone* %tz) #0 !dbg !20932 !ctir !2214 {
entry:
  %retval = alloca %struct.tm_zone*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %env_tz = alloca i8*, align 8, !ctir !143
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %saved_errno = alloca i32, align 4, !ctir !27
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20933, metadata !DIExpression()), !dbg !20934
  call void @llvm.dbg.declare(metadata i8** %env_tz, metadata !20935, metadata !DIExpression()), !dbg !20936
  %call = call i8* @getenv_TZ(), !dbg !20937
  store i8* %call, i8** %env_tz, align 8, !dbg !20936, !tbaa !2442
  %0 = load i8*, i8** %env_tz, align 8, !dbg !20938, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !20938
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20940

cond.true:                                        ; preds = %entry
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20941, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %1, i32 0, i32 1, !dbg !20942, !ctir !2185
  %2 = load i8, i8* %tz_is_set, align 8, !dbg !20942, !tbaa !2497, !ctir !144
  %conv = sext i8 %2 to i32, !dbg !20941
  %tobool1 = icmp ne i32 %conv, 0, !dbg !20941
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !20943

land.lhs.true:                                    ; preds = %cond.true
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20944, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %3, i32 0, i32 2, !dbg !20945, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20944
  %4 = load i8*, i8** %env_tz, align 8, !dbg !20946, !tbaa !2442
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* %4) #16, !dbg !20947
  %cmp = icmp eq i32 %call2, 0, !dbg !20948
  br i1 %cmp, label %if.then, label %if.else, !dbg !20938

cond.false:                                       ; preds = %entry
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20949, !tbaa !2442
  %tz_is_set4 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %5, i32 0, i32 1, !dbg !20950, !ctir !2185
  %6 = load i8, i8* %tz_is_set4, align 8, !dbg !20950, !tbaa !2497, !ctir !144
  %tobool5 = icmp ne i8 %6, 0, !dbg !20949
  br i1 %tobool5, label %if.else, label %if.then, !dbg !20940

if.then:                                          ; preds = %cond.false, %land.lhs.true
  store %struct.tm_zone* inttoptr (i64 1 to %struct.tm_zone*), %struct.tm_zone** %retval, align 8, !dbg !20951
  br label %return, !dbg !20951

if.else:                                          ; preds = %cond.false, %land.lhs.true, %cond.true
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20952, metadata !DIExpression()), !dbg !20954
  %7 = load i8*, i8** %env_tz, align 8, !dbg !20955, !tbaa !2442
  %call6 = call %struct.tm_zone* @tzalloc(i8* %7), !dbg !20956
  store %struct.tm_zone* %call6, %struct.tm_zone** %old_tz, align 8, !dbg !20954, !tbaa !2442
  %8 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20957, !tbaa !2442
  %tobool7 = icmp ne %struct.tm_zone* %8, null, !dbg !20957
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !20959

if.then8:                                         ; preds = %if.else
  %9 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20960, !tbaa !2442
  store %struct.tm_zone* %9, %struct.tm_zone** %retval, align 8, !dbg !20961
  br label %return, !dbg !20961

if.end:                                           ; preds = %if.else
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20962, !tbaa !2442
  %call9 = call zeroext i1 @change_env(%struct.tm_zone* %10), !dbg !20964
  br i1 %call9, label %if.end13, label %if.then10, !dbg !20965

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20966, metadata !DIExpression()), !dbg !20968
  %call11 = call i32* @__errno_location() #17, !dbg !20969
  %11 = load i32, i32* %call11, align 4, !dbg !20969, !tbaa !2436, !ctir !27
  store i32 %11, i32* %saved_errno, align 4, !dbg !20968, !tbaa !2436
  %12 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20970, !tbaa !2442
  call void @tzfree(%struct.tm_zone* %12), !dbg !20971
  %13 = load i32, i32* %saved_errno, align 4, !dbg !20972, !tbaa !2436
  %call12 = call i32* @__errno_location() #17, !dbg !20973
  store i32 %13, i32* %call12, align 4, !dbg !20974, !tbaa !2436, !ctir !27
  store %struct.tm_zone* null, %struct.tm_zone** %retval, align 8, !dbg !20975
  br label %return, !dbg !20975

if.end13:                                         ; preds = %if.end
  %14 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20976, !tbaa !2442
  store %struct.tm_zone* %14, %struct.tm_zone** %retval, align 8, !dbg !20977
  br label %return, !dbg !20977

return:                                           ; preds = %if.end13, %if.then10, %if.then8, %if.then
  %15 = load %struct.tm_zone*, %struct.tm_zone** %retval, align 8, !dbg !20978
  ret %struct.tm_zone* %15, !dbg !20978
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @save_abbr(%struct.tm_zone* %tz, %struct.tm* %tm) #0 !dbg !20979 !ctir !2220 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %zone = alloca i8*, align 8, !ctir !146
  %zone_copy = alloca i8*, align 8, !ctir !143
  %zone_size = alloca i64, align 8, !ctir !149
  %zone_used = alloca i64, align 8, !ctir !149
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20980, metadata !DIExpression()), !dbg !20981
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20982, metadata !DIExpression()), !dbg !20983
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !20984, metadata !DIExpression()), !dbg !20985
  store i8* null, i8** %zone, align 8, !dbg !20985, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %zone_copy, metadata !20986, metadata !DIExpression()), !dbg !20987
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.516, i64 0, i64 0), i8** %zone_copy, align 8, !dbg !20987, !tbaa !2442
  %0 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20988, !tbaa !2442
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 10, !dbg !20989, !ctir !2195
  %1 = load i8*, i8** %tm_zone, align 8, !dbg !20989, !tbaa !15700, !ctir !146
  store i8* %1, i8** %zone, align 8, !dbg !20990, !tbaa !2442
  %2 = load i8*, i8** %zone, align 8, !dbg !20991, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !20991
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20993

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20994, !tbaa !2442
  %4 = bitcast %struct.tm* %3 to i8*, !dbg !20995
  %5 = load i8*, i8** %zone, align 8, !dbg !20996, !tbaa !2442
  %cmp = icmp ule i8* %4, %5, !dbg !20997
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20998

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %zone, align 8, !dbg !20999, !tbaa !2442
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21000, !tbaa !2442
  %add.ptr = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 1, !dbg !21001
  %8 = bitcast %struct.tm* %add.ptr to i8*, !dbg !21002
  %cmp1 = icmp ult i8* %6, %8, !dbg !21003
  br i1 %cmp1, label %if.then, label %if.end, !dbg !21004

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 true, i1* %retval, align 1, !dbg !21005
  br label %return, !dbg !21005

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load i8*, i8** %zone, align 8, !dbg !21006, !tbaa !2442
  %10 = load i8, i8* %9, align 1, !dbg !21008, !tbaa !2497, !ctir !147
  %tobool2 = icmp ne i8 %10, 0, !dbg !21008
  br i1 %tobool2, label %if.then3, label %if.end48, !dbg !21009

if.then3:                                         ; preds = %if.end
  %11 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21010, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 2, !dbg !21012, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !21010
  store i8* %arraydecay, i8** %zone_copy, align 8, !dbg !21013, !tbaa !2442
  br label %while.cond, !dbg !21014

while.cond:                                       ; preds = %if.end47, %if.then3
  %12 = load i8*, i8** %zone_copy, align 8, !dbg !21015, !tbaa !2442
  %13 = load i8*, i8** %zone, align 8, !dbg !21016, !tbaa !2442
  %call = call i32 @strcmp(i8* %12, i8* %13) #16, !dbg !21017
  %cmp4 = icmp ne i32 %call, 0, !dbg !21018
  br i1 %cmp4, label %while.body, label %while.end, !dbg !21014

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %zone_copy, align 8, !dbg !21019, !tbaa !2442
  %15 = load i8, i8* %14, align 1, !dbg !21022, !tbaa !2497, !ctir !144
  %conv = sext i8 %15 to i32, !dbg !21022
  %tobool5 = icmp ne i32 %conv, 0, !dbg !21022
  br i1 %tobool5, label %if.end35, label %lor.lhs.false6, !dbg !21023

lor.lhs.false6:                                   ; preds = %while.body
  %16 = load i8*, i8** %zone_copy, align 8, !dbg !21024, !tbaa !2442
  %17 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21025, !tbaa !2442
  %abbrs7 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %17, i32 0, i32 2, !dbg !21026, !ctir !2185
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs7, i64 0, i64 0, !dbg !21025
  %cmp9 = icmp eq i8* %16, %arraydecay8, !dbg !21027
  br i1 %cmp9, label %land.lhs.true11, label %if.then14, !dbg !21028

land.lhs.true11:                                  ; preds = %lor.lhs.false6
  %18 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21029, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %18, i32 0, i32 1, !dbg !21030, !ctir !2185
  %19 = load i8, i8* %tz_is_set, align 8, !dbg !21030, !tbaa !2497, !ctir !144
  %conv12 = sext i8 %19 to i32, !dbg !21029
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !21029
  br i1 %tobool13, label %if.end35, label %if.then14, !dbg !21031

if.then14:                                        ; preds = %land.lhs.true11, %lor.lhs.false6
  call void @llvm.dbg.declare(metadata i64* %zone_size, metadata !21032, metadata !DIExpression()), !dbg !21034
  %20 = load i8*, i8** %zone, align 8, !dbg !21035, !tbaa !2442
  %call15 = call i64 @strlen(i8* %20) #16, !dbg !21036
  %add = add i64 %call15, 1, !dbg !21037
  store i64 %add, i64* %zone_size, align 8, !dbg !21034, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %zone_used, metadata !21038, metadata !DIExpression()), !dbg !21039
  %21 = load i8*, i8** %zone_copy, align 8, !dbg !21040, !tbaa !2442
  %22 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21041, !tbaa !2442
  %abbrs16 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %22, i32 0, i32 2, !dbg !21042, !ctir !2185
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs16, i64 0, i64 0, !dbg !21041
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !21043
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay17 to i64, !dbg !21043
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21043
  store i64 %sub.ptr.sub, i64* %zone_used, align 8, !dbg !21039, !tbaa !2579
  %23 = load i64, i64* %zone_used, align 8, !dbg !21044, !tbaa !2579
  %sub = sub i64 -1, %23, !dbg !21046
  %24 = load i64, i64* %zone_size, align 8, !dbg !21047, !tbaa !2579
  %cmp18 = icmp ult i64 %sub, %24, !dbg !21048
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !21049

if.then20:                                        ; preds = %if.then14
  %call21 = call i32* @__errno_location() #17, !dbg !21050
  store i32 12, i32* %call21, align 4, !dbg !21052, !tbaa !2436, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !21053
  br label %return, !dbg !21053

if.end22:                                         ; preds = %if.then14
  %25 = load i64, i64* %zone_used, align 8, !dbg !21054, !tbaa !2579
  %26 = load i64, i64* %zone_size, align 8, !dbg !21056, !tbaa !2579
  %add23 = add i64 %25, %26, !dbg !21057
  %cmp24 = icmp ult i64 %add23, 119, !dbg !21058
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !21059

if.then26:                                        ; preds = %if.end22
  %27 = load i8*, i8** %zone_copy, align 8, !dbg !21060, !tbaa !2442
  %28 = load i8*, i8** %zone, align 8, !dbg !21061, !tbaa !2442
  %29 = load i64, i64* %zone_size, align 8, !dbg !21062, !tbaa !2579
  call void @extend_abbrs(i8* %27, i8* %28, i64 %29), !dbg !21063
  br label %if.end34, !dbg !21063

if.else:                                          ; preds = %if.end22
  %30 = load i8*, i8** %zone, align 8, !dbg !21064, !tbaa !2442
  %call27 = call %struct.tm_zone* @tzalloc(i8* %30), !dbg !21066
  %31 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21067, !tbaa !2442
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %31, i32 0, i32 0, !dbg !21068, !ctir !2185
  store %struct.tm_zone* %call27, %struct.tm_zone** %next, align 8, !dbg !21069, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %call27, %struct.tm_zone** %tz.addr, align 8, !dbg !21070, !tbaa !2442
  %32 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21071, !tbaa !2442
  %tobool28 = icmp ne %struct.tm_zone* %32, null, !dbg !21071
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !21073

if.then29:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !21074
  br label %return, !dbg !21074

if.end30:                                         ; preds = %if.else
  %33 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21075, !tbaa !2442
  %tz_is_set31 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %33, i32 0, i32 1, !dbg !21076, !ctir !2185
  store i8 0, i8* %tz_is_set31, align 8, !dbg !21077, !tbaa !2497, !ctir !144
  %34 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21078, !tbaa !2442
  %abbrs32 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %34, i32 0, i32 2, !dbg !21079, !ctir !2185
  %arraydecay33 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs32, i64 0, i64 0, !dbg !21078
  store i8* %arraydecay33, i8** %zone_copy, align 8, !dbg !21080, !tbaa !2442
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.then26
  br label %while.end, !dbg !21081

if.end35:                                         ; preds = %land.lhs.true11, %while.body
  %35 = load i8*, i8** %zone_copy, align 8, !dbg !21082, !tbaa !2442
  %call36 = call i64 @strlen(i8* %35) #16, !dbg !21083
  %add37 = add i64 %call36, 1, !dbg !21084
  %36 = load i8*, i8** %zone_copy, align 8, !dbg !21085, !tbaa !2442
  %add.ptr38 = getelementptr inbounds i8, i8* %36, i64 %add37, !dbg !21085
  store i8* %add.ptr38, i8** %zone_copy, align 8, !dbg !21085, !tbaa !2442
  %37 = load i8*, i8** %zone_copy, align 8, !dbg !21086, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !21088, !tbaa !2497, !ctir !144
  %tobool39 = icmp ne i8 %38, 0, !dbg !21088
  br i1 %tobool39, label %if.end47, label %land.lhs.true40, !dbg !21089

land.lhs.true40:                                  ; preds = %if.end35
  %39 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21090, !tbaa !2442
  %next41 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %39, i32 0, i32 0, !dbg !21091, !ctir !2185
  %40 = load %struct.tm_zone*, %struct.tm_zone** %next41, align 8, !dbg !21091, !tbaa !2442, !ctir !2184
  %tobool42 = icmp ne %struct.tm_zone* %40, null, !dbg !21090
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !21092

if.then43:                                        ; preds = %land.lhs.true40
  %41 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21093, !tbaa !2442
  %next44 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %41, i32 0, i32 0, !dbg !21095, !ctir !2185
  %42 = load %struct.tm_zone*, %struct.tm_zone** %next44, align 8, !dbg !21095, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %42, %struct.tm_zone** %tz.addr, align 8, !dbg !21096, !tbaa !2442
  %43 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21097, !tbaa !2442
  %abbrs45 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %43, i32 0, i32 2, !dbg !21098, !ctir !2185
  %arraydecay46 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs45, i64 0, i64 0, !dbg !21097
  store i8* %arraydecay46, i8** %zone_copy, align 8, !dbg !21099, !tbaa !2442
  br label %if.end47, !dbg !21100

if.end47:                                         ; preds = %if.then43, %land.lhs.true40, %if.end35
  br label %while.cond, !dbg !21014, !llvm.loop !21101

while.end:                                        ; preds = %if.end34, %while.cond
  br label %if.end48, !dbg !21103

if.end48:                                         ; preds = %while.end, %if.end
  %44 = load i8*, i8** %zone_copy, align 8, !dbg !21104, !tbaa !2442
  %45 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21105, !tbaa !2442
  %tm_zone49 = getelementptr inbounds %struct.tm, %struct.tm* %45, i32 0, i32 10, !dbg !21106, !ctir !2195
  store i8* %44, i8** %tm_zone49, align 8, !dbg !21107, !tbaa !15700, !ctir !146
  store i1 true, i1* %retval, align 1, !dbg !21108
  br label %return, !dbg !21108

return:                                           ; preds = %if.end48, %if.then29, %if.then20, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !21109
  ret i1 %46, !dbg !21109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @revert_tz(%struct.tm_zone* %tz) #0 !dbg !21110 !ctir !2216 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %ok = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21111, metadata !DIExpression()), !dbg !21112
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21113, !tbaa !2442
  %cmp = icmp eq %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !21115
  br i1 %cmp, label %if.then, label %if.else, !dbg !21116

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21117
  br label %return, !dbg !21117

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21118, metadata !DIExpression()), !dbg !21120
  %call = call i32* @__errno_location() #17, !dbg !21121
  %1 = load i32, i32* %call, align 4, !dbg !21121, !tbaa !2436, !ctir !27
  store i32 %1, i32* %saved_errno, align 4, !dbg !21120, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !21122, metadata !DIExpression()), !dbg !21123
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21124, !tbaa !2442
  %call1 = call zeroext i1 @change_env(%struct.tm_zone* %2), !dbg !21125
  %frombool = zext i1 %call1 to i8, !dbg !21123
  store i8 %frombool, i8* %ok, align 1, !dbg !21123, !tbaa !2461
  %3 = load i8, i8* %ok, align 1, !dbg !21126, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !21126
  br i1 %tobool, label %if.end, label %if.then2, !dbg !21128

if.then2:                                         ; preds = %if.else
  %call3 = call i32* @__errno_location() #17, !dbg !21129
  %4 = load i32, i32* %call3, align 4, !dbg !21129, !tbaa !2436, !ctir !27
  store i32 %4, i32* %saved_errno, align 4, !dbg !21130, !tbaa !2436
  br label %if.end, !dbg !21131

if.end:                                           ; preds = %if.then2, %if.else
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21132, !tbaa !2442
  call void @tzfree(%struct.tm_zone* %5), !dbg !21133
  %6 = load i32, i32* %saved_errno, align 4, !dbg !21134, !tbaa !2436
  %call4 = call i32* @__errno_location() #17, !dbg !21135
  store i32 %6, i32* %call4, align 4, !dbg !21136, !tbaa !2436, !ctir !27
  %7 = load i8, i8* %ok, align 1, !dbg !21137, !tbaa !2461
  %tobool5 = trunc i8 %7 to i1, !dbg !21137
  store i1 %tobool5, i1* %retval, align 1, !dbg !21138
  br label %return, !dbg !21138

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !21139
  ret i1 %8, !dbg !21139
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_env(%struct.tm_zone* %tz) #0 !dbg !21140 !ctir !2216 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21141, metadata !DIExpression()), !dbg !21142
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21143, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %0, i32 0, i32 1, !dbg !21145, !ctir !2185
  %1 = load i8, i8* %tz_is_set, align 8, !dbg !21145, !tbaa !2497, !ctir !144
  %conv = sext i8 %1 to i32, !dbg !21143
  %tobool = icmp ne i32 %conv, 0, !dbg !21143
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21143

cond.true:                                        ; preds = %entry
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21146, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 2, !dbg !21147, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !21146
  br label %cond.end, !dbg !21143

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !21143
  %call = call i32 @setenv_TZ(i8* %cond), !dbg !21148
  %cmp = icmp ne i32 %call, 0, !dbg !21149
  br i1 %cmp, label %if.then, label %if.end, !dbg !21150

if.then:                                          ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !21151
  br label %return, !dbg !21151

if.end:                                           ; preds = %cond.end
  call void @tzset() #13, !dbg !21152
  store i1 true, i1* %retval, align 1, !dbg !21153
  br label %return, !dbg !21153

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !21154
  ret i1 %3, !dbg !21154
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setenv_TZ(i8* %tz) #0 !dbg !21155 !ctir !2218 {
entry:
  %tz.addr = alloca i8*, align 8
  store i8* %tz, i8** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tz.addr, metadata !21156, metadata !DIExpression()), !dbg !21157
  %0 = load i8*, i8** %tz.addr, align 8, !dbg !21158, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !21158
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21158

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %tz.addr, align 8, !dbg !21159, !tbaa !2442
  %call = call i32 @setenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0), i8* %1, i32 1) #13, !dbg !21160
  br label %cond.end, !dbg !21158

cond.false:                                       ; preds = %entry
  %call1 = call i32 @unsetenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21161
  br label %cond.end, !dbg !21158

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21158
  ret i32 %cond, !dbg !21162
}

; Function Attrs: nounwind
declare dso_local void @tzset() #2

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @unsetenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getenv_TZ() #0 !dbg !21163 !ctir !2123 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.515, i64 0, i64 0)) #13, !dbg !21164
  ret i8* %call, !dbg !21165
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mktime_z(%struct.tm_zone* %tz, %struct.tm* nonnull %tm) #0 !dbg !21166 !ctir !2210 {
entry:
  %retval = alloca i64, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %t = alloca i64, align 8, !ctir !162
  %badtime = alloca i64, align 8, !ctir !162
  %tm_1 = alloca %struct.tm, align 8, !ctir !2195
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21167, metadata !DIExpression()), !dbg !21168
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !21169, metadata !DIExpression()), !dbg !21170
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21171, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !21171
  br i1 %tobool, label %if.else, label %if.then, !dbg !21173

if.then:                                          ; preds = %entry
  %1 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21174, !tbaa !2442
  %call = call i64 @timegm(%struct.tm* %1) #13, !dbg !21175
  store i64 %call, i64* %retval, align 8, !dbg !21176
  br label %return, !dbg !21176

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !21177, metadata !DIExpression()), !dbg !21179
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21180, !tbaa !2442
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %2), !dbg !21181
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !21179, !tbaa !2442
  %3 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21182, !tbaa !2442
  %tobool2 = icmp ne %struct.tm_zone* %3, null, !dbg !21182
  br i1 %tobool2, label %if.then3, label %if.end15, !dbg !21184

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %t, metadata !21185, metadata !DIExpression()), !dbg !21187
  %4 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21188, !tbaa !2442
  %call4 = call i64 @mktime(%struct.tm* %4) #13, !dbg !21189
  store i64 %call4, i64* %t, align 8, !dbg !21187, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %badtime, metadata !21190, metadata !DIExpression()), !dbg !21191
  store i64 -1, i64* %badtime, align 8, !dbg !21191, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm* %tm_1, metadata !21192, metadata !DIExpression()), !dbg !21193
  %5 = load i64, i64* %t, align 8, !dbg !21194, !tbaa !2579
  %6 = load i64, i64* %badtime, align 8, !dbg !21196, !tbaa !2579
  %cmp = icmp ne i64 %5, %6, !dbg !21197
  br i1 %cmp, label %land.lhs.true9, label %lor.lhs.false, !dbg !21198

lor.lhs.false:                                    ; preds = %if.then3
  %call5 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tm_1) #13, !dbg !21199
  %tobool6 = icmp ne %struct.tm* %call5, null, !dbg !21199
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !21200

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21201, !tbaa !2442
  %call7 = call i32 @equal_tm(%struct.tm* %7, %struct.tm* %tm_1), !dbg !21202
  %tobool8 = icmp ne i32 %call7, 0, !dbg !21202
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !21203

land.lhs.true9:                                   ; preds = %land.lhs.true, %if.then3
  %8 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21204, !tbaa !2442
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21205, !tbaa !2442
  %call10 = call zeroext i1 @save_abbr(%struct.tm_zone* %8, %struct.tm* %9), !dbg !21206
  br i1 %call10, label %if.end, label %if.then11, !dbg !21207

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load i64, i64* %badtime, align 8, !dbg !21208, !tbaa !2579
  store i64 %10, i64* %t, align 8, !dbg !21209, !tbaa !2579
  br label %if.end, !dbg !21210

if.end:                                           ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %lor.lhs.false
  %11 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21211, !tbaa !2442
  %call12 = call zeroext i1 @revert_tz(%struct.tm_zone* %11), !dbg !21213
  br i1 %call12, label %if.then13, label %if.end14, !dbg !21214

if.then13:                                        ; preds = %if.end
  %12 = load i64, i64* %t, align 8, !dbg !21215, !tbaa !2579
  store i64 %12, i64* %retval, align 8, !dbg !21216
  br label %return, !dbg !21216

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !21217

if.end15:                                         ; preds = %if.end14, %if.else
  store i64 -1, i64* %retval, align 8, !dbg !21218
  br label %return, !dbg !21218

return:                                           ; preds = %if.end15, %if.then13, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21219
  ret i64 %13, !dbg !21219
}

; Function Attrs: nounwind
declare dso_local i64 @timegm(%struct.tm*) #2

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @equal_tm(%struct.tm* %a, %struct.tm* %b) #0 !dbg !21220 !ctir !2222 {
entry:
  %a.addr = alloca %struct.tm*, align 8
  %b.addr = alloca %struct.tm*, align 8
  store %struct.tm* %a, %struct.tm** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %a.addr, metadata !21221, metadata !DIExpression()), !dbg !21222
  store %struct.tm* %b, %struct.tm** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %b.addr, metadata !21223, metadata !DIExpression()), !dbg !21224
  %0 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21225, !tbaa !2442
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 0, !dbg !21226, !ctir !2225
  %1 = load i32, i32* %tm_sec, align 8, !dbg !21226, !tbaa !16556, !ctir !27
  %2 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21227, !tbaa !2442
  %tm_sec1 = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 0, !dbg !21228, !ctir !2225
  %3 = load i32, i32* %tm_sec1, align 8, !dbg !21228, !tbaa !16556, !ctir !27
  %xor = xor i32 %1, %3, !dbg !21229
  %4 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21230, !tbaa !2442
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 1, !dbg !21231, !ctir !2225
  %5 = load i32, i32* %tm_min, align 4, !dbg !21231, !tbaa !16468, !ctir !27
  %6 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21232, !tbaa !2442
  %tm_min2 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 1, !dbg !21233, !ctir !2225
  %7 = load i32, i32* %tm_min2, align 4, !dbg !21233, !tbaa !16468, !ctir !27
  %xor3 = xor i32 %5, %7, !dbg !21234
  %or = or i32 %xor, %xor3, !dbg !21235
  %8 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21236, !tbaa !2442
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2, !dbg !21237, !ctir !2225
  %9 = load i32, i32* %tm_hour, align 8, !dbg !21237, !tbaa !15687, !ctir !27
  %10 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21238, !tbaa !2442
  %tm_hour4 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 2, !dbg !21239, !ctir !2225
  %11 = load i32, i32* %tm_hour4, align 8, !dbg !21239, !tbaa !15687, !ctir !27
  %xor5 = xor i32 %9, %11, !dbg !21240
  %or6 = or i32 %or, %xor5, !dbg !21241
  %12 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21242, !tbaa !2442
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 3, !dbg !21243, !ctir !2225
  %13 = load i32, i32* %tm_mday, align 4, !dbg !21243, !tbaa !16089, !ctir !27
  %14 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21244, !tbaa !2442
  %tm_mday7 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3, !dbg !21245, !ctir !2225
  %15 = load i32, i32* %tm_mday7, align 4, !dbg !21245, !tbaa !16089, !ctir !27
  %xor8 = xor i32 %13, %15, !dbg !21246
  %or9 = or i32 %or6, %xor8, !dbg !21247
  %16 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21248, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 4, !dbg !21249, !ctir !2225
  %17 = load i32, i32* %tm_mon, align 8, !dbg !21249, !tbaa !6836, !ctir !27
  %18 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21250, !tbaa !2442
  %tm_mon10 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 4, !dbg !21251, !ctir !2225
  %19 = load i32, i32* %tm_mon10, align 8, !dbg !21251, !tbaa !6836, !ctir !27
  %xor11 = xor i32 %17, %19, !dbg !21252
  %or12 = or i32 %or9, %xor11, !dbg !21253
  %20 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21254, !tbaa !2442
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 5, !dbg !21255, !ctir !2225
  %21 = load i32, i32* %tm_year, align 4, !dbg !21255, !tbaa !16052, !ctir !27
  %22 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21256, !tbaa !2442
  %tm_year13 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 5, !dbg !21257, !ctir !2225
  %23 = load i32, i32* %tm_year13, align 4, !dbg !21257, !tbaa !16052, !ctir !27
  %xor14 = xor i32 %21, %23, !dbg !21258
  %or15 = or i32 %or12, %xor14, !dbg !21259
  %24 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21260, !tbaa !2442
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 8, !dbg !21261, !ctir !2225
  %25 = load i32, i32* %tm_isdst, align 8, !dbg !21261, !tbaa !16842, !ctir !27
  %26 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21262, !tbaa !2442
  %tm_isdst16 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 8, !dbg !21263, !ctir !2225
  %27 = load i32, i32* %tm_isdst16, align 8, !dbg !21263, !tbaa !16842, !ctir !27
  %call = call zeroext i1 @isdst_differ(i32 %25, i32 %27), !dbg !21264
  %conv = zext i1 %call to i32, !dbg !21264
  %or17 = or i32 %or15, %conv, !dbg !21265
  %tobool = icmp ne i32 %or17, 0, !dbg !21266
  %lnot = xor i1 %tobool, true, !dbg !21266
  %lnot.ext = zext i1 %lnot to i32, !dbg !21266
  ret i32 %lnot.ext, !dbg !21267
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isdst_differ(i32 %a, i32 %b) #0 !dbg !21268 !ctir !2226 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21269, metadata !DIExpression()), !dbg !21270
  store i32 %b, i32* %b.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !21271, metadata !DIExpression()), !dbg !21272
  %0 = load i32, i32* %a.addr, align 4, !dbg !21273, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !21274
  %lnot = xor i1 %tobool, true, !dbg !21274
  %lnot.ext = zext i1 %lnot to i32, !dbg !21274
  %1 = load i32, i32* %b.addr, align 4, !dbg !21275, !tbaa !2436
  %tobool1 = icmp ne i32 %1, 0, !dbg !21276
  %lnot2 = xor i1 %tobool1, true, !dbg !21276
  %lnot.ext3 = zext i1 %lnot2 to i32, !dbg !21276
  %cmp = icmp ne i32 %lnot.ext, %lnot.ext3, !dbg !21277
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21278

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !21279, !tbaa !2436
  %cmp4 = icmp sle i32 0, %2, !dbg !21280
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !21281

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %b.addr, align 4, !dbg !21282, !tbaa !2436
  %cmp5 = icmp sle i32 0, %3, !dbg !21283
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !21284
  ret i1 %4, !dbg !21285
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #12 !dbg !21286 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !21288, metadata !DIExpression()), !dbg !21289
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !21290, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !21291

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21292
  br label %return, !dbg !21292

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21294
  br label %return, !dbg !21294

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21295
  br label %return, !dbg !21295

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21296
  br label %return, !dbg !21296

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21297
  br label %return, !dbg !21297

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21298
  ret i1 %1, !dbg !21298
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #0 !dbg !21299 !ctir !2239 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21301, metadata !DIExpression()), !dbg !21302
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21303, metadata !DIExpression()), !dbg !21304
  %0 = load i64, i64* %x.addr, align 8, !dbg !21305, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21306, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21307
  %shl = shl i64 %0, %sh_prom, !dbg !21307
  %2 = load i64, i64* %x.addr, align 8, !dbg !21308, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21309, !tbaa !2436
  %sub = sub nsw i32 64, %3, !dbg !21310
  %sh_prom1 = zext i32 %sub to i64, !dbg !21311
  %shr = lshr i64 %2, %sh_prom1, !dbg !21311
  %or = or i64 %shl, %shr, !dbg !21312
  ret i64 %or, !dbg !21313
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #0 !dbg !21314 !ctir !2239 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21315, metadata !DIExpression()), !dbg !21316
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21317, metadata !DIExpression()), !dbg !21318
  %0 = load i64, i64* %x.addr, align 8, !dbg !21319, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21320, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21321
  %shr = lshr i64 %0, %sh_prom, !dbg !21321
  %2 = load i64, i64* %x.addr, align 8, !dbg !21322, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21323, !tbaa !2436
  %sub = sub nsw i32 64, %3, !dbg !21324
  %sh_prom1 = zext i32 %sub to i64, !dbg !21325
  %shl = shl i64 %2, %sh_prom1, !dbg !21325
  %or = or i64 %shr, %shl, !dbg !21326
  ret i64 %or, !dbg !21327
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #0 !dbg !21328 !ctir !2244 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21329, metadata !DIExpression()), !dbg !21330
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21331, metadata !DIExpression()), !dbg !21332
  %0 = load i32, i32* %x.addr, align 4, !dbg !21333, !tbaa !2436
  %1 = load i32, i32* %n.addr, align 4, !dbg !21334, !tbaa !2436
  %shl = shl i32 %0, %1, !dbg !21335
  %2 = load i32, i32* %x.addr, align 4, !dbg !21336, !tbaa !2436
  %3 = load i32, i32* %n.addr, align 4, !dbg !21337, !tbaa !2436
  %sub = sub nsw i32 32, %3, !dbg !21338
  %shr = lshr i32 %2, %sub, !dbg !21339
  %or = or i32 %shl, %shr, !dbg !21340
  ret i32 %or, !dbg !21341
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #0 !dbg !21342 !ctir !2244 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21343, metadata !DIExpression()), !dbg !21344
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21345, metadata !DIExpression()), !dbg !21346
  %0 = load i32, i32* %x.addr, align 4, !dbg !21347, !tbaa !2436
  %1 = load i32, i32* %n.addr, align 4, !dbg !21348, !tbaa !2436
  %shr = lshr i32 %0, %1, !dbg !21349
  %2 = load i32, i32* %x.addr, align 4, !dbg !21350, !tbaa !2436
  %3 = load i32, i32* %n.addr, align 4, !dbg !21351, !tbaa !2436
  %sub = sub nsw i32 32, %3, !dbg !21352
  %shl = shl i32 %2, %sub, !dbg !21353
  %or = or i32 %shr, %shl, !dbg !21354
  ret i32 %or, !dbg !21355
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #0 !dbg !21356 !ctir !2247 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21357, metadata !DIExpression()), !dbg !21358
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21359, metadata !DIExpression()), !dbg !21360
  %0 = load i64, i64* %x.addr, align 8, !dbg !21361, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21362, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21363
  %shl = shl i64 %0, %sh_prom, !dbg !21363
  %2 = load i64, i64* %x.addr, align 8, !dbg !21364, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21365, !tbaa !2436
  %conv = sext i32 %3 to i64, !dbg !21365
  %sub = sub i64 64, %conv, !dbg !21366
  %shr = lshr i64 %2, %sub, !dbg !21367
  %or = or i64 %shl, %shr, !dbg !21368
  ret i64 %or, !dbg !21369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #0 !dbg !21370 !ctir !2247 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21371, metadata !DIExpression()), !dbg !21372
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21373, metadata !DIExpression()), !dbg !21374
  %0 = load i64, i64* %x.addr, align 8, !dbg !21375, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21376, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21377
  %shr = lshr i64 %0, %sh_prom, !dbg !21377
  %2 = load i64, i64* %x.addr, align 8, !dbg !21378, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21379, !tbaa !2436
  %conv = sext i32 %3 to i64, !dbg !21379
  %sub = sub i64 64, %conv, !dbg !21380
  %shl = shl i64 %2, %sub, !dbg !21381
  %or = or i64 %shr, %shl, !dbg !21382
  ret i64 %or, !dbg !21383
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #0 !dbg !21384 !ctir !2249 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21385, metadata !DIExpression()), !dbg !21386
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21387, metadata !DIExpression()), !dbg !21388
  %0 = load i16, i16* %x.addr, align 2, !dbg !21389, !tbaa !5835
  %conv = zext i16 %0 to i32, !dbg !21390
  %1 = load i32, i32* %n.addr, align 4, !dbg !21391, !tbaa !2436
  %shl = shl i32 %conv, %1, !dbg !21392
  %2 = load i16, i16* %x.addr, align 2, !dbg !21393, !tbaa !5835
  %conv1 = zext i16 %2 to i32, !dbg !21394
  %3 = load i32, i32* %n.addr, align 4, !dbg !21395, !tbaa !2436
  %sub = sub nsw i32 16, %3, !dbg !21396
  %shr = lshr i32 %conv1, %sub, !dbg !21397
  %or = or i32 %shl, %shr, !dbg !21398
  %and = and i32 %or, 65535, !dbg !21399
  %conv2 = trunc i32 %and to i16, !dbg !21400
  ret i16 %conv2, !dbg !21401
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #0 !dbg !21402 !ctir !2249 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21403, metadata !DIExpression()), !dbg !21404
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21405, metadata !DIExpression()), !dbg !21406
  %0 = load i16, i16* %x.addr, align 2, !dbg !21407, !tbaa !5835
  %conv = zext i16 %0 to i32, !dbg !21408
  %1 = load i32, i32* %n.addr, align 4, !dbg !21409, !tbaa !2436
  %shr = lshr i32 %conv, %1, !dbg !21410
  %2 = load i16, i16* %x.addr, align 2, !dbg !21411, !tbaa !5835
  %conv1 = zext i16 %2 to i32, !dbg !21412
  %3 = load i32, i32* %n.addr, align 4, !dbg !21413, !tbaa !2436
  %sub = sub nsw i32 16, %3, !dbg !21414
  %shl = shl i32 %conv1, %sub, !dbg !21415
  %or = or i32 %shr, %shl, !dbg !21416
  %and = and i32 %or, 65535, !dbg !21417
  %conv2 = trunc i32 %and to i16, !dbg !21418
  ret i16 %conv2, !dbg !21419
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #0 !dbg !21420 !ctir !2253 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21421, metadata !DIExpression()), !dbg !21422
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21423, metadata !DIExpression()), !dbg !21424
  %0 = load i8, i8* %x.addr, align 1, !dbg !21425, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !21426
  %1 = load i32, i32* %n.addr, align 4, !dbg !21427, !tbaa !2436
  %shl = shl i32 %conv, %1, !dbg !21428
  %2 = load i8, i8* %x.addr, align 1, !dbg !21429, !tbaa !2497
  %conv1 = zext i8 %2 to i32, !dbg !21430
  %3 = load i32, i32* %n.addr, align 4, !dbg !21431, !tbaa !2436
  %sub = sub nsw i32 8, %3, !dbg !21432
  %shr = lshr i32 %conv1, %sub, !dbg !21433
  %or = or i32 %shl, %shr, !dbg !21434
  %and = and i32 %or, 255, !dbg !21435
  %conv2 = trunc i32 %and to i8, !dbg !21436
  ret i8 %conv2, !dbg !21437
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #0 !dbg !21438 !ctir !2253 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21439, metadata !DIExpression()), !dbg !21440
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21441, metadata !DIExpression()), !dbg !21442
  %0 = load i8, i8* %x.addr, align 1, !dbg !21443, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !21444
  %1 = load i32, i32* %n.addr, align 4, !dbg !21445, !tbaa !2436
  %shr = lshr i32 %conv, %1, !dbg !21446
  %2 = load i8, i8* %x.addr, align 1, !dbg !21447, !tbaa !2497
  %conv1 = zext i8 %2 to i32, !dbg !21448
  %3 = load i32, i32* %n.addr, align 4, !dbg !21449, !tbaa !2436
  %sub = sub nsw i32 8, %3, !dbg !21450
  %shl = shl i32 %conv1, %sub, !dbg !21451
  %or = or i32 %shr, %shl, !dbg !21452
  %and = and i32 %or, 255, !dbg !21453
  %conv2 = trunc i32 %and to i8, !dbg !21454
  ret i8 %conv2, !dbg !21455
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21456 !ctir !731 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !1660
  %p2 = alloca i8*, align 8, !ctir !1660
  %c1 = alloca i8, align 1, !ctir !591
  %c2 = alloca i8, align 1, !ctir !591
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21458, metadata !DIExpression()), !dbg !21459
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21460, metadata !DIExpression()), !dbg !21461
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21462, metadata !DIExpression()), !dbg !21463
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21464, !tbaa !2442
  store i8* %0, i8** %p1, align 8, !dbg !21463, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21465, metadata !DIExpression()), !dbg !21466
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21467, !tbaa !2442
  store i8* %1, i8** %p2, align 8, !dbg !21466, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21468, metadata !DIExpression()), !dbg !21469
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21470, metadata !DIExpression()), !dbg !21471
  %2 = load i8*, i8** %p1, align 8, !dbg !21472, !tbaa !2442
  %3 = load i8*, i8** %p2, align 8, !dbg !21474, !tbaa !2442
  %cmp = icmp eq i8* %2, %3, !dbg !21475
  br i1 %cmp, label %if.then, label %if.end, !dbg !21476

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21477
  br label %return, !dbg !21477

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21478

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21479, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !21481, !tbaa !2497, !ctir !1661
  %conv = zext i8 %5 to i32, !dbg !21481
  %call = call i32 @c_tolower(i32 %conv), !dbg !21482
  %conv1 = trunc i32 %call to i8, !dbg !21482
  store i8 %conv1, i8* %c1, align 1, !dbg !21483, !tbaa !2497
  %6 = load i8*, i8** %p2, align 8, !dbg !21484, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !21485, !tbaa !2497, !ctir !1661
  %conv2 = zext i8 %7 to i32, !dbg !21485
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21486
  %conv4 = trunc i32 %call3 to i8, !dbg !21486
  store i8 %conv4, i8* %c2, align 1, !dbg !21487, !tbaa !2497
  %8 = load i8, i8* %c1, align 1, !dbg !21488, !tbaa !2497
  %conv5 = zext i8 %8 to i32, !dbg !21488
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21490
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21491

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21492

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21493, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21493
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21493, !tbaa !2442
  %10 = load i8*, i8** %p2, align 8, !dbg !21494, !tbaa !2442
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21494
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21494, !tbaa !2442
  br label %do.cond, !dbg !21495

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21496, !tbaa !2497
  %conv11 = zext i8 %11 to i32, !dbg !21496
  %12 = load i8, i8* %c2, align 1, !dbg !21497, !tbaa !2497
  %conv12 = zext i8 %12 to i32, !dbg !21497
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21498
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21495, !llvm.loop !21499

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21501, !tbaa !2497
  %conv15 = zext i8 %13 to i32, !dbg !21501
  %14 = load i8, i8* %c2, align 1, !dbg !21503, !tbaa !2497
  %conv16 = zext i8 %14 to i32, !dbg !21503
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21504
  store i32 %sub, i32* %retval, align 4, !dbg !21505
  br label %return, !dbg !21505

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21506
  ret i32 %15, !dbg !21506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #0 !dbg !21507 !ctir !2263 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2299
  %prev_fail = alloca i8, align 1, !ctir !2299
  %fclose_fail = alloca i8, align 1, !ctir !2299
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21509, metadata !DIExpression()), !dbg !21510
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21511, metadata !DIExpression()), !dbg !21512
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21513, !tbaa !2442
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #13, !dbg !21514
  %cmp = icmp ne i64 %call, 0, !dbg !21515
  %frombool = zext i1 %cmp to i8, !dbg !21512
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21512, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21516, metadata !DIExpression()), !dbg !21517
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21518, !tbaa !2442
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #13, !dbg !21518
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21519
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21517
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21517, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21520, metadata !DIExpression()), !dbg !21521
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21522, !tbaa !2442
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21523
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21524
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21521
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21521, !tbaa !2461
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21525, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !21525
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21527

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21528, !tbaa !2461
  %tobool7 = trunc i8 %4 to i1, !dbg !21528
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21529

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21530, !tbaa !2461
  %tobool8 = trunc i8 %5 to i1, !dbg !21530
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21531

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #17, !dbg !21532
  %6 = load i32, i32* %call10, align 4, !dbg !21532, !tbaa !2436, !ctir !27
  %cmp11 = icmp ne i32 %6, 9, !dbg !21533
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21534

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21535, !tbaa !2461
  %tobool12 = trunc i8 %7 to i1, !dbg !21535
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21538

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #17, !dbg !21539
  store i32 0, i32* %call14, align 4, !dbg !21540, !tbaa !2436, !ctir !27
  br label %if.end, !dbg !21539

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21541
  br label %return, !dbg !21541

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21542
  br label %return, !dbg !21542

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21543
  ret i32 %8, !dbg !21543
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #0 !dbg !21544 !ctir !572 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21546, metadata !DIExpression()), !dbg !21547
  call void @llvm.dbg.declare(metadata i8** %result, metadata !21548, metadata !DIExpression()), !dbg !21549
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21550, !tbaa !2442
  %call = call i8* @mdir_name(i8* %0), !dbg !21551
  store i8* %call, i8** %result, align 8, !dbg !21549, !tbaa !2442
  %1 = load i8*, i8** %result, align 8, !dbg !21552, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !21552
  br i1 %tobool, label %if.end, label %if.then, !dbg !21554

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !21555
  unreachable, !dbg !21555

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !21556, !tbaa !2442
  ret i8* %2, !dbg !21557
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !21558 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !146
  %h = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21560, metadata !DIExpression()), !dbg !21561
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !21562, metadata !DIExpression()), !dbg !21563
  call void @llvm.dbg.declare(metadata i8** %s, metadata !21564, metadata !DIExpression()), !dbg !21565
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21566, metadata !DIExpression()), !dbg !21567
  store i64 0, i64* %h, align 8, !dbg !21567, !tbaa !2579
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21568, !tbaa !2442
  store i8* %0, i8** %s, align 8, !dbg !21570, !tbaa !2442
  br label %for.cond, !dbg !21571

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !21572, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !21574, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !21575
  br i1 %tobool, label %for.body, label %for.end, !dbg !21575

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !21576, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !21577, !tbaa !2497, !ctir !147
  %conv = sext i8 %4 to i64, !dbg !21577
  %5 = load i64, i64* %h, align 8, !dbg !21578, !tbaa !2579
  %shl = shl i64 %5, 9, !dbg !21579
  %6 = load i64, i64* %h, align 8, !dbg !21580, !tbaa !2579
  %shr = lshr i64 %6, 55, !dbg !21581
  %or = or i64 %shl, %shr, !dbg !21582
  %add = add i64 %conv, %or, !dbg !21583
  store i64 %add, i64* %h, align 8, !dbg !21584, !tbaa !2579
  br label %for.inc, !dbg !21585

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !21586, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21586
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !21586, !tbaa !2442
  br label %for.cond, !dbg !21587, !llvm.loop !21588

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !21590, !tbaa !2579
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !21591, !tbaa !2579
  %rem = urem i64 %8, %9, !dbg !21592
  ret i64 %rem, !dbg !21593
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #0 !dbg !21594 !ctir !2309 {
entry:
  %codeset = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !21596, metadata !DIExpression()), !dbg !21597
  %call = call i8* @nl_langinfo(i32 14) #13, !dbg !21598
  store i8* %call, i8** %codeset, align 8, !dbg !21599, !tbaa !2442
  %0 = load i8*, i8** %codeset, align 8, !dbg !21600, !tbaa !2442
  %cmp = icmp eq i8* %0, null, !dbg !21602
  br i1 %cmp, label %if.then, label %if.end, !dbg !21603

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.533, i64 0, i64 0), i8** %codeset, align 8, !dbg !21604, !tbaa !2442
  br label %if.end, !dbg !21605

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !21606, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !21606, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !21606, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !21606
  %cmp1 = icmp eq i32 %conv, 0, !dbg !21610
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !21611

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.534, i64 0, i64 0), i8** %codeset, align 8, !dbg !21612, !tbaa !2442
  br label %if.end4, !dbg !21613

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !21614, !tbaa !2442
  ret i8* %3, !dbg !21615
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #0 !dbg !21616 !ctir !2313 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %fd = alloca i32, align 4, !ctir !27
  %result = alloca i32, align 4, !ctir !27
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21618, metadata !DIExpression()), !dbg !21619
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21620, metadata !DIExpression()), !dbg !21621
  store i32 0, i32* %saved_errno, align 4, !dbg !21621, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21622, metadata !DIExpression()), !dbg !21623
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21624, metadata !DIExpression()), !dbg !21625
  store i32 0, i32* %result, align 4, !dbg !21625, !tbaa !2436
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21626, !tbaa !2442
  %call = call i32 @fileno(%struct._IO_FILE* %0) #13, !dbg !21627
  store i32 %call, i32* %fd, align 4, !dbg !21628, !tbaa !2436
  %1 = load i32, i32* %fd, align 4, !dbg !21629, !tbaa !2436
  %cmp = icmp slt i32 %1, 0, !dbg !21631
  br i1 %cmp, label %if.then, label %if.end, !dbg !21632

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21633, !tbaa !2442
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21634
  store i32 %call1, i32* %retval, align 4, !dbg !21635
  br label %return, !dbg !21635

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21636, !tbaa !2442
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #13, !dbg !21636
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21636
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21638

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21639, !tbaa !2442
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #13, !dbg !21640
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #13, !dbg !21641
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21642
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21643

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21644, !tbaa !2442
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21645
  %tobool = icmp ne i32 %call7, 0, !dbg !21645
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21646

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #17, !dbg !21647
  %6 = load i32, i32* %call9, align 4, !dbg !21647, !tbaa !2436, !ctir !27
  store i32 %6, i32* %saved_errno, align 4, !dbg !21648, !tbaa !2436
  br label %if.end10, !dbg !21649

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21650, !tbaa !2442
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21651
  store i32 %call11, i32* %result, align 4, !dbg !21652, !tbaa !2436
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21653, !tbaa !2436
  %cmp12 = icmp ne i32 %8, 0, !dbg !21655
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21656

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21657, !tbaa !2436
  %call14 = call i32* @__errno_location() #17, !dbg !21659
  store i32 %9, i32* %call14, align 4, !dbg !21660, !tbaa !2436, !ctir !27
  store i32 -1, i32* %result, align 4, !dbg !21661, !tbaa !2436
  br label %if.end15, !dbg !21662

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21663, !tbaa !2436
  store i32 %10, i32* %retval, align 4, !dbg !21664
  br label %return, !dbg !21664

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21665
  ret i32 %11, !dbg !21665
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #0 !dbg !21666 !ctir !2352 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21668, metadata !DIExpression()), !dbg !21669
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21670, !tbaa !2442
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !21672
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21673

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21674, !tbaa !2442
  %call = call i32 @__freading(%struct._IO_FILE* %1) #13, !dbg !21674
  %cmp1 = icmp ne i32 %call, 0, !dbg !21674
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21675

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21676, !tbaa !2442
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !21677
  store i32 %call2, i32* %retval, align 4, !dbg !21678
  br label %return, !dbg !21678

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21679, !tbaa !2442
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !21680
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21681, !tbaa !2442
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !21682
  store i32 %call3, i32* %retval, align 4, !dbg !21683
  br label %return, !dbg !21683

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21684
  ret i32 %5, !dbg !21684
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #0 !dbg !21685 !ctir !2388 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21686, metadata !DIExpression()), !dbg !21687
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21688, !tbaa !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !21690, !ctir !2355
  %1 = load i32, i32* %_flags, align 8, !dbg !21690, !tbaa !21691, !ctir !27
  %and = and i32 %1, 256, !dbg !21693
  %tobool = icmp ne i32 %and, 0, !dbg !21693
  br i1 %tobool, label %if.then, label %if.end, !dbg !21694

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21695, !tbaa !2442
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !21696
  br label %if.end, !dbg !21696

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #0 !dbg !21698 !ctir !2393 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !2429
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21700, metadata !DIExpression()), !dbg !21701
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !21702, metadata !DIExpression()), !dbg !21703
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !21704, metadata !DIExpression()), !dbg !21705
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21706, !tbaa !2442
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !21708, !ctir !2396
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !21708, !tbaa !21709, !ctir !143
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21710, !tbaa !2442
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !21711, !ctir !2396
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !21711, !tbaa !21712, !ctir !143
  %cmp = icmp eq i8* %1, %3, !dbg !21713
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !21714

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21715, !tbaa !2442
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !21716, !ctir !2396
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !21716, !tbaa !21717, !ctir !143
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21718, !tbaa !2442
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !21719, !ctir !2396
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !21719, !tbaa !21720, !ctir !143
  %cmp1 = icmp eq i8* %5, %7, !dbg !21721
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !21722

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21723, !tbaa !2442
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !21724, !ctir !2396
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !21724, !tbaa !21725, !ctir !143
  %cmp3 = icmp eq i8* %9, null, !dbg !21726
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !21727

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !21728, metadata !DIExpression()), !dbg !21730
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21731, !tbaa !2442
  %call = call i32 @fileno(%struct._IO_FILE* %10) #13, !dbg !21732
  %11 = load i64, i64* %offset.addr, align 8, !dbg !21733, !tbaa !2579
  %12 = load i32, i32* %whence.addr, align 4, !dbg !21734, !tbaa !2436
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #13, !dbg !21735
  store i64 %call4, i64* %pos, align 8, !dbg !21730, !tbaa !2579
  %13 = load i64, i64* %pos, align 8, !dbg !21736, !tbaa !2579
  %cmp5 = icmp eq i64 %13, -1, !dbg !21738
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21739

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21740
  br label %return, !dbg !21740

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21742, !tbaa !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !21743, !ctir !2396
  %15 = load i32, i32* %_flags, align 8, !dbg !21744, !tbaa !21691, !ctir !27
  %and = and i32 %15, -17, !dbg !21744
  store i32 %and, i32* %_flags, align 8, !dbg !21744, !tbaa !21691, !ctir !27
  %16 = load i64, i64* %pos, align 8, !dbg !21745, !tbaa !2579
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21746, !tbaa !2442
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !21747, !ctir !2396
  store i64 %16, i64* %_offset, align 8, !dbg !21748, !tbaa !21749, !ctir !305
  store i32 0, i32* %retval, align 4, !dbg !21750
  br label %return, !dbg !21750

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21751, !tbaa !2442
  %19 = load i64, i64* %offset.addr, align 8, !dbg !21752, !tbaa !2579
  %20 = load i32, i32* %whence.addr, align 4, !dbg !21753, !tbaa !2436
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !21754
  store i32 %call8, i32* %retval, align 4, !dbg !21755
  br label %return, !dbg !21755

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !21756
  ret i32 %21, !dbg !21756
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind returns_twice }

!llvm.dbg.cu = !{!2, !1038, !1043, !1647, !1049, !1652, !1657, !1664, !1100, !1704, !1709, !1143, !1712, !1740, !1779, !1811, !1816, !1819, !1828, !1840, !1150, !1843, !1282, !1344, !1854, !1861, !1866, !1883, !1900, !1913, !1396, !1437, !1952, !1959, !1986, !2019, !2035, !1548, !2095, !2110, !2113, !2120, !2125, !2128, !2138, !2153, !2162, !1558, !2178, !2233, !2236, !2257, !2260, !2300, !2303, !2306, !2310, !2349, !2390}
!llvm.ident = !{!2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430}
!llvm.module.flags = !{!2431, !2432, !2433, !2434}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "exit_status", scope: !2, file: !3, line: 800, type: !27, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !161, globals: !816, nameTableKind: None)
!3 = !DIFile(filename: "src/ls.c", directory: "/home/mbarbar/clone/coreutils")
!4 = !{!5, !13, !20, !26, !36, !48, !53, !79, !85, !90, !95, !109, !117, !123, !129, !137}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format", file: !3, line: 419, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12}
!8 = !DIEnumerator(name: "long_format", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "one_per_line", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "many_per_line", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "horizontal", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "with_commas", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !3, line: 576, baseType: !6, size: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19}
!15 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "DEREF_ALWAYS", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_style", file: !3, line: 534, baseType: !6, size: 32, elements: !21)
!21 = !{!22, !23, !24, !25}
!22 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "slash", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "file_type", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "classify", value: 3, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sort_type", file: !3, line: 470, baseType: !27, size: 32, elements: !28)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "sort_none", value: -1)
!30 = !DIEnumerator(name: "sort_name", value: 0)
!31 = !DIEnumerator(name: "sort_extension", value: 1)
!32 = !DIEnumerator(name: "sort_size", value: 2)
!33 = !DIEnumerator(name: "sort_version", value: 3)
!34 = !DIEnumerator(name: "sort_time", value: 4)
!35 = !DIEnumerator(name: "sort_numtypes", value: 5)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "filetype", file: !3, line: 164, baseType: !6, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47}
!38 = !DIEnumerator(name: "unknown", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "fifo", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "chardev", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "directory", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "blockdev", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "normal", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "symbolic_link", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "sock", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "whiteout", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "arg_directory", value: 9, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acl_type", file: !3, line: 192, baseType: !6, size: 32, elements: !49)
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "ACL_T_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "ACL_T_LSM_CONTEXT_ONLY", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "ACL_T_YES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_no", file: !3, line: 585, baseType: !6, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!55 = !DIEnumerator(name: "C_LEFT", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "C_RIGHT", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "C_END", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "C_RESET", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "C_NORM", value: 4, isUnsigned: true)
!60 = !DIEnumerator(name: "C_FILE", value: 5, isUnsigned: true)
!61 = !DIEnumerator(name: "C_DIR", value: 6, isUnsigned: true)
!62 = !DIEnumerator(name: "C_LINK", value: 7, isUnsigned: true)
!63 = !DIEnumerator(name: "C_FIFO", value: 8, isUnsigned: true)
!64 = !DIEnumerator(name: "C_SOCK", value: 9, isUnsigned: true)
!65 = !DIEnumerator(name: "C_BLK", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "C_CHR", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "C_MISSING", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "C_ORPHAN", value: 13, isUnsigned: true)
!69 = !DIEnumerator(name: "C_EXEC", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "C_DOOR", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "C_SETUID", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "C_SETGID", value: 17, isUnsigned: true)
!73 = !DIEnumerator(name: "C_STICKY", value: 18, isUnsigned: true)
!74 = !DIEnumerator(name: "C_OTHER_WRITABLE", value: 19, isUnsigned: true)
!75 = !DIEnumerator(name: "C_STICKY_OTHER_WRITABLE", value: 20, isUnsigned: true)
!76 = !DIEnumerator(name: "C_CAP", value: 21, isUnsigned: true)
!77 = !DIEnumerator(name: "C_MULTIHARDLINK", value: 22, isUnsigned: true)
!78 = !DIEnumerator(name: "C_CLR_TO_EOL", value: 23, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_type", file: !3, line: 456, baseType: !6, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "time_mtime", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "time_ctime", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "time_atime", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "time_numtypes", value: 3, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 672, baseType: !6, size: 32, elements: !86)
!86 = !{!87, !88, !89}
!87 = !DIEnumerator(name: "IGNORE_DEFAULT", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "IGNORE_DOT_AND_DOTDOT", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "IGNORE_MINIMAL", value: 2, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "when_type", file: !3, line: 569, baseType: !6, size: 32, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "when_never", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "when_always", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "when_if_tty", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !96, line: 32, baseType: !6, size: 32, elements: !97)
!96 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/clone/coreutils")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!98 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !110, line: 26, baseType: !6, size: 32, elements: !111)
!110 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/clone/coreutils")
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_style", file: !3, line: 433, baseType: !6, size: 32, elements: !118)
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "full_iso_time_style", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "long_iso_time_style", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "iso_time_style", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "locale_time_style", value: 3, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 19, baseType: !6, size: 32, elements: !125)
!124 = !DIFile(filename: "./lib/mbsalign.h", directory: "/home/mbarbar/clone/coreutils")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "MBS_ALIGN_LEFT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MBS_ALIGN_RIGHT", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "MBS_ALIGN_CENTER", value: 2, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "parse_state", file: !3, line: 2475, baseType: !6, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136}
!131 = !DIEnumerator(name: "PS_START", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "PS_2", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "PS_3", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "PS_4", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "PS_DONE", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "PS_FAIL", value: 6, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !138, file: !3, line: 2286, baseType: !6, size: 32, elements: !153)
!138 = distinct !DISubprogram(name: "get_funky_string", scope: !3, file: !3, line: 2281, type: !139, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!139 = !DISubroutineType(types: !140)
!140 = !{!141, !142, !145, !141, !148}
!141 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 46, baseType: !151)
!150 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar")
!151 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!152 = !{}
!153 = !{!154, !155, !156, !157, !158, !159, !160}
!154 = !DIEnumerator(name: "ST_GND", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ST_BACKSLASH", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ST_OCTAL", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ST_HEX", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ST_CARET", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ST_END", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "ST_ERROR", value: 6, isUnsigned: true)
!161 = !{!162, !167, !168, !149, !171, !148, !143, !151, !176, !146, !27, !178, !179, !182, !183, !235, !237, !142, !141, !164, !219, !244, !248, !252, !253, !261, !268, !320, !324, !328, !174, !330, !331, !333, !335, !258, !337, !260, !339, !341, !343, !346, !348, !395, !397, !401, !403, !413, !417, !508, !510, !355, !511, !147, !516, !528, !532, !535, !537, !539, !543, !546, !550, !553, !557, !558, !560, !144, !561, !564, !565, !567, !325, !568, !570, !572, !574, !577, !579, !581, !586, !587, !589, !592, !593, !599, !602, !604, !139, !607, !609, !613, !195, !197, !591, !622, !625, !627, !629, !631, !635, !638, !641, !654, !655, !657, !659, !661, !663, !664, !666, !667, !201, !228, !212, !203, !205, !669, !199, !181, !672, !674, !676, !680, !682, !684, !686, !688, !690, !693, !695, !698, !700, !702, !704, !715, !723, !725, !727, !719, !728, !731, !733, !735, !737, !739, !399, !741, !743, !744, !745, !747, !749, !751, !753, !755, !762, !763, !765, !767, !769, !770, !773, !776, !778, !780, !782, !800, !802, !805, !807, !815}
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !163, line: 7, baseType: !164)
!163 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !165, line: 160, baseType: !166)
!165 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!166 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !169, line: 102, baseType: !170)
!169 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !165, line: 73, baseType: !151)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !172, line: 72, baseType: !173)
!172 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !27}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!178 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !180, line: 85, baseType: !181)
!180 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !165, line: 152, baseType: !166)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fileinfo", file: !3, line: 199, size: 1600, elements: !186)
!186 = !{!187, !188, !189, !190, !226, !227, !229, !230, !231, !232, !233, !234}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !185, file: !3, line: 202, baseType: !143, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "linkname", scope: !185, file: !3, line: 205, baseType: !143, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_name", scope: !185, file: !3, line: 208, baseType: !143, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !185, file: !3, line: 210, baseType: !191, size: 1152, offset: 192)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !193)
!192 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!193 = !{!194, !196, !198, !200, !202, !204, !206, !207, !208, !209, !211, !213, !220, !221, !222}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !191, file: !192, line: 48, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !165, line: 145, baseType: !151)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !191, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !165, line: 148, baseType: !151)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !191, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !165, line: 151, baseType: !151)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !191, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !165, line: 150, baseType: !6)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !191, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !165, line: 146, baseType: !6)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !191, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !165, line: 147, baseType: !6)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !191, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !191, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !191, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !191, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !165, line: 174, baseType: !166)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !191, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !165, line: 179, baseType: !166)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !191, file: !192, line: 91, baseType: !214, size: 128, offset: 576)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !216)
!215 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !214, file: !215, line: 11, baseType: !164, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !214, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !165, line: 196, baseType: !166)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !191, file: !192, line: 92, baseType: !214, size: 128, offset: 704)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !191, file: !192, line: 93, baseType: !214, size: 128, offset: 832)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !191, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 192, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 3)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "filetype", scope: !185, file: !3, line: 212, baseType: !36, size: 32, offset: 1344)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "linkmode", scope: !185, file: !3, line: 216, baseType: !228, size: 32, offset: 1376)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !180, line: 69, baseType: !201)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "scontext", scope: !185, file: !3, line: 219, baseType: !143, size: 64, offset: 1408)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stat_ok", scope: !185, file: !3, line: 221, baseType: !141, size: 8, offset: 1472)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "linkok", scope: !185, file: !3, line: 225, baseType: !141, size: 8, offset: 1480)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "acl_type", scope: !185, file: !3, line: 229, baseType: !48, size: 32, offset: 1504)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "has_capability", scope: !185, file: !3, line: 232, baseType: !141, size: 8, offset: 1536)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "quoted", scope: !185, file: !3, line: 235, baseType: !27, size: 32, offset: 1568)
!235 = !DISubroutineType(types: !236)
!236 = !{!27, !27, !142}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pending", file: !3, line: 367, size: 256, elements: !239)
!239 = !{!240, !241, !242, !243}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !238, file: !3, line: 369, baseType: !143, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "realname", scope: !238, file: !3, line: 373, baseType: !143, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "command_line_arg", scope: !238, file: !3, line: 374, baseType: !141, size: 8, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !3, line: 375, baseType: !237, size: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !246, line: 69, baseType: !247)
!246 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/clone/coreutils")
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !246, line: 67, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !250)
!249 = !DIFile(filename: "./lib/time.h", directory: "/home/mbarbar/clone/coreutils")
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !249, line: 764, flags: DIFlagFwdDecl)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !255, line: 7, size: 128, elements: !256)
!255 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mbarbar/clone/coreutils")
!256 = !{!257, !259}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !254, file: !255, line: 9, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !180, line: 47, baseType: !197)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !254, file: !255, line: 10, baseType: !260, size: 64, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !180, line: 59, baseType: !195)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 3072, elements: !266)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_str", file: !3, line: 244, size: 128, elements: !263)
!263 = !{!264, !265}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !262, file: !3, line: 246, baseType: !149, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !262, file: !3, line: 247, baseType: !146, size: 64, offset: 64)
!266 = !{!267}
!267 = !DISubrange(count: 24)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !271)
!270 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !273)
!272 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !289, !291, !292, !293, !294, !295, !297, !301, !304, !306, !309, !312, !313, !314, !315, !316}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !271, file: !272, line: 51, baseType: !27, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !271, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !271, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !271, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !271, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !271, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !271, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !271, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !271, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !271, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !271, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !271, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !271, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !272, line: 36, flags: DIFlagFwdDecl)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !271, file: !272, line: 70, baseType: !290, size: 64, offset: 832)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !271, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !271, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !271, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !271, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !271, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!296 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !271, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 1)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !271, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !272, line: 43, baseType: null)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !271, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !165, line: 153, baseType: !166)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !271, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !272, line: 37, flags: DIFlagFwdDecl)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !271, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !272, line: 38, flags: DIFlagFwdDecl)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !271, file: !272, line: 93, baseType: !290, size: 64, offset: 1344)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !271, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !271, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !271, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !271, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 160, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 20)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !322, line: 8, baseType: !323)
!322 = !DIFile(filename: "/usr/include/bits/types/sig_atomic_t.h", directory: "")
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !165, line: 214, baseType: !27)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, elements: !326)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!326 = !{!327}
!327 = !DISubrange(count: -1)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !96, line: 270, flags: DIFlagFwdDecl)
!330 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !27)
!331 = !DISubroutineType(types: !332)
!332 = !{!141, !53}
!333 = !DISubroutineType(types: !334)
!334 = !{!149, !176, !149}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!337 = !DISubroutineType(types: !338)
!338 = !{!141, !176, !176}
!339 = !DISubroutineType(types: !340)
!340 = !{null, !167}
!341 = !DISubroutineType(types: !342)
!342 = !{null}
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2048, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 256)
!346 = !DISubroutineType(types: !347)
!347 = !{!254}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !351, line: 174, size: 704, elements: !352)
!351 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mbarbar/clone/coreutils")
!352 = !{!353, !354, !362, !363, !364, !365, !370, !371, !382, !391, !392, !393, !394}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !350, file: !351, line: 176, baseType: !149, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !350, file: !351, line: 177, baseType: !355, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !351, line: 167, size: 128, elements: !357)
!357 = !{!358, !359, !360}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !356, file: !351, line: 169, baseType: !143, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !356, file: !351, line: 170, baseType: !355, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !356, file: !351, line: 171, baseType: !361, offset: 128)
!361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, elements: !326)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !350, file: !351, line: 178, baseType: !143, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !350, file: !351, line: 179, baseType: !143, size: 64, offset: 192)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !350, file: !351, line: 180, baseType: !143, size: 64, offset: 256)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !350, file: !351, line: 185, baseType: !366, size: 64, offset: 320)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 181, size: 64, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !366, file: !351, line: 183, baseType: !149, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !366, file: !351, line: 184, baseType: !167, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !350, file: !351, line: 186, baseType: !149, size: 64, offset: 384)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !350, file: !351, line: 193, baseType: !372, size: 64, offset: 448)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 189, size: 64, elements: !373)
!373 = !{!374, !378}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !372, file: !351, line: 191, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DISubroutineType(types: !377)
!377 = !{!167, !149}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !372, file: !351, line: 192, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{!167, !167, !149}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !350, file: !351, line: 198, baseType: !383, size: 64, offset: 512)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 194, size: 64, elements: !384)
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !383, file: !351, line: 196, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !383, file: !351, line: 197, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !167, !167}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !350, file: !351, line: 200, baseType: !167, size: 64, offset: 576)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !350, file: !351, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !350, file: !351, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !350, file: !351, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !237}
!397 = !DISubroutineType(types: !398)
!398 = !{null, !399}
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!401 = !DISubroutineType(types: !402)
!402 = !{null, !141}
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !404, line: 7, baseType: !405)
!404 = !DIFile(filename: "/usr/include/bits/types/sigset_t.h", directory: "")
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !406, line: 8, baseType: !407)
!406 = !DIFile(filename: "/usr/include/bits/types/__sigset_t.h", directory: "")
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 5, size: 1024, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !407, file: !406, line: 7, baseType: !410, size: 1024)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 1024, elements: !411)
!411 = !{!412}
!412 = !DISubrange(count: 16)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 384, elements: !415)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!415 = !{!416}
!416 = !DISubrange(count: 12)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !419, file: !418, line: 31, size: 64, elements: !426)
!418 = !DIFile(filename: "/usr/include/bits/sigaction.h", directory: "")
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !418, line: 27, size: 1216, elements: !420)
!420 = !{!421, !422, !423, !424}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !419, file: !418, line: 38, baseType: !417, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !419, file: !418, line: 46, baseType: !405, size: 1024, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !419, file: !418, line: 49, baseType: !27, size: 32, offset: 1088)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !419, file: !418, line: 52, baseType: !425, size: 64, offset: 1152)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!426 = !{!427, !428}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !417, file: !418, line: 34, baseType: !171, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !417, file: !418, line: 36, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{null, !27, !432, !167}
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !434, line: 124, baseType: !435)
!434 = !DIFile(filename: "/usr/include/bits/types/siginfo_t.h", directory: "")
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !434, line: 36, size: 1024, elements: !436)
!436 = !{!437, !438, !439, !440, !441}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !435, file: !434, line: 38, baseType: !27, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !435, file: !434, line: 40, baseType: !27, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !435, file: !434, line: 42, baseType: !27, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !435, file: !434, line: 48, baseType: !27, size: 32, offset: 96)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !435, file: !434, line: 123, baseType: !442, size: 896, offset: 128)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !435, file: !434, line: 51, size: 896, elements: !443)
!443 = !{!444, !448, !454, !466, !472, !481, !497, !502}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !442, file: !434, line: 53, baseType: !445, size: 896)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 896, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 28)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !442, file: !434, line: 60, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 56, size: 64, elements: !450)
!450 = !{!451, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !449, file: !434, line: 58, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !165, line: 154, baseType: !27)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !449, file: !434, line: 59, baseType: !203, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !442, file: !434, line: 68, baseType: !455, size: 128)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 63, size: 128, elements: !456)
!456 = !{!457, !458, !459}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !455, file: !434, line: 65, baseType: !27, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !455, file: !434, line: 66, baseType: !27, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !455, file: !434, line: 67, baseType: !460, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !461, line: 30, baseType: !462)
!461 = !DIFile(filename: "/usr/include/bits/types/__sigval_t.h", directory: "")
!462 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !461, line: 24, size: 64, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !462, file: !461, line: 26, baseType: !27, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !462, file: !461, line: 27, baseType: !167, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !442, file: !434, line: 76, baseType: !467, size: 128)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 71, size: 128, elements: !468)
!468 = !{!469, !470, !471}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !467, file: !434, line: 73, baseType: !452, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !467, file: !434, line: 74, baseType: !203, size: 32, offset: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !467, file: !434, line: 75, baseType: !460, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !442, file: !434, line: 86, baseType: !473, size: 256)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 79, size: 256, elements: !474)
!474 = !{!475, !476, !477, !478, !480}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !473, file: !434, line: 81, baseType: !452, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !473, file: !434, line: 82, baseType: !203, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !473, file: !434, line: 83, baseType: !27, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !473, file: !434, line: 84, baseType: !479, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !165, line: 156, baseType: !166)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !473, file: !434, line: 85, baseType: !479, size: 64, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !442, file: !434, line: 105, baseType: !482, size: 256)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 89, size: 256, elements: !483)
!483 = !{!484, !485, !487}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !482, file: !434, line: 91, baseType: !167, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !482, file: !434, line: 93, baseType: !486, size: 16, offset: 64)
!486 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !482, file: !434, line: 104, baseType: !488, size: 128, offset: 128)
!488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !482, file: !434, line: 94, size: 128, elements: !489)
!489 = !{!490, !495}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !488, file: !434, line: 101, baseType: !491, size: 128)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !488, file: !434, line: 97, size: 128, elements: !492)
!492 = !{!493, !494}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !491, file: !434, line: 99, baseType: !167, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !491, file: !434, line: 100, baseType: !167, size: 64, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !488, file: !434, line: 103, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !165, line: 42, baseType: !6)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !442, file: !434, line: 112, baseType: !498, size: 128)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 108, size: 128, elements: !499)
!499 = !{!500, !501}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !498, file: !434, line: 110, baseType: !166, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !498, file: !434, line: 111, baseType: !27, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !442, file: !434, line: 121, baseType: !503, size: 128)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 116, size: 128, elements: !504)
!504 = !{!505, !506, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !503, file: !434, line: 118, baseType: !167, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !503, file: !434, line: 119, baseType: !27, size: 32, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !503, file: !434, line: 120, baseType: !6, size: 32, offset: 96)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !146, !510}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ignore_pattern", file: !3, line: 690, size: 128, elements: !513)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !512, file: !3, line: 692, baseType: !146, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !512, file: !3, line: 693, baseType: !511, size: 64, offset: 64)
!516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 11264, elements: !526)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !519, line: 50, size: 256, elements: !520)
!519 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!520 = !{!521, !522, !523, !525}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !518, file: !519, line: 52, baseType: !146, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !518, file: !519, line: 55, baseType: !27, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !518, file: !519, line: 56, baseType: !524, size: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !518, file: !519, line: 57, baseType: !27, size: 32, offset: 192)
!526 = !{!527}
!527 = !DISubrange(count: 44)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 160, elements: !530)
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!530 = !{!531}
!531 = !DISubrange(count: 5)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 384, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 6)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !536, line: 61, baseType: !425)
!536 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/clone/coreutils")
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 160, elements: !530)
!538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 224, elements: !541)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!541 = !{!542}
!542 = !DISubrange(count: 7)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 512, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 8)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, size: 288, elements: !548)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !90)
!548 = !{!549}
!549 = !DISubrange(count: 9)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 640, elements: !551)
!551 = !{!552}
!552 = !DISubrange(count: 10)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !554, size: 128, elements: !555)
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!555 = !{!556}
!556 = !DISubrange(count: 4)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 320, elements: !530)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, elements: !326)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 48, elements: !533)
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 128, elements: !562)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !150, line: 35, baseType: !166)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !555)
!566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!141, !146}
!570 = !DISubroutineType(types: !571)
!571 = !{null, !146}
!572 = !DISubroutineType(types: !573)
!573 = !{!143, !146}
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 12288, elements: !575)
!575 = !{!416, !576}
!576 = !DISubrange(count: 128)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24576, elements: !578)
!578 = !{!563, !416, !576}
!579 = !DISubroutineType(types: !580)
!580 = !{!146, !146}
!581 = !DISubroutineType(types: !582)
!582 = !{!141, !583}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1024, elements: !585)
!585 = !{!576}
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbs_align_t", file: !124, line: 19, baseType: !123)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!589 = !DISubroutineType(types: !590)
!590 = !{!591, !144}
!591 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24, elements: !224)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "color_ext_type", file: !3, line: 601, size: 320, elements: !595)
!595 = !{!596, !597, !598}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !594, file: !3, line: 603, baseType: !262, size: 128)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !594, file: !3, line: 604, baseType: !262, size: 128, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !594, file: !3, line: 605, baseType: !593, size: 64, offset: 256)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 1600, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 25)
!602 = !DISubroutineType(types: !603)
!603 = !{!141}
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 34432, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 4304)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !146, !146, !141}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !611, line: 127, baseType: !612)
!611 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !611, line: 127, flags: DIFlagFwdDecl)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !615, line: 22, size: 2240, elements: !616)
!615 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!616 = !{!617, !618, !619, !620, !621}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !614, file: !615, line: 25, baseType: !197, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !614, file: !615, line: 26, baseType: !181, size: 64, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !614, file: !615, line: 31, baseType: !178, size: 16, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !614, file: !615, line: 32, baseType: !591, size: 8, offset: 144)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !614, file: !615, line: 33, baseType: !343, size: 2048, offset: 152)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 5216, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 652)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !141, !146, !146}
!627 = !DISubroutineType(types: !628)
!628 = !{!141, !260, !258}
!629 = !DISubroutineType(types: !630)
!630 = !{null, !260, !258}
!631 = !DISubroutineType(types: !632)
!632 = !{!149, !146, !633, !27, !399, !141, !510, !146}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 65536, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 8192)
!638 = !DISubroutineType(types: !639)
!639 = !{!149, !142, !149, !143, !633, !27, !148, !640}
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !643)
!642 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !645)
!644 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !646)
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !645, file: !644, line: 15, baseType: !27, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !645, file: !644, line: 20, baseType: !649, size: 32, offset: 32)
!649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !645, file: !644, line: 16, size: 32, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !649, file: !644, line: 18, baseType: !6, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !649, file: !644, line: 19, baseType: !653, size: 32)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 32, elements: !555)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !150, line: 74, baseType: !27)
!655 = !DISubroutineType(types: !656)
!656 = !{!141, !399}
!657 = !DISubroutineType(types: !658)
!658 = !{!143, !146, !141}
!659 = !DISubroutineType(types: !660)
!660 = !{!141, !661, !146}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !252}
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 16, elements: !562)
!667 = !DISubroutineType(types: !668)
!668 = !{!168, !146, !36, !258, !141, !146}
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 168, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 21)
!672 = !DISubroutineType(types: !673)
!673 = !{null, !143, !146, !146}
!674 = !DISubroutineType(types: !675)
!675 = !{!141, !146, !252}
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "cap_t", file: !677, line: 39, baseType: !678)
!677 = !DIFile(filename: "/usr/include/sys/capability.h", directory: "")
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "_cap_struct", file: !677, line: 39, flags: DIFlagFwdDecl)
!680 = !DISubroutineType(types: !681)
!681 = !{!141, !27}
!682 = !DISubroutineType(types: !683)
!683 = !{!27, !146, !252, !141}
!684 = !DISubroutineType(types: !685)
!685 = !{!27, !146, !252}
!686 = !DISubroutineType(types: !687)
!687 = !{null, !146, !252, !141}
!688 = !DISubroutineType(types: !689)
!689 = !{!143, !146, !146}
!690 = !DISubroutineType(types: !691)
!691 = !{!27, !692}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !180, line: 79, baseType: !203)
!693 = !DISubroutineType(types: !694)
!694 = !{!27, !146, !151}
!695 = !DISubroutineType(types: !696)
!696 = !{!27, !697}
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !180, line: 64, baseType: !205)
!698 = !DISubroutineType(types: !699)
!699 = !{!168, !179}
!700 = !DISubroutineType(types: !701)
!701 = !{null, !146, !141}
!702 = !DISubroutineType(types: !703)
!703 = !{!141, !183}
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !705, line: 45, baseType: !706)
!705 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1600, elements: !299)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !705, line: 33, size: 1600, elements: !708)
!708 = !{!709, !713, !714}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !707, file: !705, line: 39, baseType: !710, size: 512)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !711, line: 31, baseType: !712)
!711 = !DIFile(filename: "/usr/include/bits/setjmp.h", directory: "")
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 512, elements: !544)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !707, file: !705, line: 40, baseType: !27, size: 32, offset: 512)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !707, file: !705, line: 41, baseType: !405, size: 1024, offset: 576)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 3584, elements: !722)
!716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsortFunc", file: !3, line: 3585, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!27, !721, !721}
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "V", file: !3, line: 3584, baseType: !176)
!722 = !{!542, !563, !563, !563}
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 512, elements: !724)
!724 = !{!563, !563, !563}
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 256, elements: !726)
!726 = !{!563, !563}
!727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 128, elements: !562)
!728 = !DISubroutineType(types: !729)
!729 = !{!27, !183, !183, !730}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!27, !146, !146}
!733 = !DISubroutineType(types: !734)
!734 = !{!27, !183, !183}
!735 = !DISubroutineType(types: !736)
!736 = !{!149, !183, !149}
!737 = !DISubroutineType(types: !738)
!738 = !{!143, !143, !149, !183}
!739 = !DISubroutineType(types: !740)
!740 = !{!149, !183, !141, !510, !149}
!741 = !DISubroutineType(types: !742)
!742 = !{!399, !183, !141}
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 320, elements: !551)
!744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!745 = !DISubroutineType(types: !746)
!746 = !{!141, !141, !228, !36}
!747 = !DISubroutineType(types: !748)
!748 = !{!144, !141, !228, !36}
!749 = !DISubroutineType(types: !750)
!750 = !{null, !144}
!751 = !DISubroutineType(types: !752)
!752 = !{!149, !183}
!753 = !DISubroutineType(types: !754)
!754 = !{!149, !146, !633, !27}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "column_info", file: !3, line: 937, size: 192, elements: !758)
!758 = !{!759, !760, !761}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "valid_len", scope: !757, file: !3, line: 939, baseType: !141, size: 8)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "line_len", scope: !757, file: !3, line: 940, baseType: !149, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "col_arr", scope: !757, file: !3, line: 941, baseType: !148, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!149, !141}
!765 = !DISubroutineType(types: !766)
!766 = !{null, !149, !149}
!767 = !DISubroutineType(types: !768)
!768 = !{null, !183}
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !415)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 29144, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 3643)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 88, elements: !774)
!774 = !{!775}
!775 = !DISubrange(count: 11)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !692, !27, !141}
!778 = !DISubroutineType(types: !779)
!779 = !{null, !697, !27, !141}
!780 = !DISubroutineType(types: !781)
!781 = !{null, !146, !151, !27}
!782 = !DISubroutineType(types: !783)
!783 = !{!149, !143, !149, !141, !784, !248, !27}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !788)
!787 = !DIFile(filename: "/usr/include/bits/types/struct_tm.h", directory: "")
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !786, file: !787, line: 9, baseType: !27, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !786, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !786, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !786, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !786, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !786, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !786, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !786, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !786, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !786, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !786, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!800 = !DISubroutineType(types: !801)
!801 = !{!27}
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8008, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 1001)
!805 = !DISubroutineType(types: !806)
!806 = !{!143, !162, !143}
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 896, elements: !541)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !811, file: !810, line: 633, size: 128, elements: !812)
!810 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/clone/coreutils")
!811 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !810, file: !810, line: 631, type: !570, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !809, file: !810, line: 633, baseType: !146, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !809, file: !810, line: 633, baseType: !146, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!816 = !{!817, !819, !821, !823, !825, !827, !829, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !0, !873, !875, !877, !879, !881, !883, !885, !887, !890, !892, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !971, !973, !975, !977, !980, !982, !984, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1011, !1014, !1017, !1019, !1021, !1023, !1026, !1029, !1031, !1033}
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "active_dir_set", scope: !2, file: !3, line: 319, type: !244, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "cwd_file", scope: !2, file: !3, line: 330, type: !252, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "cwd_n_alloc", scope: !2, file: !3, line: 333, type: !149, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "cwd_n_used", scope: !2, file: !3, line: 336, type: !149, isLocal: true, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "color_symlink_as_referent", scope: !2, file: !3, line: 355, type: !141, isLocal: true, isDefinition: true)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "hostname", scope: !2, file: !3, line: 357, type: !146, isLocal: true, isDefinition: true)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "pending_dirs", scope: !2, file: !3, line: 378, type: !237, isLocal: true, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "current_time", scope: !2, file: !3, line: 383, type: !214, isLocal: true, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "print_scontext", scope: !2, file: !3, line: 385, type: !141, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "format", scope: !2, file: !3, line: 428, type: !5, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "sort_type", scope: !2, file: !3, line: 481, type: !26, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "print_block_size", scope: !2, file: !3, line: 510, type: !141, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "dired", scope: !2, file: !3, line: 525, type: !141, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "indicator_style", scope: !2, file: !3, line: 542, type: !20, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "print_with_color", scope: !2, file: !3, line: 559, type: !141, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "print_hyperlink", scope: !2, file: !3, line: 561, type: !141, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "check_symlink_mode", scope: !2, file: !3, line: 645, type: !141, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "dereference", scope: !2, file: !3, line: 654, type: !13, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "recursive", scope: !2, file: !3, line: 659, type: !141, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "immediate_dirs", scope: !2, file: !3, line: 664, type: !141, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "directories_first", scope: !2, file: !3, line: 668, type: !141, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "filename_quoting_options", scope: !2, file: !3, line: 715, type: !328, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "print_dir_name", scope: !2, file: !3, line: 724, type: !141, isLocal: true, isDefinition: true)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "localtz", scope: !2, file: !3, line: 733, type: !248, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "format_needs_stat", scope: !2, file: !3, line: 738, type: !141, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "format_needs_type", scope: !2, file: !3, line: 743, type: !141, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "interrupt_signal", scope: !2, file: !3, line: 792, type: !320, isLocal: true, isDefinition: true)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "stop_signal_count", scope: !2, file: !3, line: 796, type: !320, isLocal: true, isDefinition: true)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "dired_pos", scope: !2, file: !3, line: 960, type: !149, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "dired_obstack", scope: !2, file: !3, line: 981, type: !350, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "subdired_obstack", scope: !2, file: !3, line: 988, type: !350, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "dev_ino_obstack", scope: !2, file: !3, line: 1002, type: !350, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "RFC3986", scope: !2, file: !3, line: 1083, type: !343, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "used_color", scope: !2, file: !3, line: 567, type: !141, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "color_indicator", scope: !2, file: !3, line: 608, type: !261, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "sig", scope: !889, file: !3, line: 1358, type: !413, isLocal: true, isDefinition: true)
!889 = distinct !DISubprogram(name: "signal_setup", scope: !3, file: !3, line: 1355, type: !401, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "caught_signals", scope: !2, file: !3, line: 788, type: !403, isLocal: true, isDefinition: true)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "posix_prefix", scope: !894, file: !3, line: 2181, type: !895, isLocal: true, isDefinition: true)
!894 = distinct !DISubprogram(name: "decode_switches", scope: !3, file: !3, line: 1688, type: !235, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 56, elements: !541)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "qmark_funny_chars", scope: !2, file: !3, line: 711, type: !141, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "time_type", scope: !2, file: !3, line: 464, type: !79, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "sort_reverse", scope: !2, file: !3, line: 489, type: !141, isLocal: true, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "numeric_ids", scope: !2, file: !3, line: 506, type: !141, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "print_inode", scope: !2, file: !3, line: 649, type: !141, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "ignore_mode", scope: !2, file: !3, line: 683, type: !85, isLocal: true, isDefinition: true)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "ignore_patterns", scope: !2, file: !3, line: 696, type: !511, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "hide_patterns", scope: !2, file: !3, line: 700, type: !511, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "line_length", scope: !2, file: !3, line: 729, type: !149, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "tabsize", scope: !2, file: !3, line: 720, type: !149, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 839, type: !516, isLocal: true, isDefinition: true)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "print_owner", scope: !2, file: !3, line: 493, type: !141, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "human_output_opts", scope: !2, file: !3, line: 513, type: !27, isLocal: true, isDefinition: true)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "file_human_output_opts", scope: !2, file: !3, line: 519, type: !27, isLocal: true, isDefinition: true)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "output_block_size", scope: !2, file: !3, line: 516, type: !168, isLocal: true, isDefinition: true)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "file_output_block_size", scope: !2, file: !3, line: 520, type: !168, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "print_group", scope: !2, file: !3, line: 501, type: !141, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "print_author", scope: !2, file: !3, line: 497, type: !141, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "sort_types", scope: !2, file: !3, line: 905, type: !528, isLocal: true, isDefinition: true)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "sort_args", scope: !2, file: !3, line: 901, type: !532, isLocal: true, isDefinition: true)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "time_types", scope: !2, file: !3, line: 915, type: !537, isLocal: true, isDefinition: true)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "time_args", scope: !2, file: !3, line: 911, type: !532, isLocal: true, isDefinition: true)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "format_types", scope: !2, file: !3, line: 894, type: !539, isLocal: true, isDefinition: true)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "format_args", scope: !2, file: !3, line: 889, type: !543, isLocal: true, isDefinition: true)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "when_types", scope: !2, file: !3, line: 928, type: !546, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "when_args", scope: !2, file: !3, line: 921, type: !550, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "indicator_style_types", scope: !2, file: !3, line: 549, type: !553, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "indicator_style_args", scope: !2, file: !3, line: 545, type: !557, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "max_idx", scope: !2, file: !3, line: 948, type: !149, isLocal: true, isDefinition: true)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "align_variable_outer_quotes", scope: !2, file: !3, line: 343, type: !141, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "dirname_quoting_options", scope: !2, file: !3, line: 716, type: !328, isLocal: true, isDefinition: true)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "long_time_format", scope: !2, file: !3, line: 756, type: !561, isLocal: true, isDefinition: true)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "time_style_args", scope: !2, file: !3, line: 441, type: !557, isLocal: true, isDefinition: true)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "time_style_types", scope: !2, file: !3, line: 445, type: !565, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "abformat", scope: !2, file: !3, line: 1107, type: !577, isLocal: true, isDefinition: true)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "use_abformat", scope: !2, file: !3, line: 1111, type: !141, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "G_line", scope: !2, file: !970, line: 1, type: !604, isLocal: true, isDefinition: true)
!970 = !DIFile(filename: "src/dircolors.h", directory: "/home/mbarbar/clone/coreutils")
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "color_buf", scope: !2, file: !3, line: 640, type: !143, isLocal: true, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "color_ext_list", scope: !2, file: !3, line: 637, type: !593, isLocal: true, isDefinition: true)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "indicator_name", scope: !2, file: !3, line: 594, type: !599, isLocal: true, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "first", scope: !979, file: !3, line: 2725, type: !141, isLocal: true, isDefinition: true)
!979 = distinct !DISubprogram(name: "print_dir", scope: !3, file: !3, line: 2720, type: !607, scopeLine: 2721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "cwd_some_quoted", scope: !2, file: !3, line: 339, type: !141, isLocal: true, isDefinition: true)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "sorted_file", scope: !2, file: !3, line: 347, type: !663, isLocal: true, isDefinition: true)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "UNKNOWN_SECURITY_CONTEXT", scope: !2, file: !3, line: 386, type: !666, isLocal: true, isDefinition: true)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "any_has_acl", scope: !2, file: !3, line: 391, type: !141, isLocal: true, isDefinition: true)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "inode_number_width", scope: !2, file: !3, line: 397, type: !27, isLocal: true, isDefinition: true)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "block_size_width", scope: !2, file: !3, line: 398, type: !27, isLocal: true, isDefinition: true)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "nlink_width", scope: !2, file: !3, line: 399, type: !27, isLocal: true, isDefinition: true)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "owner_width", scope: !2, file: !3, line: 401, type: !27, isLocal: true, isDefinition: true)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "group_width", scope: !2, file: !3, line: 402, type: !27, isLocal: true, isDefinition: true)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "author_width", scope: !2, file: !3, line: 403, type: !27, isLocal: true, isDefinition: true)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "scontext_width", scope: !2, file: !3, line: 400, type: !27, isLocal: true, isDefinition: true)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "major_device_number_width", scope: !2, file: !3, line: 404, type: !27, isLocal: true, isDefinition: true)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "minor_device_number_width", scope: !2, file: !3, line: 405, type: !27, isLocal: true, isDefinition: true)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "file_size_width", scope: !2, file: !3, line: 406, type: !27, isLocal: true, isDefinition: true)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1010, file: !3, line: 3084, type: !260, isLocal: true, isDefinition: true)
!1010 = distinct !DISubprogram(name: "has_capability_cache", scope: !3, file: !3, line: 3080, type: !674, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1013, file: !3, line: 3029, type: !260, isLocal: true, isDefinition: true)
!1013 = distinct !DISubprogram(name: "getfilecon_cache", scope: !3, file: !3, line: 3025, type: !682, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1016, file: !3, line: 3059, type: !260, isLocal: true, isDefinition: true)
!1016 = distinct !DISubprogram(name: "file_has_acl_cache", scope: !3, file: !3, line: 3055, type: !684, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "sorted_file_alloc", scope: !2, file: !3, line: 348, type: !149, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "failed_strcoll", scope: !2, file: !3, line: 3564, type: !704, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "sort_functions", scope: !2, file: !3, line: 3741, type: !715, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "filetype_indicator", scope: !1025, file: !3, line: 4710, type: !743, isLocal: true, isDefinition: true)
!1025 = distinct !DISubprogram(name: "get_color_indicator", scope: !3, file: !3, line: 4682, type: !741, scopeLine: 4683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "column_info_alloc", scope: !1028, file: !3, line: 5015, type: !149, isLocal: true, isDefinition: true)
!1028 = distinct !DISubprogram(name: "init_column_info", scope: !3, file: !3, line: 5009, type: !341, scopeLine: 5010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "column_info", scope: !2, file: !3, line: 945, type: !762, isLocal: true, isDefinition: true)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "filetype_letter", scope: !2, file: !3, line: 180, type: !773, isLocal: true, isDefinition: true)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "width", scope: !1035, file: !3, line: 3895, type: !27, isLocal: true, isDefinition: true)
!1035 = distinct !DISubprogram(name: "long_time_expected_width", scope: !3, file: !3, line: 3893, type: !800, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "ls_mode", scope: !1038, file: !1039, line: 2, type: !27, isLocal: false, isDefinition: true)
!1038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1039, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !801, globals: !1040, nameTableKind: None)
!1039 = !DIFile(filename: "src/ls-ls.c", directory: "/home/mbarbar/clone/coreutils")
!1040 = !{!1036}
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "Version", scope: !1043, file: !1044, line: 2, type: !146, isLocal: false, isDefinition: true)
!1043 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1044, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1045, globals: !1046, nameTableKind: None)
!1044 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/clone/coreutils")
!1045 = !{!146}
!1046 = !{!1041}
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1049, file: !1097, line: 67, type: !535, isLocal: false, isDefinition: true)
!1049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1050, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1051, globals: !1096, nameTableKind: None)
!1050 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1051 = !{!167, !146, !535, !1052, !149, !564, !141, !567, !1054, !1056, !1058, !1092, !1094, !341}
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!564, !146, !567, !176, !149}
!1054 = !DISubroutineType(types: !1055)
!1055 = !{null, !146, !146, !564}
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !567, !176, !149}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1060, file: !272, line: 51, baseType: !27, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1060, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1060, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1060, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1060, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1060, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1060, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1060, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1060, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1060, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1060, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1060, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1060, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1060, file: !272, line: 70, baseType: !1076, size: 64, offset: 832)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1060, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1060, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1060, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1060, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1060, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1060, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1060, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1060, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1060, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1060, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1060, file: !272, line: 93, baseType: !1076, size: 64, offset: 1344)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1060, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1060, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1060, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1060, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!564, !146, !146, !567, !176, !149, !535}
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!146, !176, !567, !176, !149}
!1096 = !{!1047}
!1097 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "file_name", scope: !1100, file: !1140, line: 46, type: !146, isLocal: true, isDefinition: true)
!1100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1101, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1102, globals: !1137, nameTableKind: None)
!1101 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!1102 = !{!570, !146, !401, !141, !341, !1103, !27, !330}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1105, file: !272, line: 51, baseType: !27, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1105, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1105, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1105, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1105, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1105, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1105, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1105, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1105, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1105, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1105, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1105, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1105, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1105, file: !272, line: 70, baseType: !1121, size: 64, offset: 832)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1105, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1105, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1105, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1105, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1105, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1105, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1105, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1105, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1105, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1105, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1105, file: !272, line: 93, baseType: !1121, size: 64, offset: 1344)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1105, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1105, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1105, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1105, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1137 = !{!1098, !1138}
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !1100, file: !1140, line: 56, type: !141, isLocal: true, isDefinition: true)
!1140 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "exit_failure", scope: !1143, file: !1147, line: 24, type: !330, isLocal: false, isDefinition: true)
!1143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1144, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1145, globals: !1146, nameTableKind: None)
!1144 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!1145 = !{!330}
!1146 = !{!1141}
!1147 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1150, file: !1159, line: 130, type: !1175, isLocal: true, isDefinition: true)
!1150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1151, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1152, globals: !1279, nameTableKind: None)
!1151 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!1152 = !{!151, !167, !149, !1153, !1156, !1168, !1162, !1194, !1196, !1232, !1189, !1234, !1236, !663, !1238, !1244, !591, !147, !1246, !1175, !1249, !1251, !1157, !1174, !1186, !1192, !1252, !1254, !1256, !176, !1180, !141, !1258, !27, !1260, !333, !337, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1277}
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!149, !1155}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !246, line: 69, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1159, line: 52, size: 640, elements: !1160)
!1159 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!1160 = !{!1161, !1167, !1170, !1171, !1172, !1173, !1185, !1188, !1191, !1193}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1158, file: !1159, line: 57, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1159, line: 46, size: 128, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1163, file: !1159, line: 48, baseType: !167, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1163, file: !1159, line: 49, baseType: !1162, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1158, file: !1159, line: 58, baseType: !1168, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1158, file: !1159, line: 59, baseType: !149, size: 64, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1158, file: !1159, line: 60, baseType: !149, size: 64, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1158, file: !1159, line: 61, baseType: !149, size: 64, offset: 256)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1158, file: !1159, line: 64, baseType: !1174, size: 64, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !246, line: 65, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !246, line: 53, size: 160, elements: !1178)
!1178 = !{!1179, !1181, !1182, !1183, !1184}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1177, file: !246, line: 58, baseType: !1180, size: 32)
!1180 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1177, file: !246, line: 59, baseType: !1180, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1177, file: !246, line: 60, baseType: !1180, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1177, file: !246, line: 61, baseType: !1180, size: 32, offset: 96)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1177, file: !246, line: 62, baseType: !141, size: 8, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1158, file: !1159, line: 71, baseType: !1186, size: 64, offset: 384)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !246, line: 48, baseType: !1187)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1158, file: !1159, line: 72, baseType: !1189, size: 64, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !246, line: 49, baseType: !1190)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1158, file: !1159, line: 73, baseType: !1192, size: 64, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !246, line: 50, baseType: !386)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1158, file: !1159, line: 76, baseType: !1162, size: 64, offset: 576)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!141, !1155}
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1155, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1200, file: !272, line: 51, baseType: !27, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1200, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1200, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1200, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1200, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1200, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1200, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1200, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1200, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1200, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1200, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1200, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1200, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1200, file: !272, line: 70, baseType: !1216, size: 64, offset: 832)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1200, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1200, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1200, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1200, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1200, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1200, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1200, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1200, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1200, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1200, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1200, file: !272, line: 93, baseType: !1216, size: 64, offset: 1344)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1200, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1200, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1200, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1200, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!167, !1155, !176}
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!167, !1155}
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!149, !1155, !663, !149}
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!149, !1155, !1240, !167}
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !246, line: 51, baseType: !1241)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!141, !167, !167}
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!149, !146, !149}
!1246 = !DISubroutineType(types: !1247)
!1247 = !{null, !1248}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1251, !149, !1174, !1186, !1189, !1192}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1251}
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!141, !1251, !149}
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!27, !1251, !176, !182}
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!167, !1251, !176}
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!1162, !1155, !176}
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!141, !1251}
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!149, !149, !1174}
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!149, !149}
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!141, !149}
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!141, !1251, !1251, !141}
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !1251, !1162}
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!167, !1251, !176, !1276, !141}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1162, !1251}
!1279 = !{!1148}
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "power_letter", scope: !1282, file: !1339, line: 36, type: !1318, isLocal: true, isDefinition: true)
!1282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1283, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !1285, globals: !1336, nameTableKind: None)
!1283 = !DIFile(filename: "./lib/human.c", directory: "/home/mbarbar/clone/coreutils")
!1284 = !{!109}
!1285 = !{!176, !1286, !27, !6, !168, !143, !146, !149, !1288, !1317, !144, !1318, !1319, !1322, !1323, !1325, !1327, !591, !147, !1330, !1332, !1333, !1334}
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!143, !168, !143, !27, !168, !168}
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !1291, line: 51, size: 768, elements: !1292)
!1291 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !1290, file: !1291, line: 55, baseType: !143, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !1290, file: !1291, line: 56, baseType: !143, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !1290, file: !1291, line: 62, baseType: !143, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !1290, file: !1291, line: 68, baseType: !143, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !1290, file: !1291, line: 69, baseType: !143, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !1290, file: !1291, line: 70, baseType: !143, size: 64, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !1290, file: !1291, line: 71, baseType: !143, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !1290, file: !1291, line: 72, baseType: !143, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !1290, file: !1291, line: 73, baseType: !143, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !1290, file: !1291, line: 74, baseType: !143, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !1290, file: !1291, line: 75, baseType: !144, size: 8, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !1290, file: !1291, line: 76, baseType: !144, size: 8, offset: 648)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !1290, file: !1291, line: 78, baseType: !144, size: 8, offset: 656)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !1290, file: !1291, line: 80, baseType: !144, size: 8, offset: 664)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !1290, file: !1291, line: 82, baseType: !144, size: 8, offset: 672)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !1290, file: !1291, line: 84, baseType: !144, size: 8, offset: 680)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !1290, file: !1291, line: 91, baseType: !144, size: 8, offset: 688)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !1290, file: !1291, line: 92, baseType: !144, size: 8, offset: 696)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !1290, file: !1291, line: 95, baseType: !144, size: 8, offset: 704)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !1290, file: !1291, line: 97, baseType: !144, size: 8, offset: 712)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !1290, file: !1291, line: 99, baseType: !144, size: 8, offset: 720)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !1290, file: !1291, line: 101, baseType: !144, size: 8, offset: 728)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !1290, file: !1291, line: 108, baseType: !144, size: 8, offset: 736)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !1290, file: !1291, line: 109, baseType: !144, size: 8, offset: 744)
!1317 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 72, elements: !548)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!109, !146, !524, !1321}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !110, line: 39, baseType: !109)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!1317, !27, !1317}
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!143, !143, !149, !146, !146}
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 328, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 41)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1322, !146, !1321, !524}
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 192, elements: !224)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 64, elements: !562)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!168}
!1336 = !{!1280, !1337, !1340}
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "block_size_args", scope: !1282, file: !1339, line: 398, type: !1332, isLocal: true, isDefinition: true)
!1339 = !DIFile(filename: "lib/human.c", directory: "/home/mbarbar/clone/coreutils")
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "block_size_opts", scope: !1282, file: !1339, line: 399, type: !1333, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "user_alist", scope: !1344, file: !1351, line: 55, type: !1349, isLocal: true, isDefinition: true)
!1344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1345, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1346, globals: !1387, nameTableKind: None)
!1345 = !DIFile(filename: "./lib/idcache.c", directory: "/home/mbarbar/clone/coreutils")
!1346 = !{!167, !1347, !1349, !1354, !1360, !146, !143, !361, !1371, !144, !147, !203, !1374, !1376, !1384, !205}
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!143, !692}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "userid", file: !1351, line: 37, size: 128, elements: !1352)
!1351 = !DIFile(filename: "lib/idcache.c", directory: "/home/mbarbar/clone/coreutils")
!1352 = !{!1353, !1358, !1359}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1350, file: !1351, line: 43, baseType: !1354, size: 32)
!1354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1350, file: !1351, line: 39, size: 32, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1354, file: !1351, line: 41, baseType: !692, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1354, file: !1351, line: 42, baseType: !697, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1350, file: !1351, line: 44, baseType: !1349, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1350, file: !1351, line: 45, baseType: !361, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !1362, line: 49, size: 384, elements: !1363)
!1362 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1361, file: !1362, line: 51, baseType: !143, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1361, file: !1362, line: 52, baseType: !143, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1361, file: !1362, line: 54, baseType: !203, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1361, file: !1362, line: 55, baseType: !205, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1361, file: !1362, line: 56, baseType: !143, size: 64, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1361, file: !1362, line: 57, baseType: !143, size: 64, offset: 256)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1361, file: !1362, line: 58, baseType: !143, size: 64, offset: 320)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!1373, !146}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!143, !697}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1378, line: 42, size: 256, elements: !1379)
!1378 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1379 = !{!1380, !1381, !1382, !1383}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1377, file: !1378, line: 44, baseType: !143, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1377, file: !1378, line: 45, baseType: !143, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1377, file: !1378, line: 46, baseType: !205, size: 32, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1377, file: !1378, line: 47, baseType: !142, size: 64, offset: 192)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!1386, !146}
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!1387 = !{!1342, !1388, !1390, !1392}
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "nouser_alist", scope: !1344, file: !1351, line: 58, type: !1349, isLocal: true, isDefinition: true)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "group_alist", scope: !1344, file: !1351, line: 61, type: !1349, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "nogroup_alist", scope: !1344, file: !1351, line: 64, type: !1349, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "program_name", scope: !1396, file: !1434, line: 33, type: !146, isLocal: false, isDefinition: true)
!1396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1397, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1398, globals: !1433, nameTableKind: None)
!1397 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!1398 = !{!167, !143, !146, !570, !1399}
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1401, file: !272, line: 51, baseType: !27, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1401, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1401, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1401, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1401, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1401, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1401, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1401, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1401, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1401, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1401, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1401, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1401, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1401, file: !272, line: 70, baseType: !1417, size: 64, offset: 832)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1401, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1401, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1401, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1401, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1401, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1401, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1401, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1401, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1401, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1401, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1401, file: !272, line: 93, baseType: !1417, size: 64, offset: 1344)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1401, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1401, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1401, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1401, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1433 = !{!1394}
!1434 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1437, file: !1447, line: 85, type: !1441, isLocal: false, isDefinition: true)
!1437 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1438, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1439, retainedTypes: !1440, globals: !1531, nameTableKind: None)
!1438 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!1439 = !{!95}
!1440 = !{!27, !178, !149, !1441, !1442, !1443, !1445, !1455, !1459, !1461, !591, !1463, !6, !1464, !1466, !146, !1468, !1457, !1470, !1472, !143, !341, !1474, !343, !1479, !1481, !572, !1483, !1485, !1487, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !579, !1511, !141, !147, !587, !1515, !654, !1513, !1525, !1527, !1529}
!1441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 704, elements: !774)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 320, elements: !551)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!1445, !1445}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1447, line: 65, size: 448, elements: !1448)
!1447 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!1448 = !{!1449, !1450, !1451, !1453, !1454}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1446, file: !1447, line: 68, baseType: !95, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1446, file: !1447, line: 71, baseType: !27, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1446, file: !1447, line: 75, baseType: !1452, size: 256, offset: 64)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 256, elements: !544)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1446, file: !1447, line: 78, baseType: !146, size: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1446, file: !1447, line: 81, baseType: !146, size: 64, offset: 384)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!95, !1457}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !1445, !95}
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!27, !1445, !144, !27}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!27, !1445, !27}
!1466 = !DISubroutineType(types: !1467)
!1467 = !{null, !1445, !146, !146}
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!149, !143, !149, !146, !149, !1457}
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!143, !146, !149, !1457}
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!143, !146, !149, !148, !1457}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1447, line: 834, size: 128, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1475, file: !1447, line: 836, baseType: !149, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1475, file: !1447, line: 837, baseType: !143, size: 64, offset: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!143, !27, !146}
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!143, !27, !146, !149}
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!143, !146, !149}
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!143, !27, !95, !146}
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!143, !27, !95, !146, !149}
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!143, !95, !146}
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!143, !95, !146, !149}
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!143, !146, !149, !144}
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!143, !146, !144}
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!143, !27, !146, !146, !146}
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!143, !27, !146, !146, !146, !149}
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!143, !146, !146, !146}
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!143, !146, !146, !146, !149}
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!146, !27, !146, !149}
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!146, !146, !149}
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!146, !27, !146}
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!149, !143, !149, !146, !149, !95, !27, !1513, !146, !146}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !1518)
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1517, file: !644, line: 15, baseType: !27, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1517, file: !644, line: 20, baseType: !1521, size: 32, offset: 32)
!1521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !644, line: 16, size: 32, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1521, file: !644, line: 18, baseType: !6, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1521, file: !644, line: 19, baseType: !653, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!146, !146, !95}
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!143, !27, !146, !149, !1457}
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1446, !95}
!1531 = !{!1435, !1532, !1534, !1536, !1538, !1540, !1542, !1544}
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1437, file: !1447, line: 101, type: !1442, isLocal: false, isDefinition: true)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1437, file: !1447, line: 1052, type: !1446, isLocal: false, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1437, file: !1447, line: 116, type: !1446, isLocal: true, isDefinition: true)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "slot0", scope: !1437, file: !1447, line: 842, type: !343, isLocal: true, isDefinition: true)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "slotvec", scope: !1437, file: !1447, line: 845, type: !1474, isLocal: true, isDefinition: true)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "nslots", scope: !1437, file: !1447, line: 843, type: !27, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1437, file: !1447, line: 844, type: !1475, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1548, file: !1555, line: 26, type: !1551, isLocal: false, isDefinition: true)
!1548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1549, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1550, globals: !1554, nameTableKind: None)
!1549 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1550 = !{!1551}
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 376, elements: !1552)
!1552 = !{!1553}
!1553 = !DISubrange(count: 47)
!1554 = !{!1546}
!1555 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1558, file: !1646, line: 351, type: !425, isLocal: false, isDefinition: true)
!1558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1559, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1560, globals: !1645, nameTableKind: None)
!1559 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mbarbar/clone/coreutils")
!1560 = !{!143, !167, !1561, !1584, !1589, !1597, !1599, !1568, !149, !425, !1601, !1603, !1605, !1607, !27, !1609, !341, !1611, !330}
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!27, !1563, !149, !149, !375, !386}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !351, line: 174, size: 704, elements: !1565)
!1565 = !{!1566, !1567, !1574, !1575, !1576, !1577, !1582, !1583, !1588, !1593, !1594, !1595, !1596}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1564, file: !351, line: 176, baseType: !149, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1564, file: !351, line: 177, baseType: !1568, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !351, line: 167, size: 128, elements: !1570)
!1570 = !{!1571, !1572, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1569, file: !351, line: 169, baseType: !143, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1569, file: !351, line: 170, baseType: !1568, size: 64, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1569, file: !351, line: 171, baseType: !361, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1564, file: !351, line: 178, baseType: !143, size: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1564, file: !351, line: 179, baseType: !143, size: 64, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1564, file: !351, line: 180, baseType: !143, size: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1564, file: !351, line: 185, baseType: !1578, size: 64, offset: 320)
!1578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 181, size: 64, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1578, file: !351, line: 183, baseType: !149, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1578, file: !351, line: 184, baseType: !167, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1564, file: !351, line: 186, baseType: !149, size: 64, offset: 384)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1564, file: !351, line: 193, baseType: !1584, size: 64, offset: 448)
!1584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 189, size: 64, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1584, file: !351, line: 191, baseType: !375, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1584, file: !351, line: 192, baseType: !379, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1564, file: !351, line: 198, baseType: !1589, size: 64, offset: 512)
!1589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 194, size: 64, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1589, file: !351, line: 196, baseType: !386, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1589, file: !351, line: 197, baseType: !388, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1564, file: !351, line: 200, baseType: !167, size: 64, offset: 576)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1564, file: !351, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1564, file: !351, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1564, file: !351, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!27, !1563, !149, !149, !379, !388, !167}
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1563, !149}
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!27, !1563, !167}
!1603 = !DISubroutineType(types: !1604)
!1604 = !{null, !1563, !167}
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!149, !1563}
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!27, !1563, !149, !149}
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!167, !1563, !149}
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1613, file: !272, line: 51, baseType: !27, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1613, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1613, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1613, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1613, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1613, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1613, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1613, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1613, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1613, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1613, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1613, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1613, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1613, file: !272, line: 70, baseType: !1629, size: 64, offset: 832)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1613, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1613, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1613, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1613, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1613, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1613, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1613, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1613, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1613, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1613, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1613, file: !272, line: 93, baseType: !1629, size: 64, offset: 1344)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1613, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1613, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1613, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1613, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1645 = !{!1556}
!1646 = !DIFile(filename: "lib/obstack.c", directory: "/home/mbarbar/clone/coreutils")
!1647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1648, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1649, nameTableKind: None)
!1648 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!1649 = !{!167, !1483, !149, !1650, !584, !143, !27}
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !180, line: 108, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !165, line: 193, baseType: !166)
!1652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1653, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1654, nameTableKind: None)
!1653 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/clone/coreutils")
!1654 = !{!680, !1655}
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!27, !27}
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1659, nameTableKind: None)
!1658 = !DIFile(filename: "./lib/c-strncasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!1659 = !{!1660, !1662, !591, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!27, !146, !146, !149}
!1664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1665, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1666, retainedTypes: !1674, nameTableKind: None)
!1665 = !DIFile(filename: "./lib/canonicalize.c", directory: "/home/mbarbar/clone/coreutils")
!1666 = !{!1667}
!1667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "canonicalize_mode_t", file: !1668, line: 28, baseType: !6, size: 32, elements: !1669)
!1668 = !DIFile(filename: "./lib/canonicalize.h", directory: "/home/mbarbar/clone/coreutils")
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIEnumerator(name: "CAN_EXISTING", value: 0, isUnsigned: true)
!1671 = !DIEnumerator(name: "CAN_ALL_BUT_LAST", value: 1, isUnsigned: true)
!1672 = !DIEnumerator(name: "CAN_MISSING", value: 2, isUnsigned: true)
!1673 = !DIEnumerator(name: "CAN_NOLINKS", value: 4, isUnsigned: true)
!1674 = !{!167, !1675, !143, !146, !149, !244, !27, !141, !144, !147, !564, !201, !181, !1678}
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!143, !146, !1677}
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "canonicalize_mode_t", file: !1668, line: 42, baseType: !1667)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!141, !1680, !146, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1701, !1702, !1703}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1683, file: !192, line: 48, baseType: !195, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1683, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1683, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1683, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1683, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1683, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1683, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1683, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1683, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1683, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1683, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1683, file: !192, line: 91, baseType: !1697, size: 128, offset: 576)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1697, file: !215, line: 11, baseType: !164, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1697, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1683, file: !192, line: 92, baseType: !1697, size: 128, offset: 704)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1683, file: !192, line: 93, baseType: !1697, size: 128, offset: 832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1683, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1705, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1706, nameTableKind: None)
!1705 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1706 = !{!1707, !149, !146, !572, !141, !143}
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!149, !146}
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1711, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1711 = !{!143, !572, !146, !141, !147, !1707, !149}
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1714, nameTableKind: None)
!1713 = !DIFile(filename: "./lib/file-has-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1714 = !{!167, !1715, !201, !1650, !27}
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!27, !146, !1717}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1737, !1738, !1739}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1719, file: !192, line: 48, baseType: !195, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1719, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1719, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1719, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1719, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1719, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1719, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1719, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1719, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1719, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1719, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1719, file: !192, line: 91, baseType: !1733, size: 128, offset: 576)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1733, file: !215, line: 11, baseType: !164, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1733, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1719, file: !192, line: 92, baseType: !1733, size: 128, offset: 704)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1719, file: !192, line: 93, baseType: !1733, size: 128, offset: 832)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1719, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1741, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1742, nameTableKind: None)
!1741 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!1742 = !{!167, !143, !1743, !1768, !197, !258, !195, !260, !1775}
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !244, !146, !1745}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1765, !1766, !1767}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1747, file: !192, line: 48, baseType: !195, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1747, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1747, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1747, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1747, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1747, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1747, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1747, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1747, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1747, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1747, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1747, file: !192, line: 91, baseType: !1761, size: 128, offset: 576)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1761, file: !215, line: 11, baseType: !164, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1761, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1747, file: !192, line: 92, baseType: !1761, size: 128, offset: 704)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1747, file: !192, line: 93, baseType: !1761, size: 128, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1747, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1770, line: 9, size: 192, elements: !1771)
!1770 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/clone/coreutils")
!1771 = !{!1772, !1773, !1774}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1769, file: !1770, line: 11, baseType: !143, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1769, file: !1770, line: 12, baseType: !258, size: 64, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1769, file: !1770, line: 13, baseType: !260, size: 64, offset: 128)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!141, !1777, !146, !1745}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!1779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1780, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1781, nameTableKind: None)
!1780 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!1781 = !{!1782, !143, !1784, !201, !1809}
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !228, !143}
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1786, !143}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1806, !1807, !1808}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1788, file: !192, line: 48, baseType: !195, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1788, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1788, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1788, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1788, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1788, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1788, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1788, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1788, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1788, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1788, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1788, file: !192, line: 91, baseType: !1802, size: 128, offset: 576)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1802, file: !215, line: 11, baseType: !164, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1802, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1788, file: !192, line: 92, baseType: !1802, size: 128, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1788, file: !192, line: 93, baseType: !1802, size: 128, offset: 832)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1788, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!144, !228}
!1811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1812, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1813, nameTableKind: None)
!1812 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!1813 = !{!167, !1814, !143}
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!143, !146, !146, !142}
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1818, nameTableKind: None)
!1817 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1818 = !{!167, !1814, !146, !149, !144, !147, !143}
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1821, nameTableKind: None)
!1820 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mbarbar/clone/coreutils")
!1821 = !{!27, !731, !146, !149, !147, !1822, !141, !1824, !1826}
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!146, !145}
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!27, !146, !149, !146, !149}
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!27, !591}
!1828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1829, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1830, nameTableKind: None)
!1829 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!1830 = !{!1831, !1838}
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1833}
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1835)
!1835 = !{!1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1834, file: !215, line: 11, baseType: !164, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1834, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!1834}
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1842, nameTableKind: None)
!1841 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!1842 = !{!680, !141, !146}
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1845, nameTableKind: None)
!1844 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!1845 = !{!333, !1846, !149, !143, !258, !337, !260, !339, !1853}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1770, line: 9, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1848, file: !1770, line: 11, baseType: !143, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1848, file: !1770, line: 12, baseType: !258, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1848, file: !1770, line: 13, baseType: !260, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1855, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1856, nameTableKind: None)
!1855 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/mbarbar/clone/coreutils")
!1856 = !{!1857, !1859, !143, !144}
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !169, line: 101, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !165, line: 72, baseType: !166)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!143, !1857, !143}
!1861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1862, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1863, nameTableKind: None)
!1862 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mbarbar/clone/coreutils")
!1863 = !{!168, !1864, !143, !144}
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!143, !168, !143}
!1866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1867, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1868, retainedTypes: !1869, nameTableKind: None)
!1867 = !DIFile(filename: "./lib/mbsalign.c", directory: "/home/mbarbar/clone/coreutils")
!1868 = !{!123}
!1869 = !{!167, !1870, !1872, !149, !143, !1874, !146, !141, !1875, !1877, !654, !1879, !27, !1881, !144}
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1871, line: 20, baseType: !6)
!1871 = !DIFile(filename: "/usr/include/bits/types/wint_t.h", directory: "")
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!149, !146, !143, !149, !148, !586, !27}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!143, !146, !148, !586, !27}
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!141, !1874}
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!149, !1874, !149}
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!143, !143, !146, !149}
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1885, nameTableKind: None)
!1884 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mbarbar/clone/coreutils")
!1885 = !{!149, !591, !27, !178, !1886, !1888, !146, !147, !1890, !654, !587}
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!27, !146, !27}
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!27, !146, !149, !27}
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1892, file: !644, line: 15, baseType: !27, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1892, file: !644, line: 20, baseType: !1896, size: 32, offset: 32)
!1896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1892, file: !644, line: 16, size: 32, elements: !1897)
!1897 = !{!1898, !1899}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1896, file: !644, line: 18, baseType: !6, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1896, file: !644, line: 19, baseType: !653, size: 32)
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1902, nameTableKind: None)
!1901 = !DIFile(filename: "./lib/mpsort.c", directory: "/home/mbarbar/clone/coreutils")
!1902 = !{!1903, !1910, !176, !182, !149}
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !182, !149, !1905}
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1906, line: 28, baseType: !1907)
!1906 = !DIFile(filename: "lib/mpsort.c", directory: "/home/mbarbar/clone/coreutils")
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!27, !176, !176}
!1910 = !DISubroutineType(types: !1911)
!1911 = !{null, !1912, !149, !1912, !1905}
!1912 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !182)
!1913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1914, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1915, nameTableKind: None)
!1914 = !DIFile(filename: "./lib/nstrftime.c", directory: "/home/mbarbar/clone/coreutils")
!1915 = !{!146, !6, !149, !167, !176, !591, !1916, !141, !1941, !27, !143, !147, !144, !1943, !1946, !1947, !162, !166, !1881, !1950}
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!149, !143, !149, !146, !1918, !1933, !27}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1920, file: !787, line: 9, baseType: !27, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1920, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1920, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1920, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1920, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1920, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1920, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1920, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1920, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1920, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1920, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !1934)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1936, line: 21, size: 128, elements: !1937)
!1936 = !DIFile(filename: "./lib/time-internal.h", directory: "/home/mbarbar/clone/coreutils")
!1937 = !{!1938, !1939, !1940}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1935, file: !1936, line: 25, baseType: !1934, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !1935, file: !1936, line: 36, baseType: !144, size: 8, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !1935, file: !1936, line: 48, baseType: !361, offset: 72)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!149, !143, !149, !146, !1918, !141, !27, !27, !640, !1933, !27}
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 184, elements: !1944)
!1944 = !{!1945}
!1945 = !DISubrange(count: 23)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 40, elements: !530)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8192, elements: !1948)
!1948 = !{!1949}
!1949 = !DISubrange(count: 1024)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!27, !27, !27}
!1952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1953, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1954, nameTableKind: None)
!1953 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!1954 = !{!1955, !1957, !146, !149, !141, !143, !27, !197, !195}
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!141, !146, !146}
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!141, !27, !146, !27, !146}
!1959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1960, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1961, nameTableKind: None)
!1960 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/clone/coreutils")
!1961 = !{!1962, !27, !1967, !1969, !1971, !1973, !1975, !1977, !1979, !1981, !1984, !731}
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!27, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1966, line: 83, baseType: !143)
!1966 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/clone/coreutils")
!1967 = !DISubroutineType(types: !1968)
!1968 = !{null, !1965}
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!27, !1965}
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!27, !146, !228, !1964}
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!27, !146, !1964}
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!27, !27, !1964}
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!27, !146, !1965}
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!27, !27, !1965}
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!27, !1965, !1965, !1983, !1964}
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1966, line: 82, baseType: !178)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!1983, !146}
!1986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1987, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1988, nameTableKind: None)
!1987 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/clone/coreutils")
!1988 = !{!1989, !219, !2014, !164, !2016}
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!166, !1991}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2011, !2012, !2013}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1993, file: !192, line: 48, baseType: !195, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1993, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1993, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1993, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1993, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1993, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1993, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1993, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1993, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1993, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1993, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1993, file: !192, line: 91, baseType: !2007, size: 128, offset: 576)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2007, file: !215, line: 11, baseType: !164, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2007, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1993, file: !192, line: 92, baseType: !2007, size: 128, offset: 704)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1993, file: !192, line: 93, baseType: !2007, size: 128, offset: 832)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1993, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!2007, !1991}
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!27, !27, !2018}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2020, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2021, nameTableKind: None)
!2020 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mbarbar/clone/coreutils")
!2021 = !{!2022, !164, !219, !2028, !2030, !2032}
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!2024, !162, !166}
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2024, file: !215, line: 11, baseType: !164, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2024, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!27, !2024, !2024}
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!27, !2024}
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!2034, !2024}
!2034 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2036, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2037, nameTableKind: None)
!2036 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!2037 = !{!167, !2038, !2074, !567, !2075, !149, !2077, !2086, !2087, !2089, !341, !2040}
!2038 = !DISubroutineType(types: !2039)
!2039 = !{null, !2040, !146, !146, !146, !567, !149}
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2042, file: !272, line: 51, baseType: !27, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2042, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2042, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2042, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2042, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2042, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2042, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2042, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2042, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2042, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2042, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2042, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2042, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2042, file: !272, line: 70, baseType: !2058, size: 64, offset: 832)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2042, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2042, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2042, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2042, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2042, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2042, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2042, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2042, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2042, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2042, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2042, file: !272, line: 93, baseType: !2058, size: 64, offset: 1344)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2042, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2042, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2042, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2042, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, elements: !326)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !2040, !146, !146, !146, !567}
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !2040, !146, !146, !146, !2079}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2036, line: 192, size: 192, elements: !2081)
!2081 = !{!2082, !2083, !2084, !2085}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2080, file: !2036, line: 192, baseType: !6, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2080, file: !2036, line: 192, baseType: !6, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2080, file: !2036, line: 192, baseType: !167, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2080, file: !2036, line: 192, baseType: !167, size: 64, offset: 128)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 640, elements: !551)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !2040, !146, !146, !146}
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2090, line: 52, baseType: !2091)
!2090 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2092, line: 32, baseType: !2093)
!2092 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar")
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2036, line: 234, baseType: !2094)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2080, size: 192, elements: !299)
!2095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2096, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2097, nameTableKind: None)
!2096 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!2097 = !{!149, !143, !167, !2098, !2100, !2102, !2104, !376, !380, !2106, !2108, !572}
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!167, !149, !149}
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!167, !167, !149, !149}
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!167, !167, !148, !149}
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!143, !149}
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!167, !167, !148}
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!167, !176, !149}
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2112, nameTableKind: None)
!2111 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!2112 = !{!341, !330}
!2113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2114, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2115, nameTableKind: None)
!2114 = !DIFile(filename: "./lib/xdectoumax.c", directory: "/home/mbarbar/clone/coreutils")
!2115 = !{!2116, !1322, !168, !27, !2118}
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!168, !146, !27, !168, !168, !146, !146, !27}
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!168, !146, !168, !168, !146, !146, !27}
!2120 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2121, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2122, nameTableKind: None)
!2121 = !DIFile(filename: "./lib/xgetcwd.c", directory: "/home/mbarbar/clone/coreutils")
!2122 = !{!2123, !143, !27}
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!143}
!2125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2126, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2127, nameTableKind: None)
!2126 = !DIFile(filename: "./lib/xgethostname.c", directory: "/home/mbarbar/clone/coreutils")
!2127 = !{!167, !2123, !143, !149, !27}
!2128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2129, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2130, nameTableKind: None)
!2129 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/clone/coreutils")
!2130 = !{!27, !178, !2131, !143, !142, !151, !1322, !146, !591, !147, !587, !144, !2134, !2136}
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!1322, !146, !142, !27, !2133, !146}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!1322, !2133, !27}
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!1322, !2133, !27, !27}
!2138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2139, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2140, nameTableKind: None)
!2139 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mbarbar/clone/coreutils")
!2140 = !{!2141, !330, !2151, !146, !666, !2143}
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !109, !27, !144, !2143, !146}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !519, line: 50, size: 256, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2145, file: !519, line: 52, baseType: !146, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2145, file: !519, line: 55, baseType: !27, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2145, file: !519, line: 56, baseType: !524, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2145, file: !519, line: 57, baseType: !27, size: 32, offset: 192)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{null, !109, !27, !144, !2143, !146, !27}
!2153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2154, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2155, nameTableKind: None)
!2154 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mbarbar/clone/coreutils")
!2155 = !{!27, !178, !2156, !143, !142, !168, !1322, !146, !591, !147, !587, !144, !2158, !2160}
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!1322, !146, !142, !27, !1321, !146}
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!1322, !1321, !27}
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!1322, !1321, !27, !27}
!2162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2163, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2164, nameTableKind: None)
!2163 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!2164 = !{!149, !2165, !654, !591, !147}
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!149, !1874, !146, !149, !2167}
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !2169)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2170, file: !644, line: 15, baseType: !27, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2170, file: !644, line: 20, baseType: !2174, size: 32, offset: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2170, file: !644, line: 16, size: 32, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2174, file: !644, line: 18, baseType: !6, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2174, file: !644, line: 19, baseType: !653, size: 32)
!2178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2179, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2180, globals: !2228, nameTableKind: None)
!2179 = !DIFile(filename: "./lib/time_rz.c", directory: "/home/mbarbar/clone/coreutils")
!2180 = !{!143, !149, !2181, !2183, !2184, !144, !361, !2190, !2192, !141, !2210, !162, !2212, !2214, !27, !2123, !2216, !2218, !2220, !146, !147, !2222, !2226}
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!2183, !146}
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !2184)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1936, line: 21, size: 128, elements: !2186)
!2186 = !{!2187, !2188, !2189}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2185, file: !1936, line: 25, baseType: !2184, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !2185, file: !1936, line: 36, baseType: !144, size: 8, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !2185, file: !1936, line: 48, baseType: !361, offset: 72)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !2183}
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!2194, !2183, !2208, !2194}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2195, file: !787, line: 9, baseType: !27, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2195, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2195, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2195, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2195, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2195, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2195, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2195, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2195, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2195, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2195, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!162, !2183, !2194}
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !143, !146, !149}
!2214 = !DISubroutineType(types: !2215)
!2215 = !{!2183, !2183}
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!141, !2183}
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!27, !146}
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!141, !2183, !2194}
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!27, !2224, !2224}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!141, !27, !27}
!2228 = !{!2229}
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "local_tz", scope: !2178, file: !2231, line: 55, type: !2232, isLocal: true, isDefinition: true)
!2231 = !DIFile(filename: "lib/time_rz.c", directory: "/home/mbarbar/clone/coreutils")
!2232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2234, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2235, nameTableKind: None)
!2234 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!2235 = !{!680}
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2238, nameTableKind: None)
!2237 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/clone/coreutils")
!2238 = !{!6, !2239, !2244, !2247, !2249, !2253}
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!2241, !2241, !27}
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2242, line: 27, baseType: !2243)
!2242 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !165, line: 45, baseType: !151)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!2246, !2246, !27}
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2242, line: 26, baseType: !496)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!149, !149, !27}
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2251, !2251, !27}
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !2242, line: 25, baseType: !2252)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !165, line: 40, baseType: !178)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!2255, !2255, !27}
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !2242, line: 24, baseType: !2256)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !165, line: 38, baseType: !591)
!2257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2258, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2259, nameTableKind: None)
!2258 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!2259 = !{!1660, !731, !591, !1661}
!2260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2261, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2262, nameTableKind: None)
!2261 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!2262 = !{!2263, !2299, !27}
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!27, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2267, file: !272, line: 51, baseType: !27, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2267, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2267, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2267, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2267, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2267, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2267, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2267, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2267, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2267, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2267, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2267, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2267, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2267, file: !272, line: 70, baseType: !2283, size: 64, offset: 832)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2267, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2267, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2267, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2267, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2267, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2267, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2267, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2267, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2267, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2267, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2267, file: !272, line: 93, baseType: !2283, size: 64, offset: 1344)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2267, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2267, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2267, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2267, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!2300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2301, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2302, nameTableKind: None)
!2301 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!2302 = !{!572, !143}
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2305, nameTableKind: None)
!2304 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!2305 = !{!333, !146, !149, !147}
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2308, nameTableKind: None)
!2307 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!2308 = !{!167, !2309, !146}
!2309 = !DISubroutineType(types: !1045)
!2310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2311, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2312, nameTableKind: None)
!2311 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!2312 = !{!2313, !27}
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!27, !2315}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2317, file: !272, line: 51, baseType: !27, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2317, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2317, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2317, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2317, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2317, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2317, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2317, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2317, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2317, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2317, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2317, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2317, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2317, file: !272, line: 70, baseType: !2333, size: 64, offset: 832)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2317, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2317, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2317, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2317, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2317, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2317, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2317, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2317, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2317, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2317, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2317, file: !272, line: 93, baseType: !2333, size: 64, offset: 1344)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2317, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2317, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2317, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2317, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2351, nameTableKind: None)
!2350 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!2351 = !{!167, !2352, !2388, !2355, !27}
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!27, !2354}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2356, file: !272, line: 51, baseType: !27, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2356, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2356, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2356, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2356, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2356, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2356, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2356, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2356, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2356, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2356, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2356, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2356, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2356, file: !272, line: 70, baseType: !2372, size: 64, offset: 832)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2356, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2356, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2356, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2356, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2356, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2356, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2356, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2356, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2356, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2356, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2356, file: !272, line: 93, baseType: !2372, size: 64, offset: 1344)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2356, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2356, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2356, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2356, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !2354}
!2390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2391, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2392, nameTableKind: None)
!2391 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!2392 = !{!167, !2393, !2396, !143, !2429, !27, !305}
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!27, !2395, !2429, !27}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2397, file: !272, line: 51, baseType: !27, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2397, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2397, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2397, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2397, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2397, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2397, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2397, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2397, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2397, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2397, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2397, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2397, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2397, file: !272, line: 70, baseType: !2413, size: 64, offset: 832)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2397, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2397, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2397, file: !272, line: 74, baseType: !181, size: 64, offset: 960)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2397, file: !272, line: 77, baseType: !178, size: 16, offset: 1024)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2397, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2397, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2397, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2397, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2397, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2397, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2397, file: !272, line: 93, baseType: !2413, size: 64, offset: 1344)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2397, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2397, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2397, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2397, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2090, line: 63, baseType: !181)
!2430 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2431 = !{i32 2, !"ctir", i32 1}
!2432 = !{i32 2, !"Dwarf Version", i32 4}
!2433 = !{i32 2, !"Debug Info Version", i32 3}
!2434 = !{i32 1, !"wchar_size", i32 4}
!2435 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 1450, type: !235, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2436 = !{!2437, !2437, i64 0}
!2437 = !{!"int", !2438, i64 0}
!2438 = !{!"omnipotent char", !2439, i64 0}
!2439 = !{!"Simple C/C++ TBAA"}
!2440 = !DILocalVariable(name: "argc", arg: 1, scope: !2435, file: !3, line: 1450, type: !27)
!2441 = !DILocation(line: 1450, column: 11, scope: !2435)
!2442 = !{!2443, !2443, i64 0}
!2443 = !{!"any pointer", !2438, i64 0}
!2444 = !DILocalVariable(name: "argv", arg: 2, scope: !2435, file: !3, line: 1450, type: !142)
!2445 = !DILocation(line: 1450, column: 24, scope: !2435)
!2446 = !DILocalVariable(name: "i", scope: !2435, file: !3, line: 1452, type: !27)
!2447 = !DILocation(line: 1452, column: 7, scope: !2435)
!2448 = !DILocalVariable(name: "thispend", scope: !2435, file: !3, line: 1453, type: !237)
!2449 = !DILocation(line: 1453, column: 19, scope: !2435)
!2450 = !DILocalVariable(name: "n_files", scope: !2435, file: !3, line: 1454, type: !27)
!2451 = !DILocation(line: 1454, column: 7, scope: !2435)
!2452 = !DILocation(line: 1457, column: 21, scope: !2435)
!2453 = !DILocation(line: 1457, column: 3, scope: !2435)
!2454 = !DILocation(line: 1458, column: 3, scope: !2435)
!2455 = !DILocation(line: 1459, column: 3, scope: !2435)
!2456 = !DILocation(line: 1460, column: 3, scope: !2435)
!2457 = !DILocation(line: 1462, column: 3, scope: !2435)
!2458 = !DILocation(line: 1463, column: 3, scope: !2435)
!2459 = !DILocation(line: 1468, column: 15, scope: !2435)
!2460 = !DILocation(line: 1469, column: 18, scope: !2435)
!2461 = !{!2462, !2462, i64 0}
!2462 = !{!"_Bool", !2438, i64 0}
!2463 = !DILocation(line: 1470, column: 16, scope: !2435)
!2464 = !DILocation(line: 1472, column: 23, scope: !2435)
!2465 = !{!2466, !2467, i64 0}
!2466 = !{!"timespec", !2467, i64 0, !2467, i64 8}
!2467 = !{!"long", !2438, i64 0}
!2468 = !DILocation(line: 1473, column: 24, scope: !2435)
!2469 = !{!2466, !2467, i64 8}
!2470 = !DILocation(line: 1475, column: 24, scope: !2435)
!2471 = !DILocation(line: 1475, column: 30, scope: !2435)
!2472 = !DILocation(line: 1475, column: 7, scope: !2435)
!2473 = !DILocation(line: 1475, column: 5, scope: !2435)
!2474 = !DILocation(line: 1477, column: 7, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1477, column: 7)
!2476 = !DILocation(line: 1477, column: 7, scope: !2435)
!2477 = !DILocation(line: 1478, column: 5, scope: !2475)
!2478 = !DILocation(line: 1482, column: 7, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1482, column: 7)
!2480 = !DILocation(line: 1482, column: 7, scope: !2435)
!2481 = !DILocation(line: 1483, column: 24, scope: !2479)
!2482 = !DILocation(line: 1483, column: 5, scope: !2479)
!2483 = !DILocation(line: 1484, column: 12, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 1484, column: 12)
!2485 = !DILocation(line: 1484, column: 12, scope: !2479)
!2486 = !DILocation(line: 1487, column: 11, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 1487, column: 11)
!2488 = distinct !DILexicalBlock(scope: !2484, file: !3, line: 1485, column: 5)
!2489 = !DILocation(line: 1488, column: 11, scope: !2487)
!2490 = !DILocation(line: 1488, column: 15, scope: !2487)
!2491 = !DILocation(line: 1488, column: 35, scope: !2487)
!2492 = !DILocation(line: 1488, column: 38, scope: !2487)
!2493 = !DILocation(line: 1489, column: 11, scope: !2487)
!2494 = !DILocation(line: 1489, column: 15, scope: !2487)
!2495 = !DILocation(line: 1489, column: 38, scope: !2487)
!2496 = !DILocation(line: 1489, column: 41, scope: !2487)
!2497 = !{!2438, !2438, i64 0}
!2498 = !DILocation(line: 1489, column: 48, scope: !2487)
!2499 = !DILocation(line: 1487, column: 11, scope: !2488)
!2500 = !DILocation(line: 1490, column: 28, scope: !2487)
!2501 = !DILocation(line: 1490, column: 9, scope: !2487)
!2502 = !DILocation(line: 1491, column: 5, scope: !2488)
!2503 = !DILocation(line: 1493, column: 7, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1493, column: 7)
!2505 = !DILocation(line: 1493, column: 19, scope: !2504)
!2506 = !DILocation(line: 1493, column: 7, scope: !2435)
!2507 = !DILocation(line: 1494, column: 21, scope: !2504)
!2508 = !DILocation(line: 1495, column: 21, scope: !2504)
!2509 = !DILocation(line: 1495, column: 24, scope: !2504)
!2510 = !DILocation(line: 1495, column: 40, scope: !2504)
!2511 = !DILocation(line: 1496, column: 21, scope: !2504)
!2512 = !DILocation(line: 1496, column: 24, scope: !2504)
!2513 = !DILocation(line: 1496, column: 31, scope: !2504)
!2514 = !DILocation(line: 1494, column: 20, scope: !2504)
!2515 = !DILocation(line: 1494, column: 17, scope: !2504)
!2516 = !DILocation(line: 1494, column: 5, scope: !2504)
!2517 = !DILocation(line: 1502, column: 7, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1502, column: 7)
!2519 = !DILocation(line: 1502, column: 7, scope: !2435)
!2520 = !DILocation(line: 1504, column: 24, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 1503, column: 5)
!2522 = !DILocation(line: 1504, column: 22, scope: !2521)
!2523 = !DILocation(line: 1508, column: 11, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 1508, column: 11)
!2525 = !DILocation(line: 1508, column: 26, scope: !2524)
!2526 = !DILocation(line: 1508, column: 11, scope: !2521)
!2527 = !DILocation(line: 1509, column: 9, scope: !2524)
!2528 = !DILocation(line: 1511, column: 7, scope: !2521)
!2529 = !DILocation(line: 1512, column: 5, scope: !2521)
!2530 = !DILocation(line: 1514, column: 22, scope: !2435)
!2531 = !DILocation(line: 1514, column: 13, scope: !2435)
!2532 = !DILocation(line: 1514, column: 11, scope: !2435)
!2533 = !DILocation(line: 1516, column: 23, scope: !2435)
!2534 = !DILocation(line: 1516, column: 33, scope: !2435)
!2535 = !DILocation(line: 1516, column: 46, scope: !2435)
!2536 = !DILocation(line: 1516, column: 49, scope: !2435)
!2537 = !DILocation(line: 1516, column: 59, scope: !2435)
!2538 = !DILocation(line: 1517, column: 5, scope: !2435)
!2539 = !DILocation(line: 1517, column: 8, scope: !2435)
!2540 = !DILocation(line: 1517, column: 15, scope: !2435)
!2541 = !DILocation(line: 1518, column: 5, scope: !2435)
!2542 = !DILocation(line: 1518, column: 8, scope: !2435)
!2543 = !DILocation(line: 1519, column: 5, scope: !2435)
!2544 = !DILocation(line: 1519, column: 8, scope: !2435)
!2545 = !DILocation(line: 1516, column: 21, scope: !2435)
!2546 = !DILocation(line: 1520, column: 26, scope: !2435)
!2547 = !DILocation(line: 1521, column: 24, scope: !2435)
!2548 = !DILocation(line: 1521, column: 28, scope: !2435)
!2549 = !DILocation(line: 1522, column: 28, scope: !2435)
!2550 = !DILocation(line: 1522, column: 31, scope: !2435)
!2551 = !DILocation(line: 1523, column: 28, scope: !2435)
!2552 = !DILocation(line: 1523, column: 31, scope: !2435)
!2553 = !DILocation(line: 1523, column: 47, scope: !2435)
!2554 = !DILocation(line: 1524, column: 28, scope: !2435)
!2555 = !DILocation(line: 1524, column: 31, scope: !2435)
!2556 = !DILocation(line: 0, scope: !2435)
!2557 = !DILocation(line: 1520, column: 21, scope: !2435)
!2558 = !DILocation(line: 1526, column: 7, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1526, column: 7)
!2560 = !DILocation(line: 1526, column: 7, scope: !2435)
!2561 = !DILocation(line: 1528, column: 7, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2559, file: !3, line: 1527, column: 5)
!2563 = !DILocation(line: 1529, column: 7, scope: !2562)
!2564 = !DILocation(line: 1530, column: 5, scope: !2562)
!2565 = !DILocation(line: 1532, column: 7, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1532, column: 7)
!2567 = !DILocation(line: 1532, column: 7, scope: !2435)
!2568 = !DILocation(line: 1534, column: 7, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 1533, column: 5)
!2570 = !DILocation(line: 1536, column: 18, scope: !2569)
!2571 = !DILocation(line: 1536, column: 16, scope: !2569)
!2572 = !DILocation(line: 1539, column: 13, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 1539, column: 11)
!2574 = !DILocation(line: 1539, column: 11, scope: !2569)
!2575 = !DILocation(line: 1540, column: 18, scope: !2573)
!2576 = !DILocation(line: 1540, column: 9, scope: !2573)
!2577 = !DILocation(line: 1541, column: 5, scope: !2569)
!2578 = !DILocation(line: 1543, column: 15, scope: !2435)
!2579 = !{!2467, !2467, i64 0}
!2580 = !DILocation(line: 1544, column: 24, scope: !2435)
!2581 = !DILocation(line: 1544, column: 14, scope: !2435)
!2582 = !DILocation(line: 1544, column: 12, scope: !2435)
!2583 = !DILocation(line: 1545, column: 14, scope: !2435)
!2584 = !DILocation(line: 1547, column: 3, scope: !2435)
!2585 = !DILocation(line: 1549, column: 13, scope: !2435)
!2586 = !DILocation(line: 1549, column: 20, scope: !2435)
!2587 = !DILocation(line: 1549, column: 18, scope: !2435)
!2588 = !DILocation(line: 1549, column: 11, scope: !2435)
!2589 = !DILocation(line: 1551, column: 7, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1551, column: 7)
!2591 = !DILocation(line: 1551, column: 15, scope: !2590)
!2592 = !DILocation(line: 1551, column: 7, scope: !2435)
!2593 = !DILocation(line: 1553, column: 11, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 1553, column: 11)
!2595 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 1552, column: 5)
!2596 = !DILocation(line: 1553, column: 11, scope: !2595)
!2597 = !DILocation(line: 1554, column: 9, scope: !2594)
!2598 = !DILocation(line: 1556, column: 9, scope: !2594)
!2599 = !DILocation(line: 1557, column: 5, scope: !2595)
!2600 = !DILocation(line: 1559, column: 5, scope: !2590)
!2601 = !DILocation(line: 1560, column: 20, scope: !2590)
!2602 = !DILocation(line: 1560, column: 26, scope: !2590)
!2603 = !DILocation(line: 1560, column: 7, scope: !2590)
!2604 = !DILocation(line: 1561, column: 12, scope: !2590)
!2605 = !DILocation(line: 1561, column: 16, scope: !2590)
!2606 = !DILocation(line: 1561, column: 14, scope: !2590)
!2607 = distinct !{!2607, !2600, !2608}
!2608 = !DILocation(line: 1561, column: 20, scope: !2590)
!2609 = !DILocation(line: 1563, column: 7, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1563, column: 7)
!2611 = !DILocation(line: 1563, column: 7, scope: !2435)
!2612 = !DILocation(line: 1565, column: 7, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 1564, column: 5)
!2614 = !DILocation(line: 1566, column: 12, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 1566, column: 11)
!2616 = !DILocation(line: 1566, column: 11, scope: !2613)
!2617 = !DILocation(line: 1567, column: 9, scope: !2615)
!2618 = !DILocation(line: 1569, column: 5, scope: !2613)
!2619 = !DILocation(line: 1575, column: 7, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1575, column: 7)
!2621 = !DILocation(line: 1575, column: 7, scope: !2435)
!2622 = !DILocation(line: 1577, column: 7, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 1576, column: 5)
!2624 = !DILocation(line: 1578, column: 11, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 1578, column: 11)
!2626 = !DILocation(line: 1578, column: 11, scope: !2623)
!2627 = !DILocation(line: 1579, column: 9, scope: !2625)
!2628 = !DILocation(line: 1579, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 1579, column: 9)
!2630 = !DILocation(line: 1580, column: 5, scope: !2623)
!2631 = !DILocation(line: 1581, column: 12, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 1581, column: 12)
!2633 = !DILocation(line: 1581, column: 20, scope: !2632)
!2634 = !DILocation(line: 1581, column: 25, scope: !2632)
!2635 = !DILocation(line: 1581, column: 28, scope: !2632)
!2636 = !DILocation(line: 1581, column: 41, scope: !2632)
!2637 = !DILocation(line: 1581, column: 44, scope: !2632)
!2638 = !DILocation(line: 1581, column: 58, scope: !2632)
!2639 = !{!2640, !2443, i64 24}
!2640 = !{!"pending", !2443, i64 0, !2443, i64 8, !2462, i64 16, !2443, i64 24}
!2641 = !DILocation(line: 1581, column: 63, scope: !2632)
!2642 = !DILocation(line: 1581, column: 12, scope: !2620)
!2643 = !DILocation(line: 1582, column: 20, scope: !2632)
!2644 = !DILocation(line: 1582, column: 5, scope: !2632)
!2645 = !DILocation(line: 1584, column: 3, scope: !2435)
!2646 = !DILocation(line: 1584, column: 10, scope: !2435)
!2647 = !DILocation(line: 1586, column: 18, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1585, column: 5)
!2649 = !DILocation(line: 1586, column: 16, scope: !2648)
!2650 = !DILocation(line: 1587, column: 22, scope: !2648)
!2651 = !DILocation(line: 1587, column: 36, scope: !2648)
!2652 = !DILocation(line: 1587, column: 20, scope: !2648)
!2653 = !DILocation(line: 1589, column: 11, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1589, column: 11)
!2655 = !DILocation(line: 1589, column: 11, scope: !2648)
!2656 = !DILocation(line: 1591, column: 15, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1591, column: 15)
!2658 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 1590, column: 9)
!2659 = !DILocation(line: 1591, column: 25, scope: !2657)
!2660 = !{!2640, !2443, i64 0}
!2661 = !DILocation(line: 1591, column: 30, scope: !2657)
!2662 = !DILocation(line: 1591, column: 15, scope: !2658)
!2663 = !DILocalVariable(name: "di", scope: !2664, file: !3, line: 1597, type: !254)
!2664 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 1592, column: 13)
!2665 = !DILocation(line: 1597, column: 30, scope: !2664)
!2666 = !DILocation(line: 1597, column: 35, scope: !2664)
!2667 = !DILocalVariable(name: "found", scope: !2664, file: !3, line: 1598, type: !253)
!2668 = !DILocation(line: 1598, column: 31, scope: !2664)
!2669 = !DILocation(line: 1598, column: 52, scope: !2664)
!2670 = !DILocation(line: 1598, column: 68, scope: !2664)
!2671 = !DILocation(line: 1598, column: 39, scope: !2664)
!2672 = !DILocation(line: 1600, column: 15, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 1600, column: 15)
!2674 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1600, column: 15)
!2675 = !DILocation(line: 1600, column: 15, scope: !2674)
!2676 = !DILocation(line: 1601, column: 29, scope: !2664)
!2677 = !DILocation(line: 1601, column: 15, scope: !2664)
!2678 = !DILocation(line: 1602, column: 33, scope: !2664)
!2679 = !DILocation(line: 1602, column: 15, scope: !2664)
!2680 = !DILocation(line: 1603, column: 15, scope: !2664)
!2681 = distinct !{!2681, !2645, !2682}
!2682 = !DILocation(line: 1612, column: 5, scope: !2435)
!2683 = !DILocation(line: 1605, column: 9, scope: !2658)
!2684 = !DILocation(line: 1607, column: 18, scope: !2648)
!2685 = !DILocation(line: 1607, column: 28, scope: !2648)
!2686 = !DILocation(line: 1607, column: 34, scope: !2648)
!2687 = !DILocation(line: 1607, column: 44, scope: !2648)
!2688 = !{!2640, !2443, i64 8}
!2689 = !DILocation(line: 1608, column: 18, scope: !2648)
!2690 = !DILocation(line: 1608, column: 28, scope: !2648)
!2691 = !{!2640, !2462, i64 16}
!2692 = !DILocation(line: 1607, column: 7, scope: !2648)
!2693 = !DILocation(line: 1610, column: 25, scope: !2648)
!2694 = !DILocation(line: 1610, column: 7, scope: !2648)
!2695 = !DILocation(line: 1611, column: 22, scope: !2648)
!2696 = !DILocation(line: 1614, column: 7, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1614, column: 7)
!2698 = !DILocation(line: 1614, column: 24, scope: !2697)
!2699 = !DILocation(line: 1614, column: 27, scope: !2697)
!2700 = !DILocation(line: 1614, column: 7, scope: !2435)
!2701 = !DILocalVariable(name: "j", scope: !2702, file: !3, line: 1616, type: !27)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 1615, column: 5)
!2703 = !DILocation(line: 1616, column: 11, scope: !2702)
!2704 = !DILocation(line: 1620, column: 37, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1620, column: 11)
!2706 = !{!2707, !2467, i64 0}
!2707 = !{!"bin_str", !2467, i64 0, !2443, i64 8}
!2708 = !DILocation(line: 1620, column: 41, scope: !2705)
!2709 = !DILocation(line: 1621, column: 13, scope: !2705)
!2710 = !DILocation(line: 1621, column: 48, scope: !2705)
!2711 = !{!2707, !2443, i64 8}
!2712 = !DILocation(line: 1621, column: 16, scope: !2705)
!2713 = !DILocation(line: 1621, column: 68, scope: !2705)
!2714 = !DILocation(line: 1622, column: 13, scope: !2705)
!2715 = !DILocation(line: 1622, column: 41, scope: !2705)
!2716 = !DILocation(line: 1622, column: 45, scope: !2705)
!2717 = !DILocation(line: 1623, column: 13, scope: !2705)
!2718 = !DILocation(line: 1623, column: 41, scope: !2705)
!2719 = !DILocation(line: 1623, column: 16, scope: !2705)
!2720 = !DILocation(line: 1623, column: 51, scope: !2705)
!2721 = !DILocation(line: 1620, column: 11, scope: !2702)
!2722 = !DILocation(line: 1624, column: 9, scope: !2705)
!2723 = !DILocation(line: 1626, column: 7, scope: !2702)
!2724 = !DILocation(line: 1628, column: 7, scope: !2702)
!2725 = !DILocation(line: 1634, column: 16, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1634, column: 7)
!2727 = !DILocation(line: 1634, column: 14, scope: !2726)
!2728 = !DILocation(line: 1634, column: 12, scope: !2726)
!2729 = !DILocation(line: 1634, column: 35, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 1634, column: 7)
!2731 = !DILocation(line: 1634, column: 7, scope: !2726)
!2732 = !DILocation(line: 1635, column: 9, scope: !2730)
!2733 = !DILocation(line: 1634, column: 39, scope: !2730)
!2734 = !DILocation(line: 1634, column: 7, scope: !2730)
!2735 = distinct !{!2735, !2731, !2736}
!2736 = !DILocation(line: 1635, column: 23, scope: !2726)
!2737 = !DILocation(line: 1636, column: 11, scope: !2702)
!2738 = !DILocation(line: 1636, column: 9, scope: !2702)
!2739 = !DILocation(line: 1637, column: 11, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1637, column: 11)
!2741 = !DILocation(line: 1637, column: 11, scope: !2702)
!2742 = !DILocation(line: 1638, column: 16, scope: !2740)
!2743 = !DILocation(line: 1638, column: 9, scope: !2740)
!2744 = !DILocation(line: 1639, column: 5, scope: !2702)
!2745 = !DILocation(line: 1641, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1641, column: 7)
!2747 = !DILocation(line: 1641, column: 7, scope: !2435)
!2748 = !DILocation(line: 1644, column: 7, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 1642, column: 5)
!2750 = !DILocation(line: 1645, column: 7, scope: !2749)
!2751 = !DILocation(line: 1647, column: 53, scope: !2749)
!2752 = !DILocation(line: 1647, column: 34, scope: !2749)
!2753 = !DILocation(line: 1647, column: 15, scope: !2749)
!2754 = !DILocation(line: 1646, column: 7, scope: !2749)
!2755 = !DILocation(line: 1648, column: 5, scope: !2749)
!2756 = !DILocation(line: 1650, column: 7, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1650, column: 7)
!2758 = !DILocation(line: 1650, column: 7, scope: !2435)
!2759 = !DILocation(line: 1652, column: 7, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 1652, column: 7)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 1652, column: 7)
!2762 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1651, column: 5)
!2763 = !DILocation(line: 1652, column: 7, scope: !2761)
!2764 = !DILocation(line: 1653, column: 18, scope: !2762)
!2765 = !DILocation(line: 1653, column: 7, scope: !2762)
!2766 = !DILocation(line: 1654, column: 5, scope: !2762)
!2767 = !DILocation(line: 1656, column: 10, scope: !2435)
!2768 = !DILocation(line: 1656, column: 3, scope: !2435)
!2769 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !810, file: !810, line: 99, type: !174, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2770 = !DILocalVariable(name: "status", arg: 1, scope: !2769, file: !810, line: 99, type: !27)
!2771 = !DILocation(line: 99, column: 30, scope: !2769)
!2772 = !DILocation(line: 101, column: 7, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2769, file: !810, line: 101, column: 7)
!2774 = !DILocation(line: 101, column: 14, scope: !2773)
!2775 = !DILocation(line: 101, column: 7, scope: !2769)
!2776 = !DILocation(line: 102, column: 20, scope: !2773)
!2777 = !DILocation(line: 102, column: 18, scope: !2773)
!2778 = !DILocation(line: 102, column: 5, scope: !2773)
!2779 = !DILocation(line: 103, column: 1, scope: !2769)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2781, line: 27, size: 64, elements: !2782)
!2781 = !DIFile(filename: "/usr/include/bits/ioctl-types.h", directory: "")
!2782 = !{!2783, !2784, !2785, !2786}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2780, file: !2781, line: 29, baseType: !178, size: 16)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2780, file: !2781, line: 30, baseType: !178, size: 16, offset: 16)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2780, file: !2781, line: 31, baseType: !178, size: 16, offset: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2780, file: !2781, line: 32, baseType: !178, size: 16, offset: 48)
!2787 = !DILocalVariable(name: "argc", arg: 1, scope: !894, file: !3, line: 1688, type: !27)
!2788 = !DILocation(line: 1688, column: 22, scope: !894)
!2789 = !DILocalVariable(name: "argv", arg: 2, scope: !894, file: !3, line: 1688, type: !142)
!2790 = !DILocation(line: 1688, column: 35, scope: !894)
!2791 = !DILocalVariable(name: "time_style_option", scope: !894, file: !3, line: 1690, type: !143)
!2792 = !DILocation(line: 1690, column: 9, scope: !894)
!2793 = !DILocalVariable(name: "sort_type_specified", scope: !894, file: !3, line: 1692, type: !141)
!2794 = !DILocation(line: 1692, column: 8, scope: !894)
!2795 = !DILocalVariable(name: "kibibytes_specified", scope: !894, file: !3, line: 1693, type: !141)
!2796 = !DILocation(line: 1693, column: 8, scope: !894)
!2797 = !DILocation(line: 1695, column: 21, scope: !894)
!2798 = !DILocation(line: 1699, column: 11, scope: !894)
!2799 = !DILocation(line: 1699, column: 3, scope: !894)
!2800 = !DILocation(line: 1703, column: 14, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1700, column: 5)
!2802 = !DILocation(line: 1704, column: 7, scope: !2801)
!2803 = !DILocation(line: 1705, column: 7, scope: !2801)
!2804 = !DILocation(line: 1709, column: 14, scope: !2801)
!2805 = !DILocation(line: 1710, column: 7, scope: !2801)
!2806 = !DILocation(line: 1711, column: 7, scope: !2801)
!2807 = !DILocation(line: 1715, column: 11, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1715, column: 11)
!2809 = !DILocation(line: 1715, column: 11, scope: !2801)
!2810 = !DILocation(line: 1717, column: 18, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 1716, column: 9)
!2812 = !DILocation(line: 1718, column: 11, scope: !2811)
!2813 = !DILocation(line: 1720, column: 29, scope: !2811)
!2814 = !DILocation(line: 1721, column: 9, scope: !2811)
!2815 = !DILocation(line: 1724, column: 18, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 1723, column: 9)
!2817 = !DILocation(line: 1725, column: 29, scope: !2816)
!2818 = !DILocation(line: 1727, column: 7, scope: !2801)
!2819 = !DILocation(line: 1730, column: 7, scope: !2801)
!2820 = !DILocation(line: 1733, column: 13, scope: !894)
!2821 = !DILocation(line: 1734, column: 13, scope: !894)
!2822 = !DILocation(line: 1735, column: 16, scope: !894)
!2823 = !DILocation(line: 1736, column: 15, scope: !894)
!2824 = !DILocation(line: 1737, column: 20, scope: !894)
!2825 = !DILocation(line: 1738, column: 19, scope: !894)
!2826 = !DILocation(line: 1739, column: 15, scope: !894)
!2827 = !DILocation(line: 1740, column: 15, scope: !894)
!2828 = !DILocation(line: 1741, column: 13, scope: !894)
!2829 = !DILocation(line: 1742, column: 18, scope: !894)
!2830 = !DILocation(line: 1743, column: 15, scope: !894)
!2831 = !DILocation(line: 1744, column: 19, scope: !894)
!2832 = !DILocation(line: 1745, column: 17, scope: !894)
!2833 = !DILocation(line: 1746, column: 18, scope: !894)
!2834 = !DILocation(line: 1748, column: 3, scope: !894)
!2835 = !DILocation(line: 1750, column: 15, scope: !894)
!2836 = !DILocalVariable(name: "p", scope: !2837, file: !3, line: 1752, type: !146)
!2837 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1751, column: 3)
!2838 = !DILocation(line: 1752, column: 17, scope: !2837)
!2839 = !DILocation(line: 1752, column: 21, scope: !2837)
!2840 = !DILocation(line: 1753, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 1753, column: 9)
!2842 = !DILocation(line: 1753, column: 11, scope: !2841)
!2843 = !DILocation(line: 1753, column: 15, scope: !2841)
!2844 = !DILocation(line: 1753, column: 14, scope: !2841)
!2845 = !DILocation(line: 1753, column: 17, scope: !2841)
!2846 = !DILocation(line: 1753, column: 39, scope: !2841)
!2847 = !DILocation(line: 1753, column: 22, scope: !2841)
!2848 = !DILocation(line: 1753, column: 9, scope: !2837)
!2849 = !DILocation(line: 1755, column: 14, scope: !2841)
!2850 = !DILocation(line: 1756, column: 21, scope: !2841)
!2851 = !DILocation(line: 1756, column: 14, scope: !2841)
!2852 = !DILocation(line: 1754, column: 7, scope: !2841)
!2853 = !DILocalVariable(name: "ws", scope: !2854, file: !3, line: 1761, type: !2780)
!2854 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1760, column: 3)
!2855 = !DILocation(line: 1761, column: 20, scope: !2854)
!2856 = !DILocation(line: 1763, column: 9, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 1763, column: 9)
!2858 = !DILocation(line: 1763, column: 48, scope: !2857)
!2859 = !DILocation(line: 1764, column: 9, scope: !2857)
!2860 = !DILocation(line: 1764, column: 19, scope: !2857)
!2861 = !{!2862, !2863, i64 2}
!2862 = !{!"winsize", !2863, i64 0, !2863, i64 2, !2863, i64 4, !2863, i64 6}
!2863 = !{!"short", !2438, i64 0}
!2864 = !DILocation(line: 1764, column: 16, scope: !2857)
!2865 = !DILocation(line: 1764, column: 14, scope: !2857)
!2866 = !DILocation(line: 1764, column: 26, scope: !2857)
!2867 = !DILocation(line: 1764, column: 32, scope: !2857)
!2868 = !DILocation(line: 1764, column: 29, scope: !2857)
!2869 = !DILocation(line: 1764, column: 54, scope: !2857)
!2870 = !DILocation(line: 1764, column: 42, scope: !2857)
!2871 = !DILocation(line: 1764, column: 39, scope: !2857)
!2872 = !DILocation(line: 1763, column: 9, scope: !2854)
!2873 = !DILocation(line: 1765, column: 24, scope: !2857)
!2874 = !DILocation(line: 1765, column: 21, scope: !2857)
!2875 = !DILocation(line: 1765, column: 19, scope: !2857)
!2876 = !DILocation(line: 1765, column: 7, scope: !2857)
!2877 = !DILocalVariable(name: "p", scope: !2878, file: !3, line: 1770, type: !146)
!2878 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1769, column: 3)
!2879 = !DILocation(line: 1770, column: 17, scope: !2878)
!2880 = !DILocation(line: 1770, column: 21, scope: !2878)
!2881 = !DILocation(line: 1771, column: 13, scope: !2878)
!2882 = !DILocation(line: 1772, column: 9, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 1772, column: 9)
!2884 = !DILocation(line: 1772, column: 9, scope: !2878)
!2885 = !DILocalVariable(name: "tmp_ulong", scope: !2886, file: !3, line: 1774, type: !151)
!2886 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 1773, column: 7)
!2887 = !DILocation(line: 1774, column: 27, scope: !2886)
!2888 = !DILocation(line: 1775, column: 23, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 1775, column: 13)
!2890 = !DILocation(line: 1775, column: 13, scope: !2889)
!2891 = !DILocation(line: 1775, column: 53, scope: !2889)
!2892 = !DILocation(line: 1776, column: 13, scope: !2889)
!2893 = !DILocation(line: 1776, column: 16, scope: !2889)
!2894 = !DILocation(line: 1776, column: 26, scope: !2889)
!2895 = !DILocation(line: 1775, column: 13, scope: !2886)
!2896 = !DILocation(line: 1778, column: 23, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 1777, column: 11)
!2898 = !DILocation(line: 1778, column: 21, scope: !2897)
!2899 = !DILocation(line: 1779, column: 11, scope: !2897)
!2900 = !DILocation(line: 1783, column: 14, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 1781, column: 11)
!2902 = !DILocation(line: 1784, column: 27, scope: !2901)
!2903 = !DILocation(line: 1784, column: 20, scope: !2901)
!2904 = !DILocation(line: 1782, column: 13, scope: !2901)
!2905 = !DILocation(line: 1786, column: 7, scope: !2886)
!2906 = !DILocation(line: 1789, column: 3, scope: !894)
!2907 = !DILocalVariable(name: "oi", scope: !2908, file: !3, line: 1791, type: !27)
!2908 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1790, column: 5)
!2909 = !DILocation(line: 1791, column: 11, scope: !2908)
!2910 = !DILocalVariable(name: "c", scope: !2908, file: !3, line: 1792, type: !27)
!2911 = !DILocation(line: 1792, column: 11, scope: !2908)
!2912 = !DILocation(line: 1792, column: 28, scope: !2908)
!2913 = !DILocation(line: 1792, column: 34, scope: !2908)
!2914 = !DILocation(line: 1792, column: 15, scope: !2908)
!2915 = !DILocation(line: 1795, column: 11, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1795, column: 11)
!2917 = !DILocation(line: 1795, column: 13, scope: !2916)
!2918 = !DILocation(line: 1795, column: 11, scope: !2908)
!2919 = !DILocation(line: 1796, column: 9, scope: !2916)
!2920 = !DILocation(line: 1798, column: 15, scope: !2908)
!2921 = !DILocation(line: 1798, column: 7, scope: !2908)
!2922 = !DILocation(line: 1801, column: 23, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1799, column: 9)
!2924 = !DILocation(line: 1802, column: 11, scope: !2923)
!2925 = !DILocation(line: 1805, column: 11, scope: !2923)
!2926 = !DILocation(line: 1806, column: 11, scope: !2923)
!2927 = !DILocation(line: 1809, column: 21, scope: !2923)
!2928 = !DILocation(line: 1810, column: 11, scope: !2923)
!2929 = !DILocation(line: 1813, column: 26, scope: !2923)
!2930 = !DILocation(line: 1814, column: 11, scope: !2923)
!2931 = !DILocation(line: 1818, column: 23, scope: !2923)
!2932 = !DILocation(line: 1819, column: 21, scope: !2923)
!2933 = !DILocation(line: 1820, column: 31, scope: !2923)
!2934 = !DILocation(line: 1822, column: 15, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1822, column: 15)
!2936 = !DILocation(line: 1822, column: 22, scope: !2935)
!2937 = !DILocation(line: 1822, column: 15, scope: !2923)
!2938 = !DILocation(line: 1823, column: 23, scope: !2935)
!2939 = !DILocation(line: 1823, column: 20, scope: !2935)
!2940 = !DILocation(line: 1823, column: 13, scope: !2935)
!2941 = !DILocation(line: 1824, column: 28, scope: !2923)
!2942 = !DILocation(line: 1825, column: 28, scope: !2923)
!2943 = !DILocation(line: 1826, column: 27, scope: !2923)
!2944 = !DILocation(line: 1827, column: 11, scope: !2923)
!2945 = !DILocation(line: 1830, column: 27, scope: !2923)
!2946 = !DILocation(line: 1831, column: 11, scope: !2923)
!2947 = !DILocation(line: 1834, column: 18, scope: !2923)
!2948 = !DILocation(line: 1835, column: 23, scope: !2923)
!2949 = !DILocation(line: 1836, column: 11, scope: !2923)
!2950 = !DILocation(line: 1839, column: 54, scope: !2923)
!2951 = !DILocation(line: 1839, column: 34, scope: !2923)
!2952 = !DILocation(line: 1841, column: 54, scope: !2923)
!2953 = !DILocation(line: 1841, column: 34, scope: !2923)
!2954 = !DILocation(line: 1842, column: 11, scope: !2923)
!2955 = !DILocation(line: 1845, column: 23, scope: !2923)
!2956 = !DILocation(line: 1846, column: 11, scope: !2923)
!2957 = !DILocation(line: 1849, column: 31, scope: !2923)
!2958 = !DILocation(line: 1850, column: 11, scope: !2923)
!2959 = !DILocation(line: 1853, column: 18, scope: !2923)
!2960 = !DILocation(line: 1854, column: 11, scope: !2923)
!2961 = !DILocation(line: 1857, column: 18, scope: !2923)
!2962 = !DILocation(line: 1858, column: 11, scope: !2923)
!2963 = !DILocation(line: 1861, column: 23, scope: !2923)
!2964 = !DILocation(line: 1862, column: 18, scope: !2923)
!2965 = !DILocation(line: 1863, column: 11, scope: !2923)
!2966 = !DILocation(line: 1866, column: 18, scope: !2923)
!2967 = !DILocation(line: 1867, column: 23, scope: !2923)
!2968 = !DILocation(line: 1868, column: 11, scope: !2923)
!2969 = !DILocation(line: 1871, column: 27, scope: !2923)
!2970 = !DILocation(line: 1872, column: 11, scope: !2923)
!2971 = !DILocation(line: 1875, column: 29, scope: !2923)
!2972 = !DILocation(line: 1876, column: 11, scope: !2923)
!2973 = !DILocation(line: 1879, column: 24, scope: !2923)
!2974 = !DILocation(line: 1880, column: 11, scope: !2923)
!2975 = !DILocation(line: 1883, column: 28, scope: !2923)
!2976 = !DILocation(line: 1884, column: 11, scope: !2923)
!2977 = !DILocation(line: 1887, column: 21, scope: !2923)
!2978 = !DILocation(line: 1888, column: 31, scope: !2923)
!2979 = !DILocation(line: 1889, column: 11, scope: !2923)
!2980 = !DILocation(line: 1892, column: 21, scope: !2923)
!2981 = !DILocation(line: 1893, column: 11, scope: !2923)
!2982 = !DILocation(line: 1896, column: 21, scope: !2923)
!2983 = !DILocation(line: 1897, column: 31, scope: !2923)
!2984 = !DILocation(line: 1898, column: 11, scope: !2923)
!2985 = !DILocation(line: 1901, column: 34, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1901, column: 15)
!2987 = !DILocation(line: 1901, column: 17, scope: !2986)
!2988 = !DILocation(line: 1901, column: 15, scope: !2923)
!2989 = !DILocation(line: 1902, column: 13, scope: !2986)
!2990 = !DILocation(line: 1904, column: 11, scope: !2923)
!2991 = !DILocation(line: 1907, column: 18, scope: !2923)
!2992 = !DILocation(line: 1908, column: 11, scope: !2923)
!2993 = !DILocation(line: 1911, column: 23, scope: !2923)
!2994 = !DILocation(line: 1912, column: 11, scope: !2923)
!2995 = !DILocation(line: 1915, column: 11, scope: !2923)
!2996 = !DILocation(line: 1916, column: 11, scope: !2923)
!2997 = !DILocation(line: 1917, column: 11, scope: !2923)
!2998 = !DILocation(line: 1920, column: 18, scope: !2923)
!2999 = !DILocation(line: 1921, column: 11, scope: !2923)
!3000 = !DILocation(line: 1924, column: 17, scope: !2923)
!3001 = !DILocation(line: 1925, column: 11, scope: !2923)
!3002 = !DILocation(line: 1928, column: 27, scope: !2923)
!3003 = !DILocation(line: 1929, column: 11, scope: !2923)
!3004 = !DILocation(line: 1932, column: 23, scope: !2923)
!3005 = !DILocation(line: 1933, column: 11, scope: !2923)
!3006 = !DILocation(line: 1936, column: 23, scope: !2923)
!3007 = !DILocation(line: 1937, column: 11, scope: !2923)
!3008 = !DILocation(line: 1940, column: 23, scope: !2923)
!3009 = !DILocation(line: 1941, column: 11, scope: !2923)
!3010 = !DILocation(line: 1944, column: 31, scope: !2923)
!3011 = !DILocation(line: 1944, column: 11, scope: !2923)
!3012 = !DILocation(line: 1945, column: 11, scope: !2923)
!3013 = !DILocation(line: 1948, column: 23, scope: !2923)
!3014 = !DILocation(line: 1949, column: 11, scope: !2923)
!3015 = !DILocation(line: 1952, column: 11, scope: !2923)
!3016 = !DILocation(line: 1953, column: 11, scope: !2923)
!3017 = !DILocation(line: 1956, column: 11, scope: !2923)
!3018 = !DILocation(line: 1957, column: 11, scope: !2923)
!3019 = !DILocation(line: 1960, column: 21, scope: !2923)
!3020 = !DILocation(line: 1961, column: 11, scope: !2923)
!3021 = !DILocation(line: 1964, column: 21, scope: !2923)
!3022 = !DILocation(line: 1965, column: 31, scope: !2923)
!3023 = !DILocation(line: 1966, column: 11, scope: !2923)
!3024 = !DILocation(line: 1969, column: 33, scope: !2923)
!3025 = !DILocation(line: 1970, column: 33, scope: !2923)
!3026 = !DILocation(line: 1969, column: 21, scope: !2923)
!3027 = !DILocation(line: 1969, column: 19, scope: !2923)
!3028 = !DILocation(line: 1971, column: 11, scope: !2923)
!3029 = !DILocation(line: 1974, column: 21, scope: !2923)
!3030 = !DILocation(line: 1975, column: 31, scope: !2923)
!3031 = !DILocation(line: 1976, column: 11, scope: !2923)
!3032 = !DILocation(line: 1979, column: 21, scope: !2923)
!3033 = !DILocation(line: 1980, column: 31, scope: !2923)
!3034 = !DILocation(line: 1981, column: 11, scope: !2923)
!3035 = !DILocation(line: 1985, column: 15, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1985, column: 15)
!3037 = !DILocation(line: 1985, column: 22, scope: !3036)
!3038 = !DILocation(line: 1985, column: 15, scope: !2923)
!3039 = !DILocation(line: 1986, column: 20, scope: !3036)
!3040 = !DILocation(line: 1986, column: 13, scope: !3036)
!3041 = !DILocation(line: 1987, column: 11, scope: !2923)
!3042 = !DILocation(line: 1990, column: 24, scope: !2923)
!3043 = !DILocation(line: 1991, column: 11, scope: !2923)
!3044 = !DILocalVariable(name: "hide", scope: !3045, file: !3, line: 1995, type: !511)
!3045 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1994, column: 11)
!3046 = !DILocation(line: 1995, column: 36, scope: !3045)
!3047 = !DILocation(line: 1995, column: 43, scope: !3045)
!3048 = !DILocation(line: 1996, column: 29, scope: !3045)
!3049 = !DILocation(line: 1996, column: 13, scope: !3045)
!3050 = !DILocation(line: 1996, column: 19, scope: !3045)
!3051 = !DILocation(line: 1996, column: 27, scope: !3045)
!3052 = !{!3053, !2443, i64 0}
!3053 = !{!"ignore_pattern", !2443, i64 0, !2443, i64 8}
!3054 = !DILocation(line: 1997, column: 26, scope: !3045)
!3055 = !DILocation(line: 1997, column: 13, scope: !3045)
!3056 = !DILocation(line: 1997, column: 19, scope: !3045)
!3057 = !DILocation(line: 1997, column: 24, scope: !3045)
!3058 = !{!3053, !2443, i64 8}
!3059 = !DILocation(line: 1998, column: 29, scope: !3045)
!3060 = !DILocation(line: 1998, column: 27, scope: !3045)
!3061 = !DILocation(line: 2000, column: 11, scope: !2923)
!3062 = !DILocation(line: 2003, column: 23, scope: !2923)
!3063 = !DILocation(line: 2003, column: 21, scope: !2923)
!3064 = !DILocation(line: 2004, column: 31, scope: !2923)
!3065 = !DILocation(line: 2005, column: 11, scope: !2923)
!3066 = !DILocation(line: 2008, column: 29, scope: !2923)
!3067 = !DILocation(line: 2009, column: 11, scope: !2923)
!3068 = !DILocation(line: 2012, column: 23, scope: !2923)
!3069 = !DILocation(line: 2012, column: 21, scope: !2923)
!3070 = !DILocation(line: 2013, column: 11, scope: !2923)
!3071 = !DILocation(line: 2016, column: 20, scope: !2923)
!3072 = !DILocation(line: 2016, column: 18, scope: !2923)
!3073 = !DILocation(line: 2017, column: 11, scope: !2923)
!3074 = !DILocation(line: 2020, column: 18, scope: !2923)
!3075 = !DILocation(line: 2021, column: 31, scope: !2923)
!3076 = !DILocation(line: 2021, column: 29, scope: !2923)
!3077 = !DILocation(line: 2022, column: 11, scope: !2923)
!3078 = !DILocalVariable(name: "i", scope: !3079, file: !3, line: 2026, type: !27)
!3079 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2025, column: 11)
!3080 = !DILocation(line: 2026, column: 17, scope: !3079)
!3081 = !DILocation(line: 2027, column: 17, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2027, column: 17)
!3083 = !DILocation(line: 2027, column: 17, scope: !3079)
!3084 = !DILocation(line: 2028, column: 19, scope: !3082)
!3085 = !DILocation(line: 2028, column: 17, scope: !3082)
!3086 = !DILocation(line: 2028, column: 15, scope: !3082)
!3087 = !DILocation(line: 2032, column: 17, scope: !3082)
!3088 = !DILocation(line: 2034, column: 33, scope: !3079)
!3089 = !DILocation(line: 2034, column: 35, scope: !3079)
!3090 = !DILocation(line: 2035, column: 33, scope: !3079)
!3091 = !DILocation(line: 2035, column: 37, scope: !3079)
!3092 = !DILocation(line: 2035, column: 39, scope: !3079)
!3093 = !DILocation(line: 2036, column: 37, scope: !3079)
!3094 = !DILocation(line: 2036, column: 40, scope: !3079)
!3095 = !DILocation(line: 0, scope: !3079)
!3096 = !DILocation(line: 2034, column: 30, scope: !3079)
!3097 = !DILocation(line: 2038, column: 17, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2038, column: 17)
!3099 = !DILocation(line: 2038, column: 17, scope: !3079)
!3100 = !DILocation(line: 2043, column: 25, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 2039, column: 15)
!3102 = !DILocation(line: 2044, column: 15, scope: !3101)
!3103 = !DILocation(line: 2045, column: 13, scope: !3079)
!3104 = !DILocalVariable(name: "i", scope: !3105, file: !3, line: 2050, type: !27)
!3105 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2049, column: 11)
!3106 = !DILocation(line: 2050, column: 17, scope: !3105)
!3107 = !DILocation(line: 2051, column: 17, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 2051, column: 17)
!3109 = !DILocation(line: 2051, column: 17, scope: !3105)
!3110 = !DILocation(line: 2052, column: 19, scope: !3108)
!3111 = !DILocation(line: 2052, column: 17, scope: !3108)
!3112 = !DILocation(line: 2052, column: 15, scope: !3108)
!3113 = !DILocation(line: 2056, column: 17, scope: !3108)
!3114 = !DILocation(line: 2058, column: 32, scope: !3105)
!3115 = !DILocation(line: 2058, column: 34, scope: !3105)
!3116 = !DILocation(line: 2059, column: 32, scope: !3105)
!3117 = !DILocation(line: 2059, column: 36, scope: !3105)
!3118 = !DILocation(line: 2059, column: 38, scope: !3105)
!3119 = !DILocation(line: 2060, column: 36, scope: !3105)
!3120 = !DILocation(line: 2060, column: 39, scope: !3105)
!3121 = !DILocation(line: 0, scope: !3105)
!3122 = !DILocation(line: 2058, column: 29, scope: !3105)
!3123 = !DILocation(line: 2061, column: 13, scope: !3105)
!3124 = !DILocation(line: 2065, column: 29, scope: !2923)
!3125 = !DILocation(line: 2065, column: 27, scope: !2923)
!3126 = !DILocation(line: 2068, column: 11, scope: !2923)
!3127 = !DILocation(line: 2072, column: 30, scope: !2923)
!3128 = !DILocation(line: 2071, column: 11, scope: !2923)
!3129 = !DILocation(line: 2075, column: 11, scope: !2923)
!3130 = !DILocation(line: 2078, column: 31, scope: !2923)
!3131 = !DILocation(line: 2078, column: 29, scope: !2923)
!3132 = !DILocation(line: 2079, column: 11, scope: !2923)
!3133 = !DILocation(line: 2082, column: 29, scope: !2923)
!3134 = !DILocation(line: 2083, column: 11, scope: !2923)
!3135 = !DILocalVariable(name: "e", scope: !3136, file: !3, line: 2087, type: !109)
!3136 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2086, column: 11)
!3137 = !DILocation(line: 2087, column: 31, scope: !3136)
!3138 = !DILocation(line: 2087, column: 50, scope: !3136)
!3139 = !DILocation(line: 2087, column: 35, scope: !3136)
!3140 = !DILocation(line: 2089, column: 17, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 2089, column: 17)
!3142 = !DILocation(line: 2089, column: 19, scope: !3141)
!3143 = !DILocation(line: 2089, column: 17, scope: !3136)
!3144 = !DILocation(line: 2090, column: 30, scope: !3141)
!3145 = !DILocation(line: 2090, column: 33, scope: !3141)
!3146 = !DILocation(line: 2090, column: 54, scope: !3141)
!3147 = !DILocation(line: 2090, column: 15, scope: !3141)
!3148 = !DILocation(line: 2091, column: 38, scope: !3136)
!3149 = !DILocation(line: 2091, column: 36, scope: !3136)
!3150 = !DILocation(line: 2092, column: 38, scope: !3136)
!3151 = !DILocation(line: 2092, column: 36, scope: !3136)
!3152 = !DILocation(line: 2094, column: 11, scope: !2923)
!3153 = !DILocation(line: 2097, column: 54, scope: !2923)
!3154 = !DILocation(line: 2097, column: 34, scope: !2923)
!3155 = !DILocation(line: 2099, column: 54, scope: !2923)
!3156 = !DILocation(line: 2099, column: 34, scope: !2923)
!3157 = !DILocation(line: 2100, column: 11, scope: !2923)
!3158 = !DILocation(line: 2103, column: 26, scope: !2923)
!3159 = !DILocation(line: 2104, column: 11, scope: !2923)
!3160 = !DILocation(line: 2106, column: 9, scope: !2923)
!3161 = !DILocation(line: 2108, column: 9, scope: !2923)
!3162 = !DILocation(line: 2111, column: 11, scope: !2923)
!3163 = distinct !{!3163, !2906, !3164}
!3164 = !DILocation(line: 2113, column: 5, scope: !894)
!3165 = !DILocation(line: 2115, column: 9, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2115, column: 7)
!3167 = !DILocation(line: 2115, column: 7, scope: !894)
!3168 = !DILocalVariable(name: "ls_block_size", scope: !3169, file: !3, line: 2117, type: !146)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 2116, column: 5)
!3170 = !DILocation(line: 2117, column: 19, scope: !3169)
!3171 = !DILocation(line: 2117, column: 35, scope: !3169)
!3172 = !DILocation(line: 2118, column: 22, scope: !3169)
!3173 = !DILocation(line: 2118, column: 7, scope: !3169)
!3174 = !DILocation(line: 2120, column: 11, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 2120, column: 11)
!3176 = !DILocation(line: 2120, column: 25, scope: !3175)
!3177 = !DILocation(line: 2120, column: 28, scope: !3175)
!3178 = !DILocation(line: 2120, column: 11, scope: !3169)
!3179 = !DILocation(line: 2122, column: 36, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 2121, column: 9)
!3181 = !DILocation(line: 2122, column: 34, scope: !3180)
!3182 = !DILocation(line: 2123, column: 36, scope: !3180)
!3183 = !DILocation(line: 2123, column: 34, scope: !3180)
!3184 = !DILocation(line: 2124, column: 9, scope: !3180)
!3185 = !DILocation(line: 2125, column: 11, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 2125, column: 11)
!3187 = !DILocation(line: 2125, column: 11, scope: !3169)
!3188 = !DILocation(line: 2127, column: 29, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 2126, column: 9)
!3190 = !DILocation(line: 2128, column: 29, scope: !3189)
!3191 = !DILocation(line: 2129, column: 9, scope: !3189)
!3192 = !DILocation(line: 2130, column: 5, scope: !3169)
!3193 = !DILocation(line: 2133, column: 13, scope: !894)
!3194 = !DILocation(line: 2133, column: 25, scope: !894)
!3195 = !DILocation(line: 2133, column: 11, scope: !894)
!3196 = !DILocation(line: 2136, column: 14, scope: !894)
!3197 = !DILocation(line: 2136, column: 26, scope: !894)
!3198 = !DILocation(line: 2136, column: 45, scope: !894)
!3199 = !DILocation(line: 2136, column: 11, scope: !894)
!3200 = !DILocalVariable(name: "qs", scope: !894, file: !3, line: 2138, type: !95)
!3201 = !DILocation(line: 2138, column: 22, scope: !894)
!3202 = !DILocation(line: 2138, column: 27, scope: !894)
!3203 = !DILocation(line: 2139, column: 33, scope: !894)
!3204 = !DILocation(line: 2139, column: 40, scope: !894)
!3205 = !DILocation(line: 2140, column: 33, scope: !894)
!3206 = !DILocation(line: 2140, column: 36, scope: !894)
!3207 = !DILocation(line: 2140, column: 43, scope: !894)
!3208 = !DILocation(line: 2141, column: 33, scope: !894)
!3209 = !DILocation(line: 2141, column: 37, scope: !894)
!3210 = !DILocation(line: 2141, column: 49, scope: !894)
!3211 = !DILocation(line: 2141, column: 52, scope: !894)
!3212 = !DILocation(line: 2141, column: 59, scope: !894)
!3213 = !DILocation(line: 2142, column: 33, scope: !894)
!3214 = !DILocation(line: 2142, column: 37, scope: !894)
!3215 = !DILocation(line: 2142, column: 40, scope: !894)
!3216 = !DILocation(line: 2143, column: 37, scope: !894)
!3217 = !DILocation(line: 2143, column: 40, scope: !894)
!3218 = !DILocation(line: 2143, column: 43, scope: !894)
!3219 = !DILocation(line: 2144, column: 37, scope: !894)
!3220 = !DILocation(line: 2144, column: 40, scope: !894)
!3221 = !DILocation(line: 2144, column: 43, scope: !894)
!3222 = !DILocation(line: 0, scope: !894)
!3223 = !DILocation(line: 2139, column: 31, scope: !894)
!3224 = !DILocation(line: 2145, column: 30, scope: !894)
!3225 = !DILocation(line: 2145, column: 28, scope: !894)
!3226 = !DILocation(line: 2146, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2146, column: 7)
!3228 = !DILocation(line: 2146, column: 10, scope: !3227)
!3229 = !DILocation(line: 2146, column: 7, scope: !894)
!3230 = !DILocation(line: 2147, column: 23, scope: !3227)
!3231 = !DILocation(line: 2147, column: 5, scope: !3227)
!3232 = !DILocation(line: 2148, column: 20, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2148, column: 7)
!3234 = !DILocation(line: 2148, column: 17, scope: !3233)
!3235 = !DILocation(line: 2148, column: 7, scope: !894)
!3236 = !DILocalVariable(name: "p", scope: !3237, file: !3, line: 2150, type: !146)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 2149, column: 5)
!3238 = !DILocation(line: 2150, column: 19, scope: !3237)
!3239 = !DILocation(line: 2151, column: 25, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2151, column: 7)
!3241 = !DILocation(line: 2151, column: 41, scope: !3240)
!3242 = !DILocation(line: 2151, column: 17, scope: !3240)
!3243 = !DILocation(line: 2151, column: 14, scope: !3240)
!3244 = !DILocation(line: 2151, column: 12, scope: !3240)
!3245 = !DILocation(line: 2151, column: 56, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 2151, column: 7)
!3247 = !DILocation(line: 2151, column: 55, scope: !3246)
!3248 = !DILocation(line: 2151, column: 7, scope: !3240)
!3249 = !DILocation(line: 2152, column: 27, scope: !3246)
!3250 = !DILocation(line: 2152, column: 54, scope: !3246)
!3251 = !DILocation(line: 2152, column: 53, scope: !3246)
!3252 = !DILocation(line: 2152, column: 9, scope: !3246)
!3253 = !DILocation(line: 2151, column: 60, scope: !3246)
!3254 = !DILocation(line: 2151, column: 7, scope: !3246)
!3255 = distinct !{!3255, !3248, !3256}
!3256 = !DILocation(line: 2152, column: 58, scope: !3240)
!3257 = !DILocation(line: 2153, column: 5, scope: !3237)
!3258 = !DILocation(line: 2155, column: 29, scope: !894)
!3259 = !DILocation(line: 2155, column: 27, scope: !894)
!3260 = !DILocation(line: 2156, column: 21, scope: !894)
!3261 = !DILocation(line: 2156, column: 3, scope: !894)
!3262 = !DILocation(line: 2161, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2161, column: 7)
!3264 = !DILocation(line: 2161, column: 13, scope: !3263)
!3265 = !DILocation(line: 2161, column: 17, scope: !3263)
!3266 = !DILocation(line: 2161, column: 24, scope: !3263)
!3267 = !DILocation(line: 2161, column: 39, scope: !3263)
!3268 = !DILocation(line: 2161, column: 42, scope: !3263)
!3269 = !DILocation(line: 2161, column: 7, scope: !894)
!3270 = !DILocation(line: 2162, column: 11, scope: !3263)
!3271 = !DILocation(line: 2162, column: 5, scope: !3263)
!3272 = !DILocation(line: 2172, column: 8, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2172, column: 7)
!3274 = !DILocation(line: 2172, column: 18, scope: !3273)
!3275 = !DILocation(line: 2172, column: 32, scope: !3273)
!3276 = !DILocation(line: 2172, column: 35, scope: !3273)
!3277 = !DILocation(line: 2172, column: 45, scope: !3273)
!3278 = !DILocation(line: 2173, column: 7, scope: !3273)
!3279 = !DILocation(line: 2173, column: 11, scope: !3273)
!3280 = !DILocation(line: 2173, column: 31, scope: !3273)
!3281 = !DILocation(line: 2173, column: 34, scope: !3273)
!3282 = !DILocation(line: 2173, column: 41, scope: !3273)
!3283 = !DILocation(line: 2172, column: 7, scope: !894)
!3284 = !DILocation(line: 2175, column: 17, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 2174, column: 5)
!3286 = !DILocation(line: 2176, column: 5, scope: !3285)
!3287 = !DILocation(line: 2178, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2178, column: 7)
!3289 = !DILocation(line: 2178, column: 14, scope: !3288)
!3290 = !DILocation(line: 2178, column: 7, scope: !894)
!3291 = !DILocalVariable(name: "style", scope: !3292, file: !3, line: 2180, type: !143)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 2179, column: 5)
!3293 = !DILocation(line: 2180, column: 13, scope: !3292)
!3294 = !DILocation(line: 2180, column: 21, scope: !3292)
!3295 = !DILocation(line: 2183, column: 13, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2183, column: 11)
!3297 = !DILocation(line: 2183, column: 11, scope: !3292)
!3298 = !DILocation(line: 2184, column: 24, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 2184, column: 13)
!3300 = !DILocation(line: 2184, column: 22, scope: !3299)
!3301 = !DILocation(line: 2184, column: 13, scope: !3296)
!3302 = !DILocation(line: 2185, column: 19, scope: !3299)
!3303 = !DILocation(line: 2185, column: 17, scope: !3299)
!3304 = !DILocation(line: 2185, column: 11, scope: !3299)
!3305 = !DILocation(line: 2184, column: 45, scope: !3299)
!3306 = !DILocation(line: 2187, column: 7, scope: !3292)
!3307 = !DILocation(line: 2187, column: 14, scope: !3292)
!3308 = !DILocation(line: 2189, column: 17, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 2189, column: 15)
!3310 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2188, column: 9)
!3311 = !DILocation(line: 2189, column: 15, scope: !3310)
!3312 = !DILocation(line: 2190, column: 20, scope: !3309)
!3313 = !DILocation(line: 2190, column: 13, scope: !3309)
!3314 = !DILocation(line: 2191, column: 17, scope: !3310)
!3315 = distinct !{!3315, !3306, !3316}
!3316 = !DILocation(line: 2192, column: 9, scope: !3292)
!3317 = !DILocation(line: 2194, column: 12, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2194, column: 11)
!3319 = !DILocation(line: 2194, column: 11, scope: !3318)
!3320 = !DILocation(line: 2194, column: 18, scope: !3318)
!3321 = !DILocation(line: 2194, column: 11, scope: !3292)
!3322 = !DILocalVariable(name: "p0", scope: !3323, file: !3, line: 2196, type: !143)
!3323 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2195, column: 9)
!3324 = !DILocation(line: 2196, column: 17, scope: !3323)
!3325 = !DILocation(line: 2196, column: 22, scope: !3323)
!3326 = !DILocation(line: 2196, column: 28, scope: !3323)
!3327 = !DILocalVariable(name: "p1", scope: !3323, file: !3, line: 2197, type: !143)
!3328 = !DILocation(line: 2197, column: 17, scope: !3323)
!3329 = !DILocation(line: 2197, column: 30, scope: !3323)
!3330 = !DILocation(line: 2197, column: 22, scope: !3323)
!3331 = !DILocation(line: 2198, column: 17, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 2198, column: 15)
!3333 = !DILocation(line: 2198, column: 15, scope: !3323)
!3334 = !DILocation(line: 2199, column: 18, scope: !3332)
!3335 = !DILocation(line: 2199, column: 16, scope: !3332)
!3336 = !DILocation(line: 2199, column: 13, scope: !3332)
!3337 = !DILocation(line: 2202, column: 27, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 2202, column: 19)
!3339 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 2201, column: 13)
!3340 = !DILocation(line: 2202, column: 30, scope: !3338)
!3341 = !DILocation(line: 2202, column: 19, scope: !3338)
!3342 = !DILocation(line: 2202, column: 19, scope: !3339)
!3343 = !DILocation(line: 2203, column: 17, scope: !3338)
!3344 = !DILocation(line: 2205, column: 18, scope: !3339)
!3345 = !DILocation(line: 2205, column: 21, scope: !3339)
!3346 = !DILocation(line: 2207, column: 33, scope: !3323)
!3347 = !DILocation(line: 2207, column: 31, scope: !3323)
!3348 = !DILocation(line: 2208, column: 33, scope: !3323)
!3349 = !DILocation(line: 2208, column: 31, scope: !3323)
!3350 = !DILocation(line: 2209, column: 9, scope: !3323)
!3351 = !DILocalVariable(name: "res", scope: !3352, file: !3, line: 2212, type: !564)
!3352 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2211, column: 9)
!3353 = !DILocation(line: 2212, column: 21, scope: !3352)
!3354 = !DILocation(line: 2212, column: 37, scope: !3352)
!3355 = !DILocation(line: 2212, column: 27, scope: !3352)
!3356 = !DILocation(line: 2215, column: 15, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 2215, column: 15)
!3358 = !DILocation(line: 2215, column: 19, scope: !3357)
!3359 = !DILocation(line: 2215, column: 15, scope: !3352)
!3360 = !DILocation(line: 2220, column: 47, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 2216, column: 13)
!3362 = !DILocation(line: 2220, column: 54, scope: !3361)
!3363 = !DILocation(line: 2220, column: 15, scope: !3361)
!3364 = !DILocation(line: 2227, column: 15, scope: !3361)
!3365 = !DILocalVariable(name: "p", scope: !3361, file: !3, line: 2228, type: !567)
!3366 = !DILocation(line: 2228, column: 34, scope: !3361)
!3367 = !DILocation(line: 2229, column: 15, scope: !3361)
!3368 = !DILocation(line: 2229, column: 23, scope: !3361)
!3369 = !DILocation(line: 2229, column: 22, scope: !3361)
!3370 = !DILocation(line: 2230, column: 26, scope: !3361)
!3371 = !DILocation(line: 2230, column: 56, scope: !3361)
!3372 = !DILocation(line: 2230, column: 54, scope: !3361)
!3373 = !DILocation(line: 2230, column: 17, scope: !3361)
!3374 = distinct !{!3374, !3367, !3375}
!3375 = !DILocation(line: 2230, column: 58, scope: !3361)
!3376 = !DILocation(line: 2231, column: 15, scope: !3361)
!3377 = !DILocation(line: 2233, column: 15, scope: !3361)
!3378 = !DILocation(line: 2235, column: 19, scope: !3352)
!3379 = !DILocation(line: 2235, column: 11, scope: !3352)
!3380 = !DILocation(line: 2238, column: 57, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 2236, column: 13)
!3382 = !DILocation(line: 2238, column: 35, scope: !3381)
!3383 = !DILocation(line: 2240, column: 15, scope: !3381)
!3384 = !DILocation(line: 2243, column: 57, scope: !3381)
!3385 = !DILocation(line: 2243, column: 35, scope: !3381)
!3386 = !DILocation(line: 2244, column: 15, scope: !3381)
!3387 = !DILocation(line: 2247, column: 35, scope: !3381)
!3388 = !DILocation(line: 2248, column: 35, scope: !3381)
!3389 = !DILocation(line: 2249, column: 15, scope: !3381)
!3390 = !DILocation(line: 2252, column: 19, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 2252, column: 19)
!3392 = !DILocation(line: 2252, column: 19, scope: !3381)
!3393 = !DILocalVariable(name: "i", scope: !3394, file: !3, line: 2254, type: !27)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 2254, column: 19)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 2253, column: 17)
!3396 = !DILocation(line: 2254, column: 28, scope: !3394)
!3397 = !DILocation(line: 2254, column: 24, scope: !3394)
!3398 = !DILocation(line: 2254, column: 35, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2254, column: 19)
!3400 = !DILocation(line: 2254, column: 37, scope: !3399)
!3401 = !DILocation(line: 2254, column: 19, scope: !3394)
!3402 = !DILocation(line: 2256, column: 57, scope: !3399)
!3403 = !DILocation(line: 2256, column: 40, scope: !3399)
!3404 = !DILocation(line: 2256, column: 23, scope: !3399)
!3405 = !DILocation(line: 2255, column: 38, scope: !3399)
!3406 = !DILocation(line: 2255, column: 21, scope: !3399)
!3407 = !DILocation(line: 2255, column: 41, scope: !3399)
!3408 = !DILocation(line: 2254, column: 43, scope: !3399)
!3409 = !DILocation(line: 2254, column: 19, scope: !3399)
!3410 = distinct !{!3410, !3401, !3411}
!3411 = !DILocation(line: 2256, column: 68, scope: !3394)
!3412 = !DILocation(line: 2257, column: 17, scope: !3395)
!3413 = !DILocation(line: 2258, column: 13, scope: !3381)
!3414 = !DILocation(line: 2261, column: 7, scope: !3292)
!3415 = !DILocation(line: 2262, column: 5, scope: !3292)
!3416 = !DILocation(line: 2264, column: 10, scope: !894)
!3417 = !DILocation(line: 2264, column: 3, scope: !894)
!3418 = !DILocation(line: 2265, column: 1, scope: !894)
!3419 = distinct !DISubprogram(name: "parse_ls_color", scope: !3, file: !3, line: 2510, type: !341, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3420 = !DILocalVariable(name: "p", scope: !3419, file: !3, line: 2512, type: !146)
!3421 = !DILocation(line: 2512, column: 15, scope: !3419)
!3422 = !DILocalVariable(name: "buf", scope: !3419, file: !3, line: 2513, type: !143)
!3423 = !DILocation(line: 2513, column: 9, scope: !3419)
!3424 = !DILocalVariable(name: "ind_no", scope: !3419, file: !3, line: 2514, type: !27)
!3425 = !DILocation(line: 2514, column: 7, scope: !3419)
!3426 = !DILocalVariable(name: "label", scope: !3419, file: !3, line: 2515, type: !592)
!3427 = !DILocation(line: 2515, column: 8, scope: !3419)
!3428 = !DILocalVariable(name: "ext", scope: !3419, file: !3, line: 2516, type: !593)
!3429 = !DILocation(line: 2516, column: 26, scope: !3419)
!3430 = !DILocation(line: 2518, column: 12, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2518, column: 7)
!3432 = !DILocation(line: 2518, column: 10, scope: !3431)
!3433 = !DILocation(line: 2518, column: 34, scope: !3431)
!3434 = !DILocation(line: 2518, column: 42, scope: !3431)
!3435 = !DILocation(line: 2518, column: 46, scope: !3431)
!3436 = !DILocation(line: 2518, column: 45, scope: !3431)
!3437 = !DILocation(line: 2518, column: 48, scope: !3431)
!3438 = !DILocation(line: 2518, column: 7, scope: !3419)
!3439 = !DILocalVariable(name: "colorterm", scope: !3440, file: !3, line: 2524, type: !146)
!3440 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 2519, column: 5)
!3441 = !DILocation(line: 2524, column: 19, scope: !3440)
!3442 = !DILocation(line: 2524, column: 31, scope: !3440)
!3443 = !DILocation(line: 2525, column: 14, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 2525, column: 11)
!3445 = !DILocation(line: 2525, column: 24, scope: !3444)
!3446 = !DILocation(line: 2525, column: 28, scope: !3444)
!3447 = !DILocation(line: 2525, column: 27, scope: !3444)
!3448 = !DILocation(line: 2525, column: 39, scope: !3444)
!3449 = !DILocation(line: 2525, column: 44, scope: !3444)
!3450 = !DILocation(line: 2525, column: 11, scope: !3440)
!3451 = !DILocation(line: 2526, column: 26, scope: !3444)
!3452 = !DILocation(line: 2526, column: 9, scope: !3444)
!3453 = !DILocation(line: 2527, column: 7, scope: !3440)
!3454 = !DILocation(line: 2530, column: 7, scope: !3419)
!3455 = !DILocation(line: 2531, column: 11, scope: !3419)
!3456 = !DILocation(line: 2531, column: 3, scope: !3419)
!3457 = !DILocation(line: 2537, column: 30, scope: !3419)
!3458 = !DILocation(line: 2537, column: 21, scope: !3419)
!3459 = !DILocation(line: 2537, column: 19, scope: !3419)
!3460 = !DILocation(line: 2537, column: 7, scope: !3419)
!3461 = !DILocalVariable(name: "state", scope: !3419, file: !3, line: 2539, type: !129)
!3462 = !DILocation(line: 2539, column: 20, scope: !3419)
!3463 = !DILocation(line: 2540, column: 3, scope: !3419)
!3464 = !DILocation(line: 2542, column: 15, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2541, column: 5)
!3466 = !DILocation(line: 2542, column: 7, scope: !3465)
!3467 = !DILocation(line: 2545, column: 20, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 2543, column: 9)
!3469 = !DILocation(line: 2545, column: 19, scope: !3468)
!3470 = !DILocation(line: 2545, column: 11, scope: !3468)
!3471 = !DILocation(line: 2548, column: 15, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2546, column: 13)
!3473 = !DILocation(line: 2549, column: 15, scope: !3472)
!3474 = !DILocation(line: 2557, column: 21, scope: !3472)
!3475 = !DILocation(line: 2557, column: 19, scope: !3472)
!3476 = !DILocation(line: 2558, column: 27, scope: !3472)
!3477 = !DILocation(line: 2558, column: 15, scope: !3472)
!3478 = !DILocation(line: 2558, column: 20, scope: !3472)
!3479 = !DILocation(line: 2558, column: 25, scope: !3472)
!3480 = !{!3481, !2443, i64 32}
!3481 = !{!"color_ext_type", !2707, i64 0, !2707, i64 16, !2443, i64 32}
!3482 = !DILocation(line: 2559, column: 32, scope: !3472)
!3483 = !DILocation(line: 2559, column: 30, scope: !3472)
!3484 = !DILocation(line: 2561, column: 15, scope: !3472)
!3485 = !DILocation(line: 2562, column: 33, scope: !3472)
!3486 = !DILocation(line: 2562, column: 15, scope: !3472)
!3487 = !DILocation(line: 2562, column: 20, scope: !3472)
!3488 = !DILocation(line: 2562, column: 24, scope: !3472)
!3489 = !DILocation(line: 2562, column: 31, scope: !3472)
!3490 = !{!3481, !2443, i64 8}
!3491 = !DILocation(line: 2564, column: 59, scope: !3472)
!3492 = !DILocation(line: 2564, column: 64, scope: !3472)
!3493 = !DILocation(line: 2564, column: 68, scope: !3472)
!3494 = !DILocation(line: 2564, column: 24, scope: !3472)
!3495 = !DILocation(line: 2564, column: 21, scope: !3472)
!3496 = !DILocation(line: 2566, column: 15, scope: !3472)
!3497 = !DILocation(line: 2569, column: 21, scope: !3472)
!3498 = !DILocation(line: 2570, column: 15, scope: !3472)
!3499 = !DILocation(line: 2573, column: 29, scope: !3472)
!3500 = !DILocation(line: 2573, column: 26, scope: !3472)
!3501 = !DILocation(line: 2573, column: 15, scope: !3472)
!3502 = !DILocation(line: 2573, column: 24, scope: !3472)
!3503 = !DILocation(line: 2574, column: 21, scope: !3472)
!3504 = !DILocation(line: 2575, column: 15, scope: !3472)
!3505 = !DILocation(line: 2577, column: 11, scope: !3468)
!3506 = !DILocation(line: 2580, column: 16, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2580, column: 15)
!3508 = !DILocation(line: 2580, column: 15, scope: !3507)
!3509 = !DILocation(line: 2580, column: 15, scope: !3468)
!3510 = !DILocation(line: 2582, column: 29, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 2581, column: 13)
!3512 = !DILocation(line: 2582, column: 26, scope: !3511)
!3513 = !DILocation(line: 2582, column: 15, scope: !3511)
!3514 = !DILocation(line: 2582, column: 24, scope: !3511)
!3515 = !DILocation(line: 2583, column: 21, scope: !3511)
!3516 = !DILocation(line: 2584, column: 13, scope: !3511)
!3517 = !DILocation(line: 2586, column: 19, scope: !3507)
!3518 = !DILocation(line: 2587, column: 11, scope: !3468)
!3519 = !DILocation(line: 2590, column: 17, scope: !3468)
!3520 = !DILocation(line: 2591, column: 18, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2591, column: 15)
!3522 = !DILocation(line: 2591, column: 15, scope: !3521)
!3523 = !DILocation(line: 2591, column: 22, scope: !3521)
!3524 = !DILocation(line: 2591, column: 15, scope: !3468)
!3525 = !DILocation(line: 2593, column: 27, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 2593, column: 15)
!3527 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2592, column: 13)
!3528 = !DILocation(line: 2593, column: 20, scope: !3526)
!3529 = !DILocation(line: 2593, column: 47, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 2593, column: 15)
!3531 = !DILocation(line: 2593, column: 32, scope: !3530)
!3532 = !DILocation(line: 2593, column: 55, scope: !3530)
!3533 = !DILocation(line: 2593, column: 15, scope: !3526)
!3534 = !DILocation(line: 2595, column: 23, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 2595, column: 23)
!3536 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 2594, column: 17)
!3537 = !DILocation(line: 2595, column: 23, scope: !3536)
!3538 = !DILocation(line: 2597, column: 56, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 2596, column: 21)
!3540 = !DILocation(line: 2597, column: 39, scope: !3539)
!3541 = !DILocation(line: 2597, column: 23, scope: !3539)
!3542 = !DILocation(line: 2597, column: 47, scope: !3539)
!3543 = !DILocation(line: 2597, column: 54, scope: !3539)
!3544 = !DILocation(line: 2599, column: 67, scope: !3539)
!3545 = !DILocation(line: 2599, column: 51, scope: !3539)
!3546 = !DILocation(line: 2599, column: 75, scope: !3539)
!3547 = !DILocation(line: 2598, column: 32, scope: !3539)
!3548 = !DILocation(line: 2598, column: 29, scope: !3539)
!3549 = !DILocation(line: 2601, column: 23, scope: !3539)
!3550 = !DILocation(line: 2603, column: 17, scope: !3536)
!3551 = !DILocation(line: 2593, column: 64, scope: !3530)
!3552 = !DILocation(line: 2593, column: 15, scope: !3530)
!3553 = distinct !{!3553, !3533, !3554}
!3554 = !DILocation(line: 2603, column: 17, scope: !3526)
!3555 = !DILocation(line: 2604, column: 19, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 2604, column: 19)
!3557 = !DILocation(line: 2604, column: 25, scope: !3556)
!3558 = !DILocation(line: 2604, column: 19, scope: !3527)
!3559 = !DILocation(line: 2605, column: 30, scope: !3556)
!3560 = !DILocation(line: 2605, column: 67, scope: !3556)
!3561 = !DILocation(line: 2605, column: 60, scope: !3556)
!3562 = !DILocation(line: 2605, column: 17, scope: !3556)
!3563 = !DILocation(line: 2606, column: 13, scope: !3527)
!3564 = !DILocation(line: 2607, column: 11, scope: !3468)
!3565 = !DILocation(line: 2610, column: 18, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2610, column: 15)
!3567 = !DILocation(line: 2610, column: 15, scope: !3566)
!3568 = !DILocation(line: 2610, column: 22, scope: !3566)
!3569 = !DILocation(line: 2610, column: 15, scope: !3468)
!3570 = !DILocation(line: 2612, column: 33, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2611, column: 13)
!3572 = !DILocation(line: 2612, column: 15, scope: !3571)
!3573 = !DILocation(line: 2612, column: 20, scope: !3571)
!3574 = !DILocation(line: 2612, column: 24, scope: !3571)
!3575 = !DILocation(line: 2612, column: 31, scope: !3571)
!3576 = !{!3481, !2443, i64 24}
!3577 = !DILocation(line: 2613, column: 60, scope: !3571)
!3578 = !DILocation(line: 2613, column: 65, scope: !3571)
!3579 = !DILocation(line: 2613, column: 69, scope: !3571)
!3580 = !DILocation(line: 2613, column: 24, scope: !3571)
!3581 = !DILocation(line: 2613, column: 21, scope: !3571)
!3582 = !DILocation(line: 2615, column: 13, scope: !3571)
!3583 = !DILocation(line: 2617, column: 19, scope: !3566)
!3584 = !DILocation(line: 2618, column: 11, scope: !3468)
!3585 = !DILocation(line: 2621, column: 11, scope: !3468)
!3586 = !DILocation(line: 2624, column: 11, scope: !3468)
!3587 = distinct !{!3587, !3463, !3588}
!3588 = !DILocation(line: 2626, column: 5, scope: !3419)
!3589 = !DILabel(scope: !3419, name: "done", file: !3, line: 2627)
!3590 = !DILocation(line: 2627, column: 2, scope: !3419)
!3591 = !DILocation(line: 2629, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2629, column: 7)
!3593 = !DILocation(line: 2629, column: 13, scope: !3592)
!3594 = !DILocation(line: 2629, column: 7, scope: !3419)
!3595 = !DILocalVariable(name: "e", scope: !3596, file: !3, line: 2631, type: !593)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2630, column: 5)
!3597 = !DILocation(line: 2631, column: 30, scope: !3596)
!3598 = !DILocalVariable(name: "e2", scope: !3596, file: !3, line: 2632, type: !593)
!3599 = !DILocation(line: 2632, column: 30, scope: !3596)
!3600 = !DILocation(line: 2635, column: 14, scope: !3596)
!3601 = !DILocation(line: 2634, column: 7, scope: !3596)
!3602 = !DILocation(line: 2636, column: 13, scope: !3596)
!3603 = !DILocation(line: 2636, column: 7, scope: !3596)
!3604 = !DILocation(line: 2637, column: 16, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 2637, column: 7)
!3606 = !DILocation(line: 2637, column: 14, scope: !3605)
!3607 = !DILocation(line: 2637, column: 12, scope: !3605)
!3608 = !DILocation(line: 2637, column: 32, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 2637, column: 7)
!3610 = !DILocation(line: 2637, column: 34, scope: !3609)
!3611 = !DILocation(line: 2637, column: 7, scope: !3605)
!3612 = !DILocation(line: 2639, column: 16, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2638, column: 9)
!3614 = !DILocation(line: 2639, column: 14, scope: !3613)
!3615 = !DILocation(line: 2640, column: 15, scope: !3613)
!3616 = !DILocation(line: 2640, column: 18, scope: !3613)
!3617 = !DILocation(line: 2640, column: 13, scope: !3613)
!3618 = !DILocation(line: 2641, column: 17, scope: !3613)
!3619 = !DILocation(line: 2641, column: 11, scope: !3613)
!3620 = !DILocation(line: 2637, column: 7, scope: !3609)
!3621 = distinct !{!3621, !3611, !3622}
!3622 = !DILocation(line: 2642, column: 9, scope: !3605)
!3623 = !DILocation(line: 2643, column: 24, scope: !3596)
!3624 = !DILocation(line: 2644, column: 5, scope: !3596)
!3625 = !DILocation(line: 2646, column: 31, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2646, column: 7)
!3627 = !DILocation(line: 2646, column: 35, scope: !3626)
!3628 = !DILocation(line: 2647, column: 7, scope: !3626)
!3629 = !DILocation(line: 2647, column: 11, scope: !3626)
!3630 = !DILocation(line: 2646, column: 7, scope: !3419)
!3631 = !DILocation(line: 2648, column: 31, scope: !3626)
!3632 = !DILocation(line: 2648, column: 5, scope: !3626)
!3633 = !DILocation(line: 2649, column: 1, scope: !3419)
!3634 = distinct !DISubprogram(name: "is_colored", scope: !3, file: !3, line: 1256, type: !331, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3635 = !DILocalVariable(name: "type", arg: 1, scope: !3634, file: !3, line: 1256, type: !53)
!3636 = !DILocation(line: 1256, column: 31, scope: !3634)
!3637 = !DILocalVariable(name: "len", scope: !3634, file: !3, line: 1258, type: !149)
!3638 = !DILocation(line: 1258, column: 10, scope: !3634)
!3639 = !DILocation(line: 1258, column: 32, scope: !3634)
!3640 = !DILocation(line: 1258, column: 16, scope: !3634)
!3641 = !DILocation(line: 1258, column: 38, scope: !3634)
!3642 = !DILocalVariable(name: "s", scope: !3634, file: !3, line: 1259, type: !146)
!3643 = !DILocation(line: 1259, column: 15, scope: !3634)
!3644 = !DILocation(line: 1259, column: 35, scope: !3634)
!3645 = !DILocation(line: 1259, column: 19, scope: !3634)
!3646 = !DILocation(line: 1259, column: 41, scope: !3634)
!3647 = !DILocation(line: 1260, column: 13, scope: !3634)
!3648 = !DILocation(line: 1260, column: 17, scope: !3634)
!3649 = !DILocation(line: 1261, column: 13, scope: !3634)
!3650 = !DILocation(line: 1261, column: 17, scope: !3634)
!3651 = !DILocation(line: 1261, column: 21, scope: !3634)
!3652 = !DILocation(line: 1261, column: 26, scope: !3634)
!3653 = !DILocation(line: 1261, column: 29, scope: !3634)
!3654 = !DILocation(line: 1261, column: 50, scope: !3634)
!3655 = !DILocation(line: 1262, column: 13, scope: !3634)
!3656 = !DILocation(line: 1262, column: 17, scope: !3634)
!3657 = !DILocation(line: 1262, column: 21, scope: !3634)
!3658 = !DILocation(line: 1262, column: 26, scope: !3634)
!3659 = !DILocation(line: 1262, column: 29, scope: !3634)
!3660 = !DILocation(line: 1262, column: 51, scope: !3634)
!3661 = !DILocation(line: 0, scope: !3634)
!3662 = !DILocation(line: 1260, column: 10, scope: !3634)
!3663 = !DILocation(line: 1260, column: 3, scope: !3634)
!3664 = distinct !DISubprogram(name: "dev_ino_hash", scope: !3, file: !3, line: 1192, type: !333, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3665 = !DILocalVariable(name: "x", arg: 1, scope: !3664, file: !3, line: 1192, type: !176)
!3666 = !DILocation(line: 1192, column: 27, scope: !3664)
!3667 = !DILocalVariable(name: "table_size", arg: 2, scope: !3664, file: !3, line: 1192, type: !149)
!3668 = !DILocation(line: 1192, column: 37, scope: !3664)
!3669 = !DILocalVariable(name: "p", scope: !3664, file: !3, line: 1194, type: !335)
!3670 = !DILocation(line: 1194, column: 25, scope: !3664)
!3671 = !DILocation(line: 1194, column: 29, scope: !3664)
!3672 = !DILocation(line: 1195, column: 22, scope: !3664)
!3673 = !DILocation(line: 1195, column: 25, scope: !3664)
!3674 = !{!3675, !2467, i64 0}
!3675 = !{!"dev_ino", !2467, i64 0, !2467, i64 8}
!3676 = !DILocation(line: 1195, column: 34, scope: !3664)
!3677 = !DILocation(line: 1195, column: 32, scope: !3664)
!3678 = !DILocation(line: 1195, column: 3, scope: !3664)
!3679 = distinct !DISubprogram(name: "dev_ino_compare", scope: !3, file: !3, line: 1199, type: !337, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3680 = !DILocalVariable(name: "x", arg: 1, scope: !3679, file: !3, line: 1199, type: !176)
!3681 = !DILocation(line: 1199, column: 30, scope: !3679)
!3682 = !DILocalVariable(name: "y", arg: 2, scope: !3679, file: !3, line: 1199, type: !176)
!3683 = !DILocation(line: 1199, column: 45, scope: !3679)
!3684 = !DILocalVariable(name: "a", scope: !3679, file: !3, line: 1201, type: !335)
!3685 = !DILocation(line: 1201, column: 25, scope: !3679)
!3686 = !DILocation(line: 1201, column: 29, scope: !3679)
!3687 = !DILocalVariable(name: "b", scope: !3679, file: !3, line: 1202, type: !335)
!3688 = !DILocation(line: 1202, column: 25, scope: !3679)
!3689 = !DILocation(line: 1202, column: 29, scope: !3679)
!3690 = !DILocation(line: 1203, column: 10, scope: !3679)
!3691 = !{!3675, !2467, i64 8}
!3692 = !DILocation(line: 0, scope: !3679)
!3693 = !DILocation(line: 1203, column: 3, scope: !3679)
!3694 = distinct !DISubprogram(name: "dev_ino_free", scope: !3, file: !3, line: 1207, type: !339, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3695 = !DILocalVariable(name: "x", arg: 1, scope: !3694, file: !3, line: 1207, type: !167)
!3696 = !DILocation(line: 1207, column: 21, scope: !3694)
!3697 = !DILocation(line: 1209, column: 9, scope: !3694)
!3698 = !DILocation(line: 1209, column: 3, scope: !3694)
!3699 = !DILocation(line: 1210, column: 1, scope: !3694)
!3700 = distinct !DISubprogram(name: "file_escape_init", scope: !3, file: !3, line: 1085, type: !341, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3701 = !DILocalVariable(name: "i", scope: !3702, file: !3, line: 1087, type: !27)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1087, column: 3)
!3703 = !DILocation(line: 1087, column: 12, scope: !3702)
!3704 = !DILocation(line: 1087, column: 8, scope: !3702)
!3705 = !DILocation(line: 1087, column: 19, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 1087, column: 3)
!3707 = !DILocation(line: 1087, column: 21, scope: !3706)
!3708 = !DILocation(line: 1087, column: 3, scope: !3702)
!3709 = !DILocation(line: 1088, column: 30, scope: !3706)
!3710 = !DILocation(line: 1088, column: 19, scope: !3706)
!3711 = !DILocation(line: 1088, column: 33, scope: !3706)
!3712 = !DILocation(line: 1088, column: 36, scope: !3706)
!3713 = !DILocation(line: 1088, column: 38, scope: !3706)
!3714 = !DILocation(line: 1088, column: 45, scope: !3706)
!3715 = !DILocation(line: 1088, column: 48, scope: !3706)
!3716 = !DILocation(line: 1088, column: 50, scope: !3706)
!3717 = !DILocation(line: 1088, column: 57, scope: !3706)
!3718 = !DILocation(line: 1088, column: 60, scope: !3706)
!3719 = !DILocation(line: 1088, column: 62, scope: !3706)
!3720 = !DILocation(line: 1088, column: 69, scope: !3706)
!3721 = !DILocation(line: 1088, column: 72, scope: !3706)
!3722 = !DILocation(line: 1088, column: 74, scope: !3706)
!3723 = !DILocation(line: 1088, column: 13, scope: !3706)
!3724 = !DILocation(line: 1088, column: 5, scope: !3706)
!3725 = !DILocation(line: 1088, column: 16, scope: !3706)
!3726 = !DILocation(line: 1087, column: 29, scope: !3706)
!3727 = !DILocation(line: 1087, column: 3, scope: !3706)
!3728 = distinct !{!3728, !3708, !3729}
!3729 = !DILocation(line: 1088, column: 77, scope: !3702)
!3730 = !DILocation(line: 1089, column: 1, scope: !3700)
!3731 = distinct !DISubprogram(name: "clear_files", scope: !3, file: !3, line: 2990, type: !341, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3732 = !DILocalVariable(name: "i", scope: !3733, file: !3, line: 2992, type: !149)
!3733 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 2992, column: 3)
!3734 = !DILocation(line: 2992, column: 15, scope: !3733)
!3735 = !DILocation(line: 2992, column: 8, scope: !3733)
!3736 = !DILocation(line: 2992, column: 22, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 2992, column: 3)
!3738 = !DILocation(line: 2992, column: 26, scope: !3737)
!3739 = !DILocation(line: 2992, column: 24, scope: !3737)
!3740 = !DILocation(line: 2992, column: 3, scope: !3733)
!3741 = !DILocalVariable(name: "f", scope: !3742, file: !3, line: 2994, type: !252)
!3742 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 2993, column: 5)
!3743 = !DILocation(line: 2994, column: 24, scope: !3742)
!3744 = !DILocation(line: 2994, column: 28, scope: !3742)
!3745 = !DILocation(line: 2994, column: 40, scope: !3742)
!3746 = !DILocation(line: 2995, column: 17, scope: !3742)
!3747 = !DILocation(line: 2995, column: 7, scope: !3742)
!3748 = !DILocation(line: 2996, column: 5, scope: !3742)
!3749 = !DILocation(line: 2992, column: 39, scope: !3737)
!3750 = !DILocation(line: 2992, column: 3, scope: !3737)
!3751 = distinct !{!3751, !3740, !3752}
!3752 = !DILocation(line: 2996, column: 5, scope: !3733)
!3753 = !DILocation(line: 2998, column: 14, scope: !3731)
!3754 = !DILocation(line: 2999, column: 19, scope: !3731)
!3755 = !DILocation(line: 3000, column: 15, scope: !3731)
!3756 = !DILocation(line: 3001, column: 22, scope: !3731)
!3757 = !DILocation(line: 3002, column: 20, scope: !3731)
!3758 = !DILocation(line: 3003, column: 15, scope: !3731)
!3759 = !DILocation(line: 3004, column: 15, scope: !3731)
!3760 = !DILocation(line: 3005, column: 15, scope: !3731)
!3761 = !DILocation(line: 3006, column: 16, scope: !3731)
!3762 = !DILocation(line: 3007, column: 18, scope: !3731)
!3763 = !DILocation(line: 3008, column: 29, scope: !3731)
!3764 = !DILocation(line: 3009, column: 29, scope: !3731)
!3765 = !DILocation(line: 3010, column: 19, scope: !3731)
!3766 = !DILocation(line: 3011, column: 1, scope: !3731)
!3767 = distinct !DISubprogram(name: "gobble_file", scope: !3, file: !3, line: 3111, type: !667, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3768 = !DILocalVariable(name: "name", arg: 1, scope: !3767, file: !3, line: 3111, type: !146)
!3769 = !DILocation(line: 3111, column: 26, scope: !3767)
!3770 = !DILocalVariable(name: "type", arg: 2, scope: !3767, file: !3, line: 3111, type: !36)
!3771 = !DILocation(line: 3111, column: 46, scope: !3767)
!3772 = !DILocalVariable(name: "inode", arg: 3, scope: !3767, file: !3, line: 3111, type: !258)
!3773 = !DILocation(line: 3111, column: 58, scope: !3767)
!3774 = !DILocalVariable(name: "command_line_arg", arg: 4, scope: !3767, file: !3, line: 3112, type: !141)
!3775 = !DILocation(line: 3112, column: 19, scope: !3767)
!3776 = !DILocalVariable(name: "dirname", arg: 5, scope: !3767, file: !3, line: 3112, type: !146)
!3777 = !DILocation(line: 3112, column: 49, scope: !3767)
!3778 = !DILocalVariable(name: "blocks", scope: !3767, file: !3, line: 3114, type: !168)
!3779 = !DILocation(line: 3114, column: 13, scope: !3767)
!3780 = !DILocalVariable(name: "f", scope: !3767, file: !3, line: 3115, type: !252)
!3781 = !DILocation(line: 3115, column: 20, scope: !3767)
!3782 = !DILocation(line: 3119, column: 3, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3119, column: 3)
!3784 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3119, column: 3)
!3785 = !DILocation(line: 3119, column: 3, scope: !3784)
!3786 = !DILocation(line: 3121, column: 7, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3121, column: 7)
!3788 = !DILocation(line: 3121, column: 21, scope: !3787)
!3789 = !DILocation(line: 3121, column: 18, scope: !3787)
!3790 = !DILocation(line: 3121, column: 7, scope: !3767)
!3791 = !DILocation(line: 3123, column: 29, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 3122, column: 5)
!3793 = !DILocation(line: 3123, column: 39, scope: !3792)
!3794 = !DILocation(line: 3123, column: 18, scope: !3792)
!3795 = !DILocation(line: 3123, column: 16, scope: !3792)
!3796 = !DILocation(line: 3124, column: 19, scope: !3792)
!3797 = !DILocation(line: 3125, column: 5, scope: !3792)
!3798 = !DILocation(line: 3127, column: 8, scope: !3767)
!3799 = !DILocation(line: 3127, column: 17, scope: !3767)
!3800 = !DILocation(line: 3127, column: 5, scope: !3767)
!3801 = !DILocation(line: 3128, column: 11, scope: !3767)
!3802 = !DILocation(line: 3128, column: 3, scope: !3767)
!3803 = !DILocation(line: 3129, column: 20, scope: !3767)
!3804 = !DILocation(line: 3129, column: 3, scope: !3767)
!3805 = !DILocation(line: 3129, column: 6, scope: !3767)
!3806 = !DILocation(line: 3129, column: 11, scope: !3767)
!3807 = !DILocation(line: 3129, column: 18, scope: !3767)
!3808 = !{!3809, !2467, i64 32}
!3809 = !{!"fileinfo", !2443, i64 0, !2443, i64 8, !2443, i64 16, !3810, i64 24, !2438, i64 168, !2437, i64 172, !2443, i64 176, !2462, i64 184, !2462, i64 185, !2438, i64 188, !2462, i64 192, !2437, i64 196}
!3810 = !{!"stat", !2467, i64 0, !2467, i64 8, !2467, i64 16, !2437, i64 24, !2437, i64 28, !2437, i64 32, !2437, i64 36, !2467, i64 40, !2467, i64 48, !2467, i64 56, !2467, i64 64, !2466, i64 72, !2466, i64 88, !2466, i64 104, !2438, i64 120}
!3811 = !DILocation(line: 3130, column: 17, scope: !3767)
!3812 = !DILocation(line: 3130, column: 3, scope: !3767)
!3813 = !DILocation(line: 3130, column: 6, scope: !3767)
!3814 = !DILocation(line: 3130, column: 15, scope: !3767)
!3815 = !{!3809, !2438, i64 168}
!3816 = !DILocation(line: 3132, column: 3, scope: !3767)
!3817 = !DILocation(line: 3132, column: 6, scope: !3767)
!3818 = !DILocation(line: 3132, column: 13, scope: !3767)
!3819 = !{!3809, !2437, i64 196}
!3820 = !DILocation(line: 3133, column: 10, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3133, column: 7)
!3822 = !DILocation(line: 3133, column: 27, scope: !3821)
!3823 = !DILocation(line: 3133, column: 30, scope: !3821)
!3824 = !DILocation(line: 3133, column: 7, scope: !3767)
!3825 = !DILocation(line: 3136, column: 34, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 3134, column: 5)
!3827 = !DILocation(line: 3136, column: 19, scope: !3826)
!3828 = !DILocation(line: 3136, column: 7, scope: !3826)
!3829 = !DILocation(line: 3136, column: 10, scope: !3826)
!3830 = !DILocation(line: 3136, column: 17, scope: !3826)
!3831 = !DILocation(line: 3137, column: 11, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 3137, column: 11)
!3833 = !DILocation(line: 3137, column: 14, scope: !3832)
!3834 = !DILocation(line: 3137, column: 11, scope: !3826)
!3835 = !DILocation(line: 3138, column: 25, scope: !3832)
!3836 = !DILocation(line: 3138, column: 9, scope: !3832)
!3837 = !DILocation(line: 3139, column: 5, scope: !3826)
!3838 = !DILocation(line: 3141, column: 7, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3141, column: 7)
!3840 = !DILocation(line: 3142, column: 7, scope: !3839)
!3841 = !DILocation(line: 3142, column: 10, scope: !3839)
!3842 = !DILocation(line: 3143, column: 7, scope: !3839)
!3843 = !DILocation(line: 3143, column: 10, scope: !3839)
!3844 = !DILocation(line: 3147, column: 7, scope: !3839)
!3845 = !DILocation(line: 3147, column: 11, scope: !3839)
!3846 = !DILocation(line: 3147, column: 16, scope: !3839)
!3847 = !DILocation(line: 3147, column: 29, scope: !3839)
!3848 = !DILocation(line: 3147, column: 32, scope: !3839)
!3849 = !DILocation(line: 3148, column: 11, scope: !3839)
!3850 = !DILocation(line: 3148, column: 15, scope: !3839)
!3851 = !DILocation(line: 3149, column: 15, scope: !3839)
!3852 = !DILocation(line: 3149, column: 18, scope: !3839)
!3853 = !DILocation(line: 3150, column: 15, scope: !3839)
!3854 = !DILocation(line: 3150, column: 18, scope: !3839)
!3855 = !DILocation(line: 3153, column: 7, scope: !3839)
!3856 = !DILocation(line: 3153, column: 12, scope: !3839)
!3857 = !DILocation(line: 3153, column: 24, scope: !3839)
!3858 = !DILocation(line: 3153, column: 27, scope: !3839)
!3859 = !DILocation(line: 3154, column: 11, scope: !3839)
!3860 = !DILocation(line: 3154, column: 15, scope: !3839)
!3861 = !DILocation(line: 3154, column: 20, scope: !3839)
!3862 = !DILocation(line: 3154, column: 37, scope: !3839)
!3863 = !DILocation(line: 3154, column: 40, scope: !3839)
!3864 = !DILocation(line: 3154, column: 45, scope: !3839)
!3865 = !DILocation(line: 3155, column: 11, scope: !3839)
!3866 = !DILocation(line: 3155, column: 15, scope: !3839)
!3867 = !DILocation(line: 3155, column: 27, scope: !3839)
!3868 = !DILocation(line: 3156, column: 15, scope: !3839)
!3869 = !DILocation(line: 3156, column: 18, scope: !3839)
!3870 = !DILocation(line: 3156, column: 44, scope: !3839)
!3871 = !DILocation(line: 3156, column: 47, scope: !3839)
!3872 = !DILocation(line: 3159, column: 7, scope: !3839)
!3873 = !DILocation(line: 3159, column: 11, scope: !3839)
!3874 = !DILocation(line: 3159, column: 23, scope: !3839)
!3875 = !DILocation(line: 3159, column: 26, scope: !3839)
!3876 = !DILocation(line: 3159, column: 32, scope: !3839)
!3877 = !DILocation(line: 3160, column: 7, scope: !3839)
!3878 = !DILocation(line: 3160, column: 11, scope: !3839)
!3879 = !DILocation(line: 3161, column: 11, scope: !3839)
!3880 = !DILocation(line: 3161, column: 15, scope: !3839)
!3881 = !DILocation(line: 3161, column: 20, scope: !3839)
!3882 = !DILocation(line: 3161, column: 31, scope: !3839)
!3883 = !DILocation(line: 3161, column: 34, scope: !3839)
!3884 = !DILocation(line: 3165, column: 15, scope: !3839)
!3885 = !DILocation(line: 3165, column: 19, scope: !3839)
!3886 = !DILocation(line: 3165, column: 24, scope: !3839)
!3887 = !DILocation(line: 3165, column: 34, scope: !3839)
!3888 = !DILocation(line: 3165, column: 38, scope: !3839)
!3889 = !DILocation(line: 3165, column: 54, scope: !3839)
!3890 = !DILocation(line: 3172, column: 38, scope: !3839)
!3891 = !DILocation(line: 3172, column: 42, scope: !3839)
!3892 = !DILocation(line: 3173, column: 42, scope: !3839)
!3893 = !DILocation(line: 3173, column: 46, scope: !3839)
!3894 = !DILocation(line: 3174, column: 46, scope: !3839)
!3895 = !DILocation(line: 3174, column: 49, scope: !3839)
!3896 = !DILocation(line: 3175, column: 46, scope: !3839)
!3897 = !DILocation(line: 3175, column: 49, scope: !3839)
!3898 = !DILocation(line: 3176, column: 46, scope: !3839)
!3899 = !DILocation(line: 3176, column: 49, scope: !3839)
!3900 = !DILocation(line: 3141, column: 7, scope: !3767)
!3901 = !DILocalVariable(name: "full_name", scope: !3902, file: !3, line: 3181, type: !143)
!3902 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 3179, column: 5)
!3903 = !DILocation(line: 3181, column: 13, scope: !3902)
!3904 = !DILocalVariable(name: "do_deref", scope: !3902, file: !3, line: 3182, type: !141)
!3905 = !DILocation(line: 3182, column: 12, scope: !3902)
!3906 = !DILocalVariable(name: "err", scope: !3902, file: !3, line: 3183, type: !27)
!3907 = !DILocation(line: 3183, column: 11, scope: !3902)
!3908 = !DILocation(line: 3185, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3185, column: 11)
!3910 = !DILocation(line: 3185, column: 19, scope: !3909)
!3911 = !DILocation(line: 3185, column: 26, scope: !3909)
!3912 = !DILocation(line: 3185, column: 29, scope: !3909)
!3913 = !DILocation(line: 3185, column: 40, scope: !3909)
!3914 = !DILocation(line: 3185, column: 11, scope: !3902)
!3915 = !DILocation(line: 3186, column: 30, scope: !3909)
!3916 = !DILocation(line: 3186, column: 19, scope: !3909)
!3917 = !DILocation(line: 3186, column: 9, scope: !3909)
!3918 = !DILocation(line: 3189, column: 39, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 3188, column: 9)
!3920 = !DILocation(line: 3189, column: 31, scope: !3919)
!3921 = !DILocation(line: 3189, column: 55, scope: !3919)
!3922 = !DILocation(line: 3189, column: 47, scope: !3919)
!3923 = !DILocation(line: 3189, column: 45, scope: !3919)
!3924 = !DILocation(line: 3189, column: 64, scope: !3919)
!3925 = !DILocation(line: 3189, column: 23, scope: !3919)
!3926 = !DILocation(line: 3189, column: 21, scope: !3919)
!3927 = !DILocation(line: 3190, column: 19, scope: !3919)
!3928 = !DILocation(line: 3190, column: 30, scope: !3919)
!3929 = !DILocation(line: 3190, column: 39, scope: !3919)
!3930 = !DILocation(line: 3190, column: 11, scope: !3919)
!3931 = !DILocation(line: 3193, column: 11, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3193, column: 11)
!3933 = !DILocation(line: 3193, column: 11, scope: !3902)
!3934 = !DILocation(line: 3195, column: 58, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3194, column: 9)
!3936 = !DILocation(line: 3195, column: 30, scope: !3935)
!3937 = !DILocation(line: 3195, column: 11, scope: !3935)
!3938 = !DILocation(line: 3195, column: 14, scope: !3935)
!3939 = !DILocation(line: 3195, column: 28, scope: !3935)
!3940 = !{!3809, !2443, i64 16}
!3941 = !DILocation(line: 3197, column: 17, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 3197, column: 15)
!3943 = !DILocation(line: 3197, column: 20, scope: !3942)
!3944 = !DILocation(line: 3197, column: 15, scope: !3935)
!3945 = !DILocation(line: 3198, column: 27, scope: !3942)
!3946 = !DILocation(line: 3199, column: 27, scope: !3942)
!3947 = !DILocation(line: 3199, column: 57, scope: !3942)
!3948 = !DILocation(line: 3198, column: 13, scope: !3942)
!3949 = !DILocation(line: 3200, column: 9, scope: !3935)
!3950 = !DILocation(line: 3202, column: 15, scope: !3902)
!3951 = !DILocation(line: 3202, column: 7, scope: !3902)
!3952 = !DILocation(line: 3205, column: 23, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3203, column: 9)
!3954 = !DILocation(line: 3205, column: 35, scope: !3953)
!3955 = !DILocation(line: 3205, column: 38, scope: !3953)
!3956 = !DILocation(line: 3205, column: 17, scope: !3953)
!3957 = !DILocation(line: 3205, column: 15, scope: !3953)
!3958 = !DILocation(line: 3206, column: 20, scope: !3953)
!3959 = !DILocation(line: 3207, column: 11, scope: !3953)
!3960 = !DILocation(line: 3211, column: 15, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 3211, column: 15)
!3962 = !DILocation(line: 3211, column: 15, scope: !3953)
!3963 = !DILocalVariable(name: "need_lstat", scope: !3964, file: !3, line: 3213, type: !141)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 3212, column: 13)
!3965 = !DILocation(line: 3213, column: 20, scope: !3964)
!3966 = !DILocation(line: 3214, column: 27, scope: !3964)
!3967 = !DILocation(line: 3214, column: 39, scope: !3964)
!3968 = !DILocation(line: 3214, column: 42, scope: !3964)
!3969 = !DILocation(line: 3214, column: 21, scope: !3964)
!3970 = !DILocation(line: 3214, column: 19, scope: !3964)
!3971 = !DILocation(line: 3215, column: 24, scope: !3964)
!3972 = !DILocation(line: 3217, column: 19, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 3217, column: 19)
!3974 = !DILocation(line: 3217, column: 31, scope: !3973)
!3975 = !DILocation(line: 3217, column: 19, scope: !3964)
!3976 = !DILocation(line: 3218, column: 17, scope: !3973)
!3977 = !DILocation(line: 3220, column: 29, scope: !3964)
!3978 = !DILocation(line: 3220, column: 33, scope: !3964)
!3979 = !DILocation(line: 3221, column: 31, scope: !3964)
!3980 = !DILocation(line: 3221, column: 37, scope: !3964)
!3981 = !DILocation(line: 3222, column: 33, scope: !3964)
!3982 = !{!3809, !2437, i64 48}
!3983 = !DILocation(line: 3222, column: 31, scope: !3964)
!3984 = !DILocation(line: 3220, column: 28, scope: !3964)
!3985 = !DILocation(line: 3220, column: 26, scope: !3964)
!3986 = !DILocation(line: 3223, column: 20, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 3223, column: 19)
!3988 = !DILocation(line: 3223, column: 19, scope: !3964)
!3989 = !DILocation(line: 3224, column: 17, scope: !3987)
!3990 = !DILocation(line: 3230, column: 13, scope: !3964)
!3991 = !DILocation(line: 3231, column: 11, scope: !3953)
!3992 = !DILocation(line: 3234, column: 24, scope: !3953)
!3993 = !DILocation(line: 3234, column: 36, scope: !3953)
!3994 = !DILocation(line: 3234, column: 39, scope: !3953)
!3995 = !DILocation(line: 3234, column: 17, scope: !3953)
!3996 = !DILocation(line: 3234, column: 15, scope: !3953)
!3997 = !DILocation(line: 3235, column: 20, scope: !3953)
!3998 = !DILocation(line: 3236, column: 11, scope: !3953)
!3999 = !DILocation(line: 3239, column: 11, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3239, column: 11)
!4001 = !DILocation(line: 3239, column: 15, scope: !4000)
!4002 = !DILocation(line: 3239, column: 11, scope: !3902)
!4003 = !DILocation(line: 3244, column: 25, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 3240, column: 9)
!4005 = !DILocation(line: 3245, column: 25, scope: !4004)
!4006 = !DILocation(line: 3245, column: 48, scope: !4004)
!4007 = !DILocation(line: 3244, column: 11, scope: !4004)
!4008 = !DILocation(line: 3246, column: 15, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3246, column: 15)
!4010 = !DILocation(line: 3246, column: 15, scope: !4004)
!4011 = !DILocation(line: 3247, column: 13, scope: !4009)
!4012 = !DILocation(line: 3249, column: 30, scope: !4004)
!4013 = !DILocation(line: 3249, column: 21, scope: !4004)
!4014 = !DILocation(line: 3249, column: 11, scope: !4004)
!4015 = !DILocation(line: 3249, column: 14, scope: !4004)
!4016 = !DILocation(line: 3249, column: 19, scope: !4004)
!4017 = !{!3809, !2443, i64 0}
!4018 = !DILocation(line: 3250, column: 21, scope: !4004)
!4019 = !DILocation(line: 3252, column: 11, scope: !4004)
!4020 = !DILocation(line: 3255, column: 7, scope: !3902)
!4021 = !DILocation(line: 3255, column: 10, scope: !3902)
!4022 = !DILocation(line: 3255, column: 18, scope: !3902)
!4023 = !{!3809, !2462, i64 184}
!4024 = !DILocation(line: 3258, column: 12, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3258, column: 11)
!4026 = !DILocation(line: 3258, column: 17, scope: !4025)
!4027 = !DILocation(line: 3258, column: 27, scope: !4025)
!4028 = !DILocation(line: 3258, column: 30, scope: !4025)
!4029 = !DILocation(line: 3259, column: 11, scope: !4025)
!4030 = !DILocation(line: 3259, column: 14, scope: !4025)
!4031 = !DILocation(line: 3259, column: 31, scope: !4025)
!4032 = !DILocation(line: 3259, column: 34, scope: !4025)
!4033 = !DILocation(line: 3258, column: 11, scope: !3902)
!4034 = !DILocation(line: 3260, column: 51, scope: !4025)
!4035 = !DILocation(line: 3260, column: 62, scope: !4025)
!4036 = !DILocation(line: 3260, column: 29, scope: !4025)
!4037 = !DILocation(line: 3260, column: 9, scope: !4025)
!4038 = !DILocation(line: 3260, column: 12, scope: !4025)
!4039 = !DILocation(line: 3260, column: 27, scope: !4025)
!4040 = !{!3809, !2462, i64 192}
!4041 = !DILocation(line: 3262, column: 11, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3262, column: 11)
!4043 = !DILocation(line: 3262, column: 18, scope: !4042)
!4044 = !DILocation(line: 3262, column: 33, scope: !4042)
!4045 = !DILocation(line: 3262, column: 36, scope: !4042)
!4046 = !DILocation(line: 3262, column: 11, scope: !3902)
!4047 = !DILocalVariable(name: "have_scontext", scope: !4048, file: !3, line: 3264, type: !141)
!4048 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 3263, column: 9)
!4049 = !DILocation(line: 3264, column: 16, scope: !4048)
!4050 = !DILocalVariable(name: "have_acl", scope: !4048, file: !3, line: 3265, type: !141)
!4051 = !DILocation(line: 3265, column: 16, scope: !4048)
!4052 = !DILocalVariable(name: "attr_len", scope: !4048, file: !3, line: 3266, type: !27)
!4053 = !DILocation(line: 3266, column: 15, scope: !4048)
!4054 = !DILocation(line: 3266, column: 44, scope: !4048)
!4055 = !DILocation(line: 3266, column: 55, scope: !4048)
!4056 = !DILocation(line: 3266, column: 58, scope: !4048)
!4057 = !DILocation(line: 3266, column: 26, scope: !4048)
!4058 = !DILocation(line: 3267, column: 18, scope: !4048)
!4059 = !DILocation(line: 3267, column: 27, scope: !4048)
!4060 = !DILocation(line: 3267, column: 15, scope: !4048)
!4061 = !DILocation(line: 3269, column: 15, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3269, column: 15)
!4063 = !DILocation(line: 3269, column: 19, scope: !4062)
!4064 = !DILocation(line: 3269, column: 15, scope: !4048)
!4065 = !DILocation(line: 3271, column: 19, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 3271, column: 19)
!4067 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 3270, column: 13)
!4068 = !DILocation(line: 3271, column: 19, scope: !4067)
!4069 = !DILocation(line: 3272, column: 35, scope: !4066)
!4070 = !{!3809, !2443, i64 176}
!4071 = !DILocation(line: 3272, column: 33, scope: !4066)
!4072 = !DILocation(line: 3272, column: 31, scope: !4066)
!4073 = !DILocation(line: 3272, column: 17, scope: !4066)
!4074 = !DILocation(line: 3274, column: 35, scope: !4066)
!4075 = !DILocation(line: 3274, column: 33, scope: !4066)
!4076 = !DILocation(line: 3274, column: 31, scope: !4066)
!4077 = !DILocation(line: 3275, column: 13, scope: !4067)
!4078 = !DILocation(line: 3278, column: 15, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 3277, column: 13)
!4080 = !DILocation(line: 3278, column: 18, scope: !4079)
!4081 = !DILocation(line: 3278, column: 27, scope: !4079)
!4082 = !DILocation(line: 3284, column: 31, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 3284, column: 19)
!4084 = !DILocation(line: 3284, column: 19, scope: !4083)
!4085 = !DILocation(line: 3284, column: 38, scope: !4083)
!4086 = !DILocation(line: 3284, column: 41, scope: !4083)
!4087 = !DILocation(line: 3284, column: 47, scope: !4083)
!4088 = !DILocation(line: 3284, column: 19, scope: !4079)
!4089 = !DILocation(line: 3285, column: 21, scope: !4083)
!4090 = !DILocation(line: 3285, column: 17, scope: !4083)
!4091 = !DILocation(line: 3288, column: 15, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3288, column: 15)
!4093 = !DILocation(line: 3288, column: 19, scope: !4092)
!4094 = !DILocation(line: 3288, column: 24, scope: !4092)
!4095 = !DILocation(line: 3288, column: 27, scope: !4092)
!4096 = !DILocation(line: 3288, column: 34, scope: !4092)
!4097 = !DILocation(line: 3288, column: 15, scope: !4048)
!4098 = !DILocalVariable(name: "n", scope: !4099, file: !3, line: 3290, type: !27)
!4099 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 3289, column: 13)
!4100 = !DILocation(line: 3290, column: 19, scope: !4099)
!4101 = !DILocation(line: 3290, column: 43, scope: !4099)
!4102 = !DILocation(line: 3290, column: 54, scope: !4099)
!4103 = !DILocation(line: 3290, column: 23, scope: !4099)
!4104 = !DILocation(line: 3291, column: 22, scope: !4099)
!4105 = !DILocation(line: 3291, column: 24, scope: !4099)
!4106 = !DILocation(line: 3291, column: 19, scope: !4099)
!4107 = !DILocation(line: 3292, column: 31, scope: !4099)
!4108 = !DILocation(line: 3292, column: 29, scope: !4099)
!4109 = !DILocation(line: 3292, column: 24, scope: !4099)
!4110 = !DILocation(line: 3293, column: 13, scope: !4099)
!4111 = !DILocation(line: 3295, column: 27, scope: !4048)
!4112 = !DILocation(line: 3295, column: 41, scope: !4048)
!4113 = !DILocation(line: 3295, column: 45, scope: !4048)
!4114 = !DILocation(line: 3295, column: 26, scope: !4048)
!4115 = !DILocation(line: 3297, column: 29, scope: !4048)
!4116 = !DILocation(line: 3297, column: 43, scope: !4048)
!4117 = !DILocation(line: 3297, column: 47, scope: !4048)
!4118 = !DILocation(line: 3297, column: 46, scope: !4048)
!4119 = !DILocation(line: 0, scope: !4048)
!4120 = !DILocation(line: 3295, column: 11, scope: !4048)
!4121 = !DILocation(line: 3295, column: 14, scope: !4048)
!4122 = !DILocation(line: 3295, column: 23, scope: !4048)
!4123 = !{!3809, !2438, i64 188}
!4124 = !DILocation(line: 3300, column: 26, scope: !4048)
!4125 = !DILocation(line: 3300, column: 29, scope: !4048)
!4126 = !DILocation(line: 3300, column: 38, scope: !4048)
!4127 = !DILocation(line: 3300, column: 23, scope: !4048)
!4128 = !DILocation(line: 3302, column: 15, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3302, column: 15)
!4130 = !DILocation(line: 3302, column: 15, scope: !4048)
!4131 = !DILocation(line: 3303, column: 23, scope: !4129)
!4132 = !DILocation(line: 3303, column: 36, scope: !4129)
!4133 = !DILocation(line: 3303, column: 13, scope: !4129)
!4134 = !DILocation(line: 3304, column: 9, scope: !4048)
!4135 = !DILocation(line: 3306, column: 11, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3306, column: 11)
!4137 = !DILocation(line: 3307, column: 11, scope: !4136)
!4138 = !DILocation(line: 3307, column: 15, scope: !4136)
!4139 = !DILocation(line: 3307, column: 22, scope: !4136)
!4140 = !DILocation(line: 3307, column: 37, scope: !4136)
!4141 = !DILocation(line: 3307, column: 40, scope: !4136)
!4142 = !DILocation(line: 3306, column: 11, scope: !3902)
!4143 = !DILocalVariable(name: "linkstats", scope: !4144, file: !3, line: 3309, type: !191)
!4144 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 3308, column: 9)
!4145 = !DILocation(line: 3309, column: 23, scope: !4144)
!4146 = !DILocation(line: 3311, column: 26, scope: !4144)
!4147 = !DILocation(line: 3311, column: 37, scope: !4144)
!4148 = !DILocation(line: 3311, column: 40, scope: !4144)
!4149 = !DILocation(line: 3311, column: 11, scope: !4144)
!4150 = !DILocalVariable(name: "linkname", scope: !4144, file: !3, line: 3312, type: !143)
!4151 = !DILocation(line: 3312, column: 17, scope: !4144)
!4152 = !DILocation(line: 3312, column: 44, scope: !4144)
!4153 = !DILocation(line: 3312, column: 55, scope: !4144)
!4154 = !DILocation(line: 3312, column: 58, scope: !4144)
!4155 = !{!3809, !2443, i64 8}
!4156 = !DILocation(line: 3312, column: 28, scope: !4144)
!4157 = !DILocation(line: 3316, column: 15, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 3316, column: 15)
!4159 = !DILocation(line: 3316, column: 24, scope: !4158)
!4160 = !DILocation(line: 3316, column: 27, scope: !4158)
!4161 = !DILocation(line: 3316, column: 30, scope: !4158)
!4162 = !DILocation(line: 3316, column: 37, scope: !4158)
!4163 = !DILocation(line: 3316, column: 42, scope: !4158)
!4164 = !DILocation(line: 3316, column: 60, scope: !4158)
!4165 = !DILocation(line: 3316, column: 63, scope: !4158)
!4166 = !DILocation(line: 3316, column: 45, scope: !4158)
!4167 = !DILocation(line: 3316, column: 15, scope: !4144)
!4168 = !DILocation(line: 3317, column: 13, scope: !4158)
!4169 = !DILocation(line: 3317, column: 16, scope: !4158)
!4170 = !DILocation(line: 3317, column: 23, scope: !4158)
!4171 = !DILocation(line: 3321, column: 15, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 3321, column: 15)
!4173 = !DILocation(line: 3322, column: 15, scope: !4172)
!4174 = !DILocation(line: 3322, column: 32, scope: !4172)
!4175 = !DILocation(line: 3322, column: 29, scope: !4172)
!4176 = !DILocation(line: 3322, column: 48, scope: !4172)
!4177 = !DILocation(line: 3322, column: 51, scope: !4172)
!4178 = !DILocation(line: 3323, column: 15, scope: !4172)
!4179 = !DILocation(line: 3323, column: 24, scope: !4172)
!4180 = !DILocation(line: 3323, column: 18, scope: !4172)
!4181 = !DILocation(line: 3323, column: 46, scope: !4172)
!4182 = !DILocation(line: 3321, column: 15, scope: !4144)
!4183 = !DILocation(line: 3325, column: 15, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 3324, column: 13)
!4185 = !DILocation(line: 3325, column: 18, scope: !4184)
!4186 = !DILocation(line: 3325, column: 25, scope: !4184)
!4187 = !{!3809, !2462, i64 185}
!4188 = !DILocation(line: 3326, column: 39, scope: !4184)
!4189 = !{!3810, !2437, i64 24}
!4190 = !DILocation(line: 3326, column: 15, scope: !4184)
!4191 = !DILocation(line: 3326, column: 18, scope: !4184)
!4192 = !DILocation(line: 3326, column: 27, scope: !4184)
!4193 = !{!3809, !2437, i64 172}
!4194 = !DILocation(line: 3327, column: 13, scope: !4184)
!4195 = !DILocation(line: 3328, column: 17, scope: !4144)
!4196 = !DILocation(line: 3328, column: 11, scope: !4144)
!4197 = !DILocation(line: 3329, column: 9, scope: !4144)
!4198 = !DILocation(line: 3331, column: 11, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3331, column: 11)
!4200 = !DILocation(line: 3331, column: 11, scope: !3902)
!4201 = !DILocation(line: 3332, column: 9, scope: !4199)
!4202 = !DILocation(line: 3332, column: 12, scope: !4199)
!4203 = !DILocation(line: 3332, column: 21, scope: !4199)
!4204 = !DILocation(line: 3333, column: 16, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 3333, column: 16)
!4206 = !DILocation(line: 3333, column: 16, scope: !4199)
!4207 = !DILocation(line: 3335, column: 15, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 3335, column: 15)
!4209 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 3334, column: 9)
!4210 = !DILocation(line: 3335, column: 32, scope: !4208)
!4211 = !DILocation(line: 3335, column: 36, scope: !4208)
!4212 = !DILocation(line: 3335, column: 15, scope: !4209)
!4213 = !DILocation(line: 3336, column: 13, scope: !4208)
!4214 = !DILocation(line: 3336, column: 16, scope: !4208)
!4215 = !DILocation(line: 3336, column: 25, scope: !4208)
!4216 = !DILocation(line: 3338, column: 13, scope: !4208)
!4217 = !DILocation(line: 3338, column: 16, scope: !4208)
!4218 = !DILocation(line: 3338, column: 25, scope: !4208)
!4219 = !DILocation(line: 3339, column: 9, scope: !4209)
!4220 = !DILocation(line: 3341, column: 9, scope: !4205)
!4221 = !DILocation(line: 3341, column: 12, scope: !4205)
!4222 = !DILocation(line: 3341, column: 21, scope: !4205)
!4223 = !DILocation(line: 3343, column: 16, scope: !3902)
!4224 = !{!3809, !2467, i64 88}
!4225 = !DILocation(line: 3343, column: 14, scope: !3902)
!4226 = !DILocation(line: 3344, column: 11, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3344, column: 11)
!4228 = !DILocation(line: 3344, column: 18, scope: !4227)
!4229 = !DILocation(line: 3344, column: 33, scope: !4227)
!4230 = !DILocation(line: 3344, column: 36, scope: !4227)
!4231 = !DILocation(line: 3344, column: 11, scope: !3902)
!4232 = !DILocalVariable(name: "buf", scope: !4233, file: !3, line: 3346, type: !622)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 3345, column: 9)
!4234 = !DILocation(line: 3346, column: 16, scope: !4233)
!4235 = !DILocalVariable(name: "len", scope: !4233, file: !3, line: 3347, type: !27)
!4236 = !DILocation(line: 3347, column: 15, scope: !4233)
!4237 = !DILocation(line: 3347, column: 47, scope: !4233)
!4238 = !DILocation(line: 3347, column: 55, scope: !4233)
!4239 = !DILocation(line: 3347, column: 60, scope: !4233)
!4240 = !DILocation(line: 3348, column: 62, scope: !4233)
!4241 = !DILocation(line: 3347, column: 31, scope: !4233)
!4242 = !DILocation(line: 3347, column: 21, scope: !4233)
!4243 = !DILocation(line: 3350, column: 15, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 3350, column: 15)
!4245 = !DILocation(line: 3350, column: 34, scope: !4244)
!4246 = !DILocation(line: 3350, column: 32, scope: !4244)
!4247 = !DILocation(line: 3350, column: 15, scope: !4233)
!4248 = !DILocation(line: 3351, column: 32, scope: !4244)
!4249 = !DILocation(line: 3351, column: 30, scope: !4244)
!4250 = !DILocation(line: 3351, column: 13, scope: !4244)
!4251 = !DILocation(line: 3352, column: 9, scope: !4233)
!4252 = !DILocation(line: 3354, column: 11, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3354, column: 11)
!4254 = !DILocation(line: 3354, column: 18, scope: !4253)
!4255 = !DILocation(line: 3354, column: 11, scope: !3902)
!4256 = !DILocation(line: 3356, column: 15, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3356, column: 15)
!4258 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 3355, column: 9)
!4259 = !DILocation(line: 3356, column: 15, scope: !4258)
!4260 = !DILocalVariable(name: "len", scope: !4261, file: !3, line: 3358, type: !27)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 3357, column: 13)
!4262 = !DILocation(line: 3358, column: 19, scope: !4261)
!4263 = !DILocation(line: 3358, column: 44, scope: !4261)
!4264 = !DILocation(line: 3358, column: 47, scope: !4261)
!4265 = !DILocation(line: 3358, column: 52, scope: !4261)
!4266 = !{!3809, !2437, i64 52}
!4267 = !DILocation(line: 3358, column: 25, scope: !4261)
!4268 = !DILocation(line: 3359, column: 19, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 3359, column: 19)
!4270 = !DILocation(line: 3359, column: 33, scope: !4269)
!4271 = !DILocation(line: 3359, column: 31, scope: !4269)
!4272 = !DILocation(line: 3359, column: 19, scope: !4261)
!4273 = !DILocation(line: 3360, column: 31, scope: !4269)
!4274 = !DILocation(line: 3360, column: 29, scope: !4269)
!4275 = !DILocation(line: 3360, column: 17, scope: !4269)
!4276 = !DILocation(line: 3361, column: 13, scope: !4261)
!4277 = !DILocation(line: 3363, column: 15, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3363, column: 15)
!4279 = !DILocation(line: 3363, column: 15, scope: !4258)
!4280 = !DILocalVariable(name: "len", scope: !4281, file: !3, line: 3365, type: !27)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 3364, column: 13)
!4282 = !DILocation(line: 3365, column: 19, scope: !4281)
!4283 = !DILocation(line: 3365, column: 45, scope: !4281)
!4284 = !DILocation(line: 3365, column: 48, scope: !4281)
!4285 = !DILocation(line: 3365, column: 53, scope: !4281)
!4286 = !{!3809, !2437, i64 56}
!4287 = !DILocation(line: 3365, column: 25, scope: !4281)
!4288 = !DILocation(line: 3366, column: 19, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3366, column: 19)
!4290 = !DILocation(line: 3366, column: 33, scope: !4289)
!4291 = !DILocation(line: 3366, column: 31, scope: !4289)
!4292 = !DILocation(line: 3366, column: 19, scope: !4281)
!4293 = !DILocation(line: 3367, column: 31, scope: !4289)
!4294 = !DILocation(line: 3367, column: 29, scope: !4289)
!4295 = !DILocation(line: 3367, column: 17, scope: !4289)
!4296 = !DILocation(line: 3368, column: 13, scope: !4281)
!4297 = !DILocation(line: 3370, column: 15, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3370, column: 15)
!4299 = !DILocation(line: 3370, column: 15, scope: !4258)
!4300 = !DILocalVariable(name: "len", scope: !4301, file: !3, line: 3372, type: !27)
!4301 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 3371, column: 13)
!4302 = !DILocation(line: 3372, column: 19, scope: !4301)
!4303 = !DILocation(line: 3372, column: 44, scope: !4301)
!4304 = !DILocation(line: 3372, column: 47, scope: !4301)
!4305 = !DILocation(line: 3372, column: 52, scope: !4301)
!4306 = !DILocation(line: 3372, column: 25, scope: !4301)
!4307 = !DILocation(line: 3373, column: 19, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3373, column: 19)
!4309 = !DILocation(line: 3373, column: 34, scope: !4308)
!4310 = !DILocation(line: 3373, column: 32, scope: !4308)
!4311 = !DILocation(line: 3373, column: 19, scope: !4301)
!4312 = !DILocation(line: 3374, column: 32, scope: !4308)
!4313 = !DILocation(line: 3374, column: 30, scope: !4308)
!4314 = !DILocation(line: 3374, column: 17, scope: !4308)
!4315 = !DILocation(line: 3375, column: 13, scope: !4301)
!4316 = !DILocation(line: 3376, column: 9, scope: !4258)
!4317 = !DILocation(line: 3378, column: 11, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3378, column: 11)
!4319 = !DILocation(line: 3378, column: 11, scope: !3902)
!4320 = !DILocalVariable(name: "len", scope: !4321, file: !3, line: 3380, type: !27)
!4321 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 3379, column: 9)
!4322 = !DILocation(line: 3380, column: 15, scope: !4321)
!4323 = !DILocation(line: 3380, column: 29, scope: !4321)
!4324 = !DILocation(line: 3380, column: 32, scope: !4321)
!4325 = !DILocation(line: 3380, column: 21, scope: !4321)
!4326 = !DILocation(line: 3381, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3381, column: 15)
!4328 = !DILocation(line: 3381, column: 32, scope: !4327)
!4329 = !DILocation(line: 3381, column: 30, scope: !4327)
!4330 = !DILocation(line: 3381, column: 15, scope: !4321)
!4331 = !DILocation(line: 3382, column: 30, scope: !4327)
!4332 = !DILocation(line: 3382, column: 28, scope: !4327)
!4333 = !DILocation(line: 3382, column: 13, scope: !4327)
!4334 = !DILocation(line: 3383, column: 9, scope: !4321)
!4335 = !DILocation(line: 3385, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3385, column: 11)
!4337 = !DILocation(line: 3385, column: 18, scope: !4336)
!4338 = !DILocation(line: 3385, column: 11, scope: !3902)
!4339 = !DILocalVariable(name: "b", scope: !4340, file: !3, line: 3387, type: !669)
!4340 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3386, column: 9)
!4341 = !DILocation(line: 3387, column: 16, scope: !4340)
!4342 = !DILocalVariable(name: "b_len", scope: !4340, file: !3, line: 3388, type: !27)
!4343 = !DILocation(line: 3388, column: 15, scope: !4340)
!4344 = !DILocation(line: 3388, column: 42, scope: !4340)
!4345 = !DILocation(line: 3388, column: 45, scope: !4340)
!4346 = !DILocation(line: 3388, column: 50, scope: !4340)
!4347 = !{!3809, !2467, i64 40}
!4348 = !DILocation(line: 3388, column: 60, scope: !4340)
!4349 = !DILocation(line: 3388, column: 31, scope: !4340)
!4350 = !DILocation(line: 3388, column: 23, scope: !4340)
!4351 = !DILocation(line: 3389, column: 15, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3389, column: 15)
!4353 = !DILocation(line: 3389, column: 29, scope: !4352)
!4354 = !DILocation(line: 3389, column: 27, scope: !4352)
!4355 = !DILocation(line: 3389, column: 15, scope: !4340)
!4356 = !DILocation(line: 3390, column: 27, scope: !4352)
!4357 = !DILocation(line: 3390, column: 25, scope: !4352)
!4358 = !DILocation(line: 3390, column: 13, scope: !4352)
!4359 = !DILocation(line: 3392, column: 15, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3392, column: 15)
!4361 = !DILocation(line: 3392, column: 41, scope: !4360)
!4362 = !DILocation(line: 3392, column: 44, scope: !4360)
!4363 = !DILocation(line: 3392, column: 15, scope: !4340)
!4364 = !DILocalVariable(name: "buf", scope: !4365, file: !3, line: 3394, type: !669)
!4365 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 3393, column: 13)
!4366 = !DILocation(line: 3394, column: 20, scope: !4365)
!4367 = !DILocalVariable(name: "len", scope: !4365, file: !3, line: 3395, type: !27)
!4368 = !DILocation(line: 3395, column: 19, scope: !4365)
!4369 = !DILocation(line: 3395, column: 44, scope: !4365)
!4370 = !{!3809, !2467, i64 64}
!4371 = !DILocation(line: 3395, column: 69, scope: !4365)
!4372 = !DILocation(line: 3395, column: 33, scope: !4365)
!4373 = !DILocation(line: 3395, column: 25, scope: !4365)
!4374 = !DILocation(line: 3396, column: 19, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3396, column: 19)
!4376 = !DILocation(line: 3396, column: 47, scope: !4375)
!4377 = !DILocation(line: 3396, column: 45, scope: !4375)
!4378 = !DILocation(line: 3396, column: 19, scope: !4365)
!4379 = !DILocation(line: 3397, column: 45, scope: !4375)
!4380 = !DILocation(line: 3397, column: 43, scope: !4375)
!4381 = !DILocation(line: 3397, column: 17, scope: !4375)
!4382 = !DILocation(line: 3398, column: 40, scope: !4365)
!4383 = !DILocation(line: 3398, column: 65, scope: !4365)
!4384 = !DILocation(line: 3398, column: 29, scope: !4365)
!4385 = !DILocation(line: 3398, column: 21, scope: !4365)
!4386 = !DILocation(line: 3398, column: 19, scope: !4365)
!4387 = !DILocation(line: 3399, column: 19, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3399, column: 19)
!4389 = !DILocation(line: 3399, column: 47, scope: !4388)
!4390 = !DILocation(line: 3399, column: 45, scope: !4388)
!4391 = !DILocation(line: 3399, column: 19, scope: !4365)
!4392 = !DILocation(line: 3400, column: 45, scope: !4388)
!4393 = !DILocation(line: 3400, column: 43, scope: !4388)
!4394 = !DILocation(line: 3400, column: 17, scope: !4388)
!4395 = !DILocation(line: 3401, column: 21, scope: !4365)
!4396 = !DILocation(line: 3401, column: 47, scope: !4365)
!4397 = !DILocation(line: 3401, column: 53, scope: !4365)
!4398 = !DILocation(line: 3401, column: 51, scope: !4365)
!4399 = !DILocation(line: 3401, column: 19, scope: !4365)
!4400 = !DILocation(line: 3402, column: 19, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3402, column: 19)
!4402 = !DILocation(line: 3402, column: 37, scope: !4401)
!4403 = !DILocation(line: 3402, column: 35, scope: !4401)
!4404 = !DILocation(line: 3402, column: 19, scope: !4365)
!4405 = !DILocation(line: 3403, column: 35, scope: !4401)
!4406 = !DILocation(line: 3403, column: 33, scope: !4401)
!4407 = !DILocation(line: 3403, column: 17, scope: !4401)
!4408 = !DILocation(line: 3404, column: 13, scope: !4365)
!4409 = !DILocalVariable(name: "buf", scope: !4410, file: !3, line: 3407, type: !622)
!4410 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 3406, column: 13)
!4411 = !DILocation(line: 3407, column: 20, scope: !4410)
!4412 = !DILocalVariable(name: "size", scope: !4410, file: !3, line: 3408, type: !168)
!4413 = !DILocation(line: 3408, column: 25, scope: !4410)
!4414 = !DILocation(line: 3408, column: 52, scope: !4410)
!4415 = !DILocation(line: 3408, column: 55, scope: !4410)
!4416 = !DILocation(line: 3408, column: 60, scope: !4410)
!4417 = !{!3809, !2467, i64 72}
!4418 = !DILocation(line: 3408, column: 32, scope: !4410)
!4419 = !DILocalVariable(name: "len", scope: !4410, file: !3, line: 3409, type: !27)
!4420 = !DILocation(line: 3409, column: 19, scope: !4410)
!4421 = !DILocation(line: 3409, column: 51, scope: !4410)
!4422 = !DILocation(line: 3409, column: 57, scope: !4410)
!4423 = !DILocation(line: 3410, column: 51, scope: !4410)
!4424 = !DILocation(line: 3411, column: 54, scope: !4410)
!4425 = !DILocation(line: 3409, column: 35, scope: !4410)
!4426 = !DILocation(line: 3409, column: 25, scope: !4410)
!4427 = !DILocation(line: 3413, column: 19, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 3413, column: 19)
!4429 = !DILocation(line: 3413, column: 37, scope: !4428)
!4430 = !DILocation(line: 3413, column: 35, scope: !4428)
!4431 = !DILocation(line: 3413, column: 19, scope: !4410)
!4432 = !DILocation(line: 3414, column: 35, scope: !4428)
!4433 = !DILocation(line: 3414, column: 33, scope: !4428)
!4434 = !DILocation(line: 3414, column: 17, scope: !4428)
!4435 = !DILocation(line: 3416, column: 9, scope: !4340)
!4436 = !DILocation(line: 3417, column: 5, scope: !3902)
!4437 = !DILocation(line: 3419, column: 7, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3419, column: 7)
!4439 = !DILocation(line: 3419, column: 7, scope: !3767)
!4440 = !DILocalVariable(name: "buf", scope: !4441, file: !3, line: 3421, type: !669)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 3420, column: 5)
!4442 = !DILocation(line: 3421, column: 12, scope: !4441)
!4443 = !DILocalVariable(name: "len", scope: !4441, file: !3, line: 3422, type: !27)
!4444 = !DILocation(line: 3422, column: 11, scope: !4441)
!4445 = !DILocation(line: 3422, column: 36, scope: !4441)
!4446 = !DILocation(line: 3422, column: 39, scope: !4441)
!4447 = !DILocation(line: 3422, column: 44, scope: !4441)
!4448 = !DILocation(line: 3422, column: 52, scope: !4441)
!4449 = !DILocation(line: 3422, column: 25, scope: !4441)
!4450 = !DILocation(line: 3422, column: 17, scope: !4441)
!4451 = !DILocation(line: 3423, column: 11, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 3423, column: 11)
!4453 = !DILocation(line: 3423, column: 32, scope: !4452)
!4454 = !DILocation(line: 3423, column: 30, scope: !4452)
!4455 = !DILocation(line: 3423, column: 11, scope: !4441)
!4456 = !DILocation(line: 3424, column: 30, scope: !4452)
!4457 = !DILocation(line: 3424, column: 28, scope: !4452)
!4458 = !DILocation(line: 3424, column: 9, scope: !4452)
!4459 = !DILocation(line: 3425, column: 5, scope: !4441)
!4460 = !DILocation(line: 3427, column: 22, scope: !3767)
!4461 = !DILocation(line: 3427, column: 13, scope: !3767)
!4462 = !DILocation(line: 3427, column: 3, scope: !3767)
!4463 = !DILocation(line: 3427, column: 6, scope: !3767)
!4464 = !DILocation(line: 3427, column: 11, scope: !3767)
!4465 = !DILocation(line: 3428, column: 13, scope: !3767)
!4466 = !DILocation(line: 3430, column: 10, scope: !3767)
!4467 = !DILocation(line: 3430, column: 3, scope: !3767)
!4468 = !DILocation(line: 3431, column: 1, scope: !3767)
!4469 = distinct !DISubprogram(name: "queue_directory", scope: !3, file: !3, line: 2704, type: !607, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4470 = !DILocalVariable(name: "name", arg: 1, scope: !4469, file: !3, line: 2704, type: !146)
!4471 = !DILocation(line: 2704, column: 30, scope: !4469)
!4472 = !DILocalVariable(name: "realname", arg: 2, scope: !4469, file: !3, line: 2704, type: !146)
!4473 = !DILocation(line: 2704, column: 48, scope: !4469)
!4474 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !4469, file: !3, line: 2704, type: !141)
!4475 = !DILocation(line: 2704, column: 63, scope: !4469)
!4476 = !DILocalVariable(name: "new", scope: !4469, file: !3, line: 2706, type: !237)
!4477 = !DILocation(line: 2706, column: 19, scope: !4469)
!4478 = !DILocation(line: 2706, column: 25, scope: !4469)
!4479 = !DILocation(line: 2707, column: 19, scope: !4469)
!4480 = !DILocation(line: 2707, column: 39, scope: !4469)
!4481 = !DILocation(line: 2707, column: 30, scope: !4469)
!4482 = !DILocation(line: 2707, column: 3, scope: !4469)
!4483 = !DILocation(line: 2707, column: 8, scope: !4469)
!4484 = !DILocation(line: 2707, column: 17, scope: !4469)
!4485 = !DILocation(line: 2708, column: 15, scope: !4469)
!4486 = !DILocation(line: 2708, column: 31, scope: !4469)
!4487 = !DILocation(line: 2708, column: 22, scope: !4469)
!4488 = !DILocation(line: 2708, column: 3, scope: !4469)
!4489 = !DILocation(line: 2708, column: 8, scope: !4469)
!4490 = !DILocation(line: 2708, column: 13, scope: !4469)
!4491 = !DILocation(line: 2709, column: 27, scope: !4469)
!4492 = !DILocation(line: 2709, column: 3, scope: !4469)
!4493 = !DILocation(line: 2709, column: 8, scope: !4469)
!4494 = !DILocation(line: 2709, column: 25, scope: !4469)
!4495 = !DILocation(line: 2710, column: 15, scope: !4469)
!4496 = !DILocation(line: 2710, column: 3, scope: !4469)
!4497 = !DILocation(line: 2710, column: 8, scope: !4469)
!4498 = !DILocation(line: 2710, column: 13, scope: !4469)
!4499 = !DILocation(line: 2711, column: 18, scope: !4469)
!4500 = !DILocation(line: 2711, column: 16, scope: !4469)
!4501 = !DILocation(line: 2712, column: 1, scope: !4469)
!4502 = distinct !DISubprogram(name: "sort_files", scope: !3, file: !3, line: 3792, type: !341, scopeLine: 3793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4503 = !DILocalVariable(name: "use_strcmp", scope: !4502, file: !3, line: 3794, type: !141)
!4504 = !DILocation(line: 3794, column: 8, scope: !4502)
!4505 = !DILocation(line: 3796, column: 7, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3796, column: 7)
!4507 = !DILocation(line: 3796, column: 27, scope: !4506)
!4508 = !DILocation(line: 3796, column: 40, scope: !4506)
!4509 = !DILocation(line: 3796, column: 51, scope: !4506)
!4510 = !DILocation(line: 3796, column: 38, scope: !4506)
!4511 = !DILocation(line: 3796, column: 25, scope: !4506)
!4512 = !DILocation(line: 3796, column: 7, scope: !4502)
!4513 = !DILocation(line: 3798, column: 13, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 3797, column: 5)
!4515 = !DILocation(line: 3798, column: 7, scope: !4514)
!4516 = !DILocation(line: 3799, column: 31, scope: !4514)
!4517 = !DILocation(line: 3799, column: 21, scope: !4514)
!4518 = !DILocation(line: 3799, column: 19, scope: !4514)
!4519 = !DILocation(line: 3800, column: 31, scope: !4514)
!4520 = !DILocation(line: 3800, column: 29, scope: !4514)
!4521 = !DILocation(line: 3800, column: 25, scope: !4514)
!4522 = !DILocation(line: 3801, column: 5, scope: !4514)
!4523 = !DILocation(line: 3803, column: 3, scope: !4502)
!4524 = !DILocation(line: 3805, column: 7, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3805, column: 7)
!4526 = !DILocation(line: 3805, column: 17, scope: !4525)
!4527 = !DILocation(line: 3805, column: 7, scope: !4502)
!4528 = !DILocation(line: 3806, column: 5, scope: !4525)
!4529 = !DILocation(line: 3813, column: 9, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3813, column: 7)
!4531 = !DILocation(line: 3813, column: 7, scope: !4502)
!4532 = !DILocation(line: 3814, column: 16, scope: !4530)
!4533 = !DILocation(line: 3814, column: 5, scope: !4530)
!4534 = !DILocation(line: 3817, column: 18, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 3816, column: 5)
!4536 = !DILocation(line: 3818, column: 7, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 3818, column: 7)
!4538 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 3818, column: 7)
!4539 = !DILocation(line: 3818, column: 7, scope: !4538)
!4540 = !DILocation(line: 3819, column: 7, scope: !4535)
!4541 = !DILocation(line: 3823, column: 27, scope: !4502)
!4542 = !DILocation(line: 3823, column: 40, scope: !4502)
!4543 = !DILocation(line: 3824, column: 26, scope: !4502)
!4544 = !DILocation(line: 3824, column: 39, scope: !4502)
!4545 = !DILocation(line: 3824, column: 49, scope: !4502)
!4546 = !DILocation(line: 3824, column: 64, scope: !4502)
!4547 = !DILocation(line: 3824, column: 36, scope: !4502)
!4548 = !DILocation(line: 3824, column: 11, scope: !4502)
!4549 = !DILocation(line: 3825, column: 26, scope: !4502)
!4550 = !DILocation(line: 3825, column: 38, scope: !4502)
!4551 = !DILocation(line: 3826, column: 26, scope: !4502)
!4552 = !DILocation(line: 3823, column: 3, scope: !4502)
!4553 = !DILocation(line: 3827, column: 1, scope: !4502)
!4554 = distinct !DISubprogram(name: "extract_dirs_from_files", scope: !3, file: !3, line: 3512, type: !700, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4555 = !DILocalVariable(name: "dirname", arg: 1, scope: !4554, file: !3, line: 3512, type: !146)
!4556 = !DILocation(line: 3512, column: 38, scope: !4554)
!4557 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !4554, file: !3, line: 3512, type: !141)
!4558 = !DILocation(line: 3512, column: 52, scope: !4554)
!4559 = !DILocalVariable(name: "i", scope: !4554, file: !3, line: 3514, type: !149)
!4560 = !DILocation(line: 3514, column: 10, scope: !4554)
!4561 = !DILocalVariable(name: "j", scope: !4554, file: !3, line: 3515, type: !149)
!4562 = !DILocation(line: 3515, column: 10, scope: !4554)
!4563 = !DILocalVariable(name: "ignore_dot_and_dot_dot", scope: !4554, file: !3, line: 3516, type: !141)
!4564 = !DILocation(line: 3516, column: 8, scope: !4554)
!4565 = !DILocation(line: 3516, column: 34, scope: !4554)
!4566 = !DILocation(line: 3516, column: 42, scope: !4554)
!4567 = !DILocation(line: 3518, column: 7, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3518, column: 7)
!4569 = !DILocation(line: 3518, column: 15, scope: !4568)
!4570 = !DILocation(line: 3518, column: 18, scope: !4568)
!4571 = !DILocation(line: 3518, column: 7, scope: !4554)
!4572 = !DILocation(line: 3523, column: 30, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 3519, column: 5)
!4574 = !DILocation(line: 3523, column: 7, scope: !4573)
!4575 = !DILocation(line: 3524, column: 5, scope: !4573)
!4576 = !DILocation(line: 3528, column: 12, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3528, column: 3)
!4578 = !DILocation(line: 3528, column: 10, scope: !4577)
!4579 = !DILocation(line: 3528, column: 8, scope: !4577)
!4580 = !DILocation(line: 3528, column: 25, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 3528, column: 3)
!4582 = !DILocation(line: 3528, column: 28, scope: !4581)
!4583 = !DILocation(line: 3528, column: 3, scope: !4577)
!4584 = !DILocalVariable(name: "f", scope: !4585, file: !3, line: 3530, type: !252)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 3529, column: 5)
!4586 = !DILocation(line: 3530, column: 24, scope: !4585)
!4587 = !DILocation(line: 3530, column: 28, scope: !4585)
!4588 = !DILocation(line: 3530, column: 40, scope: !4585)
!4589 = !DILocation(line: 3532, column: 25, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 3532, column: 11)
!4591 = !DILocation(line: 3532, column: 11, scope: !4590)
!4592 = !DILocation(line: 3533, column: 11, scope: !4590)
!4593 = !DILocation(line: 3533, column: 17, scope: !4590)
!4594 = !DILocation(line: 3534, column: 15, scope: !4590)
!4595 = !DILocation(line: 3534, column: 47, scope: !4590)
!4596 = !DILocation(line: 3534, column: 50, scope: !4590)
!4597 = !DILocation(line: 3534, column: 20, scope: !4590)
!4598 = !DILocation(line: 3532, column: 11, scope: !4585)
!4599 = !DILocation(line: 3536, column: 16, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3536, column: 15)
!4601 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 3535, column: 9)
!4602 = !DILocation(line: 3536, column: 24, scope: !4600)
!4603 = !DILocation(line: 3536, column: 27, scope: !4600)
!4604 = !DILocation(line: 3536, column: 30, scope: !4600)
!4605 = !DILocation(line: 3536, column: 38, scope: !4600)
!4606 = !DILocation(line: 3536, column: 15, scope: !4601)
!4607 = !DILocation(line: 3537, column: 30, scope: !4600)
!4608 = !DILocation(line: 3537, column: 33, scope: !4600)
!4609 = !DILocation(line: 3537, column: 39, scope: !4600)
!4610 = !DILocation(line: 3537, column: 42, scope: !4600)
!4611 = !DILocation(line: 3537, column: 52, scope: !4600)
!4612 = !DILocation(line: 3537, column: 13, scope: !4600)
!4613 = !DILocalVariable(name: "name", scope: !4614, file: !3, line: 3540, type: !143)
!4614 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 3539, column: 13)
!4615 = !DILocation(line: 3540, column: 21, scope: !4614)
!4616 = !DILocation(line: 3540, column: 46, scope: !4614)
!4617 = !DILocation(line: 3540, column: 55, scope: !4614)
!4618 = !DILocation(line: 3540, column: 58, scope: !4614)
!4619 = !DILocation(line: 3540, column: 28, scope: !4614)
!4620 = !DILocation(line: 3541, column: 32, scope: !4614)
!4621 = !DILocation(line: 3541, column: 38, scope: !4614)
!4622 = !DILocation(line: 3541, column: 41, scope: !4614)
!4623 = !DILocation(line: 3541, column: 51, scope: !4614)
!4624 = !DILocation(line: 3541, column: 15, scope: !4614)
!4625 = !DILocation(line: 3542, column: 21, scope: !4614)
!4626 = !DILocation(line: 3542, column: 15, scope: !4614)
!4627 = !DILocation(line: 3544, column: 15, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3544, column: 15)
!4629 = !DILocation(line: 3544, column: 18, scope: !4628)
!4630 = !DILocation(line: 3544, column: 27, scope: !4628)
!4631 = !DILocation(line: 3544, column: 15, scope: !4601)
!4632 = !DILocation(line: 3545, column: 23, scope: !4628)
!4633 = !DILocation(line: 3545, column: 13, scope: !4628)
!4634 = !DILocation(line: 3546, column: 9, scope: !4601)
!4635 = !DILocation(line: 3528, column: 3, scope: !4581)
!4636 = distinct !{!4636, !4583, !4637}
!4637 = !DILocation(line: 3547, column: 5, scope: !4577)
!4638 = !DILocation(line: 3552, column: 10, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3552, column: 3)
!4640 = !DILocation(line: 3552, column: 17, scope: !4639)
!4641 = !DILocation(line: 3552, column: 8, scope: !4639)
!4642 = !DILocation(line: 3552, column: 22, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 3552, column: 3)
!4644 = !DILocation(line: 3552, column: 26, scope: !4643)
!4645 = !DILocation(line: 3552, column: 24, scope: !4643)
!4646 = !DILocation(line: 3552, column: 3, scope: !4639)
!4647 = !DILocalVariable(name: "f", scope: !4648, file: !3, line: 3554, type: !252)
!4648 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 3553, column: 5)
!4649 = !DILocation(line: 3554, column: 24, scope: !4648)
!4650 = !DILocation(line: 3554, column: 28, scope: !4648)
!4651 = !DILocation(line: 3554, column: 40, scope: !4648)
!4652 = !DILocation(line: 3555, column: 24, scope: !4648)
!4653 = !DILocation(line: 3555, column: 7, scope: !4648)
!4654 = !DILocation(line: 3555, column: 19, scope: !4648)
!4655 = !DILocation(line: 3555, column: 22, scope: !4648)
!4656 = !DILocation(line: 3556, column: 13, scope: !4648)
!4657 = !DILocation(line: 3556, column: 16, scope: !4648)
!4658 = !DILocation(line: 3556, column: 25, scope: !4648)
!4659 = !DILocation(line: 3556, column: 12, scope: !4648)
!4660 = !DILocation(line: 3556, column: 9, scope: !4648)
!4661 = !DILocation(line: 3557, column: 5, scope: !4648)
!4662 = !DILocation(line: 3552, column: 39, scope: !4643)
!4663 = !DILocation(line: 3552, column: 3, scope: !4643)
!4664 = distinct !{!4664, !4646, !4665}
!4665 = !DILocation(line: 3557, column: 5, scope: !4639)
!4666 = !DILocation(line: 3558, column: 16, scope: !4554)
!4667 = !DILocation(line: 3558, column: 14, scope: !4554)
!4668 = !DILocation(line: 3559, column: 1, scope: !4554)
!4669 = distinct !DISubprogram(name: "print_current_files", scope: !3, file: !3, line: 3832, type: !341, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4670 = !DILocalVariable(name: "i", scope: !4669, file: !3, line: 3834, type: !149)
!4671 = !DILocation(line: 3834, column: 10, scope: !4669)
!4672 = !DILocation(line: 3836, column: 11, scope: !4669)
!4673 = !DILocation(line: 3836, column: 3, scope: !4669)
!4674 = !DILocation(line: 3839, column: 14, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3839, column: 7)
!4676 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 3837, column: 5)
!4677 = !DILocation(line: 3839, column: 12, scope: !4675)
!4678 = !DILocation(line: 3839, column: 19, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 3839, column: 7)
!4680 = !DILocation(line: 3839, column: 23, scope: !4679)
!4681 = !DILocation(line: 3839, column: 21, scope: !4679)
!4682 = !DILocation(line: 3839, column: 7, scope: !4675)
!4683 = !DILocation(line: 3841, column: 39, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 3840, column: 9)
!4685 = !DILocation(line: 3841, column: 51, scope: !4684)
!4686 = !DILocation(line: 3841, column: 11, scope: !4684)
!4687 = !DILocation(line: 3842, column: 11, scope: !4684)
!4688 = !DILocation(line: 3843, column: 9, scope: !4684)
!4689 = !DILocation(line: 3839, column: 36, scope: !4679)
!4690 = !DILocation(line: 3839, column: 7, scope: !4679)
!4691 = distinct !{!4691, !4682, !4692}
!4692 = !DILocation(line: 3843, column: 9, scope: !4675)
!4693 = !DILocation(line: 3844, column: 7, scope: !4676)
!4694 = !DILocation(line: 3847, column: 13, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3847, column: 11)
!4696 = !DILocation(line: 3847, column: 11, scope: !4676)
!4697 = !DILocation(line: 3848, column: 9, scope: !4695)
!4698 = !DILocation(line: 3850, column: 9, scope: !4695)
!4699 = !DILocation(line: 3851, column: 7, scope: !4676)
!4700 = !DILocation(line: 3854, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3854, column: 11)
!4702 = !DILocation(line: 3854, column: 11, scope: !4676)
!4703 = !DILocation(line: 3855, column: 9, scope: !4701)
!4704 = !DILocation(line: 3857, column: 9, scope: !4701)
!4705 = !DILocation(line: 3858, column: 7, scope: !4676)
!4706 = !DILocation(line: 3861, column: 7, scope: !4676)
!4707 = !DILocation(line: 3862, column: 7, scope: !4676)
!4708 = !DILocation(line: 3865, column: 14, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3865, column: 7)
!4710 = !DILocation(line: 3865, column: 12, scope: !4709)
!4711 = !DILocation(line: 3865, column: 19, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 3865, column: 7)
!4713 = !DILocation(line: 3865, column: 23, scope: !4712)
!4714 = !DILocation(line: 3865, column: 21, scope: !4712)
!4715 = !DILocation(line: 3865, column: 7, scope: !4709)
!4716 = !DILocation(line: 3867, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 3866, column: 9)
!4718 = !DILocation(line: 3868, column: 30, scope: !4717)
!4719 = !DILocation(line: 3868, column: 42, scope: !4717)
!4720 = !DILocation(line: 3868, column: 11, scope: !4717)
!4721 = !DILocation(line: 3869, column: 11, scope: !4717)
!4722 = !DILocation(line: 3869, column: 11, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 3869, column: 11)
!4724 = !DILocation(line: 3870, column: 9, scope: !4717)
!4725 = !DILocation(line: 3865, column: 36, scope: !4712)
!4726 = !DILocation(line: 3865, column: 7, scope: !4712)
!4727 = distinct !{!4727, !4715, !4728}
!4728 = !DILocation(line: 3870, column: 9, scope: !4709)
!4729 = !DILocation(line: 3871, column: 7, scope: !4676)
!4730 = !DILocation(line: 3873, column: 1, scope: !4669)
!4731 = distinct !DISubprogram(name: "dev_ino_pop", scope: !3, file: !3, line: 1022, type: !346, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4732 = !DILocalVariable(name: "vdi", scope: !4731, file: !3, line: 1024, type: !167)
!4733 = !DILocation(line: 1024, column: 9, scope: !4731)
!4734 = !DILocalVariable(name: "di", scope: !4731, file: !3, line: 1025, type: !253)
!4735 = !DILocation(line: 1025, column: 19, scope: !4731)
!4736 = !DILocalVariable(name: "dev_ino_size", scope: !4731, file: !3, line: 1026, type: !27)
!4737 = !DILocation(line: 1026, column: 7, scope: !4731)
!4738 = !DILocation(line: 1027, column: 3, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 1027, column: 3)
!4740 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1027, column: 3)
!4741 = !DILocalVariable(name: "__o", scope: !4742, file: !3, line: 1027, type: !348)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1027, column: 3)
!4743 = !DILocation(line: 1027, column: 3, scope: !4742)
!4744 = !{!4745, !2443, i64 24}
!4745 = !{!"obstack", !2467, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2438, i64 40, !2467, i64 48, !2438, i64 56, !2438, i64 64, !2443, i64 72, !2437, i64 80, !2437, i64 80, !2437, i64 80}
!4746 = !{!4745, !2443, i64 16}
!4747 = !DILocation(line: 1027, column: 3, scope: !4740)
!4748 = !DILocation(line: 1028, column: 3, scope: !4731)
!4749 = !DILocation(line: 1029, column: 9, scope: !4731)
!4750 = !DILocation(line: 1029, column: 7, scope: !4731)
!4751 = !DILocation(line: 1030, column: 8, scope: !4731)
!4752 = !DILocation(line: 1030, column: 6, scope: !4731)
!4753 = !DILocation(line: 1031, column: 11, scope: !4731)
!4754 = !DILocation(line: 1031, column: 10, scope: !4731)
!4755 = !{i64 0, i64 8, !2579, i64 8, i64 8, !2579}
!4756 = !DILocation(line: 1031, column: 3, scope: !4731)
!4757 = distinct !DISubprogram(name: "free_pending_ent", scope: !3, file: !3, line: 1248, type: !395, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4758 = !DILocalVariable(name: "p", arg: 1, scope: !4757, file: !3, line: 1248, type: !237)
!4759 = !DILocation(line: 1248, column: 35, scope: !4757)
!4760 = !DILocation(line: 1250, column: 9, scope: !4757)
!4761 = !DILocation(line: 1250, column: 12, scope: !4757)
!4762 = !DILocation(line: 1250, column: 3, scope: !4757)
!4763 = !DILocation(line: 1251, column: 9, scope: !4757)
!4764 = !DILocation(line: 1251, column: 12, scope: !4757)
!4765 = !DILocation(line: 1251, column: 3, scope: !4757)
!4766 = !DILocation(line: 1252, column: 9, scope: !4757)
!4767 = !DILocation(line: 1252, column: 3, scope: !4757)
!4768 = !DILocation(line: 1253, column: 1, scope: !4757)
!4769 = !DILocalVariable(name: "name", arg: 1, scope: !979, file: !3, line: 2720, type: !146)
!4770 = !DILocation(line: 2720, column: 24, scope: !979)
!4771 = !DILocalVariable(name: "realname", arg: 2, scope: !979, file: !3, line: 2720, type: !146)
!4772 = !DILocation(line: 2720, column: 42, scope: !979)
!4773 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !979, file: !3, line: 2720, type: !141)
!4774 = !DILocation(line: 2720, column: 57, scope: !979)
!4775 = !DILocalVariable(name: "dirp", scope: !979, file: !3, line: 2722, type: !609)
!4776 = !DILocation(line: 2722, column: 8, scope: !979)
!4777 = !DILocalVariable(name: "next", scope: !979, file: !3, line: 2723, type: !613)
!4778 = !DILocation(line: 2723, column: 18, scope: !979)
!4779 = !DILocalVariable(name: "total_blocks", scope: !979, file: !3, line: 2724, type: !168)
!4780 = !DILocation(line: 2724, column: 13, scope: !979)
!4781 = !DILocation(line: 2727, column: 3, scope: !979)
!4782 = !DILocation(line: 2727, column: 9, scope: !979)
!4783 = !DILocation(line: 2728, column: 19, scope: !979)
!4784 = !DILocation(line: 2728, column: 10, scope: !979)
!4785 = !DILocation(line: 2728, column: 8, scope: !979)
!4786 = !DILocation(line: 2729, column: 8, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2729, column: 7)
!4788 = !DILocation(line: 2729, column: 7, scope: !979)
!4789 = !DILocation(line: 2731, column: 21, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 2730, column: 5)
!4791 = !DILocation(line: 2731, column: 39, scope: !4790)
!4792 = !DILocation(line: 2731, column: 70, scope: !4790)
!4793 = !DILocation(line: 2731, column: 7, scope: !4790)
!4794 = !DILocation(line: 2732, column: 7, scope: !4790)
!4795 = !DILocation(line: 2735, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2735, column: 7)
!4797 = !DILocation(line: 2735, column: 7, scope: !979)
!4798 = !DILocalVariable(name: "dir_stat", scope: !4799, file: !3, line: 2737, type: !191)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2736, column: 5)
!4800 = !DILocation(line: 2737, column: 19, scope: !4799)
!4801 = !DILocalVariable(name: "fd", scope: !4799, file: !3, line: 2738, type: !27)
!4802 = !DILocation(line: 2738, column: 11, scope: !4799)
!4803 = !DILocation(line: 2738, column: 23, scope: !4799)
!4804 = !DILocation(line: 2738, column: 16, scope: !4799)
!4805 = !DILocation(line: 2741, column: 17, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2741, column: 11)
!4807 = !DILocation(line: 2741, column: 14, scope: !4806)
!4808 = !DILocation(line: 2741, column: 12, scope: !4806)
!4809 = !DILocation(line: 2742, column: 21, scope: !4806)
!4810 = !DILocation(line: 2742, column: 14, scope: !4806)
!4811 = !DILocation(line: 2743, column: 20, scope: !4806)
!4812 = !DILocation(line: 2743, column: 14, scope: !4806)
!4813 = !DILocation(line: 2743, column: 38, scope: !4806)
!4814 = !DILocation(line: 2741, column: 11, scope: !4799)
!4815 = !DILocation(line: 2745, column: 25, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 2744, column: 9)
!4817 = !DILocation(line: 2746, column: 25, scope: !4816)
!4818 = !DILocation(line: 2746, column: 71, scope: !4816)
!4819 = !DILocation(line: 2745, column: 11, scope: !4816)
!4820 = !DILocation(line: 2747, column: 21, scope: !4816)
!4821 = !DILocation(line: 2747, column: 11, scope: !4816)
!4822 = !DILocation(line: 2748, column: 11, scope: !4816)
!4823 = !DILocation(line: 2753, column: 31, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2753, column: 11)
!4825 = !{!3810, !2467, i64 0}
!4826 = !DILocation(line: 2753, column: 48, scope: !4824)
!4827 = !{!3810, !2467, i64 8}
!4828 = !DILocation(line: 2753, column: 11, scope: !4824)
!4829 = !DILocation(line: 2753, column: 11, scope: !4799)
!4830 = !DILocation(line: 2755, column: 24, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2754, column: 9)
!4832 = !DILocation(line: 2756, column: 18, scope: !4831)
!4833 = !DILocation(line: 2755, column: 11, scope: !4831)
!4834 = !DILocation(line: 2757, column: 21, scope: !4831)
!4835 = !DILocation(line: 2757, column: 11, scope: !4831)
!4836 = !DILocation(line: 2758, column: 11, scope: !4831)
!4837 = !DILocation(line: 2759, column: 11, scope: !4831)
!4838 = !DILocation(line: 2762, column: 30, scope: !4799)
!4839 = !DILocation(line: 2762, column: 47, scope: !4799)
!4840 = !DILocation(line: 2762, column: 7, scope: !4799)
!4841 = !DILocation(line: 2763, column: 5, scope: !4799)
!4842 = !DILocation(line: 2765, column: 3, scope: !979)
!4843 = !DILocation(line: 2767, column: 7, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2767, column: 7)
!4845 = !DILocation(line: 2767, column: 17, scope: !4844)
!4846 = !DILocation(line: 2767, column: 20, scope: !4844)
!4847 = !DILocation(line: 2767, column: 7, scope: !979)
!4848 = !DILocation(line: 2769, column: 12, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2769, column: 11)
!4850 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 2768, column: 5)
!4851 = !DILocation(line: 2769, column: 11, scope: !4850)
!4852 = !DILocation(line: 2770, column: 9, scope: !4849)
!4853 = !DILocation(line: 2770, column: 9, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2770, column: 9)
!4855 = !DILocation(line: 2771, column: 13, scope: !4850)
!4856 = !DILocation(line: 2772, column: 7, scope: !4850)
!4857 = !DILocation(line: 2772, column: 7, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 2772, column: 7)
!4859 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2772, column: 7)
!4860 = !DILocation(line: 2772, column: 7, scope: !4859)
!4861 = !DILocation(line: 2772, column: 7, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2772, column: 7)
!4863 = !DILocalVariable(name: "absolute_name", scope: !4850, file: !3, line: 2774, type: !143)
!4864 = !DILocation(line: 2774, column: 13, scope: !4850)
!4865 = !DILocation(line: 2775, column: 11, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2775, column: 11)
!4867 = !DILocation(line: 2775, column: 11, scope: !4850)
!4868 = !DILocation(line: 2777, column: 55, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2776, column: 9)
!4870 = !DILocation(line: 2777, column: 27, scope: !4869)
!4871 = !DILocation(line: 2777, column: 25, scope: !4869)
!4872 = !DILocation(line: 2778, column: 17, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2778, column: 15)
!4874 = !DILocation(line: 2778, column: 15, scope: !4869)
!4875 = !DILocation(line: 2779, column: 27, scope: !4873)
!4876 = !DILocation(line: 2780, column: 27, scope: !4873)
!4877 = !DILocation(line: 2780, column: 57, scope: !4873)
!4878 = !DILocation(line: 2779, column: 13, scope: !4873)
!4879 = !DILocation(line: 2781, column: 9, scope: !4869)
!4880 = !DILocation(line: 2782, column: 19, scope: !4850)
!4881 = !DILocation(line: 2782, column: 30, scope: !4850)
!4882 = !DILocation(line: 2782, column: 41, scope: !4850)
!4883 = !DILocation(line: 2782, column: 47, scope: !4850)
!4884 = !DILocation(line: 2783, column: 50, scope: !4850)
!4885 = !DILocation(line: 2782, column: 7, scope: !4850)
!4886 = !DILocation(line: 2785, column: 13, scope: !4850)
!4887 = !DILocation(line: 2785, column: 7, scope: !4850)
!4888 = !DILocation(line: 2787, column: 7, scope: !4850)
!4889 = !DILocation(line: 2787, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2787, column: 7)
!4891 = !DILocation(line: 2788, column: 5, scope: !4850)
!4892 = !DILocation(line: 2793, column: 3, scope: !979)
!4893 = !DILocation(line: 2797, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2794, column: 5)
!4895 = !DILocation(line: 2797, column: 13, scope: !4894)
!4896 = !DILocation(line: 2798, column: 23, scope: !4894)
!4897 = !DILocation(line: 2798, column: 14, scope: !4894)
!4898 = !DILocation(line: 2798, column: 12, scope: !4894)
!4899 = !DILocation(line: 2799, column: 11, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2799, column: 11)
!4901 = !DILocation(line: 2799, column: 11, scope: !4894)
!4902 = !DILocation(line: 2801, column: 31, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 2801, column: 15)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2800, column: 9)
!4905 = !DILocation(line: 2801, column: 37, scope: !4903)
!4906 = !DILocation(line: 2801, column: 17, scope: !4903)
!4907 = !DILocation(line: 2801, column: 15, scope: !4904)
!4908 = !DILocalVariable(name: "type", scope: !4909, file: !3, line: 2803, type: !36)
!4909 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2802, column: 13)
!4910 = !DILocation(line: 2803, column: 29, scope: !4909)
!4911 = !DILocation(line: 2806, column: 23, scope: !4909)
!4912 = !DILocation(line: 2806, column: 29, scope: !4909)
!4913 = !{!4914, !2438, i64 18}
!4914 = !{!"dirent", !2467, i64 0, !2467, i64 8, !2863, i64 16, !2438, i64 18, !2438, i64 19}
!4915 = !DILocation(line: 2806, column: 15, scope: !4909)
!4916 = !DILocation(line: 2808, column: 36, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2807, column: 17)
!4918 = !DILocation(line: 2808, column: 49, scope: !4917)
!4919 = !DILocation(line: 2809, column: 36, scope: !4917)
!4920 = !DILocation(line: 2809, column: 48, scope: !4917)
!4921 = !DILocation(line: 2810, column: 36, scope: !4917)
!4922 = !DILocation(line: 2810, column: 50, scope: !4917)
!4923 = !DILocation(line: 2811, column: 36, scope: !4917)
!4924 = !DILocation(line: 2811, column: 45, scope: !4917)
!4925 = !DILocation(line: 2812, column: 36, scope: !4917)
!4926 = !DILocation(line: 2812, column: 53, scope: !4917)
!4927 = !DILocation(line: 2813, column: 36, scope: !4917)
!4928 = !DILocation(line: 2813, column: 47, scope: !4917)
!4929 = !DILocation(line: 2814, column: 36, scope: !4917)
!4930 = !DILocation(line: 2814, column: 45, scope: !4917)
!4931 = !DILocation(line: 2816, column: 36, scope: !4917)
!4932 = !DILocation(line: 2816, column: 49, scope: !4917)
!4933 = !DILocation(line: 2820, column: 44, scope: !4909)
!4934 = !DILocation(line: 2820, column: 50, scope: !4909)
!4935 = !DILocation(line: 2820, column: 58, scope: !4909)
!4936 = !DILocation(line: 2822, column: 51, scope: !4909)
!4937 = !DILocation(line: 2820, column: 31, scope: !4909)
!4938 = !DILocation(line: 2820, column: 28, scope: !4909)
!4939 = !DILocation(line: 2828, column: 19, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2828, column: 19)
!4941 = !DILocation(line: 2828, column: 26, scope: !4940)
!4942 = !DILocation(line: 2828, column: 42, scope: !4940)
!4943 = !DILocation(line: 2828, column: 45, scope: !4940)
!4944 = !DILocation(line: 2828, column: 55, scope: !4940)
!4945 = !DILocation(line: 2829, column: 23, scope: !4940)
!4946 = !DILocation(line: 2829, column: 27, scope: !4940)
!4947 = !DILocation(line: 2829, column: 44, scope: !4940)
!4948 = !DILocation(line: 2829, column: 48, scope: !4940)
!4949 = !DILocation(line: 2828, column: 19, scope: !4909)
!4950 = !DILocation(line: 2834, column: 19, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2830, column: 17)
!4952 = !DILocation(line: 2835, column: 19, scope: !4951)
!4953 = !DILocation(line: 2836, column: 19, scope: !4951)
!4954 = !DILocation(line: 2837, column: 17, scope: !4951)
!4955 = !DILocation(line: 2838, column: 13, scope: !4909)
!4956 = !DILocation(line: 2839, column: 9, scope: !4904)
!4957 = !DILocation(line: 2840, column: 16, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2840, column: 16)
!4959 = !DILocation(line: 2840, column: 22, scope: !4958)
!4960 = !DILocation(line: 2840, column: 16, scope: !4900)
!4961 = !DILocation(line: 2842, column: 25, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 2841, column: 9)
!4963 = !DILocation(line: 2842, column: 43, scope: !4962)
!4964 = !DILocation(line: 2842, column: 70, scope: !4962)
!4965 = !DILocation(line: 2842, column: 11, scope: !4962)
!4966 = !DILocation(line: 2843, column: 15, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2843, column: 15)
!4968 = !DILocation(line: 2843, column: 21, scope: !4967)
!4969 = !DILocation(line: 2843, column: 15, scope: !4962)
!4970 = !DILocation(line: 2844, column: 13, scope: !4967)
!4971 = !DILocation(line: 2845, column: 9, scope: !4962)
!4972 = !DILocation(line: 2847, column: 9, scope: !4958)
!4973 = !DILocation(line: 2852, column: 7, scope: !4894)
!4974 = distinct !{!4974, !4892, !4975}
!4975 = !DILocation(line: 2853, column: 5, scope: !979)
!4976 = !DILocation(line: 2855, column: 17, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2855, column: 7)
!4978 = !DILocation(line: 2855, column: 7, scope: !4977)
!4979 = !DILocation(line: 2855, column: 23, scope: !4977)
!4980 = !DILocation(line: 2855, column: 7, scope: !979)
!4981 = !DILocation(line: 2857, column: 21, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2856, column: 5)
!4983 = !DILocation(line: 2857, column: 39, scope: !4982)
!4984 = !DILocation(line: 2857, column: 66, scope: !4982)
!4985 = !DILocation(line: 2857, column: 7, scope: !4982)
!4986 = !DILocation(line: 2859, column: 5, scope: !4982)
!4987 = !DILocation(line: 2862, column: 3, scope: !979)
!4988 = !DILocation(line: 2867, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2867, column: 7)
!4990 = !DILocation(line: 2867, column: 7, scope: !979)
!4991 = !DILocation(line: 2868, column: 30, scope: !4989)
!4992 = !DILocation(line: 2868, column: 5, scope: !4989)
!4993 = !DILocation(line: 2870, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2870, column: 7)
!4995 = !DILocation(line: 2870, column: 14, scope: !4994)
!4996 = !DILocation(line: 2870, column: 29, scope: !4994)
!4997 = !DILocation(line: 2870, column: 32, scope: !4994)
!4998 = !DILocation(line: 2870, column: 7, scope: !979)
!4999 = !DILocalVariable(name: "p", scope: !5000, file: !3, line: 2872, type: !146)
!5000 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2871, column: 5)
!5001 = !DILocation(line: 2872, column: 19, scope: !5000)
!5002 = !DILocalVariable(name: "buf", scope: !5000, file: !3, line: 2873, type: !622)
!5003 = !DILocation(line: 2873, column: 12, scope: !5000)
!5004 = !DILocation(line: 2875, column: 7, scope: !5000)
!5005 = !DILocation(line: 2875, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 2875, column: 7)
!5007 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2875, column: 7)
!5008 = !DILocation(line: 2875, column: 7, scope: !5007)
!5009 = !DILocation(line: 2875, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 2875, column: 7)
!5011 = !DILocation(line: 2876, column: 11, scope: !5000)
!5012 = !DILocation(line: 2876, column: 9, scope: !5000)
!5013 = !DILocation(line: 2877, column: 7, scope: !5000)
!5014 = !DILocation(line: 2877, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2877, column: 7)
!5016 = !DILocation(line: 2878, column: 7, scope: !5000)
!5017 = !DILocation(line: 2878, column: 7, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2878, column: 7)
!5019 = !DILocation(line: 2879, column: 27, scope: !5000)
!5020 = !DILocation(line: 2879, column: 41, scope: !5000)
!5021 = !DILocation(line: 2879, column: 46, scope: !5000)
!5022 = !DILocation(line: 2880, column: 42, scope: !5000)
!5023 = !DILocation(line: 2879, column: 11, scope: !5000)
!5024 = !DILocation(line: 2879, column: 9, scope: !5000)
!5025 = !DILocation(line: 2881, column: 7, scope: !5000)
!5026 = !DILocation(line: 2881, column: 7, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2881, column: 7)
!5028 = !DILocation(line: 2882, column: 7, scope: !5000)
!5029 = !DILocation(line: 2882, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2882, column: 7)
!5031 = !DILocation(line: 2883, column: 5, scope: !5000)
!5032 = !DILocation(line: 2885, column: 7, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2885, column: 7)
!5034 = !DILocation(line: 2885, column: 7, scope: !979)
!5035 = !DILocation(line: 2886, column: 5, scope: !5033)
!5036 = !DILocation(line: 2887, column: 1, scope: !979)
!5037 = distinct !DISubprogram(name: "restore_default_color", scope: !3, file: !3, line: 1266, type: !341, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5038 = !DILocation(line: 1268, column: 3, scope: !5037)
!5039 = !DILocation(line: 1269, column: 3, scope: !5037)
!5040 = !DILocation(line: 1270, column: 1, scope: !5037)
!5041 = distinct !DISubprogram(name: "signal_restore", scope: !3, file: !3, line: 1444, type: !341, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5042 = !DILocation(line: 1446, column: 3, scope: !5041)
!5043 = !DILocation(line: 1447, column: 1, scope: !5041)
!5044 = distinct !DISubprogram(name: "dired_dump_obstack", scope: !3, file: !3, line: 1051, type: !508, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5045 = !DILocalVariable(name: "prefix", arg: 1, scope: !5044, file: !3, line: 1051, type: !146)
!5046 = !DILocation(line: 1051, column: 33, scope: !5044)
!5047 = !DILocalVariable(name: "os", arg: 2, scope: !5044, file: !3, line: 1051, type: !510)
!5048 = !DILocation(line: 1051, column: 57, scope: !5044)
!5049 = !DILocalVariable(name: "n_pos", scope: !5044, file: !3, line: 1053, type: !149)
!5050 = !DILocation(line: 1053, column: 10, scope: !5044)
!5051 = !DILocalVariable(name: "__o", scope: !5052, file: !3, line: 1055, type: !348)
!5052 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 1055, column: 11)
!5053 = !DILocation(line: 1055, column: 11, scope: !5052)
!5054 = !DILocation(line: 1055, column: 36, scope: !5044)
!5055 = !DILocation(line: 1055, column: 9, scope: !5044)
!5056 = !DILocation(line: 1056, column: 7, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 1056, column: 7)
!5058 = !DILocation(line: 1056, column: 13, scope: !5057)
!5059 = !DILocation(line: 1056, column: 7, scope: !5044)
!5060 = !DILocalVariable(name: "pos", scope: !5061, file: !3, line: 1058, type: !148)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1057, column: 5)
!5062 = !DILocation(line: 1058, column: 15, scope: !5061)
!5063 = !DILocalVariable(name: "__o1", scope: !5064, file: !3, line: 1058, type: !510)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1058, column: 32)
!5065 = !DILocation(line: 1058, column: 32, scope: !5064)
!5066 = !DILocalVariable(name: "__value", scope: !5064, file: !3, line: 1058, type: !167)
!5067 = !DILocation(line: 1058, column: 32, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1058, column: 32)
!5069 = !{!4745, !2467, i64 48}
!5070 = !DILocation(line: 1058, column: 32, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1058, column: 32)
!5072 = !{!4745, !2443, i64 8}
!5073 = !{!4745, !2443, i64 32}
!5074 = !DILocation(line: 1058, column: 21, scope: !5061)
!5075 = !DILocation(line: 1059, column: 7, scope: !5061)
!5076 = !DILocalVariable(name: "i", scope: !5077, file: !3, line: 1060, type: !149)
!5077 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1060, column: 7)
!5078 = !DILocation(line: 1060, column: 19, scope: !5077)
!5079 = !DILocation(line: 1060, column: 12, scope: !5077)
!5080 = !DILocation(line: 1060, column: 26, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1060, column: 7)
!5082 = !DILocation(line: 1060, column: 30, scope: !5081)
!5083 = !DILocation(line: 1060, column: 28, scope: !5081)
!5084 = !DILocation(line: 1060, column: 7, scope: !5077)
!5085 = !DILocation(line: 1061, column: 45, scope: !5081)
!5086 = !DILocation(line: 1061, column: 49, scope: !5081)
!5087 = !DILocation(line: 1061, column: 9, scope: !5081)
!5088 = !DILocation(line: 1060, column: 38, scope: !5081)
!5089 = !DILocation(line: 1060, column: 7, scope: !5081)
!5090 = distinct !{!5090, !5084, !5091}
!5091 = !DILocation(line: 1061, column: 51, scope: !5077)
!5092 = !DILocation(line: 1062, column: 7, scope: !5061)
!5093 = !DILocation(line: 1063, column: 5, scope: !5061)
!5094 = !DILocation(line: 1064, column: 1, scope: !5044)
!5095 = !DILocalVariable(name: "init", arg: 1, scope: !889, file: !3, line: 1355, type: !141)
!5096 = !DILocation(line: 1355, column: 20, scope: !889)
!5097 = !DILocalVariable(name: "j", scope: !889, file: !3, line: 1387, type: !27)
!5098 = !DILocation(line: 1387, column: 7, scope: !889)
!5099 = !DILocation(line: 1389, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !889, file: !3, line: 1389, column: 7)
!5101 = !DILocation(line: 1389, column: 7, scope: !889)
!5102 = !DILocalVariable(name: "act", scope: !5103, file: !3, line: 1392, type: !419)
!5103 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1390, column: 5)
!5104 = !DILocation(line: 1392, column: 24, scope: !5103)
!5105 = !DILocation(line: 1394, column: 7, scope: !5103)
!5106 = !DILocation(line: 1395, column: 14, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1395, column: 7)
!5108 = !DILocation(line: 1395, column: 12, scope: !5107)
!5109 = !DILocation(line: 1395, column: 19, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1395, column: 7)
!5111 = !DILocation(line: 1395, column: 21, scope: !5110)
!5112 = !DILocation(line: 1395, column: 7, scope: !5107)
!5113 = !DILocation(line: 1397, column: 26, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1396, column: 9)
!5115 = !DILocation(line: 1397, column: 22, scope: !5114)
!5116 = !DILocation(line: 1397, column: 11, scope: !5114)
!5117 = !DILocation(line: 1398, column: 19, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1398, column: 15)
!5119 = !DILocation(line: 1398, column: 30, scope: !5118)
!5120 = !DILocation(line: 1398, column: 15, scope: !5114)
!5121 = !DILocation(line: 1399, column: 45, scope: !5118)
!5122 = !DILocation(line: 1399, column: 41, scope: !5118)
!5123 = !DILocation(line: 1399, column: 13, scope: !5118)
!5124 = !DILocation(line: 1400, column: 9, scope: !5114)
!5125 = !DILocation(line: 1395, column: 31, scope: !5110)
!5126 = !DILocation(line: 1395, column: 7, scope: !5110)
!5127 = distinct !{!5127, !5112, !5128}
!5128 = !DILocation(line: 1400, column: 9, scope: !5107)
!5129 = !DILocation(line: 1402, column: 11, scope: !5103)
!5130 = !DILocation(line: 1402, column: 21, scope: !5103)
!5131 = !{i64 0, i64 128, !2497}
!5132 = !DILocation(line: 1403, column: 11, scope: !5103)
!5133 = !DILocation(line: 1403, column: 20, scope: !5103)
!5134 = !{!5135, !2437, i64 136}
!5135 = !{!"sigaction", !2438, i64 0, !5136, i64 8, !2437, i64 136, !2443, i64 144}
!5136 = !{!"", !2438, i64 0}
!5137 = !DILocation(line: 1405, column: 14, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1405, column: 7)
!5139 = !DILocation(line: 1405, column: 12, scope: !5138)
!5140 = !DILocation(line: 1405, column: 19, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1405, column: 7)
!5142 = !DILocation(line: 1405, column: 21, scope: !5141)
!5143 = !DILocation(line: 1405, column: 7, scope: !5138)
!5144 = !DILocation(line: 1406, column: 47, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1406, column: 13)
!5146 = !DILocation(line: 1406, column: 43, scope: !5145)
!5147 = !DILocation(line: 1406, column: 13, scope: !5145)
!5148 = !DILocation(line: 1406, column: 13, scope: !5141)
!5149 = !DILocation(line: 1408, column: 34, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 1407, column: 11)
!5151 = !DILocation(line: 1408, column: 30, scope: !5150)
!5152 = !DILocation(line: 1408, column: 37, scope: !5150)
!5153 = !DILocation(line: 1408, column: 17, scope: !5150)
!5154 = !DILocation(line: 1408, column: 28, scope: !5150)
!5155 = !DILocation(line: 1409, column: 28, scope: !5150)
!5156 = !DILocation(line: 1409, column: 24, scope: !5150)
!5157 = !DILocation(line: 1409, column: 13, scope: !5150)
!5158 = !DILocation(line: 1410, column: 11, scope: !5150)
!5159 = !DILocation(line: 1406, column: 49, scope: !5145)
!5160 = !DILocation(line: 1405, column: 31, scope: !5141)
!5161 = !DILocation(line: 1405, column: 7, scope: !5141)
!5162 = distinct !{!5162, !5143, !5163}
!5163 = !DILocation(line: 1410, column: 11, scope: !5138)
!5164 = !DILocation(line: 1422, column: 5, scope: !5103)
!5165 = !DILocation(line: 1426, column: 14, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1426, column: 7)
!5167 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1424, column: 5)
!5168 = !DILocation(line: 1426, column: 12, scope: !5166)
!5169 = !DILocation(line: 1426, column: 19, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 1426, column: 7)
!5171 = !DILocation(line: 1426, column: 21, scope: !5170)
!5172 = !DILocation(line: 1426, column: 7, scope: !5166)
!5173 = !DILocation(line: 1427, column: 47, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1427, column: 13)
!5175 = !DILocation(line: 1427, column: 43, scope: !5174)
!5176 = !DILocation(line: 1427, column: 13, scope: !5174)
!5177 = !DILocation(line: 1427, column: 13, scope: !5170)
!5178 = !DILocation(line: 1428, column: 23, scope: !5174)
!5179 = !DILocation(line: 1428, column: 19, scope: !5174)
!5180 = !DILocation(line: 1428, column: 11, scope: !5174)
!5181 = !DILocation(line: 1427, column: 49, scope: !5174)
!5182 = !DILocation(line: 1426, column: 31, scope: !5170)
!5183 = !DILocation(line: 1426, column: 7, scope: !5170)
!5184 = distinct !{!5184, !5172, !5185}
!5185 = !DILocation(line: 1428, column: 34, scope: !5166)
!5186 = !DILocation(line: 1435, column: 1, scope: !889)
!5187 = distinct !DISubprogram(name: "stophandler", scope: !3, file: !3, line: 1297, type: !174, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5188 = !DILocalVariable(name: "sig", arg: 1, scope: !5187, file: !3, line: 1297, type: !27)
!5189 = !DILocation(line: 1297, column: 18, scope: !5187)
!5190 = !DILocation(line: 1301, column: 9, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1301, column: 7)
!5192 = !DILocation(line: 1301, column: 7, scope: !5187)
!5193 = !DILocation(line: 1302, column: 22, scope: !5191)
!5194 = !DILocation(line: 1302, column: 5, scope: !5191)
!5195 = !DILocation(line: 1303, column: 1, scope: !5187)
!5196 = distinct !DISubprogram(name: "sighandler", scope: !3, file: !3, line: 1286, type: !174, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5197 = !DILocalVariable(name: "sig", arg: 1, scope: !5196, file: !3, line: 1286, type: !27)
!5198 = !DILocation(line: 1286, column: 17, scope: !5196)
!5199 = !DILocation(line: 1290, column: 9, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1290, column: 7)
!5201 = !DILocation(line: 1290, column: 7, scope: !5196)
!5202 = !DILocation(line: 1291, column: 24, scope: !5200)
!5203 = !DILocation(line: 1291, column: 22, scope: !5200)
!5204 = !DILocation(line: 1291, column: 5, scope: !5200)
!5205 = !DILocation(line: 1292, column: 1, scope: !5196)
!5206 = distinct !DISubprogram(name: "put_indicator", scope: !3, file: !3, line: 4793, type: !397, scopeLine: 4794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5207 = !DILocalVariable(name: "ind", arg: 1, scope: !5206, file: !3, line: 4793, type: !399)
!5208 = !DILocation(line: 4793, column: 38, scope: !5206)
!5209 = !DILocation(line: 4795, column: 9, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 4795, column: 7)
!5211 = !DILocation(line: 4795, column: 7, scope: !5206)
!5212 = !DILocation(line: 4797, column: 18, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 4796, column: 5)
!5214 = !DILocation(line: 4803, column: 16, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 4803, column: 11)
!5216 = !DILocation(line: 4803, column: 13, scope: !5215)
!5217 = !DILocation(line: 4803, column: 11, scope: !5213)
!5218 = !DILocation(line: 4804, column: 9, scope: !5215)
!5219 = !DILocation(line: 4806, column: 7, scope: !5213)
!5220 = !DILocation(line: 4807, column: 5, scope: !5213)
!5221 = !DILocation(line: 4809, column: 3, scope: !5206)
!5222 = !DILocation(line: 4810, column: 1, scope: !5206)
!5223 = distinct !DISubprogram(name: "signal_init", scope: !3, file: !3, line: 1438, type: !341, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5224 = !DILocation(line: 1440, column: 3, scope: !5223)
!5225 = !DILocation(line: 1441, column: 1, scope: !5223)
!5226 = distinct !DISubprogram(name: "prep_non_filename_text", scope: !3, file: !3, line: 4576, type: !341, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5227 = !DILocation(line: 4578, column: 30, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 4578, column: 7)
!5229 = !DILocation(line: 4578, column: 37, scope: !5228)
!5230 = !DILocation(line: 4578, column: 7, scope: !5226)
!5231 = !DILocation(line: 4579, column: 5, scope: !5228)
!5232 = !DILocation(line: 4582, column: 7, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 4581, column: 5)
!5234 = !DILocation(line: 4583, column: 7, scope: !5233)
!5235 = !DILocation(line: 4584, column: 7, scope: !5233)
!5236 = !DILocation(line: 4586, column: 1, scope: !5226)
!5237 = distinct !DISubprogram(name: "file_failure", scope: !3, file: !3, line: 2687, type: !625, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5238 = !DILocalVariable(name: "serious", arg: 1, scope: !5237, file: !3, line: 2687, type: !141)
!5239 = !DILocation(line: 2687, column: 20, scope: !5237)
!5240 = !DILocalVariable(name: "message", arg: 2, scope: !5237, file: !3, line: 2687, type: !146)
!5241 = !DILocation(line: 2687, column: 41, scope: !5237)
!5242 = !DILocalVariable(name: "file", arg: 3, scope: !5237, file: !3, line: 2687, type: !146)
!5243 = !DILocation(line: 2687, column: 62, scope: !5237)
!5244 = !DILocation(line: 2689, column: 13, scope: !5237)
!5245 = !DILocation(line: 2689, column: 20, scope: !5237)
!5246 = !DILocation(line: 2689, column: 29, scope: !5237)
!5247 = !DILocation(line: 2689, column: 3, scope: !5237)
!5248 = !DILocation(line: 2690, column: 20, scope: !5237)
!5249 = !DILocation(line: 2690, column: 3, scope: !5237)
!5250 = !DILocation(line: 2691, column: 1, scope: !5237)
!5251 = distinct !DISubprogram(name: "visit_dir", scope: !3, file: !3, line: 1217, type: !627, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5252 = !DILocalVariable(name: "dev", arg: 1, scope: !5251, file: !3, line: 1217, type: !260)
!5253 = !DILocation(line: 1217, column: 18, scope: !5251)
!5254 = !DILocalVariable(name: "ino", arg: 2, scope: !5251, file: !3, line: 1217, type: !258)
!5255 = !DILocation(line: 1217, column: 29, scope: !5251)
!5256 = !DILocalVariable(name: "ent", scope: !5251, file: !3, line: 1219, type: !253)
!5257 = !DILocation(line: 1219, column: 19, scope: !5251)
!5258 = !DILocalVariable(name: "ent_from_table", scope: !5251, file: !3, line: 1220, type: !253)
!5259 = !DILocation(line: 1220, column: 19, scope: !5251)
!5260 = !DILocalVariable(name: "found_match", scope: !5251, file: !3, line: 1221, type: !141)
!5261 = !DILocation(line: 1221, column: 8, scope: !5251)
!5262 = !DILocation(line: 1223, column: 9, scope: !5251)
!5263 = !DILocation(line: 1223, column: 7, scope: !5251)
!5264 = !DILocation(line: 1224, column: 17, scope: !5251)
!5265 = !DILocation(line: 1224, column: 3, scope: !5251)
!5266 = !DILocation(line: 1224, column: 8, scope: !5251)
!5267 = !DILocation(line: 1224, column: 15, scope: !5251)
!5268 = !DILocation(line: 1225, column: 17, scope: !5251)
!5269 = !DILocation(line: 1225, column: 3, scope: !5251)
!5270 = !DILocation(line: 1225, column: 8, scope: !5251)
!5271 = !DILocation(line: 1225, column: 15, scope: !5251)
!5272 = !DILocation(line: 1228, column: 33, scope: !5251)
!5273 = !DILocation(line: 1228, column: 49, scope: !5251)
!5274 = !DILocation(line: 1228, column: 20, scope: !5251)
!5275 = !DILocation(line: 1228, column: 18, scope: !5251)
!5276 = !DILocation(line: 1230, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1230, column: 7)
!5278 = !DILocation(line: 1230, column: 22, scope: !5277)
!5279 = !DILocation(line: 1230, column: 7, scope: !5251)
!5280 = !DILocation(line: 1233, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1231, column: 5)
!5282 = !DILocation(line: 1236, column: 18, scope: !5251)
!5283 = !DILocation(line: 1236, column: 36, scope: !5251)
!5284 = !DILocation(line: 1236, column: 33, scope: !5251)
!5285 = !DILocation(line: 1236, column: 15, scope: !5251)
!5286 = !DILocation(line: 1238, column: 7, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1238, column: 7)
!5288 = !DILocation(line: 1238, column: 7, scope: !5251)
!5289 = !DILocation(line: 1241, column: 13, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 1239, column: 5)
!5291 = !DILocation(line: 1241, column: 7, scope: !5290)
!5292 = !DILocation(line: 1242, column: 5, scope: !5290)
!5293 = !DILocation(line: 1244, column: 10, scope: !5251)
!5294 = !DILocation(line: 1244, column: 3, scope: !5251)
!5295 = distinct !DISubprogram(name: "set_exit_status", scope: !3, file: !3, line: 2674, type: !401, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5296 = !DILocalVariable(name: "serious", arg: 1, scope: !5295, file: !3, line: 2674, type: !141)
!5297 = !DILocation(line: 2674, column: 23, scope: !5295)
!5298 = !DILocation(line: 2676, column: 7, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 2676, column: 7)
!5300 = !DILocation(line: 2676, column: 7, scope: !5295)
!5301 = !DILocation(line: 2677, column: 17, scope: !5299)
!5302 = !DILocation(line: 2677, column: 5, scope: !5299)
!5303 = !DILocation(line: 2678, column: 12, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2678, column: 12)
!5305 = !DILocation(line: 2678, column: 24, scope: !5304)
!5306 = !DILocation(line: 2678, column: 12, scope: !5299)
!5307 = !DILocation(line: 2679, column: 17, scope: !5304)
!5308 = !DILocation(line: 2679, column: 5, scope: !5304)
!5309 = !DILocation(line: 2680, column: 1, scope: !5295)
!5310 = distinct !DISubprogram(name: "dev_ino_push", scope: !3, file: !3, line: 1006, type: !629, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5311 = !DILocalVariable(name: "dev", arg: 1, scope: !5310, file: !3, line: 1006, type: !260)
!5312 = !DILocation(line: 1006, column: 21, scope: !5310)
!5313 = !DILocalVariable(name: "ino", arg: 2, scope: !5310, file: !3, line: 1006, type: !258)
!5314 = !DILocation(line: 1006, column: 32, scope: !5310)
!5315 = !DILocalVariable(name: "vdi", scope: !5310, file: !3, line: 1008, type: !167)
!5316 = !DILocation(line: 1008, column: 9, scope: !5310)
!5317 = !DILocalVariable(name: "di", scope: !5310, file: !3, line: 1009, type: !253)
!5318 = !DILocation(line: 1009, column: 19, scope: !5310)
!5319 = !DILocalVariable(name: "dev_ino_size", scope: !5310, file: !3, line: 1010, type: !27)
!5320 = !DILocation(line: 1010, column: 7, scope: !5310)
!5321 = !DILocalVariable(name: "__o", scope: !5322, file: !3, line: 1011, type: !510)
!5322 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1011, column: 3)
!5323 = !DILocation(line: 1011, column: 3, scope: !5322)
!5324 = !DILocalVariable(name: "__len", scope: !5322, file: !3, line: 1011, type: !149)
!5325 = !DILocalVariable(name: "__o1", scope: !5326, file: !3, line: 1011, type: !348)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1011, column: 3)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1011, column: 3)
!5328 = !DILocation(line: 1011, column: 3, scope: !5326)
!5329 = !DILocation(line: 1011, column: 3, scope: !5327)
!5330 = !DILocation(line: 1012, column: 9, scope: !5310)
!5331 = !DILocation(line: 1012, column: 7, scope: !5310)
!5332 = !DILocation(line: 1013, column: 8, scope: !5310)
!5333 = !DILocation(line: 1013, column: 6, scope: !5310)
!5334 = !DILocation(line: 1014, column: 5, scope: !5310)
!5335 = !DILocation(line: 1015, column: 16, scope: !5310)
!5336 = !DILocation(line: 1015, column: 3, scope: !5310)
!5337 = !DILocation(line: 1015, column: 7, scope: !5310)
!5338 = !DILocation(line: 1015, column: 14, scope: !5310)
!5339 = !DILocation(line: 1016, column: 16, scope: !5310)
!5340 = !DILocation(line: 1016, column: 3, scope: !5310)
!5341 = !DILocation(line: 1016, column: 7, scope: !5310)
!5342 = !DILocation(line: 1016, column: 14, scope: !5310)
!5343 = !DILocation(line: 1017, column: 1, scope: !5310)
!5344 = distinct !DISubprogram(name: "quote_name", scope: !3, file: !3, line: 4475, type: !631, scopeLine: 4478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5345 = !DILocalVariable(name: "name", arg: 1, scope: !5344, file: !3, line: 4475, type: !146)
!5346 = !DILocation(line: 4475, column: 25, scope: !5344)
!5347 = !DILocalVariable(name: "options", arg: 2, scope: !5344, file: !3, line: 4475, type: !633)
!5348 = !DILocation(line: 4475, column: 61, scope: !5344)
!5349 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !5344, file: !3, line: 4476, type: !27)
!5350 = !DILocation(line: 4476, column: 17, scope: !5344)
!5351 = !DILocalVariable(name: "color", arg: 4, scope: !5344, file: !3, line: 4476, type: !399)
!5352 = !DILocation(line: 4476, column: 62, scope: !5344)
!5353 = !DILocalVariable(name: "allow_pad", arg: 5, scope: !5344, file: !3, line: 4477, type: !141)
!5354 = !DILocation(line: 4477, column: 18, scope: !5344)
!5355 = !DILocalVariable(name: "stack", arg: 6, scope: !5344, file: !3, line: 4477, type: !510)
!5356 = !DILocation(line: 4477, column: 45, scope: !5344)
!5357 = !DILocalVariable(name: "absolute_name", arg: 7, scope: !5344, file: !3, line: 4477, type: !146)
!5358 = !DILocation(line: 4477, column: 64, scope: !5344)
!5359 = !DILocalVariable(name: "smallbuf", scope: !5344, file: !3, line: 4479, type: !635)
!5360 = !DILocation(line: 4479, column: 8, scope: !5344)
!5361 = !DILocalVariable(name: "buf", scope: !5344, file: !3, line: 4480, type: !143)
!5362 = !DILocation(line: 4480, column: 9, scope: !5344)
!5363 = !DILocation(line: 4480, column: 15, scope: !5344)
!5364 = !DILocalVariable(name: "len", scope: !5344, file: !3, line: 4481, type: !149)
!5365 = !DILocation(line: 4481, column: 10, scope: !5344)
!5366 = !DILocalVariable(name: "pad", scope: !5344, file: !3, line: 4482, type: !141)
!5367 = !DILocation(line: 4482, column: 8, scope: !5344)
!5368 = !DILocation(line: 4484, column: 57, scope: !5344)
!5369 = !DILocation(line: 4484, column: 63, scope: !5344)
!5370 = !DILocation(line: 4485, column: 25, scope: !5344)
!5371 = !DILocation(line: 4484, column: 9, scope: !5344)
!5372 = !DILocation(line: 4484, column: 7, scope: !5344)
!5373 = !DILocation(line: 4487, column: 7, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4487, column: 7)
!5375 = !DILocation(line: 4487, column: 11, scope: !5374)
!5376 = !DILocation(line: 4487, column: 14, scope: !5374)
!5377 = !DILocation(line: 4487, column: 7, scope: !5344)
!5378 = !DILocation(line: 4488, column: 7, scope: !5374)
!5379 = !DILocation(line: 4488, column: 7, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 4488, column: 7)
!5381 = !DILocation(line: 4490, column: 7, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4490, column: 7)
!5383 = !DILocation(line: 4490, column: 7, scope: !5344)
!5384 = !DILocation(line: 4491, column: 28, scope: !5382)
!5385 = !DILocation(line: 4491, column: 5, scope: !5382)
!5386 = !DILocalVariable(name: "skip_quotes", scope: !5344, file: !3, line: 4495, type: !141)
!5387 = !DILocation(line: 4495, column: 8, scope: !5344)
!5388 = !DILocation(line: 4497, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4497, column: 7)
!5390 = !DILocation(line: 4497, column: 7, scope: !5344)
!5391 = !DILocation(line: 4499, column: 11, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4499, column: 11)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 4498, column: 5)
!5394 = !DILocation(line: 4499, column: 39, scope: !5392)
!5395 = !DILocation(line: 4499, column: 42, scope: !5392)
!5396 = !DILocation(line: 4499, column: 58, scope: !5392)
!5397 = !DILocation(line: 4499, column: 63, scope: !5392)
!5398 = !DILocation(line: 4499, column: 11, scope: !5393)
!5399 = !DILocation(line: 4501, column: 23, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 4500, column: 9)
!5401 = !DILocation(line: 4502, column: 11, scope: !5400)
!5402 = !DILocation(line: 4503, column: 9, scope: !5400)
!5403 = !DILocalVariable(name: "h", scope: !5393, file: !3, line: 4504, type: !143)
!5404 = !DILocation(line: 4504, column: 13, scope: !5393)
!5405 = !DILocation(line: 4504, column: 30, scope: !5393)
!5406 = !DILocation(line: 4504, column: 17, scope: !5393)
!5407 = !DILocalVariable(name: "n", scope: !5393, file: !3, line: 4505, type: !143)
!5408 = !DILocation(line: 4505, column: 13, scope: !5393)
!5409 = !DILocation(line: 4505, column: 30, scope: !5393)
!5410 = !DILocation(line: 4505, column: 17, scope: !5393)
!5411 = !DILocation(line: 4511, column: 42, scope: !5393)
!5412 = !DILocation(line: 4511, column: 46, scope: !5393)
!5413 = !DILocation(line: 4511, column: 45, scope: !5393)
!5414 = !DILocation(line: 4511, column: 48, scope: !5393)
!5415 = !DILocation(line: 4511, column: 67, scope: !5393)
!5416 = !DILocation(line: 4511, column: 7, scope: !5393)
!5417 = !DILocation(line: 4512, column: 13, scope: !5393)
!5418 = !DILocation(line: 4512, column: 7, scope: !5393)
!5419 = !DILocation(line: 4513, column: 13, scope: !5393)
!5420 = !DILocation(line: 4513, column: 7, scope: !5393)
!5421 = !DILocation(line: 4514, column: 5, scope: !5393)
!5422 = !DILocation(line: 4516, column: 7, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4516, column: 7)
!5424 = !DILocation(line: 4516, column: 7, scope: !5344)
!5425 = !DILocation(line: 4517, column: 5, scope: !5423)
!5426 = !DILocation(line: 4517, column: 5, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 4517, column: 5)
!5428 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 4517, column: 5)
!5429 = !DILocation(line: 4517, column: 5, scope: !5428)
!5430 = !DILocalVariable(name: "__o", scope: !5431, file: !3, line: 4517, type: !510)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 4517, column: 5)
!5432 = !DILocation(line: 4517, column: 5, scope: !5431)
!5433 = !DILocalVariable(name: "__len", scope: !5431, file: !3, line: 4517, type: !149)
!5434 = !DILocalVariable(name: "__o1", scope: !5435, file: !3, line: 4517, type: !348)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 4517, column: 5)
!5436 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 4517, column: 5)
!5437 = !DILocation(line: 4517, column: 5, scope: !5435)
!5438 = !DILocation(line: 4517, column: 5, scope: !5436)
!5439 = !DILocation(line: 4519, column: 3, scope: !5344)
!5440 = !DILocation(line: 4521, column: 16, scope: !5344)
!5441 = !DILocation(line: 4521, column: 13, scope: !5344)
!5442 = !DILocation(line: 4523, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4523, column: 7)
!5444 = !DILocation(line: 4523, column: 7, scope: !5344)
!5445 = !DILocation(line: 4524, column: 5, scope: !5443)
!5446 = !DILocation(line: 4524, column: 5, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 4524, column: 5)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 4524, column: 5)
!5449 = !DILocation(line: 4524, column: 5, scope: !5448)
!5450 = !DILocalVariable(name: "__o", scope: !5451, file: !3, line: 4524, type: !510)
!5451 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 4524, column: 5)
!5452 = !DILocation(line: 4524, column: 5, scope: !5451)
!5453 = !DILocalVariable(name: "__len", scope: !5451, file: !3, line: 4524, type: !149)
!5454 = !DILocalVariable(name: "__o1", scope: !5455, file: !3, line: 4524, type: !348)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 4524, column: 5)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4524, column: 5)
!5457 = !DILocation(line: 4524, column: 5, scope: !5455)
!5458 = !DILocation(line: 4524, column: 5, scope: !5456)
!5459 = !DILocation(line: 4526, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4526, column: 7)
!5461 = !DILocation(line: 4526, column: 7, scope: !5344)
!5462 = !DILocation(line: 4528, column: 7, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 4527, column: 5)
!5464 = !DILocation(line: 4529, column: 11, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 4529, column: 11)
!5466 = !DILocation(line: 4529, column: 11, scope: !5463)
!5467 = !DILocation(line: 4530, column: 9, scope: !5465)
!5468 = !DILocation(line: 4531, column: 5, scope: !5463)
!5469 = !DILocation(line: 4533, column: 7, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4533, column: 7)
!5471 = !DILocation(line: 4533, column: 14, scope: !5470)
!5472 = !DILocation(line: 4533, column: 11, scope: !5470)
!5473 = !DILocation(line: 4533, column: 23, scope: !5470)
!5474 = !DILocation(line: 4533, column: 26, scope: !5470)
!5475 = !DILocation(line: 4533, column: 33, scope: !5470)
!5476 = !DILocation(line: 4533, column: 30, scope: !5470)
!5477 = !DILocation(line: 4533, column: 7, scope: !5344)
!5478 = !DILocation(line: 4534, column: 11, scope: !5470)
!5479 = !DILocation(line: 4534, column: 5, scope: !5470)
!5480 = !DILocation(line: 4536, column: 10, scope: !5344)
!5481 = !DILocation(line: 4536, column: 16, scope: !5344)
!5482 = !DILocation(line: 4536, column: 14, scope: !5344)
!5483 = !DILocation(line: 4536, column: 3, scope: !5344)
!5484 = distinct !DISubprogram(name: "file_ignored", scope: !3, file: !3, line: 2919, type: !568, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5485 = !DILocalVariable(name: "name", arg: 1, scope: !5484, file: !3, line: 2919, type: !146)
!5486 = !DILocation(line: 2919, column: 27, scope: !5484)
!5487 = !DILocation(line: 2921, column: 12, scope: !5484)
!5488 = !DILocation(line: 2921, column: 24, scope: !5484)
!5489 = !DILocation(line: 2922, column: 12, scope: !5484)
!5490 = !DILocation(line: 2922, column: 15, scope: !5484)
!5491 = !DILocation(line: 2922, column: 23, scope: !5484)
!5492 = !DILocation(line: 2923, column: 12, scope: !5484)
!5493 = !DILocation(line: 2923, column: 16, scope: !5484)
!5494 = !DILocation(line: 2923, column: 28, scope: !5484)
!5495 = !DILocation(line: 2923, column: 46, scope: !5484)
!5496 = !DILocation(line: 2923, column: 51, scope: !5484)
!5497 = !DILocation(line: 2923, column: 61, scope: !5484)
!5498 = !DILocation(line: 2923, column: 69, scope: !5484)
!5499 = !DILocation(line: 2923, column: 58, scope: !5484)
!5500 = !DILocation(line: 2924, column: 11, scope: !5484)
!5501 = !DILocation(line: 2924, column: 15, scope: !5484)
!5502 = !DILocation(line: 2924, column: 27, scope: !5484)
!5503 = !DILocation(line: 2925, column: 15, scope: !5484)
!5504 = !DILocation(line: 2925, column: 34, scope: !5484)
!5505 = !DILocation(line: 2925, column: 49, scope: !5484)
!5506 = !DILocation(line: 2925, column: 18, scope: !5484)
!5507 = !DILocation(line: 2926, column: 11, scope: !5484)
!5508 = !DILocation(line: 2926, column: 30, scope: !5484)
!5509 = !DILocation(line: 2926, column: 47, scope: !5484)
!5510 = !DILocation(line: 2926, column: 14, scope: !5484)
!5511 = !DILocation(line: 2921, column: 3, scope: !5484)
!5512 = distinct !DISubprogram(name: "process_signals", scope: !3, file: !3, line: 1312, type: !341, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5513 = !DILocation(line: 1314, column: 3, scope: !5512)
!5514 = !DILocation(line: 1314, column: 10, scope: !5512)
!5515 = !DILocation(line: 1314, column: 27, scope: !5512)
!5516 = !DILocation(line: 1314, column: 30, scope: !5512)
!5517 = !DILocalVariable(name: "sig", scope: !5518, file: !3, line: 1316, type: !27)
!5518 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1315, column: 5)
!5519 = !DILocation(line: 1316, column: 11, scope: !5518)
!5520 = !DILocalVariable(name: "stops", scope: !5518, file: !3, line: 1317, type: !27)
!5521 = !DILocation(line: 1317, column: 11, scope: !5518)
!5522 = !DILocalVariable(name: "oldset", scope: !5518, file: !3, line: 1318, type: !403)
!5523 = !DILocation(line: 1318, column: 16, scope: !5518)
!5524 = !DILocation(line: 1320, column: 11, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1320, column: 11)
!5526 = !DILocation(line: 1320, column: 11, scope: !5518)
!5527 = !DILocation(line: 1321, column: 9, scope: !5525)
!5528 = !DILocation(line: 1322, column: 7, scope: !5518)
!5529 = !DILocation(line: 1324, column: 7, scope: !5518)
!5530 = !DILocation(line: 1328, column: 13, scope: !5518)
!5531 = !DILocation(line: 1328, column: 11, scope: !5518)
!5532 = !DILocation(line: 1329, column: 15, scope: !5518)
!5533 = !DILocation(line: 1329, column: 13, scope: !5518)
!5534 = !DILocation(line: 1334, column: 11, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1334, column: 11)
!5536 = !DILocation(line: 1334, column: 11, scope: !5518)
!5537 = !DILocation(line: 1336, column: 31, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1335, column: 9)
!5539 = !DILocation(line: 1336, column: 37, scope: !5538)
!5540 = !DILocation(line: 1336, column: 29, scope: !5538)
!5541 = !DILocation(line: 1337, column: 15, scope: !5538)
!5542 = !DILocation(line: 1338, column: 9, scope: !5538)
!5543 = !DILocation(line: 1340, column: 17, scope: !5535)
!5544 = !DILocation(line: 1340, column: 9, scope: !5535)
!5545 = !DILocation(line: 1343, column: 14, scope: !5518)
!5546 = !DILocation(line: 1343, column: 7, scope: !5518)
!5547 = !DILocation(line: 1344, column: 7, scope: !5518)
!5548 = distinct !{!5548, !5513, !5549}
!5549 = !DILocation(line: 1348, column: 5, scope: !5512)
!5550 = !DILocation(line: 1349, column: 1, scope: !5512)
!5551 = distinct !DISubprogram(name: "patterns_match", scope: !3, file: !3, line: 2907, type: !659, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5552 = !DILocalVariable(name: "patterns", arg: 1, scope: !5551, file: !3, line: 2907, type: !661)
!5553 = !DILocation(line: 2907, column: 46, scope: !5551)
!5554 = !DILocalVariable(name: "file", arg: 2, scope: !5551, file: !3, line: 2907, type: !146)
!5555 = !DILocation(line: 2907, column: 68, scope: !5551)
!5556 = !DILocalVariable(name: "p", scope: !5551, file: !3, line: 2909, type: !661)
!5557 = !DILocation(line: 2909, column: 32, scope: !5551)
!5558 = !DILocation(line: 2910, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 2910, column: 3)
!5560 = !DILocation(line: 2910, column: 10, scope: !5559)
!5561 = !DILocation(line: 2910, column: 8, scope: !5559)
!5562 = !DILocation(line: 2910, column: 22, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2910, column: 3)
!5564 = !DILocation(line: 2910, column: 3, scope: !5559)
!5565 = !DILocation(line: 2911, column: 18, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2911, column: 9)
!5567 = !DILocation(line: 2911, column: 21, scope: !5566)
!5568 = !DILocation(line: 2911, column: 30, scope: !5566)
!5569 = !DILocation(line: 2911, column: 9, scope: !5566)
!5570 = !DILocation(line: 2911, column: 48, scope: !5566)
!5571 = !DILocation(line: 2911, column: 9, scope: !5563)
!5572 = !DILocation(line: 2912, column: 7, scope: !5566)
!5573 = !DILocation(line: 2911, column: 51, scope: !5566)
!5574 = !DILocation(line: 2910, column: 29, scope: !5563)
!5575 = !DILocation(line: 2910, column: 32, scope: !5563)
!5576 = !DILocation(line: 2910, column: 27, scope: !5563)
!5577 = !DILocation(line: 2910, column: 3, scope: !5563)
!5578 = distinct !{!5578, !5564, !5579}
!5579 = !DILocation(line: 2912, column: 14, scope: !5559)
!5580 = !DILocation(line: 2913, column: 3, scope: !5551)
!5581 = !DILocation(line: 2914, column: 1, scope: !5551)
!5582 = distinct !DISubprogram(name: "quote_name_buf", scope: !3, file: !3, line: 4240, type: !638, scopeLine: 4243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5583 = !DILocalVariable(name: "inbuf", arg: 1, scope: !5582, file: !3, line: 4240, type: !142)
!5584 = !DILocation(line: 4240, column: 24, scope: !5582)
!5585 = !DILocalVariable(name: "bufsize", arg: 2, scope: !5582, file: !3, line: 4240, type: !149)
!5586 = !DILocation(line: 4240, column: 38, scope: !5582)
!5587 = !DILocalVariable(name: "name", arg: 3, scope: !5582, file: !3, line: 4240, type: !143)
!5588 = !DILocation(line: 4240, column: 53, scope: !5582)
!5589 = !DILocalVariable(name: "options", arg: 4, scope: !5582, file: !3, line: 4241, type: !633)
!5590 = !DILocation(line: 4241, column: 47, scope: !5582)
!5591 = !DILocalVariable(name: "needs_general_quoting", arg: 5, scope: !5582, file: !3, line: 4242, type: !27)
!5592 = !DILocation(line: 4242, column: 21, scope: !5582)
!5593 = !DILocalVariable(name: "width", arg: 6, scope: !5582, file: !3, line: 4242, type: !148)
!5594 = !DILocation(line: 4242, column: 52, scope: !5582)
!5595 = !DILocalVariable(name: "pad", arg: 7, scope: !5582, file: !3, line: 4242, type: !640)
!5596 = !DILocation(line: 4242, column: 65, scope: !5582)
!5597 = !DILocalVariable(name: "buf", scope: !5582, file: !3, line: 4244, type: !143)
!5598 = !DILocation(line: 4244, column: 9, scope: !5582)
!5599 = !DILocation(line: 4244, column: 16, scope: !5582)
!5600 = !DILocation(line: 4244, column: 15, scope: !5582)
!5601 = !DILocalVariable(name: "displayed_width", scope: !5582, file: !3, line: 4245, type: !149)
!5602 = !DILocation(line: 4245, column: 10, scope: !5582)
!5603 = !DILocalVariable(name: "len", scope: !5582, file: !3, line: 4246, type: !149)
!5604 = !DILocation(line: 4246, column: 10, scope: !5582)
!5605 = !DILocalVariable(name: "quoted", scope: !5582, file: !3, line: 4247, type: !141)
!5606 = !DILocation(line: 4247, column: 8, scope: !5582)
!5607 = !DILocalVariable(name: "qs", scope: !5582, file: !3, line: 4249, type: !95)
!5608 = !DILocation(line: 4249, column: 22, scope: !5582)
!5609 = !DILocation(line: 4249, column: 46, scope: !5582)
!5610 = !DILocation(line: 4249, column: 27, scope: !5582)
!5611 = !DILocalVariable(name: "needs_further_quoting", scope: !5582, file: !3, line: 4250, type: !141)
!5612 = !DILocation(line: 4250, column: 8, scope: !5582)
!5613 = !DILocation(line: 4250, column: 32, scope: !5582)
!5614 = !DILocation(line: 4251, column: 32, scope: !5582)
!5615 = !DILocation(line: 4251, column: 36, scope: !5582)
!5616 = !DILocation(line: 4251, column: 39, scope: !5582)
!5617 = !DILocation(line: 4252, column: 36, scope: !5582)
!5618 = !DILocation(line: 4252, column: 39, scope: !5582)
!5619 = !DILocation(line: 4252, column: 42, scope: !5582)
!5620 = !DILocation(line: 4253, column: 36, scope: !5582)
!5621 = !DILocation(line: 4253, column: 39, scope: !5582)
!5622 = !DILocation(line: 4253, column: 42, scope: !5582)
!5623 = !DILocation(line: 0, scope: !5582)
!5624 = !DILocation(line: 4255, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4255, column: 7)
!5626 = !DILocation(line: 4255, column: 29, scope: !5625)
!5627 = !DILocation(line: 4255, column: 7, scope: !5582)
!5628 = !DILocation(line: 4257, column: 30, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 4256, column: 5)
!5630 = !DILocation(line: 4257, column: 35, scope: !5629)
!5631 = !DILocation(line: 4257, column: 44, scope: !5629)
!5632 = !DILocation(line: 4257, column: 54, scope: !5629)
!5633 = !DILocation(line: 4257, column: 13, scope: !5629)
!5634 = !DILocation(line: 4257, column: 11, scope: !5629)
!5635 = !DILocation(line: 4258, column: 11, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 4258, column: 11)
!5637 = !DILocation(line: 4258, column: 22, scope: !5636)
!5638 = !DILocation(line: 4258, column: 19, scope: !5636)
!5639 = !DILocation(line: 4258, column: 11, scope: !5629)
!5640 = !DILocation(line: 4260, column: 26, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 4259, column: 9)
!5642 = !DILocation(line: 4260, column: 30, scope: !5641)
!5643 = !DILocation(line: 4260, column: 17, scope: !5641)
!5644 = !DILocation(line: 4260, column: 15, scope: !5641)
!5645 = !DILocation(line: 4261, column: 28, scope: !5641)
!5646 = !DILocation(line: 4261, column: 33, scope: !5641)
!5647 = !DILocation(line: 4261, column: 37, scope: !5641)
!5648 = !DILocation(line: 4261, column: 42, scope: !5641)
!5649 = !DILocation(line: 4261, column: 52, scope: !5641)
!5650 = !DILocation(line: 4261, column: 11, scope: !5641)
!5651 = !DILocation(line: 4262, column: 9, scope: !5641)
!5652 = !DILocation(line: 4264, column: 18, scope: !5629)
!5653 = !DILocation(line: 4264, column: 17, scope: !5629)
!5654 = !DILocation(line: 4264, column: 27, scope: !5629)
!5655 = !DILocation(line: 4264, column: 26, scope: !5629)
!5656 = !DILocation(line: 4264, column: 23, scope: !5629)
!5657 = !DILocation(line: 4264, column: 32, scope: !5629)
!5658 = !DILocation(line: 4264, column: 43, scope: !5629)
!5659 = !DILocation(line: 4264, column: 35, scope: !5629)
!5660 = !DILocation(line: 4264, column: 52, scope: !5629)
!5661 = !DILocation(line: 4264, column: 49, scope: !5629)
!5662 = !DILocation(line: 4264, column: 14, scope: !5629)
!5663 = !DILocation(line: 4265, column: 5, scope: !5629)
!5664 = !DILocation(line: 4266, column: 12, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 4266, column: 12)
!5666 = !DILocation(line: 4266, column: 12, scope: !5625)
!5667 = !DILocation(line: 4268, column: 21, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 4267, column: 5)
!5669 = !DILocation(line: 4268, column: 13, scope: !5668)
!5670 = !DILocation(line: 4268, column: 11, scope: !5668)
!5671 = !DILocation(line: 4269, column: 11, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 4269, column: 11)
!5673 = !DILocation(line: 4269, column: 22, scope: !5672)
!5674 = !DILocation(line: 4269, column: 19, scope: !5672)
!5675 = !DILocation(line: 4269, column: 11, scope: !5668)
!5676 = !DILocation(line: 4270, column: 24, scope: !5672)
!5677 = !DILocation(line: 4270, column: 28, scope: !5672)
!5678 = !DILocation(line: 4270, column: 15, scope: !5672)
!5679 = !DILocation(line: 4270, column: 13, scope: !5672)
!5680 = !DILocation(line: 4270, column: 9, scope: !5672)
!5681 = !DILocation(line: 4271, column: 15, scope: !5668)
!5682 = !DILocation(line: 4271, column: 20, scope: !5668)
!5683 = !DILocation(line: 4271, column: 26, scope: !5668)
!5684 = !DILocation(line: 4271, column: 30, scope: !5668)
!5685 = !DILocation(line: 4271, column: 7, scope: !5668)
!5686 = !DILocation(line: 4273, column: 14, scope: !5668)
!5687 = !DILocation(line: 4274, column: 5, scope: !5668)
!5688 = !DILocation(line: 4277, column: 21, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 4276, column: 5)
!5690 = !DILocation(line: 4277, column: 13, scope: !5689)
!5691 = !DILocation(line: 4277, column: 11, scope: !5689)
!5692 = !DILocation(line: 4278, column: 13, scope: !5689)
!5693 = !DILocation(line: 4278, column: 11, scope: !5689)
!5694 = !DILocation(line: 4279, column: 14, scope: !5689)
!5695 = !DILocation(line: 4282, column: 7, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4282, column: 7)
!5697 = !DILocation(line: 4282, column: 7, scope: !5582)
!5698 = !DILocation(line: 4284, column: 11, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 4284, column: 11)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 4283, column: 5)
!5701 = !DILocation(line: 4284, column: 22, scope: !5699)
!5702 = !DILocation(line: 4284, column: 11, scope: !5700)
!5703 = !DILocalVariable(name: "p", scope: !5704, file: !3, line: 4286, type: !146)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4285, column: 9)
!5705 = !DILocation(line: 4286, column: 23, scope: !5704)
!5706 = !DILocation(line: 4286, column: 27, scope: !5704)
!5707 = !DILocalVariable(name: "plimit", scope: !5704, file: !3, line: 4287, type: !146)
!5708 = !DILocation(line: 4287, column: 23, scope: !5704)
!5709 = !DILocation(line: 4287, column: 32, scope: !5704)
!5710 = !DILocation(line: 4287, column: 38, scope: !5704)
!5711 = !DILocation(line: 4287, column: 36, scope: !5704)
!5712 = !DILocalVariable(name: "q", scope: !5704, file: !3, line: 4288, type: !143)
!5713 = !DILocation(line: 4288, column: 17, scope: !5704)
!5714 = !DILocation(line: 4288, column: 21, scope: !5704)
!5715 = !DILocation(line: 4289, column: 27, scope: !5704)
!5716 = !DILocation(line: 4291, column: 11, scope: !5704)
!5717 = !DILocation(line: 4291, column: 18, scope: !5704)
!5718 = !DILocation(line: 4291, column: 22, scope: !5704)
!5719 = !DILocation(line: 4291, column: 20, scope: !5704)
!5720 = !DILocation(line: 4292, column: 22, scope: !5704)
!5721 = !DILocation(line: 4292, column: 21, scope: !5704)
!5722 = !DILocation(line: 4292, column: 13, scope: !5704)
!5723 = !DILocation(line: 4315, column: 28, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 4293, column: 15)
!5725 = !DILocation(line: 4315, column: 26, scope: !5724)
!5726 = !DILocation(line: 4315, column: 21, scope: !5724)
!5727 = !DILocation(line: 4315, column: 24, scope: !5724)
!5728 = !DILocation(line: 4316, column: 35, scope: !5724)
!5729 = !DILocation(line: 4317, column: 19, scope: !5724)
!5730 = !DILocalVariable(name: "mbstate", scope: !5731, file: !3, line: 4323, type: !641)
!5731 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 4322, column: 19)
!5732 = !DILocation(line: 4323, column: 31, scope: !5731)
!5733 = !DILocation(line: 4324, column: 21, scope: !5731)
!5734 = !DILocalVariable(name: "wc", scope: !5735, file: !3, line: 4326, type: !654)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 4325, column: 23)
!5736 = !DILocation(line: 4326, column: 33, scope: !5735)
!5737 = !DILocalVariable(name: "bytes", scope: !5735, file: !3, line: 4327, type: !149)
!5738 = !DILocation(line: 4327, column: 32, scope: !5735)
!5739 = !DILocalVariable(name: "w", scope: !5735, file: !3, line: 4328, type: !27)
!5740 = !DILocation(line: 4328, column: 29, scope: !5735)
!5741 = !DILocation(line: 4330, column: 47, scope: !5735)
!5742 = !DILocation(line: 4330, column: 50, scope: !5735)
!5743 = !DILocation(line: 4330, column: 59, scope: !5735)
!5744 = !DILocation(line: 4330, column: 57, scope: !5735)
!5745 = !DILocation(line: 4330, column: 33, scope: !5735)
!5746 = !DILocation(line: 4330, column: 31, scope: !5735)
!5747 = !DILocation(line: 4332, column: 29, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4332, column: 29)
!5749 = !DILocation(line: 4332, column: 35, scope: !5748)
!5750 = !DILocation(line: 4332, column: 29, scope: !5735)
!5751 = !DILocation(line: 4337, column: 30, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 4333, column: 27)
!5753 = !DILocation(line: 4338, column: 31, scope: !5752)
!5754 = !DILocation(line: 4338, column: 34, scope: !5752)
!5755 = !DILocation(line: 4339, column: 45, scope: !5752)
!5756 = !DILocation(line: 4340, column: 29, scope: !5752)
!5757 = !DILocation(line: 4343, column: 29, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4343, column: 29)
!5759 = !DILocation(line: 4343, column: 35, scope: !5758)
!5760 = !DILocation(line: 4343, column: 29, scope: !5735)
!5761 = !DILocation(line: 4348, column: 33, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 4344, column: 27)
!5763 = !DILocation(line: 4348, column: 31, scope: !5762)
!5764 = !DILocation(line: 4349, column: 31, scope: !5762)
!5765 = !DILocation(line: 4349, column: 34, scope: !5762)
!5766 = !DILocation(line: 4350, column: 45, scope: !5762)
!5767 = !DILocation(line: 4351, column: 29, scope: !5762)
!5768 = !DILocation(line: 4354, column: 29, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4354, column: 29)
!5770 = !DILocation(line: 4354, column: 35, scope: !5769)
!5771 = !DILocation(line: 4354, column: 29, scope: !5735)
!5772 = !DILocation(line: 4356, column: 33, scope: !5769)
!5773 = !DILocation(line: 4356, column: 27, scope: !5769)
!5774 = !DILocation(line: 4358, column: 38, scope: !5735)
!5775 = !DILocation(line: 4358, column: 29, scope: !5735)
!5776 = !DILocation(line: 4358, column: 27, scope: !5735)
!5777 = !DILocation(line: 4359, column: 29, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4359, column: 29)
!5779 = !DILocation(line: 4359, column: 31, scope: !5778)
!5780 = !DILocation(line: 4359, column: 29, scope: !5735)
!5781 = !DILocation(line: 4363, column: 29, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4360, column: 27)
!5783 = !DILocation(line: 4363, column: 36, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 4363, column: 29)
!5785 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 4363, column: 29)
!5786 = !DILocation(line: 4363, column: 42, scope: !5784)
!5787 = !DILocation(line: 4363, column: 29, scope: !5785)
!5788 = !DILocation(line: 4364, column: 40, scope: !5784)
!5789 = !DILocation(line: 4364, column: 38, scope: !5784)
!5790 = !DILocation(line: 4364, column: 33, scope: !5784)
!5791 = !DILocation(line: 4364, column: 36, scope: !5784)
!5792 = !DILocation(line: 4364, column: 31, scope: !5784)
!5793 = !DILocation(line: 4363, column: 47, scope: !5784)
!5794 = !DILocation(line: 4363, column: 29, scope: !5784)
!5795 = distinct !{!5795, !5787, !5796}
!5796 = !DILocation(line: 4364, column: 40, scope: !5785)
!5797 = !DILocation(line: 4365, column: 48, scope: !5782)
!5798 = !DILocation(line: 4365, column: 45, scope: !5782)
!5799 = !DILocation(line: 4366, column: 27, scope: !5782)
!5800 = !DILocation(line: 4372, column: 34, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4368, column: 27)
!5802 = !DILocation(line: 4372, column: 31, scope: !5801)
!5803 = !DILocation(line: 4373, column: 31, scope: !5801)
!5804 = !DILocation(line: 4373, column: 34, scope: !5801)
!5805 = !DILocation(line: 4374, column: 45, scope: !5801)
!5806 = !DILocation(line: 4376, column: 23, scope: !5735)
!5807 = !DILocation(line: 4377, column: 30, scope: !5731)
!5808 = !DILocation(line: 4377, column: 28, scope: !5731)
!5809 = distinct !{!5809, !5733, !5810}
!5810 = !DILocation(line: 4377, column: 48, scope: !5731)
!5811 = !DILocation(line: 4379, column: 19, scope: !5724)
!5812 = distinct !{!5812, !5716, !5813}
!5813 = !DILocation(line: 4380, column: 15, scope: !5704)
!5814 = !DILocation(line: 4383, column: 17, scope: !5704)
!5815 = !DILocation(line: 4383, column: 21, scope: !5704)
!5816 = !DILocation(line: 4383, column: 19, scope: !5704)
!5817 = !DILocation(line: 4383, column: 15, scope: !5704)
!5818 = !DILocation(line: 4384, column: 9, scope: !5704)
!5819 = !DILocalVariable(name: "p", scope: !5820, file: !3, line: 4387, type: !143)
!5820 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4386, column: 9)
!5821 = !DILocation(line: 4387, column: 17, scope: !5820)
!5822 = !DILocation(line: 4387, column: 21, scope: !5820)
!5823 = !DILocalVariable(name: "plimit", scope: !5820, file: !3, line: 4388, type: !146)
!5824 = !DILocation(line: 4388, column: 23, scope: !5820)
!5825 = !DILocation(line: 4388, column: 32, scope: !5820)
!5826 = !DILocation(line: 4388, column: 38, scope: !5820)
!5827 = !DILocation(line: 4388, column: 36, scope: !5820)
!5828 = !DILocation(line: 4390, column: 11, scope: !5820)
!5829 = !DILocation(line: 4390, column: 18, scope: !5820)
!5830 = !DILocation(line: 4390, column: 22, scope: !5820)
!5831 = !DILocation(line: 4390, column: 20, scope: !5820)
!5832 = !DILocation(line: 4392, column: 21, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 4392, column: 19)
!5834 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 4391, column: 13)
!5835 = !{!2863, !2863, i64 0}
!5836 = !DILocation(line: 4392, column: 19, scope: !5834)
!5837 = !DILocation(line: 4393, column: 18, scope: !5833)
!5838 = !DILocation(line: 4393, column: 20, scope: !5833)
!5839 = !DILocation(line: 4393, column: 17, scope: !5833)
!5840 = !DILocation(line: 4394, column: 16, scope: !5834)
!5841 = distinct !{!5841, !5828, !5842}
!5842 = !DILocation(line: 4395, column: 13, scope: !5820)
!5843 = !DILocation(line: 4396, column: 29, scope: !5820)
!5844 = !DILocation(line: 4396, column: 27, scope: !5820)
!5845 = !DILocation(line: 4398, column: 5, scope: !5700)
!5846 = !DILocation(line: 4399, column: 12, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 4399, column: 12)
!5848 = !DILocation(line: 4399, column: 18, scope: !5847)
!5849 = !DILocation(line: 4399, column: 12, scope: !5696)
!5850 = !DILocation(line: 4401, column: 11, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 4401, column: 11)
!5852 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 4400, column: 5)
!5853 = !DILocation(line: 4401, column: 22, scope: !5851)
!5854 = !DILocation(line: 4401, column: 11, scope: !5852)
!5855 = !DILocation(line: 4402, column: 38, scope: !5851)
!5856 = !DILocation(line: 4402, column: 43, scope: !5851)
!5857 = !DILocation(line: 4402, column: 27, scope: !5851)
!5858 = !DILocation(line: 4402, column: 25, scope: !5851)
!5859 = !DILocation(line: 4402, column: 9, scope: !5851)
!5860 = !DILocalVariable(name: "p", scope: !5861, file: !3, line: 4405, type: !146)
!5861 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 4404, column: 9)
!5862 = !DILocation(line: 4405, column: 23, scope: !5861)
!5863 = !DILocation(line: 4405, column: 27, scope: !5861)
!5864 = !DILocalVariable(name: "plimit", scope: !5861, file: !3, line: 4406, type: !146)
!5865 = !DILocation(line: 4406, column: 23, scope: !5861)
!5866 = !DILocation(line: 4406, column: 32, scope: !5861)
!5867 = !DILocation(line: 4406, column: 38, scope: !5861)
!5868 = !DILocation(line: 4406, column: 36, scope: !5861)
!5869 = !DILocation(line: 4408, column: 27, scope: !5861)
!5870 = !DILocation(line: 4409, column: 11, scope: !5861)
!5871 = !DILocation(line: 4409, column: 18, scope: !5861)
!5872 = !DILocation(line: 4409, column: 22, scope: !5861)
!5873 = !DILocation(line: 4409, column: 20, scope: !5861)
!5874 = !DILocation(line: 4411, column: 19, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 4411, column: 19)
!5876 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 4410, column: 13)
!5877 = !DILocation(line: 4411, column: 19, scope: !5876)
!5878 = !DILocation(line: 4412, column: 32, scope: !5875)
!5879 = !DILocation(line: 4412, column: 17, scope: !5875)
!5880 = !DILocation(line: 4413, column: 16, scope: !5876)
!5881 = distinct !{!5881, !5870, !5882}
!5882 = !DILocation(line: 4414, column: 13, scope: !5861)
!5883 = !DILocation(line: 4416, column: 5, scope: !5852)
!5884 = !DILocation(line: 4421, column: 11, scope: !5582)
!5885 = !DILocation(line: 4421, column: 39, scope: !5582)
!5886 = !DILocation(line: 4421, column: 42, scope: !5582)
!5887 = !DILocation(line: 4421, column: 58, scope: !5582)
!5888 = !DILocation(line: 4421, column: 63, scope: !5582)
!5889 = !DILocation(line: 4421, column: 61, scope: !5582)
!5890 = !DILocation(line: 4421, column: 4, scope: !5582)
!5891 = !DILocation(line: 4421, column: 8, scope: !5582)
!5892 = !DILocation(line: 4423, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4423, column: 7)
!5894 = !DILocation(line: 4423, column: 13, scope: !5893)
!5895 = !DILocation(line: 4423, column: 7, scope: !5582)
!5896 = !DILocation(line: 4424, column: 14, scope: !5893)
!5897 = !DILocation(line: 4424, column: 6, scope: !5893)
!5898 = !DILocation(line: 4424, column: 12, scope: !5893)
!5899 = !DILocation(line: 4424, column: 5, scope: !5893)
!5900 = !DILocation(line: 4426, column: 12, scope: !5582)
!5901 = !DILocation(line: 4426, column: 4, scope: !5582)
!5902 = !DILocation(line: 4426, column: 10, scope: !5582)
!5903 = !DILocation(line: 4428, column: 10, scope: !5582)
!5904 = !DILocation(line: 4428, column: 3, scope: !5582)
!5905 = distinct !DISubprogram(name: "print_color_indicator", scope: !3, file: !3, line: 4665, type: !655, scopeLine: 4666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5906 = !DILocalVariable(name: "ind", arg: 1, scope: !5905, file: !3, line: 4665, type: !399)
!5907 = !DILocation(line: 4665, column: 46, scope: !5905)
!5908 = !DILocation(line: 4667, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 4667, column: 7)
!5910 = !DILocation(line: 4667, column: 7, scope: !5905)
!5911 = !DILocation(line: 4670, column: 11, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 4670, column: 11)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 4668, column: 5)
!5914 = !DILocation(line: 4670, column: 11, scope: !5913)
!5915 = !DILocation(line: 4671, column: 9, scope: !5912)
!5916 = !DILocation(line: 4672, column: 7, scope: !5913)
!5917 = !DILocation(line: 4673, column: 22, scope: !5913)
!5918 = !DILocation(line: 4673, column: 7, scope: !5913)
!5919 = !DILocation(line: 4674, column: 7, scope: !5913)
!5920 = !DILocation(line: 4675, column: 5, scope: !5913)
!5921 = !DILocation(line: 4677, column: 10, scope: !5905)
!5922 = !DILocation(line: 4677, column: 14, scope: !5905)
!5923 = !DILocation(line: 4677, column: 3, scope: !5905)
!5924 = distinct !DISubprogram(name: "file_escape", scope: !3, file: !3, line: 4454, type: !657, scopeLine: 4455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5925 = !DILocalVariable(name: "str", arg: 1, scope: !5924, file: !3, line: 4454, type: !146)
!5926 = !DILocation(line: 4454, column: 26, scope: !5924)
!5927 = !DILocalVariable(name: "path", arg: 2, scope: !5924, file: !3, line: 4454, type: !141)
!5928 = !DILocation(line: 4454, column: 36, scope: !5924)
!5929 = !DILocalVariable(name: "esc", scope: !5924, file: !3, line: 4456, type: !143)
!5930 = !DILocation(line: 4456, column: 9, scope: !5924)
!5931 = !DILocation(line: 4456, column: 36, scope: !5924)
!5932 = !DILocation(line: 4456, column: 28, scope: !5924)
!5933 = !DILocation(line: 4456, column: 41, scope: !5924)
!5934 = !DILocation(line: 4456, column: 15, scope: !5924)
!5935 = !DILocalVariable(name: "p", scope: !5924, file: !3, line: 4457, type: !143)
!5936 = !DILocation(line: 4457, column: 9, scope: !5924)
!5937 = !DILocation(line: 4457, column: 13, scope: !5924)
!5938 = !DILocation(line: 4458, column: 3, scope: !5924)
!5939 = !DILocation(line: 4458, column: 11, scope: !5924)
!5940 = !DILocation(line: 4458, column: 10, scope: !5924)
!5941 = !DILocation(line: 4460, column: 11, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 4460, column: 11)
!5943 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 4459, column: 5)
!5944 = !DILocation(line: 4460, column: 16, scope: !5942)
!5945 = !DILocation(line: 4460, column: 19, scope: !5942)
!5946 = !DILocation(line: 4460, column: 11, scope: !5943)
!5947 = !DILocation(line: 4462, column: 13, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4461, column: 9)
!5949 = !DILocation(line: 4462, column: 16, scope: !5948)
!5950 = !DILocation(line: 4463, column: 14, scope: !5948)
!5951 = !DILocation(line: 4464, column: 9, scope: !5948)
!5952 = !DILocation(line: 4465, column: 35, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4465, column: 16)
!5954 = !DILocation(line: 4465, column: 34, scope: !5953)
!5955 = !DILocation(line: 4465, column: 24, scope: !5953)
!5956 = !DILocation(line: 4465, column: 16, scope: !5953)
!5957 = !DILocation(line: 4465, column: 16, scope: !5942)
!5958 = !DILocation(line: 4466, column: 20, scope: !5953)
!5959 = !DILocation(line: 4466, column: 16, scope: !5953)
!5960 = !DILocation(line: 4466, column: 11, scope: !5953)
!5961 = !DILocation(line: 4466, column: 14, scope: !5953)
!5962 = !DILocation(line: 4466, column: 9, scope: !5953)
!5963 = !DILocation(line: 4468, column: 23, scope: !5953)
!5964 = !DILocation(line: 4468, column: 50, scope: !5953)
!5965 = !DILocation(line: 4468, column: 46, scope: !5953)
!5966 = !DILocation(line: 4468, column: 36, scope: !5953)
!5967 = !DILocation(line: 4468, column: 14, scope: !5953)
!5968 = !DILocation(line: 4468, column: 11, scope: !5953)
!5969 = distinct !{!5969, !5938, !5970}
!5970 = !DILocation(line: 4469, column: 5, scope: !5924)
!5971 = !DILocation(line: 4470, column: 4, scope: !5924)
!5972 = !DILocation(line: 4470, column: 6, scope: !5924)
!5973 = !DILocation(line: 4471, column: 10, scope: !5924)
!5974 = !DILocation(line: 4471, column: 3, scope: !5924)
!5975 = distinct !DISubprogram(name: "to_uchar", scope: !810, file: !810, line: 156, type: !589, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5976 = !DILocalVariable(name: "ch", arg: 1, scope: !5975, file: !810, line: 156, type: !144)
!5977 = !DILocation(line: 156, column: 44, scope: !5975)
!5978 = !DILocation(line: 156, column: 57, scope: !5975)
!5979 = !DILocation(line: 156, column: 50, scope: !5975)
!5980 = distinct !DISubprogram(name: "print_file_name_and_frills", scope: !3, file: !3, line: 4593, type: !735, scopeLine: 4594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5981 = !DILocalVariable(name: "f", arg: 1, scope: !5980, file: !3, line: 4593, type: !183)
!5982 = !DILocation(line: 4593, column: 52, scope: !5980)
!5983 = !DILocalVariable(name: "start_col", arg: 2, scope: !5980, file: !3, line: 4593, type: !149)
!5984 = !DILocation(line: 4593, column: 62, scope: !5980)
!5985 = !DILocalVariable(name: "buf", scope: !5980, file: !3, line: 4595, type: !622)
!5986 = !DILocation(line: 4595, column: 8, scope: !5980)
!5987 = !DILocation(line: 4597, column: 3, scope: !5980)
!5988 = !DILocation(line: 4599, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4599, column: 7)
!5990 = !DILocation(line: 4599, column: 7, scope: !5980)
!5991 = !DILocation(line: 4600, column: 21, scope: !5989)
!5992 = !DILocation(line: 4600, column: 28, scope: !5989)
!5993 = !DILocation(line: 4600, column: 49, scope: !5989)
!5994 = !DILocation(line: 4601, column: 27, scope: !5989)
!5995 = !DILocation(line: 4601, column: 44, scope: !5989)
!5996 = !DILocation(line: 4601, column: 13, scope: !5989)
!5997 = !DILocation(line: 4600, column: 5, scope: !5989)
!5998 = !DILocation(line: 4603, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4603, column: 7)
!6000 = !DILocation(line: 4603, column: 7, scope: !5980)
!6001 = !DILocation(line: 4604, column: 21, scope: !5999)
!6002 = !DILocation(line: 4604, column: 28, scope: !5999)
!6003 = !DILocation(line: 4604, column: 49, scope: !5999)
!6004 = !DILocation(line: 4605, column: 15, scope: !5999)
!6005 = !DILocation(line: 4605, column: 18, scope: !5999)
!6006 = !DILocation(line: 4605, column: 13, scope: !5999)
!6007 = !DILocation(line: 4606, column: 31, scope: !5999)
!6008 = !DILocation(line: 4606, column: 53, scope: !5999)
!6009 = !DILocation(line: 4606, column: 58, scope: !5999)
!6010 = !DILocation(line: 4607, column: 46, scope: !5999)
!6011 = !DILocation(line: 4606, column: 15, scope: !5999)
!6012 = !DILocation(line: 4604, column: 5, scope: !5999)
!6013 = !DILocation(line: 4609, column: 7, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4609, column: 7)
!6015 = !DILocation(line: 4609, column: 7, scope: !5980)
!6016 = !DILocation(line: 4610, column: 21, scope: !6014)
!6017 = !DILocation(line: 4610, column: 28, scope: !6014)
!6018 = !DILocation(line: 4610, column: 49, scope: !6014)
!6019 = !DILocation(line: 4610, column: 65, scope: !6014)
!6020 = !DILocation(line: 4610, column: 68, scope: !6014)
!6021 = !DILocation(line: 4610, column: 5, scope: !6014)
!6022 = !DILocalVariable(name: "width", scope: !5980, file: !3, line: 4612, type: !149)
!6023 = !DILocation(line: 4612, column: 10, scope: !5980)
!6024 = !DILocation(line: 4612, column: 43, scope: !5980)
!6025 = !DILocation(line: 4612, column: 59, scope: !5980)
!6026 = !DILocation(line: 4612, column: 18, scope: !5980)
!6027 = !DILocation(line: 4614, column: 7, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4614, column: 7)
!6029 = !DILocation(line: 4614, column: 23, scope: !6028)
!6030 = !DILocation(line: 4614, column: 7, scope: !5980)
!6031 = !DILocation(line: 4615, column: 36, scope: !6028)
!6032 = !DILocation(line: 4615, column: 39, scope: !6028)
!6033 = !DILocation(line: 4615, column: 48, scope: !6028)
!6034 = !DILocation(line: 4615, column: 51, scope: !6028)
!6035 = !DILocation(line: 4615, column: 56, scope: !6028)
!6036 = !DILocation(line: 4615, column: 65, scope: !6028)
!6037 = !DILocation(line: 4615, column: 68, scope: !6028)
!6038 = !DILocation(line: 4615, column: 14, scope: !6028)
!6039 = !DILocation(line: 4615, column: 11, scope: !6028)
!6040 = !DILocation(line: 4615, column: 5, scope: !6028)
!6041 = !DILocation(line: 4617, column: 10, scope: !5980)
!6042 = !DILocation(line: 4617, column: 3, scope: !5980)
!6043 = distinct !DISubprogram(name: "print_with_separator", scope: !3, file: !3, line: 4923, type: !749, scopeLine: 4924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6044 = !DILocalVariable(name: "sep", arg: 1, scope: !6043, file: !3, line: 4923, type: !144)
!6045 = !DILocation(line: 4923, column: 28, scope: !6043)
!6046 = !DILocalVariable(name: "filesno", scope: !6043, file: !3, line: 4925, type: !149)
!6047 = !DILocation(line: 4925, column: 10, scope: !6043)
!6048 = !DILocalVariable(name: "pos", scope: !6043, file: !3, line: 4926, type: !149)
!6049 = !DILocation(line: 4926, column: 10, scope: !6043)
!6050 = !DILocation(line: 4928, column: 16, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 4928, column: 3)
!6052 = !DILocation(line: 4928, column: 8, scope: !6051)
!6053 = !DILocation(line: 4928, column: 21, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4928, column: 3)
!6055 = !DILocation(line: 4928, column: 31, scope: !6054)
!6056 = !DILocation(line: 4928, column: 29, scope: !6054)
!6057 = !DILocation(line: 4928, column: 3, scope: !6051)
!6058 = !DILocalVariable(name: "f", scope: !6059, file: !3, line: 4930, type: !183)
!6059 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 4929, column: 5)
!6060 = !DILocation(line: 4930, column: 30, scope: !6059)
!6061 = !DILocation(line: 4930, column: 34, scope: !6059)
!6062 = !DILocation(line: 4930, column: 46, scope: !6059)
!6063 = !DILocalVariable(name: "len", scope: !6059, file: !3, line: 4931, type: !149)
!6064 = !DILocation(line: 4931, column: 14, scope: !6059)
!6065 = !DILocation(line: 4931, column: 20, scope: !6059)
!6066 = !DILocation(line: 4931, column: 66, scope: !6059)
!6067 = !DILocation(line: 4931, column: 34, scope: !6059)
!6068 = !DILocation(line: 4933, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 4933, column: 11)
!6070 = !DILocation(line: 4933, column: 19, scope: !6069)
!6071 = !DILocation(line: 4933, column: 11, scope: !6059)
!6072 = !DILocalVariable(name: "separator", scope: !6073, file: !3, line: 4935, type: !144)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 4934, column: 9)
!6074 = !DILocation(line: 4935, column: 16, scope: !6073)
!6075 = !DILocation(line: 4937, column: 17, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 4937, column: 15)
!6077 = !DILocation(line: 4938, column: 15, scope: !6076)
!6078 = !DILocation(line: 4938, column: 20, scope: !6076)
!6079 = !DILocation(line: 4938, column: 26, scope: !6076)
!6080 = !DILocation(line: 4938, column: 24, scope: !6076)
!6081 = !DILocation(line: 4938, column: 30, scope: !6076)
!6082 = !DILocation(line: 4938, column: 36, scope: !6076)
!6083 = !DILocation(line: 4938, column: 34, scope: !6076)
!6084 = !DILocation(line: 4939, column: 19, scope: !6076)
!6085 = !DILocation(line: 4939, column: 23, scope: !6076)
!6086 = !DILocation(line: 4939, column: 41, scope: !6076)
!6087 = !DILocation(line: 4939, column: 39, scope: !6076)
!6088 = !DILocation(line: 4939, column: 45, scope: !6076)
!6089 = !DILocation(line: 4939, column: 27, scope: !6076)
!6090 = !DILocation(line: 4937, column: 15, scope: !6073)
!6091 = !DILocation(line: 4941, column: 19, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4940, column: 13)
!6093 = !DILocation(line: 4942, column: 25, scope: !6092)
!6094 = !DILocation(line: 4943, column: 13, scope: !6092)
!6095 = !DILocation(line: 4946, column: 19, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4945, column: 13)
!6097 = !DILocation(line: 4947, column: 25, scope: !6096)
!6098 = !DILocation(line: 4950, column: 11, scope: !6073)
!6099 = !DILocation(line: 4951, column: 11, scope: !6073)
!6100 = !DILocation(line: 4952, column: 9, scope: !6073)
!6101 = !DILocation(line: 4954, column: 35, scope: !6059)
!6102 = !DILocation(line: 4954, column: 38, scope: !6059)
!6103 = !DILocation(line: 4954, column: 7, scope: !6059)
!6104 = !DILocation(line: 4955, column: 14, scope: !6059)
!6105 = !DILocation(line: 4955, column: 11, scope: !6059)
!6106 = !DILocation(line: 4956, column: 5, scope: !6059)
!6107 = !DILocation(line: 4928, column: 50, scope: !6054)
!6108 = !DILocation(line: 4928, column: 3, scope: !6054)
!6109 = distinct !{!6109, !6057, !6110}
!6110 = !DILocation(line: 4956, column: 5, scope: !6051)
!6111 = !DILocation(line: 4957, column: 3, scope: !6043)
!6112 = !DILocation(line: 4958, column: 1, scope: !6043)
!6113 = distinct !DISubprogram(name: "print_many_per_line", scope: !3, file: !3, line: 4846, type: !341, scopeLine: 4847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6114 = !DILocalVariable(name: "row", scope: !6113, file: !3, line: 4848, type: !149)
!6115 = !DILocation(line: 4848, column: 10, scope: !6113)
!6116 = !DILocalVariable(name: "cols", scope: !6113, file: !3, line: 4849, type: !149)
!6117 = !DILocation(line: 4849, column: 10, scope: !6113)
!6118 = !DILocation(line: 4849, column: 17, scope: !6113)
!6119 = !DILocalVariable(name: "line_fmt", scope: !6113, file: !3, line: 4850, type: !755)
!6120 = !DILocation(line: 4850, column: 29, scope: !6113)
!6121 = !DILocation(line: 4850, column: 41, scope: !6113)
!6122 = !DILocation(line: 4850, column: 53, scope: !6113)
!6123 = !DILocation(line: 4850, column: 58, scope: !6113)
!6124 = !DILocalVariable(name: "rows", scope: !6113, file: !3, line: 4854, type: !149)
!6125 = !DILocation(line: 4854, column: 10, scope: !6113)
!6126 = !DILocation(line: 4854, column: 17, scope: !6113)
!6127 = !DILocation(line: 4854, column: 30, scope: !6113)
!6128 = !DILocation(line: 4854, column: 28, scope: !6113)
!6129 = !DILocation(line: 4854, column: 38, scope: !6113)
!6130 = !DILocation(line: 4854, column: 51, scope: !6113)
!6131 = !DILocation(line: 4854, column: 49, scope: !6113)
!6132 = !DILocation(line: 4854, column: 56, scope: !6113)
!6133 = !DILocation(line: 4854, column: 37, scope: !6113)
!6134 = !DILocation(line: 4854, column: 35, scope: !6113)
!6135 = !DILocation(line: 4856, column: 12, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 4856, column: 3)
!6137 = !DILocation(line: 4856, column: 8, scope: !6136)
!6138 = !DILocation(line: 4856, column: 17, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 4856, column: 3)
!6140 = !DILocation(line: 4856, column: 23, scope: !6139)
!6141 = !DILocation(line: 4856, column: 21, scope: !6139)
!6142 = !DILocation(line: 4856, column: 3, scope: !6136)
!6143 = !DILocalVariable(name: "col", scope: !6144, file: !3, line: 4858, type: !149)
!6144 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4857, column: 5)
!6145 = !DILocation(line: 4858, column: 14, scope: !6144)
!6146 = !DILocalVariable(name: "filesno", scope: !6144, file: !3, line: 4859, type: !149)
!6147 = !DILocation(line: 4859, column: 14, scope: !6144)
!6148 = !DILocation(line: 4859, column: 24, scope: !6144)
!6149 = !DILocalVariable(name: "pos", scope: !6144, file: !3, line: 4860, type: !149)
!6150 = !DILocation(line: 4860, column: 14, scope: !6144)
!6151 = !DILocation(line: 4863, column: 7, scope: !6144)
!6152 = !DILocalVariable(name: "f", scope: !6153, file: !3, line: 4865, type: !183)
!6153 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 4864, column: 9)
!6154 = !DILocation(line: 4865, column: 34, scope: !6153)
!6155 = !DILocation(line: 4865, column: 38, scope: !6153)
!6156 = !DILocation(line: 4865, column: 50, scope: !6153)
!6157 = !DILocalVariable(name: "name_length", scope: !6153, file: !3, line: 4866, type: !149)
!6158 = !DILocation(line: 4866, column: 18, scope: !6153)
!6159 = !DILocation(line: 4866, column: 64, scope: !6153)
!6160 = !DILocation(line: 4866, column: 32, scope: !6153)
!6161 = !DILocalVariable(name: "max_name_length", scope: !6153, file: !3, line: 4867, type: !149)
!6162 = !DILocation(line: 4867, column: 18, scope: !6153)
!6163 = !DILocation(line: 4867, column: 36, scope: !6153)
!6164 = !DILocation(line: 4867, column: 46, scope: !6153)
!6165 = !{!6166, !2443, i64 16}
!6166 = !{!"column_info", !2462, i64 0, !2467, i64 8, !2443, i64 16}
!6167 = !DILocation(line: 4867, column: 57, scope: !6153)
!6168 = !DILocation(line: 4868, column: 39, scope: !6153)
!6169 = !DILocation(line: 4868, column: 42, scope: !6153)
!6170 = !DILocation(line: 4868, column: 11, scope: !6153)
!6171 = !DILocation(line: 4870, column: 22, scope: !6153)
!6172 = !DILocation(line: 4870, column: 19, scope: !6153)
!6173 = !DILocation(line: 4871, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 4871, column: 15)
!6175 = !DILocation(line: 4871, column: 26, scope: !6174)
!6176 = !DILocation(line: 4871, column: 23, scope: !6174)
!6177 = !DILocation(line: 4871, column: 15, scope: !6153)
!6178 = !DILocation(line: 4872, column: 13, scope: !6174)
!6179 = !DILocation(line: 4874, column: 19, scope: !6153)
!6180 = !DILocation(line: 4874, column: 25, scope: !6153)
!6181 = !DILocation(line: 4874, column: 23, scope: !6153)
!6182 = !DILocation(line: 4874, column: 38, scope: !6153)
!6183 = !DILocation(line: 4874, column: 44, scope: !6153)
!6184 = !DILocation(line: 4874, column: 42, scope: !6153)
!6185 = !DILocation(line: 4874, column: 11, scope: !6153)
!6186 = !DILocation(line: 4875, column: 18, scope: !6153)
!6187 = !DILocation(line: 4875, column: 15, scope: !6153)
!6188 = distinct !{!6188, !6151, !6189}
!6189 = !DILocation(line: 4876, column: 9, scope: !6144)
!6190 = !DILocation(line: 4877, column: 7, scope: !6144)
!6191 = !DILocation(line: 4878, column: 5, scope: !6144)
!6192 = !DILocation(line: 4856, column: 32, scope: !6139)
!6193 = !DILocation(line: 4856, column: 3, scope: !6139)
!6194 = distinct !{!6194, !6142, !6195}
!6195 = !DILocation(line: 4878, column: 5, scope: !6136)
!6196 = !DILocation(line: 4879, column: 1, scope: !6113)
!6197 = distinct !DISubprogram(name: "print_horizontal", scope: !3, file: !3, line: 4882, type: !341, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6198 = !DILocalVariable(name: "filesno", scope: !6197, file: !3, line: 4884, type: !149)
!6199 = !DILocation(line: 4884, column: 10, scope: !6197)
!6200 = !DILocalVariable(name: "pos", scope: !6197, file: !3, line: 4885, type: !149)
!6201 = !DILocation(line: 4885, column: 10, scope: !6197)
!6202 = !DILocalVariable(name: "cols", scope: !6197, file: !3, line: 4886, type: !149)
!6203 = !DILocation(line: 4886, column: 10, scope: !6197)
!6204 = !DILocation(line: 4886, column: 17, scope: !6197)
!6205 = !DILocalVariable(name: "line_fmt", scope: !6197, file: !3, line: 4887, type: !755)
!6206 = !DILocation(line: 4887, column: 29, scope: !6197)
!6207 = !DILocation(line: 4887, column: 41, scope: !6197)
!6208 = !DILocation(line: 4887, column: 53, scope: !6197)
!6209 = !DILocation(line: 4887, column: 58, scope: !6197)
!6210 = !DILocalVariable(name: "f", scope: !6197, file: !3, line: 4888, type: !183)
!6211 = !DILocation(line: 4888, column: 26, scope: !6197)
!6212 = !DILocation(line: 4888, column: 30, scope: !6197)
!6213 = !DILocalVariable(name: "name_length", scope: !6197, file: !3, line: 4889, type: !149)
!6214 = !DILocation(line: 4889, column: 10, scope: !6197)
!6215 = !DILocation(line: 4889, column: 56, scope: !6197)
!6216 = !DILocation(line: 4889, column: 24, scope: !6197)
!6217 = !DILocalVariable(name: "max_name_length", scope: !6197, file: !3, line: 4890, type: !149)
!6218 = !DILocation(line: 4890, column: 10, scope: !6197)
!6219 = !DILocation(line: 4890, column: 28, scope: !6197)
!6220 = !DILocation(line: 4890, column: 38, scope: !6197)
!6221 = !DILocation(line: 4893, column: 31, scope: !6197)
!6222 = !DILocation(line: 4893, column: 3, scope: !6197)
!6223 = !DILocation(line: 4896, column: 16, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 4896, column: 3)
!6225 = !DILocation(line: 4896, column: 8, scope: !6224)
!6226 = !DILocation(line: 4896, column: 21, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 4896, column: 3)
!6228 = !DILocation(line: 4896, column: 31, scope: !6227)
!6229 = !DILocation(line: 4896, column: 29, scope: !6227)
!6230 = !DILocation(line: 4896, column: 3, scope: !6224)
!6231 = !DILocalVariable(name: "col", scope: !6232, file: !3, line: 4898, type: !149)
!6232 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 4897, column: 5)
!6233 = !DILocation(line: 4898, column: 14, scope: !6232)
!6234 = !DILocation(line: 4898, column: 20, scope: !6232)
!6235 = !DILocation(line: 4898, column: 30, scope: !6232)
!6236 = !DILocation(line: 4898, column: 28, scope: !6232)
!6237 = !DILocation(line: 4900, column: 11, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 4900, column: 11)
!6239 = !DILocation(line: 4900, column: 15, scope: !6238)
!6240 = !DILocation(line: 4900, column: 11, scope: !6232)
!6241 = !DILocation(line: 4902, column: 11, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 4901, column: 9)
!6243 = !DILocation(line: 4903, column: 15, scope: !6242)
!6244 = !DILocation(line: 4904, column: 9, scope: !6242)
!6245 = !DILocation(line: 4907, column: 19, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 4906, column: 9)
!6247 = !DILocation(line: 4907, column: 25, scope: !6246)
!6248 = !DILocation(line: 4907, column: 23, scope: !6246)
!6249 = !DILocation(line: 4907, column: 38, scope: !6246)
!6250 = !DILocation(line: 4907, column: 44, scope: !6246)
!6251 = !DILocation(line: 4907, column: 42, scope: !6246)
!6252 = !DILocation(line: 4907, column: 11, scope: !6246)
!6253 = !DILocation(line: 4908, column: 18, scope: !6246)
!6254 = !DILocation(line: 4908, column: 15, scope: !6246)
!6255 = !DILocation(line: 4911, column: 11, scope: !6232)
!6256 = !DILocation(line: 4911, column: 23, scope: !6232)
!6257 = !DILocation(line: 4911, column: 9, scope: !6232)
!6258 = !DILocation(line: 4912, column: 35, scope: !6232)
!6259 = !DILocation(line: 4912, column: 38, scope: !6232)
!6260 = !DILocation(line: 4912, column: 7, scope: !6232)
!6261 = !DILocation(line: 4914, column: 53, scope: !6232)
!6262 = !DILocation(line: 4914, column: 21, scope: !6232)
!6263 = !DILocation(line: 4914, column: 19, scope: !6232)
!6264 = !DILocation(line: 4915, column: 25, scope: !6232)
!6265 = !DILocation(line: 4915, column: 35, scope: !6232)
!6266 = !DILocation(line: 4915, column: 43, scope: !6232)
!6267 = !DILocation(line: 4915, column: 23, scope: !6232)
!6268 = !DILocation(line: 4916, column: 5, scope: !6232)
!6269 = !DILocation(line: 4896, column: 43, scope: !6227)
!6270 = !DILocation(line: 4896, column: 3, scope: !6227)
!6271 = distinct !{!6271, !6230, !6272}
!6272 = !DILocation(line: 4916, column: 5, scope: !6224)
!6273 = !DILocation(line: 4917, column: 3, scope: !6197)
!6274 = !DILocation(line: 4918, column: 1, scope: !6197)
!6275 = distinct !DISubprogram(name: "set_normal_color", scope: !3, file: !3, line: 1273, type: !341, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6276 = !DILocation(line: 1275, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1275, column: 7)
!6278 = !DILocation(line: 1275, column: 24, scope: !6277)
!6279 = !DILocation(line: 1275, column: 27, scope: !6277)
!6280 = !DILocation(line: 1275, column: 7, scope: !6275)
!6281 = !DILocation(line: 1277, column: 7, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1276, column: 5)
!6283 = !DILocation(line: 1278, column: 7, scope: !6282)
!6284 = !DILocation(line: 1279, column: 7, scope: !6282)
!6285 = !DILocation(line: 1280, column: 5, scope: !6282)
!6286 = !DILocation(line: 1281, column: 1, scope: !6275)
!6287 = distinct !DISubprogram(name: "print_long_format", scope: !3, file: !3, line: 4020, type: !767, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6288 = !DILocalVariable(name: "f", arg: 1, scope: !6287, file: !3, line: 4020, type: !183)
!6289 = !DILocation(line: 4020, column: 43, scope: !6287)
!6290 = !DILocalVariable(name: "modebuf", scope: !6287, file: !3, line: 4022, type: !769)
!6291 = !DILocation(line: 4022, column: 8, scope: !6287)
!6292 = !DILocalVariable(name: "buf", scope: !6287, file: !3, line: 4023, type: !770)
!6293 = !DILocation(line: 4023, column: 8, scope: !6287)
!6294 = !DILocalVariable(name: "s", scope: !6287, file: !3, line: 4032, type: !149)
!6295 = !DILocation(line: 4032, column: 10, scope: !6287)
!6296 = !DILocalVariable(name: "p", scope: !6287, file: !3, line: 4033, type: !143)
!6297 = !DILocation(line: 4033, column: 9, scope: !6287)
!6298 = !DILocalVariable(name: "when_timespec", scope: !6287, file: !3, line: 4034, type: !214)
!6299 = !DILocation(line: 4034, column: 19, scope: !6287)
!6300 = !DILocalVariable(name: "when_local", scope: !6287, file: !3, line: 4035, type: !786)
!6301 = !DILocation(line: 4035, column: 13, scope: !6287)
!6302 = !DILocation(line: 4039, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4039, column: 7)
!6304 = !DILocation(line: 4039, column: 10, scope: !6303)
!6305 = !DILocation(line: 4039, column: 7, scope: !6287)
!6306 = !DILocation(line: 4040, column: 22, scope: !6303)
!6307 = !DILocation(line: 4040, column: 25, scope: !6303)
!6308 = !DILocation(line: 4040, column: 31, scope: !6303)
!6309 = !DILocation(line: 4040, column: 5, scope: !6303)
!6310 = !DILocation(line: 4043, column: 36, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 4042, column: 5)
!6312 = !DILocation(line: 4043, column: 39, scope: !6311)
!6313 = !DILocation(line: 4043, column: 20, scope: !6311)
!6314 = !DILocation(line: 4043, column: 7, scope: !6311)
!6315 = !DILocation(line: 4043, column: 18, scope: !6311)
!6316 = !DILocation(line: 4044, column: 15, scope: !6311)
!6317 = !DILocation(line: 4044, column: 23, scope: !6311)
!6318 = !DILocation(line: 4044, column: 7, scope: !6311)
!6319 = !DILocation(line: 4045, column: 7, scope: !6311)
!6320 = !DILocation(line: 4045, column: 19, scope: !6311)
!6321 = !DILocation(line: 4047, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4047, column: 7)
!6323 = !DILocation(line: 4047, column: 7, scope: !6287)
!6324 = !DILocation(line: 4048, column: 5, scope: !6322)
!6325 = !DILocation(line: 4048, column: 17, scope: !6322)
!6326 = !DILocation(line: 4049, column: 12, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 4049, column: 12)
!6328 = !DILocation(line: 4049, column: 15, scope: !6327)
!6329 = !DILocation(line: 4049, column: 24, scope: !6327)
!6330 = !DILocation(line: 4049, column: 12, scope: !6322)
!6331 = !DILocation(line: 4050, column: 5, scope: !6327)
!6332 = !DILocation(line: 4050, column: 17, scope: !6327)
!6333 = !DILocation(line: 4051, column: 12, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 4051, column: 12)
!6335 = !DILocation(line: 4051, column: 15, scope: !6334)
!6336 = !DILocation(line: 4051, column: 24, scope: !6334)
!6337 = !DILocation(line: 4051, column: 12, scope: !6327)
!6338 = !DILocation(line: 4052, column: 5, scope: !6334)
!6339 = !DILocation(line: 4052, column: 17, scope: !6334)
!6340 = !DILocation(line: 4054, column: 11, scope: !6287)
!6341 = !DILocation(line: 4054, column: 3, scope: !6287)
!6342 = !DILocation(line: 4057, column: 40, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4055, column: 5)
!6344 = !DILocation(line: 4057, column: 43, scope: !6343)
!6345 = !DILocation(line: 4057, column: 23, scope: !6343)
!6346 = !DILocation(line: 4058, column: 7, scope: !6343)
!6347 = !DILocation(line: 4060, column: 40, scope: !6343)
!6348 = !DILocation(line: 4060, column: 43, scope: !6343)
!6349 = !DILocation(line: 4060, column: 23, scope: !6343)
!6350 = !DILocation(line: 4061, column: 7, scope: !6343)
!6351 = !DILocation(line: 4063, column: 40, scope: !6343)
!6352 = !DILocation(line: 4063, column: 43, scope: !6343)
!6353 = !DILocation(line: 4063, column: 23, scope: !6343)
!6354 = !DILocation(line: 4064, column: 7, scope: !6343)
!6355 = !DILocation(line: 4066, column: 7, scope: !6343)
!6356 = !DILocation(line: 4069, column: 7, scope: !6287)
!6357 = !DILocation(line: 4069, column: 5, scope: !6287)
!6358 = !DILocation(line: 4071, column: 7, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4071, column: 7)
!6360 = !DILocation(line: 4071, column: 7, scope: !6287)
!6361 = !DILocalVariable(name: "hbuf", scope: !6362, file: !3, line: 4073, type: !669)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 4072, column: 5)
!6363 = !DILocation(line: 4073, column: 12, scope: !6362)
!6364 = !DILocation(line: 4074, column: 16, scope: !6362)
!6365 = !DILocation(line: 4074, column: 27, scope: !6362)
!6366 = !DILocation(line: 4075, column: 30, scope: !6362)
!6367 = !DILocation(line: 4075, column: 49, scope: !6362)
!6368 = !DILocation(line: 4075, column: 16, scope: !6362)
!6369 = !DILocation(line: 4074, column: 7, scope: !6362)
!6370 = !DILocation(line: 4078, column: 20, scope: !6362)
!6371 = !DILocation(line: 4078, column: 12, scope: !6362)
!6372 = !DILocation(line: 4078, column: 9, scope: !6362)
!6373 = !DILocation(line: 4079, column: 5, scope: !6362)
!6374 = !DILocation(line: 4081, column: 7, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4081, column: 7)
!6376 = !DILocation(line: 4081, column: 7, scope: !6287)
!6377 = !DILocalVariable(name: "hbuf", scope: !6378, file: !3, line: 4083, type: !622)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 4082, column: 5)
!6379 = !DILocation(line: 4083, column: 12, scope: !6378)
!6380 = !DILocalVariable(name: "blocks", scope: !6378, file: !3, line: 4084, type: !146)
!6381 = !DILocation(line: 4084, column: 19, scope: !6378)
!6382 = !DILocation(line: 4085, column: 12, scope: !6378)
!6383 = !DILocation(line: 4085, column: 15, scope: !6378)
!6384 = !DILocation(line: 4085, column: 10, scope: !6378)
!6385 = !DILocation(line: 4087, column: 28, scope: !6378)
!6386 = !DILocation(line: 4087, column: 50, scope: !6378)
!6387 = !DILocation(line: 4087, column: 56, scope: !6378)
!6388 = !DILocation(line: 4088, column: 43, scope: !6378)
!6389 = !DILocation(line: 4087, column: 12, scope: !6378)
!6390 = !DILocalVariable(name: "pad", scope: !6378, file: !3, line: 4089, type: !27)
!6391 = !DILocation(line: 4089, column: 11, scope: !6378)
!6392 = !DILocation(line: 4090, column: 18, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 4090, column: 7)
!6394 = !DILocation(line: 4090, column: 47, scope: !6393)
!6395 = !DILocation(line: 4090, column: 37, scope: !6393)
!6396 = !DILocation(line: 4090, column: 35, scope: !6393)
!6397 = !DILocation(line: 4090, column: 16, scope: !6393)
!6398 = !DILocation(line: 4090, column: 12, scope: !6393)
!6399 = !DILocation(line: 4090, column: 63, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 4090, column: 7)
!6401 = !DILocation(line: 4090, column: 61, scope: !6400)
!6402 = !DILocation(line: 4090, column: 7, scope: !6393)
!6403 = !DILocation(line: 4091, column: 11, scope: !6400)
!6404 = !DILocation(line: 4091, column: 14, scope: !6400)
!6405 = !DILocation(line: 4091, column: 9, scope: !6400)
!6406 = !DILocation(line: 4090, column: 71, scope: !6400)
!6407 = !DILocation(line: 4090, column: 7, scope: !6400)
!6408 = distinct !{!6408, !6402, !6409}
!6409 = !DILocation(line: 4091, column: 16, scope: !6393)
!6410 = !DILocation(line: 4092, column: 7, scope: !6378)
!6411 = !DILocation(line: 4092, column: 29, scope: !6378)
!6412 = !DILocation(line: 4092, column: 22, scope: !6378)
!6413 = !DILocation(line: 4092, column: 17, scope: !6378)
!6414 = !DILocation(line: 4092, column: 20, scope: !6378)
!6415 = !DILocation(line: 4093, column: 9, scope: !6378)
!6416 = distinct !{!6416, !6410, !6415}
!6417 = !DILocation(line: 4094, column: 7, scope: !6378)
!6418 = !DILocation(line: 4094, column: 13, scope: !6378)
!6419 = !DILocation(line: 4095, column: 5, scope: !6378)
!6420 = !DILocalVariable(name: "hbuf", scope: !6421, file: !3, line: 4100, type: !669)
!6421 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4099, column: 3)
!6422 = !DILocation(line: 4100, column: 10, scope: !6421)
!6423 = !DILocation(line: 4101, column: 14, scope: !6421)
!6424 = !DILocation(line: 4101, column: 28, scope: !6421)
!6425 = !DILocation(line: 4101, column: 37, scope: !6421)
!6426 = !DILocation(line: 4102, column: 16, scope: !6421)
!6427 = !DILocation(line: 4102, column: 19, scope: !6421)
!6428 = !DILocation(line: 4102, column: 14, scope: !6421)
!6429 = !DILocation(line: 4102, column: 46, scope: !6421)
!6430 = !DILocation(line: 4102, column: 49, scope: !6421)
!6431 = !DILocation(line: 4102, column: 54, scope: !6421)
!6432 = !DILocation(line: 4102, column: 64, scope: !6421)
!6433 = !DILocation(line: 4102, column: 35, scope: !6421)
!6434 = !DILocation(line: 4101, column: 5, scope: !6421)
!6435 = !DILocation(line: 4107, column: 16, scope: !6287)
!6436 = !DILocation(line: 4107, column: 8, scope: !6287)
!6437 = !DILocation(line: 4107, column: 5, scope: !6287)
!6438 = !DILocation(line: 4109, column: 3, scope: !6287)
!6439 = !DILocation(line: 4109, column: 3, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 4109, column: 3)
!6441 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4109, column: 3)
!6442 = !DILocation(line: 4109, column: 3, scope: !6441)
!6443 = !DILocation(line: 4109, column: 3, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 4109, column: 3)
!6445 = !DILocation(line: 4111, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4111, column: 7)
!6447 = !DILocation(line: 4111, column: 19, scope: !6446)
!6448 = !DILocation(line: 4111, column: 22, scope: !6446)
!6449 = !DILocation(line: 4111, column: 34, scope: !6446)
!6450 = !DILocation(line: 4111, column: 37, scope: !6446)
!6451 = !DILocation(line: 4111, column: 50, scope: !6446)
!6452 = !DILocation(line: 4111, column: 53, scope: !6446)
!6453 = !DILocation(line: 4111, column: 7, scope: !6287)
!6454 = !DILocation(line: 4113, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 4112, column: 5)
!6456 = !DILocation(line: 4113, column: 7, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4113, column: 7)
!6458 = !DILocation(line: 4115, column: 11, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4115, column: 11)
!6460 = !DILocation(line: 4115, column: 11, scope: !6455)
!6461 = !DILocation(line: 4116, column: 22, scope: !6459)
!6462 = !DILocation(line: 4116, column: 25, scope: !6459)
!6463 = !DILocation(line: 4116, column: 30, scope: !6459)
!6464 = !DILocation(line: 4116, column: 38, scope: !6459)
!6465 = !DILocation(line: 4116, column: 51, scope: !6459)
!6466 = !DILocation(line: 4116, column: 54, scope: !6459)
!6467 = !DILocation(line: 4116, column: 9, scope: !6459)
!6468 = !DILocation(line: 4118, column: 11, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4118, column: 11)
!6470 = !DILocation(line: 4118, column: 11, scope: !6455)
!6471 = !DILocation(line: 4119, column: 23, scope: !6469)
!6472 = !DILocation(line: 4119, column: 26, scope: !6469)
!6473 = !DILocation(line: 4119, column: 31, scope: !6469)
!6474 = !DILocation(line: 4119, column: 39, scope: !6469)
!6475 = !DILocation(line: 4119, column: 52, scope: !6469)
!6476 = !DILocation(line: 4119, column: 55, scope: !6469)
!6477 = !DILocation(line: 4119, column: 9, scope: !6469)
!6478 = !DILocation(line: 4121, column: 11, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4121, column: 11)
!6480 = !DILocation(line: 4121, column: 11, scope: !6455)
!6481 = !DILocation(line: 4122, column: 22, scope: !6479)
!6482 = !DILocation(line: 4122, column: 25, scope: !6479)
!6483 = !DILocation(line: 4122, column: 30, scope: !6479)
!6484 = !DILocation(line: 4122, column: 41, scope: !6479)
!6485 = !DILocation(line: 4122, column: 55, scope: !6479)
!6486 = !DILocation(line: 4122, column: 58, scope: !6479)
!6487 = !DILocation(line: 4122, column: 9, scope: !6479)
!6488 = !DILocation(line: 4124, column: 11, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4124, column: 11)
!6490 = !DILocation(line: 4124, column: 11, scope: !6455)
!6491 = !DILocation(line: 4125, column: 31, scope: !6489)
!6492 = !DILocation(line: 4125, column: 34, scope: !6489)
!6493 = !DILocation(line: 4125, column: 47, scope: !6489)
!6494 = !DILocation(line: 4125, column: 9, scope: !6489)
!6495 = !DILocation(line: 4127, column: 11, scope: !6455)
!6496 = !DILocation(line: 4127, column: 9, scope: !6455)
!6497 = !DILocation(line: 4128, column: 5, scope: !6455)
!6498 = !DILocation(line: 4130, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4130, column: 7)
!6500 = !DILocation(line: 4130, column: 10, scope: !6499)
!6501 = !DILocation(line: 4131, column: 7, scope: !6499)
!6502 = !DILocation(line: 4131, column: 11, scope: !6499)
!6503 = !DILocation(line: 4131, column: 37, scope: !6499)
!6504 = !DILocation(line: 4131, column: 40, scope: !6499)
!6505 = !DILocation(line: 4130, column: 7, scope: !6287)
!6506 = !DILocalVariable(name: "majorbuf", scope: !6507, file: !3, line: 4133, type: !669)
!6507 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4132, column: 5)
!6508 = !DILocation(line: 4133, column: 12, scope: !6507)
!6509 = !DILocalVariable(name: "minorbuf", scope: !6507, file: !3, line: 4134, type: !669)
!6510 = !DILocation(line: 4134, column: 12, scope: !6507)
!6511 = !DILocalVariable(name: "blanks_width", scope: !6507, file: !3, line: 4135, type: !27)
!6512 = !DILocation(line: 4135, column: 11, scope: !6507)
!6513 = !DILocation(line: 4135, column: 27, scope: !6507)
!6514 = !DILocation(line: 4136, column: 30, scope: !6507)
!6515 = !DILocation(line: 4136, column: 56, scope: !6507)
!6516 = !DILocation(line: 4137, column: 32, scope: !6507)
!6517 = !DILocation(line: 4137, column: 30, scope: !6507)
!6518 = !DILocation(line: 4136, column: 27, scope: !6507)
!6519 = !DILocation(line: 4138, column: 16, scope: !6507)
!6520 = !DILocation(line: 4139, column: 16, scope: !6507)
!6521 = !DILocation(line: 4139, column: 44, scope: !6507)
!6522 = !DILocation(line: 4139, column: 42, scope: !6507)
!6523 = !DILocation(line: 4140, column: 27, scope: !6507)
!6524 = !DILocation(line: 4140, column: 52, scope: !6507)
!6525 = !DILocation(line: 4140, column: 16, scope: !6507)
!6526 = !DILocation(line: 4141, column: 16, scope: !6507)
!6527 = !DILocation(line: 4142, column: 27, scope: !6507)
!6528 = !DILocation(line: 4142, column: 52, scope: !6507)
!6529 = !DILocation(line: 4142, column: 16, scope: !6507)
!6530 = !DILocation(line: 4138, column: 7, scope: !6507)
!6531 = !DILocation(line: 4143, column: 12, scope: !6507)
!6532 = !DILocation(line: 4143, column: 28, scope: !6507)
!6533 = !DILocation(line: 4143, column: 9, scope: !6507)
!6534 = !DILocation(line: 4144, column: 5, scope: !6507)
!6535 = !DILocalVariable(name: "hbuf", scope: !6536, file: !3, line: 4147, type: !622)
!6536 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4146, column: 5)
!6537 = !DILocation(line: 4147, column: 12, scope: !6536)
!6538 = !DILocalVariable(name: "size", scope: !6536, file: !3, line: 4148, type: !146)
!6539 = !DILocation(line: 4148, column: 19, scope: !6536)
!6540 = !DILocation(line: 4149, column: 12, scope: !6536)
!6541 = !DILocation(line: 4149, column: 15, scope: !6536)
!6542 = !DILocation(line: 4149, column: 10, scope: !6536)
!6543 = !DILocation(line: 4151, column: 48, scope: !6536)
!6544 = !DILocation(line: 4151, column: 51, scope: !6536)
!6545 = !DILocation(line: 4151, column: 56, scope: !6536)
!6546 = !DILocation(line: 4151, column: 28, scope: !6536)
!6547 = !DILocation(line: 4152, column: 28, scope: !6536)
!6548 = !DILocation(line: 4152, column: 34, scope: !6536)
!6549 = !DILocation(line: 4153, column: 28, scope: !6536)
!6550 = !DILocation(line: 4151, column: 12, scope: !6536)
!6551 = !DILocalVariable(name: "pad", scope: !6536, file: !3, line: 4154, type: !27)
!6552 = !DILocation(line: 4154, column: 11, scope: !6536)
!6553 = !DILocation(line: 4155, column: 18, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 4155, column: 7)
!6555 = !DILocation(line: 4155, column: 46, scope: !6554)
!6556 = !DILocation(line: 4155, column: 36, scope: !6554)
!6557 = !DILocation(line: 4155, column: 34, scope: !6554)
!6558 = !DILocation(line: 4155, column: 16, scope: !6554)
!6559 = !DILocation(line: 4155, column: 12, scope: !6554)
!6560 = !DILocation(line: 4155, column: 60, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 4155, column: 7)
!6562 = !DILocation(line: 4155, column: 58, scope: !6561)
!6563 = !DILocation(line: 4155, column: 7, scope: !6554)
!6564 = !DILocation(line: 4156, column: 11, scope: !6561)
!6565 = !DILocation(line: 4156, column: 14, scope: !6561)
!6566 = !DILocation(line: 4156, column: 9, scope: !6561)
!6567 = !DILocation(line: 4155, column: 68, scope: !6561)
!6568 = !DILocation(line: 4155, column: 7, scope: !6561)
!6569 = distinct !{!6569, !6563, !6570}
!6570 = !DILocation(line: 4156, column: 16, scope: !6554)
!6571 = !DILocation(line: 4157, column: 7, scope: !6536)
!6572 = !DILocation(line: 4157, column: 27, scope: !6536)
!6573 = !DILocation(line: 4157, column: 22, scope: !6536)
!6574 = !DILocation(line: 4157, column: 17, scope: !6536)
!6575 = !DILocation(line: 4157, column: 20, scope: !6536)
!6576 = !DILocation(line: 4158, column: 9, scope: !6536)
!6577 = distinct !{!6577, !6571, !6576}
!6578 = !DILocation(line: 4159, column: 7, scope: !6536)
!6579 = !DILocation(line: 4159, column: 13, scope: !6536)
!6580 = !DILocation(line: 4162, column: 5, scope: !6287)
!6581 = !DILocation(line: 4163, column: 4, scope: !6287)
!6582 = !DILocation(line: 4163, column: 6, scope: !6287)
!6583 = !DILocation(line: 4165, column: 7, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4165, column: 7)
!6585 = !DILocation(line: 4165, column: 10, scope: !6584)
!6586 = !DILocation(line: 4165, column: 18, scope: !6584)
!6587 = !DILocation(line: 4165, column: 35, scope: !6584)
!6588 = !DILocation(line: 4165, column: 59, scope: !6584)
!6589 = !DILocation(line: 4165, column: 21, scope: !6584)
!6590 = !DILocation(line: 4165, column: 7, scope: !6287)
!6591 = !DILocalVariable(name: "six_months_ago", scope: !6592, file: !3, line: 4167, type: !214)
!6592 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4166, column: 5)
!6593 = !DILocation(line: 4167, column: 23, scope: !6592)
!6594 = !DILocalVariable(name: "recent", scope: !6592, file: !3, line: 4168, type: !141)
!6595 = !DILocation(line: 4168, column: 12, scope: !6592)
!6596 = !DILocation(line: 4173, column: 11, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 4173, column: 11)
!6598 = !DILocation(line: 4173, column: 54, scope: !6597)
!6599 = !DILocation(line: 4173, column: 11, scope: !6592)
!6600 = !DILocation(line: 4174, column: 9, scope: !6597)
!6601 = !DILocation(line: 4180, column: 44, scope: !6592)
!6602 = !DILocation(line: 4180, column: 51, scope: !6592)
!6603 = !DILocation(line: 4180, column: 22, scope: !6592)
!6604 = !DILocation(line: 4180, column: 29, scope: !6592)
!6605 = !DILocation(line: 4181, column: 45, scope: !6592)
!6606 = !DILocation(line: 4181, column: 22, scope: !6592)
!6607 = !DILocation(line: 4181, column: 30, scope: !6592)
!6608 = !DILocation(line: 4183, column: 17, scope: !6592)
!6609 = !DILocation(line: 4183, column: 62, scope: !6592)
!6610 = !DILocation(line: 4184, column: 17, scope: !6592)
!6611 = !DILocation(line: 4184, column: 21, scope: !6592)
!6612 = !DILocation(line: 4184, column: 64, scope: !6592)
!6613 = !DILocation(line: 0, scope: !6592)
!6614 = !DILocation(line: 4183, column: 14, scope: !6592)
!6615 = !DILocation(line: 4188, column: 28, scope: !6592)
!6616 = !DILocation(line: 4188, column: 59, scope: !6592)
!6617 = !DILocation(line: 4189, column: 41, scope: !6592)
!6618 = !DILocation(line: 4189, column: 64, scope: !6592)
!6619 = !DILocation(line: 4189, column: 50, scope: !6592)
!6620 = !DILocation(line: 4188, column: 11, scope: !6592)
!6621 = !DILocation(line: 4188, column: 9, scope: !6592)
!6622 = !DILocation(line: 4190, column: 5, scope: !6592)
!6623 = !DILocation(line: 4192, column: 7, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4192, column: 7)
!6625 = !DILocation(line: 4192, column: 9, scope: !6624)
!6626 = !DILocation(line: 4192, column: 14, scope: !6624)
!6627 = !DILocation(line: 4192, column: 13, scope: !6624)
!6628 = !DILocation(line: 4192, column: 7, scope: !6287)
!6629 = !DILocation(line: 4194, column: 12, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 4193, column: 5)
!6631 = !DILocation(line: 4194, column: 9, scope: !6630)
!6632 = !DILocation(line: 4195, column: 9, scope: !6630)
!6633 = !DILocation(line: 4195, column: 12, scope: !6630)
!6634 = !DILocation(line: 4198, column: 8, scope: !6630)
!6635 = !DILocation(line: 4198, column: 10, scope: !6630)
!6636 = !DILocation(line: 4199, column: 5, scope: !6630)
!6637 = !DILocalVariable(name: "hbuf", scope: !6638, file: !3, line: 4204, type: !669)
!6638 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 4201, column: 5)
!6639 = !DILocation(line: 4204, column: 12, scope: !6638)
!6640 = !DILocation(line: 4205, column: 16, scope: !6638)
!6641 = !DILocation(line: 4205, column: 27, scope: !6638)
!6642 = !DILocation(line: 4206, column: 19, scope: !6638)
!6643 = !DILocation(line: 4206, column: 22, scope: !6638)
!6644 = !DILocation(line: 4206, column: 17, scope: !6638)
!6645 = !DILocation(line: 4208, column: 44, scope: !6638)
!6646 = !DILocation(line: 4208, column: 52, scope: !6638)
!6647 = !DILocation(line: 4208, column: 19, scope: !6638)
!6648 = !DILocation(line: 4205, column: 7, scope: !6638)
!6649 = !DILocation(line: 4210, column: 20, scope: !6638)
!6650 = !DILocation(line: 4210, column: 12, scope: !6638)
!6651 = !DILocation(line: 4210, column: 9, scope: !6638)
!6652 = !DILocation(line: 4213, column: 3, scope: !6287)
!6653 = !DILocation(line: 4213, column: 3, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4213, column: 3)
!6655 = !DILocalVariable(name: "w", scope: !6287, file: !3, line: 4214, type: !149)
!6656 = !DILocation(line: 4214, column: 10, scope: !6287)
!6657 = !DILocation(line: 4214, column: 39, scope: !6287)
!6658 = !DILocation(line: 4214, column: 65, scope: !6287)
!6659 = !DILocation(line: 4214, column: 69, scope: !6287)
!6660 = !DILocation(line: 4214, column: 67, scope: !6287)
!6661 = !DILocation(line: 4214, column: 14, scope: !6287)
!6662 = !DILocation(line: 4216, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4216, column: 7)
!6664 = !DILocation(line: 4216, column: 10, scope: !6663)
!6665 = !DILocation(line: 4216, column: 19, scope: !6663)
!6666 = !DILocation(line: 4216, column: 7, scope: !6287)
!6667 = !DILocation(line: 4218, column: 11, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 4218, column: 11)
!6669 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4217, column: 5)
!6670 = !DILocation(line: 4218, column: 14, scope: !6668)
!6671 = !DILocation(line: 4218, column: 11, scope: !6669)
!6672 = !DILocation(line: 4220, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 4219, column: 9)
!6674 = !DILocation(line: 4220, column: 11, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 4220, column: 11)
!6676 = !DILocation(line: 4221, column: 36, scope: !6673)
!6677 = !DILocation(line: 4221, column: 52, scope: !6673)
!6678 = !DILocation(line: 4221, column: 56, scope: !6673)
!6679 = !DILocation(line: 4221, column: 54, scope: !6673)
!6680 = !DILocation(line: 4221, column: 63, scope: !6673)
!6681 = !DILocation(line: 4221, column: 61, scope: !6673)
!6682 = !DILocation(line: 4221, column: 65, scope: !6673)
!6683 = !DILocation(line: 4221, column: 11, scope: !6673)
!6684 = !DILocation(line: 4222, column: 15, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 4222, column: 15)
!6686 = !DILocation(line: 4222, column: 31, scope: !6685)
!6687 = !DILocation(line: 4222, column: 15, scope: !6673)
!6688 = !DILocation(line: 4223, column: 41, scope: !6685)
!6689 = !DILocation(line: 4223, column: 44, scope: !6685)
!6690 = !DILocation(line: 4223, column: 13, scope: !6685)
!6691 = !DILocation(line: 4224, column: 9, scope: !6673)
!6692 = !DILocation(line: 4225, column: 5, scope: !6669)
!6693 = !DILocation(line: 4226, column: 12, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4226, column: 12)
!6695 = !DILocation(line: 4226, column: 28, scope: !6694)
!6696 = !DILocation(line: 4226, column: 12, scope: !6663)
!6697 = !DILocation(line: 4227, column: 27, scope: !6694)
!6698 = !DILocation(line: 4227, column: 30, scope: !6694)
!6699 = !DILocation(line: 4227, column: 39, scope: !6694)
!6700 = !DILocation(line: 4227, column: 42, scope: !6694)
!6701 = !DILocation(line: 4227, column: 47, scope: !6694)
!6702 = !DILocation(line: 4227, column: 56, scope: !6694)
!6703 = !DILocation(line: 4227, column: 59, scope: !6694)
!6704 = !DILocation(line: 4227, column: 5, scope: !6694)
!6705 = !DILocation(line: 4228, column: 1, scope: !6287)
!6706 = distinct !DISubprogram(name: "format_inode", scope: !3, file: !3, line: 4010, type: !737, scopeLine: 4011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6707 = !DILocalVariable(name: "buf", arg: 1, scope: !6706, file: !3, line: 4010, type: !143)
!6708 = !DILocation(line: 4010, column: 21, scope: !6706)
!6709 = !DILocalVariable(name: "buflen", arg: 2, scope: !6706, file: !3, line: 4010, type: !149)
!6710 = !DILocation(line: 4010, column: 33, scope: !6706)
!6711 = !DILocalVariable(name: "f", arg: 3, scope: !6706, file: !3, line: 4010, type: !183)
!6712 = !DILocation(line: 4010, column: 64, scope: !6706)
!6713 = !DILocation(line: 4012, column: 3, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 4012, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 4012, column: 3)
!6716 = !DILocation(line: 4012, column: 3, scope: !6715)
!6717 = !DILocation(line: 4013, column: 11, scope: !6706)
!6718 = !DILocation(line: 4013, column: 14, scope: !6706)
!6719 = !DILocation(line: 4013, column: 22, scope: !6706)
!6720 = !DILocation(line: 4013, column: 25, scope: !6706)
!6721 = !DILocation(line: 4013, column: 28, scope: !6706)
!6722 = !DILocation(line: 4013, column: 33, scope: !6706)
!6723 = !DILocation(line: 4013, column: 40, scope: !6706)
!6724 = !DILocation(line: 4014, column: 24, scope: !6706)
!6725 = !DILocation(line: 4014, column: 27, scope: !6706)
!6726 = !DILocation(line: 4014, column: 32, scope: !6706)
!6727 = !DILocation(line: 4014, column: 40, scope: !6706)
!6728 = !DILocation(line: 4014, column: 13, scope: !6706)
!6729 = !DILocation(line: 4013, column: 3, scope: !6706)
!6730 = distinct !DISubprogram(name: "format_user", scope: !3, file: !3, line: 3957, type: !776, scopeLine: 3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6731 = !DILocalVariable(name: "u", arg: 1, scope: !6730, file: !3, line: 3957, type: !692)
!6732 = !DILocation(line: 3957, column: 20, scope: !6730)
!6733 = !DILocalVariable(name: "width", arg: 2, scope: !6730, file: !3, line: 3957, type: !27)
!6734 = !DILocation(line: 3957, column: 27, scope: !6730)
!6735 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6730, file: !3, line: 3957, type: !141)
!6736 = !DILocation(line: 3957, column: 39, scope: !6730)
!6737 = !DILocation(line: 3959, column: 27, scope: !6730)
!6738 = !DILocation(line: 3959, column: 25, scope: !6730)
!6739 = !DILocation(line: 3960, column: 26, scope: !6730)
!6740 = !DILocation(line: 3960, column: 56, scope: !6730)
!6741 = !DILocation(line: 3960, column: 47, scope: !6730)
!6742 = !DILocation(line: 3960, column: 61, scope: !6730)
!6743 = !DILocation(line: 3960, column: 64, scope: !6730)
!6744 = !DILocation(line: 3959, column: 3, scope: !6730)
!6745 = !DILocation(line: 3961, column: 1, scope: !6730)
!6746 = distinct !DISubprogram(name: "format_group", scope: !3, file: !3, line: 3966, type: !778, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6747 = !DILocalVariable(name: "g", arg: 1, scope: !6746, file: !3, line: 3966, type: !697)
!6748 = !DILocation(line: 3966, column: 21, scope: !6746)
!6749 = !DILocalVariable(name: "width", arg: 2, scope: !6746, file: !3, line: 3966, type: !27)
!6750 = !DILocation(line: 3966, column: 28, scope: !6746)
!6751 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6746, file: !3, line: 3966, type: !141)
!6752 = !DILocation(line: 3966, column: 40, scope: !6746)
!6753 = !DILocation(line: 3968, column: 27, scope: !6746)
!6754 = !DILocation(line: 3968, column: 25, scope: !6746)
!6755 = !DILocation(line: 3969, column: 26, scope: !6746)
!6756 = !DILocation(line: 3969, column: 57, scope: !6746)
!6757 = !DILocation(line: 3969, column: 47, scope: !6746)
!6758 = !DILocation(line: 3969, column: 62, scope: !6746)
!6759 = !DILocation(line: 3969, column: 65, scope: !6746)
!6760 = !DILocation(line: 3968, column: 3, scope: !6746)
!6761 = !DILocation(line: 3970, column: 1, scope: !6746)
!6762 = distinct !DISubprogram(name: "format_user_or_group", scope: !3, file: !3, line: 3929, type: !780, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6763 = !DILocalVariable(name: "name", arg: 1, scope: !6762, file: !3, line: 3929, type: !146)
!6764 = !DILocation(line: 3929, column: 35, scope: !6762)
!6765 = !DILocalVariable(name: "id", arg: 2, scope: !6762, file: !3, line: 3929, type: !151)
!6766 = !DILocation(line: 3929, column: 59, scope: !6762)
!6767 = !DILocalVariable(name: "width", arg: 3, scope: !6762, file: !3, line: 3929, type: !27)
!6768 = !DILocation(line: 3929, column: 67, scope: !6762)
!6769 = !DILocalVariable(name: "len", scope: !6762, file: !3, line: 3931, type: !149)
!6770 = !DILocation(line: 3931, column: 10, scope: !6762)
!6771 = !DILocation(line: 3933, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3933, column: 7)
!6773 = !DILocation(line: 3933, column: 7, scope: !6762)
!6774 = !DILocalVariable(name: "width_gap", scope: !6775, file: !3, line: 3935, type: !27)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 3934, column: 5)
!6776 = !DILocation(line: 3935, column: 11, scope: !6775)
!6777 = !DILocation(line: 3935, column: 23, scope: !6775)
!6778 = !DILocation(line: 3935, column: 41, scope: !6775)
!6779 = !DILocation(line: 3935, column: 31, scope: !6775)
!6780 = !DILocation(line: 3935, column: 29, scope: !6775)
!6781 = !DILocalVariable(name: "pad", scope: !6775, file: !3, line: 3936, type: !27)
!6782 = !DILocation(line: 3936, column: 11, scope: !6775)
!6783 = !DILocation(line: 3936, column: 17, scope: !6775)
!6784 = !DILocation(line: 3937, column: 7, scope: !6775)
!6785 = !DILocation(line: 3938, column: 21, scope: !6775)
!6786 = !DILocation(line: 3938, column: 13, scope: !6775)
!6787 = !DILocation(line: 3938, column: 29, scope: !6775)
!6788 = !DILocation(line: 3938, column: 27, scope: !6775)
!6789 = !DILocation(line: 3938, column: 11, scope: !6775)
!6790 = !DILocation(line: 3940, column: 7, scope: !6775)
!6791 = !DILocation(line: 3941, column: 9, scope: !6775)
!6792 = !DILocation(line: 3942, column: 17, scope: !6775)
!6793 = distinct !{!6793, !6790, !6794}
!6794 = !DILocation(line: 3942, column: 19, scope: !6775)
!6795 = !DILocation(line: 3943, column: 5, scope: !6775)
!6796 = !DILocation(line: 3946, column: 24, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 3945, column: 5)
!6798 = !DILocation(line: 3946, column: 31, scope: !6797)
!6799 = !DILocation(line: 3946, column: 7, scope: !6797)
!6800 = !DILocation(line: 3947, column: 13, scope: !6797)
!6801 = !DILocation(line: 3947, column: 11, scope: !6797)
!6802 = !DILocation(line: 3950, column: 16, scope: !6762)
!6803 = !DILocation(line: 3950, column: 20, scope: !6762)
!6804 = !DILocation(line: 3950, column: 13, scope: !6762)
!6805 = !DILocation(line: 3951, column: 1, scope: !6762)
!6806 = distinct !DISubprogram(name: "unsigned_file_size", scope: !3, file: !3, line: 2934, type: !698, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6807 = !DILocalVariable(name: "size", arg: 1, scope: !6806, file: !3, line: 2934, type: !179)
!6808 = !DILocation(line: 2934, column: 27, scope: !6806)
!6809 = !DILocation(line: 2936, column: 10, scope: !6806)
!6810 = !DILocation(line: 2936, column: 18, scope: !6806)
!6811 = !DILocation(line: 2936, column: 23, scope: !6806)
!6812 = !DILocation(line: 2936, column: 17, scope: !6806)
!6813 = !DILocation(line: 2936, column: 28, scope: !6806)
!6814 = !DILocation(line: 2936, column: 15, scope: !6806)
!6815 = !DILocation(line: 2936, column: 3, scope: !6806)
!6816 = distinct !DISubprogram(name: "align_nstrftime", scope: !3, file: !3, line: 3880, type: !782, scopeLine: 3882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6817 = !DILocalVariable(name: "buf", arg: 1, scope: !6816, file: !3, line: 3880, type: !143)
!6818 = !DILocation(line: 3880, column: 24, scope: !6816)
!6819 = !DILocalVariable(name: "size", arg: 2, scope: !6816, file: !3, line: 3880, type: !149)
!6820 = !DILocation(line: 3880, column: 36, scope: !6816)
!6821 = !DILocalVariable(name: "recent", arg: 3, scope: !6816, file: !3, line: 3880, type: !141)
!6822 = !DILocation(line: 3880, column: 47, scope: !6816)
!6823 = !DILocalVariable(name: "tm", arg: 4, scope: !6816, file: !3, line: 3880, type: !784)
!6824 = !DILocation(line: 3880, column: 72, scope: !6816)
!6825 = !DILocalVariable(name: "tz", arg: 5, scope: !6816, file: !3, line: 3881, type: !248)
!6826 = !DILocation(line: 3881, column: 29, scope: !6816)
!6827 = !DILocalVariable(name: "ns", arg: 6, scope: !6816, file: !3, line: 3881, type: !27)
!6828 = !DILocation(line: 3881, column: 37, scope: !6816)
!6829 = !DILocalVariable(name: "nfmt", scope: !6816, file: !3, line: 3883, type: !146)
!6830 = !DILocation(line: 3883, column: 15, scope: !6816)
!6831 = !DILocation(line: 3883, column: 23, scope: !6816)
!6832 = !DILocation(line: 3884, column: 34, scope: !6816)
!6833 = !DILocation(line: 3884, column: 25, scope: !6816)
!6834 = !DILocation(line: 3884, column: 42, scope: !6816)
!6835 = !DILocation(line: 3884, column: 46, scope: !6816)
!6836 = !{!6837, !2437, i64 16}
!6837 = !{!"tm", !2437, i64 0, !2437, i64 4, !2437, i64 8, !2437, i64 12, !2437, i64 16, !2437, i64 20, !2437, i64 24, !2437, i64 28, !2437, i64 32, !2467, i64 40, !2443, i64 48}
!6838 = !DILocation(line: 3885, column: 42, scope: !6816)
!6839 = !DILocation(line: 3885, column: 25, scope: !6816)
!6840 = !DILocation(line: 3886, column: 21, scope: !6816)
!6841 = !DILocation(line: 3886, column: 26, scope: !6816)
!6842 = !DILocation(line: 3886, column: 32, scope: !6816)
!6843 = !DILocation(line: 3886, column: 38, scope: !6816)
!6844 = !DILocation(line: 3886, column: 42, scope: !6816)
!6845 = !DILocation(line: 3886, column: 46, scope: !6816)
!6846 = !DILocation(line: 3886, column: 10, scope: !6816)
!6847 = !DILocation(line: 3886, column: 3, scope: !6816)
!6848 = !DILocation(line: 3897, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 3897, column: 7)
!6850 = !DILocation(line: 3897, column: 13, scope: !6849)
!6851 = !DILocation(line: 3897, column: 7, scope: !1035)
!6852 = !DILocalVariable(name: "epoch", scope: !6853, file: !3, line: 3899, type: !162)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 3898, column: 5)
!6854 = !DILocation(line: 3899, column: 14, scope: !6853)
!6855 = !DILocalVariable(name: "tm", scope: !6853, file: !3, line: 3900, type: !786)
!6856 = !DILocation(line: 3900, column: 17, scope: !6853)
!6857 = !DILocalVariable(name: "buf", scope: !6853, file: !3, line: 3901, type: !802)
!6858 = !DILocation(line: 3901, column: 12, scope: !6853)
!6859 = !DILocation(line: 3910, column: 25, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3910, column: 11)
!6861 = !DILocation(line: 3910, column: 11, scope: !6860)
!6862 = !DILocation(line: 3910, column: 11, scope: !6853)
!6863 = !DILocalVariable(name: "len", scope: !6864, file: !3, line: 3912, type: !149)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 3911, column: 9)
!6865 = !DILocation(line: 3912, column: 18, scope: !6864)
!6866 = !DILocation(line: 3912, column: 41, scope: !6864)
!6867 = !DILocation(line: 3913, column: 46, scope: !6864)
!6868 = !DILocation(line: 3912, column: 24, scope: !6864)
!6869 = !DILocation(line: 3914, column: 15, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 3914, column: 15)
!6871 = !DILocation(line: 3914, column: 19, scope: !6870)
!6872 = !DILocation(line: 3914, column: 15, scope: !6864)
!6873 = !DILocation(line: 3915, column: 32, scope: !6870)
!6874 = !DILocation(line: 3915, column: 37, scope: !6870)
!6875 = !DILocation(line: 3915, column: 21, scope: !6870)
!6876 = !DILocation(line: 3915, column: 19, scope: !6870)
!6877 = !DILocation(line: 3915, column: 13, scope: !6870)
!6878 = !DILocation(line: 3916, column: 9, scope: !6864)
!6879 = !DILocation(line: 3918, column: 11, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3918, column: 11)
!6881 = !DILocation(line: 3918, column: 17, scope: !6880)
!6882 = !DILocation(line: 3918, column: 11, scope: !6853)
!6883 = !DILocation(line: 3919, column: 15, scope: !6880)
!6884 = !DILocation(line: 3919, column: 9, scope: !6880)
!6885 = !DILocation(line: 3920, column: 5, scope: !6853)
!6886 = !DILocation(line: 3922, column: 10, scope: !1035)
!6887 = !DILocation(line: 3922, column: 3, scope: !1035)
!6888 = distinct !DISubprogram(name: "timetostr", scope: !810, file: !810, line: 687, type: !805, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6889 = !DILocalVariable(name: "t", arg: 1, scope: !6888, file: !810, line: 687, type: !162)
!6890 = !DILocation(line: 687, column: 19, scope: !6888)
!6891 = !DILocalVariable(name: "buf", arg: 2, scope: !6888, file: !810, line: 687, type: !143)
!6892 = !DILocation(line: 687, column: 28, scope: !6888)
!6893 = !DILocation(line: 690, column: 24, scope: !6888)
!6894 = !DILocation(line: 690, column: 27, scope: !6888)
!6895 = !DILocation(line: 690, column: 13, scope: !6888)
!6896 = !DILocation(line: 689, column: 3, scope: !6888)
!6897 = distinct !DISubprogram(name: "print_name_with_quoting", scope: !3, file: !3, line: 4540, type: !739, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6898 = !DILocalVariable(name: "f", arg: 1, scope: !6897, file: !3, line: 4540, type: !183)
!6899 = !DILocation(line: 4540, column: 49, scope: !6897)
!6900 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !6897, file: !3, line: 4541, type: !141)
!6901 = !DILocation(line: 4541, column: 31, scope: !6897)
!6902 = !DILocalVariable(name: "stack", arg: 3, scope: !6897, file: !3, line: 4542, type: !510)
!6903 = !DILocation(line: 4542, column: 42, scope: !6897)
!6904 = !DILocalVariable(name: "start_col", arg: 4, scope: !6897, file: !3, line: 4543, type: !149)
!6905 = !DILocation(line: 4543, column: 33, scope: !6897)
!6906 = !DILocalVariable(name: "name", scope: !6897, file: !3, line: 4545, type: !146)
!6907 = !DILocation(line: 4545, column: 15, scope: !6897)
!6908 = !DILocation(line: 4545, column: 22, scope: !6897)
!6909 = !DILocation(line: 4545, column: 39, scope: !6897)
!6910 = !DILocation(line: 4545, column: 42, scope: !6897)
!6911 = !DILocation(line: 4545, column: 53, scope: !6897)
!6912 = !DILocation(line: 4545, column: 56, scope: !6897)
!6913 = !DILocalVariable(name: "color", scope: !6897, file: !3, line: 4547, type: !399)
!6914 = !DILocation(line: 4547, column: 25, scope: !6897)
!6915 = !DILocation(line: 4547, column: 33, scope: !6897)
!6916 = !DILocation(line: 4548, column: 54, scope: !6897)
!6917 = !DILocation(line: 4548, column: 57, scope: !6897)
!6918 = !DILocation(line: 4548, column: 33, scope: !6897)
!6919 = !DILocalVariable(name: "used_color_this_time", scope: !6897, file: !3, line: 4550, type: !141)
!6920 = !DILocation(line: 4550, column: 8, scope: !6897)
!6921 = !DILocation(line: 4550, column: 32, scope: !6897)
!6922 = !DILocation(line: 4551, column: 32, scope: !6897)
!6923 = !DILocation(line: 4551, column: 36, scope: !6897)
!6924 = !DILocation(line: 4551, column: 42, scope: !6897)
!6925 = !DILocation(line: 4551, column: 45, scope: !6897)
!6926 = !DILocation(line: 0, scope: !6897)
!6927 = !DILocalVariable(name: "len", scope: !6897, file: !3, line: 4553, type: !149)
!6928 = !DILocation(line: 4553, column: 10, scope: !6897)
!6929 = !DILocation(line: 4553, column: 28, scope: !6897)
!6930 = !DILocation(line: 4553, column: 34, scope: !6897)
!6931 = !DILocation(line: 4553, column: 60, scope: !6897)
!6932 = !DILocation(line: 4553, column: 63, scope: !6897)
!6933 = !DILocation(line: 4554, column: 28, scope: !6897)
!6934 = !DILocation(line: 4554, column: 36, scope: !6897)
!6935 = !DILocation(line: 4554, column: 35, scope: !6897)
!6936 = !DILocation(line: 4554, column: 52, scope: !6897)
!6937 = !DILocation(line: 4554, column: 59, scope: !6897)
!6938 = !DILocation(line: 4554, column: 62, scope: !6897)
!6939 = !DILocation(line: 4553, column: 16, scope: !6897)
!6940 = !DILocation(line: 4556, column: 3, scope: !6897)
!6941 = !DILocation(line: 4557, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4557, column: 7)
!6943 = !DILocation(line: 4557, column: 7, scope: !6897)
!6944 = !DILocation(line: 4559, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4558, column: 5)
!6946 = !DILocation(line: 4567, column: 11, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 4567, column: 11)
!6948 = !DILocation(line: 4568, column: 11, scope: !6947)
!6949 = !DILocation(line: 4568, column: 15, scope: !6947)
!6950 = !DILocation(line: 4568, column: 27, scope: !6947)
!6951 = !DILocation(line: 4568, column: 25, scope: !6947)
!6952 = !DILocation(line: 4568, column: 43, scope: !6947)
!6953 = !DILocation(line: 4568, column: 55, scope: !6947)
!6954 = !DILocation(line: 4568, column: 53, scope: !6947)
!6955 = !DILocation(line: 4568, column: 59, scope: !6947)
!6956 = !DILocation(line: 4568, column: 66, scope: !6947)
!6957 = !DILocation(line: 4568, column: 64, scope: !6947)
!6958 = !DILocation(line: 4568, column: 39, scope: !6947)
!6959 = !DILocation(line: 4567, column: 11, scope: !6945)
!6960 = !DILocation(line: 4569, column: 9, scope: !6947)
!6961 = !DILocation(line: 4570, column: 5, scope: !6945)
!6962 = !DILocation(line: 4572, column: 10, scope: !6897)
!6963 = !DILocation(line: 4572, column: 3, scope: !6897)
!6964 = distinct !DISubprogram(name: "print_type_indicator", scope: !3, file: !3, line: 4655, type: !745, scopeLine: 4656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6965 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6964, file: !3, line: 4655, type: !141)
!6966 = !DILocation(line: 4655, column: 28, scope: !6964)
!6967 = !DILocalVariable(name: "mode", arg: 2, scope: !6964, file: !3, line: 4655, type: !228)
!6968 = !DILocation(line: 4655, column: 44, scope: !6964)
!6969 = !DILocalVariable(name: "type", arg: 3, scope: !6964, file: !3, line: 4655, type: !36)
!6970 = !DILocation(line: 4655, column: 64, scope: !6964)
!6971 = !DILocalVariable(name: "c", scope: !6964, file: !3, line: 4657, type: !144)
!6972 = !DILocation(line: 4657, column: 8, scope: !6964)
!6973 = !DILocation(line: 4657, column: 32, scope: !6964)
!6974 = !DILocation(line: 4657, column: 41, scope: !6964)
!6975 = !DILocation(line: 4657, column: 47, scope: !6964)
!6976 = !DILocation(line: 4657, column: 12, scope: !6964)
!6977 = !DILocation(line: 4658, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4658, column: 7)
!6979 = !DILocation(line: 4658, column: 7, scope: !6964)
!6980 = !DILocation(line: 4659, column: 5, scope: !6978)
!6981 = !DILocation(line: 4659, column: 5, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 4659, column: 5)
!6983 = !DILocation(line: 4660, column: 12, scope: !6964)
!6984 = !DILocation(line: 4660, column: 11, scope: !6964)
!6985 = !DILocation(line: 4660, column: 10, scope: !6964)
!6986 = !DILocation(line: 4660, column: 3, scope: !6964)
!6987 = distinct !DISubprogram(name: "get_type_indicator", scope: !3, file: !3, line: 4623, type: !747, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6988 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6987, file: !3, line: 4623, type: !141)
!6989 = !DILocation(line: 4623, column: 26, scope: !6987)
!6990 = !DILocalVariable(name: "mode", arg: 2, scope: !6987, file: !3, line: 4623, type: !228)
!6991 = !DILocation(line: 4623, column: 42, scope: !6987)
!6992 = !DILocalVariable(name: "type", arg: 3, scope: !6987, file: !3, line: 4623, type: !36)
!6993 = !DILocation(line: 4623, column: 62, scope: !6987)
!6994 = !DILocalVariable(name: "c", scope: !6987, file: !3, line: 4625, type: !144)
!6995 = !DILocation(line: 4625, column: 8, scope: !6987)
!6996 = !DILocation(line: 4627, column: 7, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 4627, column: 7)
!6998 = !DILocation(line: 4627, column: 7, scope: !6987)
!6999 = !DILocation(line: 4627, column: 17, scope: !6997)
!7000 = !DILocation(line: 4627, column: 34, scope: !6997)
!7001 = !DILocation(line: 4627, column: 39, scope: !6997)
!7002 = !DILocation(line: 4629, column: 11, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 4629, column: 11)
!7004 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 4628, column: 5)
!7005 = !DILocation(line: 4629, column: 19, scope: !7003)
!7006 = !DILocation(line: 4629, column: 22, scope: !7003)
!7007 = !DILocation(line: 4629, column: 38, scope: !7003)
!7008 = !DILocation(line: 4629, column: 50, scope: !7003)
!7009 = !DILocation(line: 4629, column: 54, scope: !7003)
!7010 = !DILocation(line: 4629, column: 59, scope: !7003)
!7011 = !DILocation(line: 4629, column: 11, scope: !7004)
!7012 = !DILocation(line: 4630, column: 11, scope: !7003)
!7013 = !DILocation(line: 4630, column: 9, scope: !7003)
!7014 = !DILocation(line: 4632, column: 11, scope: !7003)
!7015 = !DILocation(line: 4633, column: 5, scope: !7004)
!7016 = !DILocation(line: 4636, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 4636, column: 11)
!7018 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 4635, column: 5)
!7019 = !DILocation(line: 4636, column: 11, scope: !7018)
!7020 = !DILocation(line: 4636, column: 21, scope: !7017)
!7021 = !DILocation(line: 4636, column: 38, scope: !7017)
!7022 = !DILocation(line: 4636, column: 43, scope: !7017)
!7023 = !DILocation(line: 4636, column: 56, scope: !7017)
!7024 = !DILocation(line: 4636, column: 59, scope: !7017)
!7025 = !DILocation(line: 4636, column: 64, scope: !7017)
!7026 = !DILocation(line: 4637, column: 11, scope: !7017)
!7027 = !DILocation(line: 4637, column: 9, scope: !7017)
!7028 = !DILocation(line: 4638, column: 16, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 4638, column: 16)
!7030 = !DILocation(line: 4638, column: 32, scope: !7029)
!7031 = !DILocation(line: 4638, column: 16, scope: !7017)
!7032 = !DILocation(line: 4639, column: 11, scope: !7029)
!7033 = !DILocation(line: 4639, column: 9, scope: !7029)
!7034 = !DILocation(line: 4640, column: 16, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 4640, column: 16)
!7036 = !DILocation(line: 4640, column: 16, scope: !7029)
!7037 = !DILocation(line: 4640, column: 26, scope: !7035)
!7038 = !DILocation(line: 4640, column: 43, scope: !7035)
!7039 = !DILocation(line: 4640, column: 48, scope: !7035)
!7040 = !DILocation(line: 4641, column: 11, scope: !7035)
!7041 = !DILocation(line: 4641, column: 9, scope: !7035)
!7042 = !DILocation(line: 4642, column: 16, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4642, column: 16)
!7044 = !DILocation(line: 4642, column: 16, scope: !7035)
!7045 = !DILocation(line: 4642, column: 26, scope: !7043)
!7046 = !DILocation(line: 4642, column: 44, scope: !7043)
!7047 = !DILocation(line: 4642, column: 49, scope: !7043)
!7048 = !DILocation(line: 4643, column: 11, scope: !7043)
!7049 = !DILocation(line: 4643, column: 9, scope: !7043)
!7050 = !DILocation(line: 4644, column: 16, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4644, column: 16)
!7052 = !DILocation(line: 4644, column: 16, scope: !7043)
!7053 = !DILocation(line: 4644, column: 26, scope: !7051)
!7054 = !DILocation(line: 4644, column: 44, scope: !7051)
!7055 = !DILocation(line: 4644, column: 49, scope: !7051)
!7056 = !DILocation(line: 4645, column: 11, scope: !7051)
!7057 = !DILocation(line: 4645, column: 9, scope: !7051)
!7058 = !DILocation(line: 4646, column: 16, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 4646, column: 16)
!7060 = !DILocation(line: 4646, column: 24, scope: !7059)
!7061 = !DILocation(line: 4646, column: 16, scope: !7051)
!7062 = !DILocation(line: 4647, column: 11, scope: !7059)
!7063 = !DILocation(line: 4647, column: 9, scope: !7059)
!7064 = !DILocation(line: 4649, column: 11, scope: !7059)
!7065 = !DILocation(line: 4651, column: 10, scope: !6987)
!7066 = !DILocation(line: 4651, column: 3, scope: !6987)
!7067 = !DILocalVariable(name: "f", arg: 1, scope: !1025, file: !3, line: 4682, type: !183)
!7068 = !DILocation(line: 4682, column: 45, scope: !1025)
!7069 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !1025, file: !3, line: 4682, type: !141)
!7070 = !DILocation(line: 4682, column: 53, scope: !1025)
!7071 = !DILocalVariable(name: "type", scope: !1025, file: !3, line: 4684, type: !53)
!7072 = !DILocation(line: 4684, column: 21, scope: !1025)
!7073 = !DILocalVariable(name: "ext", scope: !1025, file: !3, line: 4685, type: !593)
!7074 = !DILocation(line: 4685, column: 26, scope: !1025)
!7075 = !DILocalVariable(name: "len", scope: !1025, file: !3, line: 4686, type: !149)
!7076 = !DILocation(line: 4686, column: 10, scope: !1025)
!7077 = !DILocalVariable(name: "name", scope: !1025, file: !3, line: 4688, type: !146)
!7078 = !DILocation(line: 4688, column: 15, scope: !1025)
!7079 = !DILocalVariable(name: "mode", scope: !1025, file: !3, line: 4689, type: !228)
!7080 = !DILocation(line: 4689, column: 10, scope: !1025)
!7081 = !DILocalVariable(name: "linkok", scope: !1025, file: !3, line: 4690, type: !27)
!7082 = !DILocation(line: 4690, column: 7, scope: !1025)
!7083 = !DILocation(line: 4691, column: 7, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4691, column: 7)
!7085 = !DILocation(line: 4691, column: 7, scope: !1025)
!7086 = !DILocation(line: 4693, column: 14, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 4692, column: 5)
!7088 = !DILocation(line: 4693, column: 17, scope: !7087)
!7089 = !DILocation(line: 4693, column: 12, scope: !7087)
!7090 = !DILocation(line: 4694, column: 14, scope: !7087)
!7091 = !DILocation(line: 4694, column: 17, scope: !7087)
!7092 = !DILocation(line: 4694, column: 12, scope: !7087)
!7093 = !DILocation(line: 4695, column: 16, scope: !7087)
!7094 = !DILocation(line: 4695, column: 19, scope: !7087)
!7095 = !DILocation(line: 4695, column: 14, scope: !7087)
!7096 = !DILocation(line: 4696, column: 5, scope: !7087)
!7097 = !DILocation(line: 4699, column: 14, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 4698, column: 5)
!7099 = !DILocation(line: 4699, column: 17, scope: !7098)
!7100 = !DILocation(line: 4699, column: 12, scope: !7098)
!7101 = !DILocation(line: 4700, column: 14, scope: !7098)
!7102 = !DILocation(line: 4700, column: 12, scope: !7098)
!7103 = !DILocation(line: 4701, column: 16, scope: !7098)
!7104 = !DILocation(line: 4701, column: 19, scope: !7098)
!7105 = !DILocation(line: 4701, column: 14, scope: !7098)
!7106 = !DILocation(line: 4706, column: 7, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4706, column: 7)
!7108 = !DILocation(line: 4706, column: 14, scope: !7107)
!7109 = !DILocation(line: 4706, column: 20, scope: !7107)
!7110 = !DILocation(line: 4706, column: 23, scope: !7107)
!7111 = !DILocation(line: 4706, column: 7, scope: !1025)
!7112 = !DILocation(line: 4707, column: 10, scope: !7107)
!7113 = !DILocation(line: 4707, column: 5, scope: !7107)
!7114 = !DILocation(line: 4708, column: 13, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4708, column: 12)
!7116 = !DILocation(line: 4708, column: 16, scope: !7115)
!7117 = !DILocation(line: 4708, column: 12, scope: !7107)
!7118 = !DILocation(line: 4711, column: 33, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4709, column: 5)
!7120 = !DILocation(line: 4711, column: 36, scope: !7119)
!7121 = !DILocation(line: 4711, column: 14, scope: !7119)
!7122 = !DILocation(line: 4711, column: 12, scope: !7119)
!7123 = !DILocation(line: 4712, column: 5, scope: !7119)
!7124 = !DILocation(line: 4715, column: 11, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 4715, column: 11)
!7126 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4714, column: 5)
!7127 = !DILocation(line: 4715, column: 11, scope: !7126)
!7128 = !DILocation(line: 4717, column: 16, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4716, column: 9)
!7130 = !DILocation(line: 4719, column: 16, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 4719, column: 15)
!7132 = !DILocation(line: 4719, column: 21, scope: !7131)
!7133 = !DILocation(line: 4719, column: 32, scope: !7131)
!7134 = !DILocation(line: 4719, column: 37, scope: !7131)
!7135 = !DILocation(line: 4719, column: 40, scope: !7131)
!7136 = !DILocation(line: 4719, column: 15, scope: !7129)
!7137 = !DILocation(line: 4720, column: 18, scope: !7131)
!7138 = !DILocation(line: 4720, column: 13, scope: !7131)
!7139 = !DILocation(line: 4721, column: 21, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 4721, column: 20)
!7141 = !DILocation(line: 4721, column: 26, scope: !7140)
!7142 = !DILocation(line: 4721, column: 37, scope: !7140)
!7143 = !DILocation(line: 4721, column: 42, scope: !7140)
!7144 = !DILocation(line: 4721, column: 45, scope: !7140)
!7145 = !DILocation(line: 4721, column: 20, scope: !7131)
!7146 = !DILocation(line: 4722, column: 18, scope: !7140)
!7147 = !DILocation(line: 4722, column: 13, scope: !7140)
!7148 = !DILocation(line: 4723, column: 20, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 4723, column: 20)
!7150 = !DILocation(line: 4723, column: 39, scope: !7149)
!7151 = !DILocation(line: 4723, column: 42, scope: !7149)
!7152 = !DILocation(line: 4723, column: 45, scope: !7149)
!7153 = !DILocation(line: 4723, column: 20, scope: !7140)
!7154 = !DILocation(line: 4724, column: 18, scope: !7149)
!7155 = !DILocation(line: 4724, column: 13, scope: !7149)
!7156 = !DILocation(line: 4725, column: 21, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4725, column: 20)
!7158 = !DILocation(line: 4725, column: 26, scope: !7157)
!7159 = !DILocation(line: 4725, column: 37, scope: !7157)
!7160 = !DILocation(line: 4725, column: 42, scope: !7157)
!7161 = !DILocation(line: 4725, column: 45, scope: !7157)
!7162 = !DILocation(line: 4725, column: 20, scope: !7149)
!7163 = !DILocation(line: 4726, column: 18, scope: !7157)
!7164 = !DILocation(line: 4726, column: 13, scope: !7157)
!7165 = !DILocation(line: 4727, column: 25, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 4727, column: 20)
!7167 = !DILocation(line: 4727, column: 28, scope: !7166)
!7168 = !DILocation(line: 4727, column: 33, scope: !7166)
!7169 = !DILocation(line: 4727, column: 23, scope: !7166)
!7170 = !DILocation(line: 4727, column: 43, scope: !7166)
!7171 = !DILocation(line: 4727, column: 46, scope: !7166)
!7172 = !DILocation(line: 4727, column: 20, scope: !7157)
!7173 = !DILocation(line: 4728, column: 18, scope: !7166)
!7174 = !DILocation(line: 4728, column: 13, scope: !7166)
!7175 = !DILocation(line: 4729, column: 9, scope: !7129)
!7176 = !DILocation(line: 4730, column: 16, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4730, column: 16)
!7178 = !DILocation(line: 4730, column: 16, scope: !7125)
!7179 = !DILocation(line: 4732, column: 16, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4731, column: 9)
!7181 = !DILocation(line: 4734, column: 16, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 4734, column: 15)
!7183 = !DILocation(line: 4734, column: 21, scope: !7182)
!7184 = !DILocation(line: 4734, column: 32, scope: !7182)
!7185 = !DILocation(line: 4734, column: 36, scope: !7182)
!7186 = !DILocation(line: 4734, column: 41, scope: !7182)
!7187 = !DILocation(line: 4735, column: 15, scope: !7182)
!7188 = !DILocation(line: 4735, column: 18, scope: !7182)
!7189 = !DILocation(line: 4734, column: 15, scope: !7180)
!7190 = !DILocation(line: 4736, column: 18, scope: !7182)
!7191 = !DILocation(line: 4736, column: 13, scope: !7182)
!7192 = !DILocation(line: 4737, column: 21, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 4737, column: 20)
!7194 = !DILocation(line: 4737, column: 26, scope: !7193)
!7195 = !DILocation(line: 4737, column: 37, scope: !7193)
!7196 = !DILocation(line: 4737, column: 42, scope: !7193)
!7197 = !DILocation(line: 4737, column: 45, scope: !7193)
!7198 = !DILocation(line: 4737, column: 20, scope: !7182)
!7199 = !DILocation(line: 4738, column: 18, scope: !7193)
!7200 = !DILocation(line: 4738, column: 13, scope: !7193)
!7201 = !DILocation(line: 4739, column: 21, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 4739, column: 20)
!7203 = !DILocation(line: 4739, column: 26, scope: !7202)
!7204 = !DILocation(line: 4739, column: 37, scope: !7202)
!7205 = !DILocation(line: 4739, column: 42, scope: !7202)
!7206 = !DILocation(line: 4739, column: 45, scope: !7202)
!7207 = !DILocation(line: 4739, column: 20, scope: !7193)
!7208 = !DILocation(line: 4740, column: 18, scope: !7202)
!7209 = !DILocation(line: 4740, column: 13, scope: !7202)
!7210 = !DILocation(line: 4741, column: 9, scope: !7180)
!7211 = !DILocation(line: 4742, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4742, column: 16)
!7213 = !DILocation(line: 4742, column: 16, scope: !7177)
!7214 = !DILocation(line: 4743, column: 14, scope: !7212)
!7215 = !DILocation(line: 4743, column: 9, scope: !7212)
!7216 = !DILocation(line: 4744, column: 16, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 4744, column: 16)
!7218 = !DILocation(line: 4744, column: 16, scope: !7212)
!7219 = !DILocation(line: 4745, column: 14, scope: !7217)
!7220 = !DILocation(line: 4745, column: 9, scope: !7217)
!7221 = !DILocation(line: 4746, column: 16, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 4746, column: 16)
!7223 = !DILocation(line: 4746, column: 16, scope: !7217)
!7224 = !DILocation(line: 4747, column: 14, scope: !7222)
!7225 = !DILocation(line: 4747, column: 9, scope: !7222)
!7226 = !DILocation(line: 4748, column: 16, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 4748, column: 16)
!7228 = !DILocation(line: 4748, column: 16, scope: !7222)
!7229 = !DILocation(line: 4749, column: 14, scope: !7227)
!7230 = !DILocation(line: 4749, column: 9, scope: !7227)
!7231 = !DILocation(line: 4750, column: 16, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 4750, column: 16)
!7233 = !DILocation(line: 4750, column: 16, scope: !7227)
!7234 = !DILocation(line: 4751, column: 14, scope: !7232)
!7235 = !DILocation(line: 4751, column: 9, scope: !7232)
!7236 = !DILocation(line: 4757, column: 16, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 4755, column: 9)
!7238 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 4752, column: 16)
!7239 = !DILocation(line: 4762, column: 7, scope: !1025)
!7240 = !DILocation(line: 4763, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4763, column: 7)
!7242 = !DILocation(line: 4763, column: 12, scope: !7241)
!7243 = !DILocation(line: 4763, column: 7, scope: !1025)
!7244 = !DILocation(line: 4767, column: 21, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4764, column: 5)
!7246 = !DILocation(line: 4767, column: 13, scope: !7245)
!7247 = !DILocation(line: 4767, column: 11, scope: !7245)
!7248 = !DILocation(line: 4768, column: 15, scope: !7245)
!7249 = !DILocation(line: 4768, column: 12, scope: !7245)
!7250 = !DILocation(line: 4769, column: 18, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 4769, column: 7)
!7252 = !DILocation(line: 4769, column: 16, scope: !7251)
!7253 = !DILocation(line: 4769, column: 12, scope: !7251)
!7254 = !DILocation(line: 4769, column: 34, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 4769, column: 7)
!7256 = !DILocation(line: 4769, column: 38, scope: !7255)
!7257 = !DILocation(line: 4769, column: 7, scope: !7251)
!7258 = !DILocation(line: 4771, column: 15, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4771, column: 15)
!7260 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 4770, column: 9)
!7261 = !DILocation(line: 4771, column: 20, scope: !7259)
!7262 = !DILocation(line: 4771, column: 24, scope: !7259)
!7263 = !{!3481, !2467, i64 0}
!7264 = !DILocation(line: 4771, column: 31, scope: !7259)
!7265 = !DILocation(line: 4771, column: 28, scope: !7259)
!7266 = !DILocation(line: 4772, column: 15, scope: !7259)
!7267 = !DILocation(line: 4772, column: 33, scope: !7259)
!7268 = !DILocation(line: 4772, column: 40, scope: !7259)
!7269 = !DILocation(line: 4772, column: 45, scope: !7259)
!7270 = !DILocation(line: 4772, column: 49, scope: !7259)
!7271 = !DILocation(line: 4772, column: 38, scope: !7259)
!7272 = !DILocation(line: 4772, column: 54, scope: !7259)
!7273 = !DILocation(line: 4772, column: 59, scope: !7259)
!7274 = !DILocation(line: 4772, column: 63, scope: !7259)
!7275 = !DILocation(line: 4773, column: 33, scope: !7259)
!7276 = !DILocation(line: 4773, column: 38, scope: !7259)
!7277 = !DILocation(line: 4773, column: 42, scope: !7259)
!7278 = !DILocation(line: 4772, column: 18, scope: !7259)
!7279 = !DILocation(line: 4773, column: 47, scope: !7259)
!7280 = !DILocation(line: 4771, column: 15, scope: !7260)
!7281 = !DILocation(line: 4774, column: 13, scope: !7259)
!7282 = !DILocation(line: 4775, column: 9, scope: !7260)
!7283 = !DILocation(line: 4769, column: 53, scope: !7255)
!7284 = !DILocation(line: 4769, column: 58, scope: !7255)
!7285 = !DILocation(line: 4769, column: 51, scope: !7255)
!7286 = !DILocation(line: 4769, column: 7, scope: !7255)
!7287 = distinct !{!7287, !7257, !7288}
!7288 = !DILocation(line: 4775, column: 9, scope: !7251)
!7289 = !DILocation(line: 4776, column: 5, scope: !7245)
!7290 = !DILocation(line: 4779, column: 7, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4779, column: 7)
!7292 = !DILocation(line: 4779, column: 12, scope: !7291)
!7293 = !DILocation(line: 4779, column: 22, scope: !7291)
!7294 = !DILocation(line: 4779, column: 26, scope: !7291)
!7295 = !DILocation(line: 4779, column: 7, scope: !1025)
!7296 = !DILocation(line: 4781, column: 11, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 4781, column: 11)
!7298 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 4780, column: 5)
!7299 = !DILocation(line: 4781, column: 37, scope: !7297)
!7300 = !DILocation(line: 4781, column: 40, scope: !7297)
!7301 = !DILocation(line: 4781, column: 11, scope: !7298)
!7302 = !DILocation(line: 4782, column: 14, scope: !7297)
!7303 = !DILocation(line: 4782, column: 9, scope: !7297)
!7304 = !DILocation(line: 4783, column: 5, scope: !7298)
!7305 = !DILocalVariable(name: "s", scope: !1025, file: !3, line: 4785, type: !744)
!7306 = !DILocation(line: 4785, column: 31, scope: !1025)
!7307 = !DILocation(line: 4786, column: 7, scope: !1025)
!7308 = !DILocation(line: 4786, column: 15, scope: !1025)
!7309 = !DILocation(line: 4786, column: 20, scope: !1025)
!7310 = !DILocation(line: 4786, column: 44, scope: !1025)
!7311 = !DILocation(line: 4786, column: 28, scope: !1025)
!7312 = !DILocation(line: 4788, column: 10, scope: !1025)
!7313 = !DILocation(line: 4788, column: 13, scope: !1025)
!7314 = !DILocation(line: 4788, column: 22, scope: !1025)
!7315 = !DILocation(line: 4788, column: 3, scope: !1025)
!7316 = distinct !DISubprogram(name: "calculate_columns", scope: !3, file: !3, line: 5077, type: !763, scopeLine: 5078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7317 = !DILocalVariable(name: "by_columns", arg: 1, scope: !7316, file: !3, line: 5077, type: !141)
!7318 = !DILocation(line: 5077, column: 25, scope: !7316)
!7319 = !DILocalVariable(name: "filesno", scope: !7316, file: !3, line: 5079, type: !149)
!7320 = !DILocation(line: 5079, column: 10, scope: !7316)
!7321 = !DILocalVariable(name: "cols", scope: !7316, file: !3, line: 5080, type: !149)
!7322 = !DILocation(line: 5080, column: 10, scope: !7316)
!7323 = !DILocalVariable(name: "max_cols", scope: !7316, file: !3, line: 5085, type: !149)
!7324 = !DILocation(line: 5085, column: 10, scope: !7316)
!7325 = !DILocation(line: 5085, column: 21, scope: !7316)
!7326 = !DILocation(line: 5087, column: 3, scope: !7316)
!7327 = !DILocation(line: 5090, column: 16, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5090, column: 3)
!7329 = !DILocation(line: 5090, column: 8, scope: !7328)
!7330 = !DILocation(line: 5090, column: 21, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 5090, column: 3)
!7332 = !DILocation(line: 5090, column: 31, scope: !7331)
!7333 = !DILocation(line: 5090, column: 29, scope: !7331)
!7334 = !DILocation(line: 5090, column: 3, scope: !7328)
!7335 = !DILocalVariable(name: "f", scope: !7336, file: !3, line: 5092, type: !183)
!7336 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 5091, column: 5)
!7337 = !DILocation(line: 5092, column: 30, scope: !7336)
!7338 = !DILocation(line: 5092, column: 34, scope: !7336)
!7339 = !DILocation(line: 5092, column: 46, scope: !7336)
!7340 = !DILocalVariable(name: "name_length", scope: !7336, file: !3, line: 5093, type: !149)
!7341 = !DILocation(line: 5093, column: 14, scope: !7336)
!7342 = !DILocation(line: 5093, column: 60, scope: !7336)
!7343 = !DILocation(line: 5093, column: 28, scope: !7336)
!7344 = !DILocalVariable(name: "i", scope: !7345, file: !3, line: 5095, type: !149)
!7345 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 5095, column: 7)
!7346 = !DILocation(line: 5095, column: 19, scope: !7345)
!7347 = !DILocation(line: 5095, column: 12, scope: !7345)
!7348 = !DILocation(line: 5095, column: 26, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 5095, column: 7)
!7350 = !DILocation(line: 5095, column: 30, scope: !7349)
!7351 = !DILocation(line: 5095, column: 28, scope: !7349)
!7352 = !DILocation(line: 5095, column: 7, scope: !7345)
!7353 = !DILocation(line: 5097, column: 15, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 5097, column: 15)
!7355 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 5096, column: 9)
!7356 = !DILocation(line: 5097, column: 27, scope: !7354)
!7357 = !DILocation(line: 5097, column: 30, scope: !7354)
!7358 = !{!6166, !2462, i64 0}
!7359 = !DILocation(line: 5097, column: 15, scope: !7355)
!7360 = !DILocalVariable(name: "idx", scope: !7361, file: !3, line: 5099, type: !149)
!7361 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 5098, column: 13)
!7362 = !DILocation(line: 5099, column: 22, scope: !7361)
!7363 = !DILocation(line: 5099, column: 29, scope: !7361)
!7364 = !DILocation(line: 5100, column: 31, scope: !7361)
!7365 = !DILocation(line: 5100, column: 43, scope: !7361)
!7366 = !DILocation(line: 5100, column: 56, scope: !7361)
!7367 = !DILocation(line: 5100, column: 54, scope: !7361)
!7368 = !DILocation(line: 5100, column: 62, scope: !7361)
!7369 = !DILocation(line: 5100, column: 64, scope: !7361)
!7370 = !DILocation(line: 5100, column: 59, scope: !7361)
!7371 = !DILocation(line: 5100, column: 39, scope: !7361)
!7372 = !DILocation(line: 5101, column: 31, scope: !7361)
!7373 = !DILocation(line: 5101, column: 42, scope: !7361)
!7374 = !DILocation(line: 5101, column: 44, scope: !7361)
!7375 = !DILocation(line: 5101, column: 39, scope: !7361)
!7376 = !DILocalVariable(name: "real_length", scope: !7361, file: !3, line: 5102, type: !149)
!7377 = !DILocation(line: 5102, column: 22, scope: !7361)
!7378 = !DILocation(line: 5102, column: 36, scope: !7361)
!7379 = !DILocation(line: 5102, column: 51, scope: !7361)
!7380 = !DILocation(line: 5102, column: 58, scope: !7361)
!7381 = !DILocation(line: 5102, column: 55, scope: !7361)
!7382 = !DILocation(line: 5102, column: 50, scope: !7361)
!7383 = !DILocation(line: 5102, column: 48, scope: !7361)
!7384 = !DILocation(line: 5104, column: 19, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 5104, column: 19)
!7386 = !DILocation(line: 5104, column: 31, scope: !7385)
!7387 = !DILocation(line: 5104, column: 34, scope: !7385)
!7388 = !DILocation(line: 5104, column: 42, scope: !7385)
!7389 = !DILocation(line: 5104, column: 49, scope: !7385)
!7390 = !DILocation(line: 5104, column: 47, scope: !7385)
!7391 = !DILocation(line: 5104, column: 19, scope: !7361)
!7392 = !DILocation(line: 5106, column: 47, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 5105, column: 17)
!7394 = !DILocation(line: 5107, column: 49, scope: !7393)
!7395 = !DILocation(line: 5107, column: 61, scope: !7393)
!7396 = !DILocation(line: 5107, column: 64, scope: !7393)
!7397 = !DILocation(line: 5107, column: 72, scope: !7393)
!7398 = !DILocation(line: 5107, column: 47, scope: !7393)
!7399 = !DILocation(line: 5106, column: 19, scope: !7393)
!7400 = !DILocation(line: 5106, column: 31, scope: !7393)
!7401 = !DILocation(line: 5106, column: 34, scope: !7393)
!7402 = !DILocation(line: 5106, column: 43, scope: !7393)
!7403 = !{!6166, !2467, i64 8}
!7404 = !DILocation(line: 5108, column: 49, scope: !7393)
!7405 = !DILocation(line: 5108, column: 19, scope: !7393)
!7406 = !DILocation(line: 5108, column: 31, scope: !7393)
!7407 = !DILocation(line: 5108, column: 34, scope: !7393)
!7408 = !DILocation(line: 5108, column: 42, scope: !7393)
!7409 = !DILocation(line: 5108, column: 47, scope: !7393)
!7410 = !DILocation(line: 5109, column: 47, scope: !7393)
!7411 = !DILocation(line: 5109, column: 59, scope: !7393)
!7412 = !DILocation(line: 5109, column: 62, scope: !7393)
!7413 = !DILocation(line: 5110, column: 49, scope: !7393)
!7414 = !DILocation(line: 5110, column: 47, scope: !7393)
!7415 = !DILocation(line: 5109, column: 19, scope: !7393)
!7416 = !DILocation(line: 5109, column: 31, scope: !7393)
!7417 = !DILocation(line: 5109, column: 34, scope: !7393)
!7418 = !DILocation(line: 5109, column: 44, scope: !7393)
!7419 = !DILocation(line: 5111, column: 17, scope: !7393)
!7420 = !DILocation(line: 5112, column: 13, scope: !7361)
!7421 = !DILocation(line: 5113, column: 9, scope: !7355)
!7422 = !DILocation(line: 5095, column: 40, scope: !7349)
!7423 = !DILocation(line: 5095, column: 7, scope: !7349)
!7424 = distinct !{!7424, !7352, !7425}
!7425 = !DILocation(line: 5113, column: 9, scope: !7345)
!7426 = !DILocation(line: 5114, column: 5, scope: !7336)
!7427 = !DILocation(line: 5090, column: 43, scope: !7331)
!7428 = !DILocation(line: 5090, column: 3, scope: !7331)
!7429 = distinct !{!7429, !7334, !7430}
!7430 = !DILocation(line: 5114, column: 5, scope: !7328)
!7431 = !DILocation(line: 5117, column: 15, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5117, column: 3)
!7433 = !DILocation(line: 5117, column: 13, scope: !7432)
!7434 = !DILocation(line: 5117, column: 8, scope: !7432)
!7435 = !DILocation(line: 5117, column: 29, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 5117, column: 3)
!7437 = !DILocation(line: 5117, column: 27, scope: !7436)
!7438 = !DILocation(line: 5117, column: 3, scope: !7432)
!7439 = !DILocation(line: 5119, column: 11, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 5119, column: 11)
!7441 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 5118, column: 5)
!7442 = !DILocation(line: 5119, column: 23, scope: !7440)
!7443 = !DILocation(line: 5119, column: 28, scope: !7440)
!7444 = !DILocation(line: 5119, column: 33, scope: !7440)
!7445 = !DILocation(line: 5119, column: 11, scope: !7441)
!7446 = !DILocation(line: 5120, column: 9, scope: !7440)
!7447 = !DILocation(line: 5121, column: 5, scope: !7441)
!7448 = !DILocation(line: 5117, column: 35, scope: !7436)
!7449 = !DILocation(line: 5117, column: 3, scope: !7436)
!7450 = distinct !{!7450, !7438, !7451}
!7451 = !DILocation(line: 5121, column: 5, scope: !7432)
!7452 = !DILocation(line: 5123, column: 10, scope: !7316)
!7453 = !DILocation(line: 5123, column: 3, scope: !7316)
!7454 = distinct !DISubprogram(name: "length_of_file_name_and_frills", scope: !3, file: !3, line: 4813, type: !751, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7455 = !DILocalVariable(name: "f", arg: 1, scope: !7454, file: !3, line: 4813, type: !183)
!7456 = !DILocation(line: 4813, column: 56, scope: !7454)
!7457 = !DILocalVariable(name: "len", scope: !7454, file: !3, line: 4815, type: !149)
!7458 = !DILocation(line: 4815, column: 10, scope: !7454)
!7459 = !DILocalVariable(name: "buf", scope: !7454, file: !3, line: 4816, type: !622)
!7460 = !DILocation(line: 4816, column: 8, scope: !7454)
!7461 = !DILocation(line: 4818, column: 7, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4818, column: 7)
!7463 = !DILocation(line: 4818, column: 7, scope: !7454)
!7464 = !DILocation(line: 4819, column: 17, scope: !7462)
!7465 = !DILocation(line: 4819, column: 24, scope: !7462)
!7466 = !DILocation(line: 4820, column: 38, scope: !7462)
!7467 = !DILocation(line: 4820, column: 41, scope: !7462)
!7468 = !DILocation(line: 4820, column: 46, scope: !7462)
!7469 = !DILocation(line: 4820, column: 54, scope: !7462)
!7470 = !DILocation(line: 4820, column: 27, scope: !7462)
!7471 = !DILocation(line: 4820, column: 19, scope: !7462)
!7472 = !DILocation(line: 4821, column: 19, scope: !7462)
!7473 = !DILocation(line: 4819, column: 14, scope: !7462)
!7474 = !DILocation(line: 4819, column: 9, scope: !7462)
!7475 = !DILocation(line: 4819, column: 5, scope: !7462)
!7476 = !DILocation(line: 4823, column: 7, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4823, column: 7)
!7478 = !DILocation(line: 4823, column: 7, scope: !7454)
!7479 = !DILocation(line: 4824, column: 17, scope: !7477)
!7480 = !DILocation(line: 4824, column: 24, scope: !7477)
!7481 = !DILocation(line: 4825, column: 29, scope: !7477)
!7482 = !DILocation(line: 4825, column: 32, scope: !7477)
!7483 = !DILocation(line: 4825, column: 27, scope: !7477)
!7484 = !DILocation(line: 4826, column: 45, scope: !7477)
!7485 = !DILocation(line: 4826, column: 67, scope: !7477)
!7486 = !DILocation(line: 4827, column: 45, scope: !7477)
!7487 = !DILocation(line: 4828, column: 45, scope: !7477)
!7488 = !DILocation(line: 4826, column: 29, scope: !7477)
!7489 = !DILocation(line: 4825, column: 19, scope: !7477)
!7490 = !DILocation(line: 4829, column: 19, scope: !7477)
!7491 = !DILocation(line: 4824, column: 14, scope: !7477)
!7492 = !DILocation(line: 4824, column: 9, scope: !7477)
!7493 = !DILocation(line: 4824, column: 5, scope: !7477)
!7494 = !DILocation(line: 4831, column: 7, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4831, column: 7)
!7496 = !DILocation(line: 4831, column: 7, scope: !7454)
!7497 = !DILocation(line: 4832, column: 17, scope: !7495)
!7498 = !DILocation(line: 4832, column: 24, scope: !7495)
!7499 = !DILocation(line: 4832, column: 49, scope: !7495)
!7500 = !DILocation(line: 4832, column: 52, scope: !7495)
!7501 = !DILocation(line: 4832, column: 41, scope: !7495)
!7502 = !DILocation(line: 4832, column: 64, scope: !7495)
!7503 = !DILocation(line: 4832, column: 14, scope: !7495)
!7504 = !DILocation(line: 4832, column: 9, scope: !7495)
!7505 = !DILocation(line: 4832, column: 5, scope: !7495)
!7506 = !DILocation(line: 4834, column: 28, scope: !7454)
!7507 = !DILocation(line: 4834, column: 31, scope: !7454)
!7508 = !DILocation(line: 4834, column: 37, scope: !7454)
!7509 = !DILocation(line: 4834, column: 63, scope: !7454)
!7510 = !DILocation(line: 4834, column: 66, scope: !7454)
!7511 = !DILocation(line: 4834, column: 10, scope: !7454)
!7512 = !DILocation(line: 4834, column: 7, scope: !7454)
!7513 = !DILocation(line: 4836, column: 7, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4836, column: 7)
!7515 = !DILocation(line: 4836, column: 23, scope: !7514)
!7516 = !DILocation(line: 4836, column: 7, scope: !7454)
!7517 = !DILocalVariable(name: "c", scope: !7518, file: !3, line: 4838, type: !144)
!7518 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 4837, column: 5)
!7519 = !DILocation(line: 4838, column: 12, scope: !7518)
!7520 = !DILocation(line: 4838, column: 36, scope: !7518)
!7521 = !DILocation(line: 4838, column: 39, scope: !7518)
!7522 = !DILocation(line: 4838, column: 48, scope: !7518)
!7523 = !DILocation(line: 4838, column: 51, scope: !7518)
!7524 = !DILocation(line: 4838, column: 56, scope: !7518)
!7525 = !DILocation(line: 4838, column: 65, scope: !7518)
!7526 = !DILocation(line: 4838, column: 68, scope: !7518)
!7527 = !DILocation(line: 4838, column: 16, scope: !7518)
!7528 = !DILocation(line: 4839, column: 15, scope: !7518)
!7529 = !DILocation(line: 4839, column: 17, scope: !7518)
!7530 = !DILocation(line: 4839, column: 14, scope: !7518)
!7531 = !DILocation(line: 4839, column: 11, scope: !7518)
!7532 = !DILocation(line: 4840, column: 5, scope: !7518)
!7533 = !DILocation(line: 4842, column: 10, scope: !7454)
!7534 = !DILocation(line: 4842, column: 3, scope: !7454)
!7535 = distinct !DISubprogram(name: "indent", scope: !3, file: !3, line: 4964, type: !765, scopeLine: 4965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7536 = !DILocalVariable(name: "from", arg: 1, scope: !7535, file: !3, line: 4964, type: !149)
!7537 = !DILocation(line: 4964, column: 16, scope: !7535)
!7538 = !DILocalVariable(name: "to", arg: 2, scope: !7535, file: !3, line: 4964, type: !149)
!7539 = !DILocation(line: 4964, column: 29, scope: !7535)
!7540 = !DILocation(line: 4966, column: 3, scope: !7535)
!7541 = !DILocation(line: 4966, column: 10, scope: !7535)
!7542 = !DILocation(line: 4966, column: 17, scope: !7535)
!7543 = !DILocation(line: 4966, column: 15, scope: !7535)
!7544 = !DILocation(line: 4968, column: 11, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 4968, column: 11)
!7546 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 4967, column: 5)
!7547 = !DILocation(line: 4968, column: 19, scope: !7545)
!7548 = !DILocation(line: 4968, column: 24, scope: !7545)
!7549 = !DILocation(line: 4968, column: 27, scope: !7545)
!7550 = !DILocation(line: 4968, column: 32, scope: !7545)
!7551 = !DILocation(line: 4968, column: 30, scope: !7545)
!7552 = !DILocation(line: 4968, column: 43, scope: !7545)
!7553 = !DILocation(line: 4968, column: 48, scope: !7545)
!7554 = !DILocation(line: 4968, column: 55, scope: !7545)
!7555 = !DILocation(line: 4968, column: 53, scope: !7545)
!7556 = !DILocation(line: 4968, column: 40, scope: !7545)
!7557 = !DILocation(line: 4968, column: 11, scope: !7546)
!7558 = !DILocation(line: 4970, column: 11, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4969, column: 9)
!7560 = !DILocation(line: 4971, column: 19, scope: !7559)
!7561 = !DILocation(line: 4971, column: 29, scope: !7559)
!7562 = !DILocation(line: 4971, column: 36, scope: !7559)
!7563 = !DILocation(line: 4971, column: 34, scope: !7559)
!7564 = !DILocation(line: 4971, column: 27, scope: !7559)
!7565 = !DILocation(line: 4971, column: 16, scope: !7559)
!7566 = !DILocation(line: 4972, column: 9, scope: !7559)
!7567 = !DILocation(line: 4975, column: 11, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4974, column: 9)
!7569 = !DILocation(line: 4976, column: 15, scope: !7568)
!7570 = distinct !{!7570, !7540, !7571}
!7571 = !DILocation(line: 4978, column: 5, scope: !7535)
!7572 = !DILocation(line: 4979, column: 1, scope: !7535)
!7573 = distinct !DISubprogram(name: "quote_name_width", scope: !3, file: !3, line: 4432, type: !753, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7574 = !DILocalVariable(name: "name", arg: 1, scope: !7573, file: !3, line: 4432, type: !146)
!7575 = !DILocation(line: 4432, column: 31, scope: !7573)
!7576 = !DILocalVariable(name: "options", arg: 2, scope: !7573, file: !3, line: 4432, type: !633)
!7577 = !DILocation(line: 4432, column: 67, scope: !7573)
!7578 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !7573, file: !3, line: 4433, type: !27)
!7579 = !DILocation(line: 4433, column: 23, scope: !7573)
!7580 = !DILocalVariable(name: "smallbuf", scope: !7573, file: !3, line: 4435, type: !635)
!7581 = !DILocation(line: 4435, column: 8, scope: !7573)
!7582 = !DILocalVariable(name: "buf", scope: !7573, file: !3, line: 4436, type: !143)
!7583 = !DILocation(line: 4436, column: 9, scope: !7573)
!7584 = !DILocation(line: 4436, column: 15, scope: !7573)
!7585 = !DILocalVariable(name: "width", scope: !7573, file: !3, line: 4437, type: !149)
!7586 = !DILocation(line: 4437, column: 10, scope: !7573)
!7587 = !DILocalVariable(name: "pad", scope: !7573, file: !3, line: 4438, type: !141)
!7588 = !DILocation(line: 4438, column: 8, scope: !7573)
!7589 = !DILocation(line: 4440, column: 51, scope: !7573)
!7590 = !DILocation(line: 4440, column: 57, scope: !7573)
!7591 = !DILocation(line: 4441, column: 19, scope: !7573)
!7592 = !DILocation(line: 4440, column: 3, scope: !7573)
!7593 = !DILocation(line: 4443, column: 7, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 4443, column: 7)
!7595 = !DILocation(line: 4443, column: 14, scope: !7594)
!7596 = !DILocation(line: 4443, column: 11, scope: !7594)
!7597 = !DILocation(line: 4443, column: 23, scope: !7594)
!7598 = !DILocation(line: 4443, column: 26, scope: !7594)
!7599 = !DILocation(line: 4443, column: 33, scope: !7594)
!7600 = !DILocation(line: 4443, column: 30, scope: !7594)
!7601 = !DILocation(line: 4443, column: 7, scope: !7573)
!7602 = !DILocation(line: 4444, column: 11, scope: !7594)
!7603 = !DILocation(line: 4444, column: 5, scope: !7594)
!7604 = !DILocation(line: 4446, column: 12, scope: !7573)
!7605 = !DILocation(line: 4446, column: 9, scope: !7573)
!7606 = !DILocation(line: 4448, column: 10, scope: !7573)
!7607 = !DILocation(line: 4448, column: 3, scope: !7573)
!7608 = !DILocalVariable(name: "i", scope: !1028, file: !3, line: 5011, type: !149)
!7609 = !DILocation(line: 5011, column: 10, scope: !1028)
!7610 = !DILocalVariable(name: "max_cols", scope: !1028, file: !3, line: 5012, type: !149)
!7611 = !DILocation(line: 5012, column: 10, scope: !1028)
!7612 = !DILocation(line: 5012, column: 21, scope: !1028)
!7613 = !DILocation(line: 5017, column: 7, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 5017, column: 7)
!7615 = !DILocation(line: 5017, column: 27, scope: !7614)
!7616 = !DILocation(line: 5017, column: 25, scope: !7614)
!7617 = !DILocation(line: 5017, column: 7, scope: !1028)
!7618 = !DILocalVariable(name: "new_column_info_alloc", scope: !7619, file: !3, line: 5019, type: !149)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 5018, column: 5)
!7620 = !DILocation(line: 5019, column: 14, scope: !7619)
!7621 = !DILocalVariable(name: "p", scope: !7619, file: !3, line: 5020, type: !148)
!7622 = !DILocation(line: 5020, column: 15, scope: !7619)
!7623 = !DILocation(line: 5022, column: 11, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5022, column: 11)
!7625 = !DILocation(line: 5022, column: 22, scope: !7624)
!7626 = !DILocation(line: 5022, column: 30, scope: !7624)
!7627 = !DILocation(line: 5022, column: 20, scope: !7624)
!7628 = !DILocation(line: 5022, column: 11, scope: !7619)
!7629 = !DILocation(line: 5029, column: 36, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 5023, column: 9)
!7631 = !DILocation(line: 5029, column: 49, scope: !7630)
!7632 = !DILocation(line: 5029, column: 25, scope: !7630)
!7633 = !DILocation(line: 5029, column: 23, scope: !7630)
!7634 = !DILocation(line: 5031, column: 39, scope: !7630)
!7635 = !DILocation(line: 5031, column: 37, scope: !7630)
!7636 = !DILocation(line: 5031, column: 33, scope: !7630)
!7637 = !DILocation(line: 5032, column: 9, scope: !7630)
!7638 = !DILocation(line: 5035, column: 36, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 5034, column: 9)
!7640 = !DILocation(line: 5035, column: 49, scope: !7639)
!7641 = !DILocation(line: 5035, column: 25, scope: !7639)
!7642 = !DILocation(line: 5035, column: 23, scope: !7639)
!7643 = !DILocation(line: 5036, column: 35, scope: !7639)
!7644 = !DILocation(line: 5036, column: 33, scope: !7639)
!7645 = !DILocalVariable(name: "column_info_growth", scope: !7646, file: !3, line: 5044, type: !149)
!7646 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5043, column: 7)
!7647 = !DILocation(line: 5044, column: 16, scope: !7646)
!7648 = !DILocation(line: 5044, column: 37, scope: !7646)
!7649 = !DILocation(line: 5044, column: 61, scope: !7646)
!7650 = !DILocation(line: 5044, column: 59, scope: !7646)
!7651 = !DILocalVariable(name: "s", scope: !7646, file: !3, line: 5045, type: !149)
!7652 = !DILocation(line: 5045, column: 16, scope: !7646)
!7653 = !DILocation(line: 5045, column: 20, scope: !7646)
!7654 = !DILocation(line: 5045, column: 38, scope: !7646)
!7655 = !DILocation(line: 5045, column: 44, scope: !7646)
!7656 = !DILocation(line: 5045, column: 42, scope: !7646)
!7657 = !DILocalVariable(name: "t", scope: !7646, file: !3, line: 5046, type: !149)
!7658 = !DILocation(line: 5046, column: 16, scope: !7646)
!7659 = !DILocation(line: 5046, column: 20, scope: !7646)
!7660 = !DILocation(line: 5046, column: 24, scope: !7646)
!7661 = !DILocation(line: 5046, column: 22, scope: !7646)
!7662 = !DILocation(line: 5047, column: 13, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 5047, column: 13)
!7664 = !DILocation(line: 5047, column: 17, scope: !7663)
!7665 = !DILocation(line: 5047, column: 15, scope: !7663)
!7666 = !DILocation(line: 5047, column: 39, scope: !7663)
!7667 = !DILocation(line: 5047, column: 42, scope: !7663)
!7668 = !DILocation(line: 5047, column: 46, scope: !7663)
!7669 = !DILocation(line: 5047, column: 44, scope: !7663)
!7670 = !DILocation(line: 5047, column: 68, scope: !7663)
!7671 = !DILocation(line: 5047, column: 65, scope: !7663)
!7672 = !DILocation(line: 5047, column: 13, scope: !7646)
!7673 = !DILocation(line: 5048, column: 11, scope: !7663)
!7674 = !DILocation(line: 5049, column: 23, scope: !7646)
!7675 = !DILocation(line: 5049, column: 25, scope: !7646)
!7676 = !DILocation(line: 5049, column: 13, scope: !7646)
!7677 = !DILocation(line: 5049, column: 11, scope: !7646)
!7678 = !DILocation(line: 5053, column: 16, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5053, column: 7)
!7680 = !DILocation(line: 5053, column: 14, scope: !7679)
!7681 = !DILocation(line: 5053, column: 12, scope: !7679)
!7682 = !DILocation(line: 5053, column: 35, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 5053, column: 7)
!7684 = !DILocation(line: 5053, column: 39, scope: !7683)
!7685 = !DILocation(line: 5053, column: 37, scope: !7683)
!7686 = !DILocation(line: 5053, column: 7, scope: !7679)
!7687 = !DILocation(line: 5055, column: 36, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 5054, column: 9)
!7689 = !DILocation(line: 5055, column: 11, scope: !7688)
!7690 = !DILocation(line: 5055, column: 23, scope: !7688)
!7691 = !DILocation(line: 5055, column: 26, scope: !7688)
!7692 = !DILocation(line: 5055, column: 34, scope: !7688)
!7693 = !DILocation(line: 5056, column: 16, scope: !7688)
!7694 = !DILocation(line: 5056, column: 18, scope: !7688)
!7695 = !DILocation(line: 5056, column: 13, scope: !7688)
!7696 = !DILocation(line: 5057, column: 9, scope: !7688)
!7697 = !DILocation(line: 5053, column: 63, scope: !7683)
!7698 = !DILocation(line: 5053, column: 7, scope: !7683)
!7699 = distinct !{!7699, !7686, !7700}
!7700 = !DILocation(line: 5057, column: 9, scope: !7679)
!7701 = !DILocation(line: 5059, column: 27, scope: !7619)
!7702 = !DILocation(line: 5059, column: 25, scope: !7619)
!7703 = !DILocation(line: 5060, column: 5, scope: !7619)
!7704 = !DILocation(line: 5062, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 5062, column: 3)
!7706 = !DILocation(line: 5062, column: 8, scope: !7705)
!7707 = !DILocation(line: 5062, column: 15, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 5062, column: 3)
!7709 = !DILocation(line: 5062, column: 19, scope: !7708)
!7710 = !DILocation(line: 5062, column: 17, scope: !7708)
!7711 = !DILocation(line: 5062, column: 3, scope: !7705)
!7712 = !DILocalVariable(name: "j", scope: !7713, file: !3, line: 5064, type: !149)
!7713 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 5063, column: 5)
!7714 = !DILocation(line: 5064, column: 14, scope: !7713)
!7715 = !DILocation(line: 5066, column: 7, scope: !7713)
!7716 = !DILocation(line: 5066, column: 19, scope: !7713)
!7717 = !DILocation(line: 5066, column: 22, scope: !7713)
!7718 = !DILocation(line: 5066, column: 32, scope: !7713)
!7719 = !DILocation(line: 5067, column: 34, scope: !7713)
!7720 = !DILocation(line: 5067, column: 36, scope: !7713)
!7721 = !DILocation(line: 5067, column: 41, scope: !7713)
!7722 = !DILocation(line: 5067, column: 7, scope: !7713)
!7723 = !DILocation(line: 5067, column: 19, scope: !7713)
!7724 = !DILocation(line: 5067, column: 22, scope: !7713)
!7725 = !DILocation(line: 5067, column: 31, scope: !7713)
!7726 = !DILocation(line: 5068, column: 14, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 5068, column: 7)
!7728 = !DILocation(line: 5068, column: 12, scope: !7727)
!7729 = !DILocation(line: 5068, column: 19, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 5068, column: 7)
!7731 = !DILocation(line: 5068, column: 24, scope: !7730)
!7732 = !DILocation(line: 5068, column: 21, scope: !7730)
!7733 = !DILocation(line: 5068, column: 7, scope: !7727)
!7734 = !DILocation(line: 5069, column: 9, scope: !7730)
!7735 = !DILocation(line: 5069, column: 21, scope: !7730)
!7736 = !DILocation(line: 5069, column: 24, scope: !7730)
!7737 = !DILocation(line: 5069, column: 32, scope: !7730)
!7738 = !DILocation(line: 5069, column: 35, scope: !7730)
!7739 = !DILocation(line: 5068, column: 27, scope: !7730)
!7740 = !DILocation(line: 5068, column: 7, scope: !7730)
!7741 = distinct !{!7741, !7733, !7742}
!7742 = !DILocation(line: 5069, column: 37, scope: !7727)
!7743 = !DILocation(line: 5070, column: 5, scope: !7713)
!7744 = !DILocation(line: 5062, column: 29, scope: !7708)
!7745 = !DILocation(line: 5062, column: 3, scope: !7708)
!7746 = distinct !{!7746, !7711, !7747}
!7747 = !DILocation(line: 5070, column: 5, scope: !7705)
!7748 = !DILocation(line: 5071, column: 1, scope: !1028)
!7749 = distinct !DISubprogram(name: "is_directory", scope: !3, file: !3, line: 3435, type: !702, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7750 = !DILocalVariable(name: "f", arg: 1, scope: !7749, file: !3, line: 3435, type: !183)
!7751 = !DILocation(line: 3435, column: 38, scope: !7749)
!7752 = !DILocation(line: 3437, column: 10, scope: !7749)
!7753 = !DILocation(line: 3437, column: 13, scope: !7749)
!7754 = !DILocation(line: 3437, column: 22, scope: !7749)
!7755 = !DILocation(line: 3437, column: 35, scope: !7749)
!7756 = !DILocation(line: 3437, column: 38, scope: !7749)
!7757 = !DILocation(line: 3437, column: 41, scope: !7749)
!7758 = !DILocation(line: 3437, column: 50, scope: !7749)
!7759 = !DILocation(line: 3437, column: 3, scope: !7749)
!7760 = distinct !DISubprogram(name: "basename_is_dot_or_dotdot", scope: !3, file: !3, line: 3497, type: !568, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7761 = !DILocalVariable(name: "name", arg: 1, scope: !7760, file: !3, line: 3497, type: !146)
!7762 = !DILocation(line: 3497, column: 40, scope: !7760)
!7763 = !DILocalVariable(name: "base", scope: !7760, file: !3, line: 3499, type: !146)
!7764 = !DILocation(line: 3499, column: 15, scope: !7760)
!7765 = !DILocation(line: 3499, column: 38, scope: !7760)
!7766 = !DILocation(line: 3499, column: 22, scope: !7760)
!7767 = !DILocation(line: 3500, column: 25, scope: !7760)
!7768 = !DILocation(line: 3500, column: 10, scope: !7760)
!7769 = !DILocation(line: 3500, column: 3, scope: !7760)
!7770 = distinct !DISubprogram(name: "free_ent", scope: !3, file: !3, line: 2974, type: !664, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7771 = !DILocalVariable(name: "f", arg: 1, scope: !7770, file: !3, line: 2974, type: !252)
!7772 = !DILocation(line: 2974, column: 28, scope: !7770)
!7773 = !DILocation(line: 2976, column: 9, scope: !7770)
!7774 = !DILocation(line: 2976, column: 12, scope: !7770)
!7775 = !DILocation(line: 2976, column: 3, scope: !7770)
!7776 = !DILocation(line: 2977, column: 9, scope: !7770)
!7777 = !DILocation(line: 2977, column: 12, scope: !7770)
!7778 = !DILocation(line: 2977, column: 3, scope: !7770)
!7779 = !DILocation(line: 2978, column: 9, scope: !7770)
!7780 = !DILocation(line: 2978, column: 12, scope: !7770)
!7781 = !DILocation(line: 2978, column: 3, scope: !7770)
!7782 = !DILocation(line: 2979, column: 7, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 2979, column: 7)
!7784 = !DILocation(line: 2979, column: 10, scope: !7783)
!7785 = !DILocation(line: 2979, column: 19, scope: !7783)
!7786 = !DILocation(line: 2979, column: 7, scope: !7770)
!7787 = !DILocation(line: 2981, column: 11, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2981, column: 11)
!7789 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 2980, column: 5)
!7790 = !DILocation(line: 2981, column: 11, scope: !7789)
!7791 = !DILocation(line: 2982, column: 15, scope: !7788)
!7792 = !DILocation(line: 2982, column: 18, scope: !7788)
!7793 = !DILocation(line: 2982, column: 9, scope: !7788)
!7794 = !DILocation(line: 2984, column: 18, scope: !7788)
!7795 = !DILocation(line: 2984, column: 21, scope: !7788)
!7796 = !DILocation(line: 2984, column: 9, scope: !7788)
!7797 = !DILocation(line: 2985, column: 5, scope: !7789)
!7798 = !DILocation(line: 2986, column: 1, scope: !7770)
!7799 = distinct !DISubprogram(name: "is_smack_enabled", scope: !7800, file: !7800, line: 39, type: !602, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7800 = !DIFile(filename: "./lib/smack.h", directory: "/home/mbarbar/clone/coreutils")
!7801 = !DILocation(line: 44, column: 3, scope: !7799)
!7802 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !810, file: !810, line: 265, type: !568, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7803 = !DILocalVariable(name: "file_name", arg: 1, scope: !7802, file: !810, line: 265, type: !146)
!7804 = !DILocation(line: 265, column: 28, scope: !7802)
!7805 = !DILocation(line: 267, column: 7, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !810, line: 267, column: 7)
!7807 = !DILocation(line: 267, column: 20, scope: !7806)
!7808 = !DILocation(line: 267, column: 7, scope: !7802)
!7809 = !DILocalVariable(name: "sep", scope: !7810, file: !810, line: 269, type: !144)
!7810 = distinct !DILexicalBlock(scope: !7806, file: !810, line: 268, column: 5)
!7811 = !DILocation(line: 269, column: 12, scope: !7810)
!7812 = !DILocation(line: 269, column: 18, scope: !7810)
!7813 = !DILocation(line: 269, column: 29, scope: !7810)
!7814 = !DILocation(line: 269, column: 42, scope: !7810)
!7815 = !DILocation(line: 269, column: 50, scope: !7810)
!7816 = !DILocation(line: 270, column: 17, scope: !7810)
!7817 = !DILocation(line: 270, column: 21, scope: !7810)
!7818 = !DILocation(line: 270, column: 24, scope: !7810)
!7819 = !DILocation(line: 270, column: 7, scope: !7810)
!7820 = !DILocation(line: 273, column: 5, scope: !7806)
!7821 = !DILocation(line: 274, column: 1, scope: !7802)
!7822 = distinct !DISubprogram(name: "initialize_ordering_vector", scope: !3, file: !3, line: 3783, type: !341, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7823 = !DILocalVariable(name: "i", scope: !7824, file: !3, line: 3785, type: !149)
!7824 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 3785, column: 3)
!7825 = !DILocation(line: 3785, column: 15, scope: !7824)
!7826 = !DILocation(line: 3785, column: 8, scope: !7824)
!7827 = !DILocation(line: 3785, column: 22, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 3785, column: 3)
!7829 = !DILocation(line: 3785, column: 26, scope: !7828)
!7830 = !DILocation(line: 3785, column: 24, scope: !7828)
!7831 = !DILocation(line: 3785, column: 3, scope: !7824)
!7832 = !DILocation(line: 3786, column: 23, scope: !7828)
!7833 = !DILocation(line: 3786, column: 32, scope: !7828)
!7834 = !DILocation(line: 3786, column: 22, scope: !7828)
!7835 = !DILocation(line: 3786, column: 5, scope: !7828)
!7836 = !DILocation(line: 3786, column: 17, scope: !7828)
!7837 = !DILocation(line: 3786, column: 20, scope: !7828)
!7838 = !DILocation(line: 3785, column: 39, scope: !7828)
!7839 = !DILocation(line: 3785, column: 3, scope: !7828)
!7840 = distinct !{!7840, !7831, !7841}
!7841 = !DILocation(line: 3786, column: 33, scope: !7824)
!7842 = !DILocation(line: 3787, column: 1, scope: !7822)
!7843 = distinct !DISubprogram(name: "xstrcoll_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7844 = !DILocalVariable(name: "a", arg: 1, scope: !7843, file: !3, line: 3691, type: !721)
!7845 = !DILocation(line: 3691, column: 1, scope: !7843)
!7846 = !DILocalVariable(name: "b", arg: 2, scope: !7843, file: !3, line: 3691, type: !721)
!7847 = distinct !DISubprogram(name: "xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7848 = !DILocalVariable(name: "a", arg: 1, scope: !7847, file: !3, line: 3691, type: !721)
!7849 = !DILocation(line: 3691, column: 1, scope: !7847)
!7850 = !DILocalVariable(name: "b", arg: 2, scope: !7847, file: !3, line: 3691, type: !721)
!7851 = !DILocalVariable(name: "a_is_dir", scope: !7852, file: !3, line: 3691, type: !141)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3691, column: 1)
!7853 = !DILocation(line: 3691, column: 1, scope: !7852)
!7854 = !DILocalVariable(name: "b_is_dir", scope: !7852, file: !3, line: 3691, type: !141)
!7855 = !DILocation(line: 3691, column: 1, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3691, column: 1)
!7857 = !DILocation(line: 3691, column: 1, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3691, column: 1)
!7859 = distinct !DISubprogram(name: "rev_xstrcoll_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7860 = !DILocalVariable(name: "a", arg: 1, scope: !7859, file: !3, line: 3691, type: !721)
!7861 = !DILocation(line: 3691, column: 1, scope: !7859)
!7862 = !DILocalVariable(name: "b", arg: 2, scope: !7859, file: !3, line: 3691, type: !721)
!7863 = distinct !DISubprogram(name: "rev_xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7864 = !DILocalVariable(name: "a", arg: 1, scope: !7863, file: !3, line: 3691, type: !721)
!7865 = !DILocation(line: 3691, column: 1, scope: !7863)
!7866 = !DILocalVariable(name: "b", arg: 2, scope: !7863, file: !3, line: 3691, type: !721)
!7867 = !DILocalVariable(name: "a_is_dir", scope: !7868, file: !3, line: 3691, type: !141)
!7868 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 3691, column: 1)
!7869 = !DILocation(line: 3691, column: 1, scope: !7868)
!7870 = !DILocalVariable(name: "b_is_dir", scope: !7868, file: !3, line: 3691, type: !141)
!7871 = !DILocation(line: 3691, column: 1, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3691, column: 1)
!7873 = !DILocation(line: 3691, column: 1, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3691, column: 1)
!7875 = distinct !DISubprogram(name: "strcmp_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7876 = !DILocalVariable(name: "a", arg: 1, scope: !7875, file: !3, line: 3691, type: !721)
!7877 = !DILocation(line: 3691, column: 1, scope: !7875)
!7878 = !DILocalVariable(name: "b", arg: 2, scope: !7875, file: !3, line: 3691, type: !721)
!7879 = distinct !DISubprogram(name: "strcmp_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7880 = !DILocalVariable(name: "a", arg: 1, scope: !7879, file: !3, line: 3691, type: !721)
!7881 = !DILocation(line: 3691, column: 1, scope: !7879)
!7882 = !DILocalVariable(name: "b", arg: 2, scope: !7879, file: !3, line: 3691, type: !721)
!7883 = !DILocalVariable(name: "a_is_dir", scope: !7884, file: !3, line: 3691, type: !141)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 3691, column: 1)
!7885 = !DILocation(line: 3691, column: 1, scope: !7884)
!7886 = !DILocalVariable(name: "b_is_dir", scope: !7884, file: !3, line: 3691, type: !141)
!7887 = !DILocation(line: 3691, column: 1, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 3691, column: 1)
!7889 = !DILocation(line: 3691, column: 1, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 3691, column: 1)
!7891 = distinct !DISubprogram(name: "rev_strcmp_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7892 = !DILocalVariable(name: "a", arg: 1, scope: !7891, file: !3, line: 3691, type: !721)
!7893 = !DILocation(line: 3691, column: 1, scope: !7891)
!7894 = !DILocalVariable(name: "b", arg: 2, scope: !7891, file: !3, line: 3691, type: !721)
!7895 = distinct !DISubprogram(name: "rev_strcmp_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7896 = !DILocalVariable(name: "a", arg: 1, scope: !7895, file: !3, line: 3691, type: !721)
!7897 = !DILocation(line: 3691, column: 1, scope: !7895)
!7898 = !DILocalVariable(name: "b", arg: 2, scope: !7895, file: !3, line: 3691, type: !721)
!7899 = !DILocalVariable(name: "a_is_dir", scope: !7900, file: !3, line: 3691, type: !141)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3691, column: 1)
!7901 = !DILocation(line: 3691, column: 1, scope: !7900)
!7902 = !DILocalVariable(name: "b_is_dir", scope: !7900, file: !3, line: 3691, type: !141)
!7903 = !DILocation(line: 3691, column: 1, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 3691, column: 1)
!7905 = !DILocation(line: 3691, column: 1, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 3691, column: 1)
!7907 = distinct !DISubprogram(name: "xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7908 = !DILocalVariable(name: "a", arg: 1, scope: !7907, file: !3, line: 3692, type: !721)
!7909 = !DILocation(line: 3692, column: 1, scope: !7907)
!7910 = !DILocalVariable(name: "b", arg: 2, scope: !7907, file: !3, line: 3692, type: !721)
!7911 = distinct !DISubprogram(name: "xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7912 = !DILocalVariable(name: "a", arg: 1, scope: !7911, file: !3, line: 3692, type: !721)
!7913 = !DILocation(line: 3692, column: 1, scope: !7911)
!7914 = !DILocalVariable(name: "b", arg: 2, scope: !7911, file: !3, line: 3692, type: !721)
!7915 = !DILocalVariable(name: "a_is_dir", scope: !7916, file: !3, line: 3692, type: !141)
!7916 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 3692, column: 1)
!7917 = !DILocation(line: 3692, column: 1, scope: !7916)
!7918 = !DILocalVariable(name: "b_is_dir", scope: !7916, file: !3, line: 3692, type: !141)
!7919 = !DILocation(line: 3692, column: 1, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 3692, column: 1)
!7921 = !DILocation(line: 3692, column: 1, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 3692, column: 1)
!7923 = distinct !DISubprogram(name: "rev_xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7924 = !DILocalVariable(name: "a", arg: 1, scope: !7923, file: !3, line: 3692, type: !721)
!7925 = !DILocation(line: 3692, column: 1, scope: !7923)
!7926 = !DILocalVariable(name: "b", arg: 2, scope: !7923, file: !3, line: 3692, type: !721)
!7927 = distinct !DISubprogram(name: "rev_xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7928 = !DILocalVariable(name: "a", arg: 1, scope: !7927, file: !3, line: 3692, type: !721)
!7929 = !DILocation(line: 3692, column: 1, scope: !7927)
!7930 = !DILocalVariable(name: "b", arg: 2, scope: !7927, file: !3, line: 3692, type: !721)
!7931 = !DILocalVariable(name: "a_is_dir", scope: !7932, file: !3, line: 3692, type: !141)
!7932 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 3692, column: 1)
!7933 = !DILocation(line: 3692, column: 1, scope: !7932)
!7934 = !DILocalVariable(name: "b_is_dir", scope: !7932, file: !3, line: 3692, type: !141)
!7935 = !DILocation(line: 3692, column: 1, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 3692, column: 1)
!7937 = !DILocation(line: 3692, column: 1, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 3692, column: 1)
!7939 = distinct !DISubprogram(name: "strcmp_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7940 = !DILocalVariable(name: "a", arg: 1, scope: !7939, file: !3, line: 3692, type: !721)
!7941 = !DILocation(line: 3692, column: 1, scope: !7939)
!7942 = !DILocalVariable(name: "b", arg: 2, scope: !7939, file: !3, line: 3692, type: !721)
!7943 = distinct !DISubprogram(name: "strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7944 = !DILocalVariable(name: "a", arg: 1, scope: !7943, file: !3, line: 3692, type: !721)
!7945 = !DILocation(line: 3692, column: 1, scope: !7943)
!7946 = !DILocalVariable(name: "b", arg: 2, scope: !7943, file: !3, line: 3692, type: !721)
!7947 = !DILocalVariable(name: "a_is_dir", scope: !7948, file: !3, line: 3692, type: !141)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 3692, column: 1)
!7949 = !DILocation(line: 3692, column: 1, scope: !7948)
!7950 = !DILocalVariable(name: "b_is_dir", scope: !7948, file: !3, line: 3692, type: !141)
!7951 = !DILocation(line: 3692, column: 1, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 3692, column: 1)
!7953 = !DILocation(line: 3692, column: 1, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 3692, column: 1)
!7955 = distinct !DISubprogram(name: "rev_strcmp_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7956 = !DILocalVariable(name: "a", arg: 1, scope: !7955, file: !3, line: 3692, type: !721)
!7957 = !DILocation(line: 3692, column: 1, scope: !7955)
!7958 = !DILocalVariable(name: "b", arg: 2, scope: !7955, file: !3, line: 3692, type: !721)
!7959 = distinct !DISubprogram(name: "rev_strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7960 = !DILocalVariable(name: "a", arg: 1, scope: !7959, file: !3, line: 3692, type: !721)
!7961 = !DILocation(line: 3692, column: 1, scope: !7959)
!7962 = !DILocalVariable(name: "b", arg: 2, scope: !7959, file: !3, line: 3692, type: !721)
!7963 = !DILocalVariable(name: "a_is_dir", scope: !7964, file: !3, line: 3692, type: !141)
!7964 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 3692, column: 1)
!7965 = !DILocation(line: 3692, column: 1, scope: !7964)
!7966 = !DILocalVariable(name: "b_is_dir", scope: !7964, file: !3, line: 3692, type: !141)
!7967 = !DILocation(line: 3692, column: 1, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3692, column: 1)
!7969 = !DILocation(line: 3692, column: 1, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3692, column: 1)
!7971 = distinct !DISubprogram(name: "xstrcoll_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7972 = !DILocalVariable(name: "a", arg: 1, scope: !7971, file: !3, line: 3690, type: !721)
!7973 = !DILocation(line: 3690, column: 1, scope: !7971)
!7974 = !DILocalVariable(name: "b", arg: 2, scope: !7971, file: !3, line: 3690, type: !721)
!7975 = distinct !DISubprogram(name: "xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7976 = !DILocalVariable(name: "a", arg: 1, scope: !7975, file: !3, line: 3690, type: !721)
!7977 = !DILocation(line: 3690, column: 1, scope: !7975)
!7978 = !DILocalVariable(name: "b", arg: 2, scope: !7975, file: !3, line: 3690, type: !721)
!7979 = !DILocalVariable(name: "a_is_dir", scope: !7980, file: !3, line: 3690, type: !141)
!7980 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 3690, column: 1)
!7981 = !DILocation(line: 3690, column: 1, scope: !7980)
!7982 = !DILocalVariable(name: "b_is_dir", scope: !7980, file: !3, line: 3690, type: !141)
!7983 = !DILocation(line: 3690, column: 1, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 3690, column: 1)
!7985 = !DILocation(line: 3690, column: 1, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 3690, column: 1)
!7987 = distinct !DISubprogram(name: "rev_xstrcoll_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7988 = !DILocalVariable(name: "a", arg: 1, scope: !7987, file: !3, line: 3690, type: !721)
!7989 = !DILocation(line: 3690, column: 1, scope: !7987)
!7990 = !DILocalVariable(name: "b", arg: 2, scope: !7987, file: !3, line: 3690, type: !721)
!7991 = distinct !DISubprogram(name: "rev_xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7992 = !DILocalVariable(name: "a", arg: 1, scope: !7991, file: !3, line: 3690, type: !721)
!7993 = !DILocation(line: 3690, column: 1, scope: !7991)
!7994 = !DILocalVariable(name: "b", arg: 2, scope: !7991, file: !3, line: 3690, type: !721)
!7995 = !DILocalVariable(name: "a_is_dir", scope: !7996, file: !3, line: 3690, type: !141)
!7996 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 3690, column: 1)
!7997 = !DILocation(line: 3690, column: 1, scope: !7996)
!7998 = !DILocalVariable(name: "b_is_dir", scope: !7996, file: !3, line: 3690, type: !141)
!7999 = !DILocation(line: 3690, column: 1, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3690, column: 1)
!8001 = !DILocation(line: 3690, column: 1, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3690, column: 1)
!8003 = distinct !DISubprogram(name: "strcmp_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8004 = !DILocalVariable(name: "a", arg: 1, scope: !8003, file: !3, line: 3690, type: !721)
!8005 = !DILocation(line: 3690, column: 1, scope: !8003)
!8006 = !DILocalVariable(name: "b", arg: 2, scope: !8003, file: !3, line: 3690, type: !721)
!8007 = distinct !DISubprogram(name: "strcmp_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8008 = !DILocalVariable(name: "a", arg: 1, scope: !8007, file: !3, line: 3690, type: !721)
!8009 = !DILocation(line: 3690, column: 1, scope: !8007)
!8010 = !DILocalVariable(name: "b", arg: 2, scope: !8007, file: !3, line: 3690, type: !721)
!8011 = !DILocalVariable(name: "a_is_dir", scope: !8012, file: !3, line: 3690, type: !141)
!8012 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3690, column: 1)
!8013 = !DILocation(line: 3690, column: 1, scope: !8012)
!8014 = !DILocalVariable(name: "b_is_dir", scope: !8012, file: !3, line: 3690, type: !141)
!8015 = !DILocation(line: 3690, column: 1, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3690, column: 1)
!8017 = !DILocation(line: 3690, column: 1, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3690, column: 1)
!8019 = distinct !DISubprogram(name: "rev_strcmp_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8020 = !DILocalVariable(name: "a", arg: 1, scope: !8019, file: !3, line: 3690, type: !721)
!8021 = !DILocation(line: 3690, column: 1, scope: !8019)
!8022 = !DILocalVariable(name: "b", arg: 2, scope: !8019, file: !3, line: 3690, type: !721)
!8023 = distinct !DISubprogram(name: "rev_strcmp_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8024 = !DILocalVariable(name: "a", arg: 1, scope: !8023, file: !3, line: 3690, type: !721)
!8025 = !DILocation(line: 3690, column: 1, scope: !8023)
!8026 = !DILocalVariable(name: "b", arg: 2, scope: !8023, file: !3, line: 3690, type: !721)
!8027 = !DILocalVariable(name: "a_is_dir", scope: !8028, file: !3, line: 3690, type: !141)
!8028 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 3690, column: 1)
!8029 = !DILocation(line: 3690, column: 1, scope: !8028)
!8030 = !DILocalVariable(name: "b_is_dir", scope: !8028, file: !3, line: 3690, type: !141)
!8031 = !DILocation(line: 3690, column: 1, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 3690, column: 1)
!8033 = !DILocation(line: 3690, column: 1, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 3690, column: 1)
!8035 = distinct !DISubprogram(name: "xstrcoll_version", scope: !3, file: !3, line: 3709, type: !719, scopeLine: 3710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8036 = !DILocalVariable(name: "a", arg: 1, scope: !8035, file: !3, line: 3709, type: !721)
!8037 = !DILocation(line: 3709, column: 32, scope: !8035)
!8038 = !DILocalVariable(name: "b", arg: 2, scope: !8035, file: !3, line: 3709, type: !721)
!8039 = !DILocation(line: 3709, column: 37, scope: !8035)
!8040 = !DILocation(line: 3710, column: 23, scope: !8035)
!8041 = !DILocation(line: 3710, column: 26, scope: !8035)
!8042 = !DILocation(line: 3710, column: 10, scope: !8035)
!8043 = !DILocation(line: 3710, column: 3, scope: !8035)
!8044 = distinct !DISubprogram(name: "xstrcoll_df_version", scope: !3, file: !3, line: 3713, type: !719, scopeLine: 3714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8045 = !DILocalVariable(name: "a", arg: 1, scope: !8044, file: !3, line: 3713, type: !721)
!8046 = !DILocation(line: 3713, column: 35, scope: !8044)
!8047 = !DILocalVariable(name: "b", arg: 2, scope: !8044, file: !3, line: 3713, type: !721)
!8048 = !DILocation(line: 3713, column: 40, scope: !8044)
!8049 = !DILocation(line: 3714, column: 3, scope: !8044)
!8050 = !DILocalVariable(name: "a_is_dir", scope: !8051, file: !3, line: 3714, type: !141)
!8051 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 3714, column: 3)
!8052 = !DILocation(line: 3714, column: 3, scope: !8051)
!8053 = !DILocalVariable(name: "b_is_dir", scope: !8051, file: !3, line: 3714, type: !141)
!8054 = !DILocation(line: 3714, column: 3, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 3714, column: 3)
!8056 = !DILocation(line: 3714, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 3714, column: 3)
!8058 = !DILocation(line: 3714, column: 46, scope: !8044)
!8059 = !DILocation(line: 3714, column: 49, scope: !8044)
!8060 = !DILocation(line: 3714, column: 33, scope: !8044)
!8061 = !DILocation(line: 3714, column: 26, scope: !8044)
!8062 = !DILocation(line: 3714, column: 53, scope: !8044)
!8063 = distinct !DISubprogram(name: "rev_xstrcoll_version", scope: !3, file: !3, line: 3711, type: !719, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8064 = !DILocalVariable(name: "a", arg: 1, scope: !8063, file: !3, line: 3711, type: !721)
!8065 = !DILocation(line: 3711, column: 36, scope: !8063)
!8066 = !DILocalVariable(name: "b", arg: 2, scope: !8063, file: !3, line: 3711, type: !721)
!8067 = !DILocation(line: 3711, column: 41, scope: !8063)
!8068 = !DILocation(line: 3712, column: 23, scope: !8063)
!8069 = !DILocation(line: 3712, column: 26, scope: !8063)
!8070 = !DILocation(line: 3712, column: 10, scope: !8063)
!8071 = !DILocation(line: 3712, column: 3, scope: !8063)
!8072 = distinct !DISubprogram(name: "rev_xstrcoll_df_version", scope: !3, file: !3, line: 3715, type: !719, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8073 = !DILocalVariable(name: "a", arg: 1, scope: !8072, file: !3, line: 3715, type: !721)
!8074 = !DILocation(line: 3715, column: 39, scope: !8072)
!8075 = !DILocalVariable(name: "b", arg: 2, scope: !8072, file: !3, line: 3715, type: !721)
!8076 = !DILocation(line: 3715, column: 44, scope: !8072)
!8077 = !DILocation(line: 3716, column: 3, scope: !8072)
!8078 = !DILocalVariable(name: "a_is_dir", scope: !8079, file: !3, line: 3716, type: !141)
!8079 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3716, column: 3)
!8080 = !DILocation(line: 3716, column: 3, scope: !8079)
!8081 = !DILocalVariable(name: "b_is_dir", scope: !8079, file: !3, line: 3716, type: !141)
!8082 = !DILocation(line: 3716, column: 3, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 3716, column: 3)
!8084 = !DILocation(line: 3716, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 3716, column: 3)
!8086 = !DILocation(line: 3716, column: 46, scope: !8072)
!8087 = !DILocation(line: 3716, column: 49, scope: !8072)
!8088 = !DILocation(line: 3716, column: 33, scope: !8072)
!8089 = !DILocation(line: 3716, column: 26, scope: !8072)
!8090 = !DILocation(line: 3716, column: 53, scope: !8072)
!8091 = distinct !DISubprogram(name: "xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8092 = !DILocalVariable(name: "a", arg: 1, scope: !8091, file: !3, line: 3688, type: !721)
!8093 = !DILocation(line: 3688, column: 1, scope: !8091)
!8094 = !DILocalVariable(name: "b", arg: 2, scope: !8091, file: !3, line: 3688, type: !721)
!8095 = distinct !DISubprogram(name: "xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8096 = !DILocalVariable(name: "a", arg: 1, scope: !8095, file: !3, line: 3688, type: !721)
!8097 = !DILocation(line: 3688, column: 1, scope: !8095)
!8098 = !DILocalVariable(name: "b", arg: 2, scope: !8095, file: !3, line: 3688, type: !721)
!8099 = !DILocalVariable(name: "a_is_dir", scope: !8100, file: !3, line: 3688, type: !141)
!8100 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3688, column: 1)
!8101 = !DILocation(line: 3688, column: 1, scope: !8100)
!8102 = !DILocalVariable(name: "b_is_dir", scope: !8100, file: !3, line: 3688, type: !141)
!8103 = !DILocation(line: 3688, column: 1, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3688, column: 1)
!8105 = !DILocation(line: 3688, column: 1, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3688, column: 1)
!8107 = distinct !DISubprogram(name: "rev_xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8108 = !DILocalVariable(name: "a", arg: 1, scope: !8107, file: !3, line: 3688, type: !721)
!8109 = !DILocation(line: 3688, column: 1, scope: !8107)
!8110 = !DILocalVariable(name: "b", arg: 2, scope: !8107, file: !3, line: 3688, type: !721)
!8111 = distinct !DISubprogram(name: "rev_xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8112 = !DILocalVariable(name: "a", arg: 1, scope: !8111, file: !3, line: 3688, type: !721)
!8113 = !DILocation(line: 3688, column: 1, scope: !8111)
!8114 = !DILocalVariable(name: "b", arg: 2, scope: !8111, file: !3, line: 3688, type: !721)
!8115 = !DILocalVariable(name: "a_is_dir", scope: !8116, file: !3, line: 3688, type: !141)
!8116 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 3688, column: 1)
!8117 = !DILocation(line: 3688, column: 1, scope: !8116)
!8118 = !DILocalVariable(name: "b_is_dir", scope: !8116, file: !3, line: 3688, type: !141)
!8119 = !DILocation(line: 3688, column: 1, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3688, column: 1)
!8121 = !DILocation(line: 3688, column: 1, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3688, column: 1)
!8123 = distinct !DISubprogram(name: "strcmp_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8124 = !DILocalVariable(name: "a", arg: 1, scope: !8123, file: !3, line: 3688, type: !721)
!8125 = !DILocation(line: 3688, column: 1, scope: !8123)
!8126 = !DILocalVariable(name: "b", arg: 2, scope: !8123, file: !3, line: 3688, type: !721)
!8127 = distinct !DISubprogram(name: "strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8128 = !DILocalVariable(name: "a", arg: 1, scope: !8127, file: !3, line: 3688, type: !721)
!8129 = !DILocation(line: 3688, column: 1, scope: !8127)
!8130 = !DILocalVariable(name: "b", arg: 2, scope: !8127, file: !3, line: 3688, type: !721)
!8131 = !DILocalVariable(name: "a_is_dir", scope: !8132, file: !3, line: 3688, type: !141)
!8132 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 3688, column: 1)
!8133 = !DILocation(line: 3688, column: 1, scope: !8132)
!8134 = !DILocalVariable(name: "b_is_dir", scope: !8132, file: !3, line: 3688, type: !141)
!8135 = !DILocation(line: 3688, column: 1, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3688, column: 1)
!8137 = !DILocation(line: 3688, column: 1, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3688, column: 1)
!8139 = distinct !DISubprogram(name: "rev_strcmp_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8140 = !DILocalVariable(name: "a", arg: 1, scope: !8139, file: !3, line: 3688, type: !721)
!8141 = !DILocation(line: 3688, column: 1, scope: !8139)
!8142 = !DILocalVariable(name: "b", arg: 2, scope: !8139, file: !3, line: 3688, type: !721)
!8143 = distinct !DISubprogram(name: "rev_strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8144 = !DILocalVariable(name: "a", arg: 1, scope: !8143, file: !3, line: 3688, type: !721)
!8145 = !DILocation(line: 3688, column: 1, scope: !8143)
!8146 = !DILocalVariable(name: "b", arg: 2, scope: !8143, file: !3, line: 3688, type: !721)
!8147 = !DILocalVariable(name: "a_is_dir", scope: !8148, file: !3, line: 3688, type: !141)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 3688, column: 1)
!8149 = !DILocation(line: 3688, column: 1, scope: !8148)
!8150 = !DILocalVariable(name: "b_is_dir", scope: !8148, file: !3, line: 3688, type: !141)
!8151 = !DILocation(line: 3688, column: 1, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3688, column: 1)
!8153 = !DILocation(line: 3688, column: 1, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3688, column: 1)
!8155 = distinct !DISubprogram(name: "xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8156 = !DILocalVariable(name: "a", arg: 1, scope: !8155, file: !3, line: 3687, type: !721)
!8157 = !DILocation(line: 3687, column: 1, scope: !8155)
!8158 = !DILocalVariable(name: "b", arg: 2, scope: !8155, file: !3, line: 3687, type: !721)
!8159 = distinct !DISubprogram(name: "xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8160 = !DILocalVariable(name: "a", arg: 1, scope: !8159, file: !3, line: 3687, type: !721)
!8161 = !DILocation(line: 3687, column: 1, scope: !8159)
!8162 = !DILocalVariable(name: "b", arg: 2, scope: !8159, file: !3, line: 3687, type: !721)
!8163 = !DILocalVariable(name: "a_is_dir", scope: !8164, file: !3, line: 3687, type: !141)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 3687, column: 1)
!8165 = !DILocation(line: 3687, column: 1, scope: !8164)
!8166 = !DILocalVariable(name: "b_is_dir", scope: !8164, file: !3, line: 3687, type: !141)
!8167 = !DILocation(line: 3687, column: 1, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3687, column: 1)
!8169 = !DILocation(line: 3687, column: 1, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3687, column: 1)
!8171 = distinct !DISubprogram(name: "rev_xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8172 = !DILocalVariable(name: "a", arg: 1, scope: !8171, file: !3, line: 3687, type: !721)
!8173 = !DILocation(line: 3687, column: 1, scope: !8171)
!8174 = !DILocalVariable(name: "b", arg: 2, scope: !8171, file: !3, line: 3687, type: !721)
!8175 = distinct !DISubprogram(name: "rev_xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8176 = !DILocalVariable(name: "a", arg: 1, scope: !8175, file: !3, line: 3687, type: !721)
!8177 = !DILocation(line: 3687, column: 1, scope: !8175)
!8178 = !DILocalVariable(name: "b", arg: 2, scope: !8175, file: !3, line: 3687, type: !721)
!8179 = !DILocalVariable(name: "a_is_dir", scope: !8180, file: !3, line: 3687, type: !141)
!8180 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3687, column: 1)
!8181 = !DILocation(line: 3687, column: 1, scope: !8180)
!8182 = !DILocalVariable(name: "b_is_dir", scope: !8180, file: !3, line: 3687, type: !141)
!8183 = !DILocation(line: 3687, column: 1, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3687, column: 1)
!8185 = !DILocation(line: 3687, column: 1, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3687, column: 1)
!8187 = distinct !DISubprogram(name: "strcmp_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8188 = !DILocalVariable(name: "a", arg: 1, scope: !8187, file: !3, line: 3687, type: !721)
!8189 = !DILocation(line: 3687, column: 1, scope: !8187)
!8190 = !DILocalVariable(name: "b", arg: 2, scope: !8187, file: !3, line: 3687, type: !721)
!8191 = distinct !DISubprogram(name: "strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8192 = !DILocalVariable(name: "a", arg: 1, scope: !8191, file: !3, line: 3687, type: !721)
!8193 = !DILocation(line: 3687, column: 1, scope: !8191)
!8194 = !DILocalVariable(name: "b", arg: 2, scope: !8191, file: !3, line: 3687, type: !721)
!8195 = !DILocalVariable(name: "a_is_dir", scope: !8196, file: !3, line: 3687, type: !141)
!8196 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 3687, column: 1)
!8197 = !DILocation(line: 3687, column: 1, scope: !8196)
!8198 = !DILocalVariable(name: "b_is_dir", scope: !8196, file: !3, line: 3687, type: !141)
!8199 = !DILocation(line: 3687, column: 1, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 3687, column: 1)
!8201 = !DILocation(line: 3687, column: 1, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 3687, column: 1)
!8203 = distinct !DISubprogram(name: "rev_strcmp_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8204 = !DILocalVariable(name: "a", arg: 1, scope: !8203, file: !3, line: 3687, type: !721)
!8205 = !DILocation(line: 3687, column: 1, scope: !8203)
!8206 = !DILocalVariable(name: "b", arg: 2, scope: !8203, file: !3, line: 3687, type: !721)
!8207 = distinct !DISubprogram(name: "rev_strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8208 = !DILocalVariable(name: "a", arg: 1, scope: !8207, file: !3, line: 3687, type: !721)
!8209 = !DILocation(line: 3687, column: 1, scope: !8207)
!8210 = !DILocalVariable(name: "b", arg: 2, scope: !8207, file: !3, line: 3687, type: !721)
!8211 = !DILocalVariable(name: "a_is_dir", scope: !8212, file: !3, line: 3687, type: !141)
!8212 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3687, column: 1)
!8213 = !DILocation(line: 3687, column: 1, scope: !8212)
!8214 = !DILocalVariable(name: "b_is_dir", scope: !8212, file: !3, line: 3687, type: !141)
!8215 = !DILocation(line: 3687, column: 1, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3687, column: 1)
!8217 = !DILocation(line: 3687, column: 1, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3687, column: 1)
!8219 = distinct !DISubprogram(name: "xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8220 = !DILocalVariable(name: "a", arg: 1, scope: !8219, file: !3, line: 3689, type: !721)
!8221 = !DILocation(line: 3689, column: 1, scope: !8219)
!8222 = !DILocalVariable(name: "b", arg: 2, scope: !8219, file: !3, line: 3689, type: !721)
!8223 = distinct !DISubprogram(name: "xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8224 = !DILocalVariable(name: "a", arg: 1, scope: !8223, file: !3, line: 3689, type: !721)
!8225 = !DILocation(line: 3689, column: 1, scope: !8223)
!8226 = !DILocalVariable(name: "b", arg: 2, scope: !8223, file: !3, line: 3689, type: !721)
!8227 = !DILocalVariable(name: "a_is_dir", scope: !8228, file: !3, line: 3689, type: !141)
!8228 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3689, column: 1)
!8229 = !DILocation(line: 3689, column: 1, scope: !8228)
!8230 = !DILocalVariable(name: "b_is_dir", scope: !8228, file: !3, line: 3689, type: !141)
!8231 = !DILocation(line: 3689, column: 1, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 3689, column: 1)
!8233 = !DILocation(line: 3689, column: 1, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 3689, column: 1)
!8235 = distinct !DISubprogram(name: "rev_xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8236 = !DILocalVariable(name: "a", arg: 1, scope: !8235, file: !3, line: 3689, type: !721)
!8237 = !DILocation(line: 3689, column: 1, scope: !8235)
!8238 = !DILocalVariable(name: "b", arg: 2, scope: !8235, file: !3, line: 3689, type: !721)
!8239 = distinct !DISubprogram(name: "rev_xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8240 = !DILocalVariable(name: "a", arg: 1, scope: !8239, file: !3, line: 3689, type: !721)
!8241 = !DILocation(line: 3689, column: 1, scope: !8239)
!8242 = !DILocalVariable(name: "b", arg: 2, scope: !8239, file: !3, line: 3689, type: !721)
!8243 = !DILocalVariable(name: "a_is_dir", scope: !8244, file: !3, line: 3689, type: !141)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 3689, column: 1)
!8245 = !DILocation(line: 3689, column: 1, scope: !8244)
!8246 = !DILocalVariable(name: "b_is_dir", scope: !8244, file: !3, line: 3689, type: !141)
!8247 = !DILocation(line: 3689, column: 1, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3689, column: 1)
!8249 = !DILocation(line: 3689, column: 1, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3689, column: 1)
!8251 = distinct !DISubprogram(name: "strcmp_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8252 = !DILocalVariable(name: "a", arg: 1, scope: !8251, file: !3, line: 3689, type: !721)
!8253 = !DILocation(line: 3689, column: 1, scope: !8251)
!8254 = !DILocalVariable(name: "b", arg: 2, scope: !8251, file: !3, line: 3689, type: !721)
!8255 = distinct !DISubprogram(name: "strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8256 = !DILocalVariable(name: "a", arg: 1, scope: !8255, file: !3, line: 3689, type: !721)
!8257 = !DILocation(line: 3689, column: 1, scope: !8255)
!8258 = !DILocalVariable(name: "b", arg: 2, scope: !8255, file: !3, line: 3689, type: !721)
!8259 = !DILocalVariable(name: "a_is_dir", scope: !8260, file: !3, line: 3689, type: !141)
!8260 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 3689, column: 1)
!8261 = !DILocation(line: 3689, column: 1, scope: !8260)
!8262 = !DILocalVariable(name: "b_is_dir", scope: !8260, file: !3, line: 3689, type: !141)
!8263 = !DILocation(line: 3689, column: 1, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 3689, column: 1)
!8265 = !DILocation(line: 3689, column: 1, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 3689, column: 1)
!8267 = distinct !DISubprogram(name: "rev_strcmp_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8268 = !DILocalVariable(name: "a", arg: 1, scope: !8267, file: !3, line: 3689, type: !721)
!8269 = !DILocation(line: 3689, column: 1, scope: !8267)
!8270 = !DILocalVariable(name: "b", arg: 2, scope: !8267, file: !3, line: 3689, type: !721)
!8271 = distinct !DISubprogram(name: "rev_strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8272 = !DILocalVariable(name: "a", arg: 1, scope: !8271, file: !3, line: 3689, type: !721)
!8273 = !DILocation(line: 3689, column: 1, scope: !8271)
!8274 = !DILocalVariable(name: "b", arg: 2, scope: !8271, file: !3, line: 3689, type: !721)
!8275 = !DILocalVariable(name: "a_is_dir", scope: !8276, file: !3, line: 3689, type: !141)
!8276 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 3689, column: 1)
!8277 = !DILocation(line: 3689, column: 1, scope: !8276)
!8278 = !DILocalVariable(name: "b_is_dir", scope: !8276, file: !3, line: 3689, type: !141)
!8279 = !DILocation(line: 3689, column: 1, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 3689, column: 1)
!8281 = !DILocation(line: 3689, column: 1, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 3689, column: 1)
!8283 = distinct !DISubprogram(name: "is_linked_directory", scope: !3, file: !3, line: 3442, type: !702, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8284 = !DILocalVariable(name: "f", arg: 1, scope: !8283, file: !3, line: 3442, type: !183)
!8285 = !DILocation(line: 3442, column: 45, scope: !8283)
!8286 = !DILocation(line: 3444, column: 10, scope: !8283)
!8287 = !DILocation(line: 3444, column: 13, scope: !8283)
!8288 = !DILocation(line: 3444, column: 22, scope: !8283)
!8289 = !DILocation(line: 3444, column: 35, scope: !8283)
!8290 = !DILocation(line: 3444, column: 38, scope: !8283)
!8291 = !DILocation(line: 3444, column: 41, scope: !8283)
!8292 = !DILocation(line: 3444, column: 50, scope: !8283)
!8293 = !DILocation(line: 3445, column: 10, scope: !8283)
!8294 = !DILocation(line: 3445, column: 13, scope: !8283)
!8295 = !DILocation(line: 3444, column: 3, scope: !8283)
!8296 = distinct !DISubprogram(name: "cmp_atime", scope: !3, file: !3, line: 3651, type: !728, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8297 = !DILocalVariable(name: "a", arg: 1, scope: !8296, file: !3, line: 3651, type: !183)
!8298 = !DILocation(line: 3651, column: 35, scope: !8296)
!8299 = !DILocalVariable(name: "b", arg: 2, scope: !8296, file: !3, line: 3651, type: !183)
!8300 = !DILocation(line: 3651, column: 61, scope: !8296)
!8301 = !DILocalVariable(name: "cmp", arg: 3, scope: !8296, file: !3, line: 3652, type: !730)
!8302 = !DILocation(line: 3652, column: 18, scope: !8296)
!8303 = !DILocalVariable(name: "diff", scope: !8296, file: !3, line: 3654, type: !27)
!8304 = !DILocation(line: 3654, column: 7, scope: !8296)
!8305 = !DILocation(line: 3654, column: 45, scope: !8296)
!8306 = !DILocation(line: 3654, column: 48, scope: !8296)
!8307 = !DILocation(line: 3654, column: 28, scope: !8296)
!8308 = !DILocation(line: 3655, column: 45, scope: !8296)
!8309 = !DILocation(line: 3655, column: 48, scope: !8296)
!8310 = !DILocation(line: 3655, column: 28, scope: !8296)
!8311 = !DILocation(line: 3654, column: 14, scope: !8296)
!8312 = !DILocation(line: 3656, column: 10, scope: !8296)
!8313 = !DILocation(line: 3656, column: 17, scope: !8296)
!8314 = !DILocation(line: 3656, column: 24, scope: !8296)
!8315 = !DILocation(line: 3656, column: 29, scope: !8296)
!8316 = !DILocation(line: 3656, column: 32, scope: !8296)
!8317 = !DILocation(line: 3656, column: 38, scope: !8296)
!8318 = !DILocation(line: 3656, column: 41, scope: !8296)
!8319 = !DILocation(line: 3656, column: 3, scope: !8296)
!8320 = distinct !DISubprogram(name: "xstrcoll", scope: !3, file: !3, line: 3567, type: !731, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8321 = !DILocalVariable(name: "a", arg: 1, scope: !8320, file: !3, line: 3567, type: !146)
!8322 = !DILocation(line: 3567, column: 23, scope: !8320)
!8323 = !DILocalVariable(name: "b", arg: 2, scope: !8320, file: !3, line: 3567, type: !146)
!8324 = !DILocation(line: 3567, column: 38, scope: !8320)
!8325 = !DILocalVariable(name: "diff", scope: !8320, file: !3, line: 3569, type: !27)
!8326 = !DILocation(line: 3569, column: 7, scope: !8320)
!8327 = !DILocation(line: 3570, column: 3, scope: !8320)
!8328 = !DILocation(line: 3570, column: 9, scope: !8320)
!8329 = !DILocation(line: 3571, column: 19, scope: !8320)
!8330 = !DILocation(line: 3571, column: 22, scope: !8320)
!8331 = !DILocation(line: 3571, column: 10, scope: !8320)
!8332 = !DILocation(line: 3571, column: 8, scope: !8320)
!8333 = !DILocation(line: 3572, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 3572, column: 7)
!8335 = !DILocation(line: 3572, column: 7, scope: !8320)
!8336 = !DILocation(line: 3574, column: 17, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3573, column: 5)
!8338 = !DILocation(line: 3574, column: 24, scope: !8337)
!8339 = !DILocation(line: 3575, column: 26, scope: !8337)
!8340 = !DILocation(line: 3575, column: 14, scope: !8337)
!8341 = !DILocation(line: 3575, column: 42, scope: !8337)
!8342 = !DILocation(line: 3575, column: 30, scope: !8337)
!8343 = !DILocation(line: 3574, column: 7, scope: !8337)
!8344 = !DILocation(line: 3576, column: 7, scope: !8337)
!8345 = !DILocation(line: 3577, column: 7, scope: !8337)
!8346 = !DILocation(line: 3579, column: 10, scope: !8320)
!8347 = !DILocation(line: 3579, column: 3, scope: !8320)
!8348 = distinct !DISubprogram(name: "cmp_ctime", scope: !3, file: !3, line: 3633, type: !728, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8349 = !DILocalVariable(name: "a", arg: 1, scope: !8348, file: !3, line: 3633, type: !183)
!8350 = !DILocation(line: 3633, column: 35, scope: !8348)
!8351 = !DILocalVariable(name: "b", arg: 2, scope: !8348, file: !3, line: 3633, type: !183)
!8352 = !DILocation(line: 3633, column: 61, scope: !8348)
!8353 = !DILocalVariable(name: "cmp", arg: 3, scope: !8348, file: !3, line: 3634, type: !730)
!8354 = !DILocation(line: 3634, column: 18, scope: !8348)
!8355 = !DILocalVariable(name: "diff", scope: !8348, file: !3, line: 3636, type: !27)
!8356 = !DILocation(line: 3636, column: 7, scope: !8348)
!8357 = !DILocation(line: 3636, column: 45, scope: !8348)
!8358 = !DILocation(line: 3636, column: 48, scope: !8348)
!8359 = !DILocation(line: 3636, column: 28, scope: !8348)
!8360 = !DILocation(line: 3637, column: 45, scope: !8348)
!8361 = !DILocation(line: 3637, column: 48, scope: !8348)
!8362 = !DILocation(line: 3637, column: 28, scope: !8348)
!8363 = !DILocation(line: 3636, column: 14, scope: !8348)
!8364 = !DILocation(line: 3638, column: 10, scope: !8348)
!8365 = !DILocation(line: 3638, column: 17, scope: !8348)
!8366 = !DILocation(line: 3638, column: 24, scope: !8348)
!8367 = !DILocation(line: 3638, column: 29, scope: !8348)
!8368 = !DILocation(line: 3638, column: 32, scope: !8348)
!8369 = !DILocation(line: 3638, column: 38, scope: !8348)
!8370 = !DILocation(line: 3638, column: 41, scope: !8348)
!8371 = !DILocation(line: 3638, column: 3, scope: !8348)
!8372 = distinct !DISubprogram(name: "cmp_mtime", scope: !3, file: !3, line: 3642, type: !728, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8373 = !DILocalVariable(name: "a", arg: 1, scope: !8372, file: !3, line: 3642, type: !183)
!8374 = !DILocation(line: 3642, column: 35, scope: !8372)
!8375 = !DILocalVariable(name: "b", arg: 2, scope: !8372, file: !3, line: 3642, type: !183)
!8376 = !DILocation(line: 3642, column: 61, scope: !8372)
!8377 = !DILocalVariable(name: "cmp", arg: 3, scope: !8372, file: !3, line: 3643, type: !730)
!8378 = !DILocation(line: 3643, column: 18, scope: !8372)
!8379 = !DILocalVariable(name: "diff", scope: !8372, file: !3, line: 3645, type: !27)
!8380 = !DILocation(line: 3645, column: 7, scope: !8372)
!8381 = !DILocation(line: 3645, column: 45, scope: !8372)
!8382 = !DILocation(line: 3645, column: 48, scope: !8372)
!8383 = !DILocation(line: 3645, column: 28, scope: !8372)
!8384 = !DILocation(line: 3646, column: 45, scope: !8372)
!8385 = !DILocation(line: 3646, column: 48, scope: !8372)
!8386 = !DILocation(line: 3646, column: 28, scope: !8372)
!8387 = !DILocation(line: 3645, column: 14, scope: !8372)
!8388 = !DILocation(line: 3647, column: 10, scope: !8372)
!8389 = !DILocation(line: 3647, column: 17, scope: !8372)
!8390 = !DILocation(line: 3647, column: 24, scope: !8372)
!8391 = !DILocation(line: 3647, column: 29, scope: !8372)
!8392 = !DILocation(line: 3647, column: 32, scope: !8372)
!8393 = !DILocation(line: 3647, column: 38, scope: !8372)
!8394 = !DILocation(line: 3647, column: 41, scope: !8372)
!8395 = !DILocation(line: 3647, column: 3, scope: !8372)
!8396 = distinct !DISubprogram(name: "cmp_version", scope: !3, file: !3, line: 3704, type: !733, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8397 = !DILocalVariable(name: "a", arg: 1, scope: !8396, file: !3, line: 3704, type: !183)
!8398 = !DILocation(line: 3704, column: 37, scope: !8396)
!8399 = !DILocalVariable(name: "b", arg: 2, scope: !8396, file: !3, line: 3704, type: !183)
!8400 = !DILocation(line: 3704, column: 63, scope: !8396)
!8401 = !DILocation(line: 3706, column: 22, scope: !8396)
!8402 = !DILocation(line: 3706, column: 25, scope: !8396)
!8403 = !DILocation(line: 3706, column: 31, scope: !8396)
!8404 = !DILocation(line: 3706, column: 34, scope: !8396)
!8405 = !DILocation(line: 3706, column: 10, scope: !8396)
!8406 = !DILocation(line: 3706, column: 3, scope: !8396)
!8407 = distinct !DISubprogram(name: "cmp_size", scope: !3, file: !3, line: 3660, type: !728, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8408 = !DILocalVariable(name: "a", arg: 1, scope: !8407, file: !3, line: 3660, type: !183)
!8409 = !DILocation(line: 3660, column: 34, scope: !8407)
!8410 = !DILocalVariable(name: "b", arg: 2, scope: !8407, file: !3, line: 3660, type: !183)
!8411 = !DILocation(line: 3660, column: 60, scope: !8407)
!8412 = !DILocalVariable(name: "cmp", arg: 3, scope: !8407, file: !3, line: 3661, type: !730)
!8413 = !DILocation(line: 3661, column: 17, scope: !8407)
!8414 = !DILocalVariable(name: "diff", scope: !8407, file: !3, line: 3663, type: !27)
!8415 = !DILocation(line: 3663, column: 7, scope: !8407)
!8416 = !DILocation(line: 3663, column: 14, scope: !8407)
!8417 = !DILocation(line: 3664, column: 10, scope: !8407)
!8418 = !DILocation(line: 3664, column: 17, scope: !8407)
!8419 = !DILocation(line: 3664, column: 24, scope: !8407)
!8420 = !DILocation(line: 3664, column: 29, scope: !8407)
!8421 = !DILocation(line: 3664, column: 32, scope: !8407)
!8422 = !DILocation(line: 3664, column: 38, scope: !8407)
!8423 = !DILocation(line: 3664, column: 41, scope: !8407)
!8424 = !DILocation(line: 3664, column: 3, scope: !8407)
!8425 = distinct !DISubprogram(name: "cmp_extension", scope: !3, file: !3, line: 3678, type: !728, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8426 = !DILocalVariable(name: "a", arg: 1, scope: !8425, file: !3, line: 3678, type: !183)
!8427 = !DILocation(line: 3678, column: 39, scope: !8425)
!8428 = !DILocalVariable(name: "b", arg: 2, scope: !8425, file: !3, line: 3678, type: !183)
!8429 = !DILocation(line: 3678, column: 65, scope: !8425)
!8430 = !DILocalVariable(name: "cmp", arg: 3, scope: !8425, file: !3, line: 3679, type: !730)
!8431 = !DILocation(line: 3679, column: 22, scope: !8425)
!8432 = !DILocalVariable(name: "base1", scope: !8425, file: !3, line: 3681, type: !146)
!8433 = !DILocation(line: 3681, column: 15, scope: !8425)
!8434 = !DILocation(line: 3681, column: 32, scope: !8425)
!8435 = !DILocation(line: 3681, column: 35, scope: !8425)
!8436 = !DILocation(line: 3681, column: 23, scope: !8425)
!8437 = !DILocalVariable(name: "base2", scope: !8425, file: !3, line: 3682, type: !146)
!8438 = !DILocation(line: 3682, column: 15, scope: !8425)
!8439 = !DILocation(line: 3682, column: 32, scope: !8425)
!8440 = !DILocation(line: 3682, column: 35, scope: !8425)
!8441 = !DILocation(line: 3682, column: 23, scope: !8425)
!8442 = !DILocalVariable(name: "diff", scope: !8425, file: !3, line: 3683, type: !27)
!8443 = !DILocation(line: 3683, column: 7, scope: !8425)
!8444 = !DILocation(line: 3683, column: 14, scope: !8425)
!8445 = !DILocation(line: 3683, column: 19, scope: !8425)
!8446 = !DILocation(line: 3683, column: 27, scope: !8425)
!8447 = !DILocation(line: 3683, column: 39, scope: !8425)
!8448 = !DILocation(line: 3683, column: 47, scope: !8425)
!8449 = !DILocation(line: 3684, column: 10, scope: !8425)
!8450 = !DILocation(line: 3684, column: 17, scope: !8425)
!8451 = !DILocation(line: 3684, column: 24, scope: !8425)
!8452 = !DILocation(line: 3684, column: 29, scope: !8425)
!8453 = !DILocation(line: 3684, column: 32, scope: !8425)
!8454 = !DILocation(line: 3684, column: 38, scope: !8425)
!8455 = !DILocation(line: 3684, column: 41, scope: !8425)
!8456 = !DILocation(line: 3684, column: 3, scope: !8425)
!8457 = distinct !DISubprogram(name: "cmp_name", scope: !3, file: !3, line: 3668, type: !728, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8458 = !DILocalVariable(name: "a", arg: 1, scope: !8457, file: !3, line: 3668, type: !183)
!8459 = !DILocation(line: 3668, column: 34, scope: !8457)
!8460 = !DILocalVariable(name: "b", arg: 2, scope: !8457, file: !3, line: 3668, type: !183)
!8461 = !DILocation(line: 3668, column: 60, scope: !8457)
!8462 = !DILocalVariable(name: "cmp", arg: 3, scope: !8457, file: !3, line: 3669, type: !730)
!8463 = !DILocation(line: 3669, column: 17, scope: !8457)
!8464 = !DILocation(line: 3671, column: 10, scope: !8457)
!8465 = !DILocation(line: 3671, column: 15, scope: !8457)
!8466 = !DILocation(line: 3671, column: 18, scope: !8457)
!8467 = !DILocation(line: 3671, column: 24, scope: !8457)
!8468 = !DILocation(line: 3671, column: 27, scope: !8457)
!8469 = !DILocation(line: 3671, column: 3, scope: !8457)
!8470 = distinct !DISubprogram(name: "needs_quoting", scope: !3, file: !3, line: 3099, type: !568, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8471 = !DILocalVariable(name: "name", arg: 1, scope: !8470, file: !3, line: 3099, type: !146)
!8472 = !DILocation(line: 3099, column: 28, scope: !8470)
!8473 = !DILocalVariable(name: "test", scope: !8470, file: !3, line: 3101, type: !666)
!8474 = !DILocation(line: 3101, column: 8, scope: !8470)
!8475 = !DILocalVariable(name: "len", scope: !8470, file: !3, line: 3102, type: !149)
!8476 = !DILocation(line: 3102, column: 10, scope: !8470)
!8477 = !DILocation(line: 3102, column: 33, scope: !8470)
!8478 = !DILocation(line: 3102, column: 53, scope: !8470)
!8479 = !DILocation(line: 3103, column: 33, scope: !8470)
!8480 = !DILocation(line: 3102, column: 16, scope: !8470)
!8481 = !DILocation(line: 3104, column: 11, scope: !8470)
!8482 = !DILocation(line: 3104, column: 10, scope: !8470)
!8483 = !DILocation(line: 3104, column: 19, scope: !8470)
!8484 = !DILocation(line: 3104, column: 16, scope: !8470)
!8485 = !DILocation(line: 3104, column: 25, scope: !8470)
!8486 = !DILocation(line: 3104, column: 36, scope: !8470)
!8487 = !DILocation(line: 3104, column: 28, scope: !8470)
!8488 = !DILocation(line: 3104, column: 45, scope: !8470)
!8489 = !DILocation(line: 3104, column: 42, scope: !8470)
!8490 = !DILocation(line: 3104, column: 3, scope: !8470)
!8491 = distinct !DISubprogram(name: "attach", scope: !3, file: !3, line: 4986, type: !672, scopeLine: 4987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8492 = !DILocalVariable(name: "dest", arg: 1, scope: !8491, file: !3, line: 4986, type: !143)
!8493 = !DILocation(line: 4986, column: 15, scope: !8491)
!8494 = !DILocalVariable(name: "dirname", arg: 2, scope: !8491, file: !3, line: 4986, type: !146)
!8495 = !DILocation(line: 4986, column: 33, scope: !8491)
!8496 = !DILocalVariable(name: "name", arg: 3, scope: !8491, file: !3, line: 4986, type: !146)
!8497 = !DILocation(line: 4986, column: 54, scope: !8491)
!8498 = !DILocalVariable(name: "dirnamep", scope: !8491, file: !3, line: 4988, type: !146)
!8499 = !DILocation(line: 4988, column: 15, scope: !8491)
!8500 = !DILocation(line: 4988, column: 26, scope: !8491)
!8501 = !DILocation(line: 4991, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 4991, column: 7)
!8503 = !DILocation(line: 4991, column: 18, scope: !8502)
!8504 = !DILocation(line: 4991, column: 25, scope: !8502)
!8505 = !DILocation(line: 4991, column: 28, scope: !8502)
!8506 = !DILocation(line: 4991, column: 39, scope: !8502)
!8507 = !DILocation(line: 4991, column: 7, scope: !8491)
!8508 = !DILocation(line: 4993, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 4992, column: 5)
!8510 = !DILocation(line: 4993, column: 15, scope: !8509)
!8511 = !DILocation(line: 4993, column: 14, scope: !8509)
!8512 = !DILocation(line: 4994, column: 28, scope: !8509)
!8513 = !DILocation(line: 4994, column: 19, scope: !8509)
!8514 = !DILocation(line: 4994, column: 14, scope: !8509)
!8515 = !DILocation(line: 4994, column: 17, scope: !8509)
!8516 = distinct !{!8516, !8508, !8512}
!8517 = !DILocation(line: 4996, column: 11, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 4996, column: 11)
!8519 = !DILocation(line: 4996, column: 22, scope: !8518)
!8520 = !DILocation(line: 4996, column: 20, scope: !8518)
!8521 = !DILocation(line: 4996, column: 30, scope: !8518)
!8522 = !DILocation(line: 4996, column: 33, scope: !8518)
!8523 = !DILocation(line: 4996, column: 46, scope: !8518)
!8524 = !DILocation(line: 4996, column: 11, scope: !8509)
!8525 = !DILocation(line: 4997, column: 14, scope: !8518)
!8526 = !DILocation(line: 4997, column: 17, scope: !8518)
!8527 = !DILocation(line: 4997, column: 9, scope: !8518)
!8528 = !DILocation(line: 4998, column: 5, scope: !8509)
!8529 = !DILocation(line: 4999, column: 3, scope: !8491)
!8530 = !DILocation(line: 4999, column: 11, scope: !8491)
!8531 = !DILocation(line: 4999, column: 10, scope: !8491)
!8532 = !DILocation(line: 5000, column: 20, scope: !8491)
!8533 = !DILocation(line: 5000, column: 15, scope: !8491)
!8534 = !DILocation(line: 5000, column: 10, scope: !8491)
!8535 = !DILocation(line: 5000, column: 13, scope: !8491)
!8536 = distinct !{!8536, !8529, !8532}
!8537 = !DILocation(line: 5001, column: 4, scope: !8491)
!8538 = !DILocation(line: 5001, column: 9, scope: !8491)
!8539 = !DILocation(line: 5002, column: 1, scope: !8491)
!8540 = !DILocalVariable(name: "file", arg: 1, scope: !1010, file: !3, line: 3080, type: !146)
!8541 = !DILocation(line: 3080, column: 35, scope: !1010)
!8542 = !DILocalVariable(name: "f", arg: 2, scope: !1010, file: !3, line: 3080, type: !252)
!8543 = !DILocation(line: 3080, column: 58, scope: !1010)
!8544 = !DILocation(line: 3086, column: 7, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 3086, column: 7)
!8546 = !DILocation(line: 3086, column: 10, scope: !8545)
!8547 = !DILocation(line: 3086, column: 15, scope: !8545)
!8548 = !{!3809, !2467, i64 24}
!8549 = !DILocation(line: 3086, column: 25, scope: !8545)
!8550 = !DILocation(line: 3086, column: 22, scope: !8545)
!8551 = !DILocation(line: 3086, column: 7, scope: !1010)
!8552 = !DILocation(line: 3088, column: 7, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 3087, column: 5)
!8554 = !DILocation(line: 3088, column: 13, scope: !8553)
!8555 = !DILocation(line: 3089, column: 7, scope: !8553)
!8556 = !DILocalVariable(name: "b", scope: !1010, file: !3, line: 3092, type: !141)
!8557 = !DILocation(line: 3092, column: 8, scope: !1010)
!8558 = !DILocation(line: 3092, column: 28, scope: !1010)
!8559 = !DILocation(line: 3092, column: 12, scope: !1010)
!8560 = !DILocation(line: 3093, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 3093, column: 8)
!8562 = !DILocation(line: 3093, column: 11, scope: !8561)
!8563 = !DILocation(line: 3093, column: 33, scope: !8561)
!8564 = !DILocation(line: 3093, column: 14, scope: !8561)
!8565 = !DILocation(line: 3093, column: 8, scope: !1010)
!8566 = !DILocation(line: 3094, column: 26, scope: !8561)
!8567 = !DILocation(line: 3094, column: 29, scope: !8561)
!8568 = !DILocation(line: 3094, column: 34, scope: !8561)
!8569 = !DILocation(line: 3094, column: 24, scope: !8561)
!8570 = !DILocation(line: 3094, column: 5, scope: !8561)
!8571 = !DILocation(line: 3095, column: 10, scope: !1010)
!8572 = !DILocation(line: 3095, column: 3, scope: !1010)
!8573 = !DILocation(line: 3096, column: 1, scope: !1010)
!8574 = !DILocalVariable(name: "file", arg: 1, scope: !1013, file: !3, line: 3025, type: !146)
!8575 = !DILocation(line: 3025, column: 31, scope: !1013)
!8576 = !DILocalVariable(name: "f", arg: 2, scope: !1013, file: !3, line: 3025, type: !252)
!8577 = !DILocation(line: 3025, column: 54, scope: !1013)
!8578 = !DILocalVariable(name: "deref", arg: 3, scope: !1013, file: !3, line: 3025, type: !141)
!8579 = !DILocation(line: 3025, column: 62, scope: !1013)
!8580 = !DILocation(line: 3031, column: 7, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !1013, file: !3, line: 3031, column: 7)
!8582 = !DILocation(line: 3031, column: 10, scope: !8581)
!8583 = !DILocation(line: 3031, column: 15, scope: !8581)
!8584 = !DILocation(line: 3031, column: 25, scope: !8581)
!8585 = !DILocation(line: 3031, column: 22, scope: !8581)
!8586 = !DILocation(line: 3031, column: 7, scope: !1013)
!8587 = !DILocation(line: 3033, column: 7, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 3032, column: 5)
!8589 = !DILocation(line: 3033, column: 13, scope: !8588)
!8590 = !DILocation(line: 3034, column: 7, scope: !8588)
!8591 = !DILocalVariable(name: "r", scope: !1013, file: !3, line: 3036, type: !27)
!8592 = !DILocation(line: 3036, column: 7, scope: !1013)
!8593 = !DILocation(line: 3043, column: 10, scope: !1013)
!8594 = !DILocation(line: 3044, column: 24, scope: !1013)
!8595 = !DILocation(line: 3044, column: 31, scope: !1013)
!8596 = !DILocation(line: 3044, column: 34, scope: !1013)
!8597 = !DILocation(line: 3044, column: 12, scope: !1013)
!8598 = !DILocation(line: 3045, column: 25, scope: !1013)
!8599 = !DILocation(line: 3045, column: 32, scope: !1013)
!8600 = !DILocation(line: 3045, column: 35, scope: !1013)
!8601 = !DILocation(line: 3045, column: 12, scope: !1013)
!8602 = !DILocation(line: 3043, column: 7, scope: !1013)
!8603 = !DILocation(line: 3046, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !1013, file: !3, line: 3046, column: 7)
!8605 = !DILocation(line: 3046, column: 9, scope: !8604)
!8606 = !DILocation(line: 3046, column: 13, scope: !8604)
!8607 = !DILocation(line: 3046, column: 35, scope: !8604)
!8608 = !DILocation(line: 3046, column: 16, scope: !8604)
!8609 = !DILocation(line: 3046, column: 7, scope: !1013)
!8610 = !DILocation(line: 3047, column: 26, scope: !8604)
!8611 = !DILocation(line: 3047, column: 29, scope: !8604)
!8612 = !DILocation(line: 3047, column: 34, scope: !8604)
!8613 = !DILocation(line: 3047, column: 24, scope: !8604)
!8614 = !DILocation(line: 3047, column: 5, scope: !8604)
!8615 = !DILocation(line: 3048, column: 10, scope: !1013)
!8616 = !DILocation(line: 3048, column: 3, scope: !1013)
!8617 = !DILocation(line: 3049, column: 1, scope: !1013)
!8618 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !810, file: !810, line: 762, type: !680, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8619 = !DILocalVariable(name: "err", arg: 1, scope: !8618, file: !810, line: 762, type: !27)
!8620 = !DILocation(line: 762, column: 17, scope: !8618)
!8621 = !DILocation(line: 764, column: 10, scope: !8618)
!8622 = !DILocation(line: 764, column: 14, scope: !8618)
!8623 = !DILocation(line: 764, column: 28, scope: !8618)
!8624 = !DILocation(line: 764, column: 3, scope: !8618)
!8625 = !DILocalVariable(name: "file", arg: 1, scope: !1016, file: !3, line: 3055, type: !146)
!8626 = !DILocation(line: 3055, column: 33, scope: !1016)
!8627 = !DILocalVariable(name: "f", arg: 2, scope: !1016, file: !3, line: 3055, type: !252)
!8628 = !DILocation(line: 3055, column: 56, scope: !1016)
!8629 = !DILocation(line: 3061, column: 7, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 3061, column: 7)
!8631 = !DILocation(line: 3061, column: 10, scope: !8630)
!8632 = !DILocation(line: 3061, column: 15, scope: !8630)
!8633 = !DILocation(line: 3061, column: 25, scope: !8630)
!8634 = !DILocation(line: 3061, column: 22, scope: !8630)
!8635 = !DILocation(line: 3061, column: 7, scope: !1016)
!8636 = !DILocation(line: 3063, column: 7, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 3062, column: 5)
!8638 = !DILocation(line: 3063, column: 13, scope: !8637)
!8639 = !DILocation(line: 3064, column: 7, scope: !8637)
!8640 = !DILocation(line: 3069, column: 3, scope: !1016)
!8641 = !DILocation(line: 3069, column: 9, scope: !1016)
!8642 = !DILocalVariable(name: "n", scope: !1016, file: !3, line: 3070, type: !27)
!8643 = !DILocation(line: 3070, column: 7, scope: !1016)
!8644 = !DILocation(line: 3070, column: 25, scope: !1016)
!8645 = !DILocation(line: 3070, column: 32, scope: !1016)
!8646 = !DILocation(line: 3070, column: 35, scope: !1016)
!8647 = !DILocation(line: 3070, column: 11, scope: !1016)
!8648 = !DILocation(line: 3071, column: 7, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 3071, column: 7)
!8650 = !DILocation(line: 3071, column: 9, scope: !8649)
!8651 = !DILocation(line: 3071, column: 14, scope: !8649)
!8652 = !DILocation(line: 3071, column: 36, scope: !8649)
!8653 = !DILocation(line: 3071, column: 17, scope: !8649)
!8654 = !DILocation(line: 3071, column: 7, scope: !1016)
!8655 = !DILocation(line: 3072, column: 26, scope: !8649)
!8656 = !DILocation(line: 3072, column: 29, scope: !8649)
!8657 = !DILocation(line: 3072, column: 34, scope: !8649)
!8658 = !DILocation(line: 3072, column: 24, scope: !8649)
!8659 = !DILocation(line: 3072, column: 5, scope: !8649)
!8660 = !DILocation(line: 3073, column: 10, scope: !1016)
!8661 = !DILocation(line: 3073, column: 3, scope: !1016)
!8662 = !DILocation(line: 3074, column: 1, scope: !1016)
!8663 = distinct !DISubprogram(name: "get_link_name", scope: !3, file: !3, line: 3453, type: !686, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8664 = !DILocalVariable(name: "filename", arg: 1, scope: !8663, file: !3, line: 3453, type: !146)
!8665 = !DILocation(line: 3453, column: 28, scope: !8663)
!8666 = !DILocalVariable(name: "f", arg: 2, scope: !8663, file: !3, line: 3453, type: !252)
!8667 = !DILocation(line: 3453, column: 55, scope: !8663)
!8668 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !8663, file: !3, line: 3453, type: !141)
!8669 = !DILocation(line: 3453, column: 63, scope: !8663)
!8670 = !DILocation(line: 3455, column: 38, scope: !8663)
!8671 = !DILocation(line: 3455, column: 48, scope: !8663)
!8672 = !DILocation(line: 3455, column: 51, scope: !8663)
!8673 = !DILocation(line: 3455, column: 56, scope: !8663)
!8674 = !DILocation(line: 3455, column: 17, scope: !8663)
!8675 = !DILocation(line: 3455, column: 3, scope: !8663)
!8676 = !DILocation(line: 3455, column: 6, scope: !8663)
!8677 = !DILocation(line: 3455, column: 15, scope: !8663)
!8678 = !DILocation(line: 3456, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 3456, column: 7)
!8680 = !DILocation(line: 3456, column: 10, scope: !8679)
!8681 = !DILocation(line: 3456, column: 19, scope: !8679)
!8682 = !DILocation(line: 3456, column: 7, scope: !8663)
!8683 = !DILocation(line: 3457, column: 19, scope: !8679)
!8684 = !DILocation(line: 3457, column: 37, scope: !8679)
!8685 = !DILocation(line: 3458, column: 19, scope: !8679)
!8686 = !DILocation(line: 3457, column: 5, scope: !8679)
!8687 = !DILocation(line: 3459, column: 1, scope: !8663)
!8688 = distinct !DISubprogram(name: "make_link_name", scope: !3, file: !3, line: 3467, type: !688, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8689 = !DILocalVariable(name: "name", arg: 1, scope: !8688, file: !3, line: 3467, type: !146)
!8690 = !DILocation(line: 3467, column: 29, scope: !8688)
!8691 = !DILocalVariable(name: "linkname", arg: 2, scope: !8688, file: !3, line: 3467, type: !146)
!8692 = !DILocation(line: 3467, column: 47, scope: !8688)
!8693 = !DILocation(line: 3469, column: 8, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3469, column: 7)
!8695 = !DILocation(line: 3469, column: 7, scope: !8688)
!8696 = !DILocation(line: 3470, column: 5, scope: !8694)
!8697 = !DILocation(line: 3472, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3472, column: 7)
!8699 = !DILocation(line: 3472, column: 7, scope: !8688)
!8700 = !DILocation(line: 3473, column: 21, scope: !8698)
!8701 = !DILocation(line: 3473, column: 12, scope: !8698)
!8702 = !DILocation(line: 3473, column: 5, scope: !8698)
!8703 = !DILocalVariable(name: "prefix_len", scope: !8688, file: !3, line: 3477, type: !149)
!8704 = !DILocation(line: 3477, column: 10, scope: !8688)
!8705 = !DILocation(line: 3477, column: 32, scope: !8688)
!8706 = !DILocation(line: 3477, column: 23, scope: !8688)
!8707 = !DILocation(line: 3478, column: 7, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3478, column: 7)
!8709 = !DILocation(line: 3478, column: 18, scope: !8708)
!8710 = !DILocation(line: 3478, column: 7, scope: !8688)
!8711 = !DILocation(line: 3479, column: 21, scope: !8708)
!8712 = !DILocation(line: 3479, column: 12, scope: !8708)
!8713 = !DILocation(line: 3479, column: 5, scope: !8708)
!8714 = !DILocalVariable(name: "p", scope: !8688, file: !3, line: 3481, type: !143)
!8715 = !DILocation(line: 3481, column: 9, scope: !8688)
!8716 = !DILocation(line: 3481, column: 22, scope: !8688)
!8717 = !DILocation(line: 3481, column: 33, scope: !8688)
!8718 = !DILocation(line: 3481, column: 47, scope: !8688)
!8719 = !DILocation(line: 3481, column: 39, scope: !8688)
!8720 = !DILocation(line: 3481, column: 37, scope: !8688)
!8721 = !DILocation(line: 3481, column: 57, scope: !8688)
!8722 = !DILocation(line: 3481, column: 13, scope: !8688)
!8723 = !DILocation(line: 3486, column: 10, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3486, column: 8)
!8725 = !DILocation(line: 3486, column: 8, scope: !8688)
!8726 = !DILocation(line: 3487, column: 5, scope: !8724)
!8727 = !DILocation(line: 3489, column: 20, scope: !8688)
!8728 = !DILocation(line: 3489, column: 23, scope: !8688)
!8729 = !DILocation(line: 3489, column: 29, scope: !8688)
!8730 = !DILocation(line: 3489, column: 11, scope: !8688)
!8731 = !DILocation(line: 3489, column: 42, scope: !8688)
!8732 = !DILocation(line: 3489, column: 3, scope: !8688)
!8733 = !DILocation(line: 3490, column: 10, scope: !8688)
!8734 = !DILocation(line: 3490, column: 3, scope: !8688)
!8735 = !DILocation(line: 3491, column: 1, scope: !8688)
!8736 = distinct !DISubprogram(name: "format_user_width", scope: !3, file: !3, line: 3993, type: !690, scopeLine: 3994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8737 = !DILocalVariable(name: "u", arg: 1, scope: !8736, file: !3, line: 3993, type: !692)
!8738 = !DILocation(line: 3993, column: 26, scope: !8736)
!8739 = !DILocation(line: 3995, column: 38, scope: !8736)
!8740 = !DILocation(line: 3995, column: 68, scope: !8736)
!8741 = !DILocation(line: 3995, column: 59, scope: !8736)
!8742 = !DILocation(line: 3995, column: 72, scope: !8736)
!8743 = !DILocation(line: 3995, column: 10, scope: !8736)
!8744 = !DILocation(line: 3995, column: 3, scope: !8736)
!8745 = distinct !DISubprogram(name: "format_group_width", scope: !3, file: !3, line: 4001, type: !695, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8746 = !DILocalVariable(name: "g", arg: 1, scope: !8745, file: !3, line: 4001, type: !697)
!8747 = !DILocation(line: 4001, column: 27, scope: !8745)
!8748 = !DILocation(line: 4003, column: 38, scope: !8745)
!8749 = !DILocation(line: 4003, column: 69, scope: !8745)
!8750 = !DILocation(line: 4003, column: 59, scope: !8745)
!8751 = !DILocation(line: 4003, column: 73, scope: !8745)
!8752 = !DILocation(line: 4003, column: 10, scope: !8745)
!8753 = !DILocation(line: 4003, column: 3, scope: !8745)
!8754 = distinct !DISubprogram(name: "format_user_or_group_width", scope: !3, file: !3, line: 3975, type: !693, scopeLine: 3976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8755 = !DILocalVariable(name: "name", arg: 1, scope: !8754, file: !3, line: 3975, type: !146)
!8756 = !DILocation(line: 3975, column: 41, scope: !8754)
!8757 = !DILocalVariable(name: "id", arg: 2, scope: !8754, file: !3, line: 3975, type: !151)
!8758 = !DILocation(line: 3975, column: 65, scope: !8754)
!8759 = !DILocation(line: 3977, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 3977, column: 7)
!8761 = !DILocation(line: 3977, column: 7, scope: !8754)
!8762 = !DILocalVariable(name: "len", scope: !8763, file: !3, line: 3979, type: !27)
!8763 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 3978, column: 5)
!8764 = !DILocation(line: 3979, column: 11, scope: !8763)
!8765 = !DILocation(line: 3979, column: 27, scope: !8763)
!8766 = !DILocation(line: 3979, column: 17, scope: !8763)
!8767 = !DILocation(line: 3980, column: 14, scope: !8763)
!8768 = !DILocation(line: 3980, column: 7, scope: !8763)
!8769 = !DILocalVariable(name: "buf", scope: !8770, file: !3, line: 3984, type: !669)
!8770 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 3983, column: 5)
!8771 = !DILocation(line: 3984, column: 12, scope: !8770)
!8772 = !DILocation(line: 3985, column: 16, scope: !8770)
!8773 = !DILocation(line: 3985, column: 28, scope: !8770)
!8774 = !DILocation(line: 3985, column: 7, scope: !8770)
!8775 = !DILocation(line: 3986, column: 22, scope: !8770)
!8776 = !DILocation(line: 3986, column: 14, scope: !8770)
!8777 = !DILocation(line: 3986, column: 7, scope: !8770)
!8778 = !DILocation(line: 3988, column: 1, scope: !8754)
!8779 = distinct !DISubprogram(name: "errno_unsupported", scope: !3, file: !3, line: 3016, type: !680, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8780 = !DILocalVariable(name: "err", arg: 1, scope: !8779, file: !3, line: 3016, type: !27)
!8781 = !DILocation(line: 3016, column: 24, scope: !8779)
!8782 = !DILocation(line: 3018, column: 11, scope: !8779)
!8783 = !DILocation(line: 3018, column: 15, scope: !8779)
!8784 = !DILocation(line: 3018, column: 25, scope: !8779)
!8785 = !DILocation(line: 3018, column: 28, scope: !8779)
!8786 = !DILocation(line: 3018, column: 32, scope: !8779)
!8787 = !DILocation(line: 3018, column: 42, scope: !8779)
!8788 = !DILocation(line: 3018, column: 57, scope: !8779)
!8789 = !DILocation(line: 3018, column: 45, scope: !8779)
!8790 = !DILocation(line: 3018, column: 3, scope: !8779)
!8791 = distinct !DISubprogram(name: "has_capability", scope: !3, file: !3, line: 2942, type: !568, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8792 = !DILocalVariable(name: "name", arg: 1, scope: !8791, file: !3, line: 2942, type: !146)
!8793 = !DILocation(line: 2942, column: 29, scope: !8791)
!8794 = !DILocalVariable(name: "result", scope: !8791, file: !3, line: 2944, type: !143)
!8795 = !DILocation(line: 2944, column: 9, scope: !8791)
!8796 = !DILocalVariable(name: "has_cap", scope: !8791, file: !3, line: 2945, type: !141)
!8797 = !DILocation(line: 2945, column: 8, scope: !8791)
!8798 = !DILocalVariable(name: "cap_d", scope: !8791, file: !3, line: 2947, type: !676)
!8799 = !DILocation(line: 2947, column: 9, scope: !8791)
!8800 = !DILocation(line: 2947, column: 31, scope: !8791)
!8801 = !DILocation(line: 2947, column: 17, scope: !8791)
!8802 = !DILocation(line: 2948, column: 7, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2948, column: 7)
!8804 = !DILocation(line: 2948, column: 13, scope: !8803)
!8805 = !DILocation(line: 2948, column: 7, scope: !8791)
!8806 = !DILocation(line: 2949, column: 5, scope: !8803)
!8807 = !DILocation(line: 2951, column: 25, scope: !8791)
!8808 = !DILocation(line: 2951, column: 12, scope: !8791)
!8809 = !DILocation(line: 2951, column: 10, scope: !8791)
!8810 = !DILocation(line: 2952, column: 13, scope: !8791)
!8811 = !DILocation(line: 2952, column: 3, scope: !8791)
!8812 = !DILocation(line: 2953, column: 8, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2953, column: 7)
!8814 = !DILocation(line: 2953, column: 7, scope: !8791)
!8815 = !DILocation(line: 2954, column: 5, scope: !8813)
!8816 = !DILocation(line: 2957, column: 16, scope: !8791)
!8817 = !DILocation(line: 2957, column: 15, scope: !8791)
!8818 = !DILocation(line: 2957, column: 14, scope: !8791)
!8819 = !DILocation(line: 2957, column: 13, scope: !8791)
!8820 = !DILocation(line: 2957, column: 11, scope: !8791)
!8821 = !DILocation(line: 2959, column: 13, scope: !8791)
!8822 = !DILocation(line: 2959, column: 3, scope: !8791)
!8823 = !DILocation(line: 2960, column: 10, scope: !8791)
!8824 = !DILocation(line: 2960, column: 3, scope: !8791)
!8825 = !DILocation(line: 2961, column: 1, scope: !8791)
!8826 = distinct !DISubprogram(name: "known_term_type", scope: !3, file: !3, line: 2489, type: !602, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8827 = !DILocalVariable(name: "term", scope: !8826, file: !3, line: 2491, type: !146)
!8828 = !DILocation(line: 2491, column: 15, scope: !8826)
!8829 = !DILocation(line: 2491, column: 22, scope: !8826)
!8830 = !DILocation(line: 2492, column: 9, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2492, column: 7)
!8832 = !DILocation(line: 2492, column: 14, scope: !8831)
!8833 = !DILocation(line: 2492, column: 20, scope: !8831)
!8834 = !DILocation(line: 2492, column: 19, scope: !8831)
!8835 = !DILocation(line: 2492, column: 7, scope: !8826)
!8836 = !DILocation(line: 2493, column: 5, scope: !8831)
!8837 = !DILocalVariable(name: "line", scope: !8826, file: !3, line: 2495, type: !146)
!8838 = !DILocation(line: 2495, column: 15, scope: !8826)
!8839 = !DILocation(line: 2496, column: 3, scope: !8826)
!8840 = !DILocation(line: 2496, column: 10, scope: !8826)
!8841 = !DILocation(line: 2496, column: 15, scope: !8826)
!8842 = !DILocation(line: 2496, column: 24, scope: !8826)
!8843 = !DILocation(line: 2498, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2498, column: 11)
!8845 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2497, column: 5)
!8846 = !DILocation(line: 2498, column: 39, scope: !8844)
!8847 = !DILocation(line: 2498, column: 11, scope: !8845)
!8848 = !DILocation(line: 2500, column: 24, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2500, column: 15)
!8850 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 2499, column: 9)
!8851 = !DILocation(line: 2500, column: 29, scope: !8849)
!8852 = !DILocation(line: 2500, column: 34, scope: !8849)
!8853 = !DILocation(line: 2500, column: 15, scope: !8849)
!8854 = !DILocation(line: 2500, column: 43, scope: !8849)
!8855 = !DILocation(line: 2500, column: 15, scope: !8850)
!8856 = !DILocation(line: 2501, column: 13, scope: !8849)
!8857 = !DILocation(line: 2502, column: 9, scope: !8850)
!8858 = !DILocation(line: 2503, column: 23, scope: !8845)
!8859 = !DILocation(line: 2503, column: 15, scope: !8845)
!8860 = !DILocation(line: 2503, column: 29, scope: !8845)
!8861 = !DILocation(line: 2503, column: 12, scope: !8845)
!8862 = distinct !{!8862, !8839, !8863}
!8863 = !DILocation(line: 2504, column: 5, scope: !8826)
!8864 = !DILocation(line: 2506, column: 3, scope: !8826)
!8865 = !DILocation(line: 2507, column: 1, scope: !8826)
!8866 = !DILocalVariable(name: "dest", arg: 1, scope: !138, file: !3, line: 2281, type: !142)
!8867 = !DILocation(line: 2281, column: 26, scope: !138)
!8868 = !DILocalVariable(name: "src", arg: 2, scope: !138, file: !3, line: 2281, type: !145)
!8869 = !DILocation(line: 2281, column: 45, scope: !138)
!8870 = !DILocalVariable(name: "equals_end", arg: 3, scope: !138, file: !3, line: 2281, type: !141)
!8871 = !DILocation(line: 2281, column: 55, scope: !138)
!8872 = !DILocalVariable(name: "output_count", arg: 4, scope: !138, file: !3, line: 2282, type: !148)
!8873 = !DILocation(line: 2282, column: 27, scope: !138)
!8874 = !DILocalVariable(name: "num", scope: !138, file: !3, line: 2284, type: !144)
!8875 = !DILocation(line: 2284, column: 8, scope: !138)
!8876 = !DILocalVariable(name: "count", scope: !138, file: !3, line: 2285, type: !149)
!8877 = !DILocation(line: 2285, column: 10, scope: !138)
!8878 = !DILocalVariable(name: "state", scope: !138, file: !3, line: 2288, type: !137)
!8879 = !DILocation(line: 2288, column: 5, scope: !138)
!8880 = !DILocalVariable(name: "p", scope: !138, file: !3, line: 2289, type: !146)
!8881 = !DILocation(line: 2289, column: 15, scope: !138)
!8882 = !DILocalVariable(name: "q", scope: !138, file: !3, line: 2290, type: !143)
!8883 = !DILocation(line: 2290, column: 9, scope: !138)
!8884 = !DILocation(line: 2292, column: 8, scope: !138)
!8885 = !DILocation(line: 2292, column: 7, scope: !138)
!8886 = !DILocation(line: 2292, column: 5, scope: !138)
!8887 = !DILocation(line: 2293, column: 8, scope: !138)
!8888 = !DILocation(line: 2293, column: 7, scope: !138)
!8889 = !DILocation(line: 2293, column: 5, scope: !138)
!8890 = !DILocation(line: 2295, column: 9, scope: !138)
!8891 = !DILocation(line: 2296, column: 7, scope: !138)
!8892 = !DILocation(line: 2298, column: 9, scope: !138)
!8893 = !DILocation(line: 2299, column: 3, scope: !138)
!8894 = !DILocation(line: 2299, column: 10, scope: !138)
!8895 = !DILocation(line: 2299, column: 16, scope: !138)
!8896 = !DILocation(line: 2301, column: 15, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !138, file: !3, line: 2300, column: 5)
!8898 = !DILocation(line: 2301, column: 7, scope: !8897)
!8899 = !DILocation(line: 2304, column: 20, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2302, column: 9)
!8901 = !DILocation(line: 2304, column: 19, scope: !8900)
!8902 = !DILocation(line: 2304, column: 11, scope: !8900)
!8903 = !DILocation(line: 2308, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2305, column: 13)
!8905 = !DILocation(line: 2309, column: 15, scope: !8904)
!8906 = !DILocation(line: 2311, column: 21, scope: !8904)
!8907 = !DILocation(line: 2312, column: 15, scope: !8904)
!8908 = !DILocation(line: 2313, column: 15, scope: !8904)
!8909 = !DILocation(line: 2315, column: 21, scope: !8904)
!8910 = !DILocation(line: 2316, column: 15, scope: !8904)
!8911 = !DILocation(line: 2317, column: 15, scope: !8904)
!8912 = !DILocation(line: 2319, column: 19, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 2319, column: 19)
!8914 = !DILocation(line: 2319, column: 19, scope: !8904)
!8915 = !DILocation(line: 2321, column: 25, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 2320, column: 17)
!8917 = !DILocation(line: 2322, column: 19, scope: !8916)
!8918 = !DILocation(line: 2324, column: 15, scope: !8904)
!8919 = !DILocation(line: 2326, column: 27, scope: !8904)
!8920 = !DILocation(line: 2326, column: 24, scope: !8904)
!8921 = !DILocation(line: 2326, column: 18, scope: !8904)
!8922 = !DILocation(line: 2326, column: 22, scope: !8904)
!8923 = !DILocation(line: 2327, column: 15, scope: !8904)
!8924 = !DILocation(line: 2328, column: 15, scope: !8904)
!8925 = !DILocation(line: 2330, column: 11, scope: !8900)
!8926 = !DILocation(line: 2333, column: 20, scope: !8900)
!8927 = !DILocation(line: 2333, column: 19, scope: !8900)
!8928 = !DILocation(line: 2333, column: 11, scope: !8900)
!8929 = !DILocation(line: 2343, column: 21, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2334, column: 13)
!8931 = !DILocation(line: 2344, column: 22, scope: !8930)
!8932 = !DILocation(line: 2344, column: 21, scope: !8930)
!8933 = !DILocation(line: 2344, column: 24, scope: !8930)
!8934 = !DILocation(line: 2344, column: 19, scope: !8930)
!8935 = !DILocation(line: 2345, column: 15, scope: !8930)
!8936 = !DILocation(line: 2348, column: 21, scope: !8930)
!8937 = !DILocation(line: 2349, column: 19, scope: !8930)
!8938 = !DILocation(line: 2350, column: 15, scope: !8930)
!8939 = !DILocation(line: 2352, column: 19, scope: !8930)
!8940 = !DILocation(line: 2353, column: 15, scope: !8930)
!8941 = !DILocation(line: 2355, column: 19, scope: !8930)
!8942 = !DILocation(line: 2356, column: 15, scope: !8930)
!8943 = !DILocation(line: 2358, column: 19, scope: !8930)
!8944 = !DILocation(line: 2359, column: 15, scope: !8930)
!8945 = !DILocation(line: 2361, column: 19, scope: !8930)
!8946 = !DILocation(line: 2362, column: 15, scope: !8930)
!8947 = !DILocation(line: 2364, column: 19, scope: !8930)
!8948 = !DILocation(line: 2365, column: 15, scope: !8930)
!8949 = !DILocation(line: 2367, column: 19, scope: !8930)
!8950 = !DILocation(line: 2368, column: 15, scope: !8930)
!8951 = !DILocation(line: 2370, column: 19, scope: !8930)
!8952 = !DILocation(line: 2371, column: 15, scope: !8930)
!8953 = !DILocation(line: 2373, column: 19, scope: !8930)
!8954 = !DILocation(line: 2374, column: 15, scope: !8930)
!8955 = !DILocation(line: 2376, column: 19, scope: !8930)
!8956 = !DILocation(line: 2377, column: 15, scope: !8930)
!8957 = !DILocation(line: 2379, column: 19, scope: !8930)
!8958 = !DILocation(line: 2380, column: 15, scope: !8930)
!8959 = !DILocation(line: 2382, column: 21, scope: !8930)
!8960 = !DILocation(line: 2383, column: 15, scope: !8930)
!8961 = !DILocation(line: 2385, column: 22, scope: !8930)
!8962 = !DILocation(line: 2385, column: 21, scope: !8930)
!8963 = !DILocation(line: 2385, column: 19, scope: !8930)
!8964 = !DILocation(line: 2386, column: 15, scope: !8930)
!8965 = !DILocation(line: 2388, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2388, column: 15)
!8967 = !DILocation(line: 2388, column: 21, scope: !8966)
!8968 = !DILocation(line: 2388, column: 15, scope: !8900)
!8969 = !DILocation(line: 2390, column: 24, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2389, column: 13)
!8971 = !DILocation(line: 2390, column: 18, scope: !8970)
!8972 = !DILocation(line: 2390, column: 22, scope: !8970)
!8973 = !DILocation(line: 2391, column: 15, scope: !8970)
!8974 = !DILocation(line: 2392, column: 21, scope: !8970)
!8975 = !DILocation(line: 2393, column: 13, scope: !8970)
!8976 = !DILocation(line: 2394, column: 11, scope: !8900)
!8977 = !DILocation(line: 2395, column: 11, scope: !8900)
!8978 = !DILocation(line: 2398, column: 16, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2398, column: 15)
!8980 = !DILocation(line: 2398, column: 15, scope: !8979)
!8981 = !DILocation(line: 2398, column: 18, scope: !8979)
!8982 = !DILocation(line: 2398, column: 24, scope: !8979)
!8983 = !DILocation(line: 2398, column: 28, scope: !8979)
!8984 = !DILocation(line: 2398, column: 27, scope: !8979)
!8985 = !DILocation(line: 2398, column: 30, scope: !8979)
!8986 = !DILocation(line: 2398, column: 15, scope: !8900)
!8987 = !DILocation(line: 2400, column: 24, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2399, column: 13)
!8989 = !DILocation(line: 2400, column: 18, scope: !8988)
!8990 = !DILocation(line: 2400, column: 22, scope: !8988)
!8991 = !DILocation(line: 2401, column: 15, scope: !8988)
!8992 = !DILocation(line: 2402, column: 21, scope: !8988)
!8993 = !DILocation(line: 2403, column: 13, scope: !8988)
!8994 = !DILocation(line: 2405, column: 20, scope: !8979)
!8995 = !DILocation(line: 2405, column: 24, scope: !8979)
!8996 = !DILocation(line: 2405, column: 36, scope: !8979)
!8997 = !DILocation(line: 2405, column: 33, scope: !8979)
!8998 = !DILocation(line: 2405, column: 40, scope: !8979)
!8999 = !DILocation(line: 2405, column: 30, scope: !8979)
!9000 = !DILocation(line: 2405, column: 19, scope: !8979)
!9001 = !DILocation(line: 2405, column: 17, scope: !8979)
!9002 = !DILocation(line: 2406, column: 11, scope: !8900)
!9003 = !DILocation(line: 2409, column: 20, scope: !8900)
!9004 = !DILocation(line: 2409, column: 19, scope: !8900)
!9005 = !DILocation(line: 2409, column: 11, scope: !8900)
!9006 = !DILocation(line: 2421, column: 22, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2410, column: 13)
!9008 = !DILocation(line: 2421, column: 26, scope: !9007)
!9009 = !DILocation(line: 2421, column: 38, scope: !9007)
!9010 = !DILocation(line: 2421, column: 35, scope: !9007)
!9011 = !DILocation(line: 2421, column: 42, scope: !9007)
!9012 = !DILocation(line: 2421, column: 32, scope: !9007)
!9013 = !DILocation(line: 2421, column: 21, scope: !9007)
!9014 = !DILocation(line: 2421, column: 19, scope: !9007)
!9015 = !DILocation(line: 2422, column: 15, scope: !9007)
!9016 = !DILocation(line: 2429, column: 22, scope: !9007)
!9017 = !DILocation(line: 2429, column: 26, scope: !9007)
!9018 = !DILocation(line: 2429, column: 38, scope: !9007)
!9019 = !DILocation(line: 2429, column: 35, scope: !9007)
!9020 = !DILocation(line: 2429, column: 42, scope: !9007)
!9021 = !DILocation(line: 2429, column: 32, scope: !9007)
!9022 = !DILocation(line: 2429, column: 49, scope: !9007)
!9023 = !DILocation(line: 2429, column: 21, scope: !9007)
!9024 = !DILocation(line: 2429, column: 19, scope: !9007)
!9025 = !DILocation(line: 2430, column: 15, scope: !9007)
!9026 = !DILocation(line: 2437, column: 22, scope: !9007)
!9027 = !DILocation(line: 2437, column: 26, scope: !9007)
!9028 = !DILocation(line: 2437, column: 38, scope: !9007)
!9029 = !DILocation(line: 2437, column: 35, scope: !9007)
!9030 = !DILocation(line: 2437, column: 42, scope: !9007)
!9031 = !DILocation(line: 2437, column: 32, scope: !9007)
!9032 = !DILocation(line: 2437, column: 49, scope: !9007)
!9033 = !DILocation(line: 2437, column: 21, scope: !9007)
!9034 = !DILocation(line: 2437, column: 19, scope: !9007)
!9035 = !DILocation(line: 2438, column: 15, scope: !9007)
!9036 = !DILocation(line: 2440, column: 24, scope: !9007)
!9037 = !DILocation(line: 2440, column: 18, scope: !9007)
!9038 = !DILocation(line: 2440, column: 22, scope: !9007)
!9039 = !DILocation(line: 2441, column: 15, scope: !9007)
!9040 = !DILocation(line: 2442, column: 21, scope: !9007)
!9041 = !DILocation(line: 2443, column: 15, scope: !9007)
!9042 = !DILocation(line: 2445, column: 11, scope: !8900)
!9043 = !DILocation(line: 2448, column: 17, scope: !8900)
!9044 = !DILocation(line: 2449, column: 16, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2449, column: 15)
!9046 = !DILocation(line: 2449, column: 15, scope: !9045)
!9047 = !DILocation(line: 2449, column: 18, scope: !9045)
!9048 = !DILocation(line: 2449, column: 25, scope: !9045)
!9049 = !DILocation(line: 2449, column: 29, scope: !9045)
!9050 = !DILocation(line: 2449, column: 28, scope: !9045)
!9051 = !DILocation(line: 2449, column: 31, scope: !9045)
!9052 = !DILocation(line: 2449, column: 15, scope: !8900)
!9053 = !DILocation(line: 2451, column: 27, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2450, column: 13)
!9055 = !DILocation(line: 2451, column: 24, scope: !9054)
!9056 = !DILocation(line: 2451, column: 31, scope: !9054)
!9057 = !DILocation(line: 2451, column: 18, scope: !9054)
!9058 = !DILocation(line: 2451, column: 22, scope: !9054)
!9059 = !DILocation(line: 2452, column: 15, scope: !9054)
!9060 = !DILocation(line: 2453, column: 13, scope: !9054)
!9061 = !DILocation(line: 2454, column: 21, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2454, column: 20)
!9063 = !DILocation(line: 2454, column: 20, scope: !9062)
!9064 = !DILocation(line: 2454, column: 23, scope: !9062)
!9065 = !DILocation(line: 2454, column: 20, scope: !9045)
!9066 = !DILocation(line: 2456, column: 18, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2455, column: 13)
!9068 = !DILocation(line: 2456, column: 22, scope: !9067)
!9069 = !DILocation(line: 2457, column: 15, scope: !9067)
!9070 = !DILocation(line: 2458, column: 13, scope: !9067)
!9071 = !DILocation(line: 2460, column: 19, scope: !9062)
!9072 = !DILocation(line: 2461, column: 11, scope: !8900)
!9073 = !DILocation(line: 2464, column: 11, scope: !8900)
!9074 = distinct !{!9074, !8893, !9075}
!9075 = !DILocation(line: 2466, column: 5, scope: !138)
!9076 = !DILocation(line: 2468, column: 11, scope: !138)
!9077 = !DILocation(line: 2468, column: 4, scope: !138)
!9078 = !DILocation(line: 2468, column: 9, scope: !138)
!9079 = !DILocation(line: 2469, column: 10, scope: !138)
!9080 = !DILocation(line: 2469, column: 4, scope: !138)
!9081 = !DILocation(line: 2469, column: 8, scope: !138)
!9082 = !DILocation(line: 2470, column: 19, scope: !138)
!9083 = !DILocation(line: 2470, column: 4, scope: !138)
!9084 = !DILocation(line: 2470, column: 17, scope: !138)
!9085 = !DILocation(line: 2472, column: 10, scope: !138)
!9086 = !DILocation(line: 2472, column: 16, scope: !138)
!9087 = !DILocation(line: 2472, column: 3, scope: !138)
!9088 = distinct !DISubprogram(name: "getenv_quoting_style", scope: !3, file: !3, line: 2655, type: !341, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9089 = !DILocalVariable(name: "q_style", scope: !9088, file: !3, line: 2657, type: !146)
!9090 = !DILocation(line: 2657, column: 15, scope: !9088)
!9091 = !DILocation(line: 2657, column: 25, scope: !9088)
!9092 = !DILocation(line: 2658, column: 7, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 2658, column: 7)
!9094 = !DILocation(line: 2658, column: 7, scope: !9088)
!9095 = !DILocalVariable(name: "i", scope: !9096, file: !3, line: 2660, type: !27)
!9096 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 2659, column: 5)
!9097 = !DILocation(line: 2660, column: 11, scope: !9096)
!9098 = !DILocation(line: 2660, column: 15, scope: !9096)
!9099 = !DILocation(line: 2661, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 2661, column: 11)
!9101 = !DILocation(line: 2661, column: 13, scope: !9100)
!9102 = !DILocation(line: 2661, column: 11, scope: !9096)
!9103 = !DILocation(line: 2662, column: 53, scope: !9100)
!9104 = !DILocation(line: 2662, column: 34, scope: !9100)
!9105 = !DILocation(line: 2662, column: 9, scope: !9100)
!9106 = !DILocation(line: 2665, column: 8, scope: !9100)
!9107 = !DILocation(line: 2666, column: 23, scope: !9100)
!9108 = !DILocation(line: 2666, column: 16, scope: !9100)
!9109 = !DILocation(line: 2664, column: 9, scope: !9100)
!9110 = !DILocation(line: 2667, column: 5, scope: !9096)
!9111 = !DILocation(line: 2668, column: 1, scope: !9088)
!9112 = distinct !DISubprogram(name: "set_line_length", scope: !3, file: !3, line: 1663, type: !568, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9113 = !DILocalVariable(name: "spec", arg: 1, scope: !9112, file: !3, line: 1663, type: !146)
!9114 = !DILocation(line: 1663, column: 30, scope: !9112)
!9115 = !DILocalVariable(name: "val", scope: !9112, file: !3, line: 1665, type: !168)
!9116 = !DILocation(line: 1665, column: 13, scope: !9112)
!9117 = !DILocation(line: 1669, column: 23, scope: !9112)
!9118 = !DILocation(line: 1669, column: 11, scope: !9112)
!9119 = !DILocation(line: 1669, column: 3, scope: !9112)
!9120 = !DILocation(line: 1672, column: 21, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1670, column: 5)
!9122 = !DILocation(line: 1672, column: 19, scope: !9121)
!9123 = !DILocation(line: 1673, column: 7, scope: !9121)
!9124 = !DILocation(line: 1676, column: 19, scope: !9121)
!9125 = !DILocation(line: 1677, column: 7, scope: !9121)
!9126 = !DILocation(line: 1680, column: 7, scope: !9121)
!9127 = !DILocation(line: 1682, column: 1, scope: !9112)
!9128 = distinct !DISubprogram(name: "add_ignore_pattern", scope: !3, file: !3, line: 2893, type: !570, scopeLine: 2894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9129 = !DILocalVariable(name: "pattern", arg: 1, scope: !9128, file: !3, line: 2893, type: !146)
!9130 = !DILocation(line: 2893, column: 33, scope: !9128)
!9131 = !DILocalVariable(name: "ignore", scope: !9128, file: !3, line: 2895, type: !511)
!9132 = !DILocation(line: 2895, column: 26, scope: !9128)
!9133 = !DILocation(line: 2897, column: 12, scope: !9128)
!9134 = !DILocation(line: 2897, column: 10, scope: !9128)
!9135 = !DILocation(line: 2898, column: 21, scope: !9128)
!9136 = !DILocation(line: 2898, column: 3, scope: !9128)
!9137 = !DILocation(line: 2898, column: 11, scope: !9128)
!9138 = !DILocation(line: 2898, column: 19, scope: !9128)
!9139 = !DILocation(line: 2900, column: 18, scope: !9128)
!9140 = !DILocation(line: 2900, column: 3, scope: !9128)
!9141 = !DILocation(line: 2900, column: 11, scope: !9128)
!9142 = !DILocation(line: 2900, column: 16, scope: !9128)
!9143 = !DILocation(line: 2901, column: 21, scope: !9128)
!9144 = !DILocation(line: 2901, column: 19, scope: !9128)
!9145 = !DILocation(line: 2902, column: 1, scope: !9128)
!9146 = distinct !DISubprogram(name: "bad_cast", scope: !810, file: !810, line: 695, type: !572, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9147 = !DILocalVariable(name: "s", arg: 1, scope: !9146, file: !810, line: 695, type: !146)
!9148 = !DILocation(line: 695, column: 23, scope: !9146)
!9149 = !DILocation(line: 697, column: 19, scope: !9146)
!9150 = !DILocation(line: 697, column: 3, scope: !9146)
!9151 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 5127, type: !174, scopeLine: 5128, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9152 = !DILocalVariable(name: "status", arg: 1, scope: !9151, file: !3, line: 5127, type: !27)
!9153 = !DILocation(line: 5127, column: 12, scope: !9151)
!9154 = !DILocation(line: 5129, column: 7, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 5129, column: 7)
!9156 = !DILocation(line: 5129, column: 14, scope: !9155)
!9157 = !DILocation(line: 5129, column: 7, scope: !9151)
!9158 = !DILocation(line: 5130, column: 5, scope: !9155)
!9159 = !DILocation(line: 5130, column: 5, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 5130, column: 5)
!9161 = !DILocation(line: 5133, column: 15, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 5132, column: 5)
!9163 = !DILocation(line: 5133, column: 55, scope: !9162)
!9164 = !DILocation(line: 5133, column: 7, scope: !9162)
!9165 = !DILocation(line: 5134, column: 7, scope: !9162)
!9166 = !DILocation(line: 5139, column: 7, scope: !9162)
!9167 = !DILocation(line: 5141, column: 7, scope: !9162)
!9168 = !DILocation(line: 5147, column: 7, scope: !9162)
!9169 = !DILocation(line: 5151, column: 7, scope: !9162)
!9170 = !DILocation(line: 5158, column: 7, scope: !9162)
!9171 = !DILocation(line: 5167, column: 7, scope: !9162)
!9172 = !DILocation(line: 5175, column: 7, scope: !9162)
!9173 = !DILocation(line: 5178, column: 7, scope: !9162)
!9174 = !DILocation(line: 5184, column: 7, scope: !9162)
!9175 = !DILocation(line: 5187, column: 7, scope: !9162)
!9176 = !DILocation(line: 5191, column: 7, scope: !9162)
!9177 = !DILocation(line: 5201, column: 7, scope: !9162)
!9178 = !DILocation(line: 5205, column: 7, scope: !9162)
!9179 = !DILocation(line: 5214, column: 7, scope: !9162)
!9180 = !DILocation(line: 5218, column: 7, scope: !9162)
!9181 = !DILocation(line: 5226, column: 7, scope: !9162)
!9182 = !DILocation(line: 5233, column: 7, scope: !9162)
!9183 = !DILocation(line: 5244, column: 7, scope: !9162)
!9184 = !DILocation(line: 5249, column: 7, scope: !9162)
!9185 = !DILocation(line: 5260, column: 7, scope: !9162)
!9186 = !DILocation(line: 5263, column: 7, scope: !9162)
!9187 = !DILocation(line: 5267, column: 7, scope: !9162)
!9188 = !DILocation(line: 5274, column: 7, scope: !9162)
!9189 = !DILocation(line: 5282, column: 7, scope: !9162)
!9190 = !DILocation(line: 5283, column: 7, scope: !9162)
!9191 = !DILocation(line: 5284, column: 7, scope: !9162)
!9192 = !DILocation(line: 5285, column: 7, scope: !9162)
!9193 = !DILocation(line: 5293, column: 7, scope: !9162)
!9194 = !DILocation(line: 5300, column: 7, scope: !9162)
!9195 = !DILocation(line: 5307, column: 28, scope: !9162)
!9196 = !DILocation(line: 5307, column: 7, scope: !9162)
!9197 = !DILocation(line: 5309, column: 9, scope: !9151)
!9198 = !DILocation(line: 5309, column: 3, scope: !9151)
!9199 = distinct !DISubprogram(name: "abformat_init", scope: !3, file: !3, line: 1152, type: !341, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9200 = !DILocalVariable(name: "pb", scope: !9199, file: !3, line: 1154, type: !561)
!9201 = !DILocation(line: 1154, column: 15, scope: !9199)
!9202 = !DILocalVariable(name: "recent", scope: !9203, file: !3, line: 1155, type: !27)
!9203 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1155, column: 3)
!9204 = !DILocation(line: 1155, column: 12, scope: !9203)
!9205 = !DILocation(line: 1155, column: 8, scope: !9203)
!9206 = !DILocation(line: 1155, column: 24, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 1155, column: 3)
!9208 = !DILocation(line: 1155, column: 31, scope: !9207)
!9209 = !DILocation(line: 1155, column: 3, scope: !9203)
!9210 = !DILocation(line: 1156, column: 52, scope: !9207)
!9211 = !DILocation(line: 1156, column: 35, scope: !9207)
!9212 = !DILocation(line: 1156, column: 18, scope: !9207)
!9213 = !DILocation(line: 1156, column: 8, scope: !9207)
!9214 = !DILocation(line: 1156, column: 5, scope: !9207)
!9215 = !DILocation(line: 1156, column: 16, scope: !9207)
!9216 = !DILocation(line: 1155, column: 42, scope: !9207)
!9217 = !DILocation(line: 1155, column: 3, scope: !9207)
!9218 = distinct !{!9218, !9209, !9219}
!9219 = !DILocation(line: 1156, column: 59, scope: !9203)
!9220 = !DILocation(line: 1157, column: 10, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1157, column: 7)
!9222 = !DILocation(line: 1157, column: 16, scope: !9221)
!9223 = !DILocation(line: 1157, column: 19, scope: !9221)
!9224 = !DILocation(line: 1157, column: 7, scope: !9199)
!9225 = !DILocation(line: 1158, column: 5, scope: !9221)
!9226 = !DILocalVariable(name: "abmon", scope: !9199, file: !3, line: 1160, type: !574)
!9227 = !DILocation(line: 1160, column: 8, scope: !9199)
!9228 = !DILocation(line: 1161, column: 21, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1161, column: 7)
!9230 = !DILocation(line: 1161, column: 9, scope: !9229)
!9231 = !DILocation(line: 1161, column: 7, scope: !9199)
!9232 = !DILocation(line: 1162, column: 5, scope: !9229)
!9233 = !DILocalVariable(name: "recent", scope: !9234, file: !3, line: 1164, type: !27)
!9234 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1164, column: 3)
!9235 = !DILocation(line: 1164, column: 12, scope: !9234)
!9236 = !DILocation(line: 1164, column: 8, scope: !9234)
!9237 = !DILocation(line: 1164, column: 24, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1164, column: 3)
!9239 = !DILocation(line: 1164, column: 31, scope: !9238)
!9240 = !DILocation(line: 1164, column: 3, scope: !9234)
!9241 = !DILocalVariable(name: "fmt", scope: !9242, file: !3, line: 1166, type: !146)
!9242 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 1165, column: 5)
!9243 = !DILocation(line: 1166, column: 19, scope: !9242)
!9244 = !DILocation(line: 1166, column: 42, scope: !9242)
!9245 = !DILocation(line: 1166, column: 25, scope: !9242)
!9246 = !DILocalVariable(name: "i", scope: !9247, file: !3, line: 1167, type: !27)
!9247 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1167, column: 7)
!9248 = !DILocation(line: 1167, column: 16, scope: !9247)
!9249 = !DILocation(line: 1167, column: 12, scope: !9247)
!9250 = !DILocation(line: 1167, column: 23, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1167, column: 7)
!9252 = !DILocation(line: 1167, column: 25, scope: !9251)
!9253 = !DILocation(line: 1167, column: 7, scope: !9247)
!9254 = !DILocalVariable(name: "nfmt", scope: !9255, file: !3, line: 1169, type: !143)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 1168, column: 9)
!9256 = !DILocation(line: 1169, column: 17, scope: !9255)
!9257 = !DILocation(line: 1169, column: 33, scope: !9255)
!9258 = !DILocation(line: 1169, column: 24, scope: !9255)
!9259 = !DILocation(line: 1169, column: 41, scope: !9255)
!9260 = !DILocalVariable(name: "nbytes", scope: !9255, file: !3, line: 1170, type: !27)
!9261 = !DILocation(line: 1170, column: 15, scope: !9255)
!9262 = !DILocation(line: 1172, column: 20, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1172, column: 15)
!9264 = !DILocation(line: 1172, column: 17, scope: !9263)
!9265 = !DILocation(line: 1172, column: 15, scope: !9255)
!9266 = !DILocation(line: 1173, column: 32, scope: !9263)
!9267 = !DILocation(line: 1173, column: 59, scope: !9263)
!9268 = !DILocation(line: 1173, column: 22, scope: !9263)
!9269 = !DILocation(line: 1173, column: 20, scope: !9263)
!9270 = !DILocation(line: 1173, column: 13, scope: !9263)
!9271 = !DILocation(line: 1176, column: 25, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 1176, column: 19)
!9273 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 1175, column: 13)
!9274 = !DILocation(line: 1176, column: 22, scope: !9272)
!9275 = !DILocation(line: 1176, column: 35, scope: !9272)
!9276 = !DILocation(line: 1176, column: 33, scope: !9272)
!9277 = !DILocation(line: 1176, column: 39, scope: !9272)
!9278 = !DILocation(line: 1176, column: 19, scope: !9273)
!9279 = !DILocation(line: 1177, column: 17, scope: !9272)
!9280 = !DILocalVariable(name: "prefix_len", scope: !9273, file: !3, line: 1178, type: !27)
!9281 = !DILocation(line: 1178, column: 19, scope: !9273)
!9282 = !DILocation(line: 1178, column: 35, scope: !9273)
!9283 = !DILocation(line: 1178, column: 32, scope: !9273)
!9284 = !DILocation(line: 1178, column: 45, scope: !9273)
!9285 = !DILocation(line: 1178, column: 43, scope: !9273)
!9286 = !DILocation(line: 1179, column: 34, scope: !9273)
!9287 = !DILocation(line: 1180, column: 34, scope: !9273)
!9288 = !DILocation(line: 1180, column: 46, scope: !9273)
!9289 = !DILocation(line: 1180, column: 57, scope: !9273)
!9290 = !DILocation(line: 1180, column: 51, scope: !9273)
!9291 = !DILocation(line: 1180, column: 64, scope: !9273)
!9292 = !DILocation(line: 1180, column: 61, scope: !9273)
!9293 = !DILocation(line: 1180, column: 72, scope: !9273)
!9294 = !DILocation(line: 1179, column: 24, scope: !9273)
!9295 = !DILocation(line: 1179, column: 22, scope: !9273)
!9296 = !DILocation(line: 1183, column: 23, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1183, column: 15)
!9298 = !DILocation(line: 1183, column: 20, scope: !9297)
!9299 = !DILocation(line: 1183, column: 30, scope: !9297)
!9300 = !DILocation(line: 1183, column: 33, scope: !9297)
!9301 = !DILocation(line: 1183, column: 40, scope: !9297)
!9302 = !DILocation(line: 1183, column: 15, scope: !9255)
!9303 = !DILocation(line: 1184, column: 13, scope: !9297)
!9304 = !DILocation(line: 1185, column: 9, scope: !9255)
!9305 = !DILocation(line: 1167, column: 32, scope: !9251)
!9306 = !DILocation(line: 1167, column: 7, scope: !9251)
!9307 = distinct !{!9307, !9253, !9308}
!9308 = !DILocation(line: 1185, column: 9, scope: !9247)
!9309 = !DILocation(line: 1186, column: 5, scope: !9242)
!9310 = !DILocation(line: 1164, column: 42, scope: !9238)
!9311 = !DILocation(line: 1164, column: 3, scope: !9238)
!9312 = distinct !{!9312, !9240, !9313}
!9313 = !DILocation(line: 1186, column: 5, scope: !9234)
!9314 = !DILocation(line: 1188, column: 16, scope: !9199)
!9315 = !DILocation(line: 1189, column: 1, scope: !9199)
!9316 = distinct !DISubprogram(name: "first_percent_b", scope: !3, file: !3, line: 1071, type: !579, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9317 = !DILocalVariable(name: "fmt", arg: 1, scope: !9316, file: !3, line: 1071, type: !146)
!9318 = !DILocation(line: 1071, column: 30, scope: !9316)
!9319 = !DILocation(line: 1073, column: 3, scope: !9316)
!9320 = !DILocation(line: 1073, column: 11, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1073, column: 3)
!9322 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1073, column: 3)
!9323 = !DILocation(line: 1073, column: 10, scope: !9321)
!9324 = !DILocation(line: 1073, column: 3, scope: !9322)
!9325 = !DILocation(line: 1074, column: 9, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1074, column: 9)
!9327 = !DILocation(line: 1074, column: 16, scope: !9326)
!9328 = !DILocation(line: 1074, column: 9, scope: !9321)
!9329 = !DILocation(line: 1075, column: 15, scope: !9326)
!9330 = !DILocation(line: 1075, column: 7, scope: !9326)
!9331 = !DILocation(line: 1077, column: 26, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1076, column: 9)
!9333 = !DILocation(line: 1077, column: 19, scope: !9332)
!9334 = !DILocation(line: 1078, column: 22, scope: !9332)
!9335 = !DILocation(line: 1078, column: 26, scope: !9332)
!9336 = !DILocation(line: 1079, column: 9, scope: !9332)
!9337 = !DILocation(line: 1074, column: 19, scope: !9326)
!9338 = !DILocation(line: 1073, column: 19, scope: !9321)
!9339 = !DILocation(line: 1073, column: 3, scope: !9321)
!9340 = distinct !{!9340, !9324, !9341}
!9341 = !DILocation(line: 1079, column: 9, scope: !9322)
!9342 = !DILocation(line: 1080, column: 3, scope: !9316)
!9343 = !DILocation(line: 1081, column: 1, scope: !9316)
!9344 = distinct !DISubprogram(name: "abmon_init", scope: !3, file: !3, line: 1117, type: !581, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9345 = !DILocalVariable(name: "abmon", arg: 1, scope: !9344, file: !3, line: 1117, type: !583)
!9346 = !DILocation(line: 1117, column: 18, scope: !9344)
!9347 = !DILocalVariable(name: "required_mon_width", scope: !9344, file: !3, line: 1122, type: !149)
!9348 = !DILocation(line: 1122, column: 10, scope: !9344)
!9349 = !DILocalVariable(name: "curr_max_width", scope: !9344, file: !3, line: 1123, type: !149)
!9350 = !DILocation(line: 1123, column: 10, scope: !9344)
!9351 = !DILocation(line: 1124, column: 3, scope: !9344)
!9352 = !DILocation(line: 1126, column: 24, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1125, column: 5)
!9354 = !DILocation(line: 1126, column: 22, scope: !9353)
!9355 = !DILocation(line: 1127, column: 26, scope: !9353)
!9356 = !DILocalVariable(name: "i", scope: !9357, file: !3, line: 1128, type: !27)
!9357 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1128, column: 7)
!9358 = !DILocation(line: 1128, column: 16, scope: !9357)
!9359 = !DILocation(line: 1128, column: 12, scope: !9357)
!9360 = !DILocation(line: 1128, column: 23, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 1128, column: 7)
!9362 = !DILocation(line: 1128, column: 25, scope: !9361)
!9363 = !DILocation(line: 1128, column: 7, scope: !9357)
!9364 = !DILocalVariable(name: "width", scope: !9365, file: !3, line: 1130, type: !149)
!9365 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1129, column: 9)
!9366 = !DILocation(line: 1130, column: 18, scope: !9365)
!9367 = !DILocation(line: 1130, column: 26, scope: !9365)
!9368 = !DILocalVariable(name: "abbr", scope: !9365, file: !3, line: 1131, type: !146)
!9369 = !DILocation(line: 1131, column: 23, scope: !9365)
!9370 = !DILocation(line: 1131, column: 53, scope: !9365)
!9371 = !DILocation(line: 1131, column: 51, scope: !9365)
!9372 = !DILocation(line: 1131, column: 30, scope: !9365)
!9373 = !DILocation(line: 1132, column: 23, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1132, column: 15)
!9375 = !DILocation(line: 1132, column: 15, scope: !9374)
!9376 = !DILocation(line: 1132, column: 15, scope: !9365)
!9377 = !DILocation(line: 1133, column: 13, scope: !9374)
!9378 = !DILocalVariable(name: "alignment", scope: !9365, file: !3, line: 1134, type: !586)
!9379 = !DILocation(line: 1134, column: 23, scope: !9365)
!9380 = !DILocation(line: 1134, column: 35, scope: !9365)
!9381 = !DILocalVariable(name: "req", scope: !9365, file: !3, line: 1136, type: !149)
!9382 = !DILocation(line: 1136, column: 18, scope: !9365)
!9383 = !DILocation(line: 1136, column: 34, scope: !9365)
!9384 = !DILocation(line: 1136, column: 40, scope: !9365)
!9385 = !DILocation(line: 1136, column: 46, scope: !9365)
!9386 = !DILocation(line: 1137, column: 42, scope: !9365)
!9387 = !DILocation(line: 1136, column: 24, scope: !9365)
!9388 = !DILocation(line: 1138, column: 18, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1138, column: 15)
!9390 = !DILocation(line: 1138, column: 22, scope: !9389)
!9391 = !DILocation(line: 1138, column: 15, scope: !9365)
!9392 = !DILocation(line: 1139, column: 13, scope: !9389)
!9393 = !DILocation(line: 1140, column: 32, scope: !9365)
!9394 = !DILocation(line: 1140, column: 30, scope: !9365)
!9395 = !DILocation(line: 1141, column: 9, scope: !9365)
!9396 = !DILocation(line: 1128, column: 32, scope: !9361)
!9397 = !DILocation(line: 1128, column: 7, scope: !9361)
!9398 = distinct !{!9398, !9363, !9399}
!9399 = !DILocation(line: 1141, column: 9, scope: !9357)
!9400 = !DILocation(line: 1142, column: 5, scope: !9353)
!9401 = !DILocation(line: 1143, column: 10, scope: !9344)
!9402 = !DILocation(line: 1143, column: 27, scope: !9344)
!9403 = !DILocation(line: 1143, column: 25, scope: !9344)
!9404 = distinct !{!9404, !9351, !9405}
!9405 = !DILocation(line: 1143, column: 45, scope: !9344)
!9406 = !DILocation(line: 1145, column: 3, scope: !9344)
!9407 = !DILocation(line: 1147, column: 1, scope: !9344)
!9408 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !810, file: !810, line: 585, type: !341, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9409 = !DILocation(line: 587, column: 3, scope: !9408)
!9410 = !DILocation(line: 590, column: 1, scope: !9408)
!9411 = distinct !DISubprogram(name: "emit_size_note", scope: !810, file: !810, line: 593, type: !341, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9412 = !DILocation(line: 595, column: 3, scope: !9411)
!9413 = !DILocation(line: 600, column: 1, scope: !9411)
!9414 = !DILocalVariable(name: "program", arg: 1, scope: !811, file: !810, line: 631, type: !146)
!9415 = !DILocation(line: 631, column: 34, scope: !811)
!9416 = !DILocalVariable(name: "infomap", scope: !811, file: !810, line: 633, type: !807)
!9417 = !DILocation(line: 633, column: 67, scope: !811)
!9418 = !DILocalVariable(name: "node", scope: !811, file: !810, line: 643, type: !146)
!9419 = !DILocation(line: 643, column: 15, scope: !811)
!9420 = !DILocation(line: 643, column: 22, scope: !811)
!9421 = !DILocalVariable(name: "map_prog", scope: !811, file: !810, line: 644, type: !815)
!9422 = !DILocation(line: 644, column: 25, scope: !811)
!9423 = !DILocation(line: 644, column: 36, scope: !811)
!9424 = !DILocation(line: 646, column: 3, scope: !811)
!9425 = !DILocation(line: 646, column: 10, scope: !811)
!9426 = !DILocation(line: 646, column: 20, scope: !811)
!9427 = !{!9428, !2443, i64 0}
!9428 = !{!"infomap", !2443, i64 0, !2443, i64 8}
!9429 = !DILocation(line: 646, column: 28, scope: !811)
!9430 = !DILocation(line: 646, column: 33, scope: !811)
!9431 = !DILocation(line: 646, column: 31, scope: !811)
!9432 = !DILocation(line: 0, scope: !811)
!9433 = !DILocation(line: 647, column: 13, scope: !811)
!9434 = distinct !{!9434, !9424, !9433}
!9435 = !DILocation(line: 649, column: 7, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !811, file: !810, line: 649, column: 7)
!9437 = !DILocation(line: 649, column: 17, scope: !9436)
!9438 = !{!9428, !2443, i64 8}
!9439 = !DILocation(line: 649, column: 7, scope: !811)
!9440 = !DILocation(line: 650, column: 12, scope: !9436)
!9441 = !DILocation(line: 650, column: 22, scope: !9436)
!9442 = !DILocation(line: 650, column: 10, scope: !9436)
!9443 = !DILocation(line: 650, column: 5, scope: !9436)
!9444 = !DILocation(line: 652, column: 11, scope: !811)
!9445 = !DILocation(line: 652, column: 3, scope: !811)
!9446 = !DILocalVariable(name: "lc_messages", scope: !811, file: !810, line: 656, type: !146)
!9447 = !DILocation(line: 656, column: 15, scope: !811)
!9448 = !DILocation(line: 656, column: 29, scope: !811)
!9449 = !DILocation(line: 657, column: 7, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !811, file: !810, line: 657, column: 7)
!9451 = !DILocation(line: 657, column: 19, scope: !9450)
!9452 = !DILocation(line: 657, column: 22, scope: !9450)
!9453 = !DILocation(line: 657, column: 7, scope: !811)
!9454 = !DILocation(line: 663, column: 7, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9450, file: !810, line: 658, column: 5)
!9456 = !DILocation(line: 665, column: 5, scope: !9455)
!9457 = !DILocation(line: 666, column: 11, scope: !811)
!9458 = !DILocation(line: 667, column: 24, scope: !811)
!9459 = !DILocation(line: 666, column: 3, scope: !811)
!9460 = !DILocation(line: 668, column: 11, scope: !811)
!9461 = !DILocation(line: 669, column: 11, scope: !811)
!9462 = !DILocation(line: 669, column: 17, scope: !811)
!9463 = !DILocation(line: 669, column: 25, scope: !811)
!9464 = !DILocation(line: 669, column: 22, scope: !811)
!9465 = !DILocation(line: 668, column: 3, scope: !811)
!9466 = !DILocation(line: 670, column: 1, scope: !811)
!9467 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9468, file: !9468, line: 53, type: !1483, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1647, retainedNodes: !152)
!9468 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!9469 = !DILocalVariable(name: "file", arg: 1, scope: !9467, file: !9468, line: 53, type: !146)
!9470 = !DILocation(line: 53, column: 34, scope: !9467)
!9471 = !DILocalVariable(name: "size", arg: 2, scope: !9467, file: !9468, line: 53, type: !149)
!9472 = !DILocation(line: 53, column: 47, scope: !9467)
!9473 = !DILocalVariable(name: "symlink_max", scope: !9467, file: !9468, line: 58, type: !149)
!9474 = !DILocation(line: 58, column: 10, scope: !9467)
!9475 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9467, file: !9468, line: 59, type: !149)
!9476 = !DILocation(line: 59, column: 10, scope: !9467)
!9477 = !DILocalVariable(name: "initial_limit", scope: !9467, file: !9468, line: 60, type: !149)
!9478 = !DILocation(line: 60, column: 10, scope: !9467)
!9479 = !DILocation(line: 60, column: 27, scope: !9467)
!9480 = !DILocation(line: 60, column: 41, scope: !9467)
!9481 = !DILocation(line: 60, column: 39, scope: !9467)
!9482 = !DILocation(line: 61, column: 29, scope: !9467)
!9483 = !DILocation(line: 61, column: 41, scope: !9467)
!9484 = !DILocation(line: 62, column: 29, scope: !9467)
!9485 = !DILocalVariable(name: "buf_size", scope: !9467, file: !9468, line: 67, type: !149)
!9486 = !DILocation(line: 67, column: 10, scope: !9467)
!9487 = !DILocation(line: 67, column: 22, scope: !9467)
!9488 = !DILocation(line: 67, column: 27, scope: !9467)
!9489 = !DILocation(line: 68, column: 24, scope: !9467)
!9490 = !DILocation(line: 68, column: 31, scope: !9467)
!9491 = !DILocation(line: 68, column: 29, scope: !9467)
!9492 = !DILocation(line: 68, column: 47, scope: !9467)
!9493 = !DILocation(line: 68, column: 52, scope: !9467)
!9494 = !DILocation(line: 68, column: 58, scope: !9467)
!9495 = !DILocation(line: 70, column: 3, scope: !9467)
!9496 = !DILocalVariable(name: "r", scope: !9497, file: !9468, line: 72, type: !1650)
!9497 = distinct !DILexicalBlock(scope: !9467, file: !9468, line: 71, column: 5)
!9498 = !DILocation(line: 72, column: 15, scope: !9497)
!9499 = !DILocalVariable(name: "link_length", scope: !9497, file: !9468, line: 73, type: !149)
!9500 = !DILocation(line: 73, column: 14, scope: !9497)
!9501 = !DILocalVariable(name: "stackbuf", scope: !9497, file: !9468, line: 74, type: !584)
!9502 = !DILocation(line: 74, column: 12, scope: !9497)
!9503 = !DILocalVariable(name: "buf", scope: !9497, file: !9468, line: 75, type: !143)
!9504 = !DILocation(line: 75, column: 13, scope: !9497)
!9505 = !DILocation(line: 75, column: 19, scope: !9497)
!9506 = !DILocalVariable(name: "buffer", scope: !9497, file: !9468, line: 76, type: !143)
!9507 = !DILocation(line: 76, column: 13, scope: !9497)
!9508 = !DILocation(line: 78, column: 14, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9497, file: !9468, line: 78, column: 11)
!9510 = !DILocation(line: 78, column: 19, scope: !9509)
!9511 = !DILocation(line: 78, column: 24, scope: !9509)
!9512 = !DILocation(line: 78, column: 27, scope: !9509)
!9513 = !DILocation(line: 78, column: 36, scope: !9509)
!9514 = !DILocation(line: 78, column: 11, scope: !9497)
!9515 = !DILocation(line: 80, column: 34, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9509, file: !9468, line: 79, column: 9)
!9517 = !DILocation(line: 80, column: 26, scope: !9516)
!9518 = !DILocation(line: 80, column: 24, scope: !9516)
!9519 = !DILocation(line: 80, column: 15, scope: !9516)
!9520 = !DILocation(line: 81, column: 16, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9516, file: !9468, line: 81, column: 15)
!9522 = !DILocation(line: 81, column: 15, scope: !9516)
!9523 = !DILocation(line: 82, column: 13, scope: !9521)
!9524 = !DILocation(line: 83, column: 9, scope: !9516)
!9525 = !DILocation(line: 85, column: 21, scope: !9497)
!9526 = !DILocation(line: 85, column: 27, scope: !9497)
!9527 = !DILocation(line: 85, column: 32, scope: !9497)
!9528 = !DILocation(line: 85, column: 11, scope: !9497)
!9529 = !DILocation(line: 85, column: 9, scope: !9497)
!9530 = !DILocation(line: 86, column: 21, scope: !9497)
!9531 = !DILocation(line: 86, column: 19, scope: !9497)
!9532 = !DILocation(line: 90, column: 11, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9497, file: !9468, line: 90, column: 11)
!9534 = !DILocation(line: 90, column: 13, scope: !9533)
!9535 = !DILocation(line: 90, column: 17, scope: !9533)
!9536 = !DILocation(line: 90, column: 20, scope: !9533)
!9537 = !DILocation(line: 90, column: 26, scope: !9533)
!9538 = !DILocation(line: 90, column: 11, scope: !9497)
!9539 = !DILocalVariable(name: "saved_errno", scope: !9540, file: !9468, line: 92, type: !27)
!9540 = distinct !DILexicalBlock(scope: !9533, file: !9468, line: 91, column: 9)
!9541 = !DILocation(line: 92, column: 15, scope: !9540)
!9542 = !DILocation(line: 92, column: 29, scope: !9540)
!9543 = !DILocation(line: 93, column: 17, scope: !9540)
!9544 = !DILocation(line: 93, column: 11, scope: !9540)
!9545 = !DILocation(line: 94, column: 19, scope: !9540)
!9546 = !DILocation(line: 94, column: 11, scope: !9540)
!9547 = !DILocation(line: 94, column: 17, scope: !9540)
!9548 = !DILocation(line: 95, column: 11, scope: !9540)
!9549 = !DILocation(line: 98, column: 11, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9497, file: !9468, line: 98, column: 11)
!9551 = !DILocation(line: 98, column: 25, scope: !9550)
!9552 = !DILocation(line: 98, column: 23, scope: !9550)
!9553 = !DILocation(line: 98, column: 11, scope: !9497)
!9554 = !DILocation(line: 100, column: 11, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9550, file: !9468, line: 99, column: 9)
!9556 = !DILocation(line: 100, column: 15, scope: !9555)
!9557 = !DILocation(line: 100, column: 28, scope: !9555)
!9558 = !DILocation(line: 101, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9555, file: !9468, line: 101, column: 15)
!9560 = !DILocation(line: 101, column: 15, scope: !9555)
!9561 = !DILocation(line: 103, column: 32, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9559, file: !9468, line: 102, column: 13)
!9563 = !DILocation(line: 103, column: 44, scope: !9562)
!9564 = !DILocation(line: 103, column: 24, scope: !9562)
!9565 = !DILocation(line: 103, column: 22, scope: !9562)
!9566 = !DILocation(line: 104, column: 19, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9562, file: !9468, line: 104, column: 19)
!9568 = !DILocation(line: 104, column: 19, scope: !9562)
!9569 = !DILocation(line: 105, column: 32, scope: !9567)
!9570 = !DILocation(line: 105, column: 40, scope: !9567)
!9571 = !DILocation(line: 105, column: 45, scope: !9567)
!9572 = !DILocation(line: 105, column: 57, scope: !9567)
!9573 = !DILocation(line: 105, column: 24, scope: !9567)
!9574 = !DILocation(line: 105, column: 17, scope: !9567)
!9575 = !DILocation(line: 106, column: 13, scope: !9562)
!9576 = !DILocation(line: 107, column: 20, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9559, file: !9468, line: 107, column: 20)
!9578 = !DILocation(line: 107, column: 32, scope: !9577)
!9579 = !DILocation(line: 107, column: 38, scope: !9577)
!9580 = !DILocation(line: 107, column: 36, scope: !9577)
!9581 = !DILocation(line: 107, column: 20, scope: !9559)
!9582 = !DILocalVariable(name: "shrinked_buffer", scope: !9583, file: !9468, line: 110, type: !143)
!9583 = distinct !DILexicalBlock(scope: !9577, file: !9468, line: 108, column: 13)
!9584 = !DILocation(line: 110, column: 21, scope: !9583)
!9585 = !DILocation(line: 110, column: 48, scope: !9583)
!9586 = !DILocation(line: 110, column: 56, scope: !9583)
!9587 = !DILocation(line: 110, column: 68, scope: !9583)
!9588 = !DILocation(line: 110, column: 39, scope: !9583)
!9589 = !DILocation(line: 111, column: 19, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9583, file: !9468, line: 111, column: 19)
!9591 = !DILocation(line: 111, column: 35, scope: !9590)
!9592 = !DILocation(line: 111, column: 19, scope: !9583)
!9593 = !DILocation(line: 112, column: 26, scope: !9590)
!9594 = !DILocation(line: 112, column: 24, scope: !9590)
!9595 = !DILocation(line: 112, column: 17, scope: !9590)
!9596 = !DILocation(line: 113, column: 13, scope: !9583)
!9597 = !DILocation(line: 114, column: 18, scope: !9555)
!9598 = !DILocation(line: 114, column: 11, scope: !9555)
!9599 = !DILocation(line: 117, column: 13, scope: !9497)
!9600 = !DILocation(line: 117, column: 7, scope: !9497)
!9601 = !DILocation(line: 118, column: 11, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9497, file: !9468, line: 118, column: 11)
!9603 = !DILocation(line: 118, column: 20, scope: !9602)
!9604 = !DILocation(line: 118, column: 11, scope: !9497)
!9605 = !DILocation(line: 119, column: 18, scope: !9602)
!9606 = !DILocation(line: 119, column: 9, scope: !9602)
!9607 = !DILocation(line: 120, column: 16, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !9468, line: 120, column: 16)
!9609 = !DILocation(line: 120, column: 25, scope: !9608)
!9610 = !DILocation(line: 120, column: 16, scope: !9602)
!9611 = !DILocation(line: 121, column: 18, scope: !9608)
!9612 = !DILocation(line: 121, column: 9, scope: !9608)
!9613 = !DILocation(line: 124, column: 11, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9608, file: !9468, line: 123, column: 9)
!9615 = !DILocation(line: 124, column: 17, scope: !9614)
!9616 = !DILocation(line: 125, column: 11, scope: !9614)
!9617 = distinct !{!9617, !9495, !9618}
!9618 = !DILocation(line: 127, column: 5, scope: !9467)
!9619 = !DILocation(line: 128, column: 1, scope: !9467)
!9620 = distinct !DISubprogram(name: "__argmatch_die", scope: !1097, file: !1097, line: 60, type: !341, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9621 = !DILocation(line: 62, column: 3, scope: !9620)
!9622 = !DILocation(line: 63, column: 1, scope: !9620)
!9623 = distinct !DISubprogram(name: "argmatch", scope: !1097, file: !1097, line: 82, type: !1052, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9624 = !DILocalVariable(name: "arg", arg: 1, scope: !9623, file: !1097, line: 82, type: !146)
!9625 = !DILocation(line: 82, column: 23, scope: !9623)
!9626 = !DILocalVariable(name: "arglist", arg: 2, scope: !9623, file: !1097, line: 82, type: !567)
!9627 = !DILocation(line: 82, column: 47, scope: !9623)
!9628 = !DILocalVariable(name: "vallist", arg: 3, scope: !9623, file: !1097, line: 83, type: !176)
!9629 = !DILocation(line: 83, column: 23, scope: !9623)
!9630 = !DILocalVariable(name: "valsize", arg: 4, scope: !9623, file: !1097, line: 83, type: !149)
!9631 = !DILocation(line: 83, column: 39, scope: !9623)
!9632 = !DILocalVariable(name: "i", scope: !9623, file: !1097, line: 85, type: !149)
!9633 = !DILocation(line: 85, column: 10, scope: !9623)
!9634 = !DILocalVariable(name: "arglen", scope: !9623, file: !1097, line: 86, type: !149)
!9635 = !DILocation(line: 86, column: 10, scope: !9623)
!9636 = !DILocalVariable(name: "matchind", scope: !9623, file: !1097, line: 87, type: !564)
!9637 = !DILocation(line: 87, column: 13, scope: !9623)
!9638 = !DILocalVariable(name: "ambiguous", scope: !9623, file: !1097, line: 88, type: !141)
!9639 = !DILocation(line: 88, column: 8, scope: !9623)
!9640 = !DILocation(line: 90, column: 20, scope: !9623)
!9641 = !DILocation(line: 90, column: 12, scope: !9623)
!9642 = !DILocation(line: 90, column: 10, scope: !9623)
!9643 = !DILocation(line: 93, column: 10, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9623, file: !1097, line: 93, column: 3)
!9645 = !DILocation(line: 93, column: 8, scope: !9644)
!9646 = !DILocation(line: 93, column: 15, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9644, file: !1097, line: 93, column: 3)
!9648 = !DILocation(line: 93, column: 23, scope: !9647)
!9649 = !DILocation(line: 93, column: 3, scope: !9644)
!9650 = !DILocation(line: 95, column: 21, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !1097, line: 95, column: 11)
!9652 = distinct !DILexicalBlock(scope: !9647, file: !1097, line: 94, column: 5)
!9653 = !DILocation(line: 95, column: 29, scope: !9651)
!9654 = !DILocation(line: 95, column: 33, scope: !9651)
!9655 = !DILocation(line: 95, column: 38, scope: !9651)
!9656 = !DILocation(line: 95, column: 12, scope: !9651)
!9657 = !DILocation(line: 95, column: 11, scope: !9652)
!9658 = !DILocation(line: 97, column: 23, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !1097, line: 97, column: 15)
!9660 = distinct !DILexicalBlock(scope: !9651, file: !1097, line: 96, column: 9)
!9661 = !DILocation(line: 97, column: 31, scope: !9659)
!9662 = !DILocation(line: 97, column: 15, scope: !9659)
!9663 = !DILocation(line: 97, column: 38, scope: !9659)
!9664 = !DILocation(line: 97, column: 35, scope: !9659)
!9665 = !DILocation(line: 97, column: 15, scope: !9660)
!9666 = !DILocation(line: 99, column: 20, scope: !9659)
!9667 = !DILocation(line: 99, column: 13, scope: !9659)
!9668 = !DILocation(line: 100, column: 20, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9659, file: !1097, line: 100, column: 20)
!9670 = !DILocation(line: 100, column: 29, scope: !9669)
!9671 = !DILocation(line: 100, column: 20, scope: !9659)
!9672 = !DILocation(line: 102, column: 24, scope: !9669)
!9673 = !DILocation(line: 102, column: 22, scope: !9669)
!9674 = !DILocation(line: 102, column: 13, scope: !9669)
!9675 = !DILocation(line: 106, column: 19, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !1097, line: 106, column: 19)
!9677 = distinct !DILexicalBlock(scope: !9669, file: !1097, line: 104, column: 13)
!9678 = !DILocation(line: 106, column: 27, scope: !9676)
!9679 = !DILocation(line: 107, column: 19, scope: !9676)
!9680 = !DILocation(line: 107, column: 45, scope: !9676)
!9681 = !DILocation(line: 107, column: 55, scope: !9676)
!9682 = !DILocation(line: 107, column: 65, scope: !9676)
!9683 = !DILocation(line: 107, column: 63, scope: !9676)
!9684 = !DILocation(line: 107, column: 53, scope: !9676)
!9685 = !DILocation(line: 108, column: 45, scope: !9676)
!9686 = !DILocation(line: 108, column: 55, scope: !9676)
!9687 = !DILocation(line: 108, column: 65, scope: !9676)
!9688 = !DILocation(line: 108, column: 63, scope: !9676)
!9689 = !DILocation(line: 108, column: 53, scope: !9676)
!9690 = !DILocation(line: 108, column: 68, scope: !9676)
!9691 = !DILocation(line: 107, column: 22, scope: !9676)
!9692 = !DILocation(line: 106, column: 19, scope: !9677)
!9693 = !DILocation(line: 112, column: 29, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9676, file: !1097, line: 109, column: 17)
!9695 = !DILocation(line: 113, column: 17, scope: !9694)
!9696 = !DILocation(line: 115, column: 9, scope: !9660)
!9697 = !DILocation(line: 116, column: 5, scope: !9652)
!9698 = !DILocation(line: 93, column: 28, scope: !9647)
!9699 = !DILocation(line: 93, column: 3, scope: !9647)
!9700 = distinct !{!9700, !9649, !9701}
!9701 = !DILocation(line: 116, column: 5, scope: !9644)
!9702 = !DILocation(line: 117, column: 7, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9623, file: !1097, line: 117, column: 7)
!9704 = !DILocation(line: 117, column: 7, scope: !9623)
!9705 = !DILocation(line: 118, column: 5, scope: !9703)
!9706 = !DILocation(line: 120, column: 12, scope: !9703)
!9707 = !DILocation(line: 120, column: 5, scope: !9703)
!9708 = !DILocation(line: 121, column: 1, scope: !9623)
!9709 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1097, file: !1097, line: 129, type: !1054, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9710 = !DILocalVariable(name: "context", arg: 1, scope: !9709, file: !1097, line: 129, type: !146)
!9711 = !DILocation(line: 129, column: 31, scope: !9709)
!9712 = !DILocalVariable(name: "value", arg: 2, scope: !9709, file: !1097, line: 129, type: !146)
!9713 = !DILocation(line: 129, column: 52, scope: !9709)
!9714 = !DILocalVariable(name: "problem", arg: 3, scope: !9709, file: !1097, line: 129, type: !564)
!9715 = !DILocation(line: 129, column: 69, scope: !9709)
!9716 = !DILocalVariable(name: "format", scope: !9709, file: !1097, line: 131, type: !146)
!9717 = !DILocation(line: 131, column: 15, scope: !9709)
!9718 = !DILocation(line: 131, column: 25, scope: !9709)
!9719 = !DILocation(line: 131, column: 33, scope: !9709)
!9720 = !DILocation(line: 132, column: 27, scope: !9709)
!9721 = !DILocation(line: 133, column: 27, scope: !9709)
!9722 = !DILocation(line: 135, column: 16, scope: !9709)
!9723 = !DILocation(line: 135, column: 69, scope: !9709)
!9724 = !DILocation(line: 135, column: 24, scope: !9709)
!9725 = !DILocation(line: 136, column: 22, scope: !9709)
!9726 = !DILocation(line: 136, column: 10, scope: !9709)
!9727 = !DILocation(line: 135, column: 3, scope: !9709)
!9728 = !DILocation(line: 137, column: 1, scope: !9709)
!9729 = distinct !DISubprogram(name: "argmatch_valid", scope: !1097, file: !1097, line: 144, type: !1056, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9730 = !DILocalVariable(name: "arglist", arg: 1, scope: !9729, file: !1097, line: 144, type: !567)
!9731 = !DILocation(line: 144, column: 36, scope: !9729)
!9732 = !DILocalVariable(name: "vallist", arg: 2, scope: !9729, file: !1097, line: 145, type: !176)
!9733 = !DILocation(line: 145, column: 29, scope: !9729)
!9734 = !DILocalVariable(name: "valsize", arg: 3, scope: !9729, file: !1097, line: 145, type: !149)
!9735 = !DILocation(line: 145, column: 45, scope: !9729)
!9736 = !DILocalVariable(name: "i", scope: !9729, file: !1097, line: 147, type: !149)
!9737 = !DILocation(line: 147, column: 10, scope: !9729)
!9738 = !DILocalVariable(name: "last_val", scope: !9729, file: !1097, line: 148, type: !146)
!9739 = !DILocation(line: 148, column: 15, scope: !9729)
!9740 = !DILocation(line: 152, column: 3, scope: !9729)
!9741 = !DILocation(line: 153, column: 10, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9729, file: !1097, line: 153, column: 3)
!9743 = !DILocation(line: 153, column: 8, scope: !9742)
!9744 = !DILocation(line: 153, column: 15, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9742, file: !1097, line: 153, column: 3)
!9746 = !DILocation(line: 153, column: 23, scope: !9745)
!9747 = !DILocation(line: 153, column: 3, scope: !9742)
!9748 = !DILocation(line: 154, column: 10, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9745, file: !1097, line: 154, column: 9)
!9750 = !DILocation(line: 154, column: 12, scope: !9749)
!9751 = !DILocation(line: 155, column: 9, scope: !9749)
!9752 = !DILocation(line: 155, column: 20, scope: !9749)
!9753 = !DILocation(line: 155, column: 45, scope: !9749)
!9754 = !DILocation(line: 155, column: 55, scope: !9749)
!9755 = !DILocation(line: 155, column: 65, scope: !9749)
!9756 = !DILocation(line: 155, column: 63, scope: !9749)
!9757 = !DILocation(line: 155, column: 53, scope: !9749)
!9758 = !DILocation(line: 155, column: 68, scope: !9749)
!9759 = !DILocation(line: 155, column: 12, scope: !9749)
!9760 = !DILocation(line: 154, column: 9, scope: !9745)
!9761 = !DILocation(line: 157, column: 18, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9749, file: !1097, line: 156, column: 7)
!9763 = !DILocation(line: 157, column: 45, scope: !9762)
!9764 = !DILocation(line: 157, column: 53, scope: !9762)
!9765 = !DILocation(line: 157, column: 38, scope: !9762)
!9766 = !DILocation(line: 157, column: 9, scope: !9762)
!9767 = !DILocation(line: 158, column: 35, scope: !9762)
!9768 = !DILocation(line: 158, column: 45, scope: !9762)
!9769 = !DILocation(line: 158, column: 55, scope: !9762)
!9770 = !DILocation(line: 158, column: 53, scope: !9762)
!9771 = !DILocation(line: 158, column: 43, scope: !9762)
!9772 = !DILocation(line: 158, column: 18, scope: !9762)
!9773 = !DILocation(line: 159, column: 7, scope: !9762)
!9774 = !DILocation(line: 162, column: 18, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9749, file: !1097, line: 161, column: 7)
!9776 = !DILocation(line: 162, column: 41, scope: !9775)
!9777 = !DILocation(line: 162, column: 49, scope: !9775)
!9778 = !DILocation(line: 162, column: 34, scope: !9775)
!9779 = !DILocation(line: 162, column: 9, scope: !9775)
!9780 = !DILocation(line: 155, column: 75, scope: !9749)
!9781 = !DILocation(line: 153, column: 28, scope: !9745)
!9782 = !DILocation(line: 153, column: 3, scope: !9745)
!9783 = distinct !{!9783, !9747, !9784}
!9784 = !DILocation(line: 163, column: 7, scope: !9742)
!9785 = !DILocation(line: 164, column: 3, scope: !9729)
!9786 = !DILocation(line: 165, column: 1, scope: !9729)
!9787 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1097, file: !1097, line: 174, type: !1092, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9788 = !DILocalVariable(name: "context", arg: 1, scope: !9787, file: !1097, line: 174, type: !146)
!9789 = !DILocation(line: 174, column: 35, scope: !9787)
!9790 = !DILocalVariable(name: "arg", arg: 2, scope: !9787, file: !1097, line: 175, type: !146)
!9791 = !DILocation(line: 175, column: 35, scope: !9787)
!9792 = !DILocalVariable(name: "arglist", arg: 3, scope: !9787, file: !1097, line: 175, type: !567)
!9793 = !DILocation(line: 175, column: 59, scope: !9787)
!9794 = !DILocalVariable(name: "vallist", arg: 4, scope: !9787, file: !1097, line: 176, type: !176)
!9795 = !DILocation(line: 176, column: 35, scope: !9787)
!9796 = !DILocalVariable(name: "valsize", arg: 5, scope: !9787, file: !1097, line: 176, type: !149)
!9797 = !DILocation(line: 176, column: 51, scope: !9787)
!9798 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !9787, file: !1097, line: 177, type: !535)
!9799 = !DILocation(line: 177, column: 40, scope: !9787)
!9800 = !DILocalVariable(name: "res", scope: !9787, file: !1097, line: 179, type: !564)
!9801 = !DILocation(line: 179, column: 13, scope: !9787)
!9802 = !DILocation(line: 179, column: 29, scope: !9787)
!9803 = !DILocation(line: 179, column: 34, scope: !9787)
!9804 = !DILocation(line: 179, column: 43, scope: !9787)
!9805 = !DILocation(line: 179, column: 52, scope: !9787)
!9806 = !DILocation(line: 179, column: 19, scope: !9787)
!9807 = !DILocation(line: 180, column: 7, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9787, file: !1097, line: 180, column: 7)
!9809 = !DILocation(line: 180, column: 11, scope: !9808)
!9810 = !DILocation(line: 180, column: 7, scope: !9787)
!9811 = !DILocation(line: 182, column: 12, scope: !9808)
!9812 = !DILocation(line: 182, column: 5, scope: !9808)
!9813 = !DILocation(line: 185, column: 21, scope: !9787)
!9814 = !DILocation(line: 185, column: 30, scope: !9787)
!9815 = !DILocation(line: 185, column: 35, scope: !9787)
!9816 = !DILocation(line: 185, column: 3, scope: !9787)
!9817 = !DILocation(line: 186, column: 19, scope: !9787)
!9818 = !DILocation(line: 186, column: 28, scope: !9787)
!9819 = !DILocation(line: 186, column: 37, scope: !9787)
!9820 = !DILocation(line: 186, column: 3, scope: !9787)
!9821 = !DILocation(line: 187, column: 5, scope: !9787)
!9822 = !DILocation(line: 187, column: 3, scope: !9787)
!9823 = !DILocation(line: 189, column: 3, scope: !9787)
!9824 = !DILocation(line: 190, column: 1, scope: !9787)
!9825 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1097, file: !1097, line: 195, type: !1094, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9826 = !DILocalVariable(name: "value", arg: 1, scope: !9825, file: !1097, line: 195, type: !176)
!9827 = !DILocation(line: 195, column: 35, scope: !9825)
!9828 = !DILocalVariable(name: "arglist", arg: 2, scope: !9825, file: !1097, line: 196, type: !567)
!9829 = !DILocation(line: 196, column: 42, scope: !9825)
!9830 = !DILocalVariable(name: "vallist", arg: 3, scope: !9825, file: !1097, line: 197, type: !176)
!9831 = !DILocation(line: 197, column: 35, scope: !9825)
!9832 = !DILocalVariable(name: "valsize", arg: 4, scope: !9825, file: !1097, line: 197, type: !149)
!9833 = !DILocation(line: 197, column: 51, scope: !9825)
!9834 = !DILocalVariable(name: "i", scope: !9825, file: !1097, line: 199, type: !149)
!9835 = !DILocation(line: 199, column: 10, scope: !9825)
!9836 = !DILocation(line: 201, column: 10, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9825, file: !1097, line: 201, column: 3)
!9838 = !DILocation(line: 201, column: 8, scope: !9837)
!9839 = !DILocation(line: 201, column: 15, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9837, file: !1097, line: 201, column: 3)
!9841 = !DILocation(line: 201, column: 23, scope: !9840)
!9842 = !DILocation(line: 201, column: 3, scope: !9837)
!9843 = !DILocation(line: 202, column: 18, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9840, file: !1097, line: 202, column: 9)
!9845 = !DILocation(line: 202, column: 40, scope: !9844)
!9846 = !DILocation(line: 202, column: 50, scope: !9844)
!9847 = !DILocation(line: 202, column: 60, scope: !9844)
!9848 = !DILocation(line: 202, column: 58, scope: !9844)
!9849 = !DILocation(line: 202, column: 48, scope: !9844)
!9850 = !DILocation(line: 202, column: 63, scope: !9844)
!9851 = !DILocation(line: 202, column: 10, scope: !9844)
!9852 = !DILocation(line: 202, column: 9, scope: !9840)
!9853 = !DILocation(line: 203, column: 14, scope: !9844)
!9854 = !DILocation(line: 203, column: 22, scope: !9844)
!9855 = !DILocation(line: 203, column: 7, scope: !9844)
!9856 = !DILocation(line: 202, column: 70, scope: !9844)
!9857 = !DILocation(line: 201, column: 28, scope: !9840)
!9858 = !DILocation(line: 201, column: 3, scope: !9840)
!9859 = distinct !{!9859, !9842, !9860}
!9860 = !DILocation(line: 203, column: 23, scope: !9837)
!9861 = !DILocation(line: 204, column: 3, scope: !9825)
!9862 = !DILocation(line: 205, column: 1, scope: !9825)
!9863 = distinct !DISubprogram(name: "c_isalnum", scope: !9864, file: !9864, line: 169, type: !680, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9864 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/clone/coreutils")
!9865 = !DILocalVariable(name: "c", arg: 1, scope: !9863, file: !9864, line: 169, type: !27)
!9866 = !DILocation(line: 169, column: 16, scope: !9863)
!9867 = !DILocation(line: 171, column: 11, scope: !9863)
!9868 = !DILocation(line: 171, column: 3, scope: !9863)
!9869 = !DILocation(line: 176, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9863, file: !9864, line: 172, column: 5)
!9871 = !DILocation(line: 178, column: 7, scope: !9870)
!9872 = !DILocation(line: 180, column: 1, scope: !9863)
!9873 = distinct !DISubprogram(name: "c_isalpha", scope: !9864, file: !9864, line: 183, type: !680, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9874 = !DILocalVariable(name: "c", arg: 1, scope: !9873, file: !9864, line: 183, type: !27)
!9875 = !DILocation(line: 183, column: 16, scope: !9873)
!9876 = !DILocation(line: 185, column: 11, scope: !9873)
!9877 = !DILocation(line: 185, column: 3, scope: !9873)
!9878 = !DILocation(line: 189, column: 7, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9873, file: !9864, line: 186, column: 5)
!9880 = !DILocation(line: 191, column: 7, scope: !9879)
!9881 = !DILocation(line: 193, column: 1, scope: !9873)
!9882 = distinct !DISubprogram(name: "c_isascii", scope: !9864, file: !9864, line: 198, type: !680, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9883 = !DILocalVariable(name: "c", arg: 1, scope: !9882, file: !9864, line: 198, type: !27)
!9884 = !DILocation(line: 198, column: 16, scope: !9882)
!9885 = !DILocation(line: 200, column: 11, scope: !9882)
!9886 = !DILocation(line: 200, column: 3, scope: !9882)
!9887 = !DILocation(line: 208, column: 7, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9882, file: !9864, line: 201, column: 5)
!9889 = !DILocation(line: 210, column: 7, scope: !9888)
!9890 = !DILocation(line: 212, column: 1, scope: !9882)
!9891 = distinct !DISubprogram(name: "c_isblank", scope: !9864, file: !9864, line: 215, type: !680, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9892 = !DILocalVariable(name: "c", arg: 1, scope: !9891, file: !9864, line: 215, type: !27)
!9893 = !DILocation(line: 215, column: 16, scope: !9891)
!9894 = !DILocation(line: 217, column: 10, scope: !9891)
!9895 = !DILocation(line: 217, column: 12, scope: !9891)
!9896 = !DILocation(line: 217, column: 19, scope: !9891)
!9897 = !DILocation(line: 217, column: 22, scope: !9891)
!9898 = !DILocation(line: 217, column: 24, scope: !9891)
!9899 = !DILocation(line: 217, column: 3, scope: !9891)
!9900 = distinct !DISubprogram(name: "c_iscntrl", scope: !9864, file: !9864, line: 221, type: !680, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9901 = !DILocalVariable(name: "c", arg: 1, scope: !9900, file: !9864, line: 221, type: !27)
!9902 = !DILocation(line: 221, column: 16, scope: !9900)
!9903 = !DILocation(line: 223, column: 11, scope: !9900)
!9904 = !DILocation(line: 223, column: 3, scope: !9900)
!9905 = !DILocation(line: 226, column: 7, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9900, file: !9864, line: 224, column: 5)
!9907 = !DILocation(line: 228, column: 7, scope: !9906)
!9908 = !DILocation(line: 230, column: 1, scope: !9900)
!9909 = distinct !DISubprogram(name: "c_isdigit", scope: !9864, file: !9864, line: 233, type: !680, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9910 = !DILocalVariable(name: "c", arg: 1, scope: !9909, file: !9864, line: 233, type: !27)
!9911 = !DILocation(line: 233, column: 16, scope: !9909)
!9912 = !DILocation(line: 235, column: 11, scope: !9909)
!9913 = !DILocation(line: 235, column: 3, scope: !9909)
!9914 = !DILocation(line: 238, column: 7, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9909, file: !9864, line: 236, column: 5)
!9916 = !DILocation(line: 240, column: 7, scope: !9915)
!9917 = !DILocation(line: 242, column: 1, scope: !9909)
!9918 = distinct !DISubprogram(name: "c_isgraph", scope: !9864, file: !9864, line: 245, type: !680, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9919 = !DILocalVariable(name: "c", arg: 1, scope: !9918, file: !9864, line: 245, type: !27)
!9920 = !DILocation(line: 245, column: 16, scope: !9918)
!9921 = !DILocation(line: 247, column: 11, scope: !9918)
!9922 = !DILocation(line: 247, column: 3, scope: !9918)
!9923 = !DILocation(line: 253, column: 7, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9918, file: !9864, line: 248, column: 5)
!9925 = !DILocation(line: 255, column: 7, scope: !9924)
!9926 = !DILocation(line: 257, column: 1, scope: !9918)
!9927 = distinct !DISubprogram(name: "c_islower", scope: !9864, file: !9864, line: 260, type: !680, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9928 = !DILocalVariable(name: "c", arg: 1, scope: !9927, file: !9864, line: 260, type: !27)
!9929 = !DILocation(line: 260, column: 16, scope: !9927)
!9930 = !DILocation(line: 262, column: 11, scope: !9927)
!9931 = !DILocation(line: 262, column: 3, scope: !9927)
!9932 = !DILocation(line: 265, column: 7, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9927, file: !9864, line: 263, column: 5)
!9934 = !DILocation(line: 267, column: 7, scope: !9933)
!9935 = !DILocation(line: 269, column: 1, scope: !9927)
!9936 = distinct !DISubprogram(name: "c_isprint", scope: !9864, file: !9864, line: 272, type: !680, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9937 = !DILocalVariable(name: "c", arg: 1, scope: !9936, file: !9864, line: 272, type: !27)
!9938 = !DILocation(line: 272, column: 16, scope: !9936)
!9939 = !DILocation(line: 274, column: 11, scope: !9936)
!9940 = !DILocation(line: 274, column: 3, scope: !9936)
!9941 = !DILocation(line: 281, column: 7, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9936, file: !9864, line: 275, column: 5)
!9943 = !DILocation(line: 283, column: 7, scope: !9942)
!9944 = !DILocation(line: 285, column: 1, scope: !9936)
!9945 = distinct !DISubprogram(name: "c_ispunct", scope: !9864, file: !9864, line: 288, type: !680, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9946 = !DILocalVariable(name: "c", arg: 1, scope: !9945, file: !9864, line: 288, type: !27)
!9947 = !DILocation(line: 288, column: 16, scope: !9945)
!9948 = !DILocation(line: 290, column: 11, scope: !9945)
!9949 = !DILocation(line: 290, column: 3, scope: !9945)
!9950 = !DILocation(line: 293, column: 7, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !9864, line: 291, column: 5)
!9952 = !DILocation(line: 295, column: 7, scope: !9951)
!9953 = !DILocation(line: 297, column: 1, scope: !9945)
!9954 = distinct !DISubprogram(name: "c_isspace", scope: !9864, file: !9864, line: 300, type: !680, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9955 = !DILocalVariable(name: "c", arg: 1, scope: !9954, file: !9864, line: 300, type: !27)
!9956 = !DILocation(line: 300, column: 16, scope: !9954)
!9957 = !DILocation(line: 302, column: 11, scope: !9954)
!9958 = !DILocation(line: 302, column: 3, scope: !9954)
!9959 = !DILocation(line: 305, column: 7, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9954, file: !9864, line: 303, column: 5)
!9961 = !DILocation(line: 307, column: 7, scope: !9960)
!9962 = !DILocation(line: 309, column: 1, scope: !9954)
!9963 = distinct !DISubprogram(name: "c_isupper", scope: !9864, file: !9864, line: 312, type: !680, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9964 = !DILocalVariable(name: "c", arg: 1, scope: !9963, file: !9864, line: 312, type: !27)
!9965 = !DILocation(line: 312, column: 16, scope: !9963)
!9966 = !DILocation(line: 314, column: 11, scope: !9963)
!9967 = !DILocation(line: 314, column: 3, scope: !9963)
!9968 = !DILocation(line: 317, column: 7, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9963, file: !9864, line: 315, column: 5)
!9970 = !DILocation(line: 319, column: 7, scope: !9969)
!9971 = !DILocation(line: 321, column: 1, scope: !9963)
!9972 = distinct !DISubprogram(name: "c_isxdigit", scope: !9864, file: !9864, line: 324, type: !680, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9973 = !DILocalVariable(name: "c", arg: 1, scope: !9972, file: !9864, line: 324, type: !27)
!9974 = !DILocation(line: 324, column: 17, scope: !9972)
!9975 = !DILocation(line: 326, column: 11, scope: !9972)
!9976 = !DILocation(line: 326, column: 3, scope: !9972)
!9977 = !DILocation(line: 330, column: 7, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9972, file: !9864, line: 327, column: 5)
!9979 = !DILocation(line: 332, column: 7, scope: !9978)
!9980 = !DILocation(line: 334, column: 1, scope: !9972)
!9981 = distinct !DISubprogram(name: "c_tolower", scope: !9864, file: !9864, line: 337, type: !1655, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9982 = !DILocalVariable(name: "c", arg: 1, scope: !9981, file: !9864, line: 337, type: !27)
!9983 = !DILocation(line: 337, column: 16, scope: !9981)
!9984 = !DILocation(line: 339, column: 11, scope: !9981)
!9985 = !DILocation(line: 339, column: 3, scope: !9981)
!9986 = !DILocation(line: 342, column: 14, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9981, file: !9864, line: 340, column: 5)
!9988 = !DILocation(line: 342, column: 16, scope: !9987)
!9989 = !DILocation(line: 342, column: 22, scope: !9987)
!9990 = !DILocation(line: 342, column: 7, scope: !9987)
!9991 = !DILocation(line: 344, column: 14, scope: !9987)
!9992 = !DILocation(line: 344, column: 7, scope: !9987)
!9993 = !DILocation(line: 346, column: 1, scope: !9981)
!9994 = distinct !DISubprogram(name: "c_toupper", scope: !9864, file: !9864, line: 349, type: !1655, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9995 = !DILocalVariable(name: "c", arg: 1, scope: !9994, file: !9864, line: 349, type: !27)
!9996 = !DILocation(line: 349, column: 16, scope: !9994)
!9997 = !DILocation(line: 351, column: 11, scope: !9994)
!9998 = !DILocation(line: 351, column: 3, scope: !9994)
!9999 = !DILocation(line: 354, column: 14, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9994, file: !9864, line: 352, column: 5)
!10001 = !DILocation(line: 354, column: 16, scope: !10000)
!10002 = !DILocation(line: 354, column: 22, scope: !10000)
!10003 = !DILocation(line: 354, column: 7, scope: !10000)
!10004 = !DILocation(line: 356, column: 14, scope: !10000)
!10005 = !DILocation(line: 356, column: 7, scope: !10000)
!10006 = !DILocation(line: 358, column: 1, scope: !9994)
!10007 = distinct !DISubprogram(name: "c_strncasecmp", scope: !10008, file: !10008, line: 27, type: !1662, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!10008 = !DIFile(filename: "lib/c-strncasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!10009 = !DILocalVariable(name: "s1", arg: 1, scope: !10007, file: !10008, line: 27, type: !146)
!10010 = !DILocation(line: 27, column: 28, scope: !10007)
!10011 = !DILocalVariable(name: "s2", arg: 2, scope: !10007, file: !10008, line: 27, type: !146)
!10012 = !DILocation(line: 27, column: 44, scope: !10007)
!10013 = !DILocalVariable(name: "n", arg: 3, scope: !10007, file: !10008, line: 27, type: !149)
!10014 = !DILocation(line: 27, column: 55, scope: !10007)
!10015 = !DILocalVariable(name: "p1", scope: !10007, file: !10008, line: 29, type: !1660)
!10016 = !DILocation(line: 29, column: 33, scope: !10007)
!10017 = !DILocation(line: 29, column: 62, scope: !10007)
!10018 = !DILocalVariable(name: "p2", scope: !10007, file: !10008, line: 30, type: !1660)
!10019 = !DILocation(line: 30, column: 33, scope: !10007)
!10020 = !DILocation(line: 30, column: 62, scope: !10007)
!10021 = !DILocalVariable(name: "c1", scope: !10007, file: !10008, line: 31, type: !591)
!10022 = !DILocation(line: 31, column: 17, scope: !10007)
!10023 = !DILocalVariable(name: "c2", scope: !10007, file: !10008, line: 31, type: !591)
!10024 = !DILocation(line: 31, column: 21, scope: !10007)
!10025 = !DILocation(line: 33, column: 7, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10007, file: !10008, line: 33, column: 7)
!10027 = !DILocation(line: 33, column: 13, scope: !10026)
!10028 = !DILocation(line: 33, column: 10, scope: !10026)
!10029 = !DILocation(line: 33, column: 16, scope: !10026)
!10030 = !DILocation(line: 33, column: 19, scope: !10026)
!10031 = !DILocation(line: 33, column: 21, scope: !10026)
!10032 = !DILocation(line: 33, column: 7, scope: !10007)
!10033 = !DILocation(line: 34, column: 5, scope: !10026)
!10034 = !DILocation(line: 36, column: 3, scope: !10007)
!10035 = !DILocation(line: 38, column: 24, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10007, file: !10008, line: 37, column: 5)
!10037 = !DILocation(line: 38, column: 23, scope: !10036)
!10038 = !DILocation(line: 38, column: 12, scope: !10036)
!10039 = !DILocation(line: 38, column: 10, scope: !10036)
!10040 = !DILocation(line: 39, column: 24, scope: !10036)
!10041 = !DILocation(line: 39, column: 23, scope: !10036)
!10042 = !DILocation(line: 39, column: 12, scope: !10036)
!10043 = !DILocation(line: 39, column: 10, scope: !10036)
!10044 = !DILocation(line: 41, column: 11, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10036, file: !10008, line: 41, column: 11)
!10046 = !DILocation(line: 41, column: 15, scope: !10045)
!10047 = !DILocation(line: 41, column: 20, scope: !10045)
!10048 = !DILocation(line: 41, column: 23, scope: !10045)
!10049 = !DILocation(line: 41, column: 26, scope: !10045)
!10050 = !DILocation(line: 41, column: 11, scope: !10036)
!10051 = !DILocation(line: 42, column: 9, scope: !10045)
!10052 = !DILocation(line: 44, column: 7, scope: !10036)
!10053 = !DILocation(line: 45, column: 7, scope: !10036)
!10054 = !DILocation(line: 46, column: 5, scope: !10036)
!10055 = !DILocation(line: 47, column: 10, scope: !10007)
!10056 = !DILocation(line: 47, column: 16, scope: !10007)
!10057 = !DILocation(line: 47, column: 13, scope: !10007)
!10058 = distinct !{!10058, !10034, !10059}
!10059 = !DILocation(line: 47, column: 18, scope: !10007)
!10060 = !DILocation(line: 50, column: 12, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10007, file: !10008, line: 49, column: 7)
!10062 = !DILocation(line: 50, column: 17, scope: !10061)
!10063 = !DILocation(line: 50, column: 15, scope: !10061)
!10064 = !DILocation(line: 50, column: 5, scope: !10061)
!10065 = !DILocation(line: 56, column: 1, scope: !10007)
!10066 = distinct !DISubprogram(name: "canonicalize_filename_mode", scope: !10067, file: !10067, line: 99, type: !1675, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !152)
!10067 = !DIFile(filename: "lib/canonicalize.c", directory: "/home/mbarbar/clone/coreutils")
!10068 = !DILocalVariable(name: "name", arg: 1, scope: !10066, file: !10067, line: 99, type: !146)
!10069 = !DILocation(line: 99, column: 41, scope: !10066)
!10070 = !DILocalVariable(name: "can_mode", arg: 2, scope: !10066, file: !10067, line: 99, type: !1677)
!10071 = !DILocation(line: 99, column: 67, scope: !10066)
!10072 = !DILocalVariable(name: "rname", scope: !10066, file: !10067, line: 101, type: !143)
!10073 = !DILocation(line: 101, column: 9, scope: !10066)
!10074 = !DILocalVariable(name: "dest", scope: !10066, file: !10067, line: 101, type: !143)
!10075 = !DILocation(line: 101, column: 17, scope: !10066)
!10076 = !DILocalVariable(name: "extra_buf", scope: !10066, file: !10067, line: 101, type: !143)
!10077 = !DILocation(line: 101, column: 24, scope: !10066)
!10078 = !DILocalVariable(name: "start", scope: !10066, file: !10067, line: 102, type: !146)
!10079 = !DILocation(line: 102, column: 15, scope: !10066)
!10080 = !DILocalVariable(name: "end", scope: !10066, file: !10067, line: 103, type: !146)
!10081 = !DILocation(line: 103, column: 15, scope: !10066)
!10082 = !DILocalVariable(name: "rname_limit", scope: !10066, file: !10067, line: 104, type: !146)
!10083 = !DILocation(line: 104, column: 15, scope: !10066)
!10084 = !DILocalVariable(name: "extra_len", scope: !10066, file: !10067, line: 105, type: !149)
!10085 = !DILocation(line: 105, column: 10, scope: !10066)
!10086 = !DILocalVariable(name: "ht", scope: !10066, file: !10067, line: 106, type: !244)
!10087 = !DILocation(line: 106, column: 15, scope: !10066)
!10088 = !DILocalVariable(name: "saved_errno", scope: !10066, file: !10067, line: 107, type: !27)
!10089 = !DILocation(line: 107, column: 7, scope: !10066)
!10090 = !DILocalVariable(name: "can_flags", scope: !10066, file: !10067, line: 108, type: !27)
!10091 = !DILocation(line: 108, column: 7, scope: !10066)
!10092 = !DILocation(line: 108, column: 19, scope: !10066)
!10093 = !DILocation(line: 108, column: 28, scope: !10066)
!10094 = !DILocalVariable(name: "logical", scope: !10066, file: !10067, line: 109, type: !141)
!10095 = !DILocation(line: 109, column: 8, scope: !10066)
!10096 = !DILocation(line: 109, column: 18, scope: !10066)
!10097 = !DILocation(line: 109, column: 28, scope: !10066)
!10098 = !DILocalVariable(name: "prefix_len", scope: !10066, file: !10067, line: 110, type: !149)
!10099 = !DILocation(line: 110, column: 10, scope: !10066)
!10100 = !DILocation(line: 112, column: 12, scope: !10066)
!10101 = !DILocation(line: 114, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 114, column: 7)
!10103 = !DILocation(line: 114, column: 7, scope: !10066)
!10104 = !DILocation(line: 116, column: 7, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10102, file: !10067, line: 115, column: 5)
!10106 = !DILocation(line: 116, column: 13, scope: !10105)
!10107 = !DILocation(line: 117, column: 7, scope: !10105)
!10108 = !DILocation(line: 120, column: 7, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 120, column: 7)
!10110 = !DILocation(line: 120, column: 12, scope: !10109)
!10111 = !DILocation(line: 120, column: 7, scope: !10066)
!10112 = !DILocation(line: 122, column: 7, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10109, file: !10067, line: 121, column: 5)
!10114 = !DILocation(line: 122, column: 13, scope: !10113)
!10115 = !DILocation(line: 123, column: 7, scope: !10113)
!10116 = !DILocation(line: 126, column: 7, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 126, column: 7)
!10118 = !DILocation(line: 126, column: 15, scope: !10117)
!10119 = !DILocation(line: 126, column: 7, scope: !10066)
!10120 = !DILocation(line: 128, column: 7, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10117, file: !10067, line: 127, column: 5)
!10122 = !DILocation(line: 128, column: 13, scope: !10121)
!10123 = !DILocation(line: 129, column: 7, scope: !10121)
!10124 = !DILocation(line: 134, column: 14, scope: !10066)
!10125 = !DILocation(line: 136, column: 8, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 136, column: 7)
!10127 = !DILocation(line: 136, column: 7, scope: !10066)
!10128 = !DILocation(line: 138, column: 15, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10126, file: !10067, line: 137, column: 5)
!10130 = !DILocation(line: 138, column: 13, scope: !10129)
!10131 = !DILocation(line: 139, column: 12, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10129, file: !10067, line: 139, column: 11)
!10133 = !DILocation(line: 139, column: 11, scope: !10129)
!10134 = !DILocation(line: 140, column: 9, scope: !10132)
!10135 = !DILocation(line: 141, column: 22, scope: !10129)
!10136 = !DILocation(line: 141, column: 14, scope: !10129)
!10137 = !DILocation(line: 141, column: 12, scope: !10129)
!10138 = !DILocation(line: 142, column: 11, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10129, file: !10067, line: 142, column: 11)
!10140 = !DILocation(line: 142, column: 18, scope: !10139)
!10141 = !DILocation(line: 142, column: 16, scope: !10139)
!10142 = !DILocation(line: 142, column: 24, scope: !10139)
!10143 = !DILocation(line: 142, column: 11, scope: !10129)
!10144 = !DILocalVariable(name: "p", scope: !10145, file: !10067, line: 144, type: !143)
!10145 = distinct !DILexicalBlock(scope: !10139, file: !10067, line: 143, column: 9)
!10146 = !DILocation(line: 144, column: 17, scope: !10145)
!10147 = !DILocation(line: 144, column: 31, scope: !10145)
!10148 = !DILocation(line: 144, column: 21, scope: !10145)
!10149 = !DILocation(line: 145, column: 18, scope: !10145)
!10150 = !DILocation(line: 145, column: 23, scope: !10145)
!10151 = !DILocation(line: 145, column: 30, scope: !10145)
!10152 = !DILocation(line: 145, column: 28, scope: !10145)
!10153 = !DILocation(line: 145, column: 20, scope: !10145)
!10154 = !DILocation(line: 145, column: 16, scope: !10145)
!10155 = !DILocation(line: 146, column: 19, scope: !10145)
!10156 = !DILocation(line: 146, column: 17, scope: !10145)
!10157 = !DILocation(line: 147, column: 25, scope: !10145)
!10158 = !DILocation(line: 147, column: 31, scope: !10145)
!10159 = !DILocation(line: 147, column: 23, scope: !10145)
!10160 = !DILocation(line: 148, column: 9, scope: !10145)
!10161 = !DILocation(line: 151, column: 25, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10139, file: !10067, line: 150, column: 9)
!10163 = !DILocation(line: 151, column: 23, scope: !10162)
!10164 = !DILocation(line: 153, column: 15, scope: !10129)
!10165 = !DILocation(line: 153, column: 13, scope: !10129)
!10166 = !DILocation(line: 154, column: 18, scope: !10129)
!10167 = !DILocation(line: 155, column: 5, scope: !10129)
!10168 = !DILocation(line: 158, column: 15, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10126, file: !10067, line: 157, column: 5)
!10170 = !DILocation(line: 158, column: 13, scope: !10169)
!10171 = !DILocation(line: 159, column: 21, scope: !10169)
!10172 = !DILocation(line: 159, column: 27, scope: !10169)
!10173 = !DILocation(line: 159, column: 19, scope: !10169)
!10174 = !DILocation(line: 160, column: 14, scope: !10169)
!10175 = !DILocation(line: 160, column: 12, scope: !10169)
!10176 = !DILocation(line: 161, column: 11, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10169, file: !10067, line: 161, column: 11)
!10178 = !DILocation(line: 161, column: 11, scope: !10169)
!10179 = !DILocation(line: 163, column: 19, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !10067, line: 162, column: 9)
!10181 = !DILocation(line: 163, column: 26, scope: !10180)
!10182 = !DILocation(line: 163, column: 32, scope: !10180)
!10183 = !DILocation(line: 163, column: 11, scope: !10180)
!10184 = !DILocation(line: 164, column: 19, scope: !10180)
!10185 = !DILocation(line: 164, column: 16, scope: !10180)
!10186 = !DILocation(line: 165, column: 9, scope: !10180)
!10187 = !DILocation(line: 166, column: 12, scope: !10169)
!10188 = !DILocation(line: 166, column: 15, scope: !10169)
!10189 = !DILocation(line: 173, column: 15, scope: !10169)
!10190 = !DILocation(line: 173, column: 22, scope: !10169)
!10191 = !DILocation(line: 173, column: 20, scope: !10169)
!10192 = !DILocation(line: 173, column: 13, scope: !10169)
!10193 = !DILocation(line: 176, column: 3, scope: !10066)
!10194 = !DILocation(line: 176, column: 12, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !10067, line: 176, column: 3)
!10196 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 176, column: 3)
!10197 = !DILocation(line: 176, column: 11, scope: !10195)
!10198 = !DILocation(line: 176, column: 3, scope: !10196)
!10199 = !DILocation(line: 179, column: 7, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10195, file: !10067, line: 177, column: 5)
!10201 = !DILocation(line: 179, column: 14, scope: !10200)
!10202 = !DILocation(line: 180, column: 9, scope: !10200)
!10203 = distinct !{!10203, !10199, !10204}
!10204 = !DILocation(line: 180, column: 11, scope: !10200)
!10205 = !DILocation(line: 183, column: 18, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10200, file: !10067, line: 183, column: 7)
!10207 = !DILocation(line: 183, column: 16, scope: !10206)
!10208 = !DILocation(line: 183, column: 12, scope: !10206)
!10209 = !DILocation(line: 183, column: 26, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10206, file: !10067, line: 183, column: 7)
!10211 = !DILocation(line: 183, column: 25, scope: !10210)
!10212 = !DILocation(line: 183, column: 30, scope: !10210)
!10213 = !DILocation(line: 183, column: 34, scope: !10210)
!10214 = !DILocation(line: 183, column: 33, scope: !10210)
!10215 = !DILocation(line: 0, scope: !10210)
!10216 = !DILocation(line: 183, column: 7, scope: !10206)
!10217 = !DILocation(line: 183, column: 50, scope: !10210)
!10218 = !DILocation(line: 183, column: 7, scope: !10210)
!10219 = distinct !{!10219, !10216, !10220}
!10220 = !DILocation(line: 184, column: 24, scope: !10206)
!10221 = !DILocation(line: 186, column: 11, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10200, file: !10067, line: 186, column: 11)
!10223 = !DILocation(line: 186, column: 17, scope: !10222)
!10224 = !DILocation(line: 186, column: 15, scope: !10222)
!10225 = !DILocation(line: 186, column: 23, scope: !10222)
!10226 = !DILocation(line: 186, column: 11, scope: !10200)
!10227 = !DILocation(line: 187, column: 9, scope: !10222)
!10228 = !DILocation(line: 188, column: 16, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10222, file: !10067, line: 188, column: 16)
!10230 = !DILocation(line: 188, column: 22, scope: !10229)
!10231 = !DILocation(line: 188, column: 20, scope: !10229)
!10232 = !DILocation(line: 188, column: 28, scope: !10229)
!10233 = !DILocation(line: 188, column: 33, scope: !10229)
!10234 = !DILocation(line: 188, column: 36, scope: !10229)
!10235 = !DILocation(line: 188, column: 45, scope: !10229)
!10236 = !DILocation(line: 188, column: 16, scope: !10222)
!10237 = !DILocation(line: 190, column: 16, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10229, file: !10067, line: 190, column: 16)
!10239 = !DILocation(line: 190, column: 22, scope: !10238)
!10240 = !DILocation(line: 190, column: 20, scope: !10238)
!10241 = !DILocation(line: 190, column: 28, scope: !10238)
!10242 = !DILocation(line: 190, column: 33, scope: !10238)
!10243 = !DILocation(line: 190, column: 36, scope: !10238)
!10244 = !DILocation(line: 190, column: 45, scope: !10238)
!10245 = !DILocation(line: 190, column: 52, scope: !10238)
!10246 = !DILocation(line: 190, column: 55, scope: !10238)
!10247 = !DILocation(line: 190, column: 64, scope: !10238)
!10248 = !DILocation(line: 190, column: 16, scope: !10229)
!10249 = !DILocation(line: 193, column: 15, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10251, file: !10067, line: 193, column: 15)
!10251 = distinct !DILexicalBlock(scope: !10238, file: !10067, line: 191, column: 9)
!10252 = !DILocation(line: 193, column: 22, scope: !10250)
!10253 = !DILocation(line: 193, column: 30, scope: !10250)
!10254 = !DILocation(line: 193, column: 28, scope: !10250)
!10255 = !DILocation(line: 193, column: 41, scope: !10250)
!10256 = !DILocation(line: 193, column: 20, scope: !10250)
!10257 = !DILocation(line: 193, column: 15, scope: !10251)
!10258 = !DILocation(line: 194, column: 18, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10250, file: !10067, line: 194, column: 13)
!10260 = !DILocation(line: 194, column: 26, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10259, file: !10067, line: 194, column: 13)
!10262 = !DILocation(line: 194, column: 33, scope: !10261)
!10263 = !DILocation(line: 194, column: 31, scope: !10261)
!10264 = !DILocation(line: 194, column: 39, scope: !10261)
!10265 = !DILocation(line: 194, column: 43, scope: !10261)
!10266 = !DILocation(line: 194, column: 42, scope: !10261)
!10267 = !DILocation(line: 0, scope: !10261)
!10268 = !DILocation(line: 194, column: 13, scope: !10259)
!10269 = !DILocation(line: 195, column: 15, scope: !10261)
!10270 = !DILocation(line: 194, column: 63, scope: !10261)
!10271 = !DILocation(line: 194, column: 13, scope: !10261)
!10272 = distinct !{!10272, !10268, !10273}
!10273 = !DILocation(line: 195, column: 15, scope: !10259)
!10274 = !DILocation(line: 199, column: 9, scope: !10251)
!10275 = !DILocalVariable(name: "st", scope: !10276, file: !10067, line: 202, type: !1683)
!10276 = distinct !DILexicalBlock(scope: !10238, file: !10067, line: 201, column: 9)
!10277 = !DILocation(line: 202, column: 23, scope: !10276)
!10278 = !DILocation(line: 204, column: 16, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10276, file: !10067, line: 204, column: 15)
!10280 = !DILocation(line: 204, column: 15, scope: !10276)
!10281 = !DILocation(line: 205, column: 18, scope: !10279)
!10282 = !DILocation(line: 205, column: 21, scope: !10279)
!10283 = !DILocation(line: 205, column: 13, scope: !10279)
!10284 = !DILocation(line: 207, column: 15, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10276, file: !10067, line: 207, column: 15)
!10286 = !DILocation(line: 207, column: 23, scope: !10285)
!10287 = !DILocation(line: 207, column: 29, scope: !10285)
!10288 = !DILocation(line: 207, column: 27, scope: !10285)
!10289 = !DILocation(line: 207, column: 20, scope: !10285)
!10290 = !DILocation(line: 207, column: 39, scope: !10285)
!10291 = !DILocation(line: 207, column: 36, scope: !10285)
!10292 = !DILocation(line: 207, column: 15, scope: !10276)
!10293 = !DILocalVariable(name: "dest_offset", scope: !10294, file: !10067, line: 209, type: !564)
!10294 = distinct !DILexicalBlock(scope: !10285, file: !10067, line: 208, column: 13)
!10295 = !DILocation(line: 209, column: 25, scope: !10294)
!10296 = !DILocation(line: 209, column: 39, scope: !10294)
!10297 = !DILocation(line: 209, column: 46, scope: !10294)
!10298 = !DILocation(line: 209, column: 44, scope: !10294)
!10299 = !DILocalVariable(name: "new_size", scope: !10294, file: !10067, line: 210, type: !149)
!10300 = !DILocation(line: 210, column: 22, scope: !10294)
!10301 = !DILocation(line: 210, column: 33, scope: !10294)
!10302 = !DILocation(line: 210, column: 47, scope: !10294)
!10303 = !DILocation(line: 210, column: 45, scope: !10294)
!10304 = !DILocation(line: 212, column: 19, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10294, file: !10067, line: 212, column: 19)
!10306 = !DILocation(line: 212, column: 25, scope: !10305)
!10307 = !DILocation(line: 212, column: 23, scope: !10305)
!10308 = !DILocation(line: 212, column: 31, scope: !10305)
!10309 = !DILocation(line: 212, column: 35, scope: !10305)
!10310 = !DILocation(line: 212, column: 19, scope: !10294)
!10311 = !DILocation(line: 213, column: 29, scope: !10305)
!10312 = !DILocation(line: 213, column: 35, scope: !10305)
!10313 = !DILocation(line: 213, column: 33, scope: !10305)
!10314 = !DILocation(line: 213, column: 41, scope: !10305)
!10315 = !DILocation(line: 213, column: 26, scope: !10305)
!10316 = !DILocation(line: 213, column: 17, scope: !10305)
!10317 = !DILocation(line: 215, column: 26, scope: !10305)
!10318 = !DILocation(line: 216, column: 33, scope: !10294)
!10319 = !DILocation(line: 216, column: 40, scope: !10294)
!10320 = !DILocation(line: 216, column: 23, scope: !10294)
!10321 = !DILocation(line: 216, column: 21, scope: !10294)
!10322 = !DILocation(line: 217, column: 29, scope: !10294)
!10323 = !DILocation(line: 217, column: 37, scope: !10294)
!10324 = !DILocation(line: 217, column: 35, scope: !10294)
!10325 = !DILocation(line: 217, column: 27, scope: !10294)
!10326 = !DILocation(line: 219, column: 22, scope: !10294)
!10327 = !DILocation(line: 219, column: 30, scope: !10294)
!10328 = !DILocation(line: 219, column: 28, scope: !10294)
!10329 = !DILocation(line: 219, column: 20, scope: !10294)
!10330 = !DILocation(line: 220, column: 13, scope: !10294)
!10331 = !DILocation(line: 222, column: 26, scope: !10276)
!10332 = !DILocation(line: 222, column: 32, scope: !10276)
!10333 = !DILocation(line: 222, column: 39, scope: !10276)
!10334 = !DILocation(line: 222, column: 45, scope: !10276)
!10335 = !DILocation(line: 222, column: 43, scope: !10276)
!10336 = !DILocation(line: 222, column: 18, scope: !10276)
!10337 = !DILocation(line: 222, column: 16, scope: !10276)
!10338 = !DILocation(line: 223, column: 19, scope: !10276)
!10339 = !DILocation(line: 223, column: 25, scope: !10276)
!10340 = !DILocation(line: 223, column: 23, scope: !10276)
!10341 = !DILocation(line: 223, column: 16, scope: !10276)
!10342 = !DILocation(line: 224, column: 12, scope: !10276)
!10343 = !DILocation(line: 224, column: 17, scope: !10276)
!10344 = !DILocation(line: 226, column: 15, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10276, file: !10067, line: 226, column: 15)
!10346 = !DILocation(line: 226, column: 23, scope: !10345)
!10347 = !DILocation(line: 226, column: 27, scope: !10345)
!10348 = !DILocation(line: 226, column: 36, scope: !10345)
!10349 = !DILocation(line: 226, column: 15, scope: !10276)
!10350 = !DILocation(line: 231, column: 18, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10345, file: !10067, line: 227, column: 13)
!10352 = !DILocation(line: 231, column: 26, scope: !10351)
!10353 = !DILocation(line: 232, column: 13, scope: !10351)
!10354 = !DILocation(line: 233, column: 21, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10345, file: !10067, line: 233, column: 20)
!10356 = !DILocation(line: 233, column: 37, scope: !10355)
!10357 = !DILocation(line: 233, column: 31, scope: !10355)
!10358 = !DILocation(line: 233, column: 58, scope: !10355)
!10359 = !DILocation(line: 233, column: 51, scope: !10355)
!10360 = !DILocation(line: 233, column: 71, scope: !10355)
!10361 = !DILocation(line: 233, column: 20, scope: !10345)
!10362 = !DILocation(line: 236, column: 29, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10355, file: !10067, line: 234, column: 13)
!10364 = !DILocation(line: 236, column: 27, scope: !10363)
!10365 = !DILocation(line: 237, column: 19, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10363, file: !10067, line: 237, column: 19)
!10367 = !DILocation(line: 237, column: 28, scope: !10366)
!10368 = !DILocation(line: 237, column: 19, scope: !10363)
!10369 = !DILocation(line: 238, column: 17, scope: !10366)
!10370 = !DILocation(line: 239, column: 19, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10363, file: !10067, line: 239, column: 19)
!10372 = !DILocation(line: 239, column: 28, scope: !10371)
!10373 = !DILocation(line: 239, column: 19, scope: !10363)
!10374 = !DILocation(line: 241, column: 23, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10376, file: !10067, line: 241, column: 23)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !10067, line: 240, column: 17)
!10377 = !DILocation(line: 241, column: 35, scope: !10375)
!10378 = !DILocation(line: 241, column: 27, scope: !10375)
!10379 = !DILocation(line: 241, column: 50, scope: !10375)
!10380 = !DILocation(line: 241, column: 53, scope: !10375)
!10381 = !DILocation(line: 241, column: 65, scope: !10375)
!10382 = !DILocation(line: 241, column: 23, scope: !10376)
!10383 = !DILocation(line: 242, column: 21, scope: !10375)
!10384 = !DILocation(line: 243, column: 19, scope: !10376)
!10385 = !DILocation(line: 245, column: 18, scope: !10363)
!10386 = !DILocation(line: 245, column: 26, scope: !10363)
!10387 = !DILocation(line: 246, column: 13, scope: !10363)
!10388 = !DILocation(line: 248, column: 15, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10276, file: !10067, line: 248, column: 15)
!10390 = !DILocation(line: 248, column: 15, scope: !10276)
!10391 = !DILocalVariable(name: "buf", scope: !10392, file: !10067, line: 250, type: !143)
!10392 = distinct !DILexicalBlock(scope: !10389, file: !10067, line: 249, column: 13)
!10393 = !DILocation(line: 250, column: 21, scope: !10392)
!10394 = !DILocalVariable(name: "n", scope: !10392, file: !10067, line: 251, type: !149)
!10395 = !DILocation(line: 251, column: 22, scope: !10392)
!10396 = !DILocalVariable(name: "len", scope: !10392, file: !10067, line: 251, type: !149)
!10397 = !DILocation(line: 251, column: 25, scope: !10392)
!10398 = !DILocation(line: 257, column: 37, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10392, file: !10067, line: 257, column: 19)
!10400 = !DILocation(line: 257, column: 19, scope: !10399)
!10401 = !DILocation(line: 257, column: 19, scope: !10392)
!10402 = !DILocation(line: 259, column: 23, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !10067, line: 259, column: 23)
!10404 = distinct !DILexicalBlock(scope: !10399, file: !10067, line: 258, column: 17)
!10405 = !DILocation(line: 259, column: 32, scope: !10403)
!10406 = !DILocation(line: 259, column: 23, scope: !10404)
!10407 = !DILocation(line: 260, column: 21, scope: !10403)
!10408 = !DILocation(line: 261, column: 31, scope: !10404)
!10409 = !DILocation(line: 262, column: 19, scope: !10404)
!10410 = !DILocation(line: 265, column: 42, scope: !10392)
!10411 = !DILocation(line: 265, column: 52, scope: !10392)
!10412 = !{!3810, !2467, i64 48}
!10413 = !DILocation(line: 265, column: 21, scope: !10392)
!10414 = !DILocation(line: 265, column: 19, scope: !10392)
!10415 = !DILocation(line: 266, column: 20, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10392, file: !10067, line: 266, column: 19)
!10417 = !DILocation(line: 266, column: 19, scope: !10392)
!10418 = !DILocation(line: 268, column: 23, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !10067, line: 268, column: 23)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !10067, line: 267, column: 17)
!10421 = !DILocation(line: 268, column: 32, scope: !10419)
!10422 = !DILocation(line: 268, column: 47, scope: !10419)
!10423 = !DILocation(line: 268, column: 50, scope: !10419)
!10424 = !DILocation(line: 268, column: 56, scope: !10419)
!10425 = !DILocation(line: 268, column: 23, scope: !10420)
!10426 = !DILocation(line: 269, column: 21, scope: !10419)
!10427 = !DILocation(line: 270, column: 33, scope: !10420)
!10428 = !DILocation(line: 270, column: 31, scope: !10420)
!10429 = !DILocation(line: 271, column: 19, scope: !10420)
!10430 = !DILocation(line: 274, column: 27, scope: !10392)
!10431 = !DILocation(line: 274, column: 19, scope: !10392)
!10432 = !DILocation(line: 274, column: 17, scope: !10392)
!10433 = !DILocation(line: 275, column: 29, scope: !10392)
!10434 = !DILocation(line: 275, column: 21, scope: !10392)
!10435 = !DILocation(line: 275, column: 19, scope: !10392)
!10436 = !DILocation(line: 277, column: 20, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10392, file: !10067, line: 277, column: 19)
!10438 = !DILocation(line: 277, column: 19, scope: !10392)
!10439 = !DILocation(line: 280, column: 23, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10437, file: !10067, line: 278, column: 17)
!10441 = !DILocation(line: 280, column: 27, scope: !10440)
!10442 = !DILocation(line: 280, column: 25, scope: !10440)
!10443 = !DILocation(line: 280, column: 31, scope: !10440)
!10444 = !DILocation(line: 280, column: 36, scope: !10440)
!10445 = !DILocation(line: 280, column: 21, scope: !10440)
!10446 = !DILocation(line: 280, column: 51, scope: !10440)
!10447 = !DILocation(line: 280, column: 55, scope: !10440)
!10448 = !DILocation(line: 280, column: 53, scope: !10440)
!10449 = !DILocation(line: 280, column: 59, scope: !10440)
!10450 = !DILocation(line: 279, column: 29, scope: !10440)
!10451 = !DILocation(line: 281, column: 40, scope: !10440)
!10452 = !DILocation(line: 281, column: 31, scope: !10440)
!10453 = !DILocation(line: 281, column: 29, scope: !10440)
!10454 = !DILocation(line: 282, column: 17, scope: !10440)
!10455 = !DILocation(line: 283, column: 25, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10437, file: !10067, line: 283, column: 24)
!10457 = !DILocation(line: 283, column: 29, scope: !10456)
!10458 = !DILocation(line: 283, column: 27, scope: !10456)
!10459 = !DILocation(line: 283, column: 33, scope: !10456)
!10460 = !DILocation(line: 283, column: 40, scope: !10456)
!10461 = !DILocation(line: 283, column: 38, scope: !10456)
!10462 = !DILocation(line: 283, column: 24, scope: !10437)
!10463 = !DILocation(line: 285, column: 31, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10456, file: !10067, line: 284, column: 17)
!10465 = !DILocation(line: 285, column: 35, scope: !10464)
!10466 = !DILocation(line: 285, column: 33, scope: !10464)
!10467 = !DILocation(line: 285, column: 39, scope: !10464)
!10468 = !DILocation(line: 285, column: 29, scope: !10464)
!10469 = !DILocation(line: 286, column: 41, scope: !10464)
!10470 = !DILocation(line: 286, column: 52, scope: !10464)
!10471 = !DILocation(line: 286, column: 31, scope: !10464)
!10472 = !DILocation(line: 286, column: 29, scope: !10464)
!10473 = !DILocation(line: 287, column: 17, scope: !10464)
!10474 = !DILocation(line: 290, column: 25, scope: !10392)
!10475 = !DILocation(line: 290, column: 35, scope: !10392)
!10476 = !DILocation(line: 290, column: 39, scope: !10392)
!10477 = !DILocation(line: 290, column: 44, scope: !10392)
!10478 = !DILocation(line: 290, column: 48, scope: !10392)
!10479 = !DILocation(line: 290, column: 15, scope: !10392)
!10480 = !DILocation(line: 291, column: 36, scope: !10392)
!10481 = !DILocation(line: 291, column: 47, scope: !10392)
!10482 = !DILocation(line: 291, column: 52, scope: !10392)
!10483 = !DILocation(line: 291, column: 28, scope: !10392)
!10484 = !DILocation(line: 291, column: 26, scope: !10392)
!10485 = !DILocation(line: 291, column: 20, scope: !10392)
!10486 = !DILocation(line: 293, column: 19, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10392, file: !10067, line: 293, column: 19)
!10488 = !DILocation(line: 293, column: 19, scope: !10392)
!10489 = !DILocalVariable(name: "pfxlen", scope: !10490, file: !10067, line: 295, type: !149)
!10490 = distinct !DILexicalBlock(scope: !10487, file: !10067, line: 294, column: 17)
!10491 = !DILocation(line: 295, column: 26, scope: !10490)
!10492 = !DILocation(line: 297, column: 23, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10490, file: !10067, line: 297, column: 23)
!10494 = !DILocation(line: 297, column: 23, scope: !10490)
!10495 = !DILocation(line: 298, column: 29, scope: !10493)
!10496 = !DILocation(line: 298, column: 36, scope: !10493)
!10497 = !DILocation(line: 298, column: 41, scope: !10493)
!10498 = !DILocation(line: 298, column: 21, scope: !10493)
!10499 = !DILocation(line: 299, column: 26, scope: !10490)
!10500 = !DILocation(line: 299, column: 34, scope: !10490)
!10501 = !DILocation(line: 299, column: 32, scope: !10490)
!10502 = !DILocation(line: 299, column: 24, scope: !10490)
!10503 = !DILocation(line: 300, column: 24, scope: !10490)
!10504 = !DILocation(line: 300, column: 27, scope: !10490)
!10505 = !DILocation(line: 308, column: 32, scope: !10490)
!10506 = !DILocation(line: 308, column: 30, scope: !10490)
!10507 = !DILocation(line: 309, column: 17, scope: !10490)
!10508 = !DILocation(line: 314, column: 23, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !10067, line: 314, column: 23)
!10510 = distinct !DILexicalBlock(scope: !10487, file: !10067, line: 311, column: 17)
!10511 = !DILocation(line: 314, column: 30, scope: !10509)
!10512 = !DILocation(line: 314, column: 38, scope: !10509)
!10513 = !DILocation(line: 314, column: 36, scope: !10509)
!10514 = !DILocation(line: 314, column: 49, scope: !10509)
!10515 = !DILocation(line: 314, column: 28, scope: !10509)
!10516 = !DILocation(line: 314, column: 23, scope: !10510)
!10517 = !DILocation(line: 315, column: 26, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10509, file: !10067, line: 315, column: 21)
!10519 = !DILocation(line: 315, column: 34, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10518, file: !10067, line: 315, column: 21)
!10521 = !DILocation(line: 315, column: 41, scope: !10520)
!10522 = !DILocation(line: 315, column: 39, scope: !10520)
!10523 = !DILocation(line: 315, column: 47, scope: !10520)
!10524 = !DILocation(line: 315, column: 51, scope: !10520)
!10525 = !DILocation(line: 315, column: 50, scope: !10520)
!10526 = !DILocation(line: 0, scope: !10520)
!10527 = !DILocation(line: 315, column: 21, scope: !10518)
!10528 = !DILocation(line: 316, column: 23, scope: !10520)
!10529 = !DILocation(line: 315, column: 71, scope: !10520)
!10530 = !DILocation(line: 315, column: 21, scope: !10520)
!10531 = distinct !{!10531, !10527, !10532}
!10532 = !DILocation(line: 316, column: 23, scope: !10518)
!10533 = !DILocation(line: 322, column: 21, scope: !10392)
!10534 = !DILocation(line: 322, column: 15, scope: !10392)
!10535 = !DILocation(line: 323, column: 13, scope: !10392)
!10536 = !DILocation(line: 326, column: 20, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10538, file: !10067, line: 326, column: 19)
!10538 = distinct !DILexicalBlock(scope: !10389, file: !10067, line: 325, column: 13)
!10539 = !DILocation(line: 326, column: 41, scope: !10537)
!10540 = !DILocation(line: 326, column: 45, scope: !10537)
!10541 = !DILocation(line: 326, column: 44, scope: !10537)
!10542 = !DILocation(line: 326, column: 49, scope: !10537)
!10543 = !DILocation(line: 326, column: 53, scope: !10537)
!10544 = !DILocation(line: 326, column: 62, scope: !10537)
!10545 = !DILocation(line: 326, column: 19, scope: !10538)
!10546 = !DILocation(line: 328, column: 31, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10537, file: !10067, line: 327, column: 17)
!10548 = !DILocation(line: 329, column: 19, scope: !10547)
!10549 = !DILocation(line: 333, column: 5, scope: !10200)
!10550 = !DILocation(line: 176, column: 27, scope: !10195)
!10551 = !DILocation(line: 176, column: 25, scope: !10195)
!10552 = !DILocation(line: 176, column: 3, scope: !10195)
!10553 = distinct !{!10553, !10198, !10554}
!10554 = !DILocation(line: 333, column: 5, scope: !10196)
!10555 = !DILocation(line: 334, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 334, column: 7)
!10557 = !DILocation(line: 334, column: 14, scope: !10556)
!10558 = !DILocation(line: 334, column: 22, scope: !10556)
!10559 = !DILocation(line: 334, column: 20, scope: !10556)
!10560 = !DILocation(line: 334, column: 33, scope: !10556)
!10561 = !DILocation(line: 334, column: 12, scope: !10556)
!10562 = !DILocation(line: 334, column: 37, scope: !10556)
!10563 = !DILocation(line: 334, column: 40, scope: !10556)
!10564 = !DILocation(line: 334, column: 7, scope: !10066)
!10565 = !DILocation(line: 335, column: 5, scope: !10556)
!10566 = !DILocation(line: 339, column: 4, scope: !10066)
!10567 = !DILocation(line: 339, column: 9, scope: !10066)
!10568 = !DILocation(line: 340, column: 7, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 340, column: 7)
!10570 = !DILocation(line: 340, column: 22, scope: !10569)
!10571 = !DILocation(line: 340, column: 27, scope: !10569)
!10572 = !DILocation(line: 340, column: 19, scope: !10569)
!10573 = !DILocation(line: 340, column: 7, scope: !10066)
!10574 = !DILocation(line: 341, column: 23, scope: !10569)
!10575 = !DILocation(line: 341, column: 30, scope: !10569)
!10576 = !DILocation(line: 341, column: 37, scope: !10569)
!10577 = !DILocation(line: 341, column: 35, scope: !10569)
!10578 = !DILocation(line: 341, column: 43, scope: !10569)
!10579 = !DILocation(line: 341, column: 13, scope: !10569)
!10580 = !DILocation(line: 341, column: 11, scope: !10569)
!10581 = !DILocation(line: 341, column: 5, scope: !10569)
!10582 = !DILocation(line: 343, column: 9, scope: !10066)
!10583 = !DILocation(line: 343, column: 3, scope: !10066)
!10584 = !DILocation(line: 344, column: 7, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 344, column: 7)
!10586 = !DILocation(line: 344, column: 7, scope: !10066)
!10587 = !DILocation(line: 345, column: 16, scope: !10585)
!10588 = !DILocation(line: 345, column: 5, scope: !10585)
!10589 = !DILocation(line: 346, column: 10, scope: !10066)
!10590 = !DILocation(line: 346, column: 3, scope: !10066)
!10591 = !DILabel(scope: !10066, name: "error", file: !10067, line: 348)
!10592 = !DILocation(line: 348, column: 1, scope: !10066)
!10593 = !DILocation(line: 349, column: 9, scope: !10066)
!10594 = !DILocation(line: 349, column: 3, scope: !10066)
!10595 = !DILocation(line: 350, column: 9, scope: !10066)
!10596 = !DILocation(line: 350, column: 3, scope: !10066)
!10597 = !DILocation(line: 351, column: 7, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10066, file: !10067, line: 351, column: 7)
!10599 = !DILocation(line: 351, column: 7, scope: !10066)
!10600 = !DILocation(line: 352, column: 16, scope: !10598)
!10601 = !DILocation(line: 352, column: 5, scope: !10598)
!10602 = !DILocation(line: 353, column: 11, scope: !10066)
!10603 = !DILocation(line: 353, column: 3, scope: !10066)
!10604 = !DILocation(line: 353, column: 9, scope: !10066)
!10605 = !DILocation(line: 354, column: 3, scope: !10066)
!10606 = !DILocation(line: 355, column: 1, scope: !10066)
!10607 = distinct !DISubprogram(name: "seen_triple", scope: !10067, file: !10067, line: 70, type: !1678, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1664, retainedNodes: !152)
!10608 = !DILocalVariable(name: "ht", arg: 1, scope: !10607, file: !10067, line: 70, type: !1680)
!10609 = !DILocation(line: 70, column: 27, scope: !10607)
!10610 = !DILocalVariable(name: "filename", arg: 2, scope: !10607, file: !10067, line: 70, type: !146)
!10611 = !DILocation(line: 70, column: 43, scope: !10607)
!10612 = !DILocalVariable(name: "st", arg: 3, scope: !10607, file: !10067, line: 70, type: !1681)
!10613 = !DILocation(line: 70, column: 72, scope: !10607)
!10614 = !DILocation(line: 72, column: 8, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10607, file: !10067, line: 72, column: 7)
!10616 = !DILocation(line: 72, column: 7, scope: !10615)
!10617 = !DILocation(line: 72, column: 11, scope: !10615)
!10618 = !DILocation(line: 72, column: 7, scope: !10607)
!10619 = !DILocalVariable(name: "initial_capacity", scope: !10620, file: !10067, line: 74, type: !149)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !10067, line: 73, column: 5)
!10621 = !DILocation(line: 74, column: 14, scope: !10620)
!10622 = !DILocation(line: 75, column: 30, scope: !10620)
!10623 = !DILocation(line: 75, column: 13, scope: !10620)
!10624 = !DILocation(line: 75, column: 8, scope: !10620)
!10625 = !DILocation(line: 75, column: 11, scope: !10620)
!10626 = !DILocation(line: 80, column: 12, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !10067, line: 80, column: 11)
!10628 = !DILocation(line: 80, column: 11, scope: !10627)
!10629 = !DILocation(line: 80, column: 15, scope: !10627)
!10630 = !DILocation(line: 80, column: 11, scope: !10620)
!10631 = !DILocation(line: 81, column: 9, scope: !10627)
!10632 = !DILocation(line: 82, column: 5, scope: !10620)
!10633 = !DILocation(line: 84, column: 19, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10607, file: !10067, line: 84, column: 7)
!10635 = !DILocation(line: 84, column: 18, scope: !10634)
!10636 = !DILocation(line: 84, column: 23, scope: !10634)
!10637 = !DILocation(line: 84, column: 33, scope: !10634)
!10638 = !DILocation(line: 84, column: 7, scope: !10634)
!10639 = !DILocation(line: 84, column: 7, scope: !10607)
!10640 = !DILocation(line: 85, column: 5, scope: !10634)
!10641 = !DILocation(line: 87, column: 17, scope: !10607)
!10642 = !DILocation(line: 87, column: 16, scope: !10607)
!10643 = !DILocation(line: 87, column: 21, scope: !10607)
!10644 = !DILocation(line: 87, column: 31, scope: !10607)
!10645 = !DILocation(line: 87, column: 3, scope: !10607)
!10646 = !DILocation(line: 88, column: 3, scope: !10607)
!10647 = !DILocation(line: 89, column: 1, scope: !10607)
!10648 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !1140, file: !1140, line: 51, type: !570, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10649 = !DILocalVariable(name: "file", arg: 1, scope: !10648, file: !1140, line: 51, type: !146)
!10650 = !DILocation(line: 51, column: 41, scope: !10648)
!10651 = !DILocation(line: 53, column: 15, scope: !10648)
!10652 = !DILocation(line: 53, column: 13, scope: !10648)
!10653 = !DILocation(line: 54, column: 1, scope: !10648)
!10654 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !1140, file: !1140, line: 88, type: !401, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10655 = !DILocalVariable(name: "ignore", arg: 1, scope: !10654, file: !1140, line: 88, type: !141)
!10656 = !DILocation(line: 88, column: 37, scope: !10654)
!10657 = !DILocation(line: 90, column: 18, scope: !10654)
!10658 = !DILocation(line: 90, column: 16, scope: !10654)
!10659 = !DILocation(line: 91, column: 1, scope: !10654)
!10660 = distinct !DISubprogram(name: "close_stdout", scope: !1140, file: !1140, line: 117, type: !341, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10661 = !DILocation(line: 119, column: 21, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10660, file: !1140, line: 119, column: 7)
!10663 = !DILocation(line: 119, column: 7, scope: !10662)
!10664 = !DILocation(line: 119, column: 29, scope: !10662)
!10665 = !DILocation(line: 120, column: 7, scope: !10662)
!10666 = !DILocation(line: 120, column: 12, scope: !10662)
!10667 = !DILocation(line: 120, column: 25, scope: !10662)
!10668 = !DILocation(line: 120, column: 28, scope: !10662)
!10669 = !DILocation(line: 120, column: 34, scope: !10662)
!10670 = !DILocation(line: 119, column: 7, scope: !10660)
!10671 = !DILocalVariable(name: "write_error", scope: !10672, file: !1140, line: 122, type: !146)
!10672 = distinct !DILexicalBlock(scope: !10662, file: !1140, line: 121, column: 5)
!10673 = !DILocation(line: 122, column: 19, scope: !10672)
!10674 = !DILocation(line: 122, column: 33, scope: !10672)
!10675 = !DILocation(line: 123, column: 11, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10672, file: !1140, line: 123, column: 11)
!10677 = !DILocation(line: 123, column: 11, scope: !10672)
!10678 = !DILocation(line: 124, column: 19, scope: !10676)
!10679 = !DILocation(line: 124, column: 52, scope: !10676)
!10680 = !DILocation(line: 124, column: 36, scope: !10676)
!10681 = !DILocation(line: 125, column: 16, scope: !10676)
!10682 = !DILocation(line: 124, column: 9, scope: !10676)
!10683 = !DILocation(line: 127, column: 19, scope: !10676)
!10684 = !DILocation(line: 127, column: 32, scope: !10676)
!10685 = !DILocation(line: 127, column: 9, scope: !10676)
!10686 = !DILocation(line: 129, column: 14, scope: !10672)
!10687 = !DILocation(line: 129, column: 7, scope: !10672)
!10688 = !DILocation(line: 134, column: 42, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10660, file: !1140, line: 134, column: 7)
!10690 = !DILocation(line: 134, column: 28, scope: !10689)
!10691 = !DILocation(line: 134, column: 50, scope: !10689)
!10692 = !DILocation(line: 134, column: 7, scope: !10660)
!10693 = !DILocation(line: 135, column: 12, scope: !10689)
!10694 = !DILocation(line: 135, column: 5, scope: !10689)
!10695 = !DILocation(line: 136, column: 1, scope: !10660)
!10696 = distinct !DISubprogram(name: "dir_len", scope: !10697, file: !10697, line: 32, type: !1707, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1704, retainedNodes: !152)
!10697 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10698 = !DILocalVariable(name: "file", arg: 1, scope: !10696, file: !10697, line: 32, type: !146)
!10699 = !DILocation(line: 32, column: 22, scope: !10696)
!10700 = !DILocalVariable(name: "prefix_length", scope: !10696, file: !10697, line: 34, type: !149)
!10701 = !DILocation(line: 34, column: 10, scope: !10696)
!10702 = !DILocalVariable(name: "length", scope: !10696, file: !10697, line: 35, type: !149)
!10703 = !DILocation(line: 35, column: 10, scope: !10696)
!10704 = !DILocation(line: 38, column: 21, scope: !10696)
!10705 = !DILocation(line: 38, column: 35, scope: !10696)
!10706 = !DILocation(line: 41, column: 24, scope: !10696)
!10707 = !DILocation(line: 38, column: 20, scope: !10696)
!10708 = !DILocation(line: 38, column: 17, scope: !10696)
!10709 = !DILocation(line: 48, column: 33, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10696, file: !10697, line: 48, column: 3)
!10711 = !DILocation(line: 48, column: 17, scope: !10710)
!10712 = !DILocation(line: 48, column: 41, scope: !10710)
!10713 = !DILocation(line: 48, column: 39, scope: !10710)
!10714 = !DILocation(line: 48, column: 15, scope: !10710)
!10715 = !DILocation(line: 48, column: 8, scope: !10710)
!10716 = !DILocation(line: 49, column: 8, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10710, file: !10697, line: 48, column: 3)
!10718 = !DILocation(line: 49, column: 24, scope: !10717)
!10719 = !DILocation(line: 49, column: 22, scope: !10717)
!10720 = !DILocation(line: 48, column: 3, scope: !10710)
!10721 = !DILocation(line: 50, column: 11, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10717, file: !10697, line: 50, column: 9)
!10723 = !DILocation(line: 50, column: 9, scope: !10717)
!10724 = !DILocation(line: 51, column: 7, scope: !10722)
!10725 = !DILocation(line: 49, column: 38, scope: !10717)
!10726 = !DILocation(line: 48, column: 3, scope: !10717)
!10727 = distinct !{!10727, !10720, !10728}
!10728 = !DILocation(line: 51, column: 7, scope: !10710)
!10729 = !DILocation(line: 52, column: 10, scope: !10696)
!10730 = !DILocation(line: 52, column: 3, scope: !10696)
!10731 = distinct !DISubprogram(name: "mdir_name", scope: !10697, file: !10697, line: 71, type: !572, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1704, retainedNodes: !152)
!10732 = !DILocalVariable(name: "file", arg: 1, scope: !10731, file: !10697, line: 71, type: !146)
!10733 = !DILocation(line: 71, column: 24, scope: !10731)
!10734 = !DILocalVariable(name: "length", scope: !10731, file: !10697, line: 73, type: !149)
!10735 = !DILocation(line: 73, column: 10, scope: !10731)
!10736 = !DILocation(line: 73, column: 28, scope: !10731)
!10737 = !DILocation(line: 73, column: 19, scope: !10731)
!10738 = !DILocalVariable(name: "append_dot", scope: !10731, file: !10697, line: 74, type: !141)
!10739 = !DILocation(line: 74, column: 8, scope: !10731)
!10740 = !DILocation(line: 74, column: 22, scope: !10731)
!10741 = !DILocation(line: 74, column: 29, scope: !10731)
!10742 = !DILocation(line: 75, column: 22, scope: !10731)
!10743 = !DILocalVariable(name: "dir", scope: !10731, file: !10697, line: 78, type: !143)
!10744 = !DILocation(line: 78, column: 9, scope: !10731)
!10745 = !DILocation(line: 78, column: 23, scope: !10731)
!10746 = !DILocation(line: 78, column: 32, scope: !10731)
!10747 = !DILocation(line: 78, column: 30, scope: !10731)
!10748 = !DILocation(line: 78, column: 43, scope: !10731)
!10749 = !DILocation(line: 78, column: 15, scope: !10731)
!10750 = !DILocation(line: 79, column: 8, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10731, file: !10697, line: 79, column: 7)
!10752 = !DILocation(line: 79, column: 7, scope: !10731)
!10753 = !DILocation(line: 80, column: 5, scope: !10751)
!10754 = !DILocation(line: 81, column: 11, scope: !10731)
!10755 = !DILocation(line: 81, column: 16, scope: !10731)
!10756 = !DILocation(line: 81, column: 22, scope: !10731)
!10757 = !DILocation(line: 81, column: 3, scope: !10731)
!10758 = !DILocation(line: 82, column: 7, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10731, file: !10697, line: 82, column: 7)
!10760 = !DILocation(line: 82, column: 7, scope: !10731)
!10761 = !DILocation(line: 83, column: 5, scope: !10759)
!10762 = !DILocation(line: 83, column: 15, scope: !10759)
!10763 = !DILocation(line: 83, column: 19, scope: !10759)
!10764 = !DILocation(line: 84, column: 3, scope: !10731)
!10765 = !DILocation(line: 84, column: 7, scope: !10731)
!10766 = !DILocation(line: 84, column: 15, scope: !10731)
!10767 = !DILocation(line: 85, column: 10, scope: !10731)
!10768 = !DILocation(line: 85, column: 3, scope: !10731)
!10769 = !DILocation(line: 86, column: 1, scope: !10731)
!10770 = distinct !DISubprogram(name: "last_component", scope: !10771, file: !10771, line: 30, type: !572, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10771 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10772 = !DILocalVariable(name: "name", arg: 1, scope: !10770, file: !10771, line: 30, type: !146)
!10773 = !DILocation(line: 30, column: 29, scope: !10770)
!10774 = !DILocalVariable(name: "base", scope: !10770, file: !10771, line: 32, type: !146)
!10775 = !DILocation(line: 32, column: 15, scope: !10770)
!10776 = !DILocation(line: 32, column: 22, scope: !10770)
!10777 = !DILocation(line: 32, column: 27, scope: !10770)
!10778 = !DILocalVariable(name: "p", scope: !10770, file: !10771, line: 33, type: !146)
!10779 = !DILocation(line: 33, column: 15, scope: !10770)
!10780 = !DILocalVariable(name: "saw_slash", scope: !10770, file: !10771, line: 34, type: !141)
!10781 = !DILocation(line: 34, column: 8, scope: !10770)
!10782 = !DILocation(line: 36, column: 3, scope: !10770)
!10783 = !DILocation(line: 36, column: 10, scope: !10770)
!10784 = !DILocation(line: 37, column: 9, scope: !10770)
!10785 = distinct !{!10785, !10782, !10784}
!10786 = !DILocation(line: 39, column: 12, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10770, file: !10771, line: 39, column: 3)
!10788 = !DILocation(line: 39, column: 10, scope: !10787)
!10789 = !DILocation(line: 39, column: 8, scope: !10787)
!10790 = !DILocation(line: 39, column: 19, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10787, file: !10771, line: 39, column: 3)
!10792 = !DILocation(line: 39, column: 18, scope: !10791)
!10793 = !DILocation(line: 39, column: 3, scope: !10787)
!10794 = !DILocation(line: 41, column: 11, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !10771, line: 41, column: 11)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !10771, line: 40, column: 5)
!10797 = !DILocation(line: 41, column: 11, scope: !10796)
!10798 = !DILocation(line: 42, column: 19, scope: !10795)
!10799 = !DILocation(line: 42, column: 9, scope: !10795)
!10800 = !DILocation(line: 43, column: 16, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10795, file: !10771, line: 43, column: 16)
!10802 = !DILocation(line: 43, column: 16, scope: !10795)
!10803 = !DILocation(line: 45, column: 18, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10801, file: !10771, line: 44, column: 9)
!10805 = !DILocation(line: 45, column: 16, scope: !10804)
!10806 = !DILocation(line: 46, column: 21, scope: !10804)
!10807 = !DILocation(line: 47, column: 9, scope: !10804)
!10808 = !DILocation(line: 48, column: 5, scope: !10796)
!10809 = !DILocation(line: 39, column: 23, scope: !10791)
!10810 = !DILocation(line: 39, column: 3, scope: !10791)
!10811 = distinct !{!10811, !10793, !10812}
!10812 = !DILocation(line: 48, column: 5, scope: !10787)
!10813 = !DILocation(line: 50, column: 19, scope: !10770)
!10814 = !DILocation(line: 50, column: 3, scope: !10770)
!10815 = distinct !DISubprogram(name: "base_len", scope: !10771, file: !10771, line: 58, type: !1707, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10816 = !DILocalVariable(name: "name", arg: 1, scope: !10815, file: !10771, line: 58, type: !146)
!10817 = !DILocation(line: 58, column: 23, scope: !10815)
!10818 = !DILocalVariable(name: "len", scope: !10815, file: !10771, line: 60, type: !149)
!10819 = !DILocation(line: 60, column: 10, scope: !10815)
!10820 = !DILocalVariable(name: "prefix_len", scope: !10815, file: !10771, line: 61, type: !149)
!10821 = !DILocation(line: 61, column: 10, scope: !10815)
!10822 = !DILocation(line: 63, column: 22, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10815, file: !10771, line: 63, column: 3)
!10824 = !DILocation(line: 63, column: 14, scope: !10823)
!10825 = !DILocation(line: 63, column: 12, scope: !10823)
!10826 = !DILocation(line: 63, column: 8, scope: !10823)
!10827 = !DILocation(line: 63, column: 34, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10823, file: !10771, line: 63, column: 3)
!10829 = !DILocation(line: 63, column: 32, scope: !10828)
!10830 = !DILocation(line: 63, column: 38, scope: !10828)
!10831 = !DILocation(line: 63, column: 41, scope: !10828)
!10832 = !DILocation(line: 0, scope: !10828)
!10833 = !DILocation(line: 63, column: 3, scope: !10823)
!10834 = !DILocation(line: 64, column: 5, scope: !10828)
!10835 = !DILocation(line: 63, column: 70, scope: !10828)
!10836 = !DILocation(line: 63, column: 3, scope: !10828)
!10837 = distinct !{!10837, !10833, !10838}
!10838 = !DILocation(line: 64, column: 5, scope: !10823)
!10839 = !DILocation(line: 74, column: 10, scope: !10815)
!10840 = !DILocation(line: 74, column: 3, scope: !10815)
!10841 = distinct !DISubprogram(name: "file_has_acl", scope: !10842, file: !10842, line: 45, type: !1715, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !152)
!10842 = !DIFile(filename: "lib/file-has-acl.c", directory: "/home/mbarbar/clone/coreutils")
!10843 = !DILocalVariable(name: "name", arg: 1, scope: !10841, file: !10842, line: 45, type: !146)
!10844 = !DILocation(line: 45, column: 27, scope: !10841)
!10845 = !DILocalVariable(name: "sb", arg: 2, scope: !10841, file: !10842, line: 45, type: !1717)
!10846 = !DILocation(line: 45, column: 52, scope: !10841)
!10847 = !DILocation(line: 48, column: 9, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10841, file: !10842, line: 48, column: 7)
!10849 = !DILocation(line: 48, column: 7, scope: !10841)
!10850 = !DILocalVariable(name: "ret", scope: !10851, file: !10842, line: 53, type: !1650)
!10851 = distinct !DILexicalBlock(scope: !10848, file: !10842, line: 49, column: 5)
!10852 = !DILocation(line: 53, column: 15, scope: !10851)
!10853 = !DILocation(line: 55, column: 23, scope: !10851)
!10854 = !DILocation(line: 55, column: 13, scope: !10851)
!10855 = !DILocation(line: 55, column: 11, scope: !10851)
!10856 = !DILocation(line: 56, column: 11, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10851, file: !10842, line: 56, column: 11)
!10858 = !DILocation(line: 56, column: 15, scope: !10857)
!10859 = !DILocation(line: 56, column: 19, scope: !10857)
!10860 = !DILocation(line: 56, column: 22, scope: !10857)
!10861 = !DILocation(line: 56, column: 28, scope: !10857)
!10862 = !DILocation(line: 56, column: 11, scope: !10851)
!10863 = !DILocation(line: 57, column: 13, scope: !10857)
!10864 = !DILocation(line: 57, column: 9, scope: !10857)
!10865 = !DILocation(line: 58, column: 16, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10857, file: !10842, line: 58, column: 16)
!10867 = !DILocation(line: 58, column: 20, scope: !10866)
!10868 = !DILocation(line: 58, column: 16, scope: !10857)
!10869 = !DILocation(line: 59, column: 9, scope: !10866)
!10870 = !DILocation(line: 61, column: 11, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10851, file: !10842, line: 61, column: 11)
!10872 = !DILocation(line: 61, column: 15, scope: !10871)
!10873 = !DILocation(line: 61, column: 20, scope: !10871)
!10874 = !DILocation(line: 61, column: 23, scope: !10871)
!10875 = !DILocation(line: 61, column: 11, scope: !10851)
!10876 = !DILocation(line: 63, column: 27, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !10842, line: 62, column: 9)
!10878 = !DILocation(line: 63, column: 17, scope: !10877)
!10879 = !DILocation(line: 63, column: 15, scope: !10877)
!10880 = !DILocation(line: 64, column: 15, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !10842, line: 64, column: 15)
!10882 = !DILocation(line: 64, column: 19, scope: !10881)
!10883 = !DILocation(line: 64, column: 23, scope: !10881)
!10884 = !DILocation(line: 64, column: 26, scope: !10881)
!10885 = !DILocation(line: 64, column: 32, scope: !10881)
!10886 = !DILocation(line: 64, column: 15, scope: !10877)
!10887 = !DILocation(line: 65, column: 17, scope: !10881)
!10888 = !DILocation(line: 65, column: 13, scope: !10881)
!10889 = !DILocation(line: 66, column: 20, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10881, file: !10842, line: 66, column: 20)
!10891 = !DILocation(line: 66, column: 24, scope: !10890)
!10892 = !DILocation(line: 66, column: 20, scope: !10881)
!10893 = !DILocation(line: 67, column: 13, scope: !10890)
!10894 = !DILocation(line: 68, column: 9, scope: !10877)
!10895 = !DILocation(line: 70, column: 11, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10851, file: !10842, line: 70, column: 11)
!10897 = !DILocation(line: 70, column: 15, scope: !10896)
!10898 = !DILocation(line: 70, column: 11, scope: !10851)
!10899 = !DILocation(line: 71, column: 35, scope: !10896)
!10900 = !DILocation(line: 71, column: 18, scope: !10896)
!10901 = !DILocation(line: 71, column: 16, scope: !10896)
!10902 = !DILocation(line: 71, column: 9, scope: !10896)
!10903 = !DILocation(line: 72, column: 14, scope: !10851)
!10904 = !DILocation(line: 72, column: 7, scope: !10851)
!10905 = !DILocation(line: 509, column: 3, scope: !10841)
!10906 = !DILocation(line: 510, column: 1, scope: !10841)
!10907 = distinct !DISubprogram(name: "record_file", scope: !10908, file: !10908, line: 29, type: !1743, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1740, retainedNodes: !152)
!10908 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!10909 = !DILocalVariable(name: "ht", arg: 1, scope: !10907, file: !10908, line: 29, type: !244)
!10910 = !DILocation(line: 29, column: 26, scope: !10907)
!10911 = !DILocalVariable(name: "file", arg: 2, scope: !10907, file: !10908, line: 29, type: !146)
!10912 = !DILocation(line: 29, column: 42, scope: !10907)
!10913 = !DILocalVariable(name: "stats", arg: 3, scope: !10907, file: !10908, line: 29, type: !1745)
!10914 = !DILocation(line: 29, column: 67, scope: !10907)
!10915 = !DILocalVariable(name: "ent", scope: !10907, file: !10908, line: 31, type: !1768)
!10916 = !DILocation(line: 31, column: 20, scope: !10907)
!10917 = !DILocation(line: 33, column: 7, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10907, file: !10908, line: 33, column: 7)
!10919 = !DILocation(line: 33, column: 10, scope: !10918)
!10920 = !DILocation(line: 33, column: 7, scope: !10907)
!10921 = !DILocation(line: 34, column: 5, scope: !10918)
!10922 = !DILocation(line: 36, column: 9, scope: !10907)
!10923 = !DILocation(line: 36, column: 7, scope: !10907)
!10924 = !DILocation(line: 37, column: 24, scope: !10907)
!10925 = !DILocation(line: 37, column: 15, scope: !10907)
!10926 = !DILocation(line: 37, column: 3, scope: !10907)
!10927 = !DILocation(line: 37, column: 8, scope: !10907)
!10928 = !DILocation(line: 37, column: 13, scope: !10907)
!10929 = !{!10930, !2443, i64 0}
!10930 = !{!"F_triple", !2443, i64 0, !2467, i64 8, !2467, i64 16}
!10931 = !DILocation(line: 38, column: 17, scope: !10907)
!10932 = !DILocation(line: 38, column: 24, scope: !10907)
!10933 = !DILocation(line: 38, column: 3, scope: !10907)
!10934 = !DILocation(line: 38, column: 8, scope: !10907)
!10935 = !DILocation(line: 38, column: 15, scope: !10907)
!10936 = !{!10930, !2467, i64 8}
!10937 = !DILocation(line: 39, column: 17, scope: !10907)
!10938 = !DILocation(line: 39, column: 24, scope: !10907)
!10939 = !DILocation(line: 39, column: 3, scope: !10907)
!10940 = !DILocation(line: 39, column: 8, scope: !10907)
!10941 = !DILocation(line: 39, column: 15, scope: !10907)
!10942 = !{!10930, !2467, i64 16}
!10943 = !DILocalVariable(name: "ent_from_table", scope: !10944, file: !10908, line: 42, type: !1768)
!10944 = distinct !DILexicalBlock(scope: !10907, file: !10908, line: 41, column: 3)
!10945 = !DILocation(line: 42, column: 22, scope: !10944)
!10946 = !DILocation(line: 42, column: 52, scope: !10944)
!10947 = !DILocation(line: 42, column: 56, scope: !10944)
!10948 = !DILocation(line: 42, column: 39, scope: !10944)
!10949 = !DILocation(line: 43, column: 9, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !10908, line: 43, column: 9)
!10951 = !DILocation(line: 43, column: 24, scope: !10950)
!10952 = !DILocation(line: 43, column: 9, scope: !10944)
!10953 = !DILocation(line: 46, column: 9, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !10908, line: 44, column: 7)
!10955 = !DILocation(line: 49, column: 9, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10944, file: !10908, line: 49, column: 9)
!10957 = !DILocation(line: 49, column: 27, scope: !10956)
!10958 = !DILocation(line: 49, column: 24, scope: !10956)
!10959 = !DILocation(line: 49, column: 9, scope: !10944)
!10960 = !DILocation(line: 53, column: 22, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10956, file: !10908, line: 50, column: 7)
!10962 = !DILocation(line: 53, column: 9, scope: !10961)
!10963 = !DILocation(line: 54, column: 7, scope: !10961)
!10964 = !DILocation(line: 56, column: 1, scope: !10907)
!10965 = distinct !DISubprogram(name: "seen_file", scope: !10908, file: !10908, line: 61, type: !1775, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1740, retainedNodes: !152)
!10966 = !DILocalVariable(name: "ht", arg: 1, scope: !10965, file: !10908, line: 61, type: !1777)
!10967 = !DILocation(line: 61, column: 30, scope: !10965)
!10968 = !DILocalVariable(name: "file", arg: 2, scope: !10965, file: !10908, line: 61, type: !146)
!10969 = !DILocation(line: 61, column: 46, scope: !10965)
!10970 = !DILocalVariable(name: "stats", arg: 3, scope: !10965, file: !10908, line: 62, type: !1745)
!10971 = !DILocation(line: 62, column: 31, scope: !10965)
!10972 = !DILocalVariable(name: "new_ent", scope: !10965, file: !10908, line: 64, type: !1769)
!10973 = !DILocation(line: 64, column: 19, scope: !10965)
!10974 = !DILocation(line: 66, column: 7, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10965, file: !10908, line: 66, column: 7)
!10976 = !DILocation(line: 66, column: 10, scope: !10975)
!10977 = !DILocation(line: 66, column: 7, scope: !10965)
!10978 = !DILocation(line: 67, column: 5, scope: !10975)
!10979 = !DILocation(line: 69, column: 27, scope: !10965)
!10980 = !DILocation(line: 69, column: 11, scope: !10965)
!10981 = !DILocation(line: 69, column: 16, scope: !10965)
!10982 = !DILocation(line: 70, column: 20, scope: !10965)
!10983 = !DILocation(line: 70, column: 27, scope: !10965)
!10984 = !DILocation(line: 70, column: 11, scope: !10965)
!10985 = !DILocation(line: 70, column: 18, scope: !10965)
!10986 = !DILocation(line: 71, column: 20, scope: !10965)
!10987 = !DILocation(line: 71, column: 27, scope: !10965)
!10988 = !DILocation(line: 71, column: 11, scope: !10965)
!10989 = !DILocation(line: 71, column: 18, scope: !10965)
!10990 = !DILocation(line: 73, column: 25, scope: !10965)
!10991 = !DILocation(line: 73, column: 29, scope: !10965)
!10992 = !DILocation(line: 73, column: 12, scope: !10965)
!10993 = !DILocation(line: 73, column: 11, scope: !10965)
!10994 = !DILocation(line: 73, column: 10, scope: !10965)
!10995 = !DILocation(line: 73, column: 3, scope: !10965)
!10996 = !DILocation(line: 74, column: 1, scope: !10965)
!10997 = distinct !DISubprogram(name: "strmode", scope: !10998, file: !10998, line: 96, type: !1782, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!10998 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!10999 = !DILocalVariable(name: "mode", arg: 1, scope: !10997, file: !10998, line: 96, type: !228)
!11000 = !DILocation(line: 96, column: 17, scope: !10997)
!11001 = !DILocalVariable(name: "str", arg: 2, scope: !10997, file: !10998, line: 96, type: !143)
!11002 = !DILocation(line: 96, column: 29, scope: !10997)
!11003 = !DILocation(line: 98, column: 22, scope: !10997)
!11004 = !DILocation(line: 98, column: 12, scope: !10997)
!11005 = !DILocation(line: 98, column: 3, scope: !10997)
!11006 = !DILocation(line: 98, column: 10, scope: !10997)
!11007 = !DILocation(line: 99, column: 12, scope: !10997)
!11008 = !DILocation(line: 99, column: 17, scope: !10997)
!11009 = !DILocation(line: 99, column: 3, scope: !10997)
!11010 = !DILocation(line: 99, column: 10, scope: !10997)
!11011 = !DILocation(line: 100, column: 12, scope: !10997)
!11012 = !DILocation(line: 100, column: 17, scope: !10997)
!11013 = !DILocation(line: 100, column: 3, scope: !10997)
!11014 = !DILocation(line: 100, column: 10, scope: !10997)
!11015 = !DILocation(line: 101, column: 13, scope: !10997)
!11016 = !DILocation(line: 101, column: 18, scope: !10997)
!11017 = !DILocation(line: 102, column: 16, scope: !10997)
!11018 = !DILocation(line: 102, column: 21, scope: !10997)
!11019 = !DILocation(line: 103, column: 16, scope: !10997)
!11020 = !DILocation(line: 103, column: 21, scope: !10997)
!11021 = !DILocation(line: 101, column: 12, scope: !10997)
!11022 = !DILocation(line: 101, column: 3, scope: !10997)
!11023 = !DILocation(line: 101, column: 10, scope: !10997)
!11024 = !DILocation(line: 104, column: 12, scope: !10997)
!11025 = !DILocation(line: 104, column: 17, scope: !10997)
!11026 = !DILocation(line: 104, column: 3, scope: !10997)
!11027 = !DILocation(line: 104, column: 10, scope: !10997)
!11028 = !DILocation(line: 105, column: 12, scope: !10997)
!11029 = !DILocation(line: 105, column: 17, scope: !10997)
!11030 = !DILocation(line: 105, column: 3, scope: !10997)
!11031 = !DILocation(line: 105, column: 10, scope: !10997)
!11032 = !DILocation(line: 106, column: 13, scope: !10997)
!11033 = !DILocation(line: 106, column: 18, scope: !10997)
!11034 = !DILocation(line: 107, column: 16, scope: !10997)
!11035 = !DILocation(line: 107, column: 21, scope: !10997)
!11036 = !DILocation(line: 108, column: 16, scope: !10997)
!11037 = !DILocation(line: 108, column: 21, scope: !10997)
!11038 = !DILocation(line: 106, column: 12, scope: !10997)
!11039 = !DILocation(line: 106, column: 3, scope: !10997)
!11040 = !DILocation(line: 106, column: 10, scope: !10997)
!11041 = !DILocation(line: 109, column: 12, scope: !10997)
!11042 = !DILocation(line: 109, column: 17, scope: !10997)
!11043 = !DILocation(line: 109, column: 3, scope: !10997)
!11044 = !DILocation(line: 109, column: 10, scope: !10997)
!11045 = !DILocation(line: 110, column: 12, scope: !10997)
!11046 = !DILocation(line: 110, column: 17, scope: !10997)
!11047 = !DILocation(line: 110, column: 3, scope: !10997)
!11048 = !DILocation(line: 110, column: 10, scope: !10997)
!11049 = !DILocation(line: 111, column: 13, scope: !10997)
!11050 = !DILocation(line: 111, column: 18, scope: !10997)
!11051 = !DILocation(line: 112, column: 16, scope: !10997)
!11052 = !DILocation(line: 112, column: 21, scope: !10997)
!11053 = !DILocation(line: 113, column: 16, scope: !10997)
!11054 = !DILocation(line: 113, column: 21, scope: !10997)
!11055 = !DILocation(line: 111, column: 12, scope: !10997)
!11056 = !DILocation(line: 111, column: 3, scope: !10997)
!11057 = !DILocation(line: 111, column: 10, scope: !10997)
!11058 = !DILocation(line: 114, column: 3, scope: !10997)
!11059 = !DILocation(line: 114, column: 11, scope: !10997)
!11060 = !DILocation(line: 115, column: 3, scope: !10997)
!11061 = !DILocation(line: 115, column: 11, scope: !10997)
!11062 = !DILocation(line: 116, column: 1, scope: !10997)
!11063 = distinct !DISubprogram(name: "ftypelet", scope: !10998, file: !10998, line: 54, type: !1809, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!11064 = !DILocalVariable(name: "bits", arg: 1, scope: !11063, file: !10998, line: 54, type: !228)
!11065 = !DILocation(line: 54, column: 18, scope: !11063)
!11066 = !DILocation(line: 57, column: 7, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 57, column: 7)
!11068 = !DILocation(line: 57, column: 7, scope: !11063)
!11069 = !DILocation(line: 58, column: 5, scope: !11067)
!11070 = !DILocation(line: 59, column: 7, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 59, column: 7)
!11072 = !DILocation(line: 59, column: 7, scope: !11063)
!11073 = !DILocation(line: 60, column: 5, scope: !11071)
!11074 = !DILocation(line: 63, column: 7, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 63, column: 7)
!11076 = !DILocation(line: 63, column: 7, scope: !11063)
!11077 = !DILocation(line: 64, column: 5, scope: !11075)
!11078 = !DILocation(line: 65, column: 7, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 65, column: 7)
!11080 = !DILocation(line: 65, column: 7, scope: !11063)
!11081 = !DILocation(line: 66, column: 5, scope: !11079)
!11082 = !DILocation(line: 67, column: 7, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 67, column: 7)
!11084 = !DILocation(line: 67, column: 7, scope: !11063)
!11085 = !DILocation(line: 68, column: 5, scope: !11083)
!11086 = !DILocation(line: 69, column: 7, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 69, column: 7)
!11088 = !DILocation(line: 69, column: 7, scope: !11063)
!11089 = !DILocation(line: 70, column: 5, scope: !11087)
!11090 = !DILocation(line: 73, column: 7, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11063, file: !10998, line: 73, column: 7)
!11092 = !DILocation(line: 73, column: 7, scope: !11063)
!11093 = !DILocation(line: 74, column: 5, scope: !11091)
!11094 = !DILocation(line: 90, column: 3, scope: !11063)
!11095 = !DILocation(line: 91, column: 1, scope: !11063)
!11096 = distinct !DISubprogram(name: "filemodestring", scope: !10998, file: !10998, line: 166, type: !1784, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!11097 = !DILocalVariable(name: "statp", arg: 1, scope: !11096, file: !10998, line: 166, type: !1786)
!11098 = !DILocation(line: 166, column: 36, scope: !11096)
!11099 = !DILocalVariable(name: "str", arg: 2, scope: !11096, file: !10998, line: 166, type: !143)
!11100 = !DILocation(line: 166, column: 49, scope: !11096)
!11101 = !DILocation(line: 168, column: 12, scope: !11096)
!11102 = !DILocation(line: 168, column: 19, scope: !11096)
!11103 = !DILocation(line: 168, column: 28, scope: !11096)
!11104 = !DILocation(line: 168, column: 3, scope: !11096)
!11105 = !DILocation(line: 170, column: 7, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11096, file: !10998, line: 170, column: 7)
!11107 = !DILocation(line: 170, column: 7, scope: !11096)
!11108 = !DILocation(line: 171, column: 5, scope: !11106)
!11109 = !DILocation(line: 171, column: 12, scope: !11106)
!11110 = !DILocation(line: 174, column: 12, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !10998, line: 174, column: 12)
!11112 = distinct !DILexicalBlock(scope: !11106, file: !10998, line: 172, column: 12)
!11113 = !DILocation(line: 174, column: 12, scope: !11112)
!11114 = !DILocation(line: 175, column: 5, scope: !11111)
!11115 = !DILocation(line: 175, column: 12, scope: !11111)
!11116 = !DILocation(line: 176, column: 12, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11111, file: !10998, line: 176, column: 12)
!11118 = !DILocation(line: 176, column: 12, scope: !11111)
!11119 = !DILocation(line: 177, column: 5, scope: !11117)
!11120 = !DILocation(line: 177, column: 12, scope: !11117)
!11121 = !DILocation(line: 180, column: 1, scope: !11096)
!11122 = distinct !DISubprogram(name: "file_name_concat", scope: !11123, file: !11123, line: 35, type: !1814, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1811, retainedNodes: !152)
!11123 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!11124 = !DILocalVariable(name: "dir", arg: 1, scope: !11122, file: !11123, line: 35, type: !146)
!11125 = !DILocation(line: 35, column: 31, scope: !11122)
!11126 = !DILocalVariable(name: "base", arg: 2, scope: !11122, file: !11123, line: 35, type: !146)
!11127 = !DILocation(line: 35, column: 48, scope: !11122)
!11128 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11122, file: !11123, line: 35, type: !142)
!11129 = !DILocation(line: 35, column: 61, scope: !11122)
!11130 = !DILocalVariable(name: "p", scope: !11122, file: !11123, line: 37, type: !143)
!11131 = !DILocation(line: 37, column: 9, scope: !11122)
!11132 = !DILocation(line: 37, column: 32, scope: !11122)
!11133 = !DILocation(line: 37, column: 37, scope: !11122)
!11134 = !DILocation(line: 37, column: 43, scope: !11122)
!11135 = !DILocation(line: 37, column: 13, scope: !11122)
!11136 = !DILocation(line: 38, column: 7, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 38, column: 7)
!11138 = !DILocation(line: 38, column: 9, scope: !11137)
!11139 = !DILocation(line: 38, column: 7, scope: !11122)
!11140 = !DILocation(line: 39, column: 5, scope: !11137)
!11141 = !DILocation(line: 40, column: 10, scope: !11122)
!11142 = !DILocation(line: 40, column: 3, scope: !11122)
!11143 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11144, file: !11144, line: 47, type: !1814, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1816, retainedNodes: !152)
!11144 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!11145 = !DILocalVariable(name: "dir", arg: 1, scope: !11143, file: !11144, line: 47, type: !146)
!11146 = !DILocation(line: 47, column: 32, scope: !11143)
!11147 = !DILocalVariable(name: "base", arg: 2, scope: !11143, file: !11144, line: 47, type: !146)
!11148 = !DILocation(line: 47, column: 49, scope: !11143)
!11149 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11143, file: !11144, line: 47, type: !142)
!11150 = !DILocation(line: 47, column: 62, scope: !11143)
!11151 = !DILocalVariable(name: "dirbase", scope: !11143, file: !11144, line: 49, type: !146)
!11152 = !DILocation(line: 49, column: 15, scope: !11143)
!11153 = !DILocation(line: 49, column: 41, scope: !11143)
!11154 = !DILocation(line: 49, column: 25, scope: !11143)
!11155 = !DILocalVariable(name: "dirbaselen", scope: !11143, file: !11144, line: 50, type: !149)
!11156 = !DILocation(line: 50, column: 10, scope: !11143)
!11157 = !DILocation(line: 50, column: 33, scope: !11143)
!11158 = !DILocation(line: 50, column: 23, scope: !11143)
!11159 = !DILocalVariable(name: "dirlen", scope: !11143, file: !11144, line: 51, type: !149)
!11160 = !DILocation(line: 51, column: 10, scope: !11143)
!11161 = !DILocation(line: 51, column: 19, scope: !11143)
!11162 = !DILocation(line: 51, column: 29, scope: !11143)
!11163 = !DILocation(line: 51, column: 27, scope: !11143)
!11164 = !DILocation(line: 51, column: 35, scope: !11143)
!11165 = !DILocation(line: 51, column: 33, scope: !11143)
!11166 = !DILocalVariable(name: "baselen", scope: !11143, file: !11144, line: 52, type: !149)
!11167 = !DILocation(line: 52, column: 10, scope: !11143)
!11168 = !DILocation(line: 52, column: 28, scope: !11143)
!11169 = !DILocation(line: 52, column: 20, scope: !11143)
!11170 = !DILocalVariable(name: "sep", scope: !11143, file: !11144, line: 53, type: !144)
!11171 = !DILocation(line: 53, column: 8, scope: !11143)
!11172 = !DILocation(line: 54, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11143, file: !11144, line: 54, column: 7)
!11174 = !DILocation(line: 54, column: 7, scope: !11143)
!11175 = !DILocation(line: 57, column: 13, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !11144, line: 57, column: 11)
!11177 = distinct !DILexicalBlock(scope: !11173, file: !11144, line: 55, column: 5)
!11178 = !DILocation(line: 57, column: 39, scope: !11176)
!11179 = !DILocation(line: 57, column: 44, scope: !11176)
!11180 = !DILocation(line: 57, column: 11, scope: !11177)
!11181 = !DILocation(line: 58, column: 13, scope: !11176)
!11182 = !DILocation(line: 58, column: 9, scope: !11176)
!11183 = !DILocation(line: 59, column: 5, scope: !11177)
!11184 = !DILocation(line: 60, column: 12, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11173, file: !11144, line: 60, column: 12)
!11186 = !DILocation(line: 60, column: 12, scope: !11173)
!11187 = !DILocation(line: 67, column: 11, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11185, file: !11144, line: 61, column: 5)
!11189 = !DILocation(line: 68, column: 5, scope: !11188)
!11190 = !DILocalVariable(name: "p_concat", scope: !11143, file: !11144, line: 70, type: !143)
!11191 = !DILocation(line: 70, column: 9, scope: !11143)
!11192 = !DILocation(line: 70, column: 28, scope: !11143)
!11193 = !DILocation(line: 70, column: 38, scope: !11143)
!11194 = !DILocation(line: 70, column: 42, scope: !11143)
!11195 = !DILocation(line: 70, column: 37, scope: !11143)
!11196 = !DILocation(line: 70, column: 35, scope: !11143)
!11197 = !DILocation(line: 70, column: 54, scope: !11143)
!11198 = !DILocation(line: 70, column: 52, scope: !11143)
!11199 = !DILocation(line: 70, column: 62, scope: !11143)
!11200 = !DILocation(line: 70, column: 20, scope: !11143)
!11201 = !DILocalVariable(name: "p", scope: !11143, file: !11144, line: 71, type: !143)
!11202 = !DILocation(line: 71, column: 9, scope: !11143)
!11203 = !DILocation(line: 73, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11143, file: !11144, line: 73, column: 7)
!11205 = !DILocation(line: 73, column: 16, scope: !11204)
!11206 = !DILocation(line: 73, column: 7, scope: !11143)
!11207 = !DILocation(line: 74, column: 5, scope: !11204)
!11208 = !DILocation(line: 76, column: 16, scope: !11143)
!11209 = !DILocation(line: 76, column: 26, scope: !11143)
!11210 = !DILocation(line: 76, column: 31, scope: !11143)
!11211 = !DILocation(line: 76, column: 7, scope: !11143)
!11212 = !DILocation(line: 76, column: 5, scope: !11143)
!11213 = !DILocation(line: 77, column: 8, scope: !11143)
!11214 = !DILocation(line: 77, column: 4, scope: !11143)
!11215 = !DILocation(line: 77, column: 6, scope: !11143)
!11216 = !DILocation(line: 78, column: 8, scope: !11143)
!11217 = !DILocation(line: 78, column: 12, scope: !11143)
!11218 = !DILocation(line: 78, column: 5, scope: !11143)
!11219 = !DILocation(line: 80, column: 7, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11143, file: !11144, line: 80, column: 7)
!11221 = !DILocation(line: 80, column: 7, scope: !11143)
!11222 = !DILocation(line: 81, column: 23, scope: !11220)
!11223 = !DILocation(line: 81, column: 6, scope: !11220)
!11224 = !DILocation(line: 81, column: 21, scope: !11220)
!11225 = !DILocation(line: 81, column: 5, scope: !11220)
!11226 = !DILocation(line: 83, column: 16, scope: !11143)
!11227 = !DILocation(line: 83, column: 19, scope: !11143)
!11228 = !DILocation(line: 83, column: 25, scope: !11143)
!11229 = !DILocation(line: 83, column: 7, scope: !11143)
!11230 = !DILocation(line: 83, column: 5, scope: !11143)
!11231 = !DILocation(line: 84, column: 4, scope: !11143)
!11232 = !DILocation(line: 84, column: 6, scope: !11143)
!11233 = !DILocation(line: 86, column: 10, scope: !11143)
!11234 = !DILocation(line: 86, column: 3, scope: !11143)
!11235 = !DILocation(line: 87, column: 1, scope: !11143)
!11236 = distinct !DISubprogram(name: "filevercmp", scope: !11237, file: !11237, line: 125, type: !731, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11237 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mbarbar/clone/coreutils")
!11238 = !DILocalVariable(name: "s1", arg: 1, scope: !11236, file: !11237, line: 125, type: !146)
!11239 = !DILocation(line: 125, column: 25, scope: !11236)
!11240 = !DILocalVariable(name: "s2", arg: 2, scope: !11236, file: !11237, line: 125, type: !146)
!11241 = !DILocation(line: 125, column: 41, scope: !11236)
!11242 = !DILocalVariable(name: "s1_pos", scope: !11236, file: !11237, line: 127, type: !146)
!11243 = !DILocation(line: 127, column: 15, scope: !11236)
!11244 = !DILocalVariable(name: "s2_pos", scope: !11236, file: !11237, line: 128, type: !146)
!11245 = !DILocation(line: 128, column: 15, scope: !11236)
!11246 = !DILocalVariable(name: "s1_suffix", scope: !11236, file: !11237, line: 129, type: !146)
!11247 = !DILocation(line: 129, column: 15, scope: !11236)
!11248 = !DILocalVariable(name: "s2_suffix", scope: !11236, file: !11237, line: 129, type: !146)
!11249 = !DILocation(line: 129, column: 27, scope: !11236)
!11250 = !DILocalVariable(name: "s1_len", scope: !11236, file: !11237, line: 130, type: !149)
!11251 = !DILocation(line: 130, column: 10, scope: !11236)
!11252 = !DILocalVariable(name: "s2_len", scope: !11236, file: !11237, line: 130, type: !149)
!11253 = !DILocation(line: 130, column: 18, scope: !11236)
!11254 = !DILocalVariable(name: "result", scope: !11236, file: !11237, line: 131, type: !27)
!11255 = !DILocation(line: 131, column: 7, scope: !11236)
!11256 = !DILocalVariable(name: "simple_cmp", scope: !11236, file: !11237, line: 134, type: !27)
!11257 = !DILocation(line: 134, column: 7, scope: !11236)
!11258 = !DILocation(line: 134, column: 28, scope: !11236)
!11259 = !DILocation(line: 134, column: 32, scope: !11236)
!11260 = !DILocation(line: 134, column: 20, scope: !11236)
!11261 = !DILocation(line: 135, column: 7, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 135, column: 7)
!11263 = !DILocation(line: 135, column: 18, scope: !11262)
!11264 = !DILocation(line: 135, column: 7, scope: !11236)
!11265 = !DILocation(line: 136, column: 5, scope: !11262)
!11266 = !DILocation(line: 139, column: 9, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 139, column: 7)
!11268 = !DILocation(line: 139, column: 8, scope: !11267)
!11269 = !DILocation(line: 139, column: 7, scope: !11236)
!11270 = !DILocation(line: 140, column: 5, scope: !11267)
!11271 = !DILocation(line: 141, column: 9, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 141, column: 7)
!11273 = !DILocation(line: 141, column: 8, scope: !11272)
!11274 = !DILocation(line: 141, column: 7, scope: !11236)
!11275 = !DILocation(line: 142, column: 5, scope: !11272)
!11276 = !DILocation(line: 143, column: 25, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 143, column: 7)
!11278 = !DILocation(line: 143, column: 12, scope: !11277)
!11279 = !DILocation(line: 143, column: 9, scope: !11277)
!11280 = !DILocation(line: 143, column: 7, scope: !11236)
!11281 = !DILocation(line: 144, column: 5, scope: !11277)
!11282 = !DILocation(line: 145, column: 25, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 145, column: 7)
!11284 = !DILocation(line: 145, column: 12, scope: !11283)
!11285 = !DILocation(line: 145, column: 9, scope: !11283)
!11286 = !DILocation(line: 145, column: 7, scope: !11236)
!11287 = !DILocation(line: 146, column: 5, scope: !11283)
!11288 = !DILocation(line: 147, column: 26, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 147, column: 7)
!11290 = !DILocation(line: 147, column: 12, scope: !11289)
!11291 = !DILocation(line: 147, column: 9, scope: !11289)
!11292 = !DILocation(line: 147, column: 7, scope: !11236)
!11293 = !DILocation(line: 148, column: 5, scope: !11289)
!11294 = !DILocation(line: 149, column: 26, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 149, column: 7)
!11296 = !DILocation(line: 149, column: 12, scope: !11295)
!11297 = !DILocation(line: 149, column: 9, scope: !11295)
!11298 = !DILocation(line: 149, column: 7, scope: !11236)
!11299 = !DILocation(line: 150, column: 5, scope: !11295)
!11300 = !DILocation(line: 153, column: 8, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 153, column: 7)
!11302 = !DILocation(line: 153, column: 7, scope: !11301)
!11303 = !DILocation(line: 153, column: 11, scope: !11301)
!11304 = !DILocation(line: 153, column: 18, scope: !11301)
!11305 = !DILocation(line: 153, column: 22, scope: !11301)
!11306 = !DILocation(line: 153, column: 21, scope: !11301)
!11307 = !DILocation(line: 153, column: 25, scope: !11301)
!11308 = !DILocation(line: 153, column: 7, scope: !11236)
!11309 = !DILocation(line: 154, column: 5, scope: !11301)
!11310 = !DILocation(line: 155, column: 8, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 155, column: 7)
!11312 = !DILocation(line: 155, column: 7, scope: !11311)
!11313 = !DILocation(line: 155, column: 11, scope: !11311)
!11314 = !DILocation(line: 155, column: 18, scope: !11311)
!11315 = !DILocation(line: 155, column: 22, scope: !11311)
!11316 = !DILocation(line: 155, column: 21, scope: !11311)
!11317 = !DILocation(line: 155, column: 25, scope: !11311)
!11318 = !DILocation(line: 155, column: 7, scope: !11236)
!11319 = !DILocation(line: 156, column: 5, scope: !11311)
!11320 = !DILocation(line: 157, column: 8, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 157, column: 7)
!11322 = !DILocation(line: 157, column: 7, scope: !11321)
!11323 = !DILocation(line: 157, column: 11, scope: !11321)
!11324 = !DILocation(line: 157, column: 18, scope: !11321)
!11325 = !DILocation(line: 157, column: 22, scope: !11321)
!11326 = !DILocation(line: 157, column: 21, scope: !11321)
!11327 = !DILocation(line: 157, column: 25, scope: !11321)
!11328 = !DILocation(line: 157, column: 7, scope: !11236)
!11329 = !DILocation(line: 159, column: 9, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11321, file: !11237, line: 158, column: 5)
!11331 = !DILocation(line: 160, column: 9, scope: !11330)
!11332 = !DILocation(line: 161, column: 5, scope: !11330)
!11333 = !DILocation(line: 164, column: 12, scope: !11236)
!11334 = !DILocation(line: 164, column: 10, scope: !11236)
!11335 = !DILocation(line: 165, column: 12, scope: !11236)
!11336 = !DILocation(line: 165, column: 10, scope: !11236)
!11337 = !DILocation(line: 166, column: 15, scope: !11236)
!11338 = !DILocation(line: 166, column: 13, scope: !11236)
!11339 = !DILocation(line: 167, column: 15, scope: !11236)
!11340 = !DILocation(line: 167, column: 13, scope: !11236)
!11341 = !DILocation(line: 168, column: 13, scope: !11236)
!11342 = !DILocation(line: 168, column: 25, scope: !11236)
!11343 = !DILocation(line: 168, column: 37, scope: !11236)
!11344 = !DILocation(line: 168, column: 47, scope: !11236)
!11345 = !DILocation(line: 168, column: 45, scope: !11236)
!11346 = !DILocation(line: 168, column: 10, scope: !11236)
!11347 = !DILocation(line: 169, column: 13, scope: !11236)
!11348 = !DILocation(line: 169, column: 25, scope: !11236)
!11349 = !DILocation(line: 169, column: 37, scope: !11236)
!11350 = !DILocation(line: 169, column: 47, scope: !11236)
!11351 = !DILocation(line: 169, column: 45, scope: !11236)
!11352 = !DILocation(line: 169, column: 10, scope: !11236)
!11353 = !DILocation(line: 172, column: 8, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11236, file: !11237, line: 172, column: 7)
!11355 = !DILocation(line: 172, column: 18, scope: !11354)
!11356 = !DILocation(line: 172, column: 21, scope: !11354)
!11357 = !DILocation(line: 172, column: 32, scope: !11354)
!11358 = !DILocation(line: 172, column: 36, scope: !11354)
!11359 = !DILocation(line: 172, column: 46, scope: !11354)
!11360 = !DILocation(line: 172, column: 43, scope: !11354)
!11361 = !DILocation(line: 173, column: 7, scope: !11354)
!11362 = !DILocation(line: 173, column: 24, scope: !11354)
!11363 = !DILocation(line: 173, column: 28, scope: !11354)
!11364 = !DILocation(line: 173, column: 32, scope: !11354)
!11365 = !DILocation(line: 173, column: 15, scope: !11354)
!11366 = !DILocation(line: 173, column: 12, scope: !11354)
!11367 = !DILocation(line: 172, column: 7, scope: !11236)
!11368 = !DILocation(line: 175, column: 16, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11354, file: !11237, line: 174, column: 5)
!11370 = !DILocation(line: 175, column: 25, scope: !11369)
!11371 = !DILocation(line: 175, column: 23, scope: !11369)
!11372 = !DILocation(line: 175, column: 14, scope: !11369)
!11373 = !DILocation(line: 176, column: 16, scope: !11369)
!11374 = !DILocation(line: 176, column: 25, scope: !11369)
!11375 = !DILocation(line: 176, column: 23, scope: !11369)
!11376 = !DILocation(line: 176, column: 14, scope: !11369)
!11377 = !DILocation(line: 177, column: 5, scope: !11369)
!11378 = !DILocation(line: 179, column: 23, scope: !11236)
!11379 = !DILocation(line: 179, column: 27, scope: !11236)
!11380 = !DILocation(line: 179, column: 35, scope: !11236)
!11381 = !DILocation(line: 179, column: 39, scope: !11236)
!11382 = !DILocation(line: 179, column: 12, scope: !11236)
!11383 = !DILocation(line: 179, column: 10, scope: !11236)
!11384 = !DILocation(line: 180, column: 10, scope: !11236)
!11385 = !DILocation(line: 180, column: 17, scope: !11236)
!11386 = !DILocation(line: 180, column: 24, scope: !11236)
!11387 = !DILocation(line: 180, column: 37, scope: !11236)
!11388 = !DILocation(line: 180, column: 3, scope: !11236)
!11389 = !DILocation(line: 181, column: 1, scope: !11236)
!11390 = distinct !DISubprogram(name: "match_suffix", scope: !11237, file: !11237, line: 34, type: !1822, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11391 = !DILocalVariable(name: "str", arg: 1, scope: !11390, file: !11237, line: 34, type: !145)
!11392 = !DILocation(line: 34, column: 28, scope: !11390)
!11393 = !DILocalVariable(name: "match", scope: !11390, file: !11237, line: 36, type: !146)
!11394 = !DILocation(line: 36, column: 15, scope: !11390)
!11395 = !DILocalVariable(name: "read_alpha", scope: !11390, file: !11237, line: 37, type: !141)
!11396 = !DILocation(line: 37, column: 8, scope: !11390)
!11397 = !DILocation(line: 38, column: 3, scope: !11390)
!11398 = !DILocation(line: 38, column: 12, scope: !11390)
!11399 = !DILocation(line: 38, column: 11, scope: !11390)
!11400 = !DILocation(line: 38, column: 10, scope: !11390)
!11401 = !DILocation(line: 40, column: 11, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !11237, line: 40, column: 11)
!11403 = distinct !DILexicalBlock(scope: !11390, file: !11237, line: 39, column: 5)
!11404 = !DILocation(line: 40, column: 11, scope: !11403)
!11405 = !DILocation(line: 42, column: 22, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11402, file: !11237, line: 41, column: 9)
!11407 = !DILocation(line: 43, column: 29, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11406, file: !11237, line: 43, column: 15)
!11409 = !DILocation(line: 43, column: 28, scope: !11408)
!11410 = !DILocation(line: 43, column: 27, scope: !11408)
!11411 = !DILocation(line: 43, column: 16, scope: !11408)
!11412 = !DILocation(line: 43, column: 34, scope: !11408)
!11413 = !DILocation(line: 43, column: 46, scope: !11408)
!11414 = !DILocation(line: 43, column: 45, scope: !11408)
!11415 = !DILocation(line: 43, column: 44, scope: !11408)
!11416 = !DILocation(line: 43, column: 41, scope: !11408)
!11417 = !DILocation(line: 43, column: 15, scope: !11406)
!11418 = !DILocation(line: 44, column: 19, scope: !11408)
!11419 = !DILocation(line: 44, column: 13, scope: !11408)
!11420 = !DILocation(line: 45, column: 9, scope: !11406)
!11421 = !DILocation(line: 46, column: 25, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11402, file: !11237, line: 46, column: 16)
!11423 = !DILocation(line: 46, column: 24, scope: !11422)
!11424 = !DILocation(line: 46, column: 23, scope: !11422)
!11425 = !DILocation(line: 46, column: 20, scope: !11422)
!11426 = !DILocation(line: 46, column: 16, scope: !11402)
!11427 = !DILocation(line: 48, column: 22, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11422, file: !11237, line: 47, column: 9)
!11429 = !DILocation(line: 49, column: 16, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11428, file: !11237, line: 49, column: 15)
!11431 = !DILocation(line: 49, column: 15, scope: !11428)
!11432 = !DILocation(line: 50, column: 22, scope: !11430)
!11433 = !DILocation(line: 50, column: 21, scope: !11430)
!11434 = !DILocation(line: 50, column: 19, scope: !11430)
!11435 = !DILocation(line: 50, column: 13, scope: !11430)
!11436 = !DILocation(line: 51, column: 9, scope: !11428)
!11437 = !DILocation(line: 52, column: 30, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11422, file: !11237, line: 52, column: 16)
!11439 = !DILocation(line: 52, column: 29, scope: !11438)
!11440 = !DILocation(line: 52, column: 28, scope: !11438)
!11441 = !DILocation(line: 52, column: 17, scope: !11438)
!11442 = !DILocation(line: 52, column: 35, scope: !11438)
!11443 = !DILocation(line: 52, column: 47, scope: !11438)
!11444 = !DILocation(line: 52, column: 46, scope: !11438)
!11445 = !DILocation(line: 52, column: 45, scope: !11438)
!11446 = !DILocation(line: 52, column: 42, scope: !11438)
!11447 = !DILocation(line: 52, column: 16, scope: !11422)
!11448 = !DILocation(line: 53, column: 15, scope: !11438)
!11449 = !DILocation(line: 53, column: 9, scope: !11438)
!11450 = !DILocation(line: 54, column: 9, scope: !11403)
!11451 = !DILocation(line: 54, column: 13, scope: !11403)
!11452 = distinct !{!11452, !11397, !11453}
!11453 = !DILocation(line: 55, column: 5, scope: !11390)
!11454 = !DILocation(line: 56, column: 10, scope: !11390)
!11455 = !DILocation(line: 56, column: 3, scope: !11390)
!11456 = distinct !DISubprogram(name: "verrevcmp", scope: !11237, file: !11237, line: 84, type: !1824, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11457 = !DILocalVariable(name: "s1", arg: 1, scope: !11456, file: !11237, line: 84, type: !146)
!11458 = !DILocation(line: 84, column: 24, scope: !11456)
!11459 = !DILocalVariable(name: "s1_len", arg: 2, scope: !11456, file: !11237, line: 84, type: !149)
!11460 = !DILocation(line: 84, column: 35, scope: !11456)
!11461 = !DILocalVariable(name: "s2", arg: 3, scope: !11456, file: !11237, line: 84, type: !146)
!11462 = !DILocation(line: 84, column: 55, scope: !11456)
!11463 = !DILocalVariable(name: "s2_len", arg: 4, scope: !11456, file: !11237, line: 84, type: !149)
!11464 = !DILocation(line: 84, column: 66, scope: !11456)
!11465 = !DILocalVariable(name: "s1_pos", scope: !11456, file: !11237, line: 86, type: !149)
!11466 = !DILocation(line: 86, column: 10, scope: !11456)
!11467 = !DILocalVariable(name: "s2_pos", scope: !11456, file: !11237, line: 87, type: !149)
!11468 = !DILocation(line: 87, column: 10, scope: !11456)
!11469 = !DILocation(line: 88, column: 3, scope: !11456)
!11470 = !DILocation(line: 88, column: 10, scope: !11456)
!11471 = !DILocation(line: 88, column: 19, scope: !11456)
!11472 = !DILocation(line: 88, column: 17, scope: !11456)
!11473 = !DILocation(line: 88, column: 26, scope: !11456)
!11474 = !DILocation(line: 88, column: 29, scope: !11456)
!11475 = !DILocation(line: 88, column: 38, scope: !11456)
!11476 = !DILocation(line: 88, column: 36, scope: !11456)
!11477 = !DILocalVariable(name: "first_diff", scope: !11478, file: !11237, line: 90, type: !27)
!11478 = distinct !DILexicalBlock(scope: !11456, file: !11237, line: 89, column: 5)
!11479 = !DILocation(line: 90, column: 11, scope: !11478)
!11480 = !DILocation(line: 91, column: 7, scope: !11478)
!11481 = !DILocation(line: 91, column: 15, scope: !11478)
!11482 = !DILocation(line: 91, column: 24, scope: !11478)
!11483 = !DILocation(line: 91, column: 22, scope: !11478)
!11484 = !DILocation(line: 91, column: 31, scope: !11478)
!11485 = !DILocation(line: 91, column: 46, scope: !11478)
!11486 = !DILocation(line: 91, column: 49, scope: !11478)
!11487 = !DILocation(line: 91, column: 35, scope: !11478)
!11488 = !DILocation(line: 92, column: 14, scope: !11478)
!11489 = !DILocation(line: 92, column: 18, scope: !11478)
!11490 = !DILocation(line: 92, column: 27, scope: !11478)
!11491 = !DILocation(line: 92, column: 25, scope: !11478)
!11492 = !DILocation(line: 92, column: 34, scope: !11478)
!11493 = !DILocation(line: 92, column: 49, scope: !11478)
!11494 = !DILocation(line: 92, column: 52, scope: !11478)
!11495 = !DILocation(line: 92, column: 38, scope: !11478)
!11496 = !DILocation(line: 92, column: 37, scope: !11478)
!11497 = !DILocation(line: 0, scope: !11478)
!11498 = !DILocalVariable(name: "s1_c", scope: !11499, file: !11237, line: 94, type: !27)
!11499 = distinct !DILexicalBlock(scope: !11478, file: !11237, line: 93, column: 9)
!11500 = !DILocation(line: 94, column: 15, scope: !11499)
!11501 = !DILocation(line: 94, column: 23, scope: !11499)
!11502 = !DILocation(line: 94, column: 33, scope: !11499)
!11503 = !DILocation(line: 94, column: 30, scope: !11499)
!11504 = !DILocation(line: 94, column: 22, scope: !11499)
!11505 = !DILocation(line: 94, column: 54, scope: !11499)
!11506 = !DILocation(line: 94, column: 57, scope: !11499)
!11507 = !DILocation(line: 94, column: 47, scope: !11499)
!11508 = !DILocalVariable(name: "s2_c", scope: !11499, file: !11237, line: 95, type: !27)
!11509 = !DILocation(line: 95, column: 15, scope: !11499)
!11510 = !DILocation(line: 95, column: 23, scope: !11499)
!11511 = !DILocation(line: 95, column: 33, scope: !11499)
!11512 = !DILocation(line: 95, column: 30, scope: !11499)
!11513 = !DILocation(line: 95, column: 22, scope: !11499)
!11514 = !DILocation(line: 95, column: 54, scope: !11499)
!11515 = !DILocation(line: 95, column: 57, scope: !11499)
!11516 = !DILocation(line: 95, column: 47, scope: !11499)
!11517 = !DILocation(line: 96, column: 15, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11499, file: !11237, line: 96, column: 15)
!11519 = !DILocation(line: 96, column: 23, scope: !11518)
!11520 = !DILocation(line: 96, column: 20, scope: !11518)
!11521 = !DILocation(line: 96, column: 15, scope: !11499)
!11522 = !DILocation(line: 97, column: 20, scope: !11518)
!11523 = !DILocation(line: 97, column: 27, scope: !11518)
!11524 = !DILocation(line: 97, column: 25, scope: !11518)
!11525 = !DILocation(line: 97, column: 13, scope: !11518)
!11526 = !DILocation(line: 98, column: 17, scope: !11499)
!11527 = !DILocation(line: 99, column: 17, scope: !11499)
!11528 = distinct !{!11528, !11480, !11529}
!11529 = !DILocation(line: 100, column: 9, scope: !11478)
!11530 = !DILocation(line: 101, column: 7, scope: !11478)
!11531 = !DILocation(line: 101, column: 14, scope: !11478)
!11532 = !DILocation(line: 101, column: 17, scope: !11478)
!11533 = !DILocation(line: 101, column: 25, scope: !11478)
!11534 = !DILocation(line: 102, column: 15, scope: !11478)
!11535 = distinct !{!11535, !11530, !11534}
!11536 = !DILocation(line: 103, column: 7, scope: !11478)
!11537 = !DILocation(line: 103, column: 14, scope: !11478)
!11538 = !DILocation(line: 103, column: 17, scope: !11478)
!11539 = !DILocation(line: 103, column: 25, scope: !11478)
!11540 = !DILocation(line: 104, column: 15, scope: !11478)
!11541 = distinct !{!11541, !11536, !11540}
!11542 = !DILocation(line: 105, column: 7, scope: !11478)
!11543 = !DILocation(line: 105, column: 25, scope: !11478)
!11544 = !DILocation(line: 105, column: 28, scope: !11478)
!11545 = !DILocation(line: 105, column: 14, scope: !11478)
!11546 = !DILocation(line: 105, column: 37, scope: !11478)
!11547 = !DILocation(line: 105, column: 51, scope: !11478)
!11548 = !DILocation(line: 105, column: 54, scope: !11478)
!11549 = !DILocation(line: 105, column: 40, scope: !11478)
!11550 = !DILocation(line: 107, column: 16, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !11237, line: 107, column: 15)
!11552 = distinct !DILexicalBlock(scope: !11478, file: !11237, line: 106, column: 9)
!11553 = !DILocation(line: 107, column: 15, scope: !11552)
!11554 = !DILocation(line: 108, column: 26, scope: !11551)
!11555 = !DILocation(line: 108, column: 29, scope: !11551)
!11556 = !DILocation(line: 108, column: 39, scope: !11551)
!11557 = !DILocation(line: 108, column: 42, scope: !11551)
!11558 = !DILocation(line: 108, column: 37, scope: !11551)
!11559 = !DILocation(line: 108, column: 24, scope: !11551)
!11560 = !DILocation(line: 108, column: 13, scope: !11551)
!11561 = !DILocation(line: 109, column: 17, scope: !11552)
!11562 = !DILocation(line: 110, column: 17, scope: !11552)
!11563 = distinct !{!11563, !11542, !11564}
!11564 = !DILocation(line: 111, column: 9, scope: !11478)
!11565 = !DILocation(line: 112, column: 22, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11478, file: !11237, line: 112, column: 11)
!11567 = !DILocation(line: 112, column: 25, scope: !11566)
!11568 = !DILocation(line: 112, column: 11, scope: !11566)
!11569 = !DILocation(line: 112, column: 11, scope: !11478)
!11570 = !DILocation(line: 113, column: 9, scope: !11566)
!11571 = !DILocation(line: 114, column: 22, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11478, file: !11237, line: 114, column: 11)
!11573 = !DILocation(line: 114, column: 25, scope: !11572)
!11574 = !DILocation(line: 114, column: 11, scope: !11572)
!11575 = !DILocation(line: 114, column: 11, scope: !11478)
!11576 = !DILocation(line: 115, column: 9, scope: !11572)
!11577 = !DILocation(line: 116, column: 11, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11478, file: !11237, line: 116, column: 11)
!11579 = !DILocation(line: 116, column: 11, scope: !11478)
!11580 = !DILocation(line: 117, column: 16, scope: !11578)
!11581 = !DILocation(line: 117, column: 9, scope: !11578)
!11582 = distinct !{!11582, !11469, !11583}
!11583 = !DILocation(line: 118, column: 5, scope: !11456)
!11584 = !DILocation(line: 119, column: 3, scope: !11456)
!11585 = !DILocation(line: 120, column: 1, scope: !11456)
!11586 = distinct !DISubprogram(name: "order", scope: !11237, file: !11237, line: 61, type: !1826, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11587 = !DILocalVariable(name: "c", arg: 1, scope: !11586, file: !11237, line: 61, type: !591)
!11588 = !DILocation(line: 61, column: 22, scope: !11586)
!11589 = !DILocation(line: 63, column: 18, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11586, file: !11237, line: 63, column: 7)
!11591 = !DILocation(line: 63, column: 7, scope: !11590)
!11592 = !DILocation(line: 63, column: 7, scope: !11586)
!11593 = !DILocation(line: 64, column: 5, scope: !11590)
!11594 = !DILocation(line: 65, column: 23, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11590, file: !11237, line: 65, column: 12)
!11596 = !DILocation(line: 65, column: 12, scope: !11595)
!11597 = !DILocation(line: 65, column: 12, scope: !11590)
!11598 = !DILocation(line: 66, column: 12, scope: !11595)
!11599 = !DILocation(line: 66, column: 5, scope: !11595)
!11600 = !DILocation(line: 67, column: 12, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11595, file: !11237, line: 67, column: 12)
!11602 = !DILocation(line: 67, column: 14, scope: !11601)
!11603 = !DILocation(line: 67, column: 12, scope: !11595)
!11604 = !DILocation(line: 68, column: 5, scope: !11601)
!11605 = !DILocation(line: 70, column: 18, scope: !11601)
!11606 = !DILocation(line: 70, column: 12, scope: !11601)
!11607 = !DILocation(line: 70, column: 20, scope: !11601)
!11608 = !DILocation(line: 70, column: 32, scope: !11601)
!11609 = !DILocation(line: 70, column: 5, scope: !11601)
!11610 = !DILocation(line: 71, column: 1, scope: !11586)
!11611 = distinct !DISubprogram(name: "gettime", scope: !11612, file: !11612, line: 29, type: !1831, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1828, retainedNodes: !152)
!11612 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!11613 = !DILocalVariable(name: "ts", arg: 1, scope: !11611, file: !11612, line: 29, type: !1833)
!11614 = !DILocation(line: 29, column: 27, scope: !11611)
!11615 = !DILocation(line: 32, column: 34, scope: !11611)
!11616 = !DILocation(line: 32, column: 3, scope: !11611)
!11617 = !DILocation(line: 39, column: 1, scope: !11611)
!11618 = distinct !DISubprogram(name: "current_timespec", scope: !11612, file: !11612, line: 44, type: !1838, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1828, retainedNodes: !152)
!11619 = !DILocalVariable(name: "ts", scope: !11618, file: !11612, line: 46, type: !1834)
!11620 = !DILocation(line: 46, column: 19, scope: !11618)
!11621 = !DILocation(line: 47, column: 3, scope: !11618)
!11622 = !DILocation(line: 48, column: 3, scope: !11618)
!11623 = distinct !DISubprogram(name: "hard_locale", scope: !11624, file: !11624, line: 38, type: !680, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !152)
!11624 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!11625 = !DILocalVariable(name: "category", arg: 1, scope: !11623, file: !11624, line: 38, type: !27)
!11626 = !DILocation(line: 38, column: 18, scope: !11623)
!11627 = !DILocalVariable(name: "hard", scope: !11623, file: !11624, line: 40, type: !141)
!11628 = !DILocation(line: 40, column: 8, scope: !11623)
!11629 = !DILocalVariable(name: "p", scope: !11623, file: !11624, line: 41, type: !146)
!11630 = !DILocation(line: 41, column: 15, scope: !11623)
!11631 = !DILocation(line: 41, column: 30, scope: !11623)
!11632 = !DILocation(line: 41, column: 19, scope: !11623)
!11633 = !DILocation(line: 43, column: 7, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11623, file: !11624, line: 43, column: 7)
!11635 = !DILocation(line: 43, column: 7, scope: !11623)
!11636 = !DILocation(line: 47, column: 23, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !11624, line: 47, column: 15)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !11624, line: 46, column: 9)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11624, line: 45, column: 11)
!11640 = distinct !DILexicalBlock(scope: !11634, file: !11624, line: 44, column: 5)
!11641 = !DILocation(line: 47, column: 15, scope: !11637)
!11642 = !DILocation(line: 47, column: 31, scope: !11637)
!11643 = !DILocation(line: 47, column: 36, scope: !11637)
!11644 = !DILocation(line: 47, column: 47, scope: !11637)
!11645 = !DILocation(line: 47, column: 39, scope: !11637)
!11646 = !DILocation(line: 47, column: 59, scope: !11637)
!11647 = !DILocation(line: 47, column: 15, scope: !11638)
!11648 = !DILocation(line: 48, column: 18, scope: !11637)
!11649 = !DILocation(line: 48, column: 13, scope: !11637)
!11650 = !DILocation(line: 69, column: 5, scope: !11640)
!11651 = !DILocation(line: 71, column: 10, scope: !11623)
!11652 = !DILocation(line: 71, column: 3, scope: !11623)
!11653 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1159, file: !1159, line: 150, type: !1153, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11654 = !DILocalVariable(name: "table", arg: 1, scope: !11653, file: !1159, line: 150, type: !1155)
!11655 = !DILocation(line: 150, column: 39, scope: !11653)
!11656 = !DILocation(line: 152, column: 10, scope: !11653)
!11657 = !DILocation(line: 152, column: 17, scope: !11653)
!11658 = !{!11659, !2467, i64 16}
!11659 = !{!"hash_table", !2443, i64 0, !2443, i64 8, !2467, i64 16, !2467, i64 24, !2467, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72}
!11660 = !DILocation(line: 152, column: 3, scope: !11653)
!11661 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1159, file: !1159, line: 158, type: !1153, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11662 = !DILocalVariable(name: "table", arg: 1, scope: !11661, file: !1159, line: 158, type: !1155)
!11663 = !DILocation(line: 158, column: 44, scope: !11661)
!11664 = !DILocation(line: 160, column: 10, scope: !11661)
!11665 = !DILocation(line: 160, column: 17, scope: !11661)
!11666 = !{!11659, !2467, i64 24}
!11667 = !DILocation(line: 160, column: 3, scope: !11661)
!11668 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1159, file: !1159, line: 166, type: !1153, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11669 = !DILocalVariable(name: "table", arg: 1, scope: !11668, file: !1159, line: 166, type: !1155)
!11670 = !DILocation(line: 166, column: 39, scope: !11668)
!11671 = !DILocation(line: 168, column: 10, scope: !11668)
!11672 = !DILocation(line: 168, column: 17, scope: !11668)
!11673 = !{!11659, !2467, i64 32}
!11674 = !DILocation(line: 168, column: 3, scope: !11668)
!11675 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1159, file: !1159, line: 174, type: !1153, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11676 = !DILocalVariable(name: "table", arg: 1, scope: !11675, file: !1159, line: 174, type: !1155)
!11677 = !DILocation(line: 174, column: 47, scope: !11675)
!11678 = !DILocalVariable(name: "bucket", scope: !11675, file: !1159, line: 176, type: !1168)
!11679 = !DILocation(line: 176, column: 28, scope: !11675)
!11680 = !DILocalVariable(name: "max_bucket_length", scope: !11675, file: !1159, line: 177, type: !149)
!11681 = !DILocation(line: 177, column: 10, scope: !11675)
!11682 = !DILocation(line: 179, column: 17, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11675, file: !1159, line: 179, column: 3)
!11684 = !DILocation(line: 179, column: 24, scope: !11683)
!11685 = !{!11659, !2443, i64 0}
!11686 = !DILocation(line: 179, column: 15, scope: !11683)
!11687 = !DILocation(line: 179, column: 8, scope: !11683)
!11688 = !DILocation(line: 179, column: 32, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11683, file: !1159, line: 179, column: 3)
!11690 = !DILocation(line: 179, column: 41, scope: !11689)
!11691 = !DILocation(line: 179, column: 48, scope: !11689)
!11692 = !{!11659, !2443, i64 8}
!11693 = !DILocation(line: 179, column: 39, scope: !11689)
!11694 = !DILocation(line: 179, column: 3, scope: !11683)
!11695 = !DILocation(line: 181, column: 11, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !1159, line: 181, column: 11)
!11697 = distinct !DILexicalBlock(scope: !11689, file: !1159, line: 180, column: 5)
!11698 = !DILocation(line: 181, column: 19, scope: !11696)
!11699 = !{!11700, !2443, i64 0}
!11700 = !{!"hash_entry", !2443, i64 0, !2443, i64 8}
!11701 = !DILocation(line: 181, column: 11, scope: !11697)
!11702 = !DILocalVariable(name: "cursor", scope: !11703, file: !1159, line: 183, type: !1168)
!11703 = distinct !DILexicalBlock(scope: !11696, file: !1159, line: 182, column: 9)
!11704 = !DILocation(line: 183, column: 36, scope: !11703)
!11705 = !DILocation(line: 183, column: 45, scope: !11703)
!11706 = !DILocalVariable(name: "bucket_length", scope: !11703, file: !1159, line: 184, type: !149)
!11707 = !DILocation(line: 184, column: 18, scope: !11703)
!11708 = !DILocation(line: 186, column: 11, scope: !11703)
!11709 = !DILocation(line: 186, column: 27, scope: !11703)
!11710 = !DILocation(line: 186, column: 35, scope: !11703)
!11711 = !{!11700, !2443, i64 8}
!11712 = !DILocation(line: 186, column: 25, scope: !11703)
!11713 = !DILocation(line: 186, column: 41, scope: !11703)
!11714 = !DILocation(line: 187, column: 26, scope: !11703)
!11715 = distinct !{!11715, !11708, !11714}
!11716 = !DILocation(line: 189, column: 15, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11703, file: !1159, line: 189, column: 15)
!11718 = !DILocation(line: 189, column: 31, scope: !11717)
!11719 = !DILocation(line: 189, column: 29, scope: !11717)
!11720 = !DILocation(line: 189, column: 15, scope: !11703)
!11721 = !DILocation(line: 190, column: 33, scope: !11717)
!11722 = !DILocation(line: 190, column: 31, scope: !11717)
!11723 = !DILocation(line: 190, column: 13, scope: !11717)
!11724 = !DILocation(line: 191, column: 9, scope: !11703)
!11725 = !DILocation(line: 192, column: 5, scope: !11697)
!11726 = !DILocation(line: 179, column: 68, scope: !11689)
!11727 = !DILocation(line: 179, column: 3, scope: !11689)
!11728 = distinct !{!11728, !11694, !11729}
!11729 = !DILocation(line: 192, column: 5, scope: !11683)
!11730 = !DILocation(line: 194, column: 10, scope: !11675)
!11731 = !DILocation(line: 194, column: 3, scope: !11675)
!11732 = distinct !DISubprogram(name: "hash_table_ok", scope: !1159, file: !1159, line: 201, type: !1194, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11733 = !DILocalVariable(name: "table", arg: 1, scope: !11732, file: !1159, line: 201, type: !1155)
!11734 = !DILocation(line: 201, column: 34, scope: !11732)
!11735 = !DILocalVariable(name: "bucket", scope: !11732, file: !1159, line: 203, type: !1168)
!11736 = !DILocation(line: 203, column: 28, scope: !11732)
!11737 = !DILocalVariable(name: "n_buckets_used", scope: !11732, file: !1159, line: 204, type: !149)
!11738 = !DILocation(line: 204, column: 10, scope: !11732)
!11739 = !DILocalVariable(name: "n_entries", scope: !11732, file: !1159, line: 205, type: !149)
!11740 = !DILocation(line: 205, column: 10, scope: !11732)
!11741 = !DILocation(line: 207, column: 17, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11732, file: !1159, line: 207, column: 3)
!11743 = !DILocation(line: 207, column: 24, scope: !11742)
!11744 = !DILocation(line: 207, column: 15, scope: !11742)
!11745 = !DILocation(line: 207, column: 8, scope: !11742)
!11746 = !DILocation(line: 207, column: 32, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11742, file: !1159, line: 207, column: 3)
!11748 = !DILocation(line: 207, column: 41, scope: !11747)
!11749 = !DILocation(line: 207, column: 48, scope: !11747)
!11750 = !DILocation(line: 207, column: 39, scope: !11747)
!11751 = !DILocation(line: 207, column: 3, scope: !11742)
!11752 = !DILocation(line: 209, column: 11, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !1159, line: 209, column: 11)
!11754 = distinct !DILexicalBlock(scope: !11747, file: !1159, line: 208, column: 5)
!11755 = !DILocation(line: 209, column: 19, scope: !11753)
!11756 = !DILocation(line: 209, column: 11, scope: !11754)
!11757 = !DILocalVariable(name: "cursor", scope: !11758, file: !1159, line: 211, type: !1168)
!11758 = distinct !DILexicalBlock(scope: !11753, file: !1159, line: 210, column: 9)
!11759 = !DILocation(line: 211, column: 36, scope: !11758)
!11760 = !DILocation(line: 211, column: 45, scope: !11758)
!11761 = !DILocation(line: 214, column: 25, scope: !11758)
!11762 = !DILocation(line: 215, column: 20, scope: !11758)
!11763 = !DILocation(line: 218, column: 11, scope: !11758)
!11764 = !DILocation(line: 218, column: 27, scope: !11758)
!11765 = !DILocation(line: 218, column: 35, scope: !11758)
!11766 = !DILocation(line: 218, column: 25, scope: !11758)
!11767 = !DILocation(line: 218, column: 41, scope: !11758)
!11768 = !DILocation(line: 219, column: 22, scope: !11758)
!11769 = distinct !{!11769, !11763, !11768}
!11770 = !DILocation(line: 220, column: 9, scope: !11758)
!11771 = !DILocation(line: 221, column: 5, scope: !11754)
!11772 = !DILocation(line: 207, column: 68, scope: !11747)
!11773 = !DILocation(line: 207, column: 3, scope: !11747)
!11774 = distinct !{!11774, !11751, !11775}
!11775 = !DILocation(line: 221, column: 5, scope: !11742)
!11776 = !DILocation(line: 223, column: 7, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11732, file: !1159, line: 223, column: 7)
!11778 = !DILocation(line: 223, column: 25, scope: !11777)
!11779 = !DILocation(line: 223, column: 32, scope: !11777)
!11780 = !DILocation(line: 223, column: 22, scope: !11777)
!11781 = !DILocation(line: 223, column: 47, scope: !11777)
!11782 = !DILocation(line: 223, column: 50, scope: !11777)
!11783 = !DILocation(line: 223, column: 63, scope: !11777)
!11784 = !DILocation(line: 223, column: 70, scope: !11777)
!11785 = !DILocation(line: 223, column: 60, scope: !11777)
!11786 = !DILocation(line: 223, column: 7, scope: !11732)
!11787 = !DILocation(line: 224, column: 5, scope: !11777)
!11788 = !DILocation(line: 226, column: 3, scope: !11732)
!11789 = !DILocation(line: 227, column: 1, scope: !11732)
!11790 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1159, file: !1159, line: 230, type: !1196, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11791 = !DILocalVariable(name: "table", arg: 1, scope: !11790, file: !1159, line: 230, type: !1155)
!11792 = !DILocation(line: 230, column: 42, scope: !11790)
!11793 = !DILocalVariable(name: "stream", arg: 2, scope: !11790, file: !1159, line: 230, type: !1198)
!11794 = !DILocation(line: 230, column: 55, scope: !11790)
!11795 = !DILocalVariable(name: "n_entries", scope: !11790, file: !1159, line: 232, type: !149)
!11796 = !DILocation(line: 232, column: 10, scope: !11790)
!11797 = !DILocation(line: 232, column: 42, scope: !11790)
!11798 = !DILocation(line: 232, column: 22, scope: !11790)
!11799 = !DILocalVariable(name: "n_buckets", scope: !11790, file: !1159, line: 233, type: !149)
!11800 = !DILocation(line: 233, column: 10, scope: !11790)
!11801 = !DILocation(line: 233, column: 42, scope: !11790)
!11802 = !DILocation(line: 233, column: 22, scope: !11790)
!11803 = !DILocalVariable(name: "n_buckets_used", scope: !11790, file: !1159, line: 234, type: !149)
!11804 = !DILocation(line: 234, column: 10, scope: !11790)
!11805 = !DILocation(line: 234, column: 52, scope: !11790)
!11806 = !DILocation(line: 234, column: 27, scope: !11790)
!11807 = !DILocalVariable(name: "max_bucket_length", scope: !11790, file: !1159, line: 235, type: !149)
!11808 = !DILocation(line: 235, column: 10, scope: !11790)
!11809 = !DILocation(line: 235, column: 58, scope: !11790)
!11810 = !DILocation(line: 235, column: 30, scope: !11790)
!11811 = !DILocation(line: 237, column: 12, scope: !11790)
!11812 = !DILocation(line: 237, column: 68, scope: !11790)
!11813 = !DILocation(line: 237, column: 3, scope: !11790)
!11814 = !DILocation(line: 238, column: 12, scope: !11790)
!11815 = !DILocation(line: 238, column: 68, scope: !11790)
!11816 = !DILocation(line: 238, column: 3, scope: !11790)
!11817 = !DILocation(line: 239, column: 12, scope: !11790)
!11818 = !DILocation(line: 240, column: 32, scope: !11790)
!11819 = !DILocation(line: 241, column: 21, scope: !11790)
!11820 = !DILocation(line: 241, column: 19, scope: !11790)
!11821 = !DILocation(line: 241, column: 39, scope: !11790)
!11822 = !DILocation(line: 241, column: 37, scope: !11790)
!11823 = !DILocation(line: 239, column: 3, scope: !11790)
!11824 = !DILocation(line: 242, column: 12, scope: !11790)
!11825 = !DILocation(line: 243, column: 32, scope: !11790)
!11826 = !DILocation(line: 242, column: 3, scope: !11790)
!11827 = !DILocation(line: 244, column: 1, scope: !11790)
!11828 = distinct !DISubprogram(name: "hash_lookup", scope: !1159, file: !1159, line: 261, type: !1232, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11829 = !DILocalVariable(name: "table", arg: 1, scope: !11828, file: !1159, line: 261, type: !1155)
!11830 = !DILocation(line: 261, column: 32, scope: !11828)
!11831 = !DILocalVariable(name: "entry", arg: 2, scope: !11828, file: !1159, line: 261, type: !176)
!11832 = !DILocation(line: 261, column: 51, scope: !11828)
!11833 = !DILocalVariable(name: "bucket", scope: !11828, file: !1159, line: 263, type: !1168)
!11834 = !DILocation(line: 263, column: 28, scope: !11828)
!11835 = !DILocation(line: 263, column: 50, scope: !11828)
!11836 = !DILocation(line: 263, column: 57, scope: !11828)
!11837 = !DILocation(line: 263, column: 37, scope: !11828)
!11838 = !DILocalVariable(name: "cursor", scope: !11828, file: !1159, line: 264, type: !1168)
!11839 = !DILocation(line: 264, column: 28, scope: !11828)
!11840 = !DILocation(line: 266, column: 7, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11828, file: !1159, line: 266, column: 7)
!11842 = !DILocation(line: 266, column: 15, scope: !11841)
!11843 = !DILocation(line: 266, column: 20, scope: !11841)
!11844 = !DILocation(line: 266, column: 7, scope: !11828)
!11845 = !DILocation(line: 267, column: 5, scope: !11841)
!11846 = !DILocation(line: 269, column: 17, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11828, file: !1159, line: 269, column: 3)
!11848 = !DILocation(line: 269, column: 15, scope: !11847)
!11849 = !DILocation(line: 269, column: 8, scope: !11847)
!11850 = !DILocation(line: 269, column: 25, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !1159, line: 269, column: 3)
!11852 = !DILocation(line: 269, column: 3, scope: !11847)
!11853 = !DILocation(line: 270, column: 9, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11851, file: !1159, line: 270, column: 9)
!11855 = !DILocation(line: 270, column: 18, scope: !11854)
!11856 = !DILocation(line: 270, column: 26, scope: !11854)
!11857 = !DILocation(line: 270, column: 15, scope: !11854)
!11858 = !DILocation(line: 270, column: 31, scope: !11854)
!11859 = !DILocation(line: 270, column: 34, scope: !11854)
!11860 = !DILocation(line: 270, column: 41, scope: !11854)
!11861 = !{!11659, !2443, i64 56}
!11862 = !DILocation(line: 270, column: 53, scope: !11854)
!11863 = !DILocation(line: 270, column: 60, scope: !11854)
!11864 = !DILocation(line: 270, column: 68, scope: !11854)
!11865 = !DILocation(line: 270, column: 9, scope: !11851)
!11866 = !DILocation(line: 271, column: 14, scope: !11854)
!11867 = !DILocation(line: 271, column: 22, scope: !11854)
!11868 = !DILocation(line: 271, column: 7, scope: !11854)
!11869 = !DILocation(line: 270, column: 72, scope: !11854)
!11870 = !DILocation(line: 269, column: 42, scope: !11851)
!11871 = !DILocation(line: 269, column: 50, scope: !11851)
!11872 = !DILocation(line: 269, column: 40, scope: !11851)
!11873 = !DILocation(line: 269, column: 3, scope: !11851)
!11874 = distinct !{!11874, !11852, !11875}
!11875 = !DILocation(line: 271, column: 22, scope: !11847)
!11876 = !DILocation(line: 273, column: 3, scope: !11828)
!11877 = !DILocation(line: 274, column: 1, scope: !11828)
!11878 = distinct !DISubprogram(name: "safe_hasher", scope: !1159, file: !1159, line: 249, type: !1260, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11879 = !DILocalVariable(name: "table", arg: 1, scope: !11878, file: !1159, line: 249, type: !1155)
!11880 = !DILocation(line: 249, column: 32, scope: !11878)
!11881 = !DILocalVariable(name: "key", arg: 2, scope: !11878, file: !1159, line: 249, type: !176)
!11882 = !DILocation(line: 249, column: 51, scope: !11878)
!11883 = !DILocalVariable(name: "n", scope: !11878, file: !1159, line: 251, type: !149)
!11884 = !DILocation(line: 251, column: 10, scope: !11878)
!11885 = !DILocation(line: 251, column: 14, scope: !11878)
!11886 = !DILocation(line: 251, column: 21, scope: !11878)
!11887 = !{!11659, !2443, i64 48}
!11888 = !DILocation(line: 251, column: 29, scope: !11878)
!11889 = !DILocation(line: 251, column: 34, scope: !11878)
!11890 = !DILocation(line: 251, column: 41, scope: !11878)
!11891 = !DILocation(line: 252, column: 10, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11878, file: !1159, line: 252, column: 7)
!11893 = !DILocation(line: 252, column: 14, scope: !11892)
!11894 = !DILocation(line: 252, column: 21, scope: !11892)
!11895 = !DILocation(line: 252, column: 12, scope: !11892)
!11896 = !DILocation(line: 252, column: 7, scope: !11878)
!11897 = !DILocation(line: 253, column: 5, scope: !11892)
!11898 = !DILocation(line: 254, column: 10, scope: !11878)
!11899 = !DILocation(line: 254, column: 17, scope: !11878)
!11900 = !DILocation(line: 254, column: 26, scope: !11878)
!11901 = !DILocation(line: 254, column: 24, scope: !11878)
!11902 = !DILocation(line: 254, column: 3, scope: !11878)
!11903 = distinct !DISubprogram(name: "hash_get_first", scope: !1159, file: !1159, line: 288, type: !1234, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11904 = !DILocalVariable(name: "table", arg: 1, scope: !11903, file: !1159, line: 288, type: !1155)
!11905 = !DILocation(line: 288, column: 35, scope: !11903)
!11906 = !DILocalVariable(name: "bucket", scope: !11903, file: !1159, line: 290, type: !1168)
!11907 = !DILocation(line: 290, column: 28, scope: !11903)
!11908 = !DILocation(line: 292, column: 7, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11903, file: !1159, line: 292, column: 7)
!11910 = !DILocation(line: 292, column: 14, scope: !11909)
!11911 = !DILocation(line: 292, column: 24, scope: !11909)
!11912 = !DILocation(line: 292, column: 7, scope: !11903)
!11913 = !DILocation(line: 293, column: 5, scope: !11909)
!11914 = !DILocation(line: 295, column: 17, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11903, file: !1159, line: 295, column: 3)
!11916 = !DILocation(line: 295, column: 24, scope: !11915)
!11917 = !DILocation(line: 295, column: 15, scope: !11915)
!11918 = !DILocation(line: 295, column: 8, scope: !11915)
!11919 = !DILocation(line: 296, column: 12, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !1159, line: 296, column: 9)
!11921 = distinct !DILexicalBlock(scope: !11915, file: !1159, line: 295, column: 3)
!11922 = !DILocation(line: 296, column: 21, scope: !11920)
!11923 = !DILocation(line: 296, column: 28, scope: !11920)
!11924 = !DILocation(line: 296, column: 19, scope: !11920)
!11925 = !DILocation(line: 296, column: 9, scope: !11921)
!11926 = !DILocation(line: 297, column: 7, scope: !11920)
!11927 = !DILocation(line: 298, column: 14, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11920, file: !1159, line: 298, column: 14)
!11929 = !DILocation(line: 298, column: 22, scope: !11928)
!11930 = !DILocation(line: 298, column: 14, scope: !11920)
!11931 = !DILocation(line: 299, column: 14, scope: !11928)
!11932 = !DILocation(line: 299, column: 22, scope: !11928)
!11933 = !DILocation(line: 299, column: 7, scope: !11928)
!11934 = !DILocation(line: 296, column: 40, scope: !11920)
!11935 = !DILocation(line: 295, column: 40, scope: !11921)
!11936 = !DILocation(line: 295, column: 3, scope: !11921)
!11937 = distinct !{!11937, !11938, !11939}
!11938 = !DILocation(line: 295, column: 3, scope: !11915)
!11939 = !DILocation(line: 299, column: 22, scope: !11915)
!11940 = !DILocation(line: 300, column: 1, scope: !11903)
!11941 = distinct !DISubprogram(name: "hash_get_next", scope: !1159, file: !1159, line: 307, type: !1232, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11942 = !DILocalVariable(name: "table", arg: 1, scope: !11941, file: !1159, line: 307, type: !1155)
!11943 = !DILocation(line: 307, column: 34, scope: !11941)
!11944 = !DILocalVariable(name: "entry", arg: 2, scope: !11941, file: !1159, line: 307, type: !176)
!11945 = !DILocation(line: 307, column: 53, scope: !11941)
!11946 = !DILocalVariable(name: "bucket", scope: !11941, file: !1159, line: 309, type: !1168)
!11947 = !DILocation(line: 309, column: 28, scope: !11941)
!11948 = !DILocation(line: 309, column: 50, scope: !11941)
!11949 = !DILocation(line: 309, column: 57, scope: !11941)
!11950 = !DILocation(line: 309, column: 37, scope: !11941)
!11951 = !DILocalVariable(name: "cursor", scope: !11941, file: !1159, line: 310, type: !1168)
!11952 = !DILocation(line: 310, column: 28, scope: !11941)
!11953 = !DILocation(line: 313, column: 12, scope: !11941)
!11954 = !DILocation(line: 313, column: 10, scope: !11941)
!11955 = !DILocation(line: 314, column: 3, scope: !11941)
!11956 = !DILocation(line: 316, column: 11, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !1159, line: 316, column: 11)
!11958 = distinct !DILexicalBlock(scope: !11941, file: !1159, line: 315, column: 5)
!11959 = !DILocation(line: 316, column: 19, scope: !11957)
!11960 = !DILocation(line: 316, column: 27, scope: !11957)
!11961 = !DILocation(line: 316, column: 24, scope: !11957)
!11962 = !DILocation(line: 316, column: 33, scope: !11957)
!11963 = !DILocation(line: 316, column: 36, scope: !11957)
!11964 = !DILocation(line: 316, column: 44, scope: !11957)
!11965 = !DILocation(line: 316, column: 11, scope: !11958)
!11966 = !DILocation(line: 317, column: 16, scope: !11957)
!11967 = !DILocation(line: 317, column: 24, scope: !11957)
!11968 = !DILocation(line: 317, column: 30, scope: !11957)
!11969 = !DILocation(line: 317, column: 9, scope: !11957)
!11970 = !DILocation(line: 318, column: 16, scope: !11958)
!11971 = !DILocation(line: 318, column: 24, scope: !11958)
!11972 = !DILocation(line: 318, column: 14, scope: !11958)
!11973 = !DILocation(line: 319, column: 5, scope: !11958)
!11974 = !DILocation(line: 320, column: 10, scope: !11941)
!11975 = !DILocation(line: 320, column: 17, scope: !11941)
!11976 = distinct !{!11976, !11955, !11977}
!11977 = !DILocation(line: 320, column: 24, scope: !11941)
!11978 = !DILocation(line: 323, column: 3, scope: !11941)
!11979 = !DILocation(line: 323, column: 10, scope: !11941)
!11980 = !DILocation(line: 323, column: 21, scope: !11941)
!11981 = !DILocation(line: 323, column: 28, scope: !11941)
!11982 = !DILocation(line: 323, column: 19, scope: !11941)
!11983 = !DILocation(line: 324, column: 9, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11941, file: !1159, line: 324, column: 9)
!11985 = !DILocation(line: 324, column: 17, scope: !11984)
!11986 = !DILocation(line: 324, column: 9, scope: !11941)
!11987 = !DILocation(line: 325, column: 14, scope: !11984)
!11988 = !DILocation(line: 325, column: 22, scope: !11984)
!11989 = !DILocation(line: 325, column: 7, scope: !11984)
!11990 = distinct !{!11990, !11978, !11991}
!11991 = !DILocation(line: 325, column: 22, scope: !11941)
!11992 = !DILocation(line: 328, column: 3, scope: !11941)
!11993 = !DILocation(line: 329, column: 1, scope: !11941)
!11994 = distinct !DISubprogram(name: "hash_get_entries", scope: !1159, file: !1159, line: 336, type: !1236, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11995 = !DILocalVariable(name: "table", arg: 1, scope: !11994, file: !1159, line: 336, type: !1155)
!11996 = !DILocation(line: 336, column: 37, scope: !11994)
!11997 = !DILocalVariable(name: "buffer", arg: 2, scope: !11994, file: !1159, line: 336, type: !663)
!11998 = !DILocation(line: 336, column: 51, scope: !11994)
!11999 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11994, file: !1159, line: 337, type: !149)
!12000 = !DILocation(line: 337, column: 26, scope: !11994)
!12001 = !DILocalVariable(name: "counter", scope: !11994, file: !1159, line: 339, type: !149)
!12002 = !DILocation(line: 339, column: 10, scope: !11994)
!12003 = !DILocalVariable(name: "bucket", scope: !11994, file: !1159, line: 340, type: !1168)
!12004 = !DILocation(line: 340, column: 28, scope: !11994)
!12005 = !DILocalVariable(name: "cursor", scope: !11994, file: !1159, line: 341, type: !1168)
!12006 = !DILocation(line: 341, column: 28, scope: !11994)
!12007 = !DILocation(line: 343, column: 17, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11994, file: !1159, line: 343, column: 3)
!12009 = !DILocation(line: 343, column: 24, scope: !12008)
!12010 = !DILocation(line: 343, column: 15, scope: !12008)
!12011 = !DILocation(line: 343, column: 8, scope: !12008)
!12012 = !DILocation(line: 343, column: 32, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12008, file: !1159, line: 343, column: 3)
!12014 = !DILocation(line: 343, column: 41, scope: !12013)
!12015 = !DILocation(line: 343, column: 48, scope: !12013)
!12016 = !DILocation(line: 343, column: 39, scope: !12013)
!12017 = !DILocation(line: 343, column: 3, scope: !12008)
!12018 = !DILocation(line: 345, column: 11, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !1159, line: 345, column: 11)
!12020 = distinct !DILexicalBlock(scope: !12013, file: !1159, line: 344, column: 5)
!12021 = !DILocation(line: 345, column: 19, scope: !12019)
!12022 = !DILocation(line: 345, column: 11, scope: !12020)
!12023 = !DILocation(line: 347, column: 25, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !1159, line: 347, column: 11)
!12025 = distinct !DILexicalBlock(scope: !12019, file: !1159, line: 346, column: 9)
!12026 = !DILocation(line: 347, column: 23, scope: !12024)
!12027 = !DILocation(line: 347, column: 16, scope: !12024)
!12028 = !DILocation(line: 347, column: 33, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12024, file: !1159, line: 347, column: 11)
!12030 = !DILocation(line: 347, column: 11, scope: !12024)
!12031 = !DILocation(line: 349, column: 19, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !1159, line: 349, column: 19)
!12033 = distinct !DILexicalBlock(scope: !12029, file: !1159, line: 348, column: 13)
!12034 = !DILocation(line: 349, column: 30, scope: !12032)
!12035 = !DILocation(line: 349, column: 27, scope: !12032)
!12036 = !DILocation(line: 349, column: 19, scope: !12033)
!12037 = !DILocation(line: 350, column: 24, scope: !12032)
!12038 = !DILocation(line: 350, column: 17, scope: !12032)
!12039 = !DILocation(line: 351, column: 35, scope: !12033)
!12040 = !DILocation(line: 351, column: 43, scope: !12033)
!12041 = !DILocation(line: 351, column: 15, scope: !12033)
!12042 = !DILocation(line: 351, column: 29, scope: !12033)
!12043 = !DILocation(line: 351, column: 33, scope: !12033)
!12044 = !DILocation(line: 352, column: 13, scope: !12033)
!12045 = !DILocation(line: 347, column: 50, scope: !12029)
!12046 = !DILocation(line: 347, column: 58, scope: !12029)
!12047 = !DILocation(line: 347, column: 48, scope: !12029)
!12048 = !DILocation(line: 347, column: 11, scope: !12029)
!12049 = distinct !{!12049, !12030, !12050}
!12050 = !DILocation(line: 352, column: 13, scope: !12024)
!12051 = !DILocation(line: 353, column: 9, scope: !12025)
!12052 = !DILocation(line: 354, column: 5, scope: !12020)
!12053 = !DILocation(line: 343, column: 68, scope: !12013)
!12054 = !DILocation(line: 343, column: 3, scope: !12013)
!12055 = distinct !{!12055, !12017, !12056}
!12056 = !DILocation(line: 354, column: 5, scope: !12008)
!12057 = !DILocation(line: 356, column: 10, scope: !11994)
!12058 = !DILocation(line: 356, column: 3, scope: !11994)
!12059 = !DILocation(line: 357, column: 1, scope: !11994)
!12060 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1159, file: !1159, line: 368, type: !1238, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12061 = !DILocalVariable(name: "table", arg: 1, scope: !12060, file: !1159, line: 368, type: !1155)
!12062 = !DILocation(line: 368, column: 37, scope: !12060)
!12063 = !DILocalVariable(name: "processor", arg: 2, scope: !12060, file: !1159, line: 368, type: !1240)
!12064 = !DILocation(line: 368, column: 59, scope: !12060)
!12065 = !DILocalVariable(name: "processor_data", arg: 3, scope: !12060, file: !1159, line: 369, type: !167)
!12066 = !DILocation(line: 369, column: 25, scope: !12060)
!12067 = !DILocalVariable(name: "counter", scope: !12060, file: !1159, line: 371, type: !149)
!12068 = !DILocation(line: 371, column: 10, scope: !12060)
!12069 = !DILocalVariable(name: "bucket", scope: !12060, file: !1159, line: 372, type: !1168)
!12070 = !DILocation(line: 372, column: 28, scope: !12060)
!12071 = !DILocalVariable(name: "cursor", scope: !12060, file: !1159, line: 373, type: !1168)
!12072 = !DILocation(line: 373, column: 28, scope: !12060)
!12073 = !DILocation(line: 375, column: 17, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12060, file: !1159, line: 375, column: 3)
!12075 = !DILocation(line: 375, column: 24, scope: !12074)
!12076 = !DILocation(line: 375, column: 15, scope: !12074)
!12077 = !DILocation(line: 375, column: 8, scope: !12074)
!12078 = !DILocation(line: 375, column: 32, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12074, file: !1159, line: 375, column: 3)
!12080 = !DILocation(line: 375, column: 41, scope: !12079)
!12081 = !DILocation(line: 375, column: 48, scope: !12079)
!12082 = !DILocation(line: 375, column: 39, scope: !12079)
!12083 = !DILocation(line: 375, column: 3, scope: !12074)
!12084 = !DILocation(line: 377, column: 11, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !1159, line: 377, column: 11)
!12086 = distinct !DILexicalBlock(scope: !12079, file: !1159, line: 376, column: 5)
!12087 = !DILocation(line: 377, column: 19, scope: !12085)
!12088 = !DILocation(line: 377, column: 11, scope: !12086)
!12089 = !DILocation(line: 379, column: 25, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !1159, line: 379, column: 11)
!12091 = distinct !DILexicalBlock(scope: !12085, file: !1159, line: 378, column: 9)
!12092 = !DILocation(line: 379, column: 23, scope: !12090)
!12093 = !DILocation(line: 379, column: 16, scope: !12090)
!12094 = !DILocation(line: 379, column: 33, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12090, file: !1159, line: 379, column: 11)
!12096 = !DILocation(line: 379, column: 11, scope: !12090)
!12097 = !DILocation(line: 381, column: 21, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !1159, line: 381, column: 19)
!12099 = distinct !DILexicalBlock(scope: !12095, file: !1159, line: 380, column: 13)
!12100 = !DILocation(line: 381, column: 32, scope: !12098)
!12101 = !DILocation(line: 381, column: 40, scope: !12098)
!12102 = !DILocation(line: 381, column: 46, scope: !12098)
!12103 = !DILocation(line: 381, column: 19, scope: !12099)
!12104 = !DILocation(line: 382, column: 24, scope: !12098)
!12105 = !DILocation(line: 382, column: 17, scope: !12098)
!12106 = !DILocation(line: 383, column: 22, scope: !12099)
!12107 = !DILocation(line: 384, column: 13, scope: !12099)
!12108 = !DILocation(line: 379, column: 50, scope: !12095)
!12109 = !DILocation(line: 379, column: 58, scope: !12095)
!12110 = !DILocation(line: 379, column: 48, scope: !12095)
!12111 = !DILocation(line: 379, column: 11, scope: !12095)
!12112 = distinct !{!12112, !12096, !12113}
!12113 = !DILocation(line: 384, column: 13, scope: !12090)
!12114 = !DILocation(line: 385, column: 9, scope: !12091)
!12115 = !DILocation(line: 386, column: 5, scope: !12086)
!12116 = !DILocation(line: 375, column: 68, scope: !12079)
!12117 = !DILocation(line: 375, column: 3, scope: !12079)
!12118 = distinct !{!12118, !12083, !12119}
!12119 = !DILocation(line: 386, column: 5, scope: !12074)
!12120 = !DILocation(line: 388, column: 10, scope: !12060)
!12121 = !DILocation(line: 388, column: 3, scope: !12060)
!12122 = !DILocation(line: 389, column: 1, scope: !12060)
!12123 = distinct !DISubprogram(name: "hash_string", scope: !1159, file: !1159, line: 428, type: !1244, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12124 = !DILocalVariable(name: "string", arg: 1, scope: !12123, file: !1159, line: 428, type: !146)
!12125 = !DILocation(line: 428, column: 26, scope: !12123)
!12126 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12123, file: !1159, line: 428, type: !149)
!12127 = !DILocation(line: 428, column: 41, scope: !12123)
!12128 = !DILocalVariable(name: "value", scope: !12123, file: !1159, line: 430, type: !149)
!12129 = !DILocation(line: 430, column: 10, scope: !12123)
!12130 = !DILocalVariable(name: "ch", scope: !12123, file: !1159, line: 431, type: !591)
!12131 = !DILocation(line: 431, column: 17, scope: !12123)
!12132 = !DILocation(line: 433, column: 3, scope: !12123)
!12133 = !DILocation(line: 433, column: 17, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !1159, line: 433, column: 3)
!12135 = distinct !DILexicalBlock(scope: !12123, file: !1159, line: 433, column: 3)
!12136 = !DILocation(line: 433, column: 16, scope: !12134)
!12137 = !DILocation(line: 433, column: 14, scope: !12134)
!12138 = !DILocation(line: 433, column: 3, scope: !12135)
!12139 = !DILocation(line: 434, column: 14, scope: !12134)
!12140 = !DILocation(line: 434, column: 20, scope: !12134)
!12141 = !DILocation(line: 434, column: 27, scope: !12134)
!12142 = !DILocation(line: 434, column: 25, scope: !12134)
!12143 = !DILocation(line: 434, column: 33, scope: !12134)
!12144 = !DILocation(line: 434, column: 31, scope: !12134)
!12145 = !DILocation(line: 434, column: 11, scope: !12134)
!12146 = !DILocation(line: 434, column: 5, scope: !12134)
!12147 = !DILocation(line: 433, column: 32, scope: !12134)
!12148 = !DILocation(line: 433, column: 3, scope: !12134)
!12149 = distinct !{!12149, !12138, !12150}
!12150 = !DILocation(line: 434, column: 33, scope: !12135)
!12151 = !DILocation(line: 435, column: 10, scope: !12123)
!12152 = !DILocation(line: 435, column: 3, scope: !12123)
!12153 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1159, file: !1159, line: 479, type: !1246, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12154 = !DILocalVariable(name: "tuning", arg: 1, scope: !12153, file: !1159, line: 479, type: !1248)
!12155 = !DILocation(line: 479, column: 33, scope: !12153)
!12156 = !DILocation(line: 481, column: 4, scope: !12153)
!12157 = !DILocation(line: 481, column: 13, scope: !12153)
!12158 = !{i64 0, i64 4, !12159, i64 4, i64 4, !12159, i64 8, i64 4, !12159, i64 12, i64 4, !12159, i64 16, i64 1, !2461}
!12159 = !{!12160, !12160, i64 0}
!12160 = !{!"float", !2438, i64 0}
!12161 = !DILocation(line: 482, column: 1, scope: !12153)
!12162 = distinct !DISubprogram(name: "hash_initialize", scope: !1159, file: !1159, line: 594, type: !1249, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12163 = !DILocalVariable(name: "candidate", arg: 1, scope: !12162, file: !1159, line: 594, type: !149)
!12164 = !DILocation(line: 594, column: 25, scope: !12162)
!12165 = !DILocalVariable(name: "tuning", arg: 2, scope: !12162, file: !1159, line: 594, type: !1174)
!12166 = !DILocation(line: 594, column: 55, scope: !12162)
!12167 = !DILocalVariable(name: "hasher", arg: 3, scope: !12162, file: !1159, line: 595, type: !1186)
!12168 = !DILocation(line: 595, column: 30, scope: !12162)
!12169 = !DILocalVariable(name: "comparator", arg: 4, scope: !12162, file: !1159, line: 595, type: !1189)
!12170 = !DILocation(line: 595, column: 54, scope: !12162)
!12171 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12162, file: !1159, line: 596, type: !1192)
!12172 = !DILocation(line: 596, column: 34, scope: !12162)
!12173 = !DILocalVariable(name: "table", scope: !12162, file: !1159, line: 598, type: !1251)
!12174 = !DILocation(line: 598, column: 15, scope: !12162)
!12175 = !DILocation(line: 600, column: 7, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 600, column: 7)
!12177 = !DILocation(line: 600, column: 14, scope: !12176)
!12178 = !DILocation(line: 600, column: 7, scope: !12162)
!12179 = !DILocation(line: 601, column: 12, scope: !12176)
!12180 = !DILocation(line: 601, column: 5, scope: !12176)
!12181 = !DILocation(line: 602, column: 7, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 602, column: 7)
!12183 = !DILocation(line: 602, column: 18, scope: !12182)
!12184 = !DILocation(line: 602, column: 7, scope: !12162)
!12185 = !DILocation(line: 603, column: 16, scope: !12182)
!12186 = !DILocation(line: 603, column: 5, scope: !12182)
!12187 = !DILocation(line: 605, column: 11, scope: !12162)
!12188 = !DILocation(line: 605, column: 9, scope: !12162)
!12189 = !DILocation(line: 606, column: 7, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 606, column: 7)
!12191 = !DILocation(line: 606, column: 13, scope: !12190)
!12192 = !DILocation(line: 606, column: 7, scope: !12162)
!12193 = !DILocation(line: 607, column: 5, scope: !12190)
!12194 = !DILocation(line: 609, column: 8, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 609, column: 7)
!12196 = !DILocation(line: 609, column: 7, scope: !12162)
!12197 = !DILocation(line: 610, column: 12, scope: !12195)
!12198 = !DILocation(line: 610, column: 5, scope: !12195)
!12199 = !DILocation(line: 611, column: 19, scope: !12162)
!12200 = !DILocation(line: 611, column: 3, scope: !12162)
!12201 = !DILocation(line: 611, column: 10, scope: !12162)
!12202 = !DILocation(line: 611, column: 17, scope: !12162)
!12203 = !{!11659, !2443, i64 40}
!12204 = !DILocation(line: 612, column: 22, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 612, column: 7)
!12206 = !DILocation(line: 612, column: 8, scope: !12205)
!12207 = !DILocation(line: 612, column: 7, scope: !12162)
!12208 = !DILocation(line: 619, column: 7, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12205, file: !1159, line: 613, column: 5)
!12210 = !DILocation(line: 622, column: 43, scope: !12162)
!12211 = !DILocation(line: 622, column: 54, scope: !12162)
!12212 = !DILocation(line: 622, column: 22, scope: !12162)
!12213 = !DILocation(line: 622, column: 3, scope: !12162)
!12214 = !DILocation(line: 622, column: 10, scope: !12162)
!12215 = !DILocation(line: 622, column: 20, scope: !12162)
!12216 = !DILocation(line: 623, column: 8, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 623, column: 7)
!12218 = !DILocation(line: 623, column: 15, scope: !12217)
!12219 = !DILocation(line: 623, column: 7, scope: !12162)
!12220 = !DILocation(line: 624, column: 5, scope: !12217)
!12221 = !DILocation(line: 626, column: 27, scope: !12162)
!12222 = !DILocation(line: 626, column: 34, scope: !12162)
!12223 = !DILocation(line: 626, column: 19, scope: !12162)
!12224 = !DILocation(line: 626, column: 3, scope: !12162)
!12225 = !DILocation(line: 626, column: 10, scope: !12162)
!12226 = !DILocation(line: 626, column: 17, scope: !12162)
!12227 = !DILocation(line: 627, column: 7, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12162, file: !1159, line: 627, column: 7)
!12229 = !DILocation(line: 627, column: 14, scope: !12228)
!12230 = !DILocation(line: 627, column: 21, scope: !12228)
!12231 = !DILocation(line: 627, column: 7, scope: !12162)
!12232 = !DILocation(line: 628, column: 5, scope: !12228)
!12233 = !DILocation(line: 629, column: 25, scope: !12162)
!12234 = !DILocation(line: 629, column: 32, scope: !12162)
!12235 = !DILocation(line: 629, column: 41, scope: !12162)
!12236 = !DILocation(line: 629, column: 48, scope: !12162)
!12237 = !DILocation(line: 629, column: 39, scope: !12162)
!12238 = !DILocation(line: 629, column: 3, scope: !12162)
!12239 = !DILocation(line: 629, column: 10, scope: !12162)
!12240 = !DILocation(line: 629, column: 23, scope: !12162)
!12241 = !DILocation(line: 630, column: 3, scope: !12162)
!12242 = !DILocation(line: 630, column: 10, scope: !12162)
!12243 = !DILocation(line: 630, column: 25, scope: !12162)
!12244 = !DILocation(line: 631, column: 3, scope: !12162)
!12245 = !DILocation(line: 631, column: 10, scope: !12162)
!12246 = !DILocation(line: 631, column: 20, scope: !12162)
!12247 = !DILocation(line: 633, column: 19, scope: !12162)
!12248 = !DILocation(line: 633, column: 3, scope: !12162)
!12249 = !DILocation(line: 633, column: 10, scope: !12162)
!12250 = !DILocation(line: 633, column: 17, scope: !12162)
!12251 = !DILocation(line: 634, column: 23, scope: !12162)
!12252 = !DILocation(line: 634, column: 3, scope: !12162)
!12253 = !DILocation(line: 634, column: 10, scope: !12162)
!12254 = !DILocation(line: 634, column: 21, scope: !12162)
!12255 = !DILocation(line: 635, column: 23, scope: !12162)
!12256 = !DILocation(line: 635, column: 3, scope: !12162)
!12257 = !DILocation(line: 635, column: 10, scope: !12162)
!12258 = !DILocation(line: 635, column: 21, scope: !12162)
!12259 = !{!11659, !2443, i64 64}
!12260 = !DILocation(line: 637, column: 3, scope: !12162)
!12261 = !DILocation(line: 637, column: 10, scope: !12162)
!12262 = !DILocation(line: 637, column: 26, scope: !12162)
!12263 = !{!11659, !2443, i64 72}
!12264 = !DILocation(line: 641, column: 10, scope: !12162)
!12265 = !DILocation(line: 641, column: 3, scope: !12162)
!12266 = !DILabel(scope: !12162, name: "fail", file: !1159, line: 643)
!12267 = !DILocation(line: 643, column: 2, scope: !12162)
!12268 = !DILocation(line: 644, column: 9, scope: !12162)
!12269 = !DILocation(line: 644, column: 3, scope: !12162)
!12270 = !DILocation(line: 645, column: 3, scope: !12162)
!12271 = !DILocation(line: 646, column: 1, scope: !12162)
!12272 = distinct !DISubprogram(name: "raw_hasher", scope: !1159, file: !1159, line: 486, type: !333, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12273 = !DILocalVariable(name: "data", arg: 1, scope: !12272, file: !1159, line: 486, type: !176)
!12274 = !DILocation(line: 486, column: 25, scope: !12272)
!12275 = !DILocalVariable(name: "n", arg: 2, scope: !12272, file: !1159, line: 486, type: !149)
!12276 = !DILocation(line: 486, column: 38, scope: !12272)
!12277 = !DILocalVariable(name: "val", scope: !12272, file: !1159, line: 493, type: !149)
!12278 = !DILocation(line: 493, column: 10, scope: !12272)
!12279 = !DILocation(line: 493, column: 34, scope: !12272)
!12280 = !DILocation(line: 493, column: 25, scope: !12272)
!12281 = !DILocation(line: 493, column: 16, scope: !12272)
!12282 = !DILocation(line: 494, column: 10, scope: !12272)
!12283 = !DILocation(line: 494, column: 16, scope: !12272)
!12284 = !DILocation(line: 494, column: 14, scope: !12272)
!12285 = !DILocation(line: 494, column: 3, scope: !12272)
!12286 = distinct !DISubprogram(name: "raw_comparator", scope: !1159, file: !1159, line: 499, type: !337, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12287 = !DILocalVariable(name: "a", arg: 1, scope: !12286, file: !1159, line: 499, type: !176)
!12288 = !DILocation(line: 499, column: 29, scope: !12286)
!12289 = !DILocalVariable(name: "b", arg: 2, scope: !12286, file: !1159, line: 499, type: !176)
!12290 = !DILocation(line: 499, column: 44, scope: !12286)
!12291 = !DILocation(line: 501, column: 10, scope: !12286)
!12292 = !DILocation(line: 501, column: 15, scope: !12286)
!12293 = !DILocation(line: 501, column: 12, scope: !12286)
!12294 = !DILocation(line: 501, column: 3, scope: !12286)
!12295 = distinct !DISubprogram(name: "check_tuning", scope: !1159, file: !1159, line: 512, type: !1262, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12296 = !DILocalVariable(name: "table", arg: 1, scope: !12295, file: !1159, line: 512, type: !1251)
!12297 = !DILocation(line: 512, column: 27, scope: !12295)
!12298 = !DILocalVariable(name: "tuning", scope: !12295, file: !1159, line: 514, type: !1174)
!12299 = !DILocation(line: 514, column: 22, scope: !12295)
!12300 = !DILocation(line: 514, column: 31, scope: !12295)
!12301 = !DILocation(line: 514, column: 38, scope: !12295)
!12302 = !DILocalVariable(name: "epsilon", scope: !12295, file: !1159, line: 515, type: !1180)
!12303 = !DILocation(line: 515, column: 9, scope: !12295)
!12304 = !DILocation(line: 516, column: 7, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12295, file: !1159, line: 516, column: 7)
!12306 = !DILocation(line: 516, column: 14, scope: !12305)
!12307 = !DILocation(line: 516, column: 7, scope: !12295)
!12308 = !DILocation(line: 517, column: 5, scope: !12305)
!12309 = !DILocation(line: 524, column: 11, scope: !12295)
!12310 = !DILocation(line: 526, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12295, file: !1159, line: 526, column: 7)
!12312 = !DILocation(line: 526, column: 17, scope: !12311)
!12313 = !DILocation(line: 526, column: 25, scope: !12311)
!12314 = !{!12315, !12160, i64 8}
!12315 = !{!"hash_tuning", !12160, i64 0, !12160, i64 4, !12160, i64 8, !12160, i64 12, !2462, i64 16}
!12316 = !DILocation(line: 526, column: 15, scope: !12311)
!12317 = !DILocation(line: 527, column: 7, scope: !12311)
!12318 = !DILocation(line: 527, column: 10, scope: !12311)
!12319 = !DILocation(line: 527, column: 18, scope: !12311)
!12320 = !DILocation(line: 527, column: 41, scope: !12311)
!12321 = !DILocation(line: 527, column: 39, scope: !12311)
!12322 = !DILocation(line: 527, column: 35, scope: !12311)
!12323 = !DILocation(line: 528, column: 7, scope: !12311)
!12324 = !DILocation(line: 528, column: 14, scope: !12311)
!12325 = !DILocation(line: 528, column: 12, scope: !12311)
!12326 = !DILocation(line: 528, column: 24, scope: !12311)
!12327 = !DILocation(line: 528, column: 32, scope: !12311)
!12328 = !{!12315, !12160, i64 12}
!12329 = !DILocation(line: 528, column: 22, scope: !12311)
!12330 = !DILocation(line: 529, column: 7, scope: !12311)
!12331 = !DILocation(line: 529, column: 15, scope: !12311)
!12332 = !DILocation(line: 529, column: 23, scope: !12311)
!12333 = !{!12315, !12160, i64 0}
!12334 = !DILocation(line: 529, column: 12, scope: !12311)
!12335 = !DILocation(line: 530, column: 7, scope: !12311)
!12336 = !DILocation(line: 530, column: 10, scope: !12311)
!12337 = !DILocation(line: 530, column: 18, scope: !12311)
!12338 = !DILocation(line: 530, column: 37, scope: !12311)
!12339 = !DILocation(line: 530, column: 35, scope: !12311)
!12340 = !DILocation(line: 530, column: 47, scope: !12311)
!12341 = !DILocation(line: 530, column: 55, scope: !12311)
!12342 = !{!12315, !12160, i64 4}
!12343 = !DILocation(line: 530, column: 45, scope: !12311)
!12344 = !DILocation(line: 531, column: 7, scope: !12311)
!12345 = !DILocation(line: 531, column: 10, scope: !12311)
!12346 = !DILocation(line: 531, column: 18, scope: !12311)
!12347 = !DILocation(line: 531, column: 32, scope: !12311)
!12348 = !DILocation(line: 532, column: 7, scope: !12311)
!12349 = !DILocation(line: 532, column: 10, scope: !12311)
!12350 = !DILocation(line: 532, column: 18, scope: !12311)
!12351 = !DILocation(line: 532, column: 37, scope: !12311)
!12352 = !DILocation(line: 532, column: 35, scope: !12311)
!12353 = !DILocation(line: 532, column: 47, scope: !12311)
!12354 = !DILocation(line: 532, column: 55, scope: !12311)
!12355 = !DILocation(line: 532, column: 45, scope: !12311)
!12356 = !DILocation(line: 526, column: 7, scope: !12295)
!12357 = !DILocation(line: 533, column: 5, scope: !12311)
!12358 = !DILocation(line: 535, column: 3, scope: !12295)
!12359 = !DILocation(line: 535, column: 10, scope: !12295)
!12360 = !DILocation(line: 535, column: 17, scope: !12295)
!12361 = !DILocation(line: 536, column: 3, scope: !12295)
!12362 = !DILocation(line: 537, column: 1, scope: !12295)
!12363 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1159, file: !1159, line: 544, type: !1264, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12364 = !DILocalVariable(name: "candidate", arg: 1, scope: !12363, file: !1159, line: 544, type: !149)
!12365 = !DILocation(line: 544, column: 29, scope: !12363)
!12366 = !DILocalVariable(name: "tuning", arg: 2, scope: !12363, file: !1159, line: 544, type: !1174)
!12367 = !DILocation(line: 544, column: 59, scope: !12363)
!12368 = !DILocation(line: 546, column: 8, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12363, file: !1159, line: 546, column: 7)
!12370 = !DILocation(line: 546, column: 16, scope: !12369)
!12371 = !{!12315, !2462, i64 16}
!12372 = !DILocation(line: 546, column: 7, scope: !12363)
!12373 = !DILocalVariable(name: "new_candidate", scope: !12374, file: !1159, line: 548, type: !1180)
!12374 = distinct !DILexicalBlock(scope: !12369, file: !1159, line: 547, column: 5)
!12375 = !DILocation(line: 548, column: 13, scope: !12374)
!12376 = !DILocation(line: 548, column: 29, scope: !12374)
!12377 = !DILocation(line: 548, column: 41, scope: !12374)
!12378 = !DILocation(line: 548, column: 49, scope: !12374)
!12379 = !DILocation(line: 548, column: 39, scope: !12374)
!12380 = !DILocation(line: 549, column: 23, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12374, file: !1159, line: 549, column: 11)
!12382 = !DILocation(line: 549, column: 20, scope: !12381)
!12383 = !DILocation(line: 549, column: 11, scope: !12374)
!12384 = !DILocation(line: 550, column: 9, scope: !12381)
!12385 = !DILocation(line: 551, column: 19, scope: !12374)
!12386 = !DILocation(line: 551, column: 17, scope: !12374)
!12387 = !DILocation(line: 552, column: 5, scope: !12374)
!12388 = !DILocation(line: 553, column: 27, scope: !12363)
!12389 = !DILocation(line: 553, column: 15, scope: !12363)
!12390 = !DILocation(line: 553, column: 13, scope: !12363)
!12391 = !DILocation(line: 554, column: 7, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12363, file: !1159, line: 554, column: 7)
!12393 = !DILocation(line: 554, column: 7, scope: !12363)
!12394 = !DILocation(line: 555, column: 5, scope: !12392)
!12395 = !DILocation(line: 556, column: 10, scope: !12363)
!12396 = !DILocation(line: 556, column: 3, scope: !12363)
!12397 = !DILocation(line: 557, column: 1, scope: !12363)
!12398 = distinct !DISubprogram(name: "next_prime", scope: !1159, file: !1159, line: 463, type: !1266, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12399 = !DILocalVariable(name: "candidate", arg: 1, scope: !12398, file: !1159, line: 463, type: !149)
!12400 = !DILocation(line: 463, column: 20, scope: !12398)
!12401 = !DILocation(line: 466, column: 7, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12398, file: !1159, line: 466, column: 7)
!12403 = !DILocation(line: 466, column: 17, scope: !12402)
!12404 = !DILocation(line: 466, column: 7, scope: !12398)
!12405 = !DILocation(line: 467, column: 15, scope: !12402)
!12406 = !DILocation(line: 467, column: 5, scope: !12402)
!12407 = !DILocation(line: 470, column: 13, scope: !12398)
!12408 = !DILocation(line: 472, column: 3, scope: !12398)
!12409 = !DILocation(line: 472, column: 22, scope: !12398)
!12410 = !DILocation(line: 472, column: 19, scope: !12398)
!12411 = !DILocation(line: 472, column: 32, scope: !12398)
!12412 = !DILocation(line: 472, column: 46, scope: !12398)
!12413 = !DILocation(line: 472, column: 36, scope: !12398)
!12414 = !DILocation(line: 472, column: 35, scope: !12398)
!12415 = !DILocation(line: 0, scope: !12398)
!12416 = !DILocation(line: 473, column: 15, scope: !12398)
!12417 = distinct !{!12417, !12408, !12418}
!12418 = !DILocation(line: 473, column: 18, scope: !12398)
!12419 = !DILocation(line: 475, column: 10, scope: !12398)
!12420 = !DILocation(line: 475, column: 3, scope: !12398)
!12421 = distinct !DISubprogram(name: "is_prime", scope: !1159, file: !1159, line: 444, type: !1268, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12422 = !DILocalVariable(name: "candidate", arg: 1, scope: !12421, file: !1159, line: 444, type: !149)
!12423 = !DILocation(line: 444, column: 18, scope: !12421)
!12424 = !DILocalVariable(name: "divisor", scope: !12421, file: !1159, line: 446, type: !149)
!12425 = !DILocation(line: 446, column: 10, scope: !12421)
!12426 = !DILocalVariable(name: "square", scope: !12421, file: !1159, line: 447, type: !149)
!12427 = !DILocation(line: 447, column: 10, scope: !12421)
!12428 = !DILocation(line: 447, column: 19, scope: !12421)
!12429 = !DILocation(line: 447, column: 29, scope: !12421)
!12430 = !DILocation(line: 447, column: 27, scope: !12421)
!12431 = !DILocation(line: 449, column: 3, scope: !12421)
!12432 = !DILocation(line: 449, column: 10, scope: !12421)
!12433 = !DILocation(line: 449, column: 19, scope: !12421)
!12434 = !DILocation(line: 449, column: 17, scope: !12421)
!12435 = !DILocation(line: 449, column: 29, scope: !12421)
!12436 = !DILocation(line: 449, column: 33, scope: !12421)
!12437 = !DILocation(line: 449, column: 45, scope: !12421)
!12438 = !DILocation(line: 449, column: 43, scope: !12421)
!12439 = !DILocation(line: 0, scope: !12421)
!12440 = !DILocation(line: 451, column: 14, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12421, file: !1159, line: 450, column: 5)
!12442 = !DILocation(line: 452, column: 21, scope: !12441)
!12443 = !DILocation(line: 452, column: 19, scope: !12441)
!12444 = !DILocation(line: 452, column: 14, scope: !12441)
!12445 = !DILocation(line: 453, column: 14, scope: !12441)
!12446 = distinct !{!12446, !12431, !12447}
!12447 = !DILocation(line: 454, column: 5, scope: !12421)
!12448 = !DILocation(line: 456, column: 11, scope: !12421)
!12449 = !DILocation(line: 456, column: 23, scope: !12421)
!12450 = !DILocation(line: 456, column: 21, scope: !12421)
!12451 = !DILocation(line: 456, column: 10, scope: !12421)
!12452 = !DILocation(line: 456, column: 3, scope: !12421)
!12453 = distinct !DISubprogram(name: "hash_clear", scope: !1159, file: !1159, line: 653, type: !1252, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12454 = !DILocalVariable(name: "table", arg: 1, scope: !12453, file: !1159, line: 653, type: !1251)
!12455 = !DILocation(line: 653, column: 25, scope: !12453)
!12456 = !DILocalVariable(name: "bucket", scope: !12453, file: !1159, line: 655, type: !1162)
!12457 = !DILocation(line: 655, column: 22, scope: !12453)
!12458 = !DILocation(line: 657, column: 17, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12453, file: !1159, line: 657, column: 3)
!12460 = !DILocation(line: 657, column: 24, scope: !12459)
!12461 = !DILocation(line: 657, column: 15, scope: !12459)
!12462 = !DILocation(line: 657, column: 8, scope: !12459)
!12463 = !DILocation(line: 657, column: 32, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !1159, line: 657, column: 3)
!12465 = !DILocation(line: 657, column: 41, scope: !12464)
!12466 = !DILocation(line: 657, column: 48, scope: !12464)
!12467 = !DILocation(line: 657, column: 39, scope: !12464)
!12468 = !DILocation(line: 657, column: 3, scope: !12459)
!12469 = !DILocation(line: 659, column: 11, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !1159, line: 659, column: 11)
!12471 = distinct !DILexicalBlock(scope: !12464, file: !1159, line: 658, column: 5)
!12472 = !DILocation(line: 659, column: 19, scope: !12470)
!12473 = !DILocation(line: 659, column: 11, scope: !12471)
!12474 = !DILocalVariable(name: "cursor", scope: !12475, file: !1159, line: 661, type: !1162)
!12475 = distinct !DILexicalBlock(scope: !12470, file: !1159, line: 660, column: 9)
!12476 = !DILocation(line: 661, column: 30, scope: !12475)
!12477 = !DILocalVariable(name: "next", scope: !12475, file: !1159, line: 662, type: !1162)
!12478 = !DILocation(line: 662, column: 30, scope: !12475)
!12479 = !DILocation(line: 665, column: 25, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12475, file: !1159, line: 665, column: 11)
!12481 = !DILocation(line: 665, column: 33, scope: !12480)
!12482 = !DILocation(line: 665, column: 23, scope: !12480)
!12483 = !DILocation(line: 665, column: 16, scope: !12480)
!12484 = !DILocation(line: 665, column: 39, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12480, file: !1159, line: 665, column: 11)
!12486 = !DILocation(line: 665, column: 11, scope: !12480)
!12487 = !DILocation(line: 667, column: 19, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !1159, line: 667, column: 19)
!12489 = distinct !DILexicalBlock(scope: !12485, file: !1159, line: 666, column: 13)
!12490 = !DILocation(line: 667, column: 26, scope: !12488)
!12491 = !DILocation(line: 667, column: 19, scope: !12489)
!12492 = !DILocation(line: 668, column: 17, scope: !12488)
!12493 = !DILocation(line: 668, column: 24, scope: !12488)
!12494 = !DILocation(line: 668, column: 36, scope: !12488)
!12495 = !DILocation(line: 668, column: 44, scope: !12488)
!12496 = !DILocation(line: 669, column: 15, scope: !12489)
!12497 = !DILocation(line: 669, column: 23, scope: !12489)
!12498 = !DILocation(line: 669, column: 28, scope: !12489)
!12499 = !DILocation(line: 671, column: 22, scope: !12489)
!12500 = !DILocation(line: 671, column: 30, scope: !12489)
!12501 = !DILocation(line: 671, column: 20, scope: !12489)
!12502 = !DILocation(line: 674, column: 30, scope: !12489)
!12503 = !DILocation(line: 674, column: 37, scope: !12489)
!12504 = !DILocation(line: 674, column: 15, scope: !12489)
!12505 = !DILocation(line: 674, column: 23, scope: !12489)
!12506 = !DILocation(line: 674, column: 28, scope: !12489)
!12507 = !DILocation(line: 675, column: 40, scope: !12489)
!12508 = !DILocation(line: 675, column: 15, scope: !12489)
!12509 = !DILocation(line: 675, column: 22, scope: !12489)
!12510 = !DILocation(line: 675, column: 38, scope: !12489)
!12511 = !DILocation(line: 676, column: 13, scope: !12489)
!12512 = !DILocation(line: 665, column: 56, scope: !12485)
!12513 = !DILocation(line: 665, column: 54, scope: !12485)
!12514 = !DILocation(line: 665, column: 11, scope: !12485)
!12515 = distinct !{!12515, !12486, !12516}
!12516 = !DILocation(line: 676, column: 13, scope: !12480)
!12517 = !DILocation(line: 679, column: 15, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12475, file: !1159, line: 679, column: 15)
!12519 = !DILocation(line: 679, column: 22, scope: !12518)
!12520 = !DILocation(line: 679, column: 15, scope: !12475)
!12521 = !DILocation(line: 680, column: 13, scope: !12518)
!12522 = !DILocation(line: 680, column: 20, scope: !12518)
!12523 = !DILocation(line: 680, column: 32, scope: !12518)
!12524 = !DILocation(line: 680, column: 40, scope: !12518)
!12525 = !DILocation(line: 681, column: 11, scope: !12475)
!12526 = !DILocation(line: 681, column: 19, scope: !12475)
!12527 = !DILocation(line: 681, column: 24, scope: !12475)
!12528 = !DILocation(line: 682, column: 11, scope: !12475)
!12529 = !DILocation(line: 682, column: 19, scope: !12475)
!12530 = !DILocation(line: 682, column: 24, scope: !12475)
!12531 = !DILocation(line: 683, column: 9, scope: !12475)
!12532 = !DILocation(line: 684, column: 5, scope: !12471)
!12533 = !DILocation(line: 657, column: 68, scope: !12464)
!12534 = !DILocation(line: 657, column: 3, scope: !12464)
!12535 = distinct !{!12535, !12468, !12536}
!12536 = !DILocation(line: 684, column: 5, scope: !12459)
!12537 = !DILocation(line: 686, column: 3, scope: !12453)
!12538 = !DILocation(line: 686, column: 10, scope: !12453)
!12539 = !DILocation(line: 686, column: 25, scope: !12453)
!12540 = !DILocation(line: 687, column: 3, scope: !12453)
!12541 = !DILocation(line: 687, column: 10, scope: !12453)
!12542 = !DILocation(line: 687, column: 20, scope: !12453)
!12543 = !DILocation(line: 688, column: 1, scope: !12453)
!12544 = distinct !DISubprogram(name: "hash_free", scope: !1159, file: !1159, line: 696, type: !1252, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12545 = !DILocalVariable(name: "table", arg: 1, scope: !12544, file: !1159, line: 696, type: !1251)
!12546 = !DILocation(line: 696, column: 24, scope: !12544)
!12547 = !DILocalVariable(name: "bucket", scope: !12544, file: !1159, line: 698, type: !1162)
!12548 = !DILocation(line: 698, column: 22, scope: !12544)
!12549 = !DILocalVariable(name: "cursor", scope: !12544, file: !1159, line: 699, type: !1162)
!12550 = !DILocation(line: 699, column: 22, scope: !12544)
!12551 = !DILocalVariable(name: "next", scope: !12544, file: !1159, line: 700, type: !1162)
!12552 = !DILocation(line: 700, column: 22, scope: !12544)
!12553 = !DILocation(line: 703, column: 7, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12544, file: !1159, line: 703, column: 7)
!12555 = !DILocation(line: 703, column: 14, scope: !12554)
!12556 = !DILocation(line: 703, column: 25, scope: !12554)
!12557 = !DILocation(line: 703, column: 28, scope: !12554)
!12558 = !DILocation(line: 703, column: 35, scope: !12554)
!12559 = !DILocation(line: 703, column: 7, scope: !12544)
!12560 = !DILocation(line: 705, column: 21, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !1159, line: 705, column: 7)
!12562 = distinct !DILexicalBlock(scope: !12554, file: !1159, line: 704, column: 5)
!12563 = !DILocation(line: 705, column: 28, scope: !12561)
!12564 = !DILocation(line: 705, column: 19, scope: !12561)
!12565 = !DILocation(line: 705, column: 12, scope: !12561)
!12566 = !DILocation(line: 705, column: 36, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12561, file: !1159, line: 705, column: 7)
!12568 = !DILocation(line: 705, column: 45, scope: !12567)
!12569 = !DILocation(line: 705, column: 52, scope: !12567)
!12570 = !DILocation(line: 705, column: 43, scope: !12567)
!12571 = !DILocation(line: 705, column: 7, scope: !12561)
!12572 = !DILocation(line: 707, column: 15, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !1159, line: 707, column: 15)
!12574 = distinct !DILexicalBlock(scope: !12567, file: !1159, line: 706, column: 9)
!12575 = !DILocation(line: 707, column: 23, scope: !12573)
!12576 = !DILocation(line: 707, column: 15, scope: !12574)
!12577 = !DILocation(line: 709, column: 29, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !1159, line: 709, column: 15)
!12579 = distinct !DILexicalBlock(scope: !12573, file: !1159, line: 708, column: 13)
!12580 = !DILocation(line: 709, column: 27, scope: !12578)
!12581 = !DILocation(line: 709, column: 20, scope: !12578)
!12582 = !DILocation(line: 709, column: 37, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12578, file: !1159, line: 709, column: 15)
!12584 = !DILocation(line: 709, column: 15, scope: !12578)
!12585 = !DILocation(line: 710, column: 17, scope: !12583)
!12586 = !DILocation(line: 710, column: 24, scope: !12583)
!12587 = !DILocation(line: 710, column: 36, scope: !12583)
!12588 = !DILocation(line: 710, column: 44, scope: !12583)
!12589 = !DILocation(line: 709, column: 54, scope: !12583)
!12590 = !DILocation(line: 709, column: 62, scope: !12583)
!12591 = !DILocation(line: 709, column: 52, scope: !12583)
!12592 = !DILocation(line: 709, column: 15, scope: !12583)
!12593 = distinct !{!12593, !12584, !12594}
!12594 = !DILocation(line: 710, column: 48, scope: !12578)
!12595 = !DILocation(line: 711, column: 13, scope: !12579)
!12596 = !DILocation(line: 712, column: 9, scope: !12574)
!12597 = !DILocation(line: 705, column: 72, scope: !12567)
!12598 = !DILocation(line: 705, column: 7, scope: !12567)
!12599 = distinct !{!12599, !12571, !12600}
!12600 = !DILocation(line: 712, column: 9, scope: !12561)
!12601 = !DILocation(line: 713, column: 5, scope: !12562)
!12602 = !DILocation(line: 722, column: 17, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12544, file: !1159, line: 722, column: 3)
!12604 = !DILocation(line: 722, column: 24, scope: !12603)
!12605 = !DILocation(line: 722, column: 15, scope: !12603)
!12606 = !DILocation(line: 722, column: 8, scope: !12603)
!12607 = !DILocation(line: 722, column: 32, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12603, file: !1159, line: 722, column: 3)
!12609 = !DILocation(line: 722, column: 41, scope: !12608)
!12610 = !DILocation(line: 722, column: 48, scope: !12608)
!12611 = !DILocation(line: 722, column: 39, scope: !12608)
!12612 = !DILocation(line: 722, column: 3, scope: !12603)
!12613 = !DILocation(line: 724, column: 21, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !1159, line: 724, column: 7)
!12615 = distinct !DILexicalBlock(scope: !12608, file: !1159, line: 723, column: 5)
!12616 = !DILocation(line: 724, column: 29, scope: !12614)
!12617 = !DILocation(line: 724, column: 19, scope: !12614)
!12618 = !DILocation(line: 724, column: 12, scope: !12614)
!12619 = !DILocation(line: 724, column: 35, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12614, file: !1159, line: 724, column: 7)
!12621 = !DILocation(line: 724, column: 7, scope: !12614)
!12622 = !DILocation(line: 726, column: 18, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12620, file: !1159, line: 725, column: 9)
!12624 = !DILocation(line: 726, column: 26, scope: !12623)
!12625 = !DILocation(line: 726, column: 16, scope: !12623)
!12626 = !DILocation(line: 727, column: 17, scope: !12623)
!12627 = !DILocation(line: 727, column: 11, scope: !12623)
!12628 = !DILocation(line: 728, column: 9, scope: !12623)
!12629 = !DILocation(line: 724, column: 52, scope: !12620)
!12630 = !DILocation(line: 724, column: 50, scope: !12620)
!12631 = !DILocation(line: 724, column: 7, scope: !12620)
!12632 = distinct !{!12632, !12621, !12633}
!12633 = !DILocation(line: 728, column: 9, scope: !12614)
!12634 = !DILocation(line: 729, column: 5, scope: !12615)
!12635 = !DILocation(line: 722, column: 68, scope: !12608)
!12636 = !DILocation(line: 722, column: 3, scope: !12608)
!12637 = distinct !{!12637, !12612, !12638}
!12638 = !DILocation(line: 729, column: 5, scope: !12603)
!12639 = !DILocation(line: 732, column: 17, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12544, file: !1159, line: 732, column: 3)
!12641 = !DILocation(line: 732, column: 24, scope: !12640)
!12642 = !DILocation(line: 732, column: 15, scope: !12640)
!12643 = !DILocation(line: 732, column: 8, scope: !12640)
!12644 = !DILocation(line: 732, column: 41, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12640, file: !1159, line: 732, column: 3)
!12646 = !DILocation(line: 732, column: 3, scope: !12640)
!12647 = !DILocation(line: 734, column: 14, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12645, file: !1159, line: 733, column: 5)
!12649 = !DILocation(line: 734, column: 22, scope: !12648)
!12650 = !DILocation(line: 734, column: 12, scope: !12648)
!12651 = !DILocation(line: 735, column: 13, scope: !12648)
!12652 = !DILocation(line: 735, column: 7, scope: !12648)
!12653 = !DILocation(line: 736, column: 5, scope: !12648)
!12654 = !DILocation(line: 732, column: 58, scope: !12645)
!12655 = !DILocation(line: 732, column: 56, scope: !12645)
!12656 = !DILocation(line: 732, column: 3, scope: !12645)
!12657 = distinct !{!12657, !12646, !12658}
!12658 = !DILocation(line: 736, column: 5, scope: !12640)
!12659 = !DILocation(line: 741, column: 9, scope: !12544)
!12660 = !DILocation(line: 741, column: 16, scope: !12544)
!12661 = !DILocation(line: 741, column: 3, scope: !12544)
!12662 = !DILocation(line: 742, column: 9, scope: !12544)
!12663 = !DILocation(line: 742, column: 3, scope: !12544)
!12664 = !DILocation(line: 743, column: 1, scope: !12544)
!12665 = distinct !DISubprogram(name: "hash_rehash", scope: !1159, file: !1159, line: 943, type: !1254, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12666 = !DILocalVariable(name: "table", arg: 1, scope: !12665, file: !1159, line: 943, type: !1251)
!12667 = !DILocation(line: 943, column: 26, scope: !12665)
!12668 = !DILocalVariable(name: "candidate", arg: 2, scope: !12665, file: !1159, line: 943, type: !149)
!12669 = !DILocation(line: 943, column: 40, scope: !12665)
!12670 = !DILocalVariable(name: "storage", scope: !12665, file: !1159, line: 945, type: !1157)
!12671 = !DILocation(line: 945, column: 14, scope: !12665)
!12672 = !DILocalVariable(name: "new_table", scope: !12665, file: !1159, line: 946, type: !1251)
!12673 = !DILocation(line: 946, column: 15, scope: !12665)
!12674 = !DILocalVariable(name: "new_size", scope: !12665, file: !1159, line: 947, type: !149)
!12675 = !DILocation(line: 947, column: 10, scope: !12665)
!12676 = !DILocation(line: 947, column: 42, scope: !12665)
!12677 = !DILocation(line: 947, column: 53, scope: !12665)
!12678 = !DILocation(line: 947, column: 60, scope: !12665)
!12679 = !DILocation(line: 947, column: 21, scope: !12665)
!12680 = !DILocation(line: 949, column: 8, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12665, file: !1159, line: 949, column: 7)
!12682 = !DILocation(line: 949, column: 7, scope: !12665)
!12683 = !DILocation(line: 950, column: 5, scope: !12681)
!12684 = !DILocation(line: 951, column: 7, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12665, file: !1159, line: 951, column: 7)
!12686 = !DILocation(line: 951, column: 19, scope: !12685)
!12687 = !DILocation(line: 951, column: 26, scope: !12685)
!12688 = !DILocation(line: 951, column: 16, scope: !12685)
!12689 = !DILocation(line: 951, column: 7, scope: !12665)
!12690 = !DILocation(line: 952, column: 5, scope: !12685)
!12691 = !DILocation(line: 953, column: 13, scope: !12665)
!12692 = !DILocation(line: 954, column: 31, scope: !12665)
!12693 = !DILocation(line: 954, column: 23, scope: !12665)
!12694 = !DILocation(line: 954, column: 3, scope: !12665)
!12695 = !DILocation(line: 954, column: 14, scope: !12665)
!12696 = !DILocation(line: 954, column: 21, scope: !12665)
!12697 = !DILocation(line: 955, column: 7, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12665, file: !1159, line: 955, column: 7)
!12699 = !DILocation(line: 955, column: 18, scope: !12698)
!12700 = !DILocation(line: 955, column: 25, scope: !12698)
!12701 = !DILocation(line: 955, column: 7, scope: !12665)
!12702 = !DILocation(line: 956, column: 5, scope: !12698)
!12703 = !DILocation(line: 957, column: 26, scope: !12665)
!12704 = !DILocation(line: 957, column: 3, scope: !12665)
!12705 = !DILocation(line: 957, column: 14, scope: !12665)
!12706 = !DILocation(line: 957, column: 24, scope: !12665)
!12707 = !DILocation(line: 958, column: 29, scope: !12665)
!12708 = !DILocation(line: 958, column: 40, scope: !12665)
!12709 = !DILocation(line: 958, column: 49, scope: !12665)
!12710 = !DILocation(line: 958, column: 47, scope: !12665)
!12711 = !DILocation(line: 958, column: 3, scope: !12665)
!12712 = !DILocation(line: 958, column: 14, scope: !12665)
!12713 = !DILocation(line: 958, column: 27, scope: !12665)
!12714 = !DILocation(line: 959, column: 3, scope: !12665)
!12715 = !DILocation(line: 959, column: 14, scope: !12665)
!12716 = !DILocation(line: 959, column: 29, scope: !12665)
!12717 = !DILocation(line: 960, column: 3, scope: !12665)
!12718 = !DILocation(line: 960, column: 14, scope: !12665)
!12719 = !DILocation(line: 960, column: 24, scope: !12665)
!12720 = !DILocation(line: 961, column: 23, scope: !12665)
!12721 = !DILocation(line: 961, column: 30, scope: !12665)
!12722 = !DILocation(line: 961, column: 3, scope: !12665)
!12723 = !DILocation(line: 961, column: 14, scope: !12665)
!12724 = !DILocation(line: 961, column: 21, scope: !12665)
!12725 = !DILocation(line: 962, column: 23, scope: !12665)
!12726 = !DILocation(line: 962, column: 30, scope: !12665)
!12727 = !DILocation(line: 962, column: 3, scope: !12665)
!12728 = !DILocation(line: 962, column: 14, scope: !12665)
!12729 = !DILocation(line: 962, column: 21, scope: !12665)
!12730 = !DILocation(line: 963, column: 27, scope: !12665)
!12731 = !DILocation(line: 963, column: 34, scope: !12665)
!12732 = !DILocation(line: 963, column: 3, scope: !12665)
!12733 = !DILocation(line: 963, column: 14, scope: !12665)
!12734 = !DILocation(line: 963, column: 25, scope: !12665)
!12735 = !DILocation(line: 964, column: 27, scope: !12665)
!12736 = !DILocation(line: 964, column: 34, scope: !12665)
!12737 = !DILocation(line: 964, column: 3, scope: !12665)
!12738 = !DILocation(line: 964, column: 14, scope: !12665)
!12739 = !DILocation(line: 964, column: 25, scope: !12665)
!12740 = !DILocation(line: 984, column: 32, scope: !12665)
!12741 = !DILocation(line: 984, column: 39, scope: !12665)
!12742 = !DILocation(line: 984, column: 3, scope: !12665)
!12743 = !DILocation(line: 984, column: 14, scope: !12665)
!12744 = !DILocation(line: 984, column: 30, scope: !12665)
!12745 = !DILocation(line: 986, column: 25, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12665, file: !1159, line: 986, column: 7)
!12747 = !DILocation(line: 986, column: 36, scope: !12746)
!12748 = !DILocation(line: 986, column: 7, scope: !12746)
!12749 = !DILocation(line: 986, column: 7, scope: !12665)
!12750 = !DILocation(line: 989, column: 13, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12746, file: !1159, line: 987, column: 5)
!12752 = !DILocation(line: 989, column: 20, scope: !12751)
!12753 = !DILocation(line: 989, column: 7, scope: !12751)
!12754 = !DILocation(line: 990, column: 23, scope: !12751)
!12755 = !DILocation(line: 990, column: 34, scope: !12751)
!12756 = !DILocation(line: 990, column: 7, scope: !12751)
!12757 = !DILocation(line: 990, column: 14, scope: !12751)
!12758 = !DILocation(line: 990, column: 21, scope: !12751)
!12759 = !DILocation(line: 991, column: 29, scope: !12751)
!12760 = !DILocation(line: 991, column: 40, scope: !12751)
!12761 = !DILocation(line: 991, column: 7, scope: !12751)
!12762 = !DILocation(line: 991, column: 14, scope: !12751)
!12763 = !DILocation(line: 991, column: 27, scope: !12751)
!12764 = !DILocation(line: 992, column: 26, scope: !12751)
!12765 = !DILocation(line: 992, column: 37, scope: !12751)
!12766 = !DILocation(line: 992, column: 7, scope: !12751)
!12767 = !DILocation(line: 992, column: 14, scope: !12751)
!12768 = !DILocation(line: 992, column: 24, scope: !12751)
!12769 = !DILocation(line: 993, column: 31, scope: !12751)
!12770 = !DILocation(line: 993, column: 42, scope: !12751)
!12771 = !DILocation(line: 993, column: 7, scope: !12751)
!12772 = !DILocation(line: 993, column: 14, scope: !12751)
!12773 = !DILocation(line: 993, column: 29, scope: !12751)
!12774 = !DILocation(line: 994, column: 32, scope: !12751)
!12775 = !DILocation(line: 994, column: 43, scope: !12751)
!12776 = !DILocation(line: 994, column: 7, scope: !12751)
!12777 = !DILocation(line: 994, column: 14, scope: !12751)
!12778 = !DILocation(line: 994, column: 30, scope: !12751)
!12779 = !DILocation(line: 996, column: 7, scope: !12751)
!12780 = !DILocation(line: 1012, column: 28, scope: !12665)
!12781 = !DILocation(line: 1012, column: 39, scope: !12665)
!12782 = !DILocation(line: 1012, column: 3, scope: !12665)
!12783 = !DILocation(line: 1012, column: 10, scope: !12665)
!12784 = !DILocation(line: 1012, column: 26, scope: !12665)
!12785 = !DILocation(line: 1013, column: 28, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12665, file: !1159, line: 1013, column: 7)
!12787 = !DILocation(line: 1013, column: 35, scope: !12786)
!12788 = !DILocation(line: 1013, column: 10, scope: !12786)
!12789 = !DILocation(line: 1014, column: 10, scope: !12786)
!12790 = !DILocation(line: 1014, column: 31, scope: !12786)
!12791 = !DILocation(line: 1014, column: 38, scope: !12786)
!12792 = !DILocation(line: 1014, column: 13, scope: !12786)
!12793 = !DILocation(line: 1013, column: 7, scope: !12665)
!12794 = !DILocation(line: 1015, column: 5, scope: !12786)
!12795 = !DILocation(line: 1017, column: 9, scope: !12665)
!12796 = !DILocation(line: 1017, column: 20, scope: !12665)
!12797 = !DILocation(line: 1017, column: 3, scope: !12665)
!12798 = !DILocation(line: 1018, column: 3, scope: !12665)
!12799 = !DILocation(line: 1019, column: 1, scope: !12665)
!12800 = distinct !DISubprogram(name: "transfer_entries", scope: !1159, file: !1159, line: 860, type: !1270, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12801 = !DILocalVariable(name: "dst", arg: 1, scope: !12800, file: !1159, line: 860, type: !1251)
!12802 = !DILocation(line: 860, column: 31, scope: !12800)
!12803 = !DILocalVariable(name: "src", arg: 2, scope: !12800, file: !1159, line: 860, type: !1251)
!12804 = !DILocation(line: 860, column: 48, scope: !12800)
!12805 = !DILocalVariable(name: "safe", arg: 3, scope: !12800, file: !1159, line: 860, type: !141)
!12806 = !DILocation(line: 860, column: 58, scope: !12800)
!12807 = !DILocalVariable(name: "bucket", scope: !12800, file: !1159, line: 862, type: !1162)
!12808 = !DILocation(line: 862, column: 22, scope: !12800)
!12809 = !DILocalVariable(name: "cursor", scope: !12800, file: !1159, line: 863, type: !1162)
!12810 = !DILocation(line: 863, column: 22, scope: !12800)
!12811 = !DILocalVariable(name: "next", scope: !12800, file: !1159, line: 864, type: !1162)
!12812 = !DILocation(line: 864, column: 22, scope: !12800)
!12813 = !DILocation(line: 865, column: 17, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12800, file: !1159, line: 865, column: 3)
!12815 = !DILocation(line: 865, column: 22, scope: !12814)
!12816 = !DILocation(line: 865, column: 15, scope: !12814)
!12817 = !DILocation(line: 865, column: 8, scope: !12814)
!12818 = !DILocation(line: 865, column: 30, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12814, file: !1159, line: 865, column: 3)
!12820 = !DILocation(line: 865, column: 39, scope: !12819)
!12821 = !DILocation(line: 865, column: 44, scope: !12819)
!12822 = !DILocation(line: 865, column: 37, scope: !12819)
!12823 = !DILocation(line: 865, column: 3, scope: !12814)
!12824 = !DILocation(line: 866, column: 9, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12819, file: !1159, line: 866, column: 9)
!12826 = !DILocation(line: 866, column: 17, scope: !12825)
!12827 = !DILocation(line: 866, column: 9, scope: !12819)
!12828 = !DILocalVariable(name: "data", scope: !12829, file: !1159, line: 868, type: !167)
!12829 = distinct !DILexicalBlock(scope: !12825, file: !1159, line: 867, column: 7)
!12830 = !DILocation(line: 868, column: 15, scope: !12829)
!12831 = !DILocalVariable(name: "new_bucket", scope: !12829, file: !1159, line: 869, type: !1162)
!12832 = !DILocation(line: 869, column: 28, scope: !12829)
!12833 = !DILocation(line: 877, column: 23, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12829, file: !1159, line: 877, column: 9)
!12835 = !DILocation(line: 877, column: 31, scope: !12834)
!12836 = !DILocation(line: 877, column: 21, scope: !12834)
!12837 = !DILocation(line: 877, column: 14, scope: !12834)
!12838 = !DILocation(line: 877, column: 37, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12834, file: !1159, line: 877, column: 9)
!12840 = !DILocation(line: 877, column: 9, scope: !12834)
!12841 = !DILocation(line: 879, column: 20, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12839, file: !1159, line: 878, column: 11)
!12843 = !DILocation(line: 879, column: 28, scope: !12842)
!12844 = !DILocation(line: 879, column: 18, scope: !12842)
!12845 = !DILocation(line: 880, column: 39, scope: !12842)
!12846 = !DILocation(line: 880, column: 44, scope: !12842)
!12847 = !DILocation(line: 880, column: 26, scope: !12842)
!12848 = !DILocation(line: 880, column: 24, scope: !12842)
!12849 = !DILocation(line: 882, column: 20, scope: !12842)
!12850 = !DILocation(line: 882, column: 28, scope: !12842)
!12851 = !DILocation(line: 882, column: 18, scope: !12842)
!12852 = !DILocation(line: 884, column: 17, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12842, file: !1159, line: 884, column: 17)
!12854 = !DILocation(line: 884, column: 29, scope: !12853)
!12855 = !DILocation(line: 884, column: 17, scope: !12842)
!12856 = !DILocation(line: 888, column: 32, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !1159, line: 885, column: 15)
!12858 = !DILocation(line: 888, column: 44, scope: !12857)
!12859 = !DILocation(line: 888, column: 17, scope: !12857)
!12860 = !DILocation(line: 888, column: 25, scope: !12857)
!12861 = !DILocation(line: 888, column: 30, scope: !12857)
!12862 = !DILocation(line: 889, column: 36, scope: !12857)
!12863 = !DILocation(line: 889, column: 17, scope: !12857)
!12864 = !DILocation(line: 889, column: 29, scope: !12857)
!12865 = !DILocation(line: 889, column: 34, scope: !12857)
!12866 = !DILocation(line: 890, column: 15, scope: !12857)
!12867 = !DILocation(line: 895, column: 36, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12853, file: !1159, line: 892, column: 15)
!12869 = !DILocation(line: 895, column: 17, scope: !12868)
!12870 = !DILocation(line: 895, column: 29, scope: !12868)
!12871 = !DILocation(line: 895, column: 34, scope: !12868)
!12872 = !DILocation(line: 896, column: 17, scope: !12868)
!12873 = !DILocation(line: 896, column: 22, scope: !12868)
!12874 = !DILocation(line: 896, column: 36, scope: !12868)
!12875 = !DILocation(line: 897, column: 29, scope: !12868)
!12876 = !DILocation(line: 897, column: 34, scope: !12868)
!12877 = !DILocation(line: 897, column: 17, scope: !12868)
!12878 = !DILocation(line: 899, column: 11, scope: !12842)
!12879 = !DILocation(line: 877, column: 54, scope: !12839)
!12880 = !DILocation(line: 877, column: 52, scope: !12839)
!12881 = !DILocation(line: 877, column: 9, scope: !12839)
!12882 = distinct !{!12882, !12840, !12883}
!12883 = !DILocation(line: 899, column: 11, scope: !12834)
!12884 = !DILocation(line: 903, column: 16, scope: !12829)
!12885 = !DILocation(line: 903, column: 24, scope: !12829)
!12886 = !DILocation(line: 903, column: 14, scope: !12829)
!12887 = !DILocation(line: 904, column: 9, scope: !12829)
!12888 = !DILocation(line: 904, column: 17, scope: !12829)
!12889 = !DILocation(line: 904, column: 22, scope: !12829)
!12890 = !DILocation(line: 905, column: 13, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12829, file: !1159, line: 905, column: 13)
!12892 = !DILocation(line: 905, column: 13, scope: !12829)
!12893 = !DILocation(line: 906, column: 11, scope: !12891)
!12894 = !DILocation(line: 907, column: 35, scope: !12829)
!12895 = !DILocation(line: 907, column: 40, scope: !12829)
!12896 = !DILocation(line: 907, column: 22, scope: !12829)
!12897 = !DILocation(line: 907, column: 20, scope: !12829)
!12898 = !DILocation(line: 909, column: 13, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12829, file: !1159, line: 909, column: 13)
!12900 = !DILocation(line: 909, column: 25, scope: !12899)
!12901 = !DILocation(line: 909, column: 13, scope: !12829)
!12902 = !DILocalVariable(name: "new_entry", scope: !12903, file: !1159, line: 913, type: !1162)
!12903 = distinct !DILexicalBlock(scope: !12899, file: !1159, line: 910, column: 11)
!12904 = !DILocation(line: 913, column: 32, scope: !12903)
!12905 = !DILocation(line: 913, column: 60, scope: !12903)
!12906 = !DILocation(line: 913, column: 44, scope: !12903)
!12907 = !DILocation(line: 915, column: 17, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12903, file: !1159, line: 915, column: 17)
!12909 = !DILocation(line: 915, column: 27, scope: !12908)
!12910 = !DILocation(line: 915, column: 17, scope: !12903)
!12911 = !DILocation(line: 916, column: 15, scope: !12908)
!12912 = !DILocation(line: 918, column: 31, scope: !12903)
!12913 = !DILocation(line: 918, column: 13, scope: !12903)
!12914 = !DILocation(line: 918, column: 24, scope: !12903)
!12915 = !DILocation(line: 918, column: 29, scope: !12903)
!12916 = !DILocation(line: 919, column: 31, scope: !12903)
!12917 = !DILocation(line: 919, column: 43, scope: !12903)
!12918 = !DILocation(line: 919, column: 13, scope: !12903)
!12919 = !DILocation(line: 919, column: 24, scope: !12903)
!12920 = !DILocation(line: 919, column: 29, scope: !12903)
!12921 = !DILocation(line: 920, column: 32, scope: !12903)
!12922 = !DILocation(line: 920, column: 13, scope: !12903)
!12923 = !DILocation(line: 920, column: 25, scope: !12903)
!12924 = !DILocation(line: 920, column: 30, scope: !12903)
!12925 = !DILocation(line: 921, column: 11, scope: !12903)
!12926 = !DILocation(line: 925, column: 32, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12899, file: !1159, line: 923, column: 11)
!12928 = !DILocation(line: 925, column: 13, scope: !12927)
!12929 = !DILocation(line: 925, column: 25, scope: !12927)
!12930 = !DILocation(line: 925, column: 30, scope: !12927)
!12931 = !DILocation(line: 926, column: 13, scope: !12927)
!12932 = !DILocation(line: 926, column: 18, scope: !12927)
!12933 = !DILocation(line: 926, column: 32, scope: !12927)
!12934 = !DILocation(line: 928, column: 9, scope: !12829)
!12935 = !DILocation(line: 928, column: 17, scope: !12829)
!12936 = !DILocation(line: 928, column: 22, scope: !12829)
!12937 = !DILocation(line: 929, column: 9, scope: !12829)
!12938 = !DILocation(line: 929, column: 14, scope: !12829)
!12939 = !DILocation(line: 929, column: 28, scope: !12829)
!12940 = !DILocation(line: 930, column: 7, scope: !12829)
!12941 = !DILocation(line: 865, column: 64, scope: !12819)
!12942 = !DILocation(line: 865, column: 3, scope: !12819)
!12943 = distinct !{!12943, !12823, !12944}
!12944 = !DILocation(line: 930, column: 7, scope: !12814)
!12945 = !DILocation(line: 931, column: 3, scope: !12800)
!12946 = !DILocation(line: 932, column: 1, scope: !12800)
!12947 = distinct !DISubprogram(name: "free_entry", scope: !1159, file: !1159, line: 776, type: !1272, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12948 = !DILocalVariable(name: "table", arg: 1, scope: !12947, file: !1159, line: 776, type: !1251)
!12949 = !DILocation(line: 776, column: 25, scope: !12947)
!12950 = !DILocalVariable(name: "entry", arg: 2, scope: !12947, file: !1159, line: 776, type: !1162)
!12951 = !DILocation(line: 776, column: 51, scope: !12947)
!12952 = !DILocation(line: 778, column: 3, scope: !12947)
!12953 = !DILocation(line: 778, column: 10, scope: !12947)
!12954 = !DILocation(line: 778, column: 15, scope: !12947)
!12955 = !DILocation(line: 779, column: 17, scope: !12947)
!12956 = !DILocation(line: 779, column: 24, scope: !12947)
!12957 = !DILocation(line: 779, column: 3, scope: !12947)
!12958 = !DILocation(line: 779, column: 10, scope: !12947)
!12959 = !DILocation(line: 779, column: 15, scope: !12947)
!12960 = !DILocation(line: 780, column: 28, scope: !12947)
!12961 = !DILocation(line: 780, column: 3, scope: !12947)
!12962 = !DILocation(line: 780, column: 10, scope: !12947)
!12963 = !DILocation(line: 780, column: 26, scope: !12947)
!12964 = !DILocation(line: 781, column: 1, scope: !12947)
!12965 = distinct !DISubprogram(name: "allocate_entry", scope: !1159, file: !1159, line: 751, type: !1277, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12966 = !DILocalVariable(name: "table", arg: 1, scope: !12965, file: !1159, line: 751, type: !1251)
!12967 = !DILocation(line: 751, column: 29, scope: !12965)
!12968 = !DILocalVariable(name: "new", scope: !12965, file: !1159, line: 753, type: !1162)
!12969 = !DILocation(line: 753, column: 22, scope: !12965)
!12970 = !DILocation(line: 755, column: 7, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12965, file: !1159, line: 755, column: 7)
!12972 = !DILocation(line: 755, column: 14, scope: !12971)
!12973 = !DILocation(line: 755, column: 7, scope: !12965)
!12974 = !DILocation(line: 757, column: 13, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12971, file: !1159, line: 756, column: 5)
!12976 = !DILocation(line: 757, column: 20, scope: !12975)
!12977 = !DILocation(line: 757, column: 11, scope: !12975)
!12978 = !DILocation(line: 758, column: 32, scope: !12975)
!12979 = !DILocation(line: 758, column: 37, scope: !12975)
!12980 = !DILocation(line: 758, column: 7, scope: !12975)
!12981 = !DILocation(line: 758, column: 14, scope: !12975)
!12982 = !DILocation(line: 758, column: 30, scope: !12975)
!12983 = !DILocation(line: 759, column: 5, scope: !12975)
!12984 = !DILocation(line: 765, column: 13, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12971, file: !1159, line: 761, column: 5)
!12986 = !DILocation(line: 765, column: 11, scope: !12985)
!12987 = !DILocation(line: 769, column: 10, scope: !12965)
!12988 = !DILocation(line: 769, column: 3, scope: !12965)
!12989 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1159, file: !1159, line: 1038, type: !1256, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12990 = !DILocalVariable(name: "table", arg: 1, scope: !12989, file: !1159, line: 1038, type: !1251)
!12991 = !DILocation(line: 1038, column: 36, scope: !12989)
!12992 = !DILocalVariable(name: "entry", arg: 2, scope: !12989, file: !1159, line: 1038, type: !176)
!12993 = !DILocation(line: 1038, column: 55, scope: !12989)
!12994 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12989, file: !1159, line: 1039, type: !182)
!12995 = !DILocation(line: 1039, column: 37, scope: !12989)
!12996 = !DILocalVariable(name: "data", scope: !12989, file: !1159, line: 1041, type: !167)
!12997 = !DILocation(line: 1041, column: 9, scope: !12989)
!12998 = !DILocalVariable(name: "bucket", scope: !12989, file: !1159, line: 1042, type: !1162)
!12999 = !DILocation(line: 1042, column: 22, scope: !12989)
!13000 = !DILocation(line: 1047, column: 9, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12989, file: !1159, line: 1047, column: 7)
!13002 = !DILocation(line: 1047, column: 7, scope: !12989)
!13003 = !DILocation(line: 1048, column: 5, scope: !13001)
!13004 = !DILocation(line: 1051, column: 32, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12989, file: !1159, line: 1051, column: 7)
!13006 = !DILocation(line: 1051, column: 39, scope: !13005)
!13007 = !DILocation(line: 1051, column: 15, scope: !13005)
!13008 = !DILocation(line: 1051, column: 13, scope: !13005)
!13009 = !DILocation(line: 1051, column: 63, scope: !13005)
!13010 = !DILocation(line: 1051, column: 7, scope: !12989)
!13011 = !DILocation(line: 1053, column: 11, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !1159, line: 1053, column: 11)
!13013 = distinct !DILexicalBlock(scope: !13005, file: !1159, line: 1052, column: 5)
!13014 = !DILocation(line: 1053, column: 11, scope: !13013)
!13015 = !DILocation(line: 1054, column: 24, scope: !13012)
!13016 = !DILocation(line: 1054, column: 10, scope: !13012)
!13017 = !DILocation(line: 1054, column: 22, scope: !13012)
!13018 = !DILocation(line: 1054, column: 9, scope: !13012)
!13019 = !DILocation(line: 1055, column: 7, scope: !13013)
!13020 = !DILocation(line: 1063, column: 7, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !12989, file: !1159, line: 1063, column: 7)
!13022 = !DILocation(line: 1063, column: 14, scope: !13021)
!13023 = !DILocation(line: 1064, column: 9, scope: !13021)
!13024 = !DILocation(line: 1064, column: 16, scope: !13021)
!13025 = !DILocation(line: 1064, column: 24, scope: !13021)
!13026 = !DILocation(line: 1064, column: 43, scope: !13021)
!13027 = !DILocation(line: 1064, column: 50, scope: !13021)
!13028 = !DILocation(line: 1064, column: 41, scope: !13021)
!13029 = !DILocation(line: 1064, column: 7, scope: !13021)
!13030 = !DILocation(line: 1063, column: 7, scope: !12989)
!13031 = !DILocation(line: 1068, column: 21, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13021, file: !1159, line: 1065, column: 5)
!13033 = !DILocation(line: 1068, column: 7, scope: !13032)
!13034 = !DILocation(line: 1069, column: 11, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !1159, line: 1069, column: 11)
!13036 = !DILocation(line: 1069, column: 18, scope: !13035)
!13037 = !DILocation(line: 1070, column: 13, scope: !13035)
!13038 = !DILocation(line: 1070, column: 20, scope: !13035)
!13039 = !DILocation(line: 1070, column: 28, scope: !13035)
!13040 = !DILocation(line: 1070, column: 47, scope: !13035)
!13041 = !DILocation(line: 1070, column: 54, scope: !13035)
!13042 = !DILocation(line: 1070, column: 45, scope: !13035)
!13043 = !DILocation(line: 1070, column: 11, scope: !13035)
!13044 = !DILocation(line: 1069, column: 11, scope: !13032)
!13045 = !DILocalVariable(name: "tuning", scope: !13046, file: !1159, line: 1072, type: !1174)
!13046 = distinct !DILexicalBlock(scope: !13035, file: !1159, line: 1071, column: 9)
!13047 = !DILocation(line: 1072, column: 30, scope: !13046)
!13048 = !DILocation(line: 1072, column: 39, scope: !13046)
!13049 = !DILocation(line: 1072, column: 46, scope: !13046)
!13050 = !DILocalVariable(name: "candidate", scope: !13046, file: !1159, line: 1073, type: !1180)
!13051 = !DILocation(line: 1073, column: 17, scope: !13046)
!13052 = !DILocation(line: 1074, column: 14, scope: !13046)
!13053 = !DILocation(line: 1074, column: 22, scope: !13046)
!13054 = !DILocation(line: 1075, column: 17, scope: !13046)
!13055 = !DILocation(line: 1075, column: 24, scope: !13046)
!13056 = !DILocation(line: 1075, column: 36, scope: !13046)
!13057 = !DILocation(line: 1075, column: 44, scope: !13046)
!13058 = !DILocation(line: 1075, column: 34, scope: !13046)
!13059 = !DILocation(line: 1076, column: 17, scope: !13046)
!13060 = !DILocation(line: 1076, column: 24, scope: !13046)
!13061 = !DILocation(line: 1076, column: 36, scope: !13046)
!13062 = !DILocation(line: 1076, column: 44, scope: !13046)
!13063 = !DILocation(line: 1076, column: 34, scope: !13046)
!13064 = !DILocation(line: 1077, column: 19, scope: !13046)
!13065 = !DILocation(line: 1077, column: 27, scope: !13046)
!13066 = !DILocation(line: 1077, column: 17, scope: !13046)
!13067 = !DILocation(line: 1079, column: 27, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13046, file: !1159, line: 1079, column: 15)
!13069 = !DILocation(line: 1079, column: 24, scope: !13068)
!13070 = !DILocation(line: 1079, column: 15, scope: !13046)
!13071 = !DILocation(line: 1080, column: 13, scope: !13068)
!13072 = !DILocation(line: 1083, column: 29, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13046, file: !1159, line: 1083, column: 15)
!13074 = !DILocation(line: 1083, column: 36, scope: !13073)
!13075 = !DILocation(line: 1083, column: 16, scope: !13073)
!13076 = !DILocation(line: 1083, column: 15, scope: !13046)
!13077 = !DILocation(line: 1084, column: 13, scope: !13073)
!13078 = !DILocation(line: 1087, column: 32, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13046, file: !1159, line: 1087, column: 15)
!13080 = !DILocation(line: 1087, column: 39, scope: !13079)
!13081 = !DILocation(line: 1087, column: 15, scope: !13079)
!13082 = !DILocation(line: 1087, column: 62, scope: !13079)
!13083 = !DILocation(line: 1087, column: 15, scope: !13046)
!13084 = !DILocation(line: 1088, column: 13, scope: !13079)
!13085 = !DILocation(line: 1089, column: 9, scope: !13046)
!13086 = !DILocation(line: 1090, column: 5, scope: !13032)
!13087 = !DILocation(line: 1094, column: 7, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !12989, file: !1159, line: 1094, column: 7)
!13089 = !DILocation(line: 1094, column: 15, scope: !13088)
!13090 = !DILocation(line: 1094, column: 7, scope: !12989)
!13091 = !DILocalVariable(name: "new_entry", scope: !13092, file: !1159, line: 1096, type: !1162)
!13092 = distinct !DILexicalBlock(scope: !13088, file: !1159, line: 1095, column: 5)
!13093 = !DILocation(line: 1096, column: 26, scope: !13092)
!13094 = !DILocation(line: 1096, column: 54, scope: !13092)
!13095 = !DILocation(line: 1096, column: 38, scope: !13092)
!13096 = !DILocation(line: 1098, column: 11, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13092, file: !1159, line: 1098, column: 11)
!13098 = !DILocation(line: 1098, column: 21, scope: !13097)
!13099 = !DILocation(line: 1098, column: 11, scope: !13092)
!13100 = !DILocation(line: 1099, column: 9, scope: !13097)
!13101 = !DILocation(line: 1103, column: 34, scope: !13092)
!13102 = !DILocation(line: 1103, column: 7, scope: !13092)
!13103 = !DILocation(line: 1103, column: 18, scope: !13092)
!13104 = !DILocation(line: 1103, column: 23, scope: !13092)
!13105 = !DILocation(line: 1104, column: 25, scope: !13092)
!13106 = !DILocation(line: 1104, column: 33, scope: !13092)
!13107 = !DILocation(line: 1104, column: 7, scope: !13092)
!13108 = !DILocation(line: 1104, column: 18, scope: !13092)
!13109 = !DILocation(line: 1104, column: 23, scope: !13092)
!13110 = !DILocation(line: 1105, column: 22, scope: !13092)
!13111 = !DILocation(line: 1105, column: 7, scope: !13092)
!13112 = !DILocation(line: 1105, column: 15, scope: !13092)
!13113 = !DILocation(line: 1105, column: 20, scope: !13092)
!13114 = !DILocation(line: 1106, column: 7, scope: !13092)
!13115 = !DILocation(line: 1106, column: 14, scope: !13092)
!13116 = !DILocation(line: 1106, column: 23, scope: !13092)
!13117 = !DILocation(line: 1107, column: 7, scope: !13092)
!13118 = !DILocation(line: 1112, column: 27, scope: !12989)
!13119 = !DILocation(line: 1112, column: 3, scope: !12989)
!13120 = !DILocation(line: 1112, column: 11, scope: !12989)
!13121 = !DILocation(line: 1112, column: 16, scope: !12989)
!13122 = !DILocation(line: 1113, column: 3, scope: !12989)
!13123 = !DILocation(line: 1113, column: 10, scope: !12989)
!13124 = !DILocation(line: 1113, column: 19, scope: !12989)
!13125 = !DILocation(line: 1114, column: 3, scope: !12989)
!13126 = !DILocation(line: 1114, column: 10, scope: !12989)
!13127 = !DILocation(line: 1114, column: 24, scope: !12989)
!13128 = !DILocation(line: 1116, column: 3, scope: !12989)
!13129 = !DILocation(line: 1117, column: 1, scope: !12989)
!13130 = distinct !DISubprogram(name: "hash_find_entry", scope: !1159, file: !1159, line: 790, type: !1274, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13131 = !DILocalVariable(name: "table", arg: 1, scope: !13130, file: !1159, line: 790, type: !1251)
!13132 = !DILocation(line: 790, column: 30, scope: !13130)
!13133 = !DILocalVariable(name: "entry", arg: 2, scope: !13130, file: !1159, line: 790, type: !176)
!13134 = !DILocation(line: 790, column: 49, scope: !13130)
!13135 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13130, file: !1159, line: 791, type: !1276)
!13136 = !DILocation(line: 791, column: 38, scope: !13130)
!13137 = !DILocalVariable(name: "delete", arg: 4, scope: !13130, file: !1159, line: 791, type: !141)
!13138 = !DILocation(line: 791, column: 56, scope: !13130)
!13139 = !DILocalVariable(name: "bucket", scope: !13130, file: !1159, line: 793, type: !1162)
!13140 = !DILocation(line: 793, column: 22, scope: !13130)
!13141 = !DILocation(line: 793, column: 44, scope: !13130)
!13142 = !DILocation(line: 793, column: 51, scope: !13130)
!13143 = !DILocation(line: 793, column: 31, scope: !13130)
!13144 = !DILocalVariable(name: "cursor", scope: !13130, file: !1159, line: 794, type: !1162)
!13145 = !DILocation(line: 794, column: 22, scope: !13130)
!13146 = !DILocation(line: 796, column: 18, scope: !13130)
!13147 = !DILocation(line: 796, column: 4, scope: !13130)
!13148 = !DILocation(line: 796, column: 16, scope: !13130)
!13149 = !DILocation(line: 799, column: 7, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13130, file: !1159, line: 799, column: 7)
!13151 = !DILocation(line: 799, column: 15, scope: !13150)
!13152 = !DILocation(line: 799, column: 20, scope: !13150)
!13153 = !DILocation(line: 799, column: 7, scope: !13130)
!13154 = !DILocation(line: 800, column: 5, scope: !13150)
!13155 = !DILocation(line: 803, column: 7, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13130, file: !1159, line: 803, column: 7)
!13157 = !DILocation(line: 803, column: 16, scope: !13156)
!13158 = !DILocation(line: 803, column: 24, scope: !13156)
!13159 = !DILocation(line: 803, column: 13, scope: !13156)
!13160 = !DILocation(line: 803, column: 29, scope: !13156)
!13161 = !DILocation(line: 803, column: 32, scope: !13156)
!13162 = !DILocation(line: 803, column: 39, scope: !13156)
!13163 = !DILocation(line: 803, column: 51, scope: !13156)
!13164 = !DILocation(line: 803, column: 58, scope: !13156)
!13165 = !DILocation(line: 803, column: 66, scope: !13156)
!13166 = !DILocation(line: 803, column: 7, scope: !13130)
!13167 = !DILocalVariable(name: "data", scope: !13168, file: !1159, line: 805, type: !167)
!13168 = distinct !DILexicalBlock(scope: !13156, file: !1159, line: 804, column: 5)
!13169 = !DILocation(line: 805, column: 13, scope: !13168)
!13170 = !DILocation(line: 805, column: 20, scope: !13168)
!13171 = !DILocation(line: 805, column: 28, scope: !13168)
!13172 = !DILocation(line: 807, column: 11, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13168, file: !1159, line: 807, column: 11)
!13174 = !DILocation(line: 807, column: 11, scope: !13168)
!13175 = !DILocation(line: 809, column: 15, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13177, file: !1159, line: 809, column: 15)
!13177 = distinct !DILexicalBlock(scope: !13173, file: !1159, line: 808, column: 9)
!13178 = !DILocation(line: 809, column: 23, scope: !13176)
!13179 = !DILocation(line: 809, column: 15, scope: !13177)
!13180 = !DILocalVariable(name: "next", scope: !13181, file: !1159, line: 811, type: !1162)
!13181 = distinct !DILexicalBlock(scope: !13176, file: !1159, line: 810, column: 13)
!13182 = !DILocation(line: 811, column: 34, scope: !13181)
!13183 = !DILocation(line: 811, column: 41, scope: !13181)
!13184 = !DILocation(line: 811, column: 49, scope: !13181)
!13185 = !DILocation(line: 815, column: 16, scope: !13181)
!13186 = !DILocation(line: 815, column: 26, scope: !13181)
!13187 = !DILocation(line: 815, column: 25, scope: !13181)
!13188 = !{i64 0, i64 8, !2442, i64 8, i64 8, !2442}
!13189 = !DILocation(line: 816, column: 27, scope: !13181)
!13190 = !DILocation(line: 816, column: 34, scope: !13181)
!13191 = !DILocation(line: 816, column: 15, scope: !13181)
!13192 = !DILocation(line: 817, column: 13, scope: !13181)
!13193 = !DILocation(line: 820, column: 15, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13176, file: !1159, line: 819, column: 13)
!13195 = !DILocation(line: 820, column: 23, scope: !13194)
!13196 = !DILocation(line: 820, column: 28, scope: !13194)
!13197 = !DILocation(line: 822, column: 9, scope: !13177)
!13198 = !DILocation(line: 824, column: 14, scope: !13168)
!13199 = !DILocation(line: 824, column: 7, scope: !13168)
!13200 = !DILocation(line: 828, column: 17, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13130, file: !1159, line: 828, column: 3)
!13202 = !DILocation(line: 828, column: 15, scope: !13201)
!13203 = !DILocation(line: 828, column: 8, scope: !13201)
!13204 = !DILocation(line: 828, column: 25, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13201, file: !1159, line: 828, column: 3)
!13206 = !DILocation(line: 828, column: 33, scope: !13205)
!13207 = !DILocation(line: 828, column: 3, scope: !13201)
!13208 = !DILocation(line: 830, column: 11, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !1159, line: 830, column: 11)
!13210 = distinct !DILexicalBlock(scope: !13205, file: !1159, line: 829, column: 5)
!13211 = !DILocation(line: 830, column: 20, scope: !13209)
!13212 = !DILocation(line: 830, column: 28, scope: !13209)
!13213 = !DILocation(line: 830, column: 34, scope: !13209)
!13214 = !DILocation(line: 830, column: 17, scope: !13209)
!13215 = !DILocation(line: 831, column: 11, scope: !13209)
!13216 = !DILocation(line: 831, column: 14, scope: !13209)
!13217 = !DILocation(line: 831, column: 21, scope: !13209)
!13218 = !DILocation(line: 831, column: 33, scope: !13209)
!13219 = !DILocation(line: 831, column: 40, scope: !13209)
!13220 = !DILocation(line: 831, column: 48, scope: !13209)
!13221 = !DILocation(line: 831, column: 54, scope: !13209)
!13222 = !DILocation(line: 830, column: 11, scope: !13210)
!13223 = !DILocalVariable(name: "data", scope: !13224, file: !1159, line: 833, type: !167)
!13224 = distinct !DILexicalBlock(scope: !13209, file: !1159, line: 832, column: 9)
!13225 = !DILocation(line: 833, column: 17, scope: !13224)
!13226 = !DILocation(line: 833, column: 24, scope: !13224)
!13227 = !DILocation(line: 833, column: 32, scope: !13224)
!13228 = !DILocation(line: 833, column: 38, scope: !13224)
!13229 = !DILocation(line: 835, column: 15, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13224, file: !1159, line: 835, column: 15)
!13231 = !DILocation(line: 835, column: 15, scope: !13224)
!13232 = !DILocalVariable(name: "next", scope: !13233, file: !1159, line: 837, type: !1162)
!13233 = distinct !DILexicalBlock(scope: !13230, file: !1159, line: 836, column: 13)
!13234 = !DILocation(line: 837, column: 34, scope: !13233)
!13235 = !DILocation(line: 837, column: 41, scope: !13233)
!13236 = !DILocation(line: 837, column: 49, scope: !13233)
!13237 = !DILocation(line: 841, column: 30, scope: !13233)
!13238 = !DILocation(line: 841, column: 36, scope: !13233)
!13239 = !DILocation(line: 841, column: 15, scope: !13233)
!13240 = !DILocation(line: 841, column: 23, scope: !13233)
!13241 = !DILocation(line: 841, column: 28, scope: !13233)
!13242 = !DILocation(line: 842, column: 27, scope: !13233)
!13243 = !DILocation(line: 842, column: 34, scope: !13233)
!13244 = !DILocation(line: 842, column: 15, scope: !13233)
!13245 = !DILocation(line: 843, column: 13, scope: !13233)
!13246 = !DILocation(line: 845, column: 18, scope: !13224)
!13247 = !DILocation(line: 845, column: 11, scope: !13224)
!13248 = !DILocation(line: 847, column: 5, scope: !13210)
!13249 = !DILocation(line: 828, column: 48, scope: !13205)
!13250 = !DILocation(line: 828, column: 56, scope: !13205)
!13251 = !DILocation(line: 828, column: 46, scope: !13205)
!13252 = !DILocation(line: 828, column: 3, scope: !13205)
!13253 = distinct !{!13253, !13207, !13254}
!13254 = !DILocation(line: 847, column: 5, scope: !13201)
!13255 = !DILocation(line: 850, column: 3, scope: !13130)
!13256 = !DILocation(line: 851, column: 1, scope: !13130)
!13257 = distinct !DISubprogram(name: "hash_insert", scope: !1159, file: !1159, line: 1126, type: !1258, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13258 = !DILocalVariable(name: "table", arg: 1, scope: !13257, file: !1159, line: 1126, type: !1251)
!13259 = !DILocation(line: 1126, column: 26, scope: !13257)
!13260 = !DILocalVariable(name: "entry", arg: 2, scope: !13257, file: !1159, line: 1126, type: !176)
!13261 = !DILocation(line: 1126, column: 45, scope: !13257)
!13262 = !DILocalVariable(name: "matched_ent", scope: !13257, file: !1159, line: 1128, type: !176)
!13263 = !DILocation(line: 1128, column: 15, scope: !13257)
!13264 = !DILocalVariable(name: "err", scope: !13257, file: !1159, line: 1129, type: !27)
!13265 = !DILocation(line: 1129, column: 7, scope: !13257)
!13266 = !DILocation(line: 1129, column: 36, scope: !13257)
!13267 = !DILocation(line: 1129, column: 43, scope: !13257)
!13268 = !DILocation(line: 1129, column: 13, scope: !13257)
!13269 = !DILocation(line: 1130, column: 11, scope: !13257)
!13270 = !DILocation(line: 1130, column: 15, scope: !13257)
!13271 = !DILocation(line: 1132, column: 23, scope: !13257)
!13272 = !DILocation(line: 1132, column: 27, scope: !13257)
!13273 = !DILocation(line: 1132, column: 34, scope: !13257)
!13274 = !DILocation(line: 1132, column: 48, scope: !13257)
!13275 = !DILocation(line: 1130, column: 3, scope: !13257)
!13276 = distinct !DISubprogram(name: "hash_delete", scope: !1159, file: !1159, line: 1140, type: !1258, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13277 = !DILocalVariable(name: "table", arg: 1, scope: !13276, file: !1159, line: 1140, type: !1251)
!13278 = !DILocation(line: 1140, column: 26, scope: !13276)
!13279 = !DILocalVariable(name: "entry", arg: 2, scope: !13276, file: !1159, line: 1140, type: !176)
!13280 = !DILocation(line: 1140, column: 45, scope: !13276)
!13281 = !DILocalVariable(name: "data", scope: !13276, file: !1159, line: 1142, type: !167)
!13282 = !DILocation(line: 1142, column: 9, scope: !13276)
!13283 = !DILocalVariable(name: "bucket", scope: !13276, file: !1159, line: 1143, type: !1162)
!13284 = !DILocation(line: 1143, column: 22, scope: !13276)
!13285 = !DILocation(line: 1145, column: 27, scope: !13276)
!13286 = !DILocation(line: 1145, column: 34, scope: !13276)
!13287 = !DILocation(line: 1145, column: 10, scope: !13276)
!13288 = !DILocation(line: 1145, column: 8, scope: !13276)
!13289 = !DILocation(line: 1146, column: 8, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13276, file: !1159, line: 1146, column: 7)
!13291 = !DILocation(line: 1146, column: 7, scope: !13276)
!13292 = !DILocation(line: 1147, column: 5, scope: !13290)
!13293 = !DILocation(line: 1149, column: 3, scope: !13276)
!13294 = !DILocation(line: 1149, column: 10, scope: !13276)
!13295 = !DILocation(line: 1149, column: 19, scope: !13276)
!13296 = !DILocation(line: 1150, column: 8, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13276, file: !1159, line: 1150, column: 7)
!13298 = !DILocation(line: 1150, column: 16, scope: !13297)
!13299 = !DILocation(line: 1150, column: 7, scope: !13276)
!13300 = !DILocation(line: 1152, column: 7, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13297, file: !1159, line: 1151, column: 5)
!13302 = !DILocation(line: 1152, column: 14, scope: !13301)
!13303 = !DILocation(line: 1152, column: 28, scope: !13301)
!13304 = !DILocation(line: 1157, column: 11, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13301, file: !1159, line: 1157, column: 11)
!13306 = !DILocation(line: 1157, column: 18, scope: !13305)
!13307 = !DILocation(line: 1158, column: 13, scope: !13305)
!13308 = !DILocation(line: 1158, column: 20, scope: !13305)
!13309 = !DILocation(line: 1158, column: 28, scope: !13305)
!13310 = !DILocation(line: 1158, column: 47, scope: !13305)
!13311 = !DILocation(line: 1158, column: 54, scope: !13305)
!13312 = !DILocation(line: 1158, column: 45, scope: !13305)
!13313 = !DILocation(line: 1158, column: 11, scope: !13305)
!13314 = !DILocation(line: 1157, column: 11, scope: !13301)
!13315 = !DILocation(line: 1162, column: 25, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13305, file: !1159, line: 1159, column: 9)
!13317 = !DILocation(line: 1162, column: 11, scope: !13316)
!13318 = !DILocation(line: 1163, column: 15, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13316, file: !1159, line: 1163, column: 15)
!13320 = !DILocation(line: 1163, column: 22, scope: !13319)
!13321 = !DILocation(line: 1164, column: 17, scope: !13319)
!13322 = !DILocation(line: 1164, column: 24, scope: !13319)
!13323 = !DILocation(line: 1164, column: 32, scope: !13319)
!13324 = !DILocation(line: 1164, column: 51, scope: !13319)
!13325 = !DILocation(line: 1164, column: 58, scope: !13319)
!13326 = !DILocation(line: 1164, column: 49, scope: !13319)
!13327 = !DILocation(line: 1164, column: 15, scope: !13319)
!13328 = !DILocation(line: 1163, column: 15, scope: !13316)
!13329 = !DILocalVariable(name: "tuning", scope: !13330, file: !1159, line: 1166, type: !1174)
!13330 = distinct !DILexicalBlock(scope: !13319, file: !1159, line: 1165, column: 13)
!13331 = !DILocation(line: 1166, column: 34, scope: !13330)
!13332 = !DILocation(line: 1166, column: 43, scope: !13330)
!13333 = !DILocation(line: 1166, column: 50, scope: !13330)
!13334 = !DILocalVariable(name: "candidate", scope: !13330, file: !1159, line: 1167, type: !149)
!13335 = !DILocation(line: 1167, column: 22, scope: !13330)
!13336 = !DILocation(line: 1168, column: 18, scope: !13330)
!13337 = !DILocation(line: 1168, column: 26, scope: !13330)
!13338 = !DILocation(line: 1169, column: 20, scope: !13330)
!13339 = !DILocation(line: 1169, column: 27, scope: !13330)
!13340 = !DILocation(line: 1169, column: 39, scope: !13330)
!13341 = !DILocation(line: 1169, column: 47, scope: !13330)
!13342 = !DILocation(line: 1169, column: 37, scope: !13330)
!13343 = !DILocation(line: 1170, column: 21, scope: !13330)
!13344 = !DILocation(line: 1170, column: 28, scope: !13330)
!13345 = !DILocation(line: 1170, column: 40, scope: !13330)
!13346 = !DILocation(line: 1170, column: 48, scope: !13330)
!13347 = !DILocation(line: 1170, column: 38, scope: !13330)
!13348 = !DILocation(line: 1171, column: 23, scope: !13330)
!13349 = !DILocation(line: 1171, column: 31, scope: !13330)
!13350 = !DILocation(line: 1171, column: 21, scope: !13330)
!13351 = !DILocation(line: 1168, column: 17, scope: !13330)
!13352 = !DILocation(line: 1173, column: 33, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13330, file: !1159, line: 1173, column: 19)
!13354 = !DILocation(line: 1173, column: 40, scope: !13353)
!13355 = !DILocation(line: 1173, column: 20, scope: !13353)
!13356 = !DILocation(line: 1173, column: 19, scope: !13330)
!13357 = !DILocalVariable(name: "cursor", scope: !13358, file: !1159, line: 1181, type: !1162)
!13358 = distinct !DILexicalBlock(scope: !13353, file: !1159, line: 1174, column: 17)
!13359 = !DILocation(line: 1181, column: 38, scope: !13358)
!13360 = !DILocation(line: 1181, column: 47, scope: !13358)
!13361 = !DILocation(line: 1181, column: 54, scope: !13358)
!13362 = !DILocalVariable(name: "next", scope: !13358, file: !1159, line: 1182, type: !1162)
!13363 = !DILocation(line: 1182, column: 38, scope: !13358)
!13364 = !DILocation(line: 1183, column: 19, scope: !13358)
!13365 = !DILocation(line: 1183, column: 26, scope: !13358)
!13366 = !DILocation(line: 1185, column: 30, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13358, file: !1159, line: 1184, column: 21)
!13368 = !DILocation(line: 1185, column: 38, scope: !13367)
!13369 = !DILocation(line: 1185, column: 28, scope: !13367)
!13370 = !DILocation(line: 1186, column: 29, scope: !13367)
!13371 = !DILocation(line: 1186, column: 23, scope: !13367)
!13372 = !DILocation(line: 1187, column: 32, scope: !13367)
!13373 = !DILocation(line: 1187, column: 30, scope: !13367)
!13374 = distinct !{!13374, !13364, !13375}
!13375 = !DILocation(line: 1188, column: 21, scope: !13358)
!13376 = !DILocation(line: 1189, column: 19, scope: !13358)
!13377 = !DILocation(line: 1189, column: 26, scope: !13358)
!13378 = !DILocation(line: 1189, column: 42, scope: !13358)
!13379 = !DILocation(line: 1191, column: 17, scope: !13358)
!13380 = !DILocation(line: 1192, column: 13, scope: !13330)
!13381 = !DILocation(line: 1193, column: 9, scope: !13316)
!13382 = !DILocation(line: 1194, column: 5, scope: !13301)
!13383 = !DILocation(line: 1196, column: 10, scope: !13276)
!13384 = !DILocation(line: 1196, column: 3, scope: !13276)
!13385 = !DILocation(line: 1197, column: 1, scope: !13276)
!13386 = distinct !DISubprogram(name: "triple_hash", scope: !13387, file: !13387, line: 34, type: !333, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13387 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!13388 = !DILocalVariable(name: "x", arg: 1, scope: !13386, file: !13387, line: 34, type: !176)
!13389 = !DILocation(line: 34, column: 26, scope: !13386)
!13390 = !DILocalVariable(name: "table_size", arg: 2, scope: !13386, file: !13387, line: 34, type: !149)
!13391 = !DILocation(line: 34, column: 36, scope: !13386)
!13392 = !DILocalVariable(name: "p", scope: !13386, file: !13387, line: 36, type: !1846)
!13393 = !DILocation(line: 36, column: 26, scope: !13386)
!13394 = !DILocation(line: 36, column: 30, scope: !13386)
!13395 = !DILocalVariable(name: "tmp", scope: !13386, file: !13387, line: 37, type: !149)
!13396 = !DILocation(line: 37, column: 10, scope: !13386)
!13397 = !DILocation(line: 37, column: 26, scope: !13386)
!13398 = !DILocation(line: 37, column: 29, scope: !13386)
!13399 = !DILocation(line: 37, column: 35, scope: !13386)
!13400 = !DILocation(line: 37, column: 16, scope: !13386)
!13401 = !DILocation(line: 40, column: 11, scope: !13386)
!13402 = !DILocation(line: 40, column: 17, scope: !13386)
!13403 = !DILocation(line: 40, column: 20, scope: !13386)
!13404 = !DILocation(line: 40, column: 15, scope: !13386)
!13405 = !DILocation(line: 40, column: 30, scope: !13386)
!13406 = !DILocation(line: 40, column: 28, scope: !13386)
!13407 = !DILocation(line: 40, column: 3, scope: !13386)
!13408 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13387, file: !13387, line: 45, type: !333, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13409 = !DILocalVariable(name: "x", arg: 1, scope: !13408, file: !13387, line: 45, type: !176)
!13410 = !DILocation(line: 45, column: 34, scope: !13408)
!13411 = !DILocalVariable(name: "table_size", arg: 2, scope: !13408, file: !13387, line: 45, type: !149)
!13412 = !DILocation(line: 45, column: 44, scope: !13408)
!13413 = !DILocalVariable(name: "p", scope: !13408, file: !13387, line: 47, type: !1846)
!13414 = !DILocation(line: 47, column: 26, scope: !13408)
!13415 = !DILocation(line: 47, column: 30, scope: !13408)
!13416 = !DILocation(line: 50, column: 10, scope: !13408)
!13417 = !DILocation(line: 50, column: 13, scope: !13408)
!13418 = !DILocation(line: 50, column: 22, scope: !13408)
!13419 = !DILocation(line: 50, column: 20, scope: !13408)
!13420 = !DILocation(line: 50, column: 3, scope: !13408)
!13421 = distinct !DISubprogram(name: "triple_compare", scope: !13387, file: !13387, line: 55, type: !337, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13422 = !DILocalVariable(name: "x", arg: 1, scope: !13421, file: !13387, line: 55, type: !176)
!13423 = !DILocation(line: 55, column: 29, scope: !13421)
!13424 = !DILocalVariable(name: "y", arg: 2, scope: !13421, file: !13387, line: 55, type: !176)
!13425 = !DILocation(line: 55, column: 44, scope: !13421)
!13426 = !DILocalVariable(name: "a", scope: !13421, file: !13387, line: 57, type: !1846)
!13427 = !DILocation(line: 57, column: 26, scope: !13421)
!13428 = !DILocation(line: 57, column: 30, scope: !13421)
!13429 = !DILocalVariable(name: "b", scope: !13421, file: !13387, line: 58, type: !1846)
!13430 = !DILocation(line: 58, column: 26, scope: !13421)
!13431 = !DILocation(line: 58, column: 30, scope: !13421)
!13432 = !DILocation(line: 59, column: 11, scope: !13421)
!13433 = !DILocation(line: 59, column: 31, scope: !13421)
!13434 = !DILocation(line: 59, column: 45, scope: !13421)
!13435 = !DILocation(line: 59, column: 48, scope: !13421)
!13436 = !DILocation(line: 59, column: 54, scope: !13421)
!13437 = !DILocation(line: 59, column: 57, scope: !13421)
!13438 = !DILocation(line: 59, column: 34, scope: !13421)
!13439 = !DILocation(line: 0, scope: !13421)
!13440 = !DILocation(line: 59, column: 10, scope: !13421)
!13441 = !DILocation(line: 59, column: 3, scope: !13421)
!13442 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13387, file: !13387, line: 63, type: !337, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13443 = !DILocalVariable(name: "x", arg: 1, scope: !13442, file: !13387, line: 63, type: !176)
!13444 = !DILocation(line: 63, column: 37, scope: !13442)
!13445 = !DILocalVariable(name: "y", arg: 2, scope: !13442, file: !13387, line: 63, type: !176)
!13446 = !DILocation(line: 63, column: 52, scope: !13442)
!13447 = !DILocalVariable(name: "a", scope: !13442, file: !13387, line: 65, type: !1846)
!13448 = !DILocation(line: 65, column: 26, scope: !13442)
!13449 = !DILocation(line: 65, column: 30, scope: !13442)
!13450 = !DILocalVariable(name: "b", scope: !13442, file: !13387, line: 66, type: !1846)
!13451 = !DILocation(line: 66, column: 26, scope: !13442)
!13452 = !DILocation(line: 66, column: 30, scope: !13442)
!13453 = !DILocation(line: 67, column: 11, scope: !13442)
!13454 = !DILocation(line: 67, column: 31, scope: !13442)
!13455 = !DILocation(line: 67, column: 34, scope: !13442)
!13456 = !DILocation(line: 0, scope: !13442)
!13457 = !DILocation(line: 67, column: 10, scope: !13442)
!13458 = !DILocation(line: 67, column: 3, scope: !13442)
!13459 = distinct !DISubprogram(name: "triple_free", scope: !13387, file: !13387, line: 72, type: !339, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13460 = !DILocalVariable(name: "x", arg: 1, scope: !13459, file: !13387, line: 72, type: !167)
!13461 = !DILocation(line: 72, column: 20, scope: !13459)
!13462 = !DILocalVariable(name: "a", scope: !13459, file: !13387, line: 74, type: !1853)
!13463 = !DILocation(line: 74, column: 20, scope: !13459)
!13464 = !DILocation(line: 74, column: 24, scope: !13459)
!13465 = !DILocation(line: 75, column: 9, scope: !13459)
!13466 = !DILocation(line: 75, column: 12, scope: !13459)
!13467 = !DILocation(line: 75, column: 3, scope: !13459)
!13468 = !DILocation(line: 76, column: 9, scope: !13459)
!13469 = !DILocation(line: 76, column: 3, scope: !13459)
!13470 = !DILocation(line: 77, column: 1, scope: !13459)
!13471 = distinct !DISubprogram(name: "human_readable", scope: !1339, file: !1339, line: 153, type: !1286, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!13472 = !DILocalVariable(name: "n", arg: 1, scope: !13471, file: !1339, line: 153, type: !168)
!13473 = !DILocation(line: 153, column: 27, scope: !13471)
!13474 = !DILocalVariable(name: "buf", arg: 2, scope: !13471, file: !1339, line: 153, type: !143)
!13475 = !DILocation(line: 153, column: 36, scope: !13471)
!13476 = !DILocalVariable(name: "opts", arg: 3, scope: !13471, file: !1339, line: 153, type: !27)
!13477 = !DILocation(line: 153, column: 45, scope: !13471)
!13478 = !DILocalVariable(name: "from_block_size", arg: 4, scope: !13471, file: !1339, line: 154, type: !168)
!13479 = !DILocation(line: 154, column: 27, scope: !13471)
!13480 = !DILocalVariable(name: "to_block_size", arg: 5, scope: !13471, file: !1339, line: 154, type: !168)
!13481 = !DILocation(line: 154, column: 54, scope: !13471)
!13482 = !DILocalVariable(name: "inexact_style", scope: !13471, file: !1339, line: 156, type: !27)
!13483 = !DILocation(line: 156, column: 7, scope: !13471)
!13484 = !DILocation(line: 157, column: 5, scope: !13471)
!13485 = !DILocation(line: 157, column: 10, scope: !13471)
!13486 = !DILocalVariable(name: "base", scope: !13471, file: !1339, line: 158, type: !6)
!13487 = !DILocation(line: 158, column: 16, scope: !13471)
!13488 = !DILocation(line: 158, column: 23, scope: !13471)
!13489 = !DILocation(line: 158, column: 28, scope: !13471)
!13490 = !DILocalVariable(name: "amt", scope: !13471, file: !1339, line: 159, type: !168)
!13491 = !DILocation(line: 159, column: 13, scope: !13471)
!13492 = !DILocalVariable(name: "tenths", scope: !13471, file: !1339, line: 160, type: !27)
!13493 = !DILocation(line: 160, column: 7, scope: !13471)
!13494 = !DILocalVariable(name: "exponent", scope: !13471, file: !1339, line: 161, type: !27)
!13495 = !DILocation(line: 161, column: 7, scope: !13471)
!13496 = !DILocalVariable(name: "exponent_max", scope: !13471, file: !1339, line: 162, type: !27)
!13497 = !DILocation(line: 162, column: 7, scope: !13471)
!13498 = !DILocalVariable(name: "p", scope: !13471, file: !1339, line: 163, type: !143)
!13499 = !DILocation(line: 163, column: 9, scope: !13471)
!13500 = !DILocalVariable(name: "psuffix", scope: !13471, file: !1339, line: 164, type: !143)
!13501 = !DILocation(line: 164, column: 9, scope: !13471)
!13502 = !DILocalVariable(name: "integerlim", scope: !13471, file: !1339, line: 165, type: !146)
!13503 = !DILocation(line: 165, column: 15, scope: !13471)
!13504 = !DILocalVariable(name: "rounding", scope: !13471, file: !1339, line: 171, type: !27)
!13505 = !DILocation(line: 171, column: 7, scope: !13471)
!13506 = !DILocalVariable(name: "decimal_point", scope: !13471, file: !1339, line: 173, type: !146)
!13507 = !DILocation(line: 173, column: 15, scope: !13471)
!13508 = !DILocalVariable(name: "decimal_pointlen", scope: !13471, file: !1339, line: 174, type: !149)
!13509 = !DILocation(line: 174, column: 10, scope: !13471)
!13510 = !DILocalVariable(name: "grouping", scope: !13471, file: !1339, line: 175, type: !146)
!13511 = !DILocation(line: 175, column: 15, scope: !13471)
!13512 = !DILocalVariable(name: "thousands_sep", scope: !13471, file: !1339, line: 176, type: !146)
!13513 = !DILocation(line: 176, column: 15, scope: !13471)
!13514 = !DILocalVariable(name: "l", scope: !13471, file: !1339, line: 177, type: !1288)
!13515 = !DILocation(line: 177, column: 23, scope: !13471)
!13516 = !DILocation(line: 177, column: 27, scope: !13471)
!13517 = !DILocalVariable(name: "pointlen", scope: !13471, file: !1339, line: 178, type: !149)
!13518 = !DILocation(line: 178, column: 10, scope: !13471)
!13519 = !DILocation(line: 178, column: 29, scope: !13471)
!13520 = !DILocation(line: 178, column: 32, scope: !13471)
!13521 = !{!13522, !2443, i64 0}
!13522 = !{!"lconv", !2443, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72, !2438, i64 80, !2438, i64 81, !2438, i64 82, !2438, i64 83, !2438, i64 84, !2438, i64 85, !2438, i64 86, !2438, i64 87, !2438, i64 88, !2438, i64 89, !2438, i64 90, !2438, i64 91, !2438, i64 92, !2438, i64 93}
!13523 = !DILocation(line: 178, column: 21, scope: !13471)
!13524 = !DILocation(line: 179, column: 11, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 179, column: 7)
!13526 = !DILocation(line: 179, column: 9, scope: !13525)
!13527 = !DILocation(line: 179, column: 20, scope: !13525)
!13528 = !DILocation(line: 179, column: 23, scope: !13525)
!13529 = !DILocation(line: 179, column: 32, scope: !13525)
!13530 = !DILocation(line: 179, column: 7, scope: !13471)
!13531 = !DILocation(line: 181, column: 23, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13525, file: !1339, line: 180, column: 5)
!13533 = !DILocation(line: 181, column: 26, scope: !13532)
!13534 = !DILocation(line: 181, column: 21, scope: !13532)
!13535 = !DILocation(line: 182, column: 26, scope: !13532)
!13536 = !DILocation(line: 182, column: 24, scope: !13532)
!13537 = !DILocation(line: 183, column: 5, scope: !13532)
!13538 = !DILocation(line: 184, column: 14, scope: !13471)
!13539 = !DILocation(line: 184, column: 17, scope: !13471)
!13540 = !{!13522, !2443, i64 16}
!13541 = !DILocation(line: 184, column: 12, scope: !13471)
!13542 = !DILocation(line: 185, column: 15, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 185, column: 7)
!13544 = !DILocation(line: 185, column: 18, scope: !13543)
!13545 = !{!13522, !2443, i64 8}
!13546 = !DILocation(line: 185, column: 7, scope: !13543)
!13547 = !DILocation(line: 185, column: 33, scope: !13543)
!13548 = !DILocation(line: 185, column: 7, scope: !13471)
!13549 = !DILocation(line: 186, column: 21, scope: !13543)
!13550 = !DILocation(line: 186, column: 24, scope: !13543)
!13551 = !DILocation(line: 186, column: 19, scope: !13543)
!13552 = !DILocation(line: 186, column: 5, scope: !13543)
!13553 = !DILocation(line: 189, column: 13, scope: !13471)
!13554 = !DILocation(line: 189, column: 17, scope: !13471)
!13555 = !DILocation(line: 189, column: 42, scope: !13471)
!13556 = !DILocation(line: 189, column: 46, scope: !13471)
!13557 = !DILocation(line: 189, column: 11, scope: !13471)
!13558 = !DILocation(line: 190, column: 7, scope: !13471)
!13559 = !DILocation(line: 190, column: 5, scope: !13471)
!13560 = !DILocation(line: 195, column: 7, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 195, column: 7)
!13562 = !DILocation(line: 195, column: 24, scope: !13561)
!13563 = !DILocation(line: 195, column: 21, scope: !13561)
!13564 = !DILocation(line: 195, column: 7, scope: !13471)
!13565 = !DILocation(line: 197, column: 11, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !1339, line: 197, column: 11)
!13567 = distinct !DILexicalBlock(scope: !13561, file: !1339, line: 196, column: 5)
!13568 = !DILocation(line: 197, column: 29, scope: !13566)
!13569 = !DILocation(line: 197, column: 27, scope: !13566)
!13570 = !DILocation(line: 197, column: 43, scope: !13566)
!13571 = !DILocation(line: 197, column: 11, scope: !13567)
!13572 = !DILocalVariable(name: "multiplier", scope: !13573, file: !1339, line: 199, type: !168)
!13573 = distinct !DILexicalBlock(scope: !13566, file: !1339, line: 198, column: 9)
!13574 = !DILocation(line: 199, column: 21, scope: !13573)
!13575 = !DILocation(line: 199, column: 34, scope: !13573)
!13576 = !DILocation(line: 199, column: 52, scope: !13573)
!13577 = !DILocation(line: 199, column: 50, scope: !13573)
!13578 = !DILocation(line: 200, column: 17, scope: !13573)
!13579 = !DILocation(line: 200, column: 21, scope: !13573)
!13580 = !DILocation(line: 200, column: 19, scope: !13573)
!13581 = !DILocation(line: 200, column: 15, scope: !13573)
!13582 = !DILocation(line: 201, column: 15, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13573, file: !1339, line: 201, column: 15)
!13584 = !DILocation(line: 201, column: 21, scope: !13583)
!13585 = !DILocation(line: 201, column: 19, scope: !13583)
!13586 = !DILocation(line: 201, column: 35, scope: !13583)
!13587 = !DILocation(line: 201, column: 32, scope: !13583)
!13588 = !DILocation(line: 201, column: 15, scope: !13573)
!13589 = !DILocation(line: 203, column: 22, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13583, file: !1339, line: 202, column: 13)
!13591 = !DILocation(line: 204, column: 24, scope: !13590)
!13592 = !DILocation(line: 205, column: 15, scope: !13590)
!13593 = !DILocation(line: 207, column: 9, scope: !13573)
!13594 = !DILocation(line: 208, column: 5, scope: !13567)
!13595 = !DILocation(line: 209, column: 12, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13561, file: !1339, line: 209, column: 12)
!13597 = !DILocation(line: 209, column: 28, scope: !13596)
!13598 = !DILocation(line: 209, column: 33, scope: !13596)
!13599 = !DILocation(line: 209, column: 36, scope: !13596)
!13600 = !DILocation(line: 209, column: 52, scope: !13596)
!13601 = !DILocation(line: 209, column: 50, scope: !13596)
!13602 = !DILocation(line: 209, column: 68, scope: !13596)
!13603 = !DILocation(line: 209, column: 12, scope: !13561)
!13604 = !DILocalVariable(name: "divisor", scope: !13605, file: !1339, line: 211, type: !168)
!13605 = distinct !DILexicalBlock(scope: !13596, file: !1339, line: 210, column: 5)
!13606 = !DILocation(line: 211, column: 17, scope: !13605)
!13607 = !DILocation(line: 211, column: 27, scope: !13605)
!13608 = !DILocation(line: 211, column: 43, scope: !13605)
!13609 = !DILocation(line: 211, column: 41, scope: !13605)
!13610 = !DILocalVariable(name: "r10", scope: !13605, file: !1339, line: 212, type: !168)
!13611 = !DILocation(line: 212, column: 17, scope: !13605)
!13612 = !DILocation(line: 212, column: 24, scope: !13605)
!13613 = !DILocation(line: 212, column: 28, scope: !13605)
!13614 = !DILocation(line: 212, column: 26, scope: !13605)
!13615 = !DILocation(line: 212, column: 37, scope: !13605)
!13616 = !DILocalVariable(name: "r2", scope: !13605, file: !1339, line: 213, type: !168)
!13617 = !DILocation(line: 213, column: 17, scope: !13605)
!13618 = !DILocation(line: 213, column: 23, scope: !13605)
!13619 = !DILocation(line: 213, column: 29, scope: !13605)
!13620 = !DILocation(line: 213, column: 27, scope: !13605)
!13621 = !DILocation(line: 213, column: 38, scope: !13605)
!13622 = !DILocation(line: 214, column: 13, scope: !13605)
!13623 = !DILocation(line: 214, column: 17, scope: !13605)
!13624 = !DILocation(line: 214, column: 15, scope: !13605)
!13625 = !DILocation(line: 214, column: 11, scope: !13605)
!13626 = !DILocation(line: 215, column: 16, scope: !13605)
!13627 = !DILocation(line: 215, column: 22, scope: !13605)
!13628 = !DILocation(line: 215, column: 20, scope: !13605)
!13629 = !DILocation(line: 215, column: 14, scope: !13605)
!13630 = !DILocation(line: 216, column: 18, scope: !13605)
!13631 = !DILocation(line: 216, column: 23, scope: !13605)
!13632 = !DILocation(line: 216, column: 21, scope: !13605)
!13633 = !DILocation(line: 216, column: 37, scope: !13605)
!13634 = !DILocation(line: 216, column: 35, scope: !13605)
!13635 = !DILocation(line: 216, column: 47, scope: !13605)
!13636 = !DILocation(line: 216, column: 57, scope: !13605)
!13637 = !DILocation(line: 216, column: 55, scope: !13605)
!13638 = !DILocation(line: 216, column: 44, scope: !13605)
!13639 = !DILocation(line: 216, column: 16, scope: !13605)
!13640 = !DILocation(line: 217, column: 7, scope: !13605)
!13641 = !DILocalVariable(name: "dto_block_size", scope: !13642, file: !1339, line: 225, type: !1317)
!13642 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 220, column: 3)
!13643 = !DILocation(line: 225, column: 17, scope: !13642)
!13644 = !DILocation(line: 225, column: 34, scope: !13642)
!13645 = !{!13646, !13646, i64 0}
!13646 = !{!"long double", !2438, i64 0}
!13647 = !DILocalVariable(name: "damt", scope: !13642, file: !1339, line: 226, type: !1317)
!13648 = !DILocation(line: 226, column: 17, scope: !13642)
!13649 = !DILocation(line: 226, column: 24, scope: !13642)
!13650 = !DILocation(line: 226, column: 29, scope: !13642)
!13651 = !DILocation(line: 226, column: 47, scope: !13642)
!13652 = !DILocation(line: 226, column: 45, scope: !13642)
!13653 = !DILocation(line: 226, column: 26, scope: !13642)
!13654 = !DILocalVariable(name: "buflen", scope: !13642, file: !1339, line: 227, type: !149)
!13655 = !DILocation(line: 227, column: 12, scope: !13642)
!13656 = !DILocalVariable(name: "nonintegerlen", scope: !13642, file: !1339, line: 228, type: !149)
!13657 = !DILocation(line: 228, column: 12, scope: !13642)
!13658 = !DILocation(line: 230, column: 12, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13642, file: !1339, line: 230, column: 9)
!13660 = !DILocation(line: 230, column: 17, scope: !13659)
!13661 = !DILocation(line: 230, column: 9, scope: !13642)
!13662 = !DILocation(line: 232, column: 18, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13659, file: !1339, line: 231, column: 7)
!13664 = !DILocation(line: 232, column: 46, scope: !13663)
!13665 = !DILocation(line: 232, column: 61, scope: !13663)
!13666 = !DILocation(line: 232, column: 32, scope: !13663)
!13667 = !DILocation(line: 232, column: 9, scope: !13663)
!13668 = !DILocation(line: 233, column: 26, scope: !13663)
!13669 = !DILocation(line: 233, column: 18, scope: !13663)
!13670 = !DILocation(line: 233, column: 16, scope: !13663)
!13671 = !DILocation(line: 234, column: 23, scope: !13663)
!13672 = !DILocation(line: 235, column: 7, scope: !13663)
!13673 = !DILocalVariable(name: "e", scope: !13674, file: !1339, line: 238, type: !1317)
!13674 = distinct !DILexicalBlock(scope: !13659, file: !1339, line: 237, column: 7)
!13675 = !DILocation(line: 238, column: 21, scope: !13674)
!13676 = !DILocation(line: 239, column: 18, scope: !13674)
!13677 = !DILocation(line: 241, column: 9, scope: !13674)
!13678 = !DILocation(line: 243, column: 18, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13674, file: !1339, line: 242, column: 11)
!13680 = !DILocation(line: 243, column: 15, scope: !13679)
!13681 = !DILocation(line: 244, column: 21, scope: !13679)
!13682 = !DILocation(line: 245, column: 11, scope: !13679)
!13683 = !DILocation(line: 246, column: 16, scope: !13674)
!13684 = !DILocation(line: 246, column: 20, scope: !13674)
!13685 = !DILocation(line: 246, column: 18, scope: !13674)
!13686 = !DILocation(line: 246, column: 28, scope: !13674)
!13687 = !DILocation(line: 246, column: 25, scope: !13674)
!13688 = !DILocation(line: 246, column: 33, scope: !13674)
!13689 = !DILocation(line: 246, column: 36, scope: !13674)
!13690 = !DILocation(line: 246, column: 47, scope: !13674)
!13691 = !DILocation(line: 246, column: 45, scope: !13674)
!13692 = !DILocation(line: 0, scope: !13674)
!13693 = distinct !{!13693, !13677, !13694}
!13694 = !DILocation(line: 246, column: 59, scope: !13674)
!13695 = !DILocation(line: 248, column: 17, scope: !13674)
!13696 = !DILocation(line: 248, column: 14, scope: !13674)
!13697 = !DILocation(line: 250, column: 18, scope: !13674)
!13698 = !DILocation(line: 250, column: 46, scope: !13674)
!13699 = !DILocation(line: 250, column: 61, scope: !13674)
!13700 = !DILocation(line: 250, column: 32, scope: !13674)
!13701 = !DILocation(line: 250, column: 9, scope: !13674)
!13702 = !DILocation(line: 251, column: 26, scope: !13674)
!13703 = !DILocation(line: 251, column: 18, scope: !13674)
!13704 = !DILocation(line: 251, column: 16, scope: !13674)
!13705 = !DILocation(line: 252, column: 25, scope: !13674)
!13706 = !DILocation(line: 252, column: 42, scope: !13674)
!13707 = !DILocation(line: 252, column: 23, scope: !13674)
!13708 = !DILocation(line: 254, column: 17, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13674, file: !1339, line: 254, column: 13)
!13710 = !DILocation(line: 254, column: 15, scope: !13709)
!13711 = !DILocation(line: 254, column: 36, scope: !13709)
!13712 = !DILocation(line: 254, column: 41, scope: !13709)
!13713 = !DILocation(line: 254, column: 33, scope: !13709)
!13714 = !DILocation(line: 254, column: 31, scope: !13709)
!13715 = !DILocation(line: 254, column: 62, scope: !13709)
!13716 = !DILocation(line: 254, column: 60, scope: !13709)
!13717 = !DILocation(line: 255, column: 13, scope: !13709)
!13718 = !DILocation(line: 255, column: 18, scope: !13709)
!13719 = !DILocation(line: 255, column: 23, scope: !13709)
!13720 = !DILocation(line: 256, column: 17, scope: !13709)
!13721 = !DILocation(line: 256, column: 20, scope: !13709)
!13722 = !DILocation(line: 256, column: 24, scope: !13709)
!13723 = !DILocation(line: 256, column: 31, scope: !13709)
!13724 = !DILocation(line: 256, column: 36, scope: !13709)
!13725 = !DILocation(line: 254, column: 13, scope: !13674)
!13726 = !DILocation(line: 258, column: 22, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13709, file: !1339, line: 257, column: 11)
!13728 = !DILocation(line: 259, column: 36, scope: !13727)
!13729 = !DILocation(line: 259, column: 51, scope: !13727)
!13730 = !DILocation(line: 259, column: 56, scope: !13727)
!13731 = !DILocation(line: 259, column: 22, scope: !13727)
!13732 = !DILocation(line: 259, column: 62, scope: !13727)
!13733 = !DILocation(line: 258, column: 13, scope: !13727)
!13734 = !DILocation(line: 260, column: 30, scope: !13727)
!13735 = !DILocation(line: 260, column: 22, scope: !13727)
!13736 = !DILocation(line: 260, column: 20, scope: !13727)
!13737 = !DILocation(line: 261, column: 27, scope: !13727)
!13738 = !DILocation(line: 262, column: 11, scope: !13727)
!13739 = !DILocation(line: 265, column: 9, scope: !13642)
!13740 = !DILocation(line: 265, column: 19, scope: !13642)
!13741 = !DILocation(line: 265, column: 17, scope: !13642)
!13742 = !DILocation(line: 265, column: 7, scope: !13642)
!13743 = !DILocation(line: 266, column: 14, scope: !13642)
!13744 = !DILocation(line: 266, column: 17, scope: !13642)
!13745 = !DILocation(line: 266, column: 22, scope: !13642)
!13746 = !DILocation(line: 266, column: 5, scope: !13642)
!13747 = !DILocation(line: 267, column: 18, scope: !13642)
!13748 = !DILocation(line: 267, column: 22, scope: !13642)
!13749 = !DILocation(line: 267, column: 20, scope: !13642)
!13750 = !DILocation(line: 267, column: 31, scope: !13642)
!13751 = !DILocation(line: 267, column: 29, scope: !13642)
!13752 = !DILocation(line: 267, column: 16, scope: !13642)
!13753 = !DILocation(line: 269, column: 3, scope: !13471)
!13754 = !DILabel(scope: !13471, name: "use_integer_arithmetic", file: !1339, line: 271)
!13755 = !DILocation(line: 271, column: 2, scope: !13471)
!13756 = !DILocation(line: 278, column: 9, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13758, file: !1339, line: 278, column: 9)
!13758 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 272, column: 3)
!13759 = !DILocation(line: 278, column: 14, scope: !13757)
!13760 = !DILocation(line: 278, column: 9, scope: !13758)
!13761 = !DILocation(line: 280, column: 18, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13757, file: !1339, line: 279, column: 7)
!13763 = !DILocation(line: 282, column: 13, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13762, file: !1339, line: 282, column: 13)
!13765 = !DILocation(line: 282, column: 21, scope: !13764)
!13766 = !DILocation(line: 282, column: 18, scope: !13764)
!13767 = !DILocation(line: 282, column: 13, scope: !13762)
!13768 = !DILocation(line: 284, column: 13, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13764, file: !1339, line: 283, column: 11)
!13770 = !DILocalVariable(name: "r10", scope: !13771, file: !1339, line: 286, type: !6)
!13771 = distinct !DILexicalBlock(scope: !13769, file: !1339, line: 285, column: 15)
!13772 = !DILocation(line: 286, column: 30, scope: !13771)
!13773 = !DILocation(line: 286, column: 37, scope: !13771)
!13774 = !DILocation(line: 286, column: 43, scope: !13771)
!13775 = !DILocation(line: 286, column: 41, scope: !13771)
!13776 = !DILocation(line: 286, column: 49, scope: !13771)
!13777 = !DILocation(line: 286, column: 56, scope: !13771)
!13778 = !DILocation(line: 286, column: 54, scope: !13771)
!13779 = !DILocation(line: 286, column: 36, scope: !13771)
!13780 = !DILocalVariable(name: "r2", scope: !13771, file: !1339, line: 287, type: !6)
!13781 = !DILocation(line: 287, column: 30, scope: !13771)
!13782 = !DILocation(line: 287, column: 36, scope: !13771)
!13783 = !DILocation(line: 287, column: 42, scope: !13771)
!13784 = !DILocation(line: 287, column: 40, scope: !13771)
!13785 = !DILocation(line: 287, column: 48, scope: !13771)
!13786 = !DILocation(line: 287, column: 55, scope: !13771)
!13787 = !DILocation(line: 287, column: 64, scope: !13771)
!13788 = !DILocation(line: 287, column: 52, scope: !13771)
!13789 = !DILocation(line: 288, column: 24, scope: !13771)
!13790 = !DILocation(line: 288, column: 21, scope: !13771)
!13791 = !DILocation(line: 289, column: 26, scope: !13771)
!13792 = !DILocation(line: 289, column: 32, scope: !13771)
!13793 = !DILocation(line: 289, column: 30, scope: !13771)
!13794 = !DILocation(line: 289, column: 24, scope: !13771)
!13795 = !DILocation(line: 290, column: 29, scope: !13771)
!13796 = !DILocation(line: 290, column: 34, scope: !13771)
!13797 = !DILocation(line: 290, column: 32, scope: !13771)
!13798 = !DILocation(line: 291, column: 32, scope: !13771)
!13799 = !DILocation(line: 291, column: 37, scope: !13771)
!13800 = !DILocation(line: 291, column: 35, scope: !13771)
!13801 = !DILocation(line: 291, column: 47, scope: !13771)
!13802 = !DILocation(line: 292, column: 36, scope: !13771)
!13803 = !DILocation(line: 292, column: 43, scope: !13771)
!13804 = !DILocation(line: 292, column: 48, scope: !13771)
!13805 = !DILocation(line: 292, column: 46, scope: !13771)
!13806 = !DILocation(line: 292, column: 41, scope: !13771)
!13807 = !DILocation(line: 292, column: 33, scope: !13771)
!13808 = !DILocation(line: 290, column: 26, scope: !13771)
!13809 = !DILocation(line: 293, column: 25, scope: !13771)
!13810 = !DILocation(line: 294, column: 15, scope: !13771)
!13811 = !DILocation(line: 295, column: 20, scope: !13769)
!13812 = !DILocation(line: 295, column: 28, scope: !13769)
!13813 = !DILocation(line: 295, column: 25, scope: !13769)
!13814 = !DILocation(line: 295, column: 32, scope: !13769)
!13815 = !DILocation(line: 295, column: 35, scope: !13769)
!13816 = !DILocation(line: 295, column: 46, scope: !13769)
!13817 = !DILocation(line: 295, column: 44, scope: !13769)
!13818 = !DILocation(line: 0, scope: !13769)
!13819 = distinct !{!13819, !13768, !13820}
!13820 = !DILocation(line: 295, column: 58, scope: !13769)
!13821 = !DILocation(line: 297, column: 17, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13769, file: !1339, line: 297, column: 17)
!13823 = !DILocation(line: 297, column: 21, scope: !13822)
!13824 = !DILocation(line: 297, column: 17, scope: !13769)
!13825 = !DILocation(line: 299, column: 21, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !1339, line: 299, column: 21)
!13827 = distinct !DILexicalBlock(scope: !13822, file: !1339, line: 298, column: 15)
!13828 = !DILocation(line: 299, column: 35, scope: !13826)
!13829 = !DILocation(line: 299, column: 21, scope: !13827)
!13830 = !DILocation(line: 300, column: 27, scope: !13826)
!13831 = !DILocation(line: 300, column: 39, scope: !13826)
!13832 = !DILocation(line: 300, column: 46, scope: !13826)
!13833 = !DILocation(line: 300, column: 36, scope: !13826)
!13834 = !DILocation(line: 300, column: 25, scope: !13826)
!13835 = !DILocation(line: 301, column: 23, scope: !13826)
!13836 = !DILocation(line: 301, column: 37, scope: !13826)
!13837 = !DILocation(line: 301, column: 54, scope: !13826)
!13838 = !DILocation(line: 301, column: 61, scope: !13826)
!13839 = !DILocation(line: 301, column: 59, scope: !13826)
!13840 = !DILocation(line: 303, column: 27, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13826, file: !1339, line: 302, column: 19)
!13842 = !DILocation(line: 304, column: 30, scope: !13841)
!13843 = !DILocation(line: 306, column: 25, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13841, file: !1339, line: 306, column: 25)
!13845 = !DILocation(line: 306, column: 32, scope: !13844)
!13846 = !DILocation(line: 306, column: 25, scope: !13841)
!13847 = !DILocation(line: 308, column: 28, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13844, file: !1339, line: 307, column: 23)
!13849 = !DILocation(line: 309, column: 32, scope: !13848)
!13850 = !DILocation(line: 310, column: 23, scope: !13848)
!13851 = !DILocation(line: 311, column: 19, scope: !13841)
!13852 = !DILocation(line: 313, column: 21, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13827, file: !1339, line: 313, column: 21)
!13854 = !DILocation(line: 313, column: 25, scope: !13853)
!13855 = !DILocation(line: 314, column: 21, scope: !13853)
!13856 = !DILocation(line: 314, column: 25, scope: !13853)
!13857 = !DILocation(line: 314, column: 32, scope: !13853)
!13858 = !DILocation(line: 314, column: 38, scope: !13853)
!13859 = !DILocation(line: 314, column: 43, scope: !13853)
!13860 = !DILocation(line: 313, column: 21, scope: !13827)
!13861 = !DILocation(line: 316, column: 34, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13853, file: !1339, line: 315, column: 19)
!13863 = !DILocation(line: 316, column: 32, scope: !13862)
!13864 = !DILocation(line: 316, column: 28, scope: !13862)
!13865 = !DILocation(line: 316, column: 22, scope: !13862)
!13866 = !DILocation(line: 316, column: 26, scope: !13862)
!13867 = !DILocation(line: 317, column: 26, scope: !13862)
!13868 = !DILocation(line: 317, column: 23, scope: !13862)
!13869 = !DILocation(line: 318, column: 29, scope: !13862)
!13870 = !DILocation(line: 318, column: 32, scope: !13862)
!13871 = !DILocation(line: 318, column: 47, scope: !13862)
!13872 = !DILocation(line: 318, column: 21, scope: !13862)
!13873 = !DILocation(line: 319, column: 39, scope: !13862)
!13874 = !DILocation(line: 319, column: 28, scope: !13862)
!13875 = !DILocation(line: 320, column: 19, scope: !13862)
!13876 = !DILocation(line: 321, column: 15, scope: !13827)
!13877 = !DILocation(line: 322, column: 11, scope: !13769)
!13878 = !DILocation(line: 323, column: 7, scope: !13762)
!13879 = !DILocation(line: 325, column: 9, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13758, file: !1339, line: 325, column: 9)
!13881 = !DILocation(line: 325, column: 23, scope: !13880)
!13882 = !DILocation(line: 325, column: 9, scope: !13758)
!13883 = !DILocation(line: 326, column: 15, scope: !13880)
!13884 = !DILocation(line: 326, column: 29, scope: !13880)
!13885 = !DILocation(line: 326, column: 41, scope: !13880)
!13886 = !DILocation(line: 326, column: 45, scope: !13880)
!13887 = !DILocation(line: 326, column: 38, scope: !13880)
!13888 = !DILocation(line: 326, column: 27, scope: !13880)
!13889 = !DILocation(line: 326, column: 22, scope: !13880)
!13890 = !DILocation(line: 326, column: 13, scope: !13880)
!13891 = !DILocation(line: 327, column: 11, scope: !13880)
!13892 = !DILocation(line: 327, column: 25, scope: !13880)
!13893 = !DILocation(line: 327, column: 42, scope: !13880)
!13894 = !DILocation(line: 327, column: 49, scope: !13880)
!13895 = !DILocation(line: 327, column: 58, scope: !13880)
!13896 = !DILocation(line: 327, column: 56, scope: !13880)
!13897 = !DILocation(line: 327, column: 47, scope: !13880)
!13898 = !DILocation(line: 329, column: 12, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13880, file: !1339, line: 328, column: 7)
!13900 = !DILocation(line: 331, column: 14, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13899, file: !1339, line: 331, column: 13)
!13902 = !DILocation(line: 331, column: 19, scope: !13901)
!13903 = !DILocation(line: 332, column: 13, scope: !13901)
!13904 = !DILocation(line: 332, column: 16, scope: !13901)
!13905 = !DILocation(line: 332, column: 23, scope: !13901)
!13906 = !DILocation(line: 332, column: 20, scope: !13901)
!13907 = !DILocation(line: 332, column: 28, scope: !13901)
!13908 = !DILocation(line: 332, column: 31, scope: !13901)
!13909 = !DILocation(line: 332, column: 42, scope: !13901)
!13910 = !DILocation(line: 332, column: 40, scope: !13901)
!13911 = !DILocation(line: 331, column: 13, scope: !13899)
!13912 = !DILocation(line: 334, column: 21, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13901, file: !1339, line: 333, column: 11)
!13914 = !DILocation(line: 335, column: 20, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13913, file: !1339, line: 335, column: 17)
!13916 = !DILocation(line: 335, column: 25, scope: !13915)
!13917 = !DILocation(line: 335, column: 17, scope: !13913)
!13918 = !DILocation(line: 337, column: 18, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13915, file: !1339, line: 336, column: 15)
!13920 = !DILocation(line: 337, column: 22, scope: !13919)
!13921 = !DILocation(line: 338, column: 22, scope: !13919)
!13922 = !DILocation(line: 338, column: 19, scope: !13919)
!13923 = !DILocation(line: 339, column: 25, scope: !13919)
!13924 = !DILocation(line: 339, column: 28, scope: !13919)
!13925 = !DILocation(line: 339, column: 43, scope: !13919)
!13926 = !DILocation(line: 339, column: 17, scope: !13919)
!13927 = !DILocation(line: 340, column: 15, scope: !13919)
!13928 = !DILocation(line: 341, column: 17, scope: !13913)
!13929 = !DILocation(line: 342, column: 11, scope: !13913)
!13930 = !DILocation(line: 343, column: 7, scope: !13899)
!13931 = !DILocation(line: 345, column: 18, scope: !13758)
!13932 = !DILocation(line: 345, column: 16, scope: !13758)
!13933 = !DILocation(line: 347, column: 5, scope: !13758)
!13934 = !DILocalVariable(name: "digit", scope: !13935, file: !1339, line: 349, type: !27)
!13935 = distinct !DILexicalBlock(scope: !13758, file: !1339, line: 348, column: 7)
!13936 = !DILocation(line: 349, column: 13, scope: !13935)
!13937 = !DILocation(line: 349, column: 21, scope: !13935)
!13938 = !DILocation(line: 349, column: 25, scope: !13935)
!13939 = !DILocation(line: 350, column: 16, scope: !13935)
!13940 = !DILocation(line: 350, column: 22, scope: !13935)
!13941 = !DILocation(line: 350, column: 10, scope: !13935)
!13942 = !DILocation(line: 350, column: 14, scope: !13935)
!13943 = !DILocation(line: 351, column: 7, scope: !13935)
!13944 = !DILocation(line: 352, column: 17, scope: !13758)
!13945 = !DILocation(line: 352, column: 24, scope: !13758)
!13946 = distinct !{!13946, !13933, !13947}
!13947 = !DILocation(line: 352, column: 28, scope: !13758)
!13948 = !DILocation(line: 353, column: 3, scope: !13758)
!13949 = !DILabel(scope: !13471, name: "do_grouping", file: !1339, line: 355)
!13950 = !DILocation(line: 355, column: 2, scope: !13471)
!13951 = !DILocation(line: 356, column: 7, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 356, column: 7)
!13953 = !DILocation(line: 356, column: 12, scope: !13952)
!13954 = !DILocation(line: 356, column: 7, scope: !13471)
!13955 = !DILocation(line: 357, column: 23, scope: !13952)
!13956 = !DILocation(line: 357, column: 26, scope: !13952)
!13957 = !DILocation(line: 357, column: 39, scope: !13952)
!13958 = !DILocation(line: 357, column: 37, scope: !13952)
!13959 = !DILocation(line: 357, column: 42, scope: !13952)
!13960 = !DILocation(line: 357, column: 52, scope: !13952)
!13961 = !DILocation(line: 357, column: 9, scope: !13952)
!13962 = !DILocation(line: 357, column: 7, scope: !13952)
!13963 = !DILocation(line: 357, column: 5, scope: !13952)
!13964 = !DILocation(line: 359, column: 7, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13471, file: !1339, line: 359, column: 7)
!13966 = !DILocation(line: 359, column: 12, scope: !13965)
!13967 = !DILocation(line: 359, column: 7, scope: !13471)
!13968 = !DILocation(line: 361, column: 11, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13970, file: !1339, line: 361, column: 11)
!13970 = distinct !DILexicalBlock(scope: !13965, file: !1339, line: 360, column: 5)
!13971 = !DILocation(line: 361, column: 20, scope: !13969)
!13972 = !DILocation(line: 361, column: 11, scope: !13970)
!13973 = !DILocalVariable(name: "power", scope: !13974, file: !1339, line: 363, type: !168)
!13974 = distinct !DILexicalBlock(scope: !13969, file: !1339, line: 362, column: 9)
!13975 = !DILocation(line: 363, column: 21, scope: !13974)
!13976 = !DILocation(line: 364, column: 20, scope: !13974)
!13977 = !DILocation(line: 365, column: 22, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13974, file: !1339, line: 365, column: 11)
!13979 = !DILocation(line: 365, column: 16, scope: !13978)
!13980 = !DILocation(line: 365, column: 27, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13978, file: !1339, line: 365, column: 11)
!13982 = !DILocation(line: 365, column: 35, scope: !13981)
!13983 = !DILocation(line: 365, column: 33, scope: !13981)
!13984 = !DILocation(line: 365, column: 11, scope: !13978)
!13985 = !DILocation(line: 366, column: 17, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13981, file: !1339, line: 366, column: 17)
!13987 = !DILocation(line: 366, column: 31, scope: !13986)
!13988 = !DILocation(line: 366, column: 28, scope: !13986)
!13989 = !DILocation(line: 366, column: 17, scope: !13981)
!13990 = !DILocation(line: 367, column: 15, scope: !13986)
!13991 = !DILocation(line: 365, column: 59, scope: !13981)
!13992 = !DILocation(line: 365, column: 56, scope: !13981)
!13993 = !DILocation(line: 365, column: 11, scope: !13981)
!13994 = distinct !{!13994, !13984, !13995}
!13995 = !DILocation(line: 367, column: 15, scope: !13978)
!13996 = !DILocation(line: 368, column: 9, scope: !13974)
!13997 = !DILocation(line: 370, column: 12, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13970, file: !1339, line: 370, column: 11)
!13999 = !DILocation(line: 370, column: 24, scope: !13998)
!14000 = !DILocation(line: 370, column: 29, scope: !13998)
!14001 = !DILocation(line: 370, column: 21, scope: !13998)
!14002 = !DILocation(line: 370, column: 41, scope: !13998)
!14003 = !DILocation(line: 370, column: 45, scope: !13998)
!14004 = !DILocation(line: 370, column: 50, scope: !13998)
!14005 = !DILocation(line: 370, column: 11, scope: !13970)
!14006 = !DILocation(line: 371, column: 17, scope: !13998)
!14007 = !DILocation(line: 371, column: 20, scope: !13998)
!14008 = !DILocation(line: 371, column: 9, scope: !13998)
!14009 = !DILocation(line: 373, column: 11, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13970, file: !1339, line: 373, column: 11)
!14011 = !DILocation(line: 373, column: 11, scope: !13970)
!14012 = !DILocation(line: 374, column: 26, scope: !14010)
!14013 = !DILocation(line: 374, column: 31, scope: !14010)
!14014 = !DILocation(line: 374, column: 50, scope: !14010)
!14015 = !DILocation(line: 374, column: 53, scope: !14010)
!14016 = !DILocation(line: 374, column: 62, scope: !14010)
!14017 = !DILocation(line: 374, column: 23, scope: !14010)
!14018 = !DILocation(line: 376, column: 38, scope: !14010)
!14019 = !DILocation(line: 376, column: 25, scope: !14010)
!14020 = !DILocation(line: 374, column: 22, scope: !14010)
!14021 = !DILocation(line: 374, column: 17, scope: !14010)
!14022 = !DILocation(line: 374, column: 20, scope: !14010)
!14023 = !DILocation(line: 374, column: 9, scope: !14010)
!14024 = !DILocation(line: 378, column: 11, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !13970, file: !1339, line: 378, column: 11)
!14026 = !DILocation(line: 378, column: 16, scope: !14025)
!14027 = !DILocation(line: 378, column: 11, scope: !13970)
!14028 = !DILocation(line: 380, column: 16, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !1339, line: 380, column: 15)
!14030 = distinct !DILexicalBlock(scope: !14025, file: !1339, line: 379, column: 9)
!14031 = !DILocation(line: 380, column: 21, scope: !14029)
!14032 = !DILocation(line: 380, column: 40, scope: !14029)
!14033 = !DILocation(line: 380, column: 43, scope: !14029)
!14034 = !DILocation(line: 380, column: 15, scope: !14030)
!14035 = !DILocation(line: 381, column: 21, scope: !14029)
!14036 = !DILocation(line: 381, column: 24, scope: !14029)
!14037 = !DILocation(line: 381, column: 13, scope: !14029)
!14038 = !DILocation(line: 382, column: 19, scope: !14030)
!14039 = !DILocation(line: 382, column: 22, scope: !14030)
!14040 = !DILocation(line: 383, column: 9, scope: !14030)
!14041 = !DILocation(line: 384, column: 5, scope: !13970)
!14042 = !DILocation(line: 386, column: 4, scope: !13471)
!14043 = !DILocation(line: 386, column: 12, scope: !13471)
!14044 = !DILocation(line: 388, column: 10, scope: !13471)
!14045 = !DILocation(line: 388, column: 3, scope: !13471)
!14046 = distinct !DISubprogram(name: "adjust_value", scope: !1339, file: !1339, line: 54, type: !1323, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14047 = !DILocalVariable(name: "inexact_style", arg: 1, scope: !14046, file: !1339, line: 54, type: !27)
!14048 = !DILocation(line: 54, column: 19, scope: !14046)
!14049 = !DILocalVariable(name: "value", arg: 2, scope: !14046, file: !1339, line: 54, type: !1317)
!14050 = !DILocation(line: 54, column: 46, scope: !14046)
!14051 = !DILocation(line: 60, column: 7, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14046, file: !1339, line: 60, column: 7)
!14053 = !DILocation(line: 60, column: 21, scope: !14052)
!14054 = !DILocation(line: 60, column: 47, scope: !14052)
!14055 = !DILocation(line: 60, column: 50, scope: !14052)
!14056 = !DILocation(line: 60, column: 56, scope: !14052)
!14057 = !DILocation(line: 60, column: 7, scope: !14046)
!14058 = !DILocalVariable(name: "u", scope: !14059, file: !1339, line: 62, type: !168)
!14059 = distinct !DILexicalBlock(scope: !14052, file: !1339, line: 61, column: 5)
!14060 = !DILocation(line: 62, column: 17, scope: !14059)
!14061 = !DILocation(line: 62, column: 21, scope: !14059)
!14062 = !DILocation(line: 63, column: 15, scope: !14059)
!14063 = !DILocation(line: 63, column: 20, scope: !14059)
!14064 = !DILocation(line: 63, column: 34, scope: !14059)
!14065 = !DILocation(line: 63, column: 51, scope: !14059)
!14066 = !DILocation(line: 63, column: 54, scope: !14059)
!14067 = !DILocation(line: 63, column: 59, scope: !14059)
!14068 = !DILocation(line: 63, column: 56, scope: !14059)
!14069 = !DILocation(line: 0, scope: !14059)
!14070 = !DILocation(line: 63, column: 19, scope: !14059)
!14071 = !DILocation(line: 63, column: 17, scope: !14059)
!14072 = !DILocation(line: 63, column: 13, scope: !14059)
!14073 = !DILocation(line: 64, column: 5, scope: !14059)
!14074 = !DILocation(line: 66, column: 10, scope: !14046)
!14075 = !DILocation(line: 66, column: 3, scope: !14046)
!14076 = distinct !DISubprogram(name: "group_number", scope: !1339, file: !1339, line: 79, type: !1325, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14077 = !DILocalVariable(name: "number", arg: 1, scope: !14076, file: !1339, line: 79, type: !143)
!14078 = !DILocation(line: 79, column: 21, scope: !14076)
!14079 = !DILocalVariable(name: "numberlen", arg: 2, scope: !14076, file: !1339, line: 79, type: !149)
!14080 = !DILocation(line: 79, column: 36, scope: !14076)
!14081 = !DILocalVariable(name: "grouping", arg: 3, scope: !14076, file: !1339, line: 80, type: !146)
!14082 = !DILocation(line: 80, column: 27, scope: !14076)
!14083 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !14076, file: !1339, line: 80, type: !146)
!14084 = !DILocation(line: 80, column: 49, scope: !14076)
!14085 = !DILocalVariable(name: "d", scope: !14076, file: !1339, line: 82, type: !143)
!14086 = !DILocation(line: 82, column: 18, scope: !14076)
!14087 = !DILocalVariable(name: "grouplen", scope: !14076, file: !1339, line: 83, type: !149)
!14088 = !DILocation(line: 83, column: 10, scope: !14076)
!14089 = !DILocalVariable(name: "thousands_seplen", scope: !14076, file: !1339, line: 84, type: !149)
!14090 = !DILocation(line: 84, column: 10, scope: !14076)
!14091 = !DILocation(line: 84, column: 37, scope: !14076)
!14092 = !DILocation(line: 84, column: 29, scope: !14076)
!14093 = !DILocalVariable(name: "i", scope: !14076, file: !1339, line: 85, type: !149)
!14094 = !DILocation(line: 85, column: 10, scope: !14076)
!14095 = !DILocation(line: 85, column: 14, scope: !14076)
!14096 = !DILocalVariable(name: "buf", scope: !14076, file: !1339, line: 89, type: !1327)
!14097 = !DILocation(line: 89, column: 8, scope: !14076)
!14098 = !DILocation(line: 91, column: 3, scope: !14076)
!14099 = !DILocation(line: 91, column: 16, scope: !14076)
!14100 = !DILocation(line: 91, column: 24, scope: !14076)
!14101 = !DILocation(line: 92, column: 7, scope: !14076)
!14102 = !DILocation(line: 92, column: 16, scope: !14076)
!14103 = !DILocation(line: 92, column: 14, scope: !14076)
!14104 = !DILocation(line: 92, column: 5, scope: !14076)
!14105 = !DILocation(line: 94, column: 3, scope: !14076)
!14106 = !DILocalVariable(name: "g", scope: !14107, file: !1339, line: 96, type: !591)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !1339, line: 95, column: 5)
!14108 = distinct !DILexicalBlock(scope: !14109, file: !1339, line: 94, column: 3)
!14109 = distinct !DILexicalBlock(scope: !14076, file: !1339, line: 94, column: 3)
!14110 = !DILocation(line: 96, column: 21, scope: !14107)
!14111 = !DILocation(line: 96, column: 26, scope: !14107)
!14112 = !DILocation(line: 96, column: 25, scope: !14107)
!14113 = !DILocation(line: 98, column: 11, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14107, file: !1339, line: 98, column: 11)
!14115 = !DILocation(line: 98, column: 11, scope: !14107)
!14116 = !DILocation(line: 100, column: 22, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14114, file: !1339, line: 99, column: 9)
!14118 = !DILocation(line: 100, column: 24, scope: !14117)
!14119 = !DILocation(line: 100, column: 37, scope: !14117)
!14120 = !DILocation(line: 100, column: 41, scope: !14117)
!14121 = !DILocation(line: 100, column: 20, scope: !14117)
!14122 = !DILocation(line: 101, column: 19, scope: !14117)
!14123 = !DILocation(line: 102, column: 9, scope: !14117)
!14124 = !DILocation(line: 104, column: 11, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14107, file: !1339, line: 104, column: 11)
!14126 = !DILocation(line: 104, column: 15, scope: !14125)
!14127 = !DILocation(line: 104, column: 13, scope: !14125)
!14128 = !DILocation(line: 104, column: 11, scope: !14107)
!14129 = !DILocation(line: 105, column: 20, scope: !14125)
!14130 = !DILocation(line: 105, column: 18, scope: !14125)
!14131 = !DILocation(line: 105, column: 9, scope: !14125)
!14132 = !DILocation(line: 107, column: 12, scope: !14107)
!14133 = !DILocation(line: 107, column: 9, scope: !14107)
!14134 = !DILocation(line: 108, column: 12, scope: !14107)
!14135 = !DILocation(line: 108, column: 9, scope: !14107)
!14136 = !DILocation(line: 109, column: 15, scope: !14107)
!14137 = !DILocation(line: 109, column: 18, scope: !14107)
!14138 = !DILocation(line: 109, column: 24, scope: !14107)
!14139 = !DILocation(line: 109, column: 22, scope: !14107)
!14140 = !DILocation(line: 109, column: 27, scope: !14107)
!14141 = !DILocation(line: 109, column: 7, scope: !14107)
!14142 = !DILocation(line: 110, column: 11, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14107, file: !1339, line: 110, column: 11)
!14144 = !DILocation(line: 110, column: 13, scope: !14143)
!14145 = !DILocation(line: 110, column: 11, scope: !14107)
!14146 = !DILocation(line: 111, column: 16, scope: !14143)
!14147 = !DILocation(line: 111, column: 9, scope: !14143)
!14148 = !DILocation(line: 113, column: 12, scope: !14107)
!14149 = !DILocation(line: 113, column: 9, scope: !14107)
!14150 = !DILocation(line: 114, column: 15, scope: !14107)
!14151 = !DILocation(line: 114, column: 18, scope: !14107)
!14152 = !DILocation(line: 114, column: 33, scope: !14107)
!14153 = !DILocation(line: 114, column: 7, scope: !14107)
!14154 = !DILocation(line: 94, column: 3, scope: !14108)
!14155 = distinct !{!14155, !14156, !14157}
!14156 = !DILocation(line: 94, column: 3, scope: !14109)
!14157 = !DILocation(line: 115, column: 5, scope: !14109)
!14158 = distinct !DISubprogram(name: "human_options", scope: !1339, file: !1339, line: 462, type: !1319, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14159 = !DILocalVariable(name: "spec", arg: 1, scope: !14158, file: !1339, line: 462, type: !146)
!14160 = !DILocation(line: 462, column: 28, scope: !14158)
!14161 = !DILocalVariable(name: "opts", arg: 2, scope: !14158, file: !1339, line: 462, type: !524)
!14162 = !DILocation(line: 462, column: 39, scope: !14158)
!14163 = !DILocalVariable(name: "block_size", arg: 3, scope: !14158, file: !1339, line: 462, type: !1321)
!14164 = !DILocation(line: 462, column: 56, scope: !14158)
!14165 = !DILocalVariable(name: "e", scope: !14158, file: !1339, line: 464, type: !1322)
!14166 = !DILocation(line: 464, column: 16, scope: !14158)
!14167 = !DILocation(line: 464, column: 30, scope: !14158)
!14168 = !DILocation(line: 464, column: 36, scope: !14158)
!14169 = !DILocation(line: 464, column: 48, scope: !14158)
!14170 = !DILocation(line: 464, column: 20, scope: !14158)
!14171 = !DILocation(line: 465, column: 8, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14158, file: !1339, line: 465, column: 7)
!14173 = !DILocation(line: 465, column: 7, scope: !14172)
!14174 = !DILocation(line: 465, column: 19, scope: !14172)
!14175 = !DILocation(line: 465, column: 7, scope: !14158)
!14176 = !DILocation(line: 467, column: 21, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14172, file: !1339, line: 466, column: 5)
!14178 = !DILocation(line: 467, column: 8, scope: !14177)
!14179 = !DILocation(line: 467, column: 19, scope: !14177)
!14180 = !DILocation(line: 468, column: 9, scope: !14177)
!14181 = !DILocation(line: 469, column: 5, scope: !14177)
!14182 = !DILocation(line: 470, column: 10, scope: !14158)
!14183 = !DILocation(line: 470, column: 3, scope: !14158)
!14184 = distinct !DISubprogram(name: "humblock", scope: !1339, file: !1339, line: 412, type: !1330, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14185 = !DILocalVariable(name: "spec", arg: 1, scope: !14184, file: !1339, line: 412, type: !146)
!14186 = !DILocation(line: 412, column: 23, scope: !14184)
!14187 = !DILocalVariable(name: "block_size", arg: 2, scope: !14184, file: !1339, line: 412, type: !1321)
!14188 = !DILocation(line: 412, column: 40, scope: !14184)
!14189 = !DILocalVariable(name: "options", arg: 3, scope: !14184, file: !1339, line: 412, type: !524)
!14190 = !DILocation(line: 412, column: 57, scope: !14184)
!14191 = !DILocalVariable(name: "i", scope: !14184, file: !1339, line: 414, type: !27)
!14192 = !DILocation(line: 414, column: 7, scope: !14184)
!14193 = !DILocalVariable(name: "opts", scope: !14184, file: !1339, line: 415, type: !27)
!14194 = !DILocation(line: 415, column: 7, scope: !14184)
!14195 = !DILocation(line: 417, column: 9, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14184, file: !1339, line: 417, column: 7)
!14197 = !DILocation(line: 418, column: 7, scope: !14196)
!14198 = !DILocation(line: 418, column: 20, scope: !14196)
!14199 = !DILocation(line: 418, column: 18, scope: !14196)
!14200 = !DILocation(line: 419, column: 7, scope: !14196)
!14201 = !DILocation(line: 419, column: 20, scope: !14196)
!14202 = !DILocation(line: 419, column: 18, scope: !14196)
!14203 = !DILocation(line: 417, column: 7, scope: !14184)
!14204 = !DILocation(line: 420, column: 19, scope: !14196)
!14205 = !DILocation(line: 420, column: 6, scope: !14196)
!14206 = !DILocation(line: 420, column: 17, scope: !14196)
!14207 = !DILocation(line: 420, column: 5, scope: !14196)
!14208 = !DILocation(line: 423, column: 12, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14210, file: !1339, line: 423, column: 11)
!14210 = distinct !DILexicalBlock(scope: !14196, file: !1339, line: 422, column: 5)
!14211 = !DILocation(line: 423, column: 11, scope: !14209)
!14212 = !DILocation(line: 423, column: 17, scope: !14209)
!14213 = !DILocation(line: 423, column: 11, scope: !14210)
!14214 = !DILocation(line: 425, column: 16, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14209, file: !1339, line: 424, column: 9)
!14216 = !DILocation(line: 426, column: 15, scope: !14215)
!14217 = !DILocation(line: 427, column: 9, scope: !14215)
!14218 = !DILocation(line: 429, column: 21, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14210, file: !1339, line: 429, column: 11)
!14220 = !DILocation(line: 429, column: 19, scope: !14219)
!14221 = !DILocation(line: 429, column: 13, scope: !14219)
!14222 = !DILocation(line: 429, column: 11, scope: !14210)
!14223 = !DILocation(line: 431, column: 35, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14219, file: !1339, line: 430, column: 9)
!14225 = !DILocation(line: 431, column: 19, scope: !14224)
!14226 = !DILocation(line: 431, column: 16, scope: !14224)
!14227 = !DILocation(line: 432, column: 12, scope: !14224)
!14228 = !DILocation(line: 432, column: 23, scope: !14224)
!14229 = !DILocation(line: 433, column: 9, scope: !14224)
!14230 = !DILocalVariable(name: "ptr", scope: !14231, file: !1339, line: 436, type: !143)
!14231 = distinct !DILexicalBlock(scope: !14219, file: !1339, line: 435, column: 9)
!14232 = !DILocation(line: 436, column: 17, scope: !14231)
!14233 = !DILocalVariable(name: "e", scope: !14231, file: !1339, line: 437, type: !1322)
!14234 = !DILocation(line: 437, column: 24, scope: !14231)
!14235 = !DILocation(line: 437, column: 40, scope: !14231)
!14236 = !DILocation(line: 437, column: 55, scope: !14231)
!14237 = !DILocation(line: 437, column: 28, scope: !14231)
!14238 = !DILocation(line: 439, column: 15, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14231, file: !1339, line: 439, column: 15)
!14240 = !DILocation(line: 439, column: 17, scope: !14239)
!14241 = !DILocation(line: 439, column: 15, scope: !14231)
!14242 = !DILocation(line: 441, column: 16, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14239, file: !1339, line: 440, column: 13)
!14244 = !DILocation(line: 441, column: 24, scope: !14243)
!14245 = !DILocation(line: 442, column: 22, scope: !14243)
!14246 = !DILocation(line: 442, column: 15, scope: !14243)
!14247 = !DILocation(line: 444, column: 11, scope: !14231)
!14248 = !DILocation(line: 444, column: 29, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !1339, line: 444, column: 11)
!14250 = distinct !DILexicalBlock(scope: !14231, file: !1339, line: 444, column: 11)
!14251 = !DILocation(line: 444, column: 28, scope: !14249)
!14252 = !DILocation(line: 444, column: 25, scope: !14249)
!14253 = !DILocation(line: 444, column: 34, scope: !14249)
!14254 = !DILocation(line: 444, column: 38, scope: !14249)
!14255 = !DILocation(line: 444, column: 37, scope: !14249)
!14256 = !DILocation(line: 444, column: 43, scope: !14249)
!14257 = !DILocation(line: 0, scope: !14249)
!14258 = !DILocation(line: 444, column: 18, scope: !14249)
!14259 = !DILocation(line: 444, column: 11, scope: !14250)
!14260 = !DILocation(line: 445, column: 17, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14249, file: !1339, line: 445, column: 17)
!14262 = !DILocation(line: 445, column: 25, scope: !14261)
!14263 = !DILocation(line: 445, column: 22, scope: !14261)
!14264 = !DILocation(line: 445, column: 17, scope: !14249)
!14265 = !DILocation(line: 447, column: 22, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14261, file: !1339, line: 446, column: 15)
!14267 = !DILocation(line: 448, column: 21, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14266, file: !1339, line: 448, column: 21)
!14269 = !DILocation(line: 448, column: 29, scope: !14268)
!14270 = !DILocation(line: 448, column: 21, scope: !14266)
!14271 = !DILocation(line: 449, column: 24, scope: !14268)
!14272 = !DILocation(line: 449, column: 19, scope: !14268)
!14273 = !DILocation(line: 450, column: 21, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14266, file: !1339, line: 450, column: 21)
!14275 = !DILocation(line: 450, column: 29, scope: !14274)
!14276 = !DILocation(line: 450, column: 36, scope: !14274)
!14277 = !DILocation(line: 450, column: 39, scope: !14274)
!14278 = !DILocation(line: 450, column: 47, scope: !14274)
!14279 = !DILocation(line: 450, column: 21, scope: !14266)
!14280 = !DILocation(line: 451, column: 24, scope: !14274)
!14281 = !DILocation(line: 451, column: 19, scope: !14274)
!14282 = !DILocation(line: 452, column: 17, scope: !14266)
!14283 = !DILocation(line: 444, column: 56, scope: !14249)
!14284 = !DILocation(line: 444, column: 11, scope: !14249)
!14285 = distinct !{!14285, !14259, !14286}
!14286 = !DILocation(line: 453, column: 15, scope: !14250)
!14287 = !DILocation(line: 457, column: 14, scope: !14184)
!14288 = !DILocation(line: 457, column: 4, scope: !14184)
!14289 = !DILocation(line: 457, column: 12, scope: !14184)
!14290 = !DILocation(line: 458, column: 3, scope: !14184)
!14291 = !DILocation(line: 459, column: 1, scope: !14184)
!14292 = distinct !DISubprogram(name: "default_block_size", scope: !1339, file: !1339, line: 406, type: !1334, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14293 = !DILocation(line: 408, column: 10, scope: !14292)
!14294 = !DILocation(line: 408, column: 3, scope: !14292)
!14295 = distinct !DISubprogram(name: "getuser", scope: !1351, file: !1351, line: 69, type: !1347, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14296 = !DILocalVariable(name: "uid", arg: 1, scope: !14295, file: !1351, line: 69, type: !692)
!14297 = !DILocation(line: 69, column: 16, scope: !14295)
!14298 = !DILocalVariable(name: "tail", scope: !14295, file: !1351, line: 71, type: !1349)
!14299 = !DILocation(line: 71, column: 18, scope: !14295)
!14300 = !DILocalVariable(name: "match", scope: !14295, file: !1351, line: 72, type: !1349)
!14301 = !DILocation(line: 72, column: 18, scope: !14295)
!14302 = !DILocation(line: 74, column: 15, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14295, file: !1351, line: 74, column: 3)
!14304 = !DILocation(line: 74, column: 13, scope: !14303)
!14305 = !DILocation(line: 74, column: 8, scope: !14303)
!14306 = !DILocation(line: 74, column: 27, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14303, file: !1351, line: 74, column: 3)
!14308 = !DILocation(line: 74, column: 3, scope: !14303)
!14309 = !DILocation(line: 76, column: 11, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !1351, line: 76, column: 11)
!14311 = distinct !DILexicalBlock(scope: !14307, file: !1351, line: 75, column: 5)
!14312 = !DILocation(line: 76, column: 17, scope: !14310)
!14313 = !DILocation(line: 76, column: 20, scope: !14310)
!14314 = !DILocation(line: 76, column: 25, scope: !14310)
!14315 = !DILocation(line: 76, column: 22, scope: !14310)
!14316 = !DILocation(line: 76, column: 11, scope: !14311)
!14317 = !DILocation(line: 78, column: 19, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14310, file: !1351, line: 77, column: 9)
!14319 = !DILocation(line: 78, column: 17, scope: !14318)
!14320 = !DILocation(line: 79, column: 11, scope: !14318)
!14321 = !DILocation(line: 81, column: 5, scope: !14311)
!14322 = !DILocation(line: 74, column: 40, scope: !14307)
!14323 = !DILocation(line: 74, column: 46, scope: !14307)
!14324 = !DILocation(line: 74, column: 38, scope: !14307)
!14325 = !DILocation(line: 74, column: 3, scope: !14307)
!14326 = distinct !{!14326, !14308, !14327}
!14327 = !DILocation(line: 81, column: 5, scope: !14303)
!14328 = !DILocation(line: 83, column: 7, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14295, file: !1351, line: 83, column: 7)
!14330 = !DILocation(line: 83, column: 13, scope: !14329)
!14331 = !DILocation(line: 83, column: 7, scope: !14295)
!14332 = !DILocalVariable(name: "pwent", scope: !14333, file: !1351, line: 85, type: !1360)
!14333 = distinct !DILexicalBlock(scope: !14329, file: !1351, line: 84, column: 5)
!14334 = !DILocation(line: 85, column: 22, scope: !14333)
!14335 = !DILocation(line: 85, column: 40, scope: !14333)
!14336 = !DILocation(line: 85, column: 30, scope: !14333)
!14337 = !DILocalVariable(name: "name", scope: !14333, file: !1351, line: 86, type: !146)
!14338 = !DILocation(line: 86, column: 19, scope: !14333)
!14339 = !DILocation(line: 86, column: 26, scope: !14333)
!14340 = !DILocation(line: 86, column: 34, scope: !14333)
!14341 = !DILocation(line: 86, column: 41, scope: !14333)
!14342 = !{!14343, !2443, i64 0}
!14343 = !{!"passwd", !2443, i64 0, !2443, i64 8, !2437, i64 16, !2437, i64 20, !2443, i64 24, !2443, i64 32, !2443, i64 40}
!14344 = !DILocation(line: 87, column: 24, scope: !14333)
!14345 = !DILocation(line: 87, column: 15, scope: !14333)
!14346 = !DILocation(line: 87, column: 13, scope: !14333)
!14347 = !DILocation(line: 88, column: 21, scope: !14333)
!14348 = !DILocation(line: 88, column: 7, scope: !14333)
!14349 = !DILocation(line: 88, column: 14, scope: !14333)
!14350 = !DILocation(line: 88, column: 17, scope: !14333)
!14351 = !DILocation(line: 88, column: 19, scope: !14333)
!14352 = !DILocation(line: 89, column: 15, scope: !14333)
!14353 = !DILocation(line: 89, column: 22, scope: !14333)
!14354 = !DILocation(line: 89, column: 28, scope: !14333)
!14355 = !DILocation(line: 89, column: 7, scope: !14333)
!14356 = !DILocation(line: 92, column: 21, scope: !14333)
!14357 = !DILocation(line: 92, column: 7, scope: !14333)
!14358 = !DILocation(line: 92, column: 14, scope: !14333)
!14359 = !DILocation(line: 92, column: 19, scope: !14333)
!14360 = !DILocation(line: 93, column: 20, scope: !14333)
!14361 = !DILocation(line: 93, column: 18, scope: !14333)
!14362 = !DILocation(line: 94, column: 5, scope: !14333)
!14363 = !DILocation(line: 96, column: 10, scope: !14295)
!14364 = !DILocation(line: 96, column: 17, scope: !14295)
!14365 = !DILocation(line: 96, column: 27, scope: !14295)
!14366 = !DILocation(line: 96, column: 34, scope: !14295)
!14367 = !DILocation(line: 96, column: 3, scope: !14295)
!14368 = distinct !DISubprogram(name: "getuidbyname", scope: !1351, file: !1351, line: 105, type: !1371, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14369 = !DILocalVariable(name: "user", arg: 1, scope: !14368, file: !1351, line: 105, type: !146)
!14370 = !DILocation(line: 105, column: 27, scope: !14368)
!14371 = !DILocalVariable(name: "tail", scope: !14368, file: !1351, line: 107, type: !1349)
!14372 = !DILocation(line: 107, column: 18, scope: !14368)
!14373 = !DILocalVariable(name: "pwent", scope: !14368, file: !1351, line: 108, type: !1360)
!14374 = !DILocation(line: 108, column: 18, scope: !14368)
!14375 = !DILocation(line: 110, column: 15, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14368, file: !1351, line: 110, column: 3)
!14377 = !DILocation(line: 110, column: 13, scope: !14376)
!14378 = !DILocation(line: 110, column: 8, scope: !14376)
!14379 = !DILocation(line: 110, column: 27, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14376, file: !1351, line: 110, column: 3)
!14381 = !DILocation(line: 110, column: 3, scope: !14376)
!14382 = !DILocation(line: 112, column: 10, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !1351, line: 112, column: 9)
!14384 = !DILocation(line: 112, column: 16, scope: !14383)
!14385 = !DILocation(line: 112, column: 9, scope: !14383)
!14386 = !DILocation(line: 112, column: 25, scope: !14383)
!14387 = !DILocation(line: 112, column: 24, scope: !14383)
!14388 = !DILocation(line: 112, column: 21, scope: !14383)
!14389 = !DILocation(line: 112, column: 30, scope: !14383)
!14390 = !DILocation(line: 112, column: 42, scope: !14383)
!14391 = !DILocation(line: 112, column: 48, scope: !14383)
!14392 = !DILocation(line: 112, column: 54, scope: !14383)
!14393 = !DILocation(line: 112, column: 34, scope: !14383)
!14394 = !DILocation(line: 112, column: 9, scope: !14380)
!14395 = !DILocation(line: 113, column: 15, scope: !14383)
!14396 = !DILocation(line: 113, column: 21, scope: !14383)
!14397 = !DILocation(line: 113, column: 24, scope: !14383)
!14398 = !DILocation(line: 113, column: 7, scope: !14383)
!14399 = !DILocation(line: 112, column: 58, scope: !14383)
!14400 = !DILocation(line: 110, column: 40, scope: !14380)
!14401 = !DILocation(line: 110, column: 46, scope: !14380)
!14402 = !DILocation(line: 110, column: 38, scope: !14380)
!14403 = !DILocation(line: 110, column: 3, scope: !14380)
!14404 = distinct !{!14404, !14381, !14405}
!14405 = !DILocation(line: 113, column: 24, scope: !14376)
!14406 = !DILocation(line: 115, column: 15, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14368, file: !1351, line: 115, column: 3)
!14408 = !DILocation(line: 115, column: 13, scope: !14407)
!14409 = !DILocation(line: 115, column: 8, scope: !14407)
!14410 = !DILocation(line: 115, column: 29, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14407, file: !1351, line: 115, column: 3)
!14412 = !DILocation(line: 115, column: 3, scope: !14407)
!14413 = !DILocation(line: 117, column: 10, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14411, file: !1351, line: 117, column: 9)
!14415 = !DILocation(line: 117, column: 16, scope: !14414)
!14416 = !DILocation(line: 117, column: 9, scope: !14414)
!14417 = !DILocation(line: 117, column: 25, scope: !14414)
!14418 = !DILocation(line: 117, column: 24, scope: !14414)
!14419 = !DILocation(line: 117, column: 21, scope: !14414)
!14420 = !DILocation(line: 117, column: 30, scope: !14414)
!14421 = !DILocation(line: 117, column: 42, scope: !14414)
!14422 = !DILocation(line: 117, column: 48, scope: !14414)
!14423 = !DILocation(line: 117, column: 54, scope: !14414)
!14424 = !DILocation(line: 117, column: 34, scope: !14414)
!14425 = !DILocation(line: 117, column: 9, scope: !14411)
!14426 = !DILocation(line: 118, column: 7, scope: !14414)
!14427 = !DILocation(line: 117, column: 58, scope: !14414)
!14428 = !DILocation(line: 115, column: 42, scope: !14411)
!14429 = !DILocation(line: 115, column: 48, scope: !14411)
!14430 = !DILocation(line: 115, column: 40, scope: !14411)
!14431 = !DILocation(line: 115, column: 3, scope: !14411)
!14432 = distinct !{!14432, !14412, !14433}
!14433 = !DILocation(line: 118, column: 14, scope: !14407)
!14434 = !DILocation(line: 120, column: 21, scope: !14368)
!14435 = !DILocation(line: 120, column: 11, scope: !14368)
!14436 = !DILocation(line: 120, column: 9, scope: !14368)
!14437 = !DILocation(line: 131, column: 19, scope: !14368)
!14438 = !DILocation(line: 131, column: 10, scope: !14368)
!14439 = !DILocation(line: 131, column: 8, scope: !14368)
!14440 = !DILocation(line: 132, column: 11, scope: !14368)
!14441 = !DILocation(line: 132, column: 17, scope: !14368)
!14442 = !DILocation(line: 132, column: 23, scope: !14368)
!14443 = !DILocation(line: 132, column: 3, scope: !14368)
!14444 = !DILocation(line: 135, column: 7, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14368, file: !1351, line: 135, column: 7)
!14446 = !DILocation(line: 135, column: 7, scope: !14368)
!14447 = !DILocation(line: 137, column: 20, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14445, file: !1351, line: 136, column: 5)
!14449 = !DILocation(line: 137, column: 27, scope: !14448)
!14450 = !{!14343, !2437, i64 16}
!14451 = !DILocation(line: 137, column: 7, scope: !14448)
!14452 = !DILocation(line: 137, column: 13, scope: !14448)
!14453 = !DILocation(line: 137, column: 16, scope: !14448)
!14454 = !DILocation(line: 137, column: 18, scope: !14448)
!14455 = !DILocation(line: 138, column: 20, scope: !14448)
!14456 = !DILocation(line: 138, column: 7, scope: !14448)
!14457 = !DILocation(line: 138, column: 13, scope: !14448)
!14458 = !DILocation(line: 138, column: 18, scope: !14448)
!14459 = !DILocation(line: 139, column: 20, scope: !14448)
!14460 = !DILocation(line: 139, column: 18, scope: !14448)
!14461 = !DILocation(line: 140, column: 15, scope: !14448)
!14462 = !DILocation(line: 140, column: 21, scope: !14448)
!14463 = !DILocation(line: 140, column: 24, scope: !14448)
!14464 = !DILocation(line: 140, column: 7, scope: !14448)
!14465 = !DILocation(line: 143, column: 16, scope: !14368)
!14466 = !DILocation(line: 143, column: 3, scope: !14368)
!14467 = !DILocation(line: 143, column: 9, scope: !14368)
!14468 = !DILocation(line: 143, column: 14, scope: !14368)
!14469 = !DILocation(line: 144, column: 18, scope: !14368)
!14470 = !DILocation(line: 144, column: 16, scope: !14368)
!14471 = !DILocation(line: 145, column: 3, scope: !14368)
!14472 = !DILocation(line: 146, column: 1, scope: !14368)
!14473 = distinct !DISubprogram(name: "getgroup", scope: !1351, file: !1351, line: 151, type: !1374, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14474 = !DILocalVariable(name: "gid", arg: 1, scope: !14473, file: !1351, line: 151, type: !697)
!14475 = !DILocation(line: 151, column: 17, scope: !14473)
!14476 = !DILocalVariable(name: "tail", scope: !14473, file: !1351, line: 153, type: !1349)
!14477 = !DILocation(line: 153, column: 18, scope: !14473)
!14478 = !DILocalVariable(name: "match", scope: !14473, file: !1351, line: 154, type: !1349)
!14479 = !DILocation(line: 154, column: 18, scope: !14473)
!14480 = !DILocation(line: 156, column: 15, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14473, file: !1351, line: 156, column: 3)
!14482 = !DILocation(line: 156, column: 13, scope: !14481)
!14483 = !DILocation(line: 156, column: 8, scope: !14481)
!14484 = !DILocation(line: 156, column: 28, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14481, file: !1351, line: 156, column: 3)
!14486 = !DILocation(line: 156, column: 3, scope: !14481)
!14487 = !DILocation(line: 158, column: 11, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14489, file: !1351, line: 158, column: 11)
!14489 = distinct !DILexicalBlock(scope: !14485, file: !1351, line: 157, column: 5)
!14490 = !DILocation(line: 158, column: 17, scope: !14488)
!14491 = !DILocation(line: 158, column: 20, scope: !14488)
!14492 = !DILocation(line: 158, column: 25, scope: !14488)
!14493 = !DILocation(line: 158, column: 22, scope: !14488)
!14494 = !DILocation(line: 158, column: 11, scope: !14489)
!14495 = !DILocation(line: 160, column: 19, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14488, file: !1351, line: 159, column: 9)
!14497 = !DILocation(line: 160, column: 17, scope: !14496)
!14498 = !DILocation(line: 161, column: 11, scope: !14496)
!14499 = !DILocation(line: 163, column: 5, scope: !14489)
!14500 = !DILocation(line: 156, column: 41, scope: !14485)
!14501 = !DILocation(line: 156, column: 47, scope: !14485)
!14502 = !DILocation(line: 156, column: 39, scope: !14485)
!14503 = !DILocation(line: 156, column: 3, scope: !14485)
!14504 = distinct !{!14504, !14486, !14505}
!14505 = !DILocation(line: 163, column: 5, scope: !14481)
!14506 = !DILocation(line: 165, column: 7, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14473, file: !1351, line: 165, column: 7)
!14508 = !DILocation(line: 165, column: 13, scope: !14507)
!14509 = !DILocation(line: 165, column: 7, scope: !14473)
!14510 = !DILocalVariable(name: "grent", scope: !14511, file: !1351, line: 167, type: !1376)
!14511 = distinct !DILexicalBlock(scope: !14507, file: !1351, line: 166, column: 5)
!14512 = !DILocation(line: 167, column: 21, scope: !14511)
!14513 = !DILocation(line: 167, column: 39, scope: !14511)
!14514 = !DILocation(line: 167, column: 29, scope: !14511)
!14515 = !DILocalVariable(name: "name", scope: !14511, file: !1351, line: 168, type: !146)
!14516 = !DILocation(line: 168, column: 19, scope: !14511)
!14517 = !DILocation(line: 168, column: 26, scope: !14511)
!14518 = !DILocation(line: 168, column: 34, scope: !14511)
!14519 = !DILocation(line: 168, column: 41, scope: !14511)
!14520 = !{!14521, !2443, i64 0}
!14521 = !{!"group", !2443, i64 0, !2443, i64 8, !2437, i64 16, !2443, i64 24}
!14522 = !DILocation(line: 169, column: 24, scope: !14511)
!14523 = !DILocation(line: 169, column: 15, scope: !14511)
!14524 = !DILocation(line: 169, column: 13, scope: !14511)
!14525 = !DILocation(line: 170, column: 21, scope: !14511)
!14526 = !DILocation(line: 170, column: 7, scope: !14511)
!14527 = !DILocation(line: 170, column: 14, scope: !14511)
!14528 = !DILocation(line: 170, column: 17, scope: !14511)
!14529 = !DILocation(line: 170, column: 19, scope: !14511)
!14530 = !DILocation(line: 171, column: 15, scope: !14511)
!14531 = !DILocation(line: 171, column: 22, scope: !14511)
!14532 = !DILocation(line: 171, column: 28, scope: !14511)
!14533 = !DILocation(line: 171, column: 7, scope: !14511)
!14534 = !DILocation(line: 174, column: 21, scope: !14511)
!14535 = !DILocation(line: 174, column: 7, scope: !14511)
!14536 = !DILocation(line: 174, column: 14, scope: !14511)
!14537 = !DILocation(line: 174, column: 19, scope: !14511)
!14538 = !DILocation(line: 175, column: 21, scope: !14511)
!14539 = !DILocation(line: 175, column: 19, scope: !14511)
!14540 = !DILocation(line: 176, column: 5, scope: !14511)
!14541 = !DILocation(line: 178, column: 10, scope: !14473)
!14542 = !DILocation(line: 178, column: 17, scope: !14473)
!14543 = !DILocation(line: 178, column: 27, scope: !14473)
!14544 = !DILocation(line: 178, column: 34, scope: !14473)
!14545 = !DILocation(line: 178, column: 3, scope: !14473)
!14546 = distinct !DISubprogram(name: "getgidbyname", scope: !1351, file: !1351, line: 187, type: !1384, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14547 = !DILocalVariable(name: "group", arg: 1, scope: !14546, file: !1351, line: 187, type: !146)
!14548 = !DILocation(line: 187, column: 27, scope: !14546)
!14549 = !DILocalVariable(name: "tail", scope: !14546, file: !1351, line: 189, type: !1349)
!14550 = !DILocation(line: 189, column: 18, scope: !14546)
!14551 = !DILocalVariable(name: "grent", scope: !14546, file: !1351, line: 190, type: !1376)
!14552 = !DILocation(line: 190, column: 17, scope: !14546)
!14553 = !DILocation(line: 192, column: 15, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14546, file: !1351, line: 192, column: 3)
!14555 = !DILocation(line: 192, column: 13, scope: !14554)
!14556 = !DILocation(line: 192, column: 8, scope: !14554)
!14557 = !DILocation(line: 192, column: 28, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !1351, line: 192, column: 3)
!14559 = !DILocation(line: 192, column: 3, scope: !14554)
!14560 = !DILocation(line: 194, column: 10, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14558, file: !1351, line: 194, column: 9)
!14562 = !DILocation(line: 194, column: 16, scope: !14561)
!14563 = !DILocation(line: 194, column: 9, scope: !14561)
!14564 = !DILocation(line: 194, column: 25, scope: !14561)
!14565 = !DILocation(line: 194, column: 24, scope: !14561)
!14566 = !DILocation(line: 194, column: 21, scope: !14561)
!14567 = !DILocation(line: 194, column: 31, scope: !14561)
!14568 = !DILocation(line: 194, column: 43, scope: !14561)
!14569 = !DILocation(line: 194, column: 49, scope: !14561)
!14570 = !DILocation(line: 194, column: 55, scope: !14561)
!14571 = !DILocation(line: 194, column: 35, scope: !14561)
!14572 = !DILocation(line: 194, column: 9, scope: !14558)
!14573 = !DILocation(line: 195, column: 15, scope: !14561)
!14574 = !DILocation(line: 195, column: 21, scope: !14561)
!14575 = !DILocation(line: 195, column: 24, scope: !14561)
!14576 = !DILocation(line: 195, column: 7, scope: !14561)
!14577 = !DILocation(line: 194, column: 60, scope: !14561)
!14578 = !DILocation(line: 192, column: 41, scope: !14558)
!14579 = !DILocation(line: 192, column: 47, scope: !14558)
!14580 = !DILocation(line: 192, column: 39, scope: !14558)
!14581 = !DILocation(line: 192, column: 3, scope: !14558)
!14582 = distinct !{!14582, !14559, !14583}
!14583 = !DILocation(line: 195, column: 24, scope: !14554)
!14584 = !DILocation(line: 197, column: 15, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14546, file: !1351, line: 197, column: 3)
!14586 = !DILocation(line: 197, column: 13, scope: !14585)
!14587 = !DILocation(line: 197, column: 8, scope: !14585)
!14588 = !DILocation(line: 197, column: 30, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14585, file: !1351, line: 197, column: 3)
!14590 = !DILocation(line: 197, column: 3, scope: !14585)
!14591 = !DILocation(line: 199, column: 10, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14589, file: !1351, line: 199, column: 9)
!14593 = !DILocation(line: 199, column: 16, scope: !14592)
!14594 = !DILocation(line: 199, column: 9, scope: !14592)
!14595 = !DILocation(line: 199, column: 25, scope: !14592)
!14596 = !DILocation(line: 199, column: 24, scope: !14592)
!14597 = !DILocation(line: 199, column: 21, scope: !14592)
!14598 = !DILocation(line: 199, column: 31, scope: !14592)
!14599 = !DILocation(line: 199, column: 43, scope: !14592)
!14600 = !DILocation(line: 199, column: 49, scope: !14592)
!14601 = !DILocation(line: 199, column: 55, scope: !14592)
!14602 = !DILocation(line: 199, column: 35, scope: !14592)
!14603 = !DILocation(line: 199, column: 9, scope: !14589)
!14604 = !DILocation(line: 200, column: 7, scope: !14592)
!14605 = !DILocation(line: 199, column: 60, scope: !14592)
!14606 = !DILocation(line: 197, column: 43, scope: !14589)
!14607 = !DILocation(line: 197, column: 49, scope: !14589)
!14608 = !DILocation(line: 197, column: 41, scope: !14589)
!14609 = !DILocation(line: 197, column: 3, scope: !14589)
!14610 = distinct !{!14610, !14590, !14611}
!14611 = !DILocation(line: 200, column: 14, scope: !14585)
!14612 = !DILocation(line: 202, column: 21, scope: !14546)
!14613 = !DILocation(line: 202, column: 11, scope: !14546)
!14614 = !DILocation(line: 202, column: 9, scope: !14546)
!14615 = !DILocation(line: 213, column: 19, scope: !14546)
!14616 = !DILocation(line: 213, column: 10, scope: !14546)
!14617 = !DILocation(line: 213, column: 8, scope: !14546)
!14618 = !DILocation(line: 214, column: 11, scope: !14546)
!14619 = !DILocation(line: 214, column: 17, scope: !14546)
!14620 = !DILocation(line: 214, column: 23, scope: !14546)
!14621 = !DILocation(line: 214, column: 3, scope: !14546)
!14622 = !DILocation(line: 217, column: 7, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14546, file: !1351, line: 217, column: 7)
!14624 = !DILocation(line: 217, column: 7, scope: !14546)
!14625 = !DILocation(line: 219, column: 20, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14623, file: !1351, line: 218, column: 5)
!14627 = !DILocation(line: 219, column: 27, scope: !14626)
!14628 = !{!14521, !2437, i64 16}
!14629 = !DILocation(line: 219, column: 7, scope: !14626)
!14630 = !DILocation(line: 219, column: 13, scope: !14626)
!14631 = !DILocation(line: 219, column: 16, scope: !14626)
!14632 = !DILocation(line: 219, column: 18, scope: !14626)
!14633 = !DILocation(line: 220, column: 20, scope: !14626)
!14634 = !DILocation(line: 220, column: 7, scope: !14626)
!14635 = !DILocation(line: 220, column: 13, scope: !14626)
!14636 = !DILocation(line: 220, column: 18, scope: !14626)
!14637 = !DILocation(line: 221, column: 21, scope: !14626)
!14638 = !DILocation(line: 221, column: 19, scope: !14626)
!14639 = !DILocation(line: 222, column: 15, scope: !14626)
!14640 = !DILocation(line: 222, column: 21, scope: !14626)
!14641 = !DILocation(line: 222, column: 24, scope: !14626)
!14642 = !DILocation(line: 222, column: 7, scope: !14626)
!14643 = !DILocation(line: 225, column: 16, scope: !14546)
!14644 = !DILocation(line: 225, column: 3, scope: !14546)
!14645 = !DILocation(line: 225, column: 9, scope: !14546)
!14646 = !DILocation(line: 225, column: 14, scope: !14546)
!14647 = !DILocation(line: 226, column: 19, scope: !14546)
!14648 = !DILocation(line: 226, column: 17, scope: !14546)
!14649 = !DILocation(line: 227, column: 3, scope: !14546)
!14650 = !DILocation(line: 228, column: 1, scope: !14546)
!14651 = distinct !DISubprogram(name: "imaxtostr", scope: !14652, file: !14652, line: 36, type: !1859, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1854, retainedNodes: !152)
!14652 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mbarbar/clone/coreutils")
!14653 = !DILocalVariable(name: "i", arg: 1, scope: !14651, file: !14652, line: 36, type: !1857)
!14654 = !DILocation(line: 36, column: 19, scope: !14651)
!14655 = !DILocalVariable(name: "buf", arg: 2, scope: !14651, file: !14652, line: 36, type: !143)
!14656 = !DILocation(line: 36, column: 28, scope: !14651)
!14657 = !DILocalVariable(name: "p", scope: !14651, file: !14652, line: 38, type: !143)
!14658 = !DILocation(line: 38, column: 9, scope: !14651)
!14659 = !DILocation(line: 38, column: 13, scope: !14651)
!14660 = !DILocation(line: 38, column: 17, scope: !14651)
!14661 = !DILocation(line: 39, column: 4, scope: !14651)
!14662 = !DILocation(line: 39, column: 6, scope: !14651)
!14663 = !DILocation(line: 41, column: 7, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14651, file: !14652, line: 41, column: 7)
!14665 = !DILocation(line: 41, column: 9, scope: !14664)
!14666 = !DILocation(line: 41, column: 7, scope: !14651)
!14667 = !DILocation(line: 43, column: 7, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14664, file: !14652, line: 42, column: 5)
!14669 = !DILocation(line: 44, column: 22, scope: !14668)
!14670 = !DILocation(line: 44, column: 24, scope: !14668)
!14671 = !DILocation(line: 44, column: 20, scope: !14668)
!14672 = !DILocation(line: 44, column: 16, scope: !14668)
!14673 = !DILocation(line: 44, column: 10, scope: !14668)
!14674 = !DILocation(line: 44, column: 14, scope: !14668)
!14675 = !DILocation(line: 44, column: 9, scope: !14668)
!14676 = !DILocation(line: 45, column: 17, scope: !14668)
!14677 = !DILocation(line: 45, column: 24, scope: !14668)
!14678 = distinct !{!14678, !14667, !14679}
!14679 = !DILocation(line: 45, column: 28, scope: !14668)
!14680 = !DILocation(line: 47, column: 8, scope: !14668)
!14681 = !DILocation(line: 47, column: 12, scope: !14668)
!14682 = !DILocation(line: 48, column: 5, scope: !14668)
!14683 = !DILocation(line: 51, column: 7, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14664, file: !14652, line: 50, column: 5)
!14685 = !DILocation(line: 52, column: 22, scope: !14684)
!14686 = !DILocation(line: 52, column: 24, scope: !14684)
!14687 = !DILocation(line: 52, column: 20, scope: !14684)
!14688 = !DILocation(line: 52, column: 16, scope: !14684)
!14689 = !DILocation(line: 52, column: 10, scope: !14684)
!14690 = !DILocation(line: 52, column: 14, scope: !14684)
!14691 = !DILocation(line: 52, column: 9, scope: !14684)
!14692 = !DILocation(line: 53, column: 17, scope: !14684)
!14693 = !DILocation(line: 53, column: 24, scope: !14684)
!14694 = distinct !{!14694, !14683, !14695}
!14695 = !DILocation(line: 53, column: 28, scope: !14684)
!14696 = !DILocation(line: 56, column: 10, scope: !14651)
!14697 = !DILocation(line: 56, column: 3, scope: !14651)
!14698 = distinct !DISubprogram(name: "umaxtostr", scope: !14652, file: !14652, line: 36, type: !1864, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !152)
!14699 = !DILocalVariable(name: "i", arg: 1, scope: !14698, file: !14652, line: 36, type: !168)
!14700 = !DILocation(line: 36, column: 19, scope: !14698)
!14701 = !DILocalVariable(name: "buf", arg: 2, scope: !14698, file: !14652, line: 36, type: !143)
!14702 = !DILocation(line: 36, column: 28, scope: !14698)
!14703 = !DILocalVariable(name: "p", scope: !14698, file: !14652, line: 38, type: !143)
!14704 = !DILocation(line: 38, column: 9, scope: !14698)
!14705 = !DILocation(line: 38, column: 13, scope: !14698)
!14706 = !DILocation(line: 38, column: 17, scope: !14698)
!14707 = !DILocation(line: 39, column: 4, scope: !14698)
!14708 = !DILocation(line: 39, column: 6, scope: !14698)
!14709 = !DILocation(line: 41, column: 7, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14698, file: !14652, line: 41, column: 7)
!14711 = !DILocation(line: 41, column: 9, scope: !14710)
!14712 = !DILocation(line: 41, column: 7, scope: !14698)
!14713 = !DILocation(line: 43, column: 7, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14710, file: !14652, line: 42, column: 5)
!14715 = !DILocation(line: 44, column: 22, scope: !14714)
!14716 = !DILocation(line: 44, column: 24, scope: !14714)
!14717 = !DILocation(line: 44, column: 20, scope: !14714)
!14718 = !DILocation(line: 44, column: 16, scope: !14714)
!14719 = !DILocation(line: 44, column: 10, scope: !14714)
!14720 = !DILocation(line: 44, column: 14, scope: !14714)
!14721 = !DILocation(line: 44, column: 9, scope: !14714)
!14722 = !DILocation(line: 45, column: 17, scope: !14714)
!14723 = !DILocation(line: 45, column: 24, scope: !14714)
!14724 = distinct !{!14724, !14713, !14725}
!14725 = !DILocation(line: 45, column: 28, scope: !14714)
!14726 = !DILocation(line: 47, column: 8, scope: !14714)
!14727 = !DILocation(line: 47, column: 12, scope: !14714)
!14728 = !DILocation(line: 48, column: 5, scope: !14714)
!14729 = !DILocation(line: 51, column: 7, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14710, file: !14652, line: 50, column: 5)
!14731 = !DILocation(line: 52, column: 22, scope: !14730)
!14732 = !DILocation(line: 52, column: 24, scope: !14730)
!14733 = !DILocation(line: 52, column: 20, scope: !14730)
!14734 = !DILocation(line: 52, column: 16, scope: !14730)
!14735 = !DILocation(line: 52, column: 10, scope: !14730)
!14736 = !DILocation(line: 52, column: 14, scope: !14730)
!14737 = !DILocation(line: 52, column: 9, scope: !14730)
!14738 = !DILocation(line: 53, column: 17, scope: !14730)
!14739 = !DILocation(line: 53, column: 24, scope: !14730)
!14740 = distinct !{!14740, !14729, !14741}
!14741 = !DILocation(line: 53, column: 28, scope: !14730)
!14742 = !DILocation(line: 56, column: 10, scope: !14698)
!14743 = !DILocation(line: 56, column: 3, scope: !14698)
!14744 = distinct !DISubprogram(name: "mbsalign", scope: !14745, file: !14745, line: 112, type: !1872, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!14745 = !DIFile(filename: "lib/mbsalign.c", directory: "/home/mbarbar/clone/coreutils")
!14746 = !DILocalVariable(name: "src", arg: 1, scope: !14744, file: !14745, line: 112, type: !146)
!14747 = !DILocation(line: 112, column: 23, scope: !14744)
!14748 = !DILocalVariable(name: "dest", arg: 2, scope: !14744, file: !14745, line: 112, type: !143)
!14749 = !DILocation(line: 112, column: 34, scope: !14744)
!14750 = !DILocalVariable(name: "dest_size", arg: 3, scope: !14744, file: !14745, line: 112, type: !149)
!14751 = !DILocation(line: 112, column: 47, scope: !14744)
!14752 = !DILocalVariable(name: "width", arg: 4, scope: !14744, file: !14745, line: 113, type: !148)
!14753 = !DILocation(line: 113, column: 19, scope: !14744)
!14754 = !DILocalVariable(name: "align", arg: 5, scope: !14744, file: !14745, line: 113, type: !586)
!14755 = !DILocation(line: 113, column: 38, scope: !14744)
!14756 = !DILocalVariable(name: "flags", arg: 6, scope: !14744, file: !14745, line: 113, type: !27)
!14757 = !DILocation(line: 113, column: 49, scope: !14744)
!14758 = !DILocalVariable(name: "ret", scope: !14744, file: !14745, line: 115, type: !149)
!14759 = !DILocation(line: 115, column: 10, scope: !14744)
!14760 = !DILocalVariable(name: "src_size", scope: !14744, file: !14745, line: 116, type: !149)
!14761 = !DILocation(line: 116, column: 10, scope: !14744)
!14762 = !DILocation(line: 116, column: 29, scope: !14744)
!14763 = !DILocation(line: 116, column: 21, scope: !14744)
!14764 = !DILocation(line: 116, column: 34, scope: !14744)
!14765 = !DILocalVariable(name: "newstr", scope: !14744, file: !14745, line: 117, type: !143)
!14766 = !DILocation(line: 117, column: 9, scope: !14744)
!14767 = !DILocalVariable(name: "str_wc", scope: !14744, file: !14745, line: 118, type: !1874)
!14768 = !DILocation(line: 118, column: 12, scope: !14744)
!14769 = !DILocalVariable(name: "str_to_print", scope: !14744, file: !14745, line: 119, type: !146)
!14770 = !DILocation(line: 119, column: 15, scope: !14744)
!14771 = !DILocation(line: 119, column: 30, scope: !14744)
!14772 = !DILocalVariable(name: "n_cols", scope: !14744, file: !14745, line: 120, type: !149)
!14773 = !DILocation(line: 120, column: 10, scope: !14744)
!14774 = !DILocation(line: 120, column: 19, scope: !14744)
!14775 = !DILocation(line: 120, column: 28, scope: !14744)
!14776 = !DILocalVariable(name: "n_used_bytes", scope: !14744, file: !14745, line: 121, type: !149)
!14777 = !DILocation(line: 121, column: 10, scope: !14744)
!14778 = !DILocation(line: 121, column: 25, scope: !14744)
!14779 = !DILocalVariable(name: "n_spaces", scope: !14744, file: !14745, line: 122, type: !149)
!14780 = !DILocation(line: 122, column: 10, scope: !14744)
!14781 = !DILocalVariable(name: "conversion", scope: !14744, file: !14745, line: 123, type: !141)
!14782 = !DILocation(line: 123, column: 8, scope: !14744)
!14783 = !DILocalVariable(name: "wc_enabled", scope: !14744, file: !14745, line: 124, type: !141)
!14784 = !DILocation(line: 124, column: 8, scope: !14744)
!14785 = !DILocation(line: 129, column: 9, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14744, file: !14745, line: 129, column: 7)
!14787 = !DILocation(line: 129, column: 15, scope: !14786)
!14788 = !DILocation(line: 129, column: 35, scope: !14786)
!14789 = !DILocation(line: 129, column: 38, scope: !14786)
!14790 = !DILocation(line: 129, column: 49, scope: !14786)
!14791 = !DILocation(line: 129, column: 7, scope: !14744)
!14792 = !DILocalVariable(name: "src_chars", scope: !14793, file: !14745, line: 131, type: !149)
!14793 = distinct !DILexicalBlock(scope: !14786, file: !14745, line: 130, column: 5)
!14794 = !DILocation(line: 131, column: 14, scope: !14793)
!14795 = !DILocation(line: 131, column: 42, scope: !14793)
!14796 = !DILocation(line: 131, column: 26, scope: !14793)
!14797 = !DILocation(line: 132, column: 11, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14793, file: !14745, line: 132, column: 11)
!14799 = !DILocation(line: 132, column: 21, scope: !14798)
!14800 = !DILocation(line: 132, column: 11, scope: !14793)
!14801 = !DILocation(line: 134, column: 15, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !14745, line: 134, column: 15)
!14803 = distinct !DILexicalBlock(scope: !14798, file: !14745, line: 133, column: 9)
!14804 = !DILocation(line: 134, column: 21, scope: !14802)
!14805 = !DILocation(line: 134, column: 15, scope: !14803)
!14806 = !DILocation(line: 135, column: 13, scope: !14802)
!14807 = !DILocation(line: 137, column: 13, scope: !14802)
!14808 = !DILocation(line: 139, column: 17, scope: !14793)
!14809 = !DILocation(line: 140, column: 24, scope: !14793)
!14810 = !DILocation(line: 140, column: 34, scope: !14793)
!14811 = !DILocation(line: 140, column: 16, scope: !14793)
!14812 = !DILocation(line: 140, column: 14, scope: !14793)
!14813 = !DILocation(line: 141, column: 11, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14793, file: !14745, line: 141, column: 11)
!14815 = !DILocation(line: 141, column: 18, scope: !14814)
!14816 = !DILocation(line: 141, column: 11, scope: !14793)
!14817 = !DILocation(line: 143, column: 15, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !14745, line: 143, column: 15)
!14819 = distinct !DILexicalBlock(scope: !14814, file: !14745, line: 142, column: 9)
!14820 = !DILocation(line: 143, column: 21, scope: !14818)
!14821 = !DILocation(line: 143, column: 15, scope: !14819)
!14822 = !DILocation(line: 144, column: 13, scope: !14818)
!14823 = !DILocation(line: 146, column: 13, scope: !14818)
!14824 = !DILocation(line: 148, column: 21, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14793, file: !14745, line: 148, column: 11)
!14826 = !DILocation(line: 148, column: 29, scope: !14825)
!14827 = !DILocation(line: 148, column: 34, scope: !14825)
!14828 = !DILocation(line: 148, column: 11, scope: !14825)
!14829 = !DILocation(line: 148, column: 45, scope: !14825)
!14830 = !DILocation(line: 148, column: 11, scope: !14793)
!14831 = !DILocation(line: 150, column: 11, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14825, file: !14745, line: 149, column: 9)
!14833 = !DILocation(line: 150, column: 18, scope: !14832)
!14834 = !DILocation(line: 150, column: 28, scope: !14832)
!14835 = !DILocation(line: 150, column: 33, scope: !14832)
!14836 = !DILocation(line: 151, column: 22, scope: !14832)
!14837 = !DILocation(line: 152, column: 45, scope: !14832)
!14838 = !DILocation(line: 152, column: 24, scope: !14832)
!14839 = !DILocation(line: 152, column: 22, scope: !14832)
!14840 = !DILocation(line: 153, column: 30, scope: !14832)
!14841 = !DILocation(line: 153, column: 38, scope: !14832)
!14842 = !DILocation(line: 153, column: 20, scope: !14832)
!14843 = !DILocation(line: 153, column: 18, scope: !14832)
!14844 = !DILocation(line: 154, column: 9, scope: !14832)
!14845 = !DILocation(line: 155, column: 5, scope: !14793)
!14846 = !DILocation(line: 159, column: 7, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14744, file: !14745, line: 159, column: 7)
!14848 = !DILocation(line: 159, column: 18, scope: !14847)
!14849 = !DILocation(line: 159, column: 22, scope: !14847)
!14850 = !DILocation(line: 159, column: 33, scope: !14847)
!14851 = !DILocation(line: 159, column: 37, scope: !14847)
!14852 = !DILocation(line: 159, column: 47, scope: !14847)
!14853 = !DILocation(line: 159, column: 46, scope: !14847)
!14854 = !DILocation(line: 159, column: 44, scope: !14847)
!14855 = !DILocation(line: 159, column: 7, scope: !14744)
!14856 = !DILocation(line: 161, column: 13, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !14745, line: 161, column: 13)
!14858 = distinct !DILexicalBlock(scope: !14847, file: !14745, line: 160, column: 5)
!14859 = !DILocation(line: 161, column: 13, scope: !14858)
!14860 = !DILocation(line: 165, column: 40, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14857, file: !14745, line: 162, column: 11)
!14862 = !DILocation(line: 165, column: 24, scope: !14861)
!14863 = !DILocation(line: 165, column: 51, scope: !14861)
!14864 = !DILocation(line: 165, column: 22, scope: !14861)
!14865 = !DILocation(line: 166, column: 11, scope: !14861)
!14866 = !DILocation(line: 167, column: 26, scope: !14858)
!14867 = !DILocation(line: 167, column: 18, scope: !14858)
!14868 = !DILocation(line: 167, column: 16, scope: !14858)
!14869 = !DILocation(line: 168, column: 13, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14858, file: !14745, line: 168, column: 13)
!14871 = !DILocation(line: 168, column: 20, scope: !14870)
!14872 = !DILocation(line: 168, column: 13, scope: !14858)
!14873 = !DILocation(line: 170, column: 15, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !14745, line: 170, column: 15)
!14875 = distinct !DILexicalBlock(scope: !14870, file: !14745, line: 169, column: 9)
!14876 = !DILocation(line: 170, column: 21, scope: !14874)
!14877 = !DILocation(line: 170, column: 15, scope: !14875)
!14878 = !DILocation(line: 171, column: 13, scope: !14874)
!14879 = !DILocation(line: 173, column: 13, scope: !14874)
!14880 = !DILocation(line: 175, column: 24, scope: !14858)
!14881 = !DILocation(line: 175, column: 22, scope: !14858)
!14882 = !DILocation(line: 176, column: 31, scope: !14858)
!14883 = !DILocation(line: 176, column: 40, scope: !14858)
!14884 = !DILocation(line: 176, column: 39, scope: !14858)
!14885 = !DILocation(line: 176, column: 18, scope: !14858)
!14886 = !DILocation(line: 176, column: 16, scope: !14858)
!14887 = !DILocation(line: 177, column: 34, scope: !14858)
!14888 = !DILocation(line: 177, column: 42, scope: !14858)
!14889 = !DILocation(line: 177, column: 50, scope: !14858)
!14890 = !DILocation(line: 177, column: 24, scope: !14858)
!14891 = !DILocation(line: 177, column: 22, scope: !14858)
!14892 = !DILocation(line: 178, column: 5, scope: !14858)
!14893 = !DILocation(line: 159, column: 53, scope: !14847)
!14894 = !DILabel(scope: !14744, name: "mbsalign_unibyte", file: !14745, line: 180)
!14895 = !DILocation(line: 180, column: 1, scope: !14744)
!14896 = !DILocation(line: 182, column: 7, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14744, file: !14745, line: 182, column: 7)
!14898 = !DILocation(line: 182, column: 17, scope: !14897)
!14899 = !DILocation(line: 182, column: 16, scope: !14897)
!14900 = !DILocation(line: 182, column: 14, scope: !14897)
!14901 = !DILocation(line: 182, column: 7, scope: !14744)
!14902 = !DILocation(line: 184, column: 17, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14897, file: !14745, line: 183, column: 5)
!14904 = !DILocation(line: 184, column: 16, scope: !14903)
!14905 = !DILocation(line: 184, column: 14, scope: !14903)
!14906 = !DILocation(line: 185, column: 22, scope: !14903)
!14907 = !DILocation(line: 185, column: 20, scope: !14903)
!14908 = !DILocation(line: 186, column: 5, scope: !14903)
!14909 = !DILocation(line: 188, column: 8, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14744, file: !14745, line: 188, column: 7)
!14911 = !DILocation(line: 188, column: 7, scope: !14910)
!14912 = !DILocation(line: 188, column: 16, scope: !14910)
!14913 = !DILocation(line: 188, column: 14, scope: !14910)
!14914 = !DILocation(line: 188, column: 7, scope: !14744)
!14915 = !DILocation(line: 189, column: 17, scope: !14910)
!14916 = !DILocation(line: 189, column: 16, scope: !14910)
!14917 = !DILocation(line: 189, column: 25, scope: !14910)
!14918 = !DILocation(line: 189, column: 23, scope: !14910)
!14919 = !DILocation(line: 189, column: 14, scope: !14910)
!14920 = !DILocation(line: 189, column: 5, scope: !14910)
!14921 = !DILocation(line: 192, column: 12, scope: !14744)
!14922 = !DILocation(line: 192, column: 4, scope: !14744)
!14923 = !DILocation(line: 192, column: 10, scope: !14744)
!14924 = !DILocalVariable(name: "start_spaces", scope: !14925, file: !14745, line: 195, type: !149)
!14925 = distinct !DILexicalBlock(scope: !14744, file: !14745, line: 194, column: 3)
!14926 = !DILocation(line: 195, column: 12, scope: !14925)
!14927 = !DILocalVariable(name: "end_spaces", scope: !14925, file: !14745, line: 195, type: !149)
!14928 = !DILocation(line: 195, column: 26, scope: !14925)
!14929 = !DILocation(line: 197, column: 13, scope: !14925)
!14930 = !DILocation(line: 197, column: 5, scope: !14925)
!14931 = !DILocation(line: 200, column: 22, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14925, file: !14745, line: 198, column: 7)
!14933 = !DILocation(line: 201, column: 22, scope: !14932)
!14934 = !DILocation(line: 201, column: 20, scope: !14932)
!14935 = !DILocation(line: 202, column: 9, scope: !14932)
!14936 = !DILocation(line: 204, column: 24, scope: !14932)
!14937 = !DILocation(line: 204, column: 22, scope: !14932)
!14938 = !DILocation(line: 205, column: 20, scope: !14932)
!14939 = !DILocation(line: 206, column: 9, scope: !14932)
!14940 = !DILocation(line: 209, column: 24, scope: !14932)
!14941 = !DILocation(line: 209, column: 33, scope: !14932)
!14942 = !DILocation(line: 209, column: 39, scope: !14932)
!14943 = !DILocation(line: 209, column: 48, scope: !14932)
!14944 = !DILocation(line: 209, column: 37, scope: !14932)
!14945 = !DILocation(line: 209, column: 22, scope: !14932)
!14946 = !DILocation(line: 210, column: 22, scope: !14932)
!14947 = !DILocation(line: 210, column: 31, scope: !14932)
!14948 = !DILocation(line: 210, column: 20, scope: !14932)
!14949 = !DILocation(line: 211, column: 9, scope: !14932)
!14950 = !DILocation(line: 214, column: 11, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14925, file: !14745, line: 214, column: 11)
!14952 = !DILocation(line: 214, column: 17, scope: !14951)
!14953 = !DILocation(line: 214, column: 11, scope: !14925)
!14954 = !DILocation(line: 215, column: 22, scope: !14951)
!14955 = !DILocation(line: 215, column: 9, scope: !14951)
!14956 = !DILocation(line: 216, column: 11, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14925, file: !14745, line: 216, column: 11)
!14958 = !DILocation(line: 216, column: 17, scope: !14957)
!14959 = !DILocation(line: 216, column: 11, scope: !14925)
!14960 = !DILocation(line: 217, column: 20, scope: !14957)
!14961 = !DILocation(line: 217, column: 9, scope: !14957)
!14962 = !DILocation(line: 220, column: 11, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14925, file: !14745, line: 220, column: 11)
!14964 = !DILocation(line: 220, column: 21, scope: !14963)
!14965 = !DILocation(line: 220, column: 11, scope: !14925)
!14966 = !DILocalVariable(name: "space_left", scope: !14967, file: !14745, line: 222, type: !149)
!14967 = distinct !DILexicalBlock(scope: !14963, file: !14745, line: 221, column: 9)
!14968 = !DILocation(line: 222, column: 18, scope: !14967)
!14969 = !DILocalVariable(name: "dest_end", scope: !14967, file: !14745, line: 223, type: !143)
!14970 = !DILocation(line: 223, column: 17, scope: !14967)
!14971 = !DILocation(line: 223, column: 28, scope: !14967)
!14972 = !DILocation(line: 223, column: 35, scope: !14967)
!14973 = !DILocation(line: 223, column: 33, scope: !14967)
!14974 = !DILocation(line: 223, column: 45, scope: !14967)
!14975 = !DILocation(line: 225, column: 33, scope: !14967)
!14976 = !DILocation(line: 225, column: 39, scope: !14967)
!14977 = !DILocation(line: 225, column: 49, scope: !14967)
!14978 = !DILocation(line: 225, column: 18, scope: !14967)
!14979 = !DILocation(line: 225, column: 16, scope: !14967)
!14980 = !DILocation(line: 226, column: 24, scope: !14967)
!14981 = !DILocation(line: 226, column: 35, scope: !14967)
!14982 = !DILocation(line: 226, column: 33, scope: !14967)
!14983 = !DILocation(line: 226, column: 22, scope: !14967)
!14984 = !DILocation(line: 227, column: 27, scope: !14967)
!14985 = !DILocation(line: 227, column: 33, scope: !14967)
!14986 = !DILocation(line: 227, column: 47, scope: !14967)
!14987 = !DILocation(line: 227, column: 18, scope: !14967)
!14988 = !DILocation(line: 227, column: 16, scope: !14967)
!14989 = !DILocation(line: 228, column: 26, scope: !14967)
!14990 = !DILocation(line: 228, column: 32, scope: !14967)
!14991 = !DILocation(line: 228, column: 42, scope: !14967)
!14992 = !DILocation(line: 228, column: 11, scope: !14967)
!14993 = !DILocation(line: 229, column: 9, scope: !14967)
!14994 = !DILocation(line: 232, column: 11, scope: !14925)
!14995 = !DILocation(line: 232, column: 28, scope: !14925)
!14996 = !DILocation(line: 232, column: 43, scope: !14925)
!14997 = !DILocation(line: 232, column: 41, scope: !14925)
!14998 = !DILocation(line: 232, column: 55, scope: !14925)
!14999 = !DILocation(line: 232, column: 24, scope: !14925)
!15000 = !DILocation(line: 232, column: 9, scope: !14925)
!15001 = !DILocation(line: 233, column: 3, scope: !14925)
!15002 = !DILabel(scope: !14744, name: "mbsalign_cleanup", file: !14745, line: 235)
!15003 = !DILocation(line: 235, column: 1, scope: !14744)
!15004 = !DILocation(line: 237, column: 9, scope: !14744)
!15005 = !DILocation(line: 237, column: 3, scope: !14744)
!15006 = !DILocation(line: 238, column: 9, scope: !14744)
!15007 = !DILocation(line: 238, column: 3, scope: !14744)
!15008 = !DILocation(line: 240, column: 10, scope: !14744)
!15009 = !DILocation(line: 240, column: 3, scope: !14744)
!15010 = distinct !DISubprogram(name: "wc_ensure_printable", scope: !14745, file: !14745, line: 40, type: !1877, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15011 = !DILocalVariable(name: "wchars", arg: 1, scope: !15010, file: !14745, line: 40, type: !1874)
!15012 = !DILocation(line: 40, column: 31, scope: !15010)
!15013 = !DILocalVariable(name: "replaced", scope: !15010, file: !14745, line: 42, type: !141)
!15014 = !DILocation(line: 42, column: 8, scope: !15010)
!15015 = !DILocalVariable(name: "wc", scope: !15010, file: !14745, line: 43, type: !1874)
!15016 = !DILocation(line: 43, column: 12, scope: !15010)
!15017 = !DILocation(line: 43, column: 17, scope: !15010)
!15018 = !DILocation(line: 44, column: 3, scope: !15010)
!15019 = !DILocation(line: 44, column: 11, scope: !15010)
!15020 = !DILocation(line: 44, column: 10, scope: !15010)
!15021 = !DILocation(line: 46, column: 32, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15023, file: !14745, line: 46, column: 11)
!15023 = distinct !DILexicalBlock(scope: !15010, file: !14745, line: 45, column: 5)
!15024 = !DILocation(line: 46, column: 31, scope: !15022)
!15025 = !DILocation(line: 46, column: 12, scope: !15022)
!15026 = !DILocation(line: 46, column: 11, scope: !15023)
!15027 = !DILocation(line: 48, column: 12, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15022, file: !14745, line: 47, column: 9)
!15029 = !DILocation(line: 48, column: 15, scope: !15028)
!15030 = !DILocation(line: 49, column: 20, scope: !15028)
!15031 = !DILocation(line: 50, column: 9, scope: !15028)
!15032 = !DILocation(line: 51, column: 9, scope: !15023)
!15033 = distinct !{!15033, !15018, !15034}
!15034 = !DILocation(line: 52, column: 5, scope: !15010)
!15035 = !DILocation(line: 53, column: 10, scope: !15010)
!15036 = !DILocation(line: 53, column: 3, scope: !15010)
!15037 = distinct !DISubprogram(name: "wc_truncate", scope: !14745, file: !14745, line: 60, type: !1879, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15038 = !DILocalVariable(name: "wc", arg: 1, scope: !15037, file: !14745, line: 60, type: !1874)
!15039 = !DILocation(line: 60, column: 23, scope: !15037)
!15040 = !DILocalVariable(name: "width", arg: 2, scope: !15037, file: !14745, line: 60, type: !149)
!15041 = !DILocation(line: 60, column: 34, scope: !15037)
!15042 = !DILocalVariable(name: "cells", scope: !15037, file: !14745, line: 62, type: !149)
!15043 = !DILocation(line: 62, column: 10, scope: !15037)
!15044 = !DILocalVariable(name: "next_cells", scope: !15037, file: !14745, line: 63, type: !27)
!15045 = !DILocation(line: 63, column: 7, scope: !15037)
!15046 = !DILocation(line: 65, column: 3, scope: !15037)
!15047 = !DILocation(line: 65, column: 11, scope: !15037)
!15048 = !DILocation(line: 65, column: 10, scope: !15037)
!15049 = !DILocation(line: 67, column: 30, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15037, file: !14745, line: 66, column: 5)
!15051 = !DILocation(line: 67, column: 29, scope: !15050)
!15052 = !DILocation(line: 67, column: 20, scope: !15050)
!15053 = !DILocation(line: 67, column: 18, scope: !15050)
!15054 = !DILocation(line: 68, column: 11, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15050, file: !14745, line: 68, column: 11)
!15056 = !DILocation(line: 68, column: 22, scope: !15055)
!15057 = !DILocation(line: 68, column: 11, scope: !15050)
!15058 = !DILocation(line: 70, column: 12, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15055, file: !14745, line: 69, column: 9)
!15060 = !DILocation(line: 70, column: 15, scope: !15059)
!15061 = !DILocation(line: 71, column: 22, scope: !15059)
!15062 = !DILocation(line: 72, column: 9, scope: !15059)
!15063 = !DILocation(line: 73, column: 11, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15050, file: !14745, line: 73, column: 11)
!15065 = !DILocation(line: 73, column: 19, scope: !15064)
!15066 = !DILocation(line: 73, column: 17, scope: !15064)
!15067 = !DILocation(line: 73, column: 32, scope: !15064)
!15068 = !DILocation(line: 73, column: 30, scope: !15064)
!15069 = !DILocation(line: 73, column: 11, scope: !15050)
!15070 = !DILocation(line: 74, column: 9, scope: !15064)
!15071 = !DILocation(line: 75, column: 16, scope: !15050)
!15072 = !DILocation(line: 75, column: 13, scope: !15050)
!15073 = !DILocation(line: 76, column: 9, scope: !15050)
!15074 = distinct !{!15074, !15046, !15075}
!15075 = !DILocation(line: 77, column: 5, scope: !15037)
!15076 = !DILocation(line: 78, column: 4, scope: !15037)
!15077 = !DILocation(line: 78, column: 7, scope: !15037)
!15078 = !DILocation(line: 79, column: 10, scope: !15037)
!15079 = !DILocation(line: 79, column: 3, scope: !15037)
!15080 = distinct !DISubprogram(name: "mbs_align_pad", scope: !14745, file: !14745, line: 88, type: !1881, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15081 = !DILocalVariable(name: "dest", arg: 1, scope: !15080, file: !14745, line: 88, type: !143)
!15082 = !DILocation(line: 88, column: 22, scope: !15080)
!15083 = !DILocalVariable(name: "dest_end", arg: 2, scope: !15080, file: !14745, line: 88, type: !146)
!15084 = !DILocation(line: 88, column: 40, scope: !15080)
!15085 = !DILocalVariable(name: "n_spaces", arg: 3, scope: !15080, file: !14745, line: 88, type: !149)
!15086 = !DILocation(line: 88, column: 57, scope: !15080)
!15087 = !DILocation(line: 92, column: 3, scope: !15080)
!15088 = !DILocation(line: 92, column: 18, scope: !15080)
!15089 = !DILocation(line: 92, column: 21, scope: !15080)
!15090 = !DILocation(line: 92, column: 25, scope: !15080)
!15091 = !DILocation(line: 92, column: 32, scope: !15080)
!15092 = !DILocation(line: 92, column: 30, scope: !15080)
!15093 = !DILocation(line: 0, scope: !15080)
!15094 = !DILocation(line: 93, column: 10, scope: !15080)
!15095 = !DILocation(line: 93, column: 13, scope: !15080)
!15096 = distinct !{!15096, !15087, !15097}
!15097 = !DILocation(line: 93, column: 15, scope: !15080)
!15098 = !DILocation(line: 94, column: 4, scope: !15080)
!15099 = !DILocation(line: 94, column: 9, scope: !15080)
!15100 = !DILocation(line: 95, column: 10, scope: !15080)
!15101 = !DILocation(line: 95, column: 3, scope: !15080)
!15102 = distinct !DISubprogram(name: "ambsalign", scope: !14745, file: !14745, line: 248, type: !1875, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15103 = !DILocalVariable(name: "src", arg: 1, scope: !15102, file: !14745, line: 248, type: !146)
!15104 = !DILocation(line: 248, column: 24, scope: !15102)
!15105 = !DILocalVariable(name: "width", arg: 2, scope: !15102, file: !14745, line: 248, type: !148)
!15106 = !DILocation(line: 248, column: 37, scope: !15102)
!15107 = !DILocalVariable(name: "align", arg: 3, scope: !15102, file: !14745, line: 248, type: !586)
!15108 = !DILocation(line: 248, column: 56, scope: !15102)
!15109 = !DILocalVariable(name: "flags", arg: 4, scope: !15102, file: !14745, line: 248, type: !27)
!15110 = !DILocation(line: 248, column: 67, scope: !15102)
!15111 = !DILocalVariable(name: "orig_width", scope: !15102, file: !14745, line: 250, type: !149)
!15112 = !DILocation(line: 250, column: 10, scope: !15102)
!15113 = !DILocation(line: 250, column: 24, scope: !15102)
!15114 = !DILocation(line: 250, column: 23, scope: !15102)
!15115 = !DILocalVariable(name: "size", scope: !15102, file: !14745, line: 251, type: !149)
!15116 = !DILocation(line: 251, column: 10, scope: !15102)
!15117 = !DILocation(line: 251, column: 18, scope: !15102)
!15118 = !DILocation(line: 251, column: 17, scope: !15102)
!15119 = !DILocalVariable(name: "req", scope: !15102, file: !14745, line: 252, type: !149)
!15120 = !DILocation(line: 252, column: 10, scope: !15102)
!15121 = !DILocation(line: 252, column: 16, scope: !15102)
!15122 = !DILocalVariable(name: "buf", scope: !15102, file: !14745, line: 253, type: !143)
!15123 = !DILocation(line: 253, column: 9, scope: !15102)
!15124 = !DILocation(line: 255, column: 3, scope: !15102)
!15125 = !DILocation(line: 255, column: 10, scope: !15102)
!15126 = !DILocation(line: 255, column: 17, scope: !15102)
!15127 = !DILocation(line: 255, column: 14, scope: !15102)
!15128 = !DILocalVariable(name: "nbuf", scope: !15129, file: !14745, line: 257, type: !143)
!15129 = distinct !DILexicalBlock(scope: !15102, file: !14745, line: 256, column: 5)
!15130 = !DILocation(line: 257, column: 13, scope: !15129)
!15131 = !DILocation(line: 258, column: 14, scope: !15129)
!15132 = !DILocation(line: 258, column: 18, scope: !15129)
!15133 = !DILocation(line: 258, column: 12, scope: !15129)
!15134 = !DILocation(line: 259, column: 23, scope: !15129)
!15135 = !DILocation(line: 259, column: 28, scope: !15129)
!15136 = !DILocation(line: 259, column: 14, scope: !15129)
!15137 = !DILocation(line: 259, column: 12, scope: !15129)
!15138 = !DILocation(line: 260, column: 11, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15129, file: !14745, line: 260, column: 11)
!15140 = !DILocation(line: 260, column: 16, scope: !15139)
!15141 = !DILocation(line: 260, column: 11, scope: !15129)
!15142 = !DILocation(line: 262, column: 17, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15139, file: !14745, line: 261, column: 9)
!15144 = !DILocation(line: 262, column: 11, scope: !15143)
!15145 = !DILocation(line: 263, column: 15, scope: !15143)
!15146 = !DILocation(line: 264, column: 11, scope: !15143)
!15147 = !DILocation(line: 266, column: 13, scope: !15129)
!15148 = !DILocation(line: 266, column: 11, scope: !15129)
!15149 = !DILocation(line: 267, column: 16, scope: !15129)
!15150 = !DILocation(line: 267, column: 8, scope: !15129)
!15151 = !DILocation(line: 267, column: 14, scope: !15129)
!15152 = !DILocation(line: 268, column: 23, scope: !15129)
!15153 = !DILocation(line: 268, column: 28, scope: !15129)
!15154 = !DILocation(line: 268, column: 33, scope: !15129)
!15155 = !DILocation(line: 268, column: 39, scope: !15129)
!15156 = !DILocation(line: 268, column: 46, scope: !15129)
!15157 = !DILocation(line: 268, column: 53, scope: !15129)
!15158 = !DILocation(line: 268, column: 13, scope: !15129)
!15159 = !DILocation(line: 268, column: 11, scope: !15129)
!15160 = !DILocation(line: 269, column: 11, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15129, file: !14745, line: 269, column: 11)
!15162 = !DILocation(line: 269, column: 15, scope: !15161)
!15163 = !DILocation(line: 269, column: 11, scope: !15129)
!15164 = !DILocation(line: 271, column: 17, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15161, file: !14745, line: 270, column: 9)
!15166 = !DILocation(line: 271, column: 11, scope: !15165)
!15167 = !DILocation(line: 272, column: 15, scope: !15165)
!15168 = !DILocation(line: 273, column: 11, scope: !15165)
!15169 = distinct !{!15169, !15124, !15170}
!15170 = !DILocation(line: 275, column: 5, scope: !15102)
!15171 = !DILocation(line: 277, column: 10, scope: !15102)
!15172 = !DILocation(line: 277, column: 3, scope: !15102)
!15173 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !15174, file: !15174, line: 47, type: !1886, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !152)
!15174 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mbarbar/clone/coreutils")
!15175 = !DILocalVariable(name: "string", arg: 1, scope: !15173, file: !15174, line: 47, type: !146)
!15176 = !DILocation(line: 47, column: 23, scope: !15173)
!15177 = !DILocalVariable(name: "flags", arg: 2, scope: !15173, file: !15174, line: 47, type: !27)
!15178 = !DILocation(line: 47, column: 35, scope: !15173)
!15179 = !DILocation(line: 49, column: 21, scope: !15173)
!15180 = !DILocation(line: 49, column: 37, scope: !15173)
!15181 = !DILocation(line: 49, column: 29, scope: !15173)
!15182 = !DILocation(line: 49, column: 46, scope: !15173)
!15183 = !DILocation(line: 49, column: 10, scope: !15173)
!15184 = !DILocation(line: 49, column: 3, scope: !15173)
!15185 = distinct !DISubprogram(name: "mbsnwidth", scope: !15174, file: !15174, line: 57, type: !1888, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !152)
!15186 = !DILocalVariable(name: "string", arg: 1, scope: !15185, file: !15174, line: 57, type: !146)
!15187 = !DILocation(line: 57, column: 24, scope: !15185)
!15188 = !DILocalVariable(name: "nbytes", arg: 2, scope: !15185, file: !15174, line: 57, type: !149)
!15189 = !DILocation(line: 57, column: 39, scope: !15185)
!15190 = !DILocalVariable(name: "flags", arg: 3, scope: !15185, file: !15174, line: 57, type: !27)
!15191 = !DILocation(line: 57, column: 51, scope: !15185)
!15192 = !DILocalVariable(name: "p", scope: !15185, file: !15174, line: 59, type: !146)
!15193 = !DILocation(line: 59, column: 15, scope: !15185)
!15194 = !DILocation(line: 59, column: 19, scope: !15185)
!15195 = !DILocalVariable(name: "plimit", scope: !15185, file: !15174, line: 60, type: !146)
!15196 = !DILocation(line: 60, column: 15, scope: !15185)
!15197 = !DILocation(line: 60, column: 24, scope: !15185)
!15198 = !DILocation(line: 60, column: 28, scope: !15185)
!15199 = !DILocation(line: 60, column: 26, scope: !15185)
!15200 = !DILocalVariable(name: "width", scope: !15185, file: !15174, line: 61, type: !27)
!15201 = !DILocation(line: 61, column: 7, scope: !15185)
!15202 = !DILocation(line: 63, column: 9, scope: !15185)
!15203 = !DILocation(line: 64, column: 7, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15185, file: !15174, line: 64, column: 7)
!15205 = !DILocation(line: 64, column: 18, scope: !15204)
!15206 = !DILocation(line: 64, column: 7, scope: !15185)
!15207 = !DILocation(line: 66, column: 7, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15204, file: !15174, line: 65, column: 5)
!15209 = !DILocation(line: 66, column: 14, scope: !15208)
!15210 = !DILocation(line: 66, column: 18, scope: !15208)
!15211 = !DILocation(line: 66, column: 16, scope: !15208)
!15212 = !DILocation(line: 67, column: 18, scope: !15208)
!15213 = !DILocation(line: 67, column: 17, scope: !15208)
!15214 = !DILocation(line: 67, column: 9, scope: !15208)
!15215 = !DILocation(line: 90, column: 16, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15208, file: !15174, line: 68, column: 11)
!15217 = !DILocation(line: 91, column: 20, scope: !15216)
!15218 = !DILocation(line: 92, column: 15, scope: !15216)
!15219 = !DILocalVariable(name: "mbstate", scope: !15220, file: !15174, line: 96, type: !1890)
!15220 = distinct !DILexicalBlock(scope: !15216, file: !15174, line: 95, column: 15)
!15221 = !DILocation(line: 96, column: 27, scope: !15220)
!15222 = !DILocation(line: 97, column: 17, scope: !15220)
!15223 = !DILocation(line: 98, column: 17, scope: !15220)
!15224 = !DILocalVariable(name: "wc", scope: !15225, file: !15174, line: 100, type: !654)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !15174, line: 99, column: 19)
!15226 = !DILocation(line: 100, column: 29, scope: !15225)
!15227 = !DILocalVariable(name: "bytes", scope: !15225, file: !15174, line: 101, type: !149)
!15228 = !DILocation(line: 101, column: 28, scope: !15225)
!15229 = !DILocalVariable(name: "w", scope: !15225, file: !15174, line: 102, type: !27)
!15230 = !DILocation(line: 102, column: 25, scope: !15225)
!15231 = !DILocation(line: 104, column: 43, scope: !15225)
!15232 = !DILocation(line: 104, column: 46, scope: !15225)
!15233 = !DILocation(line: 104, column: 55, scope: !15225)
!15234 = !DILocation(line: 104, column: 53, scope: !15225)
!15235 = !DILocation(line: 104, column: 29, scope: !15225)
!15236 = !DILocation(line: 104, column: 27, scope: !15225)
!15237 = !DILocation(line: 106, column: 25, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15225, file: !15174, line: 106, column: 25)
!15239 = !DILocation(line: 106, column: 31, scope: !15238)
!15240 = !DILocation(line: 106, column: 25, scope: !15225)
!15241 = !DILocation(line: 109, column: 31, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !15174, line: 109, column: 29)
!15243 = distinct !DILexicalBlock(scope: !15238, file: !15174, line: 108, column: 23)
!15244 = !DILocation(line: 109, column: 37, scope: !15242)
!15245 = !DILocation(line: 109, column: 29, scope: !15243)
!15246 = !DILocation(line: 111, column: 30, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15242, file: !15174, line: 110, column: 27)
!15248 = !DILocation(line: 112, column: 34, scope: !15247)
!15249 = !DILocation(line: 113, column: 29, scope: !15247)
!15250 = !DILocation(line: 116, column: 27, scope: !15242)
!15251 = !DILocation(line: 119, column: 25, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15225, file: !15174, line: 119, column: 25)
!15253 = !DILocation(line: 119, column: 31, scope: !15252)
!15254 = !DILocation(line: 119, column: 25, scope: !15225)
!15255 = !DILocation(line: 122, column: 31, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15257, file: !15174, line: 122, column: 29)
!15257 = distinct !DILexicalBlock(scope: !15252, file: !15174, line: 121, column: 23)
!15258 = !DILocation(line: 122, column: 37, scope: !15256)
!15259 = !DILocation(line: 122, column: 29, scope: !15257)
!15260 = !DILocation(line: 124, column: 33, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15256, file: !15174, line: 123, column: 27)
!15262 = !DILocation(line: 124, column: 31, scope: !15261)
!15263 = !DILocation(line: 125, column: 34, scope: !15261)
!15264 = !DILocation(line: 126, column: 29, scope: !15261)
!15265 = !DILocation(line: 129, column: 27, scope: !15256)
!15266 = !DILocation(line: 132, column: 25, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15225, file: !15174, line: 132, column: 25)
!15268 = !DILocation(line: 132, column: 31, scope: !15267)
!15269 = !DILocation(line: 132, column: 25, scope: !15225)
!15270 = !DILocation(line: 134, column: 29, scope: !15267)
!15271 = !DILocation(line: 134, column: 23, scope: !15267)
!15272 = !DILocation(line: 136, column: 34, scope: !15225)
!15273 = !DILocation(line: 136, column: 25, scope: !15225)
!15274 = !DILocation(line: 136, column: 23, scope: !15225)
!15275 = !DILocation(line: 137, column: 25, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15225, file: !15174, line: 137, column: 25)
!15277 = !DILocation(line: 137, column: 27, scope: !15276)
!15278 = !DILocation(line: 137, column: 25, scope: !15225)
!15279 = !DILocation(line: 140, column: 29, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15281, file: !15174, line: 140, column: 29)
!15281 = distinct !DILexicalBlock(scope: !15276, file: !15174, line: 139, column: 23)
!15282 = !DILocation(line: 140, column: 43, scope: !15280)
!15283 = !DILocation(line: 140, column: 41, scope: !15280)
!15284 = !DILocation(line: 140, column: 31, scope: !15280)
!15285 = !DILocation(line: 140, column: 29, scope: !15281)
!15286 = !DILocation(line: 141, column: 27, scope: !15280)
!15287 = !DILocation(line: 142, column: 34, scope: !15281)
!15288 = !DILocation(line: 142, column: 31, scope: !15281)
!15289 = !DILocation(line: 143, column: 23, scope: !15281)
!15290 = !DILocation(line: 146, column: 29, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15276, file: !15174, line: 146, column: 27)
!15292 = !DILocation(line: 146, column: 35, scope: !15291)
!15293 = !DILocation(line: 146, column: 27, scope: !15276)
!15294 = !DILocation(line: 148, column: 42, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15296, file: !15174, line: 148, column: 31)
!15296 = distinct !DILexicalBlock(scope: !15291, file: !15174, line: 147, column: 25)
!15297 = !DILocation(line: 148, column: 32, scope: !15295)
!15298 = !DILocation(line: 148, column: 31, scope: !15296)
!15299 = !DILocation(line: 150, column: 35, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !15174, line: 150, column: 35)
!15301 = distinct !DILexicalBlock(scope: !15295, file: !15174, line: 149, column: 29)
!15302 = !DILocation(line: 150, column: 41, scope: !15300)
!15303 = !DILocation(line: 150, column: 35, scope: !15301)
!15304 = !DILocation(line: 151, column: 33, scope: !15300)
!15305 = !DILocation(line: 152, column: 36, scope: !15301)
!15306 = !DILocation(line: 153, column: 29, scope: !15301)
!15307 = !DILocation(line: 154, column: 25, scope: !15296)
!15308 = !DILocation(line: 156, column: 25, scope: !15291)
!15309 = !DILocation(line: 158, column: 26, scope: !15225)
!15310 = !DILocation(line: 158, column: 23, scope: !15225)
!15311 = !DILocation(line: 159, column: 19, scope: !15225)
!15312 = !DILocation(line: 160, column: 26, scope: !15220)
!15313 = !DILocation(line: 160, column: 24, scope: !15220)
!15314 = distinct !{!15314, !15223, !15315}
!15315 = !DILocation(line: 160, column: 44, scope: !15220)
!15316 = !DILocation(line: 162, column: 15, scope: !15216)
!15317 = distinct !{!15317, !15207, !15318}
!15318 = !DILocation(line: 163, column: 11, scope: !15208)
!15319 = !DILocation(line: 164, column: 14, scope: !15208)
!15320 = !DILocation(line: 164, column: 7, scope: !15208)
!15321 = !DILocation(line: 167, column: 3, scope: !15185)
!15322 = !DILocation(line: 167, column: 10, scope: !15185)
!15323 = !DILocation(line: 167, column: 14, scope: !15185)
!15324 = !DILocation(line: 167, column: 12, scope: !15185)
!15325 = !DILocalVariable(name: "c", scope: !15326, file: !15174, line: 169, type: !591)
!15326 = distinct !DILexicalBlock(scope: !15185, file: !15174, line: 168, column: 5)
!15327 = !DILocation(line: 169, column: 21, scope: !15326)
!15328 = !DILocation(line: 169, column: 43, scope: !15326)
!15329 = !DILocation(line: 169, column: 41, scope: !15326)
!15330 = !DILocation(line: 171, column: 11, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15326, file: !15174, line: 171, column: 11)
!15332 = !DILocation(line: 171, column: 11, scope: !15326)
!15333 = !DILocation(line: 173, column: 15, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15335, file: !15174, line: 173, column: 15)
!15335 = distinct !DILexicalBlock(scope: !15331, file: !15174, line: 172, column: 9)
!15336 = !DILocation(line: 173, column: 21, scope: !15334)
!15337 = !DILocation(line: 173, column: 15, scope: !15335)
!15338 = !DILocation(line: 174, column: 13, scope: !15334)
!15339 = !DILocation(line: 175, column: 16, scope: !15335)
!15340 = !DILocation(line: 176, column: 9, scope: !15335)
!15341 = !DILocation(line: 177, column: 18, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15331, file: !15174, line: 177, column: 16)
!15343 = !DILocation(line: 177, column: 24, scope: !15342)
!15344 = !DILocation(line: 177, column: 16, scope: !15331)
!15345 = !DILocation(line: 179, column: 16, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15347, file: !15174, line: 179, column: 15)
!15347 = distinct !DILexicalBlock(scope: !15342, file: !15174, line: 178, column: 9)
!15348 = !DILocation(line: 179, column: 15, scope: !15347)
!15349 = !DILocation(line: 181, column: 19, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !15174, line: 181, column: 19)
!15351 = distinct !DILexicalBlock(scope: !15346, file: !15174, line: 180, column: 13)
!15352 = !DILocation(line: 181, column: 25, scope: !15350)
!15353 = !DILocation(line: 181, column: 19, scope: !15351)
!15354 = !DILocation(line: 182, column: 17, scope: !15350)
!15355 = !DILocation(line: 183, column: 20, scope: !15351)
!15356 = !DILocation(line: 184, column: 13, scope: !15351)
!15357 = !DILocation(line: 185, column: 9, scope: !15347)
!15358 = !DILocation(line: 187, column: 9, scope: !15342)
!15359 = distinct !{!15359, !15321, !15360}
!15360 = !DILocation(line: 188, column: 5, scope: !15185)
!15361 = !DILocation(line: 189, column: 10, scope: !15185)
!15362 = !DILocation(line: 189, column: 3, scope: !15185)
!15363 = !DILabel(scope: !15185, name: "overflow", file: !15174, line: 191)
!15364 = !DILocation(line: 191, column: 2, scope: !15185)
!15365 = !DILocation(line: 192, column: 3, scope: !15185)
!15366 = !DILocation(line: 193, column: 1, scope: !15185)
!15367 = distinct !DISubprogram(name: "mpsort", scope: !1906, file: !1906, line: 153, type: !1903, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15368 = !DILocalVariable(name: "base", arg: 1, scope: !15367, file: !1906, line: 153, type: !182)
!15369 = !DILocation(line: 153, column: 22, scope: !15367)
!15370 = !DILocalVariable(name: "n", arg: 2, scope: !15367, file: !1906, line: 153, type: !149)
!15371 = !DILocation(line: 153, column: 35, scope: !15367)
!15372 = !DILocalVariable(name: "cmp", arg: 3, scope: !15367, file: !1906, line: 153, type: !1905)
!15373 = !DILocation(line: 153, column: 58, scope: !15367)
!15374 = !DILocation(line: 155, column: 20, scope: !15367)
!15375 = !DILocation(line: 155, column: 26, scope: !15367)
!15376 = !DILocation(line: 155, column: 29, scope: !15367)
!15377 = !DILocation(line: 155, column: 36, scope: !15367)
!15378 = !DILocation(line: 155, column: 34, scope: !15367)
!15379 = !DILocation(line: 155, column: 39, scope: !15367)
!15380 = !DILocation(line: 155, column: 3, scope: !15367)
!15381 = !DILocation(line: 156, column: 1, scope: !15367)
!15382 = distinct !DISubprogram(name: "mpsort_with_tmp", scope: !1906, file: !1906, line: 86, type: !1910, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15383 = !DILocalVariable(name: "base", arg: 1, scope: !15382, file: !1906, line: 86, type: !1912)
!15384 = !DILocation(line: 86, column: 40, scope: !15382)
!15385 = !DILocalVariable(name: "n", arg: 2, scope: !15382, file: !1906, line: 86, type: !149)
!15386 = !DILocation(line: 86, column: 53, scope: !15382)
!15387 = !DILocalVariable(name: "tmp", arg: 3, scope: !15382, file: !1906, line: 87, type: !1912)
!15388 = !DILocation(line: 87, column: 40, scope: !15382)
!15389 = !DILocalVariable(name: "cmp", arg: 4, scope: !15382, file: !1906, line: 88, type: !1905)
!15390 = !DILocation(line: 88, column: 38, scope: !15382)
!15391 = !DILocation(line: 90, column: 7, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15382, file: !1906, line: 90, column: 7)
!15393 = !DILocation(line: 90, column: 9, scope: !15392)
!15394 = !DILocation(line: 90, column: 7, scope: !15382)
!15395 = !DILocation(line: 92, column: 11, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15397, file: !1906, line: 92, column: 11)
!15397 = distinct !DILexicalBlock(scope: !15392, file: !1906, line: 91, column: 5)
!15398 = !DILocation(line: 92, column: 13, scope: !15396)
!15399 = !DILocation(line: 92, column: 11, scope: !15397)
!15400 = !DILocalVariable(name: "p0", scope: !15401, file: !1906, line: 94, type: !176)
!15401 = distinct !DILexicalBlock(scope: !15396, file: !1906, line: 93, column: 9)
!15402 = !DILocation(line: 94, column: 23, scope: !15401)
!15403 = !DILocation(line: 94, column: 28, scope: !15401)
!15404 = !DILocalVariable(name: "p1", scope: !15401, file: !1906, line: 95, type: !176)
!15405 = !DILocation(line: 95, column: 23, scope: !15401)
!15406 = !DILocation(line: 95, column: 28, scope: !15401)
!15407 = !DILocation(line: 96, column: 18, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15401, file: !1906, line: 96, column: 15)
!15409 = !DILocation(line: 96, column: 23, scope: !15408)
!15410 = !DILocation(line: 96, column: 27, scope: !15408)
!15411 = !DILocation(line: 96, column: 31, scope: !15408)
!15412 = !DILocation(line: 96, column: 15, scope: !15401)
!15413 = !DILocation(line: 98, column: 25, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15408, file: !1906, line: 97, column: 13)
!15415 = !DILocation(line: 98, column: 15, scope: !15414)
!15416 = !DILocation(line: 98, column: 23, scope: !15414)
!15417 = !DILocation(line: 99, column: 25, scope: !15414)
!15418 = !DILocation(line: 99, column: 15, scope: !15414)
!15419 = !DILocation(line: 99, column: 23, scope: !15414)
!15420 = !DILocation(line: 100, column: 13, scope: !15414)
!15421 = !DILocation(line: 101, column: 9, scope: !15401)
!15422 = !DILocation(line: 102, column: 5, scope: !15397)
!15423 = !DILocalVariable(name: "n1", scope: !15424, file: !1906, line: 105, type: !149)
!15424 = distinct !DILexicalBlock(scope: !15392, file: !1906, line: 104, column: 5)
!15425 = !DILocation(line: 105, column: 14, scope: !15424)
!15426 = !DILocation(line: 105, column: 19, scope: !15424)
!15427 = !DILocation(line: 105, column: 21, scope: !15424)
!15428 = !DILocalVariable(name: "n2", scope: !15424, file: !1906, line: 106, type: !149)
!15429 = !DILocation(line: 106, column: 14, scope: !15424)
!15430 = !DILocation(line: 106, column: 19, scope: !15424)
!15431 = !DILocation(line: 106, column: 23, scope: !15424)
!15432 = !DILocation(line: 106, column: 21, scope: !15424)
!15433 = !DILocalVariable(name: "i", scope: !15424, file: !1906, line: 107, type: !149)
!15434 = !DILocation(line: 107, column: 14, scope: !15424)
!15435 = !DILocalVariable(name: "t", scope: !15424, file: !1906, line: 108, type: !149)
!15436 = !DILocation(line: 108, column: 14, scope: !15424)
!15437 = !DILocalVariable(name: "tlim", scope: !15424, file: !1906, line: 109, type: !149)
!15438 = !DILocation(line: 109, column: 14, scope: !15424)
!15439 = !DILocation(line: 109, column: 21, scope: !15424)
!15440 = !DILocalVariable(name: "b", scope: !15424, file: !1906, line: 110, type: !149)
!15441 = !DILocation(line: 110, column: 14, scope: !15424)
!15442 = !DILocation(line: 110, column: 18, scope: !15424)
!15443 = !DILocalVariable(name: "blim", scope: !15424, file: !1906, line: 111, type: !149)
!15444 = !DILocation(line: 111, column: 14, scope: !15424)
!15445 = !DILocation(line: 111, column: 21, scope: !15424)
!15446 = !DILocalVariable(name: "bb", scope: !15424, file: !1906, line: 112, type: !176)
!15447 = !DILocation(line: 112, column: 19, scope: !15424)
!15448 = !DILocalVariable(name: "tt", scope: !15424, file: !1906, line: 113, type: !176)
!15449 = !DILocation(line: 113, column: 19, scope: !15424)
!15450 = !DILocation(line: 115, column: 24, scope: !15424)
!15451 = !DILocation(line: 115, column: 31, scope: !15424)
!15452 = !DILocation(line: 115, column: 29, scope: !15424)
!15453 = !DILocation(line: 115, column: 35, scope: !15424)
!15454 = !DILocation(line: 115, column: 39, scope: !15424)
!15455 = !DILocation(line: 115, column: 44, scope: !15424)
!15456 = !DILocation(line: 115, column: 7, scope: !15424)
!15457 = !DILocation(line: 117, column: 11, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15424, file: !1906, line: 117, column: 11)
!15459 = !DILocation(line: 117, column: 14, scope: !15458)
!15460 = !DILocation(line: 117, column: 11, scope: !15424)
!15461 = !DILocation(line: 118, column: 18, scope: !15458)
!15462 = !DILocation(line: 118, column: 9, scope: !15458)
!15463 = !DILocation(line: 118, column: 16, scope: !15458)
!15464 = !DILocation(line: 120, column: 26, scope: !15458)
!15465 = !DILocation(line: 120, column: 32, scope: !15458)
!15466 = !DILocation(line: 120, column: 36, scope: !15458)
!15467 = !DILocation(line: 120, column: 41, scope: !15458)
!15468 = !DILocation(line: 120, column: 9, scope: !15458)
!15469 = !DILocation(line: 122, column: 12, scope: !15424)
!15470 = !DILocation(line: 122, column: 16, scope: !15424)
!15471 = !DILocation(line: 122, column: 10, scope: !15424)
!15472 = !DILocation(line: 123, column: 12, scope: !15424)
!15473 = !DILocation(line: 123, column: 17, scope: !15424)
!15474 = !DILocation(line: 123, column: 10, scope: !15424)
!15475 = !DILocation(line: 125, column: 14, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15424, file: !1906, line: 125, column: 7)
!15477 = !DILocation(line: 125, column: 12, scope: !15476)
!15478 = !DILocation(line: 126, column: 13, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !1906, line: 126, column: 13)
!15480 = distinct !DILexicalBlock(scope: !15476, file: !1906, line: 125, column: 7)
!15481 = !DILocation(line: 126, column: 18, scope: !15479)
!15482 = !DILocation(line: 126, column: 22, scope: !15479)
!15483 = !DILocation(line: 126, column: 26, scope: !15479)
!15484 = !DILocation(line: 126, column: 13, scope: !15480)
!15485 = !DILocation(line: 128, column: 25, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15479, file: !1906, line: 127, column: 11)
!15487 = !DILocation(line: 128, column: 13, scope: !15486)
!15488 = !DILocation(line: 128, column: 19, scope: !15486)
!15489 = !DILocation(line: 128, column: 23, scope: !15486)
!15490 = !DILocation(line: 129, column: 14, scope: !15486)
!15491 = !DILocation(line: 130, column: 17, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15486, file: !1906, line: 130, column: 17)
!15493 = !DILocation(line: 130, column: 22, scope: !15492)
!15494 = !DILocation(line: 130, column: 19, scope: !15492)
!15495 = !DILocation(line: 130, column: 17, scope: !15486)
!15496 = !DILocation(line: 131, column: 15, scope: !15492)
!15497 = !DILocation(line: 132, column: 18, scope: !15486)
!15498 = !DILocation(line: 132, column: 22, scope: !15486)
!15499 = !DILocation(line: 132, column: 16, scope: !15486)
!15500 = !DILocation(line: 133, column: 11, scope: !15486)
!15501 = !DILocation(line: 136, column: 25, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15479, file: !1906, line: 135, column: 11)
!15503 = !DILocation(line: 136, column: 13, scope: !15502)
!15504 = !DILocation(line: 136, column: 19, scope: !15502)
!15505 = !DILocation(line: 136, column: 23, scope: !15502)
!15506 = !DILocation(line: 137, column: 14, scope: !15502)
!15507 = !DILocation(line: 138, column: 17, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15502, file: !1906, line: 138, column: 17)
!15509 = !DILocation(line: 138, column: 22, scope: !15508)
!15510 = !DILocation(line: 138, column: 19, scope: !15508)
!15511 = !DILocation(line: 138, column: 17, scope: !15502)
!15512 = !DILocation(line: 140, column: 25, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15508, file: !1906, line: 139, column: 15)
!15514 = !DILocation(line: 140, column: 32, scope: !15513)
!15515 = !DILocation(line: 140, column: 30, scope: !15513)
!15516 = !DILocation(line: 140, column: 17, scope: !15513)
!15517 = !DILocation(line: 140, column: 35, scope: !15513)
!15518 = !DILocation(line: 140, column: 41, scope: !15513)
!15519 = !DILocation(line: 140, column: 39, scope: !15513)
!15520 = !DILocation(line: 140, column: 45, scope: !15513)
!15521 = !DILocation(line: 140, column: 52, scope: !15513)
!15522 = !DILocation(line: 140, column: 50, scope: !15513)
!15523 = !DILocation(line: 140, column: 55, scope: !15513)
!15524 = !DILocation(line: 141, column: 17, scope: !15513)
!15525 = !DILocation(line: 143, column: 18, scope: !15502)
!15526 = !DILocation(line: 143, column: 23, scope: !15502)
!15527 = !DILocation(line: 143, column: 16, scope: !15502)
!15528 = !DILocation(line: 125, column: 7, scope: !15480)
!15529 = distinct !{!15529, !15530, !15531}
!15530 = !DILocation(line: 125, column: 7, scope: !15476)
!15531 = !DILocation(line: 144, column: 11, scope: !15476)
!15532 = !DILocation(line: 146, column: 1, scope: !15382)
!15533 = distinct !DISubprogram(name: "mpsort_into_tmp", scope: !1906, file: !1906, line: 37, type: !1910, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15534 = !DILocalVariable(name: "base", arg: 1, scope: !15533, file: !1906, line: 37, type: !1912)
!15535 = !DILocation(line: 37, column: 40, scope: !15533)
!15536 = !DILocalVariable(name: "n", arg: 2, scope: !15533, file: !1906, line: 37, type: !149)
!15537 = !DILocation(line: 37, column: 53, scope: !15533)
!15538 = !DILocalVariable(name: "tmp", arg: 3, scope: !15533, file: !1906, line: 38, type: !1912)
!15539 = !DILocation(line: 38, column: 40, scope: !15533)
!15540 = !DILocalVariable(name: "cmp", arg: 4, scope: !15533, file: !1906, line: 39, type: !1905)
!15541 = !DILocation(line: 39, column: 38, scope: !15533)
!15542 = !DILocalVariable(name: "n1", scope: !15533, file: !1906, line: 41, type: !149)
!15543 = !DILocation(line: 41, column: 10, scope: !15533)
!15544 = !DILocation(line: 41, column: 15, scope: !15533)
!15545 = !DILocation(line: 41, column: 17, scope: !15533)
!15546 = !DILocalVariable(name: "n2", scope: !15533, file: !1906, line: 42, type: !149)
!15547 = !DILocation(line: 42, column: 10, scope: !15533)
!15548 = !DILocation(line: 42, column: 15, scope: !15533)
!15549 = !DILocation(line: 42, column: 19, scope: !15533)
!15550 = !DILocation(line: 42, column: 17, scope: !15533)
!15551 = !DILocalVariable(name: "a", scope: !15533, file: !1906, line: 43, type: !149)
!15552 = !DILocation(line: 43, column: 10, scope: !15533)
!15553 = !DILocalVariable(name: "alim", scope: !15533, file: !1906, line: 44, type: !149)
!15554 = !DILocation(line: 44, column: 10, scope: !15533)
!15555 = !DILocation(line: 44, column: 17, scope: !15533)
!15556 = !DILocalVariable(name: "b", scope: !15533, file: !1906, line: 45, type: !149)
!15557 = !DILocation(line: 45, column: 10, scope: !15533)
!15558 = !DILocation(line: 45, column: 14, scope: !15533)
!15559 = !DILocalVariable(name: "blim", scope: !15533, file: !1906, line: 46, type: !149)
!15560 = !DILocation(line: 46, column: 10, scope: !15533)
!15561 = !DILocation(line: 46, column: 17, scope: !15533)
!15562 = !DILocalVariable(name: "ba", scope: !15533, file: !1906, line: 47, type: !176)
!15563 = !DILocation(line: 47, column: 15, scope: !15533)
!15564 = !DILocalVariable(name: "bb", scope: !15533, file: !1906, line: 48, type: !176)
!15565 = !DILocation(line: 48, column: 15, scope: !15533)
!15566 = !DILocation(line: 50, column: 20, scope: !15533)
!15567 = !DILocation(line: 50, column: 27, scope: !15533)
!15568 = !DILocation(line: 50, column: 25, scope: !15533)
!15569 = !DILocation(line: 50, column: 31, scope: !15533)
!15570 = !DILocation(line: 50, column: 35, scope: !15533)
!15571 = !DILocation(line: 50, column: 40, scope: !15533)
!15572 = !DILocation(line: 50, column: 3, scope: !15533)
!15573 = !DILocation(line: 51, column: 20, scope: !15533)
!15574 = !DILocation(line: 51, column: 26, scope: !15533)
!15575 = !DILocation(line: 51, column: 30, scope: !15533)
!15576 = !DILocation(line: 51, column: 35, scope: !15533)
!15577 = !DILocation(line: 51, column: 3, scope: !15533)
!15578 = !DILocation(line: 53, column: 8, scope: !15533)
!15579 = !DILocation(line: 53, column: 13, scope: !15533)
!15580 = !DILocation(line: 53, column: 6, scope: !15533)
!15581 = !DILocation(line: 54, column: 8, scope: !15533)
!15582 = !DILocation(line: 54, column: 13, scope: !15533)
!15583 = !DILocation(line: 54, column: 6, scope: !15533)
!15584 = !DILocation(line: 56, column: 3, scope: !15533)
!15585 = !DILocation(line: 57, column: 9, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !1906, line: 57, column: 9)
!15587 = distinct !DILexicalBlock(scope: !15588, file: !1906, line: 56, column: 3)
!15588 = distinct !DILexicalBlock(scope: !15533, file: !1906, line: 56, column: 3)
!15589 = !DILocation(line: 57, column: 14, scope: !15586)
!15590 = !DILocation(line: 57, column: 18, scope: !15586)
!15591 = !DILocation(line: 57, column: 22, scope: !15586)
!15592 = !DILocation(line: 57, column: 9, scope: !15587)
!15593 = !DILocation(line: 59, column: 18, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15586, file: !1906, line: 58, column: 7)
!15595 = !DILocation(line: 59, column: 13, scope: !15594)
!15596 = !DILocation(line: 59, column: 16, scope: !15594)
!15597 = !DILocation(line: 60, column: 10, scope: !15594)
!15598 = !DILocation(line: 61, column: 13, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15594, file: !1906, line: 61, column: 13)
!15600 = !DILocation(line: 61, column: 18, scope: !15599)
!15601 = !DILocation(line: 61, column: 15, scope: !15599)
!15602 = !DILocation(line: 61, column: 13, scope: !15594)
!15603 = !DILocation(line: 63, column: 17, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15599, file: !1906, line: 62, column: 11)
!15605 = !DILocation(line: 63, column: 15, scope: !15604)
!15606 = !DILocation(line: 64, column: 20, scope: !15604)
!15607 = !DILocation(line: 64, column: 18, scope: !15604)
!15608 = !DILocation(line: 65, column: 13, scope: !15604)
!15609 = !DILocation(line: 67, column: 14, scope: !15594)
!15610 = !DILocation(line: 67, column: 19, scope: !15594)
!15611 = !DILocation(line: 67, column: 12, scope: !15594)
!15612 = !DILocation(line: 68, column: 7, scope: !15594)
!15613 = !DILocation(line: 71, column: 18, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15586, file: !1906, line: 70, column: 7)
!15615 = !DILocation(line: 71, column: 13, scope: !15614)
!15616 = !DILocation(line: 71, column: 16, scope: !15614)
!15617 = !DILocation(line: 72, column: 10, scope: !15614)
!15618 = !DILocation(line: 73, column: 13, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15614, file: !1906, line: 73, column: 13)
!15620 = !DILocation(line: 73, column: 18, scope: !15619)
!15621 = !DILocation(line: 73, column: 15, scope: !15619)
!15622 = !DILocation(line: 73, column: 13, scope: !15614)
!15623 = !DILocation(line: 74, column: 11, scope: !15619)
!15624 = !DILocation(line: 75, column: 14, scope: !15614)
!15625 = !DILocation(line: 75, column: 19, scope: !15614)
!15626 = !DILocation(line: 75, column: 12, scope: !15614)
!15627 = !DILocation(line: 56, column: 3, scope: !15587)
!15628 = distinct !{!15628, !15629, !15630}
!15629 = !DILocation(line: 56, column: 3, scope: !15588)
!15630 = !DILocation(line: 76, column: 7, scope: !15588)
!15631 = !DILocation(line: 78, column: 11, scope: !15533)
!15632 = !DILocation(line: 78, column: 3, scope: !15533)
!15633 = !DILocation(line: 78, column: 16, scope: !15533)
!15634 = !DILocation(line: 78, column: 23, scope: !15533)
!15635 = !DILocation(line: 78, column: 21, scope: !15533)
!15636 = !DILocation(line: 78, column: 27, scope: !15533)
!15637 = !DILocation(line: 78, column: 34, scope: !15533)
!15638 = !DILocation(line: 78, column: 32, scope: !15533)
!15639 = !DILocation(line: 78, column: 37, scope: !15533)
!15640 = !DILocation(line: 79, column: 1, scope: !15533)
!15641 = distinct !DISubprogram(name: "nstrftime", scope: !15642, file: !15642, line: 431, type: !1916, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!15642 = !DIFile(filename: "lib/nstrftime.c", directory: "/home/mbarbar/clone/coreutils")
!15643 = !DILocalVariable(name: "s", arg: 1, scope: !15641, file: !15642, line: 431, type: !143)
!15644 = !DILocation(line: 431, column: 32, scope: !15641)
!15645 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15641, file: !15642, line: 431, type: !149)
!15646 = !DILocation(line: 431, column: 35, scope: !15641)
!15647 = !DILocalVariable(name: "format", arg: 3, scope: !15641, file: !15642, line: 432, type: !146)
!15648 = !DILocation(line: 432, column: 28, scope: !15641)
!15649 = !DILocalVariable(name: "tp", arg: 4, scope: !15641, file: !15642, line: 433, type: !1918)
!15650 = !DILocation(line: 433, column: 31, scope: !15641)
!15651 = !DILocalVariable(name: "tz", arg: 5, scope: !15641, file: !15642, line: 433, type: !1933)
!15652 = !DILocation(line: 433, column: 34, scope: !15641)
!15653 = !DILocalVariable(name: "ns", arg: 6, scope: !15641, file: !15642, line: 433, type: !27)
!15654 = !DILocalVariable(name: "tzset_called", scope: !15641, file: !15642, line: 435, type: !141)
!15655 = !DILocation(line: 435, column: 8, scope: !15641)
!15656 = !DILocation(line: 436, column: 31, scope: !15641)
!15657 = !DILocation(line: 436, column: 34, scope: !15641)
!15658 = !DILocation(line: 436, column: 57, scope: !15641)
!15659 = !DILocation(line: 436, column: 65, scope: !15641)
!15660 = !DILocation(line: 437, column: 52, scope: !15641)
!15661 = !DILocation(line: 436, column: 10, scope: !15641)
!15662 = !DILocation(line: 436, column: 3, scope: !15641)
!15663 = distinct !DISubprogram(name: "__strftime_internal", scope: !15642, file: !15642, line: 447, type: !1941, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!15664 = !DILocalVariable(name: "s", arg: 1, scope: !15663, file: !15642, line: 447, type: !143)
!15665 = !DILocation(line: 447, column: 40, scope: !15663)
!15666 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15663, file: !15642, line: 447, type: !149)
!15667 = !DILocation(line: 447, column: 43, scope: !15663)
!15668 = !DILocalVariable(name: "format", arg: 3, scope: !15663, file: !15642, line: 448, type: !146)
!15669 = !DILocation(line: 448, column: 36, scope: !15663)
!15670 = !DILocalVariable(name: "tp", arg: 4, scope: !15663, file: !15642, line: 449, type: !1918)
!15671 = !DILocation(line: 449, column: 39, scope: !15663)
!15672 = !DILocalVariable(name: "upcase", arg: 5, scope: !15663, file: !15642, line: 449, type: !141)
!15673 = !DILocation(line: 449, column: 48, scope: !15663)
!15674 = !DILocalVariable(name: "yr_spec", arg: 6, scope: !15663, file: !15642, line: 450, type: !27)
!15675 = !DILocation(line: 450, column: 26, scope: !15663)
!15676 = !DILocalVariable(name: "width", arg: 7, scope: !15663, file: !15642, line: 450, type: !27)
!15677 = !DILocation(line: 450, column: 39, scope: !15663)
!15678 = !DILocalVariable(name: "tzset_called", arg: 8, scope: !15663, file: !15642, line: 450, type: !640)
!15679 = !DILocation(line: 450, column: 52, scope: !15663)
!15680 = !DILocalVariable(name: "tz", arg: 9, scope: !15663, file: !15642, line: 451, type: !1933)
!15681 = !DILocation(line: 451, column: 22, scope: !15663)
!15682 = !DILocalVariable(name: "ns", arg: 10, scope: !15663, file: !15642, line: 451, type: !27)
!15683 = !DILocalVariable(name: "hour12", scope: !15663, file: !15642, line: 460, type: !27)
!15684 = !DILocation(line: 460, column: 7, scope: !15663)
!15685 = !DILocation(line: 460, column: 16, scope: !15663)
!15686 = !DILocation(line: 460, column: 20, scope: !15663)
!15687 = !{!6837, !2437, i64 8}
!15688 = !DILocalVariable(name: "zone", scope: !15663, file: !15642, line: 498, type: !146)
!15689 = !DILocation(line: 498, column: 15, scope: !15663)
!15690 = !DILocalVariable(name: "i", scope: !15663, file: !15642, line: 499, type: !149)
!15691 = !DILocation(line: 499, column: 10, scope: !15663)
!15692 = !DILocalVariable(name: "p", scope: !15663, file: !15642, line: 500, type: !143)
!15693 = !DILocation(line: 500, column: 21, scope: !15663)
!15694 = !DILocation(line: 500, column: 25, scope: !15663)
!15695 = !DILocalVariable(name: "f", scope: !15663, file: !15642, line: 501, type: !146)
!15696 = !DILocation(line: 501, column: 17, scope: !15663)
!15697 = !DILocation(line: 515, column: 8, scope: !15663)
!15698 = !DILocation(line: 523, column: 25, scope: !15663)
!15699 = !DILocation(line: 523, column: 29, scope: !15663)
!15700 = !{!6837, !2443, i64 48}
!15701 = !DILocation(line: 523, column: 8, scope: !15663)
!15702 = !DILocation(line: 553, column: 9, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15663, file: !15642, line: 553, column: 7)
!15704 = !DILocation(line: 553, column: 7, scope: !15663)
!15705 = !DILocation(line: 554, column: 10, scope: !15703)
!15706 = !DILocation(line: 554, column: 5, scope: !15703)
!15707 = !DILocation(line: 556, column: 7, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15663, file: !15642, line: 556, column: 7)
!15709 = !DILocation(line: 556, column: 14, scope: !15708)
!15710 = !DILocation(line: 556, column: 7, scope: !15663)
!15711 = !DILocation(line: 557, column: 12, scope: !15708)
!15712 = !DILocation(line: 557, column: 5, scope: !15708)
!15713 = !DILocation(line: 559, column: 9, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15708, file: !15642, line: 559, column: 9)
!15715 = !DILocation(line: 559, column: 16, scope: !15714)
!15716 = !DILocation(line: 559, column: 9, scope: !15708)
!15717 = !DILocation(line: 560, column: 14, scope: !15714)
!15718 = !DILocation(line: 560, column: 7, scope: !15714)
!15719 = !DILocation(line: 562, column: 12, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15663, file: !15642, line: 562, column: 3)
!15721 = !DILocation(line: 562, column: 10, scope: !15720)
!15722 = !DILocation(line: 562, column: 8, scope: !15720)
!15723 = !DILocation(line: 562, column: 21, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15720, file: !15642, line: 562, column: 3)
!15725 = !DILocation(line: 562, column: 20, scope: !15724)
!15726 = !DILocation(line: 562, column: 23, scope: !15724)
!15727 = !DILocation(line: 562, column: 3, scope: !15720)
!15728 = !DILocalVariable(name: "pad", scope: !15729, file: !15642, line: 564, type: !27)
!15729 = distinct !DILexicalBlock(scope: !15724, file: !15642, line: 563, column: 5)
!15730 = !DILocation(line: 564, column: 11, scope: !15729)
!15731 = !DILocalVariable(name: "modifier", scope: !15729, file: !15642, line: 565, type: !27)
!15732 = !DILocation(line: 565, column: 11, scope: !15729)
!15733 = !DILocalVariable(name: "digits", scope: !15729, file: !15642, line: 566, type: !27)
!15734 = !DILocation(line: 566, column: 11, scope: !15729)
!15735 = !DILocalVariable(name: "number_value", scope: !15729, file: !15642, line: 567, type: !27)
!15736 = !DILocation(line: 567, column: 11, scope: !15729)
!15737 = !DILocalVariable(name: "u_number_value", scope: !15729, file: !15642, line: 568, type: !6)
!15738 = !DILocation(line: 568, column: 20, scope: !15729)
!15739 = !DILocalVariable(name: "negative_number", scope: !15729, file: !15642, line: 569, type: !141)
!15740 = !DILocation(line: 569, column: 12, scope: !15729)
!15741 = !DILocalVariable(name: "always_output_a_sign", scope: !15729, file: !15642, line: 570, type: !141)
!15742 = !DILocation(line: 570, column: 12, scope: !15729)
!15743 = !DILocalVariable(name: "tz_colon_mask", scope: !15729, file: !15642, line: 571, type: !27)
!15744 = !DILocation(line: 571, column: 11, scope: !15729)
!15745 = !DILocalVariable(name: "subfmt", scope: !15729, file: !15642, line: 572, type: !146)
!15746 = !DILocation(line: 572, column: 21, scope: !15729)
!15747 = !DILocalVariable(name: "sign_char", scope: !15729, file: !15642, line: 573, type: !144)
!15748 = !DILocation(line: 573, column: 14, scope: !15729)
!15749 = !DILocalVariable(name: "bufp", scope: !15729, file: !15642, line: 574, type: !143)
!15750 = !DILocation(line: 574, column: 15, scope: !15729)
!15751 = !DILocalVariable(name: "buf", scope: !15729, file: !15642, line: 575, type: !1943)
!15752 = !DILocation(line: 575, column: 14, scope: !15729)
!15753 = !DILocalVariable(name: "to_lowcase", scope: !15729, file: !15642, line: 580, type: !141)
!15754 = !DILocation(line: 580, column: 12, scope: !15729)
!15755 = !DILocalVariable(name: "to_uppcase", scope: !15729, file: !15642, line: 581, type: !141)
!15756 = !DILocation(line: 581, column: 12, scope: !15729)
!15757 = !DILocation(line: 581, column: 25, scope: !15729)
!15758 = !DILocalVariable(name: "colons", scope: !15729, file: !15642, line: 582, type: !149)
!15759 = !DILocation(line: 582, column: 14, scope: !15729)
!15760 = !DILocalVariable(name: "change_case", scope: !15729, file: !15642, line: 583, type: !141)
!15761 = !DILocation(line: 583, column: 12, scope: !15729)
!15762 = !DILocalVariable(name: "format_char", scope: !15729, file: !15642, line: 584, type: !27)
!15763 = !DILocation(line: 584, column: 11, scope: !15729)
!15764 = !DILocalVariable(name: "subwidth", scope: !15729, file: !15642, line: 585, type: !27)
!15765 = !DILocation(line: 585, column: 11, scope: !15729)
!15766 = !DILocation(line: 667, column: 12, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15729, file: !15642, line: 667, column: 11)
!15768 = !DILocation(line: 667, column: 11, scope: !15767)
!15769 = !DILocation(line: 667, column: 14, scope: !15767)
!15770 = !DILocation(line: 667, column: 11, scope: !15729)
!15771 = !DILocation(line: 669, column: 11, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15767, file: !15642, line: 668, column: 9)
!15773 = !DILocalVariable(name: "_n", scope: !15774, file: !15642, line: 669, type: !149)
!15774 = distinct !DILexicalBlock(scope: !15772, file: !15642, line: 669, column: 11)
!15775 = !DILocation(line: 669, column: 11, scope: !15774)
!15776 = !DILocalVariable(name: "_w", scope: !15774, file: !15642, line: 669, type: !149)
!15777 = !DILocalVariable(name: "_incr", scope: !15774, file: !15642, line: 669, type: !149)
!15778 = !DILocation(line: 669, column: 11, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15774, file: !15642, line: 669, column: 11)
!15780 = !DILocation(line: 669, column: 11, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15774, file: !15642, line: 669, column: 11)
!15782 = !DILocation(line: 669, column: 11, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !15642, line: 669, column: 11)
!15784 = distinct !DILexicalBlock(scope: !15781, file: !15642, line: 669, column: 11)
!15785 = !DILocation(line: 669, column: 11, scope: !15784)
!15786 = !DILocalVariable(name: "_delta", scope: !15787, file: !15642, line: 669, type: !149)
!15787 = distinct !DILexicalBlock(scope: !15783, file: !15642, line: 669, column: 11)
!15788 = !DILocation(line: 669, column: 11, scope: !15787)
!15789 = !DILocation(line: 669, column: 11, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15787, file: !15642, line: 669, column: 11)
!15791 = !DILocation(line: 670, column: 11, scope: !15772)
!15792 = !DILocation(line: 676, column: 7, scope: !15729)
!15793 = !DILocation(line: 678, column: 20, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15729, file: !15642, line: 677, column: 9)
!15795 = !DILocation(line: 678, column: 19, scope: !15794)
!15796 = !DILocation(line: 678, column: 11, scope: !15794)
!15797 = !DILocation(line: 685, column: 22, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15794, file: !15642, line: 679, column: 13)
!15799 = !DILocation(line: 685, column: 21, scope: !15798)
!15800 = !DILocation(line: 685, column: 19, scope: !15798)
!15801 = !DILocation(line: 686, column: 15, scope: !15798)
!15802 = distinct !{!15802, !15792, !15803}
!15803 = !DILocation(line: 700, column: 9, scope: !15729)
!15804 = !DILocation(line: 690, column: 26, scope: !15798)
!15805 = !DILocation(line: 691, column: 15, scope: !15798)
!15806 = !DILocation(line: 693, column: 27, scope: !15798)
!15807 = !DILocation(line: 694, column: 15, scope: !15798)
!15808 = !DILocation(line: 697, column: 15, scope: !15798)
!15809 = !DILocation(line: 699, column: 11, scope: !15794)
!15810 = !DILocation(line: 702, column: 11, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15729, file: !15642, line: 702, column: 11)
!15812 = !DILocation(line: 702, column: 11, scope: !15729)
!15813 = !DILocation(line: 704, column: 17, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15811, file: !15642, line: 703, column: 9)
!15815 = !DILocation(line: 705, column: 11, scope: !15814)
!15816 = !DILocation(line: 707, column: 19, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15818, file: !15642, line: 707, column: 19)
!15818 = distinct !DILexicalBlock(scope: !15814, file: !15642, line: 706, column: 13)
!15819 = !DILocation(line: 707, column: 25, scope: !15817)
!15820 = !DILocation(line: 708, column: 19, scope: !15817)
!15821 = !DILocation(line: 708, column: 23, scope: !15817)
!15822 = !DILocation(line: 708, column: 29, scope: !15817)
!15823 = !DILocation(line: 708, column: 45, scope: !15817)
!15824 = !DILocation(line: 708, column: 49, scope: !15817)
!15825 = !DILocation(line: 708, column: 48, scope: !15817)
!15826 = !DILocation(line: 708, column: 51, scope: !15817)
!15827 = !DILocation(line: 708, column: 61, scope: !15817)
!15828 = !DILocation(line: 707, column: 19, scope: !15818)
!15829 = !DILocation(line: 710, column: 23, scope: !15817)
!15830 = !DILocation(line: 710, column: 17, scope: !15817)
!15831 = !DILocation(line: 713, column: 25, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15817, file: !15642, line: 712, column: 17)
!15833 = !DILocation(line: 714, column: 29, scope: !15832)
!15834 = !DILocation(line: 714, column: 28, scope: !15832)
!15835 = !DILocation(line: 714, column: 31, scope: !15832)
!15836 = !DILocation(line: 714, column: 25, scope: !15832)
!15837 = !DILocation(line: 716, column: 15, scope: !15818)
!15838 = !DILocation(line: 717, column: 13, scope: !15818)
!15839 = !DILocation(line: 718, column: 18, scope: !15814)
!15840 = distinct !{!15840, !15815, !15841}
!15841 = !DILocation(line: 718, column: 30, scope: !15814)
!15842 = !DILocation(line: 719, column: 9, scope: !15814)
!15843 = !DILocation(line: 722, column: 16, scope: !15729)
!15844 = !DILocation(line: 722, column: 15, scope: !15729)
!15845 = !DILocation(line: 722, column: 7, scope: !15729)
!15846 = !DILocation(line: 726, column: 24, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15729, file: !15642, line: 723, column: 9)
!15848 = !DILocation(line: 726, column: 22, scope: !15847)
!15849 = !DILocation(line: 726, column: 20, scope: !15847)
!15850 = !DILocation(line: 727, column: 11, scope: !15847)
!15851 = !DILocation(line: 730, column: 20, scope: !15847)
!15852 = !DILocation(line: 731, column: 11, scope: !15847)
!15853 = !DILocation(line: 735, column: 22, scope: !15729)
!15854 = !DILocation(line: 735, column: 21, scope: !15729)
!15855 = !DILocation(line: 735, column: 19, scope: !15729)
!15856 = !DILocation(line: 736, column: 15, scope: !15729)
!15857 = !DILocation(line: 736, column: 7, scope: !15729)
!15858 = !DILocation(line: 782, column: 15, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 782, column: 15)
!15860 = distinct !DILexicalBlock(scope: !15729, file: !15642, line: 737, column: 9)
!15861 = !DILocation(line: 782, column: 24, scope: !15859)
!15862 = !DILocation(line: 782, column: 15, scope: !15860)
!15863 = !DILocation(line: 783, column: 13, scope: !15859)
!15864 = !DILocation(line: 784, column: 11, scope: !15860)
!15865 = !DILocalVariable(name: "_n", scope: !15866, file: !15642, line: 784, type: !149)
!15866 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 784, column: 11)
!15867 = !DILocation(line: 784, column: 11, scope: !15866)
!15868 = !DILocalVariable(name: "_w", scope: !15866, file: !15642, line: 784, type: !149)
!15869 = !DILocalVariable(name: "_incr", scope: !15866, file: !15642, line: 784, type: !149)
!15870 = !DILocation(line: 784, column: 11, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15866, file: !15642, line: 784, column: 11)
!15872 = !DILocation(line: 784, column: 11, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15866, file: !15642, line: 784, column: 11)
!15874 = !DILocation(line: 784, column: 11, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15876, file: !15642, line: 784, column: 11)
!15876 = distinct !DILexicalBlock(scope: !15873, file: !15642, line: 784, column: 11)
!15877 = !DILocation(line: 784, column: 11, scope: !15876)
!15878 = !DILocalVariable(name: "_delta", scope: !15879, file: !15642, line: 784, type: !149)
!15879 = distinct !DILexicalBlock(scope: !15875, file: !15642, line: 784, column: 11)
!15880 = !DILocation(line: 784, column: 11, scope: !15879)
!15881 = !DILocation(line: 784, column: 11, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15879, file: !15642, line: 784, column: 11)
!15883 = !DILocation(line: 785, column: 11, scope: !15860)
!15884 = !DILocation(line: 788, column: 15, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 788, column: 15)
!15886 = !DILocation(line: 788, column: 24, scope: !15885)
!15887 = !DILocation(line: 788, column: 15, scope: !15860)
!15888 = !DILocation(line: 789, column: 13, scope: !15885)
!15889 = !DILocation(line: 790, column: 15, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 790, column: 15)
!15891 = !DILocation(line: 790, column: 15, scope: !15860)
!15892 = !DILocation(line: 792, column: 26, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15890, file: !15642, line: 791, column: 13)
!15894 = !DILocation(line: 793, column: 26, scope: !15893)
!15895 = !DILocation(line: 794, column: 13, scope: !15893)
!15896 = !DILocation(line: 799, column: 11, scope: !15860)
!15897 = !DILocation(line: 803, column: 15, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 803, column: 15)
!15899 = !DILocation(line: 803, column: 24, scope: !15898)
!15900 = !DILocation(line: 803, column: 15, scope: !15860)
!15901 = !DILocation(line: 804, column: 13, scope: !15898)
!15902 = !DILocation(line: 805, column: 15, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 805, column: 15)
!15904 = !DILocation(line: 805, column: 15, scope: !15860)
!15905 = !DILocation(line: 807, column: 26, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15903, file: !15642, line: 806, column: 13)
!15907 = !DILocation(line: 808, column: 26, scope: !15906)
!15908 = !DILocation(line: 809, column: 13, scope: !15906)
!15909 = !DILocation(line: 814, column: 11, scope: !15860)
!15910 = !DILocation(line: 819, column: 15, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 819, column: 15)
!15912 = !DILocation(line: 819, column: 15, scope: !15860)
!15913 = !DILocation(line: 821, column: 26, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15911, file: !15642, line: 820, column: 13)
!15915 = !DILocation(line: 822, column: 26, scope: !15914)
!15916 = !DILocation(line: 823, column: 13, scope: !15914)
!15917 = !DILocation(line: 824, column: 15, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 824, column: 15)
!15919 = !DILocation(line: 824, column: 24, scope: !15918)
!15920 = !DILocation(line: 824, column: 15, scope: !15860)
!15921 = !DILocation(line: 825, column: 13, scope: !15918)
!15922 = !DILocation(line: 833, column: 11, scope: !15860)
!15923 = !DILocation(line: 837, column: 15, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 837, column: 15)
!15925 = !DILocation(line: 837, column: 24, scope: !15924)
!15926 = !DILocation(line: 837, column: 15, scope: !15860)
!15927 = !DILocation(line: 838, column: 13, scope: !15924)
!15928 = !DILocation(line: 839, column: 15, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 839, column: 15)
!15930 = !DILocation(line: 839, column: 15, scope: !15860)
!15931 = !DILocation(line: 841, column: 26, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15929, file: !15642, line: 840, column: 13)
!15933 = !DILocation(line: 842, column: 26, scope: !15932)
!15934 = !DILocation(line: 843, column: 13, scope: !15932)
!15935 = !DILocation(line: 851, column: 11, scope: !15860)
!15936 = !DILocation(line: 855, column: 15, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 855, column: 15)
!15938 = !DILocation(line: 855, column: 24, scope: !15937)
!15939 = !DILocation(line: 855, column: 15, scope: !15860)
!15940 = !DILocation(line: 856, column: 13, scope: !15937)
!15941 = !DILocation(line: 865, column: 11, scope: !15860)
!15942 = !DILabel(scope: !15860, name: "subformat", file: !15642, line: 868)
!15943 = !DILocation(line: 868, column: 9, scope: !15860)
!15944 = !DILocation(line: 869, column: 20, scope: !15860)
!15945 = !DILocation(line: 869, column: 11, scope: !15860)
!15946 = !DILabel(scope: !15860, name: "subformat_width", file: !15642, line: 870)
!15947 = !DILocation(line: 870, column: 9, scope: !15860)
!15948 = !DILocalVariable(name: "len", scope: !15949, file: !15642, line: 872, type: !149)
!15949 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 871, column: 11)
!15950 = !DILocation(line: 872, column: 20, scope: !15949)
!15951 = !DILocation(line: 873, column: 47, scope: !15949)
!15952 = !DILocation(line: 873, column: 55, scope: !15949)
!15953 = !DILocation(line: 873, column: 59, scope: !15949)
!15954 = !DILocation(line: 874, column: 47, scope: !15949)
!15955 = !DILocation(line: 874, column: 52, scope: !15949)
!15956 = !DILocation(line: 874, column: 62, scope: !15949)
!15957 = !DILocation(line: 875, column: 47, scope: !15949)
!15958 = !DILocation(line: 872, column: 26, scope: !15949)
!15959 = !DILocation(line: 876, column: 13, scope: !15949)
!15960 = !DILocalVariable(name: "_n", scope: !15961, file: !15642, line: 876, type: !149)
!15961 = distinct !DILexicalBlock(scope: !15949, file: !15642, line: 876, column: 13)
!15962 = !DILocation(line: 876, column: 13, scope: !15961)
!15963 = !DILocalVariable(name: "_w", scope: !15961, file: !15642, line: 876, type: !149)
!15964 = !DILocalVariable(name: "_incr", scope: !15961, file: !15642, line: 876, type: !149)
!15965 = !DILocation(line: 876, column: 13, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15961, file: !15642, line: 876, column: 13)
!15967 = !DILocation(line: 876, column: 13, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15961, file: !15642, line: 876, column: 13)
!15969 = !DILocation(line: 876, column: 13, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15971, file: !15642, line: 876, column: 13)
!15971 = distinct !DILexicalBlock(scope: !15968, file: !15642, line: 876, column: 13)
!15972 = !DILocation(line: 876, column: 13, scope: !15971)
!15973 = !DILocalVariable(name: "_delta", scope: !15974, file: !15642, line: 876, type: !149)
!15974 = distinct !DILexicalBlock(scope: !15970, file: !15642, line: 876, column: 13)
!15975 = !DILocation(line: 876, column: 13, scope: !15974)
!15976 = !DILocation(line: 876, column: 13, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15974, file: !15642, line: 876, column: 13)
!15978 = !DILocation(line: 882, column: 11, scope: !15860)
!15979 = !DILabel(scope: !15860, name: "underlying_strftime", file: !15642, line: 885)
!15980 = !DILocation(line: 885, column: 9, scope: !15860)
!15981 = !DILocalVariable(name: "ufmt", scope: !15982, file: !15642, line: 889, type: !1946)
!15982 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 886, column: 11)
!15983 = !DILocation(line: 889, column: 18, scope: !15982)
!15984 = !DILocalVariable(name: "u", scope: !15982, file: !15642, line: 890, type: !143)
!15985 = !DILocation(line: 890, column: 19, scope: !15982)
!15986 = !DILocation(line: 890, column: 23, scope: !15982)
!15987 = !DILocalVariable(name: "ubuf", scope: !15982, file: !15642, line: 891, type: !1947)
!15988 = !DILocation(line: 891, column: 18, scope: !15982)
!15989 = !DILocalVariable(name: "len", scope: !15982, file: !15642, line: 892, type: !149)
!15990 = !DILocation(line: 892, column: 20, scope: !15982)
!15991 = !DILocation(line: 903, column: 15, scope: !15982)
!15992 = !DILocation(line: 903, column: 18, scope: !15982)
!15993 = !DILocation(line: 904, column: 15, scope: !15982)
!15994 = !DILocation(line: 904, column: 18, scope: !15982)
!15995 = !DILocation(line: 905, column: 17, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15982, file: !15642, line: 905, column: 17)
!15997 = !DILocation(line: 905, column: 26, scope: !15996)
!15998 = !DILocation(line: 905, column: 17, scope: !15982)
!15999 = !DILocation(line: 906, column: 22, scope: !15996)
!16000 = !DILocation(line: 906, column: 17, scope: !15996)
!16001 = !DILocation(line: 906, column: 20, scope: !15996)
!16002 = !DILocation(line: 906, column: 15, scope: !15996)
!16003 = !DILocation(line: 907, column: 20, scope: !15982)
!16004 = !DILocation(line: 907, column: 15, scope: !15982)
!16005 = !DILocation(line: 907, column: 18, scope: !15982)
!16006 = !DILocation(line: 908, column: 14, scope: !15982)
!16007 = !DILocation(line: 908, column: 16, scope: !15982)
!16008 = !DILocation(line: 909, column: 29, scope: !15982)
!16009 = !DILocation(line: 909, column: 48, scope: !15982)
!16010 = !DILocation(line: 909, column: 54, scope: !15982)
!16011 = !DILocation(line: 909, column: 19, scope: !15982)
!16012 = !DILocation(line: 909, column: 17, scope: !15982)
!16013 = !DILocation(line: 910, column: 17, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15982, file: !15642, line: 910, column: 17)
!16015 = !DILocation(line: 910, column: 21, scope: !16014)
!16016 = !DILocation(line: 910, column: 17, scope: !15982)
!16017 = !DILocation(line: 911, column: 15, scope: !16014)
!16018 = !DILocalVariable(name: "_n", scope: !16019, file: !15642, line: 911, type: !149)
!16019 = distinct !DILexicalBlock(scope: !16014, file: !15642, line: 911, column: 15)
!16020 = !DILocation(line: 911, column: 15, scope: !16019)
!16021 = !DILocalVariable(name: "_w", scope: !16019, file: !15642, line: 911, type: !149)
!16022 = !DILocalVariable(name: "_incr", scope: !16019, file: !15642, line: 911, type: !149)
!16023 = !DILocation(line: 911, column: 15, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16019, file: !15642, line: 911, column: 15)
!16025 = !DILocation(line: 911, column: 15, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16019, file: !15642, line: 911, column: 15)
!16027 = !DILocation(line: 911, column: 15, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16029, file: !15642, line: 911, column: 15)
!16029 = distinct !DILexicalBlock(scope: !16026, file: !15642, line: 911, column: 15)
!16030 = !DILocation(line: 911, column: 15, scope: !16029)
!16031 = !DILocalVariable(name: "_delta", scope: !16032, file: !15642, line: 911, type: !149)
!16032 = distinct !DILexicalBlock(scope: !16028, file: !15642, line: 911, column: 15)
!16033 = !DILocation(line: 911, column: 15, scope: !16032)
!16034 = !DILocation(line: 911, column: 15, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16032, file: !15642, line: 911, column: 15)
!16036 = !DILocation(line: 911, column: 15, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16029, file: !15642, line: 911, column: 15)
!16038 = !DILocation(line: 911, column: 15, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16037, file: !15642, line: 911, column: 15)
!16040 = !DILocation(line: 913, column: 11, scope: !15860)
!16041 = !DILocation(line: 917, column: 15, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 917, column: 15)
!16043 = !DILocation(line: 917, column: 24, scope: !16042)
!16044 = !DILocation(line: 917, column: 15, scope: !15860)
!16045 = !DILocation(line: 933, column: 15, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16042, file: !15642, line: 918, column: 13)
!16047 = !DILocalVariable(name: "century", scope: !16048, file: !15642, line: 938, type: !27)
!16048 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 937, column: 11)
!16049 = !DILocation(line: 938, column: 17, scope: !16048)
!16050 = !DILocation(line: 938, column: 27, scope: !16048)
!16051 = !DILocation(line: 938, column: 31, scope: !16048)
!16052 = !{!6837, !2437, i64 20}
!16053 = !DILocation(line: 938, column: 39, scope: !16048)
!16054 = !DILocation(line: 938, column: 45, scope: !16048)
!16055 = !DILocation(line: 939, column: 24, scope: !16048)
!16056 = !DILocation(line: 939, column: 28, scope: !16048)
!16057 = !DILocation(line: 939, column: 36, scope: !16048)
!16058 = !DILocation(line: 939, column: 42, scope: !16048)
!16059 = !DILocation(line: 939, column: 46, scope: !16048)
!16060 = !DILocation(line: 939, column: 53, scope: !16048)
!16061 = !DILocation(line: 939, column: 51, scope: !16048)
!16062 = !DILocation(line: 0, scope: !16048)
!16063 = !DILocation(line: 939, column: 21, scope: !16048)
!16064 = !DILocation(line: 940, column: 13, scope: !16048)
!16065 = !DILocation(line: 940, column: 13, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16048, file: !15642, line: 940, column: 13)
!16067 = !DILocation(line: 941, column: 11, scope: !16048)
!16068 = !DILocation(line: 944, column: 15, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 944, column: 15)
!16070 = !DILocation(line: 944, column: 24, scope: !16069)
!16071 = !DILocation(line: 944, column: 15, scope: !15860)
!16072 = !DILocation(line: 945, column: 13, scope: !16069)
!16073 = !DILocation(line: 954, column: 11, scope: !15860)
!16074 = !DILocation(line: 957, column: 15, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 957, column: 15)
!16076 = !DILocation(line: 957, column: 24, scope: !16075)
!16077 = !DILocation(line: 957, column: 15, scope: !15860)
!16078 = !DILocation(line: 958, column: 13, scope: !16075)
!16079 = !DILocation(line: 959, column: 18, scope: !15860)
!16080 = !DILocation(line: 960, column: 11, scope: !15860)
!16081 = !DILocation(line: 963, column: 15, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 963, column: 15)
!16083 = !DILocation(line: 963, column: 24, scope: !16082)
!16084 = !DILocation(line: 963, column: 15, scope: !15860)
!16085 = !DILocation(line: 964, column: 13, scope: !16082)
!16086 = !DILocation(line: 966, column: 11, scope: !15860)
!16087 = !DILocation(line: 966, column: 11, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 966, column: 11)
!16089 = !{!6837, !2437, i64 12}
!16090 = !DILocation(line: 969, column: 15, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 969, column: 15)
!16092 = !DILocation(line: 969, column: 24, scope: !16091)
!16093 = !DILocation(line: 969, column: 15, scope: !15860)
!16094 = !DILocation(line: 970, column: 13, scope: !16091)
!16095 = !DILocation(line: 972, column: 11, scope: !15860)
!16096 = !DILocation(line: 972, column: 11, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 972, column: 11)
!16098 = !DILabel(scope: !15860, name: "do_tz_offset", file: !15642, line: 977)
!16099 = !DILocation(line: 977, column: 9, scope: !15860)
!16100 = !DILocation(line: 978, column: 32, scope: !15860)
!16101 = !DILocation(line: 979, column: 11, scope: !15860)
!16102 = !DILabel(scope: !15860, name: "do_yearish", file: !15642, line: 981)
!16103 = !DILocation(line: 981, column: 9, scope: !15860)
!16104 = !DILocation(line: 982, column: 15, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 982, column: 15)
!16106 = !DILocation(line: 982, column: 19, scope: !16105)
!16107 = !DILocation(line: 982, column: 15, scope: !15860)
!16108 = !DILocation(line: 983, column: 19, scope: !16105)
!16109 = !DILocation(line: 983, column: 17, scope: !16105)
!16110 = !DILocation(line: 983, column: 13, scope: !16105)
!16111 = !DILocation(line: 985, column: 16, scope: !15860)
!16112 = !DILocation(line: 985, column: 20, scope: !15860)
!16113 = !DILocation(line: 986, column: 16, scope: !15860)
!16114 = !DILocation(line: 986, column: 21, scope: !15860)
!16115 = !DILocation(line: 986, column: 28, scope: !15860)
!16116 = !DILocation(line: 986, column: 48, scope: !15860)
!16117 = !DILocation(line: 986, column: 46, scope: !15860)
!16118 = !DILocation(line: 987, column: 20, scope: !15860)
!16119 = !DILocation(line: 987, column: 23, scope: !15860)
!16120 = !DILocation(line: 987, column: 32, scope: !15860)
!16121 = !DILocation(line: 987, column: 30, scope: !15860)
!16122 = !DILocation(line: 0, scope: !15860)
!16123 = !DILocation(line: 985, column: 13, scope: !15860)
!16124 = !DILocation(line: 988, column: 11, scope: !15860)
!16125 = !DILabel(scope: !15860, name: "do_number_spacepad", file: !15642, line: 990)
!16126 = !DILocation(line: 990, column: 9, scope: !15860)
!16127 = !DILocation(line: 991, column: 15, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 991, column: 15)
!16129 = !DILocation(line: 991, column: 19, scope: !16128)
!16130 = !DILocation(line: 991, column: 15, scope: !15860)
!16131 = !DILocation(line: 992, column: 17, scope: !16128)
!16132 = !DILocation(line: 992, column: 13, scope: !16128)
!16133 = !DILocation(line: 991, column: 22, scope: !16128)
!16134 = !DILabel(scope: !15860, name: "do_number", file: !15642, line: 994)
!16135 = !DILocation(line: 994, column: 9, scope: !15860)
!16136 = !DILocation(line: 996, column: 29, scope: !15860)
!16137 = !DILocation(line: 996, column: 42, scope: !15860)
!16138 = !DILocation(line: 996, column: 27, scope: !15860)
!16139 = !DILocation(line: 997, column: 28, scope: !15860)
!16140 = !DILocation(line: 997, column: 26, scope: !15860)
!16141 = !DILocation(line: 997, column: 11, scope: !15860)
!16142 = !DILabel(scope: !15860, name: "do_signed_number", file: !15642, line: 999)
!16143 = !DILocation(line: 999, column: 9, scope: !15860)
!16144 = !DILocation(line: 1000, column: 32, scope: !15860)
!16145 = !DILocation(line: 1000, column: 11, scope: !15860)
!16146 = !DILabel(scope: !15860, name: "do_maybe_signed_number", file: !15642, line: 1002)
!16147 = !DILocation(line: 1002, column: 9, scope: !15860)
!16148 = !DILocation(line: 1003, column: 25, scope: !15860)
!16149 = !DILocation(line: 1003, column: 11, scope: !15860)
!16150 = !DILabel(scope: !15860, name: "do_number_body", file: !15642, line: 1005)
!16151 = !DILocation(line: 1005, column: 9, scope: !15860)
!16152 = !DILocation(line: 1011, column: 15, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1011, column: 15)
!16154 = !DILocation(line: 1011, column: 24, scope: !16153)
!16155 = !DILocation(line: 1011, column: 35, scope: !16153)
!16156 = !DILocation(line: 1011, column: 39, scope: !16153)
!16157 = !DILocation(line: 1011, column: 15, scope: !15860)
!16158 = !DILocation(line: 1029, column: 15, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16153, file: !15642, line: 1012, column: 13)
!16160 = !DILocation(line: 1033, column: 18, scope: !15860)
!16161 = !DILocation(line: 1033, column: 22, scope: !15860)
!16162 = !DILocation(line: 1033, column: 16, scope: !15860)
!16163 = !DILocation(line: 1035, column: 15, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1035, column: 15)
!16165 = !DILocation(line: 1035, column: 15, scope: !15860)
!16166 = !DILocation(line: 1036, column: 32, scope: !16164)
!16167 = !DILocation(line: 1036, column: 30, scope: !16164)
!16168 = !DILocation(line: 1036, column: 28, scope: !16164)
!16169 = !DILocation(line: 1036, column: 13, scope: !16164)
!16170 = !DILocation(line: 1038, column: 11, scope: !15860)
!16171 = !DILocation(line: 1040, column: 19, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16173, file: !15642, line: 1040, column: 19)
!16173 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1039, column: 13)
!16174 = !DILocation(line: 1040, column: 33, scope: !16172)
!16175 = !DILocation(line: 1040, column: 19, scope: !16173)
!16176 = !DILocation(line: 1041, column: 18, scope: !16172)
!16177 = !DILocation(line: 1041, column: 25, scope: !16172)
!16178 = !DILocation(line: 1041, column: 17, scope: !16172)
!16179 = !DILocation(line: 1042, column: 29, scope: !16173)
!16180 = !DILocation(line: 1043, column: 25, scope: !16173)
!16181 = !DILocation(line: 1043, column: 40, scope: !16173)
!16182 = !DILocation(line: 1043, column: 45, scope: !16173)
!16183 = !DILocation(line: 1043, column: 16, scope: !16173)
!16184 = !DILocation(line: 1043, column: 23, scope: !16173)
!16185 = !DILocation(line: 1044, column: 30, scope: !16173)
!16186 = !DILocation(line: 1045, column: 13, scope: !16173)
!16187 = !DILocation(line: 1046, column: 18, scope: !15860)
!16188 = !DILocation(line: 1046, column: 33, scope: !15860)
!16189 = !DILocation(line: 1046, column: 38, scope: !15860)
!16190 = !DILocation(line: 1046, column: 41, scope: !15860)
!16191 = !DILocation(line: 1046, column: 55, scope: !15860)
!16192 = distinct !{!16192, !16170, !16193}
!16193 = !DILocation(line: 1046, column: 59, scope: !15860)
!16194 = !DILabel(scope: !15860, name: "do_number_sign_and_padding", file: !15642, line: 1048)
!16195 = !DILocation(line: 1048, column: 9, scope: !15860)
!16196 = !DILocation(line: 1049, column: 15, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1049, column: 15)
!16198 = !DILocation(line: 1049, column: 24, scope: !16197)
!16199 = !DILocation(line: 1049, column: 22, scope: !16197)
!16200 = !DILocation(line: 1049, column: 15, scope: !15860)
!16201 = !DILocation(line: 1050, column: 22, scope: !16197)
!16202 = !DILocation(line: 1050, column: 20, scope: !16197)
!16203 = !DILocation(line: 1050, column: 13, scope: !16197)
!16204 = !DILocation(line: 1052, column: 24, scope: !15860)
!16205 = !DILocation(line: 1053, column: 26, scope: !15860)
!16206 = !DILocation(line: 1052, column: 23, scope: !15860)
!16207 = !DILocation(line: 1052, column: 21, scope: !15860)
!16208 = !DILocation(line: 1056, column: 15, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1056, column: 15)
!16210 = !DILocation(line: 1056, column: 19, scope: !16209)
!16211 = !DILocation(line: 1056, column: 15, scope: !15860)
!16212 = !DILocation(line: 1058, column: 19, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16214, file: !15642, line: 1058, column: 19)
!16214 = distinct !DILexicalBlock(scope: !16209, file: !15642, line: 1057, column: 13)
!16215 = !DILocation(line: 1058, column: 19, scope: !16214)
!16216 = !DILocation(line: 1059, column: 17, scope: !16213)
!16217 = !DILocalVariable(name: "_n", scope: !16218, file: !15642, line: 1059, type: !149)
!16218 = distinct !DILexicalBlock(scope: !16213, file: !15642, line: 1059, column: 17)
!16219 = !DILocation(line: 1059, column: 17, scope: !16218)
!16220 = !DILocalVariable(name: "_w", scope: !16218, file: !15642, line: 1059, type: !149)
!16221 = !DILocalVariable(name: "_incr", scope: !16218, file: !15642, line: 1059, type: !149)
!16222 = !DILocation(line: 1059, column: 17, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16218, file: !15642, line: 1059, column: 17)
!16224 = !DILocation(line: 1059, column: 17, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16218, file: !15642, line: 1059, column: 17)
!16226 = !DILocation(line: 1059, column: 17, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16228, file: !15642, line: 1059, column: 17)
!16228 = distinct !DILexicalBlock(scope: !16225, file: !15642, line: 1059, column: 17)
!16229 = !DILocation(line: 1059, column: 17, scope: !16228)
!16230 = !DILocalVariable(name: "_delta", scope: !16231, file: !15642, line: 1059, type: !149)
!16231 = distinct !DILexicalBlock(scope: !16227, file: !15642, line: 1059, column: 17)
!16232 = !DILocation(line: 1059, column: 17, scope: !16231)
!16233 = !DILocation(line: 1059, column: 17, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16231, file: !15642, line: 1059, column: 17)
!16235 = !DILocation(line: 1060, column: 13, scope: !16214)
!16236 = !DILocalVariable(name: "padding", scope: !16237, file: !15642, line: 1063, type: !27)
!16237 = distinct !DILexicalBlock(scope: !16209, file: !15642, line: 1062, column: 13)
!16238 = !DILocation(line: 1063, column: 19, scope: !16237)
!16239 = !DILocation(line: 1063, column: 29, scope: !16237)
!16240 = !DILocation(line: 1063, column: 39, scope: !16237)
!16241 = !DILocation(line: 1063, column: 43, scope: !16237)
!16242 = !DILocation(line: 1064, column: 41, scope: !16237)
!16243 = !DILocation(line: 1064, column: 39, scope: !16237)
!16244 = !DILocation(line: 1063, column: 36, scope: !16237)
!16245 = !DILocation(line: 1064, column: 51, scope: !16237)
!16246 = !DILocation(line: 1064, column: 50, scope: !16237)
!16247 = !DILocation(line: 1064, column: 49, scope: !16237)
!16248 = !DILocation(line: 1064, column: 47, scope: !16237)
!16249 = !DILocation(line: 1066, column: 19, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16237, file: !15642, line: 1066, column: 19)
!16251 = !DILocation(line: 1066, column: 27, scope: !16250)
!16252 = !DILocation(line: 1066, column: 19, scope: !16237)
!16253 = !DILocation(line: 1068, column: 23, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16255, file: !15642, line: 1068, column: 23)
!16255 = distinct !DILexicalBlock(scope: !16250, file: !15642, line: 1067, column: 17)
!16256 = !DILocation(line: 1068, column: 27, scope: !16254)
!16257 = !DILocation(line: 1068, column: 23, scope: !16255)
!16258 = !DILocation(line: 1070, column: 36, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16260, file: !15642, line: 1070, column: 27)
!16260 = distinct !DILexicalBlock(scope: !16254, file: !15642, line: 1069, column: 21)
!16261 = !DILocation(line: 1070, column: 27, scope: !16259)
!16262 = !DILocation(line: 1070, column: 47, scope: !16259)
!16263 = !DILocation(line: 1070, column: 57, scope: !16259)
!16264 = !DILocation(line: 1070, column: 55, scope: !16259)
!16265 = !DILocation(line: 1070, column: 44, scope: !16259)
!16266 = !DILocation(line: 1070, column: 27, scope: !16260)
!16267 = !DILocation(line: 1071, column: 25, scope: !16259)
!16268 = !DILocation(line: 1073, column: 27, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16260, file: !15642, line: 1073, column: 27)
!16270 = !DILocation(line: 1073, column: 27, scope: !16260)
!16271 = !DILocation(line: 1074, column: 25, scope: !16269)
!16272 = !DILocation(line: 1075, column: 28, scope: !16260)
!16273 = !DILocation(line: 1075, column: 25, scope: !16260)
!16274 = !DILocation(line: 1076, column: 31, scope: !16260)
!16275 = !DILocation(line: 1076, column: 39, scope: !16260)
!16276 = !DILocation(line: 1076, column: 37, scope: !16260)
!16277 = !DILocation(line: 1076, column: 49, scope: !16260)
!16278 = !DILocation(line: 1076, column: 57, scope: !16260)
!16279 = !DILocation(line: 1076, column: 55, scope: !16260)
!16280 = !DILocation(line: 1076, column: 29, scope: !16260)
!16281 = !DILocation(line: 1077, column: 27, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16260, file: !15642, line: 1077, column: 27)
!16283 = !DILocation(line: 1077, column: 27, scope: !16260)
!16284 = !DILocation(line: 1078, column: 25, scope: !16282)
!16285 = !DILocalVariable(name: "_n", scope: !16286, file: !15642, line: 1078, type: !149)
!16286 = distinct !DILexicalBlock(scope: !16282, file: !15642, line: 1078, column: 25)
!16287 = !DILocation(line: 1078, column: 25, scope: !16286)
!16288 = !DILocalVariable(name: "_w", scope: !16286, file: !15642, line: 1078, type: !149)
!16289 = !DILocalVariable(name: "_incr", scope: !16286, file: !15642, line: 1078, type: !149)
!16290 = !DILocation(line: 1078, column: 25, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16286, file: !15642, line: 1078, column: 25)
!16292 = !DILocation(line: 1078, column: 25, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16286, file: !15642, line: 1078, column: 25)
!16294 = !DILocation(line: 1078, column: 25, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !15642, line: 1078, column: 25)
!16296 = distinct !DILexicalBlock(scope: !16293, file: !15642, line: 1078, column: 25)
!16297 = !DILocation(line: 1078, column: 25, scope: !16296)
!16298 = !DILocalVariable(name: "_delta", scope: !16299, file: !15642, line: 1078, type: !149)
!16299 = distinct !DILexicalBlock(scope: !16295, file: !15642, line: 1078, column: 25)
!16300 = !DILocation(line: 1078, column: 25, scope: !16299)
!16301 = !DILocation(line: 1078, column: 25, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16299, file: !15642, line: 1078, column: 25)
!16303 = !DILocation(line: 1079, column: 21, scope: !16260)
!16304 = !DILocation(line: 1082, column: 36, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16306, file: !15642, line: 1082, column: 27)
!16306 = distinct !DILexicalBlock(scope: !16254, file: !15642, line: 1081, column: 21)
!16307 = !DILocation(line: 1082, column: 27, scope: !16305)
!16308 = !DILocation(line: 1082, column: 46, scope: !16305)
!16309 = !DILocation(line: 1082, column: 56, scope: !16305)
!16310 = !DILocation(line: 1082, column: 54, scope: !16305)
!16311 = !DILocation(line: 1082, column: 43, scope: !16305)
!16312 = !DILocation(line: 1082, column: 27, scope: !16306)
!16313 = !DILocation(line: 1083, column: 25, scope: !16305)
!16314 = !DILocation(line: 1085, column: 27, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16306, file: !15642, line: 1085, column: 27)
!16316 = !DILocation(line: 1085, column: 27, scope: !16306)
!16317 = !DILocation(line: 1086, column: 25, scope: !16315)
!16318 = !DILocalVariable(name: "_n", scope: !16319, file: !15642, line: 1086, type: !149)
!16319 = distinct !DILexicalBlock(scope: !16315, file: !15642, line: 1086, column: 25)
!16320 = !DILocation(line: 1086, column: 25, scope: !16319)
!16321 = !DILocalVariable(name: "_w", scope: !16319, file: !15642, line: 1086, type: !149)
!16322 = !DILocalVariable(name: "_incr", scope: !16319, file: !15642, line: 1086, type: !149)
!16323 = !DILocation(line: 1086, column: 25, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16319, file: !15642, line: 1086, column: 25)
!16325 = !DILocation(line: 1086, column: 25, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16319, file: !15642, line: 1086, column: 25)
!16327 = !DILocation(line: 1086, column: 25, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16329, file: !15642, line: 1086, column: 25)
!16329 = distinct !DILexicalBlock(scope: !16326, file: !15642, line: 1086, column: 25)
!16330 = !DILocation(line: 1086, column: 25, scope: !16329)
!16331 = !DILocalVariable(name: "_delta", scope: !16332, file: !15642, line: 1086, type: !149)
!16332 = distinct !DILexicalBlock(scope: !16328, file: !15642, line: 1086, column: 25)
!16333 = !DILocation(line: 1086, column: 25, scope: !16332)
!16334 = !DILocation(line: 1086, column: 25, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16332, file: !15642, line: 1086, column: 25)
!16336 = !DILocation(line: 1088, column: 27, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16306, file: !15642, line: 1088, column: 27)
!16338 = !DILocation(line: 1088, column: 27, scope: !16306)
!16339 = !DILocation(line: 1089, column: 25, scope: !16337)
!16340 = !DILocation(line: 1090, column: 28, scope: !16306)
!16341 = !DILocation(line: 1090, column: 25, scope: !16306)
!16342 = !DILocation(line: 1091, column: 29, scope: !16306)
!16343 = !DILocation(line: 1093, column: 17, scope: !16255)
!16344 = !DILocation(line: 1096, column: 23, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !15642, line: 1096, column: 23)
!16346 = distinct !DILexicalBlock(scope: !16250, file: !15642, line: 1095, column: 17)
!16347 = !DILocation(line: 1096, column: 23, scope: !16346)
!16348 = !DILocation(line: 1097, column: 21, scope: !16345)
!16349 = !DILocalVariable(name: "_n", scope: !16350, file: !15642, line: 1097, type: !149)
!16350 = distinct !DILexicalBlock(scope: !16345, file: !15642, line: 1097, column: 21)
!16351 = !DILocation(line: 1097, column: 21, scope: !16350)
!16352 = !DILocalVariable(name: "_w", scope: !16350, file: !15642, line: 1097, type: !149)
!16353 = !DILocalVariable(name: "_incr", scope: !16350, file: !15642, line: 1097, type: !149)
!16354 = !DILocation(line: 1097, column: 21, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16350, file: !15642, line: 1097, column: 21)
!16356 = !DILocation(line: 1097, column: 21, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16350, file: !15642, line: 1097, column: 21)
!16358 = !DILocation(line: 1097, column: 21, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16360, file: !15642, line: 1097, column: 21)
!16360 = distinct !DILexicalBlock(scope: !16357, file: !15642, line: 1097, column: 21)
!16361 = !DILocation(line: 1097, column: 21, scope: !16360)
!16362 = !DILocalVariable(name: "_delta", scope: !16363, file: !15642, line: 1097, type: !149)
!16363 = distinct !DILexicalBlock(scope: !16359, file: !15642, line: 1097, column: 21)
!16364 = !DILocation(line: 1097, column: 21, scope: !16363)
!16365 = !DILocation(line: 1097, column: 21, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16363, file: !15642, line: 1097, column: 21)
!16367 = !DILocation(line: 1101, column: 11, scope: !15860)
!16368 = !DILocalVariable(name: "_n", scope: !16369, file: !15642, line: 1101, type: !149)
!16369 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1101, column: 11)
!16370 = !DILocation(line: 1101, column: 11, scope: !16369)
!16371 = !DILocalVariable(name: "_w", scope: !16369, file: !15642, line: 1101, type: !149)
!16372 = !DILocalVariable(name: "_incr", scope: !16369, file: !15642, line: 1101, type: !149)
!16373 = !DILocation(line: 1101, column: 11, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16369, file: !15642, line: 1101, column: 11)
!16375 = !DILocation(line: 1101, column: 11, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16369, file: !15642, line: 1101, column: 11)
!16377 = !DILocation(line: 1101, column: 11, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !15642, line: 1101, column: 11)
!16379 = distinct !DILexicalBlock(scope: !16376, file: !15642, line: 1101, column: 11)
!16380 = !DILocation(line: 1101, column: 11, scope: !16379)
!16381 = !DILocalVariable(name: "_delta", scope: !16382, file: !15642, line: 1101, type: !149)
!16382 = distinct !DILexicalBlock(scope: !16378, file: !15642, line: 1101, column: 11)
!16383 = !DILocation(line: 1101, column: 11, scope: !16382)
!16384 = !DILocation(line: 1101, column: 11, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16382, file: !15642, line: 1101, column: 11)
!16386 = !DILocation(line: 1101, column: 11, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16379, file: !15642, line: 1101, column: 11)
!16388 = !DILocation(line: 1101, column: 11, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16387, file: !15642, line: 1101, column: 11)
!16390 = !DILocation(line: 1102, column: 11, scope: !15860)
!16391 = !DILocation(line: 1105, column: 15, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1105, column: 15)
!16393 = !DILocation(line: 1105, column: 24, scope: !16392)
!16394 = !DILocation(line: 1105, column: 15, scope: !15860)
!16395 = !DILocation(line: 1106, column: 13, scope: !16392)
!16396 = !DILocation(line: 1107, column: 15, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1107, column: 15)
!16398 = !DILocation(line: 1107, column: 19, scope: !16397)
!16399 = !DILocation(line: 1107, column: 24, scope: !16397)
!16400 = !DILocation(line: 1107, column: 27, scope: !16397)
!16401 = !DILocation(line: 1107, column: 33, scope: !16397)
!16402 = !DILocation(line: 1107, column: 15, scope: !15860)
!16403 = !DILocation(line: 1109, column: 19, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16397, file: !15642, line: 1108, column: 13)
!16405 = !DILocation(line: 1110, column: 24, scope: !16404)
!16406 = !DILocation(line: 1111, column: 13, scope: !16404)
!16407 = !DILocation(line: 1114, column: 26, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16397, file: !15642, line: 1113, column: 13)
!16409 = !DILocation(line: 1114, column: 32, scope: !16408)
!16410 = !DILocation(line: 1114, column: 24, scope: !16408)
!16411 = !DILocation(line: 1115, column: 19, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16408, file: !15642, line: 1115, column: 19)
!16413 = !DILocation(line: 1115, column: 28, scope: !16412)
!16414 = !DILocation(line: 1115, column: 19, scope: !16408)
!16415 = !DILocation(line: 1116, column: 26, scope: !16412)
!16416 = !DILocation(line: 1116, column: 17, scope: !16412)
!16417 = !DILocation(line: 1118, column: 18, scope: !15860)
!16418 = !DILocation(line: 1119, column: 11, scope: !15860)
!16419 = !DILocation(line: 1122, column: 15, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1122, column: 15)
!16421 = !DILocation(line: 1122, column: 24, scope: !16420)
!16422 = !DILocation(line: 1122, column: 15, scope: !15860)
!16423 = !DILocation(line: 1123, column: 13, scope: !16420)
!16424 = !DILocation(line: 1125, column: 11, scope: !15860)
!16425 = !DILocation(line: 1125, column: 11, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1125, column: 11)
!16427 = !DILocation(line: 1128, column: 15, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1128, column: 15)
!16429 = !DILocation(line: 1128, column: 24, scope: !16428)
!16430 = !DILocation(line: 1128, column: 15, scope: !15860)
!16431 = !DILocation(line: 1129, column: 13, scope: !16428)
!16432 = !DILocation(line: 1131, column: 11, scope: !15860)
!16433 = !DILocation(line: 1131, column: 11, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1131, column: 11)
!16435 = !DILocation(line: 1134, column: 15, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1134, column: 15)
!16437 = !DILocation(line: 1134, column: 24, scope: !16436)
!16438 = !DILocation(line: 1134, column: 15, scope: !15860)
!16439 = !DILocation(line: 1135, column: 13, scope: !16436)
!16440 = !DILocation(line: 1137, column: 11, scope: !15860)
!16441 = !DILocation(line: 1137, column: 11, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1137, column: 11)
!16443 = !DILocation(line: 1140, column: 15, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1140, column: 15)
!16445 = !DILocation(line: 1140, column: 24, scope: !16444)
!16446 = !DILocation(line: 1140, column: 15, scope: !15860)
!16447 = !DILocation(line: 1141, column: 13, scope: !16444)
!16448 = !DILocation(line: 1143, column: 11, scope: !15860)
!16449 = !DILocation(line: 1143, column: 11, scope: !16450)
!16450 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1143, column: 11)
!16451 = !DILocation(line: 1146, column: 15, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1146, column: 15)
!16453 = !DILocation(line: 1146, column: 24, scope: !16452)
!16454 = !DILocation(line: 1146, column: 15, scope: !15860)
!16455 = !DILocation(line: 1147, column: 13, scope: !16452)
!16456 = !DILocation(line: 1149, column: 11, scope: !15860)
!16457 = !DILocation(line: 1149, column: 11, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1149, column: 11)
!16459 = !{!6837, !2437, i64 28}
!16460 = !DILocation(line: 1152, column: 15, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1152, column: 15)
!16462 = !DILocation(line: 1152, column: 24, scope: !16461)
!16463 = !DILocation(line: 1152, column: 15, scope: !15860)
!16464 = !DILocation(line: 1153, column: 13, scope: !16461)
!16465 = !DILocation(line: 1155, column: 11, scope: !15860)
!16466 = !DILocation(line: 1155, column: 11, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1155, column: 11)
!16468 = !{!6837, !2437, i64 4}
!16469 = !DILocation(line: 1158, column: 15, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1158, column: 15)
!16471 = !DILocation(line: 1158, column: 24, scope: !16470)
!16472 = !DILocation(line: 1158, column: 15, scope: !15860)
!16473 = !DILocation(line: 1159, column: 13, scope: !16470)
!16474 = !DILocation(line: 1161, column: 11, scope: !15860)
!16475 = !DILocation(line: 1161, column: 11, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1161, column: 11)
!16477 = !DILocation(line: 1165, column: 15, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1165, column: 15)
!16479 = !DILocation(line: 1165, column: 24, scope: !16478)
!16480 = !DILocation(line: 1165, column: 15, scope: !15860)
!16481 = !DILocation(line: 1166, column: 13, scope: !16478)
!16482 = !DILocation(line: 1168, column: 26, scope: !15860)
!16483 = !DILocation(line: 1168, column: 24, scope: !15860)
!16484 = !DILocation(line: 1169, column: 15, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1169, column: 15)
!16486 = !DILocation(line: 1169, column: 21, scope: !16485)
!16487 = !DILocation(line: 1169, column: 15, scope: !15860)
!16488 = !DILocation(line: 1170, column: 19, scope: !16485)
!16489 = !DILocation(line: 1170, column: 13, scope: !16485)
!16490 = !DILocalVariable(name: "j", scope: !16491, file: !15642, line: 1174, type: !27)
!16491 = distinct !DILexicalBlock(scope: !16485, file: !15642, line: 1172, column: 13)
!16492 = !DILocation(line: 1174, column: 19, scope: !16491)
!16493 = !DILocation(line: 1175, column: 24, scope: !16494)
!16494 = distinct !DILexicalBlock(scope: !16491, file: !15642, line: 1175, column: 15)
!16495 = !DILocation(line: 1175, column: 22, scope: !16494)
!16496 = !DILocation(line: 1175, column: 20, scope: !16494)
!16497 = !DILocation(line: 1175, column: 31, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16494, file: !15642, line: 1175, column: 15)
!16499 = !DILocation(line: 1175, column: 33, scope: !16498)
!16500 = !DILocation(line: 1175, column: 15, scope: !16494)
!16501 = !DILocation(line: 1176, column: 30, scope: !16498)
!16502 = !DILocation(line: 1176, column: 17, scope: !16498)
!16503 = !DILocation(line: 1175, column: 39, scope: !16498)
!16504 = !DILocation(line: 1175, column: 15, scope: !16498)
!16505 = distinct !{!16505, !16500, !16506}
!16506 = !DILocation(line: 1176, column: 33, scope: !16494)
!16507 = !DILocation(line: 1179, column: 11, scope: !15860)
!16508 = !DILocation(line: 1179, column: 11, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1179, column: 11)
!16510 = !DILocation(line: 1183, column: 11, scope: !15860)
!16511 = !DILocalVariable(name: "_n", scope: !16512, file: !15642, line: 1183, type: !149)
!16512 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1183, column: 11)
!16513 = !DILocation(line: 1183, column: 11, scope: !16512)
!16514 = !DILocalVariable(name: "_w", scope: !16512, file: !15642, line: 1183, type: !149)
!16515 = !DILocalVariable(name: "_incr", scope: !16512, file: !15642, line: 1183, type: !149)
!16516 = !DILocation(line: 1183, column: 11, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16512, file: !15642, line: 1183, column: 11)
!16518 = !DILocation(line: 1183, column: 11, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16512, file: !15642, line: 1183, column: 11)
!16520 = !DILocation(line: 1183, column: 11, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16522, file: !15642, line: 1183, column: 11)
!16522 = distinct !DILexicalBlock(scope: !16519, file: !15642, line: 1183, column: 11)
!16523 = !DILocation(line: 1183, column: 11, scope: !16522)
!16524 = !DILocalVariable(name: "_delta", scope: !16525, file: !15642, line: 1183, type: !149)
!16525 = distinct !DILexicalBlock(scope: !16521, file: !15642, line: 1183, column: 11)
!16526 = !DILocation(line: 1183, column: 11, scope: !16525)
!16527 = !DILocation(line: 1183, column: 11, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16525, file: !15642, line: 1183, column: 11)
!16529 = !DILocation(line: 1184, column: 11, scope: !15860)
!16530 = !DILocation(line: 1187, column: 22, scope: !15860)
!16531 = !DILocation(line: 1189, column: 23, scope: !15860)
!16532 = !DILocation(line: 1191, column: 11, scope: !15860)
!16533 = !DILocation(line: 1193, column: 15, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1193, column: 15)
!16535 = !DILocation(line: 1193, column: 15, scope: !15860)
!16536 = !DILocation(line: 1195, column: 26, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16534, file: !15642, line: 1194, column: 13)
!16538 = !DILocation(line: 1196, column: 26, scope: !16537)
!16539 = !DILocation(line: 1197, column: 13, scope: !16537)
!16540 = !DILocation(line: 1202, column: 11, scope: !15860)
!16541 = !DILocation(line: 1206, column: 11, scope: !15860)
!16542 = !DILocation(line: 1206, column: 11, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1206, column: 11)
!16544 = !DILocation(line: 1207, column: 11, scope: !15860)
!16545 = !DILocation(line: 1210, column: 18, scope: !15860)
!16546 = !DILocation(line: 1211, column: 11, scope: !15860)
!16547 = !DILocation(line: 1221, column: 11, scope: !15860)
!16548 = !DILocation(line: 1225, column: 15, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1225, column: 15)
!16550 = !DILocation(line: 1225, column: 24, scope: !16549)
!16551 = !DILocation(line: 1225, column: 15, scope: !15860)
!16552 = !DILocation(line: 1226, column: 13, scope: !16549)
!16553 = !DILocation(line: 1228, column: 11, scope: !15860)
!16554 = !DILocation(line: 1228, column: 11, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1228, column: 11)
!16556 = !{!6837, !2437, i64 0}
!16557 = !DILocalVariable(name: "ltm", scope: !16558, file: !15642, line: 1232, type: !1920)
!16558 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1231, column: 11)
!16559 = !DILocation(line: 1232, column: 23, scope: !16558)
!16560 = !DILocalVariable(name: "t", scope: !16558, file: !15642, line: 1233, type: !162)
!16561 = !DILocation(line: 1233, column: 20, scope: !16558)
!16562 = !DILocation(line: 1235, column: 20, scope: !16558)
!16563 = !DILocation(line: 1235, column: 19, scope: !16558)
!16564 = !{i64 0, i64 4, !2436, i64 4, i64 4, !2436, i64 8, i64 4, !2436, i64 12, i64 4, !2436, i64 16, i64 4, !2436, i64 20, i64 4, !2436, i64 24, i64 4, !2436, i64 28, i64 4, !2436, i64 32, i64 4, !2436, i64 40, i64 8, !2579, i64 48, i64 8, !2442}
!16565 = !DILocation(line: 1236, column: 27, scope: !16558)
!16566 = !DILocation(line: 1236, column: 17, scope: !16558)
!16567 = !DILocation(line: 1236, column: 15, scope: !16558)
!16568 = !DILocation(line: 1241, column: 20, scope: !16558)
!16569 = !DILocation(line: 1241, column: 24, scope: !16558)
!16570 = !DILocation(line: 1241, column: 18, scope: !16558)
!16571 = !DILocation(line: 1242, column: 31, scope: !16558)
!16572 = !DILocation(line: 1242, column: 33, scope: !16558)
!16573 = !DILocation(line: 1242, column: 29, scope: !16558)
!16574 = !DILocation(line: 1244, column: 13, scope: !16558)
!16575 = !DILocalVariable(name: "d", scope: !16576, file: !15642, line: 1246, type: !27)
!16576 = distinct !DILexicalBlock(scope: !16558, file: !15642, line: 1245, column: 15)
!16577 = !DILocation(line: 1246, column: 21, scope: !16576)
!16578 = !DILocation(line: 1246, column: 25, scope: !16576)
!16579 = !DILocation(line: 1246, column: 27, scope: !16576)
!16580 = !DILocation(line: 1247, column: 19, scope: !16576)
!16581 = !DILocation(line: 1248, column: 28, scope: !16576)
!16582 = !DILocation(line: 1248, column: 47, scope: !16576)
!16583 = !DILocation(line: 1248, column: 46, scope: !16576)
!16584 = !DILocation(line: 1248, column: 51, scope: !16576)
!16585 = !DILocation(line: 1248, column: 54, scope: !16576)
!16586 = !DILocation(line: 1248, column: 27, scope: !16576)
!16587 = !DILocation(line: 1248, column: 18, scope: !16576)
!16588 = !DILocation(line: 1248, column: 25, scope: !16576)
!16589 = !DILocation(line: 1249, column: 15, scope: !16576)
!16590 = !DILocation(line: 1250, column: 20, scope: !16558)
!16591 = !DILocation(line: 1250, column: 22, scope: !16558)
!16592 = distinct !{!16592, !16574, !16593}
!16593 = !DILocation(line: 1250, column: 26, scope: !16558)
!16594 = !DILocation(line: 1252, column: 20, scope: !16558)
!16595 = !DILocation(line: 1253, column: 34, scope: !16558)
!16596 = !DILocation(line: 1254, column: 13, scope: !16558)
!16597 = !DILocation(line: 1258, column: 15, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1258, column: 15)
!16599 = !DILocation(line: 1258, column: 24, scope: !16598)
!16600 = !DILocation(line: 1258, column: 15, scope: !15860)
!16601 = !DILocation(line: 1259, column: 13, scope: !16598)
!16602 = !DILocation(line: 1268, column: 11, scope: !15860)
!16603 = !DILocation(line: 1271, column: 18, scope: !15860)
!16604 = !DILocation(line: 1272, column: 11, scope: !15860)
!16605 = !DILocation(line: 1275, column: 11, scope: !15860)
!16606 = !DILocalVariable(name: "_n", scope: !16607, file: !15642, line: 1275, type: !149)
!16607 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1275, column: 11)
!16608 = !DILocation(line: 1275, column: 11, scope: !16607)
!16609 = !DILocalVariable(name: "_w", scope: !16607, file: !15642, line: 1275, type: !149)
!16610 = !DILocalVariable(name: "_incr", scope: !16607, file: !15642, line: 1275, type: !149)
!16611 = !DILocation(line: 1275, column: 11, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16607, file: !15642, line: 1275, column: 11)
!16613 = !DILocation(line: 1275, column: 11, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16607, file: !15642, line: 1275, column: 11)
!16615 = !DILocation(line: 1275, column: 11, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16617, file: !15642, line: 1275, column: 11)
!16617 = distinct !DILexicalBlock(scope: !16614, file: !15642, line: 1275, column: 11)
!16618 = !DILocation(line: 1275, column: 11, scope: !16617)
!16619 = !DILocalVariable(name: "_delta", scope: !16620, file: !15642, line: 1275, type: !149)
!16620 = distinct !DILexicalBlock(scope: !16616, file: !15642, line: 1275, column: 11)
!16621 = !DILocation(line: 1275, column: 11, scope: !16620)
!16622 = !DILocation(line: 1275, column: 11, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16620, file: !15642, line: 1275, column: 11)
!16624 = !DILocation(line: 1276, column: 11, scope: !15860)
!16625 = !DILocation(line: 1279, column: 11, scope: !15860)
!16626 = !DILocation(line: 1279, column: 11, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1279, column: 11)
!16628 = !{!6837, !2437, i64 24}
!16629 = !DILocation(line: 1282, column: 15, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1282, column: 15)
!16631 = !DILocation(line: 1282, column: 24, scope: !16630)
!16632 = !DILocation(line: 1282, column: 15, scope: !15860)
!16633 = !DILocation(line: 1283, column: 13, scope: !16630)
!16634 = !DILocation(line: 1285, column: 11, scope: !15860)
!16635 = !DILocation(line: 1285, column: 11, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1285, column: 11)
!16637 = !DILocation(line: 1290, column: 15, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1290, column: 15)
!16639 = !DILocation(line: 1290, column: 24, scope: !16638)
!16640 = !DILocation(line: 1290, column: 15, scope: !15860)
!16641 = !DILocation(line: 1291, column: 13, scope: !16638)
!16642 = !DILocalVariable(name: "year", scope: !16643, file: !15642, line: 1297, type: !27)
!16643 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1292, column: 11)
!16644 = !DILocation(line: 1297, column: 17, scope: !16643)
!16645 = !DILocation(line: 1297, column: 25, scope: !16643)
!16646 = !DILocation(line: 1297, column: 29, scope: !16643)
!16647 = !DILocation(line: 1298, column: 28, scope: !16643)
!16648 = !DILocation(line: 1298, column: 32, scope: !16643)
!16649 = !DILocation(line: 1298, column: 40, scope: !16643)
!16650 = !DILocation(line: 1298, column: 25, scope: !16643)
!16651 = !DILocalVariable(name: "year_adjust", scope: !16643, file: !15642, line: 1301, type: !27)
!16652 = !DILocation(line: 1301, column: 17, scope: !16643)
!16653 = !DILocalVariable(name: "days", scope: !16643, file: !15642, line: 1302, type: !27)
!16654 = !DILocation(line: 1302, column: 17, scope: !16643)
!16655 = !DILocation(line: 1302, column: 39, scope: !16643)
!16656 = !DILocation(line: 1302, column: 43, scope: !16643)
!16657 = !DILocation(line: 1302, column: 52, scope: !16643)
!16658 = !DILocation(line: 1302, column: 56, scope: !16643)
!16659 = !DILocation(line: 1302, column: 24, scope: !16643)
!16660 = !DILocation(line: 1304, column: 17, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16643, file: !15642, line: 1304, column: 17)
!16662 = !DILocation(line: 1304, column: 22, scope: !16661)
!16663 = !DILocation(line: 1304, column: 17, scope: !16643)
!16664 = !DILocation(line: 1307, column: 29, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16661, file: !15642, line: 1305, column: 15)
!16666 = !DILocation(line: 1308, column: 39, scope: !16665)
!16667 = !DILocation(line: 1308, column: 43, scope: !16665)
!16668 = !DILocation(line: 1308, column: 60, scope: !16665)
!16669 = !DILocation(line: 0, scope: !16665)
!16670 = !DILocation(line: 1308, column: 58, scope: !16665)
!16671 = !DILocation(line: 1308, column: 51, scope: !16665)
!16672 = !DILocation(line: 1309, column: 39, scope: !16665)
!16673 = !DILocation(line: 1309, column: 43, scope: !16665)
!16674 = !DILocation(line: 1308, column: 24, scope: !16665)
!16675 = !DILocation(line: 1308, column: 22, scope: !16665)
!16676 = !DILocation(line: 1310, column: 15, scope: !16665)
!16677 = !DILocalVariable(name: "d", scope: !16678, file: !15642, line: 1313, type: !27)
!16678 = distinct !DILexicalBlock(scope: !16661, file: !15642, line: 1312, column: 15)
!16679 = !DILocation(line: 1313, column: 21, scope: !16678)
!16680 = !DILocation(line: 1313, column: 40, scope: !16678)
!16681 = !DILocation(line: 1313, column: 44, scope: !16678)
!16682 = !DILocation(line: 1313, column: 61, scope: !16678)
!16683 = !DILocation(line: 0, scope: !16678)
!16684 = !DILocation(line: 1313, column: 59, scope: !16678)
!16685 = !DILocation(line: 1313, column: 52, scope: !16678)
!16686 = !DILocation(line: 1314, column: 40, scope: !16678)
!16687 = !DILocation(line: 1314, column: 44, scope: !16678)
!16688 = !DILocation(line: 1313, column: 25, scope: !16678)
!16689 = !DILocation(line: 1315, column: 26, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16678, file: !15642, line: 1315, column: 21)
!16691 = !DILocation(line: 1315, column: 23, scope: !16690)
!16692 = !DILocation(line: 1315, column: 21, scope: !16678)
!16693 = !DILocation(line: 1318, column: 33, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16690, file: !15642, line: 1316, column: 19)
!16695 = !DILocation(line: 1319, column: 28, scope: !16694)
!16696 = !DILocation(line: 1319, column: 26, scope: !16694)
!16697 = !DILocation(line: 1320, column: 19, scope: !16694)
!16698 = !DILocation(line: 1323, column: 22, scope: !16643)
!16699 = !DILocation(line: 1323, column: 21, scope: !16643)
!16700 = !DILocation(line: 1323, column: 13, scope: !16643)
!16701 = !DILocalVariable(name: "yy", scope: !16702, file: !15642, line: 1327, type: !27)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !15642, line: 1326, column: 17)
!16703 = distinct !DILexicalBlock(scope: !16643, file: !15642, line: 1324, column: 15)
!16704 = !DILocation(line: 1327, column: 23, scope: !16702)
!16705 = !DILocation(line: 1327, column: 29, scope: !16702)
!16706 = !DILocation(line: 1327, column: 33, scope: !16702)
!16707 = !DILocation(line: 1327, column: 41, scope: !16702)
!16708 = !DILocation(line: 1327, column: 49, scope: !16702)
!16709 = !DILocation(line: 1327, column: 47, scope: !16702)
!16710 = !DILocation(line: 1327, column: 62, scope: !16702)
!16711 = !DILocation(line: 1328, column: 19, scope: !16702)
!16712 = !DILocation(line: 1328, column: 19, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16702, file: !15642, line: 1328, column: 19)
!16714 = !DILocation(line: 1334, column: 17, scope: !16702)
!16715 = !DILocation(line: 1337, column: 17, scope: !16703)
!16716 = !DILocation(line: 1337, column: 17, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16703, file: !15642, line: 1337, column: 17)
!16718 = !DILocation(line: 1342, column: 17, scope: !16703)
!16719 = !DILocation(line: 1342, column: 17, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16703, file: !15642, line: 1342, column: 17)
!16721 = !DILocation(line: 1343, column: 15, scope: !16703)
!16722 = !DILocation(line: 1344, column: 11, scope: !16643)
!16723 = !DILocation(line: 1347, column: 15, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1347, column: 15)
!16725 = !DILocation(line: 1347, column: 24, scope: !16724)
!16726 = !DILocation(line: 1347, column: 15, scope: !15860)
!16727 = !DILocation(line: 1348, column: 13, scope: !16724)
!16728 = !DILocation(line: 1350, column: 11, scope: !15860)
!16729 = !DILocation(line: 1350, column: 11, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1350, column: 11)
!16731 = !DILocation(line: 1353, column: 15, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1353, column: 15)
!16733 = !DILocation(line: 1353, column: 24, scope: !16732)
!16734 = !DILocation(line: 1353, column: 15, scope: !15860)
!16735 = !DILocation(line: 1354, column: 13, scope: !16732)
!16736 = !DILocation(line: 1356, column: 11, scope: !15860)
!16737 = !DILocation(line: 1356, column: 11, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1356, column: 11)
!16739 = !DILocation(line: 1359, column: 15, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1359, column: 15)
!16741 = !DILocation(line: 1359, column: 24, scope: !16740)
!16742 = !DILocation(line: 1359, column: 15, scope: !15860)
!16743 = !DILocation(line: 1375, column: 15, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16740, file: !15642, line: 1360, column: 13)
!16745 = !DILocation(line: 1378, column: 15, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1378, column: 15)
!16747 = !DILocation(line: 1378, column: 24, scope: !16746)
!16748 = !DILocation(line: 1378, column: 15, scope: !15860)
!16749 = !DILocation(line: 1379, column: 13, scope: !16746)
!16750 = !DILocation(line: 1381, column: 11, scope: !15860)
!16751 = !DILocation(line: 1381, column: 11, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1381, column: 11)
!16753 = !DILocation(line: 1385, column: 15, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1385, column: 15)
!16755 = !DILocation(line: 1385, column: 24, scope: !16754)
!16756 = !DILocation(line: 1385, column: 15, scope: !15860)
!16757 = !DILocation(line: 1398, column: 15, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16754, file: !15642, line: 1386, column: 13)
!16759 = !DILocalVariable(name: "yy", scope: !16760, file: !15642, line: 1403, type: !27)
!16760 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1402, column: 11)
!16761 = !DILocation(line: 1403, column: 17, scope: !16760)
!16762 = !DILocation(line: 1403, column: 22, scope: !16760)
!16763 = !DILocation(line: 1403, column: 26, scope: !16760)
!16764 = !DILocation(line: 1403, column: 34, scope: !16760)
!16765 = !DILocation(line: 1404, column: 17, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16760, file: !15642, line: 1404, column: 17)
!16767 = !DILocation(line: 1404, column: 20, scope: !16766)
!16768 = !DILocation(line: 1404, column: 17, scope: !16760)
!16769 = !DILocation(line: 1405, column: 20, scope: !16766)
!16770 = !DILocation(line: 1405, column: 24, scope: !16766)
!16771 = !DILocation(line: 1405, column: 32, scope: !16766)
!16772 = !DILocation(line: 1405, column: 52, scope: !16766)
!16773 = !DILocation(line: 1405, column: 51, scope: !16766)
!16774 = !DILocation(line: 1405, column: 57, scope: !16766)
!16775 = !DILocation(line: 1405, column: 60, scope: !16766)
!16776 = !DILocation(line: 1405, column: 18, scope: !16766)
!16777 = !DILocation(line: 1405, column: 15, scope: !16766)
!16778 = !DILocation(line: 1406, column: 13, scope: !16760)
!16779 = !DILocation(line: 1406, column: 13, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16760, file: !15642, line: 1406, column: 13)
!16781 = !DILocation(line: 1407, column: 11, scope: !16760)
!16782 = !DILocation(line: 1410, column: 15, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1410, column: 15)
!16784 = !DILocation(line: 1410, column: 15, scope: !15860)
!16785 = !DILocation(line: 1412, column: 26, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16783, file: !15642, line: 1411, column: 13)
!16787 = !DILocation(line: 1413, column: 26, scope: !16786)
!16788 = !DILocation(line: 1414, column: 13, scope: !16786)
!16789 = !DILocation(line: 1426, column: 11, scope: !15860)
!16790 = !DILocalVariable(name: "_n", scope: !16791, file: !15642, line: 1426, type: !149)
!16791 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1426, column: 11)
!16792 = !DILocation(line: 1426, column: 11, scope: !16791)
!16793 = !DILocalVariable(name: "_w", scope: !16791, file: !15642, line: 1426, type: !149)
!16794 = !DILocalVariable(name: "_incr", scope: !16791, file: !15642, line: 1426, type: !149)
!16795 = !DILocation(line: 1426, column: 11, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16791, file: !15642, line: 1426, column: 11)
!16797 = !DILocation(line: 1426, column: 11, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16791, file: !15642, line: 1426, column: 11)
!16799 = !DILocation(line: 1426, column: 11, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !15642, line: 1426, column: 11)
!16801 = distinct !DILexicalBlock(scope: !16798, file: !15642, line: 1426, column: 11)
!16802 = !DILocation(line: 1426, column: 11, scope: !16801)
!16803 = !DILocalVariable(name: "_delta", scope: !16804, file: !15642, line: 1426, type: !149)
!16804 = distinct !DILexicalBlock(scope: !16800, file: !15642, line: 1426, column: 11)
!16805 = !DILocation(line: 1426, column: 11, scope: !16804)
!16806 = !DILocation(line: 1426, column: 11, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16804, file: !15642, line: 1426, column: 11)
!16808 = !DILocation(line: 1426, column: 11, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16801, file: !15642, line: 1426, column: 11)
!16810 = !DILocation(line: 1426, column: 11, scope: !16811)
!16811 = distinct !DILexicalBlock(scope: !16809, file: !15642, line: 1426, column: 11)
!16812 = !DILocation(line: 1428, column: 11, scope: !15860)
!16813 = !DILocation(line: 1433, column: 23, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1433, column: 11)
!16815 = !DILocation(line: 1433, column: 16, scope: !16814)
!16816 = !DILocation(line: 1433, column: 28, scope: !16817)
!16817 = distinct !DILexicalBlock(scope: !16814, file: !15642, line: 1433, column: 11)
!16818 = !DILocation(line: 1433, column: 30, scope: !16817)
!16819 = !DILocation(line: 1433, column: 38, scope: !16817)
!16820 = !DILocation(line: 1433, column: 11, scope: !16814)
!16821 = !DILocation(line: 1434, column: 13, scope: !16817)
!16822 = !DILocation(line: 1433, column: 56, scope: !16817)
!16823 = !DILocation(line: 1433, column: 11, scope: !16817)
!16824 = distinct !{!16824, !16820, !16825}
!16825 = !DILocation(line: 1434, column: 13, scope: !16814)
!16826 = !DILocation(line: 1435, column: 15, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1435, column: 15)
!16828 = !DILocation(line: 1435, column: 17, scope: !16827)
!16829 = !DILocation(line: 1435, column: 25, scope: !16827)
!16830 = !DILocation(line: 1435, column: 15, scope: !15860)
!16831 = !DILocation(line: 1436, column: 13, scope: !16827)
!16832 = !DILocation(line: 1437, column: 16, scope: !15860)
!16833 = !DILocation(line: 1437, column: 13, scope: !15860)
!16834 = !DILocation(line: 1438, column: 11, scope: !15860)
!16835 = !DILocation(line: 1441, column: 18, scope: !15860)
!16836 = !DILocation(line: 1441, column: 11, scope: !15860)
!16837 = !DILabel(scope: !15860, name: "do_z_conversion", file: !15642, line: 1443)
!16838 = !DILocation(line: 1443, column: 9, scope: !15860)
!16839 = !DILocation(line: 1444, column: 15, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1444, column: 15)
!16841 = !DILocation(line: 1444, column: 19, scope: !16840)
!16842 = !{!6837, !2437, i64 32}
!16843 = !DILocation(line: 1444, column: 28, scope: !16840)
!16844 = !DILocation(line: 1444, column: 15, scope: !15860)
!16845 = !DILocation(line: 1445, column: 13, scope: !16840)
!16846 = !DILocalVariable(name: "diff", scope: !16847, file: !15642, line: 1448, type: !27)
!16847 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1447, column: 11)
!16848 = !DILocation(line: 1448, column: 17, scope: !16847)
!16849 = !DILocalVariable(name: "hour_diff", scope: !16847, file: !15642, line: 1449, type: !27)
!16850 = !DILocation(line: 1449, column: 17, scope: !16847)
!16851 = !DILocalVariable(name: "min_diff", scope: !16847, file: !15642, line: 1450, type: !27)
!16852 = !DILocation(line: 1450, column: 17, scope: !16847)
!16853 = !DILocalVariable(name: "sec_diff", scope: !16847, file: !15642, line: 1451, type: !27)
!16854 = !DILocation(line: 1451, column: 17, scope: !16847)
!16855 = !DILocation(line: 1453, column: 20, scope: !16847)
!16856 = !DILocation(line: 1453, column: 24, scope: !16847)
!16857 = !{!6837, !2467, i64 40}
!16858 = !DILocation(line: 1453, column: 18, scope: !16847)
!16859 = !DILocation(line: 1482, column: 31, scope: !16847)
!16860 = !DILocation(line: 1482, column: 36, scope: !16847)
!16861 = !DILocation(line: 1482, column: 40, scope: !16847)
!16862 = !DILocation(line: 1482, column: 44, scope: !16847)
!16863 = !DILocation(line: 1482, column: 49, scope: !16847)
!16864 = !DILocation(line: 1482, column: 54, scope: !16847)
!16865 = !DILocation(line: 1482, column: 58, scope: !16847)
!16866 = !DILocation(line: 1482, column: 57, scope: !16847)
!16867 = !DILocation(line: 1482, column: 63, scope: !16847)
!16868 = !DILocation(line: 0, scope: !16847)
!16869 = !DILocation(line: 1482, column: 29, scope: !16847)
!16870 = !DILocation(line: 1483, column: 25, scope: !16847)
!16871 = !DILocation(line: 1483, column: 30, scope: !16847)
!16872 = !DILocation(line: 1483, column: 35, scope: !16847)
!16873 = !DILocation(line: 1483, column: 23, scope: !16847)
!16874 = !DILocation(line: 1484, column: 24, scope: !16847)
!16875 = !DILocation(line: 1484, column: 29, scope: !16847)
!16876 = !DILocation(line: 1484, column: 34, scope: !16847)
!16877 = !DILocation(line: 1484, column: 22, scope: !16847)
!16878 = !DILocation(line: 1485, column: 24, scope: !16847)
!16879 = !DILocation(line: 1485, column: 29, scope: !16847)
!16880 = !DILocation(line: 1485, column: 22, scope: !16847)
!16881 = !DILocation(line: 1487, column: 21, scope: !16847)
!16882 = !DILocation(line: 1487, column: 13, scope: !16847)
!16883 = !DILocation(line: 1490, column: 17, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16847, file: !15642, line: 1488, column: 15)
!16885 = !DILocation(line: 1490, column: 17, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1490, column: 17)
!16887 = !DILabel(scope: !16884, name: "tz_hh_mm", file: !15642, line: 1492)
!16888 = !DILocation(line: 1492, column: 23, scope: !16884)
!16889 = !DILocation(line: 1493, column: 17, scope: !16884)
!16890 = !DILocation(line: 1493, column: 17, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1493, column: 17)
!16892 = !DILabel(scope: !16884, name: "tz_hh_mm_ss", file: !15642, line: 1495)
!16893 = !DILocation(line: 1495, column: 23, scope: !16884)
!16894 = !DILocation(line: 1496, column: 17, scope: !16884)
!16895 = !DILocation(line: 1496, column: 17, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1496, column: 17)
!16897 = !DILocation(line: 1500, column: 21, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1500, column: 21)
!16899 = !DILocation(line: 1500, column: 30, scope: !16898)
!16900 = !DILocation(line: 1500, column: 21, scope: !16884)
!16901 = !DILocation(line: 1501, column: 19, scope: !16898)
!16902 = !DILocation(line: 1502, column: 21, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1502, column: 21)
!16904 = !DILocation(line: 1502, column: 30, scope: !16903)
!16905 = !DILocation(line: 1502, column: 21, scope: !16884)
!16906 = !DILocation(line: 1503, column: 19, scope: !16903)
!16907 = !DILocation(line: 1504, column: 17, scope: !16884)
!16908 = !DILocation(line: 1504, column: 17, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16884, file: !15642, line: 1504, column: 17)
!16910 = !DILocation(line: 1507, column: 17, scope: !16884)
!16911 = !DILocation(line: 1512, column: 13, scope: !15860)
!16912 = !DILocation(line: 1513, column: 13, scope: !15860)
!16913 = !DILabel(scope: !15860, name: "bad_format", file: !15642, line: 1518)
!16914 = !DILocation(line: 1518, column: 9, scope: !15860)
!16915 = !DILocalVariable(name: "flen", scope: !16916, file: !15642, line: 1520, type: !27)
!16916 = distinct !DILexicalBlock(scope: !15860, file: !15642, line: 1519, column: 11)
!16917 = !DILocation(line: 1520, column: 17, scope: !16916)
!16918 = !DILocation(line: 1521, column: 23, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16916, file: !15642, line: 1521, column: 13)
!16920 = !DILocation(line: 1521, column: 18, scope: !16919)
!16921 = !DILocation(line: 1521, column: 28, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16919, file: !15642, line: 1521, column: 13)
!16923 = !DILocation(line: 1521, column: 34, scope: !16922)
!16924 = !DILocation(line: 1521, column: 32, scope: !16922)
!16925 = !DILocation(line: 1521, column: 40, scope: !16922)
!16926 = !DILocation(line: 1521, column: 13, scope: !16919)
!16927 = !DILocation(line: 1522, column: 15, scope: !16922)
!16928 = !DILocation(line: 1521, column: 56, scope: !16922)
!16929 = !DILocation(line: 1521, column: 13, scope: !16922)
!16930 = distinct !{!16930, !16926, !16931}
!16931 = !DILocation(line: 1522, column: 15, scope: !16919)
!16932 = !DILocation(line: 1523, column: 13, scope: !16916)
!16933 = !DILocalVariable(name: "_n", scope: !16934, file: !15642, line: 1523, type: !149)
!16934 = distinct !DILexicalBlock(scope: !16916, file: !15642, line: 1523, column: 13)
!16935 = !DILocation(line: 1523, column: 13, scope: !16934)
!16936 = !DILocalVariable(name: "_w", scope: !16934, file: !15642, line: 1523, type: !149)
!16937 = !DILocalVariable(name: "_incr", scope: !16934, file: !15642, line: 1523, type: !149)
!16938 = !DILocation(line: 1523, column: 13, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16934, file: !15642, line: 1523, column: 13)
!16940 = !DILocation(line: 1523, column: 13, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16934, file: !15642, line: 1523, column: 13)
!16942 = !DILocation(line: 1523, column: 13, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16944, file: !15642, line: 1523, column: 13)
!16944 = distinct !DILexicalBlock(scope: !16941, file: !15642, line: 1523, column: 13)
!16945 = !DILocation(line: 1523, column: 13, scope: !16944)
!16946 = !DILocalVariable(name: "_delta", scope: !16947, file: !15642, line: 1523, type: !149)
!16947 = distinct !DILexicalBlock(scope: !16943, file: !15642, line: 1523, column: 13)
!16948 = !DILocation(line: 1523, column: 13, scope: !16947)
!16949 = !DILocation(line: 1523, column: 13, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16947, file: !15642, line: 1523, column: 13)
!16951 = !DILocation(line: 1523, column: 13, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16944, file: !15642, line: 1523, column: 13)
!16953 = !DILocation(line: 1523, column: 13, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16952, file: !15642, line: 1523, column: 13)
!16955 = !DILocation(line: 1525, column: 11, scope: !15860)
!16956 = !DILocation(line: 1527, column: 5, scope: !15729)
!16957 = !DILocation(line: 562, column: 38, scope: !15724)
!16958 = !DILocation(line: 562, column: 45, scope: !15724)
!16959 = !DILocation(line: 562, column: 3, scope: !15724)
!16960 = distinct !{!16960, !15727, !16961}
!16961 = !DILocation(line: 1527, column: 5, scope: !15720)
!16962 = !DILocation(line: 1530, column: 7, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !15663, file: !15642, line: 1530, column: 7)
!16964 = !DILocation(line: 1530, column: 9, scope: !16963)
!16965 = !DILocation(line: 1530, column: 12, scope: !16963)
!16966 = !DILocation(line: 1530, column: 20, scope: !16963)
!16967 = !DILocation(line: 1530, column: 7, scope: !15663)
!16968 = !DILocation(line: 1531, column: 6, scope: !16963)
!16969 = !DILocation(line: 1531, column: 8, scope: !16963)
!16970 = !DILocation(line: 1531, column: 5, scope: !16963)
!16971 = !DILocation(line: 1534, column: 10, scope: !15663)
!16972 = !DILocation(line: 1534, column: 3, scope: !15663)
!16973 = !DILocation(line: 1535, column: 1, scope: !15663)
!16974 = distinct !DISubprogram(name: "memcpy_lowcase", scope: !15642, file: !15642, line: 320, type: !1881, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!16975 = !DILocalVariable(name: "dest", arg: 1, scope: !16974, file: !15642, line: 320, type: !143)
!16976 = !DILocation(line: 320, column: 25, scope: !16974)
!16977 = !DILocalVariable(name: "src", arg: 2, scope: !16974, file: !15642, line: 320, type: !146)
!16978 = !DILocation(line: 320, column: 45, scope: !16974)
!16979 = !DILocalVariable(name: "len", arg: 3, scope: !16974, file: !15642, line: 320, type: !149)
!16980 = !DILocation(line: 320, column: 57, scope: !16974)
!16981 = !DILocation(line: 322, column: 3, scope: !16974)
!16982 = !DILocation(line: 322, column: 13, scope: !16974)
!16983 = !DILocation(line: 322, column: 16, scope: !16974)
!16984 = !DILocation(line: 323, column: 17, scope: !16974)
!16985 = !DILocation(line: 323, column: 5, scope: !16974)
!16986 = !DILocation(line: 323, column: 10, scope: !16974)
!16987 = !DILocation(line: 323, column: 15, scope: !16974)
!16988 = distinct !{!16988, !16981, !16984}
!16989 = !DILocation(line: 324, column: 10, scope: !16974)
!16990 = !DILocation(line: 324, column: 3, scope: !16974)
!16991 = distinct !DISubprogram(name: "memcpy_uppcase", scope: !15642, file: !15642, line: 331, type: !1881, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!16992 = !DILocalVariable(name: "dest", arg: 1, scope: !16991, file: !15642, line: 331, type: !143)
!16993 = !DILocation(line: 331, column: 25, scope: !16991)
!16994 = !DILocalVariable(name: "src", arg: 2, scope: !16991, file: !15642, line: 331, type: !146)
!16995 = !DILocation(line: 331, column: 45, scope: !16991)
!16996 = !DILocalVariable(name: "len", arg: 3, scope: !16991, file: !15642, line: 331, type: !149)
!16997 = !DILocation(line: 331, column: 57, scope: !16991)
!16998 = !DILocation(line: 333, column: 3, scope: !16991)
!16999 = !DILocation(line: 333, column: 13, scope: !16991)
!17000 = !DILocation(line: 333, column: 16, scope: !16991)
!17001 = !DILocation(line: 334, column: 17, scope: !16991)
!17002 = !DILocation(line: 334, column: 5, scope: !16991)
!17003 = !DILocation(line: 334, column: 10, scope: !16991)
!17004 = !DILocation(line: 334, column: 15, scope: !16991)
!17005 = distinct !{!17005, !16998, !17001}
!17006 = !DILocation(line: 335, column: 10, scope: !16991)
!17007 = !DILocation(line: 335, column: 3, scope: !16991)
!17008 = distinct !DISubprogram(name: "iso_week_days", scope: !15642, file: !15642, line: 381, type: !1950, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!17009 = !DILocalVariable(name: "yday", arg: 1, scope: !17008, file: !15642, line: 381, type: !27)
!17010 = !DILocation(line: 381, column: 20, scope: !17008)
!17011 = !DILocalVariable(name: "wday", arg: 2, scope: !17008, file: !15642, line: 381, type: !27)
!17012 = !DILocation(line: 381, column: 30, scope: !17008)
!17013 = !DILocalVariable(name: "big_enough_multiple_of_7", scope: !17008, file: !15642, line: 384, type: !27)
!17014 = !DILocation(line: 384, column: 7, scope: !17008)
!17015 = !DILocation(line: 385, column: 11, scope: !17008)
!17016 = !DILocation(line: 386, column: 14, scope: !17008)
!17017 = !DILocation(line: 386, column: 21, scope: !17008)
!17018 = !DILocation(line: 386, column: 19, scope: !17008)
!17019 = !DILocation(line: 386, column: 26, scope: !17008)
!17020 = !DILocation(line: 386, column: 45, scope: !17008)
!17021 = !DILocation(line: 386, column: 43, scope: !17008)
!17022 = !DILocation(line: 386, column: 71, scope: !17008)
!17023 = !DILocation(line: 386, column: 11, scope: !17008)
!17024 = !DILocation(line: 387, column: 11, scope: !17008)
!17025 = !DILocation(line: 387, column: 28, scope: !17008)
!17026 = !DILocation(line: 385, column: 3, scope: !17008)
!17027 = distinct !DISubprogram(name: "set_program_name", scope: !1434, file: !1434, line: 39, type: !570, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1396, retainedNodes: !152)
!17028 = !DILocalVariable(name: "argv0", arg: 1, scope: !17027, file: !1434, line: 39, type: !146)
!17029 = !DILocation(line: 39, column: 31, scope: !17027)
!17030 = !DILocalVariable(name: "slash", scope: !17027, file: !1434, line: 46, type: !146)
!17031 = !DILocation(line: 46, column: 15, scope: !17027)
!17032 = !DILocalVariable(name: "base", scope: !17027, file: !1434, line: 47, type: !146)
!17033 = !DILocation(line: 47, column: 15, scope: !17027)
!17034 = !DILocation(line: 51, column: 7, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17027, file: !1434, line: 51, column: 7)
!17036 = !DILocation(line: 51, column: 13, scope: !17035)
!17037 = !DILocation(line: 51, column: 7, scope: !17027)
!17038 = !DILocation(line: 55, column: 14, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17035, file: !1434, line: 52, column: 5)
!17040 = !DILocation(line: 54, column: 7, scope: !17039)
!17041 = !DILocation(line: 56, column: 7, scope: !17039)
!17042 = !DILocation(line: 59, column: 20, scope: !17027)
!17043 = !DILocation(line: 59, column: 11, scope: !17027)
!17044 = !DILocation(line: 59, column: 9, scope: !17027)
!17045 = !DILocation(line: 60, column: 11, scope: !17027)
!17046 = !DILocation(line: 60, column: 17, scope: !17027)
!17047 = !DILocation(line: 60, column: 27, scope: !17027)
!17048 = !DILocation(line: 60, column: 33, scope: !17027)
!17049 = !DILocation(line: 60, column: 39, scope: !17027)
!17050 = !DILocation(line: 60, column: 8, scope: !17027)
!17051 = !DILocation(line: 61, column: 7, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17027, file: !1434, line: 61, column: 7)
!17053 = !DILocation(line: 61, column: 14, scope: !17052)
!17054 = !DILocation(line: 61, column: 12, scope: !17052)
!17055 = !DILocation(line: 61, column: 20, scope: !17052)
!17056 = !DILocation(line: 61, column: 25, scope: !17052)
!17057 = !DILocation(line: 61, column: 37, scope: !17052)
!17058 = !DILocation(line: 61, column: 42, scope: !17052)
!17059 = !DILocation(line: 61, column: 28, scope: !17052)
!17060 = !DILocation(line: 61, column: 61, scope: !17052)
!17061 = !DILocation(line: 61, column: 7, scope: !17027)
!17062 = !DILocation(line: 63, column: 15, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17052, file: !1434, line: 62, column: 5)
!17064 = !DILocation(line: 63, column: 13, scope: !17063)
!17065 = !DILocation(line: 64, column: 20, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17063, file: !1434, line: 64, column: 11)
!17067 = !DILocation(line: 64, column: 11, scope: !17066)
!17068 = !DILocation(line: 64, column: 36, scope: !17066)
!17069 = !DILocation(line: 64, column: 11, scope: !17063)
!17070 = !DILocation(line: 66, column: 19, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17066, file: !1434, line: 65, column: 9)
!17072 = !DILocation(line: 66, column: 24, scope: !17071)
!17073 = !DILocation(line: 66, column: 17, scope: !17071)
!17074 = !DILocation(line: 70, column: 52, scope: !17071)
!17075 = !DILocation(line: 70, column: 41, scope: !17071)
!17076 = !DILocation(line: 72, column: 9, scope: !17071)
!17077 = !DILocation(line: 73, column: 5, scope: !17063)
!17078 = !DILocation(line: 84, column: 18, scope: !17027)
!17079 = !DILocation(line: 84, column: 16, scope: !17027)
!17080 = !DILocation(line: 90, column: 38, scope: !17027)
!17081 = !DILocation(line: 90, column: 27, scope: !17027)
!17082 = !DILocation(line: 92, column: 1, scope: !17027)
!17083 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1447, file: !1447, line: 122, type: !1443, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17084 = !DILocalVariable(name: "o", arg: 1, scope: !17083, file: !1447, line: 122, type: !1445)
!17085 = !DILocation(line: 122, column: 48, scope: !17083)
!17086 = !DILocalVariable(name: "e", scope: !17083, file: !1447, line: 124, type: !27)
!17087 = !DILocation(line: 124, column: 7, scope: !17083)
!17088 = !DILocation(line: 124, column: 11, scope: !17083)
!17089 = !DILocalVariable(name: "p", scope: !17083, file: !1447, line: 125, type: !1445)
!17090 = !DILocation(line: 125, column: 27, scope: !17083)
!17091 = !DILocation(line: 125, column: 40, scope: !17083)
!17092 = !DILocation(line: 125, column: 44, scope: !17083)
!17093 = !DILocation(line: 125, column: 31, scope: !17083)
!17094 = !DILocation(line: 127, column: 11, scope: !17083)
!17095 = !DILocation(line: 127, column: 3, scope: !17083)
!17096 = !DILocation(line: 127, column: 9, scope: !17083)
!17097 = !DILocation(line: 128, column: 10, scope: !17083)
!17098 = !DILocation(line: 128, column: 3, scope: !17083)
!17099 = distinct !DISubprogram(name: "get_quoting_style", scope: !1447, file: !1447, line: 133, type: !1455, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17100 = !DILocalVariable(name: "o", arg: 1, scope: !17099, file: !1447, line: 133, type: !1457)
!17101 = !DILocation(line: 133, column: 50, scope: !17099)
!17102 = !DILocation(line: 135, column: 11, scope: !17099)
!17103 = !DILocation(line: 135, column: 15, scope: !17099)
!17104 = !DILocation(line: 135, column: 46, scope: !17099)
!17105 = !{!17106, !2438, i64 0}
!17106 = !{!"quoting_options", !2438, i64 0, !2437, i64 4, !2438, i64 8, !2443, i64 40, !2443, i64 48}
!17107 = !DILocation(line: 135, column: 3, scope: !17099)
!17108 = distinct !DISubprogram(name: "set_quoting_style", scope: !1447, file: !1447, line: 141, type: !1459, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17109 = !DILocalVariable(name: "o", arg: 1, scope: !17108, file: !1447, line: 141, type: !1445)
!17110 = !DILocation(line: 141, column: 44, scope: !17108)
!17111 = !DILocalVariable(name: "s", arg: 2, scope: !17108, file: !1447, line: 141, type: !95)
!17112 = !DILocation(line: 141, column: 66, scope: !17108)
!17113 = !DILocation(line: 143, column: 47, scope: !17108)
!17114 = !DILocation(line: 143, column: 4, scope: !17108)
!17115 = !DILocation(line: 143, column: 8, scope: !17108)
!17116 = !DILocation(line: 143, column: 39, scope: !17108)
!17117 = !DILocation(line: 143, column: 45, scope: !17108)
!17118 = !DILocation(line: 144, column: 1, scope: !17108)
!17119 = distinct !DISubprogram(name: "set_char_quoting", scope: !1447, file: !1447, line: 152, type: !1461, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17120 = !DILocalVariable(name: "o", arg: 1, scope: !17119, file: !1447, line: 152, type: !1445)
!17121 = !DILocation(line: 152, column: 43, scope: !17119)
!17122 = !DILocalVariable(name: "c", arg: 2, scope: !17119, file: !1447, line: 152, type: !144)
!17123 = !DILocation(line: 152, column: 51, scope: !17119)
!17124 = !DILocalVariable(name: "i", arg: 3, scope: !17119, file: !1447, line: 152, type: !27)
!17125 = !DILocation(line: 152, column: 58, scope: !17119)
!17126 = !DILocalVariable(name: "uc", scope: !17119, file: !1447, line: 154, type: !591)
!17127 = !DILocation(line: 154, column: 17, scope: !17119)
!17128 = !DILocation(line: 154, column: 22, scope: !17119)
!17129 = !DILocalVariable(name: "p", scope: !17119, file: !1447, line: 155, type: !1463)
!17130 = !DILocation(line: 155, column: 17, scope: !17119)
!17131 = !DILocation(line: 156, column: 6, scope: !17119)
!17132 = !DILocation(line: 156, column: 10, scope: !17119)
!17133 = !DILocation(line: 156, column: 41, scope: !17119)
!17134 = !DILocation(line: 156, column: 5, scope: !17119)
!17135 = !DILocation(line: 156, column: 59, scope: !17119)
!17136 = !DILocation(line: 156, column: 62, scope: !17119)
!17137 = !DILocation(line: 156, column: 57, scope: !17119)
!17138 = !DILocalVariable(name: "shift", scope: !17119, file: !1447, line: 157, type: !27)
!17139 = !DILocation(line: 157, column: 7, scope: !17119)
!17140 = !DILocation(line: 157, column: 15, scope: !17119)
!17141 = !DILocation(line: 157, column: 18, scope: !17119)
!17142 = !DILocalVariable(name: "r", scope: !17119, file: !1447, line: 158, type: !27)
!17143 = !DILocation(line: 158, column: 7, scope: !17119)
!17144 = !DILocation(line: 158, column: 13, scope: !17119)
!17145 = !DILocation(line: 158, column: 12, scope: !17119)
!17146 = !DILocation(line: 158, column: 18, scope: !17119)
!17147 = !DILocation(line: 158, column: 15, scope: !17119)
!17148 = !DILocation(line: 158, column: 25, scope: !17119)
!17149 = !DILocation(line: 159, column: 11, scope: !17119)
!17150 = !DILocation(line: 159, column: 13, scope: !17119)
!17151 = !DILocation(line: 159, column: 20, scope: !17119)
!17152 = !DILocation(line: 159, column: 18, scope: !17119)
!17153 = !DILocation(line: 159, column: 26, scope: !17119)
!17154 = !DILocation(line: 159, column: 23, scope: !17119)
!17155 = !DILocation(line: 159, column: 4, scope: !17119)
!17156 = !DILocation(line: 159, column: 6, scope: !17119)
!17157 = !DILocation(line: 160, column: 10, scope: !17119)
!17158 = !DILocation(line: 160, column: 3, scope: !17119)
!17159 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1447, file: !1447, line: 168, type: !1464, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17160 = !DILocalVariable(name: "o", arg: 1, scope: !17159, file: !1447, line: 168, type: !1445)
!17161 = !DILocation(line: 168, column: 44, scope: !17159)
!17162 = !DILocalVariable(name: "i", arg: 2, scope: !17159, file: !1447, line: 168, type: !27)
!17163 = !DILocation(line: 168, column: 51, scope: !17159)
!17164 = !DILocalVariable(name: "r", scope: !17159, file: !1447, line: 170, type: !27)
!17165 = !DILocation(line: 170, column: 7, scope: !17159)
!17166 = !DILocation(line: 171, column: 8, scope: !17167)
!17167 = distinct !DILexicalBlock(scope: !17159, file: !1447, line: 171, column: 7)
!17168 = !DILocation(line: 171, column: 7, scope: !17159)
!17169 = !DILocation(line: 172, column: 7, scope: !17167)
!17170 = !DILocation(line: 172, column: 5, scope: !17167)
!17171 = !DILocation(line: 173, column: 7, scope: !17159)
!17172 = !DILocation(line: 173, column: 10, scope: !17159)
!17173 = !{!17106, !2437, i64 4}
!17174 = !DILocation(line: 173, column: 5, scope: !17159)
!17175 = !DILocation(line: 174, column: 14, scope: !17159)
!17176 = !DILocation(line: 174, column: 3, scope: !17159)
!17177 = !DILocation(line: 174, column: 6, scope: !17159)
!17178 = !DILocation(line: 174, column: 12, scope: !17159)
!17179 = !DILocation(line: 175, column: 10, scope: !17159)
!17180 = !DILocation(line: 175, column: 3, scope: !17159)
!17181 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1447, file: !1447, line: 179, type: !1466, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17182 = !DILocalVariable(name: "o", arg: 1, scope: !17181, file: !1447, line: 179, type: !1445)
!17183 = !DILocation(line: 179, column: 45, scope: !17181)
!17184 = !DILocalVariable(name: "left_quote", arg: 2, scope: !17181, file: !1447, line: 180, type: !146)
!17185 = !DILocation(line: 180, column: 33, scope: !17181)
!17186 = !DILocalVariable(name: "right_quote", arg: 3, scope: !17181, file: !1447, line: 180, type: !146)
!17187 = !DILocation(line: 180, column: 57, scope: !17181)
!17188 = !DILocation(line: 182, column: 8, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17181, file: !1447, line: 182, column: 7)
!17190 = !DILocation(line: 182, column: 7, scope: !17181)
!17191 = !DILocation(line: 183, column: 7, scope: !17189)
!17192 = !DILocation(line: 183, column: 5, scope: !17189)
!17193 = !DILocation(line: 184, column: 3, scope: !17181)
!17194 = !DILocation(line: 184, column: 6, scope: !17181)
!17195 = !DILocation(line: 184, column: 12, scope: !17181)
!17196 = !DILocation(line: 185, column: 8, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17181, file: !1447, line: 185, column: 7)
!17198 = !DILocation(line: 185, column: 19, scope: !17197)
!17199 = !DILocation(line: 185, column: 23, scope: !17197)
!17200 = !DILocation(line: 185, column: 7, scope: !17181)
!17201 = !DILocation(line: 186, column: 5, scope: !17197)
!17202 = !DILocation(line: 187, column: 19, scope: !17181)
!17203 = !DILocation(line: 187, column: 3, scope: !17181)
!17204 = !DILocation(line: 187, column: 6, scope: !17181)
!17205 = !DILocation(line: 187, column: 17, scope: !17181)
!17206 = !{!17106, !2443, i64 40}
!17207 = !DILocation(line: 188, column: 20, scope: !17181)
!17208 = !DILocation(line: 188, column: 3, scope: !17181)
!17209 = !DILocation(line: 188, column: 6, scope: !17181)
!17210 = !DILocation(line: 188, column: 18, scope: !17181)
!17211 = !{!17106, !2443, i64 48}
!17212 = !DILocation(line: 189, column: 1, scope: !17181)
!17213 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1447, file: !1447, line: 784, type: !1468, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17214 = !DILocalVariable(name: "buffer", arg: 1, scope: !17213, file: !1447, line: 784, type: !143)
!17215 = !DILocation(line: 784, column: 24, scope: !17213)
!17216 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17213, file: !1447, line: 784, type: !149)
!17217 = !DILocation(line: 784, column: 39, scope: !17213)
!17218 = !DILocalVariable(name: "arg", arg: 3, scope: !17213, file: !1447, line: 785, type: !146)
!17219 = !DILocation(line: 785, column: 30, scope: !17213)
!17220 = !DILocalVariable(name: "argsize", arg: 4, scope: !17213, file: !1447, line: 785, type: !149)
!17221 = !DILocation(line: 785, column: 42, scope: !17213)
!17222 = !DILocalVariable(name: "o", arg: 5, scope: !17213, file: !1447, line: 786, type: !1457)
!17223 = !DILocation(line: 786, column: 48, scope: !17213)
!17224 = !DILocalVariable(name: "p", scope: !17213, file: !1447, line: 788, type: !1457)
!17225 = !DILocation(line: 788, column: 33, scope: !17213)
!17226 = !DILocation(line: 788, column: 37, scope: !17213)
!17227 = !DILocation(line: 788, column: 41, scope: !17213)
!17228 = !DILocalVariable(name: "e", scope: !17213, file: !1447, line: 789, type: !27)
!17229 = !DILocation(line: 789, column: 7, scope: !17213)
!17230 = !DILocation(line: 789, column: 11, scope: !17213)
!17231 = !DILocalVariable(name: "r", scope: !17213, file: !1447, line: 790, type: !149)
!17232 = !DILocation(line: 790, column: 10, scope: !17213)
!17233 = !DILocation(line: 790, column: 40, scope: !17213)
!17234 = !DILocation(line: 790, column: 48, scope: !17213)
!17235 = !DILocation(line: 790, column: 60, scope: !17213)
!17236 = !DILocation(line: 790, column: 65, scope: !17213)
!17237 = !DILocation(line: 791, column: 40, scope: !17213)
!17238 = !DILocation(line: 791, column: 43, scope: !17213)
!17239 = !DILocation(line: 791, column: 50, scope: !17213)
!17240 = !DILocation(line: 791, column: 53, scope: !17213)
!17241 = !DILocation(line: 791, column: 60, scope: !17213)
!17242 = !DILocation(line: 791, column: 63, scope: !17213)
!17243 = !DILocation(line: 792, column: 40, scope: !17213)
!17244 = !DILocation(line: 792, column: 43, scope: !17213)
!17245 = !DILocation(line: 792, column: 55, scope: !17213)
!17246 = !DILocation(line: 792, column: 58, scope: !17213)
!17247 = !DILocation(line: 790, column: 14, scope: !17213)
!17248 = !DILocation(line: 793, column: 11, scope: !17213)
!17249 = !DILocation(line: 793, column: 3, scope: !17213)
!17250 = !DILocation(line: 793, column: 9, scope: !17213)
!17251 = !DILocation(line: 794, column: 10, scope: !17213)
!17252 = !DILocation(line: 794, column: 3, scope: !17213)
!17253 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1447, file: !1447, line: 256, type: !1511, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17254 = !DILocalVariable(name: "buffer", arg: 1, scope: !17253, file: !1447, line: 256, type: !143)
!17255 = !DILocation(line: 256, column: 33, scope: !17253)
!17256 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17253, file: !1447, line: 256, type: !149)
!17257 = !DILocation(line: 256, column: 48, scope: !17253)
!17258 = !DILocalVariable(name: "arg", arg: 3, scope: !17253, file: !1447, line: 257, type: !146)
!17259 = !DILocation(line: 257, column: 39, scope: !17253)
!17260 = !DILocalVariable(name: "argsize", arg: 4, scope: !17253, file: !1447, line: 257, type: !149)
!17261 = !DILocation(line: 257, column: 51, scope: !17253)
!17262 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !17253, file: !1447, line: 258, type: !95)
!17263 = !DILocation(line: 258, column: 46, scope: !17253)
!17264 = !DILocalVariable(name: "flags", arg: 6, scope: !17253, file: !1447, line: 258, type: !27)
!17265 = !DILocation(line: 258, column: 65, scope: !17253)
!17266 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !17253, file: !1447, line: 259, type: !1513)
!17267 = !DILocation(line: 259, column: 47, scope: !17253)
!17268 = !DILocalVariable(name: "left_quote", arg: 8, scope: !17253, file: !1447, line: 260, type: !146)
!17269 = !DILocation(line: 260, column: 39, scope: !17253)
!17270 = !DILocalVariable(name: "right_quote", arg: 9, scope: !17253, file: !1447, line: 261, type: !146)
!17271 = !DILocation(line: 261, column: 39, scope: !17253)
!17272 = !DILocalVariable(name: "i", scope: !17253, file: !1447, line: 263, type: !149)
!17273 = !DILocation(line: 263, column: 10, scope: !17253)
!17274 = !DILocalVariable(name: "len", scope: !17253, file: !1447, line: 264, type: !149)
!17275 = !DILocation(line: 264, column: 10, scope: !17253)
!17276 = !DILocalVariable(name: "orig_buffersize", scope: !17253, file: !1447, line: 265, type: !149)
!17277 = !DILocation(line: 265, column: 10, scope: !17253)
!17278 = !DILocalVariable(name: "quote_string", scope: !17253, file: !1447, line: 266, type: !146)
!17279 = !DILocation(line: 266, column: 15, scope: !17253)
!17280 = !DILocalVariable(name: "quote_string_len", scope: !17253, file: !1447, line: 267, type: !149)
!17281 = !DILocation(line: 267, column: 10, scope: !17253)
!17282 = !DILocalVariable(name: "backslash_escapes", scope: !17253, file: !1447, line: 268, type: !141)
!17283 = !DILocation(line: 268, column: 8, scope: !17253)
!17284 = !DILocalVariable(name: "unibyte_locale", scope: !17253, file: !1447, line: 269, type: !141)
!17285 = !DILocation(line: 269, column: 8, scope: !17253)
!17286 = !DILocation(line: 269, column: 25, scope: !17253)
!17287 = !DILocation(line: 269, column: 36, scope: !17253)
!17288 = !DILocalVariable(name: "elide_outer_quotes", scope: !17253, file: !1447, line: 270, type: !141)
!17289 = !DILocation(line: 270, column: 8, scope: !17253)
!17290 = !DILocation(line: 270, column: 30, scope: !17253)
!17291 = !DILocation(line: 270, column: 36, scope: !17253)
!17292 = !DILocation(line: 270, column: 61, scope: !17253)
!17293 = !DILocalVariable(name: "pending_shell_escape_end", scope: !17253, file: !1447, line: 271, type: !141)
!17294 = !DILocation(line: 271, column: 8, scope: !17253)
!17295 = !DILocalVariable(name: "encountered_single_quote", scope: !17253, file: !1447, line: 272, type: !141)
!17296 = !DILocation(line: 272, column: 8, scope: !17253)
!17297 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !17253, file: !1447, line: 273, type: !141)
!17298 = !DILocation(line: 273, column: 8, scope: !17253)
!17299 = !DILocation(line: 273, column: 3, scope: !17253)
!17300 = !DILabel(scope: !17253, name: "process_input", file: !1447, line: 314)
!17301 = !DILocation(line: 314, column: 2, scope: !17253)
!17302 = !DILocation(line: 316, column: 11, scope: !17253)
!17303 = !DILocation(line: 316, column: 3, scope: !17253)
!17304 = !DILocation(line: 319, column: 21, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 317, column: 5)
!17306 = !DILocation(line: 320, column: 26, scope: !17305)
!17307 = !DILocation(line: 321, column: 7, scope: !17305)
!17308 = !DILocation(line: 323, column: 12, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17305, file: !1447, line: 323, column: 11)
!17310 = !DILocation(line: 323, column: 11, scope: !17305)
!17311 = !DILocation(line: 324, column: 9, scope: !17309)
!17312 = !DILocation(line: 324, column: 9, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17314, file: !1447, line: 324, column: 9)
!17314 = distinct !DILexicalBlock(scope: !17309, file: !1447, line: 324, column: 9)
!17315 = !DILocation(line: 324, column: 9, scope: !17314)
!17316 = !DILocation(line: 325, column: 25, scope: !17305)
!17317 = !DILocation(line: 326, column: 20, scope: !17305)
!17318 = !DILocation(line: 327, column: 24, scope: !17305)
!17319 = !DILocation(line: 328, column: 7, scope: !17305)
!17320 = !DILocation(line: 331, column: 25, scope: !17305)
!17321 = !DILocation(line: 332, column: 26, scope: !17305)
!17322 = !DILocation(line: 333, column: 7, scope: !17305)
!17323 = !DILocation(line: 339, column: 13, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !1447, line: 339, column: 13)
!17325 = distinct !DILexicalBlock(scope: !17305, file: !1447, line: 338, column: 7)
!17326 = !DILocation(line: 339, column: 27, scope: !17324)
!17327 = !DILocation(line: 339, column: 13, scope: !17325)
!17328 = !DILocation(line: 362, column: 50, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17324, file: !1447, line: 340, column: 11)
!17330 = !DILocation(line: 362, column: 26, scope: !17329)
!17331 = !DILocation(line: 362, column: 24, scope: !17329)
!17332 = !DILocation(line: 363, column: 51, scope: !17329)
!17333 = !DILocation(line: 363, column: 27, scope: !17329)
!17334 = !DILocation(line: 363, column: 25, scope: !17329)
!17335 = !DILocation(line: 364, column: 11, scope: !17329)
!17336 = !DILocation(line: 365, column: 14, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17325, file: !1447, line: 365, column: 13)
!17338 = !DILocation(line: 365, column: 13, scope: !17325)
!17339 = !DILocation(line: 366, column: 31, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17337, file: !1447, line: 366, column: 11)
!17341 = !DILocation(line: 366, column: 29, scope: !17340)
!17342 = !DILocation(line: 366, column: 16, scope: !17340)
!17343 = !DILocation(line: 366, column: 44, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17340, file: !1447, line: 366, column: 11)
!17345 = !DILocation(line: 366, column: 43, scope: !17344)
!17346 = !DILocation(line: 366, column: 11, scope: !17340)
!17347 = !DILocation(line: 367, column: 13, scope: !17344)
!17348 = !DILocation(line: 367, column: 13, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17350, file: !1447, line: 367, column: 13)
!17350 = distinct !DILexicalBlock(scope: !17344, file: !1447, line: 367, column: 13)
!17351 = !DILocation(line: 367, column: 13, scope: !17350)
!17352 = !DILocation(line: 366, column: 70, scope: !17344)
!17353 = !DILocation(line: 366, column: 11, scope: !17344)
!17354 = distinct !{!17354, !17346, !17355}
!17355 = !DILocation(line: 367, column: 13, scope: !17340)
!17356 = !DILocation(line: 368, column: 27, scope: !17325)
!17357 = !DILocation(line: 369, column: 24, scope: !17325)
!17358 = !DILocation(line: 369, column: 22, scope: !17325)
!17359 = !DILocation(line: 370, column: 36, scope: !17325)
!17360 = !DILocation(line: 370, column: 28, scope: !17325)
!17361 = !DILocation(line: 370, column: 26, scope: !17325)
!17362 = !DILocation(line: 372, column: 7, scope: !17305)
!17363 = !DILocation(line: 375, column: 25, scope: !17305)
!17364 = !DILocation(line: 376, column: 7, scope: !17305)
!17365 = !DILocation(line: 378, column: 26, scope: !17305)
!17366 = !DILocation(line: 379, column: 7, scope: !17305)
!17367 = !DILocation(line: 381, column: 12, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17305, file: !1447, line: 381, column: 11)
!17369 = !DILocation(line: 381, column: 11, scope: !17305)
!17370 = !DILocation(line: 382, column: 27, scope: !17368)
!17371 = !DILocation(line: 382, column: 9, scope: !17368)
!17372 = !DILocation(line: 383, column: 7, scope: !17305)
!17373 = !DILocation(line: 385, column: 21, scope: !17305)
!17374 = !DILocation(line: 386, column: 12, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17305, file: !1447, line: 386, column: 11)
!17376 = !DILocation(line: 386, column: 11, scope: !17305)
!17377 = !DILocation(line: 387, column: 9, scope: !17375)
!17378 = !DILocation(line: 387, column: 9, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17380, file: !1447, line: 387, column: 9)
!17380 = distinct !DILexicalBlock(scope: !17375, file: !1447, line: 387, column: 9)
!17381 = !DILocation(line: 387, column: 9, scope: !17380)
!17382 = !DILocation(line: 388, column: 20, scope: !17305)
!17383 = !DILocation(line: 389, column: 24, scope: !17305)
!17384 = !DILocation(line: 390, column: 7, scope: !17305)
!17385 = !DILocation(line: 393, column: 26, scope: !17305)
!17386 = !DILocation(line: 394, column: 7, scope: !17305)
!17387 = !DILocation(line: 397, column: 7, scope: !17305)
!17388 = !DILocation(line: 400, column: 10, scope: !17389)
!17389 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 400, column: 3)
!17390 = !DILocation(line: 400, column: 8, scope: !17389)
!17391 = !DILocation(line: 400, column: 19, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17389, file: !1447, line: 400, column: 3)
!17393 = !DILocation(line: 400, column: 27, scope: !17392)
!17394 = !DILocation(line: 400, column: 41, scope: !17392)
!17395 = !DILocation(line: 400, column: 45, scope: !17392)
!17396 = !DILocation(line: 400, column: 48, scope: !17392)
!17397 = !DILocation(line: 400, column: 58, scope: !17392)
!17398 = !DILocation(line: 400, column: 63, scope: !17392)
!17399 = !DILocation(line: 400, column: 60, scope: !17392)
!17400 = !DILocation(line: 400, column: 16, scope: !17392)
!17401 = !DILocation(line: 400, column: 3, scope: !17389)
!17402 = !DILocalVariable(name: "c", scope: !17403, file: !1447, line: 402, type: !591)
!17403 = distinct !DILexicalBlock(scope: !17392, file: !1447, line: 401, column: 5)
!17404 = !DILocation(line: 402, column: 21, scope: !17403)
!17405 = !DILocalVariable(name: "esc", scope: !17403, file: !1447, line: 403, type: !591)
!17406 = !DILocation(line: 403, column: 21, scope: !17403)
!17407 = !DILocalVariable(name: "is_right_quote", scope: !17403, file: !1447, line: 404, type: !141)
!17408 = !DILocation(line: 404, column: 12, scope: !17403)
!17409 = !DILocalVariable(name: "escaping", scope: !17403, file: !1447, line: 405, type: !141)
!17410 = !DILocation(line: 405, column: 12, scope: !17403)
!17411 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !17403, file: !1447, line: 406, type: !141)
!17412 = !DILocation(line: 406, column: 12, scope: !17403)
!17413 = !DILocation(line: 408, column: 11, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 408, column: 11)
!17415 = !DILocation(line: 409, column: 11, scope: !17414)
!17416 = !DILocation(line: 409, column: 14, scope: !17414)
!17417 = !DILocation(line: 409, column: 28, scope: !17414)
!17418 = !DILocation(line: 410, column: 11, scope: !17414)
!17419 = !DILocation(line: 410, column: 14, scope: !17414)
!17420 = !DILocation(line: 411, column: 11, scope: !17414)
!17421 = !DILocation(line: 411, column: 15, scope: !17414)
!17422 = !DILocation(line: 411, column: 19, scope: !17414)
!17423 = !DILocation(line: 411, column: 17, scope: !17414)
!17424 = !DILocation(line: 412, column: 19, scope: !17414)
!17425 = !DILocation(line: 412, column: 27, scope: !17414)
!17426 = !DILocation(line: 412, column: 39, scope: !17414)
!17427 = !DILocation(line: 412, column: 46, scope: !17414)
!17428 = !DILocation(line: 412, column: 44, scope: !17414)
!17429 = !DILocation(line: 416, column: 40, scope: !17414)
!17430 = !DILocation(line: 416, column: 32, scope: !17414)
!17431 = !DILocation(line: 416, column: 30, scope: !17414)
!17432 = !DILocation(line: 416, column: 48, scope: !17414)
!17433 = !DILocation(line: 412, column: 15, scope: !17414)
!17434 = !DILocation(line: 417, column: 11, scope: !17414)
!17435 = !DILocation(line: 417, column: 22, scope: !17414)
!17436 = !DILocation(line: 417, column: 28, scope: !17414)
!17437 = !DILocation(line: 417, column: 26, scope: !17414)
!17438 = !DILocation(line: 417, column: 31, scope: !17414)
!17439 = !DILocation(line: 417, column: 45, scope: !17414)
!17440 = !DILocation(line: 417, column: 14, scope: !17414)
!17441 = !DILocation(line: 417, column: 63, scope: !17414)
!17442 = !DILocation(line: 408, column: 11, scope: !17403)
!17443 = !DILocation(line: 419, column: 15, scope: !17444)
!17444 = distinct !DILexicalBlock(scope: !17445, file: !1447, line: 419, column: 15)
!17445 = distinct !DILexicalBlock(scope: !17414, file: !1447, line: 418, column: 9)
!17446 = !DILocation(line: 419, column: 15, scope: !17445)
!17447 = !DILocation(line: 420, column: 13, scope: !17444)
!17448 = !DILocation(line: 421, column: 26, scope: !17445)
!17449 = !DILocation(line: 422, column: 9, scope: !17445)
!17450 = !DILocation(line: 424, column: 11, scope: !17403)
!17451 = !DILocation(line: 424, column: 15, scope: !17403)
!17452 = !DILocation(line: 424, column: 9, scope: !17403)
!17453 = !DILocation(line: 425, column: 15, scope: !17403)
!17454 = !DILocation(line: 425, column: 7, scope: !17403)
!17455 = !DILocation(line: 428, column: 15, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 428, column: 15)
!17457 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 426, column: 9)
!17458 = !DILocation(line: 428, column: 15, scope: !17457)
!17459 = !DILocation(line: 430, column: 15, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17456, file: !1447, line: 429, column: 13)
!17461 = !DILocation(line: 430, column: 15, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17463, file: !1447, line: 430, column: 15)
!17463 = distinct !DILexicalBlock(scope: !17460, file: !1447, line: 430, column: 15)
!17464 = !DILocation(line: 430, column: 15, scope: !17463)
!17465 = !DILocation(line: 430, column: 15, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17463, file: !1447, line: 430, column: 15)
!17467 = !DILocation(line: 430, column: 15, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17466, file: !1447, line: 430, column: 15)
!17469 = !DILocation(line: 430, column: 15, scope: !17470)
!17470 = distinct !DILexicalBlock(scope: !17471, file: !1447, line: 430, column: 15)
!17471 = distinct !DILexicalBlock(scope: !17468, file: !1447, line: 430, column: 15)
!17472 = !DILocation(line: 430, column: 15, scope: !17471)
!17473 = !DILocation(line: 430, column: 15, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17475, file: !1447, line: 430, column: 15)
!17475 = distinct !DILexicalBlock(scope: !17468, file: !1447, line: 430, column: 15)
!17476 = !DILocation(line: 430, column: 15, scope: !17475)
!17477 = !DILocation(line: 430, column: 15, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !1447, line: 430, column: 15)
!17479 = distinct !DILexicalBlock(scope: !17468, file: !1447, line: 430, column: 15)
!17480 = !DILocation(line: 430, column: 15, scope: !17479)
!17481 = !DILocation(line: 430, column: 15, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17483, file: !1447, line: 430, column: 15)
!17483 = distinct !DILexicalBlock(scope: !17463, file: !1447, line: 430, column: 15)
!17484 = !DILocation(line: 430, column: 15, scope: !17483)
!17485 = !DILocation(line: 437, column: 19, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17460, file: !1447, line: 437, column: 19)
!17487 = !DILocation(line: 437, column: 33, scope: !17486)
!17488 = !DILocation(line: 438, column: 19, scope: !17486)
!17489 = !DILocation(line: 438, column: 22, scope: !17486)
!17490 = !DILocation(line: 438, column: 24, scope: !17486)
!17491 = !DILocation(line: 438, column: 30, scope: !17486)
!17492 = !DILocation(line: 438, column: 28, scope: !17486)
!17493 = !DILocation(line: 438, column: 38, scope: !17486)
!17494 = !DILocation(line: 438, column: 48, scope: !17486)
!17495 = !DILocation(line: 438, column: 52, scope: !17486)
!17496 = !DILocation(line: 438, column: 54, scope: !17486)
!17497 = !DILocation(line: 438, column: 45, scope: !17486)
!17498 = !DILocation(line: 438, column: 59, scope: !17486)
!17499 = !DILocation(line: 438, column: 62, scope: !17486)
!17500 = !DILocation(line: 438, column: 66, scope: !17486)
!17501 = !DILocation(line: 438, column: 68, scope: !17486)
!17502 = !DILocation(line: 438, column: 73, scope: !17486)
!17503 = !DILocation(line: 437, column: 19, scope: !17460)
!17504 = !DILocation(line: 440, column: 19, scope: !17505)
!17505 = distinct !DILexicalBlock(scope: !17486, file: !1447, line: 439, column: 17)
!17506 = !DILocation(line: 440, column: 19, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17508, file: !1447, line: 440, column: 19)
!17508 = distinct !DILexicalBlock(scope: !17505, file: !1447, line: 440, column: 19)
!17509 = !DILocation(line: 440, column: 19, scope: !17508)
!17510 = !DILocation(line: 441, column: 19, scope: !17505)
!17511 = !DILocation(line: 441, column: 19, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17513, file: !1447, line: 441, column: 19)
!17513 = distinct !DILexicalBlock(scope: !17505, file: !1447, line: 441, column: 19)
!17514 = !DILocation(line: 441, column: 19, scope: !17513)
!17515 = !DILocation(line: 442, column: 17, scope: !17505)
!17516 = !DILocation(line: 443, column: 17, scope: !17460)
!17517 = !DILocation(line: 448, column: 13, scope: !17460)
!17518 = !DILocation(line: 449, column: 20, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17456, file: !1447, line: 449, column: 20)
!17520 = !DILocation(line: 449, column: 26, scope: !17519)
!17521 = !DILocation(line: 449, column: 20, scope: !17456)
!17522 = !DILocation(line: 450, column: 13, scope: !17519)
!17523 = !DILocation(line: 451, column: 11, scope: !17457)
!17524 = !DILocation(line: 454, column: 19, scope: !17457)
!17525 = !DILocation(line: 454, column: 11, scope: !17457)
!17526 = !DILocation(line: 457, column: 19, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17528, file: !1447, line: 457, column: 19)
!17528 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 455, column: 13)
!17529 = !DILocation(line: 457, column: 19, scope: !17528)
!17530 = !DILocation(line: 458, column: 17, scope: !17527)
!17531 = !DILocation(line: 459, column: 15, scope: !17528)
!17532 = !DILocation(line: 462, column: 20, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17528, file: !1447, line: 462, column: 19)
!17534 = !DILocation(line: 462, column: 26, scope: !17533)
!17535 = !DILocation(line: 463, column: 19, scope: !17533)
!17536 = !DILocation(line: 463, column: 22, scope: !17533)
!17537 = !DILocation(line: 463, column: 24, scope: !17533)
!17538 = !DILocation(line: 463, column: 30, scope: !17533)
!17539 = !DILocation(line: 463, column: 28, scope: !17533)
!17540 = !DILocation(line: 463, column: 38, scope: !17533)
!17541 = !DILocation(line: 463, column: 41, scope: !17533)
!17542 = !DILocation(line: 463, column: 45, scope: !17533)
!17543 = !DILocation(line: 463, column: 47, scope: !17533)
!17544 = !DILocation(line: 463, column: 52, scope: !17533)
!17545 = !DILocation(line: 462, column: 19, scope: !17528)
!17546 = !DILocation(line: 464, column: 25, scope: !17533)
!17547 = !DILocation(line: 464, column: 29, scope: !17533)
!17548 = !DILocation(line: 464, column: 31, scope: !17533)
!17549 = !DILocation(line: 464, column: 17, scope: !17533)
!17550 = !DILocation(line: 471, column: 25, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 471, column: 25)
!17552 = distinct !DILexicalBlock(scope: !17533, file: !1447, line: 465, column: 19)
!17553 = !DILocation(line: 471, column: 25, scope: !17552)
!17554 = !DILocation(line: 472, column: 23, scope: !17551)
!17555 = !DILocation(line: 473, column: 25, scope: !17552)
!17556 = !DILocation(line: 473, column: 29, scope: !17552)
!17557 = !DILocation(line: 473, column: 31, scope: !17552)
!17558 = !DILocation(line: 473, column: 23, scope: !17552)
!17559 = !DILocation(line: 474, column: 23, scope: !17552)
!17560 = !DILocation(line: 475, column: 21, scope: !17552)
!17561 = !DILocation(line: 475, column: 21, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17563, file: !1447, line: 475, column: 21)
!17563 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 475, column: 21)
!17564 = !DILocation(line: 475, column: 21, scope: !17563)
!17565 = !DILocation(line: 476, column: 21, scope: !17552)
!17566 = !DILocation(line: 476, column: 21, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17568, file: !1447, line: 476, column: 21)
!17568 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 476, column: 21)
!17569 = !DILocation(line: 476, column: 21, scope: !17568)
!17570 = !DILocation(line: 477, column: 21, scope: !17552)
!17571 = !DILocation(line: 477, column: 21, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17573, file: !1447, line: 477, column: 21)
!17573 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 477, column: 21)
!17574 = !DILocation(line: 477, column: 21, scope: !17573)
!17575 = !DILocation(line: 478, column: 21, scope: !17552)
!17576 = !DILocation(line: 478, column: 21, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !1447, line: 478, column: 21)
!17578 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 478, column: 21)
!17579 = !DILocation(line: 478, column: 21, scope: !17578)
!17580 = !DILocation(line: 479, column: 21, scope: !17552)
!17581 = !DILocation(line: 482, column: 21, scope: !17552)
!17582 = !DILocation(line: 483, column: 19, scope: !17552)
!17583 = !DILocation(line: 484, column: 15, scope: !17528)
!17584 = !DILocation(line: 487, column: 15, scope: !17528)
!17585 = !DILocation(line: 489, column: 11, scope: !17457)
!17586 = !DILocation(line: 491, column: 24, scope: !17457)
!17587 = !DILocation(line: 491, column: 31, scope: !17457)
!17588 = !DILocation(line: 492, column: 24, scope: !17457)
!17589 = !DILocation(line: 492, column: 31, scope: !17457)
!17590 = !DILocation(line: 493, column: 24, scope: !17457)
!17591 = !DILocation(line: 493, column: 31, scope: !17457)
!17592 = !DILocation(line: 494, column: 24, scope: !17457)
!17593 = !DILocation(line: 494, column: 31, scope: !17457)
!17594 = !DILocation(line: 495, column: 24, scope: !17457)
!17595 = !DILocation(line: 495, column: 31, scope: !17457)
!17596 = !DILocation(line: 496, column: 24, scope: !17457)
!17597 = !DILocation(line: 496, column: 31, scope: !17457)
!17598 = !DILocation(line: 497, column: 24, scope: !17457)
!17599 = !DILocation(line: 497, column: 31, scope: !17457)
!17600 = !DILocation(line: 498, column: 26, scope: !17457)
!17601 = !DILocation(line: 498, column: 24, scope: !17457)
!17602 = !DILocation(line: 500, column: 15, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 500, column: 15)
!17604 = !DILocation(line: 500, column: 29, scope: !17603)
!17605 = !DILocation(line: 500, column: 15, scope: !17457)
!17606 = !DILocation(line: 502, column: 19, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17608, file: !1447, line: 502, column: 19)
!17608 = distinct !DILexicalBlock(scope: !17603, file: !1447, line: 501, column: 13)
!17609 = !DILocation(line: 502, column: 19, scope: !17608)
!17610 = !DILocation(line: 503, column: 17, scope: !17607)
!17611 = !DILocation(line: 504, column: 15, scope: !17608)
!17612 = !DILocation(line: 509, column: 15, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 509, column: 15)
!17614 = !DILocation(line: 509, column: 33, scope: !17613)
!17615 = !DILocation(line: 509, column: 36, scope: !17613)
!17616 = !DILocation(line: 509, column: 55, scope: !17613)
!17617 = !DILocation(line: 509, column: 58, scope: !17613)
!17618 = !DILocation(line: 509, column: 15, scope: !17457)
!17619 = !DILocation(line: 510, column: 13, scope: !17613)
!17620 = !DILabel(scope: !17457, name: "c_and_shell_escape", file: !1447, line: 512)
!17621 = !DILocation(line: 512, column: 9, scope: !17457)
!17622 = !DILocation(line: 513, column: 15, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 513, column: 15)
!17624 = !DILocation(line: 513, column: 29, scope: !17623)
!17625 = !DILocation(line: 514, column: 15, scope: !17623)
!17626 = !DILocation(line: 514, column: 18, scope: !17623)
!17627 = !DILocation(line: 513, column: 15, scope: !17457)
!17628 = !DILocation(line: 515, column: 13, scope: !17623)
!17629 = !DILabel(scope: !17457, name: "c_escape", file: !1447, line: 517)
!17630 = !DILocation(line: 517, column: 9, scope: !17457)
!17631 = !DILocation(line: 518, column: 15, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 518, column: 15)
!17633 = !DILocation(line: 518, column: 15, scope: !17457)
!17634 = !DILocation(line: 520, column: 19, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17632, file: !1447, line: 519, column: 13)
!17636 = !DILocation(line: 520, column: 17, scope: !17635)
!17637 = !DILocation(line: 521, column: 15, scope: !17635)
!17638 = !DILocation(line: 523, column: 11, scope: !17457)
!17639 = !DILocation(line: 526, column: 18, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 526, column: 15)
!17641 = !DILocation(line: 526, column: 26, scope: !17640)
!17642 = !DILocation(line: 526, column: 15, scope: !17457)
!17643 = !DILocation(line: 526, column: 40, scope: !17640)
!17644 = !DILocation(line: 526, column: 47, scope: !17640)
!17645 = !DILocation(line: 526, column: 57, scope: !17640)
!17646 = !DILocation(line: 526, column: 65, scope: !17640)
!17647 = !DILocation(line: 527, column: 13, scope: !17640)
!17648 = !DILocation(line: 528, column: 11, scope: !17457)
!17649 = !DILocation(line: 530, column: 15, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 530, column: 15)
!17651 = !DILocation(line: 530, column: 17, scope: !17650)
!17652 = !DILocation(line: 530, column: 15, scope: !17457)
!17653 = !DILocation(line: 531, column: 13, scope: !17650)
!17654 = !DILocation(line: 532, column: 11, scope: !17457)
!17655 = !DILocation(line: 534, column: 36, scope: !17457)
!17656 = !DILocation(line: 535, column: 11, scope: !17457)
!17657 = !DILocation(line: 548, column: 15, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 548, column: 15)
!17659 = !DILocation(line: 548, column: 29, scope: !17658)
!17660 = !DILocation(line: 549, column: 15, scope: !17658)
!17661 = !DILocation(line: 549, column: 18, scope: !17658)
!17662 = !DILocation(line: 548, column: 15, scope: !17457)
!17663 = !DILocation(line: 550, column: 13, scope: !17658)
!17664 = !DILocation(line: 551, column: 11, scope: !17457)
!17665 = !DILocation(line: 554, column: 36, scope: !17457)
!17666 = !DILocation(line: 555, column: 36, scope: !17457)
!17667 = !DILocation(line: 556, column: 15, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 556, column: 15)
!17669 = !DILocation(line: 556, column: 29, scope: !17668)
!17670 = !DILocation(line: 556, column: 15, scope: !17457)
!17671 = !DILocation(line: 558, column: 19, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17673, file: !1447, line: 558, column: 19)
!17673 = distinct !DILexicalBlock(scope: !17668, file: !1447, line: 557, column: 13)
!17674 = !DILocation(line: 558, column: 19, scope: !17673)
!17675 = !DILocation(line: 559, column: 17, scope: !17672)
!17676 = !DILocation(line: 561, column: 19, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17673, file: !1447, line: 561, column: 19)
!17678 = !DILocation(line: 561, column: 30, scope: !17677)
!17679 = !DILocation(line: 561, column: 35, scope: !17677)
!17680 = !DILocation(line: 561, column: 19, scope: !17673)
!17681 = !DILocation(line: 566, column: 37, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17677, file: !1447, line: 562, column: 17)
!17683 = !DILocation(line: 566, column: 35, scope: !17682)
!17684 = !DILocation(line: 567, column: 30, scope: !17682)
!17685 = !DILocation(line: 568, column: 17, scope: !17682)
!17686 = !DILocation(line: 570, column: 15, scope: !17673)
!17687 = !DILocation(line: 570, column: 15, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17689, file: !1447, line: 570, column: 15)
!17689 = distinct !DILexicalBlock(scope: !17673, file: !1447, line: 570, column: 15)
!17690 = !DILocation(line: 570, column: 15, scope: !17689)
!17691 = !DILocation(line: 571, column: 15, scope: !17673)
!17692 = !DILocation(line: 571, column: 15, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17694, file: !1447, line: 571, column: 15)
!17694 = distinct !DILexicalBlock(scope: !17673, file: !1447, line: 571, column: 15)
!17695 = !DILocation(line: 571, column: 15, scope: !17694)
!17696 = !DILocation(line: 572, column: 15, scope: !17673)
!17697 = !DILocation(line: 572, column: 15, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17699, file: !1447, line: 572, column: 15)
!17699 = distinct !DILexicalBlock(scope: !17673, file: !1447, line: 572, column: 15)
!17700 = !DILocation(line: 572, column: 15, scope: !17699)
!17701 = !DILocation(line: 573, column: 40, scope: !17673)
!17702 = !DILocation(line: 574, column: 13, scope: !17673)
!17703 = !DILocation(line: 575, column: 11, scope: !17457)
!17704 = !DILocation(line: 599, column: 36, scope: !17457)
!17705 = !DILocation(line: 600, column: 11, scope: !17457)
!17706 = !DILocalVariable(name: "m", scope: !17707, file: !1447, line: 610, type: !149)
!17707 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 608, column: 11)
!17708 = !DILocation(line: 610, column: 20, scope: !17707)
!17709 = !DILocalVariable(name: "printable", scope: !17707, file: !1447, line: 612, type: !141)
!17710 = !DILocation(line: 612, column: 18, scope: !17707)
!17711 = !DILocation(line: 614, column: 17, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17707, file: !1447, line: 614, column: 17)
!17713 = !DILocation(line: 614, column: 17, scope: !17707)
!17714 = !DILocation(line: 616, column: 19, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17712, file: !1447, line: 615, column: 15)
!17716 = !DILocation(line: 617, column: 29, scope: !17715)
!17717 = !DILocation(line: 617, column: 41, scope: !17715)
!17718 = !DILocation(line: 617, column: 27, scope: !17715)
!17719 = !DILocation(line: 618, column: 15, scope: !17715)
!17720 = !DILocalVariable(name: "mbstate", scope: !17721, file: !1447, line: 621, type: !1515)
!17721 = distinct !DILexicalBlock(scope: !17712, file: !1447, line: 620, column: 15)
!17722 = !DILocation(line: 621, column: 27, scope: !17721)
!17723 = !DILocation(line: 622, column: 17, scope: !17721)
!17724 = !DILocation(line: 624, column: 19, scope: !17721)
!17725 = !DILocation(line: 625, column: 27, scope: !17721)
!17726 = !DILocation(line: 626, column: 21, scope: !17727)
!17727 = distinct !DILexicalBlock(scope: !17721, file: !1447, line: 626, column: 21)
!17728 = !DILocation(line: 626, column: 29, scope: !17727)
!17729 = !DILocation(line: 626, column: 21, scope: !17721)
!17730 = !DILocation(line: 627, column: 37, scope: !17727)
!17731 = !DILocation(line: 627, column: 29, scope: !17727)
!17732 = !DILocation(line: 627, column: 27, scope: !17727)
!17733 = !DILocation(line: 627, column: 19, scope: !17727)
!17734 = !DILocation(line: 629, column: 17, scope: !17721)
!17735 = !DILocalVariable(name: "w", scope: !17736, file: !1447, line: 631, type: !654)
!17736 = distinct !DILexicalBlock(scope: !17721, file: !1447, line: 630, column: 19)
!17737 = !DILocation(line: 631, column: 29, scope: !17736)
!17738 = !DILocalVariable(name: "bytes", scope: !17736, file: !1447, line: 632, type: !149)
!17739 = !DILocation(line: 632, column: 28, scope: !17736)
!17740 = !DILocation(line: 632, column: 50, scope: !17736)
!17741 = !DILocation(line: 632, column: 54, scope: !17736)
!17742 = !DILocation(line: 632, column: 58, scope: !17736)
!17743 = !DILocation(line: 632, column: 56, scope: !17736)
!17744 = !DILocation(line: 633, column: 45, scope: !17736)
!17745 = !DILocation(line: 633, column: 56, scope: !17736)
!17746 = !DILocation(line: 633, column: 60, scope: !17736)
!17747 = !DILocation(line: 633, column: 58, scope: !17736)
!17748 = !DILocation(line: 633, column: 53, scope: !17736)
!17749 = !DILocation(line: 632, column: 36, scope: !17736)
!17750 = !DILocation(line: 634, column: 25, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17736, file: !1447, line: 634, column: 25)
!17752 = !DILocation(line: 634, column: 31, scope: !17751)
!17753 = !DILocation(line: 634, column: 25, scope: !17736)
!17754 = !DILocation(line: 635, column: 23, scope: !17751)
!17755 = !DILocation(line: 636, column: 30, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17751, file: !1447, line: 636, column: 30)
!17757 = !DILocation(line: 636, column: 36, scope: !17756)
!17758 = !DILocation(line: 636, column: 30, scope: !17751)
!17759 = !DILocation(line: 638, column: 35, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17756, file: !1447, line: 637, column: 23)
!17761 = !DILocation(line: 639, column: 25, scope: !17760)
!17762 = !DILocation(line: 641, column: 30, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17756, file: !1447, line: 641, column: 30)
!17764 = !DILocation(line: 641, column: 36, scope: !17763)
!17765 = !DILocation(line: 641, column: 30, scope: !17756)
!17766 = !DILocation(line: 643, column: 35, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17763, file: !1447, line: 642, column: 23)
!17768 = !DILocation(line: 644, column: 25, scope: !17767)
!17769 = !DILocation(line: 644, column: 32, scope: !17767)
!17770 = !DILocation(line: 644, column: 36, scope: !17767)
!17771 = !DILocation(line: 644, column: 34, scope: !17767)
!17772 = !DILocation(line: 644, column: 40, scope: !17767)
!17773 = !DILocation(line: 644, column: 38, scope: !17767)
!17774 = !DILocation(line: 644, column: 48, scope: !17767)
!17775 = !DILocation(line: 644, column: 51, scope: !17767)
!17776 = !DILocation(line: 644, column: 55, scope: !17767)
!17777 = !DILocation(line: 644, column: 59, scope: !17767)
!17778 = !DILocation(line: 644, column: 57, scope: !17767)
!17779 = !DILocation(line: 0, scope: !17767)
!17780 = !DILocation(line: 645, column: 28, scope: !17767)
!17781 = distinct !{!17781, !17768, !17780}
!17782 = !DILocation(line: 646, column: 25, scope: !17767)
!17783 = !DILocation(line: 654, column: 44, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17785, file: !1447, line: 654, column: 29)
!17785 = distinct !DILexicalBlock(scope: !17763, file: !1447, line: 649, column: 23)
!17786 = !DILocation(line: 655, column: 29, scope: !17784)
!17787 = !DILocation(line: 655, column: 32, scope: !17784)
!17788 = !DILocation(line: 655, column: 46, scope: !17784)
!17789 = !DILocation(line: 654, column: 29, scope: !17785)
!17790 = !DILocalVariable(name: "j", scope: !17791, file: !1447, line: 657, type: !149)
!17791 = distinct !DILexicalBlock(scope: !17784, file: !1447, line: 656, column: 27)
!17792 = !DILocation(line: 657, column: 36, scope: !17791)
!17793 = !DILocation(line: 658, column: 36, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17791, file: !1447, line: 658, column: 29)
!17795 = !DILocation(line: 658, column: 34, scope: !17794)
!17796 = !DILocation(line: 658, column: 41, scope: !17797)
!17797 = distinct !DILexicalBlock(scope: !17794, file: !1447, line: 658, column: 29)
!17798 = !DILocation(line: 658, column: 45, scope: !17797)
!17799 = !DILocation(line: 658, column: 43, scope: !17797)
!17800 = !DILocation(line: 658, column: 29, scope: !17794)
!17801 = !DILocation(line: 659, column: 39, scope: !17797)
!17802 = !DILocation(line: 659, column: 43, scope: !17797)
!17803 = !DILocation(line: 659, column: 47, scope: !17797)
!17804 = !DILocation(line: 659, column: 45, scope: !17797)
!17805 = !DILocation(line: 659, column: 51, scope: !17797)
!17806 = !DILocation(line: 659, column: 49, scope: !17797)
!17807 = !DILocation(line: 659, column: 31, scope: !17797)
!17808 = !DILocation(line: 663, column: 35, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17797, file: !1447, line: 660, column: 33)
!17810 = !DILocation(line: 666, column: 35, scope: !17809)
!17811 = !DILocation(line: 667, column: 33, scope: !17809)
!17812 = !DILocation(line: 658, column: 53, scope: !17797)
!17813 = !DILocation(line: 658, column: 29, scope: !17797)
!17814 = distinct !{!17814, !17800, !17815}
!17815 = !DILocation(line: 667, column: 33, scope: !17794)
!17816 = !DILocation(line: 668, column: 27, scope: !17791)
!17817 = !DILocation(line: 670, column: 41, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17785, file: !1447, line: 670, column: 29)
!17819 = !DILocation(line: 670, column: 31, scope: !17818)
!17820 = !DILocation(line: 670, column: 29, scope: !17785)
!17821 = !DILocation(line: 671, column: 37, scope: !17818)
!17822 = !DILocation(line: 671, column: 27, scope: !17818)
!17823 = !DILocation(line: 672, column: 30, scope: !17785)
!17824 = !DILocation(line: 672, column: 27, scope: !17785)
!17825 = !DILocation(line: 674, column: 19, scope: !17736)
!17826 = !DILocation(line: 675, column: 26, scope: !17721)
!17827 = !DILocation(line: 675, column: 24, scope: !17721)
!17828 = distinct !{!17828, !17734, !17829}
!17829 = !DILocation(line: 675, column: 44, scope: !17721)
!17830 = !DILocation(line: 678, column: 40, scope: !17707)
!17831 = !DILocation(line: 678, column: 38, scope: !17707)
!17832 = !DILocation(line: 680, column: 21, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17707, file: !1447, line: 680, column: 17)
!17834 = !DILocation(line: 680, column: 19, scope: !17833)
!17835 = !DILocation(line: 680, column: 23, scope: !17833)
!17836 = !DILocation(line: 680, column: 27, scope: !17833)
!17837 = !DILocation(line: 680, column: 45, scope: !17833)
!17838 = !DILocation(line: 680, column: 50, scope: !17833)
!17839 = !DILocation(line: 680, column: 17, scope: !17707)
!17840 = !DILocalVariable(name: "ilim", scope: !17841, file: !1447, line: 684, type: !149)
!17841 = distinct !DILexicalBlock(scope: !17833, file: !1447, line: 681, column: 15)
!17842 = !DILocation(line: 684, column: 24, scope: !17841)
!17843 = !DILocation(line: 684, column: 31, scope: !17841)
!17844 = !DILocation(line: 684, column: 35, scope: !17841)
!17845 = !DILocation(line: 684, column: 33, scope: !17841)
!17846 = !DILocation(line: 686, column: 17, scope: !17841)
!17847 = !DILocation(line: 688, column: 25, scope: !17848)
!17848 = distinct !DILexicalBlock(scope: !17849, file: !1447, line: 688, column: 25)
!17849 = distinct !DILexicalBlock(scope: !17850, file: !1447, line: 687, column: 19)
!17850 = distinct !DILexicalBlock(scope: !17851, file: !1447, line: 686, column: 17)
!17851 = distinct !DILexicalBlock(scope: !17841, file: !1447, line: 686, column: 17)
!17852 = !DILocation(line: 688, column: 43, scope: !17848)
!17853 = !DILocation(line: 688, column: 48, scope: !17848)
!17854 = !DILocation(line: 688, column: 25, scope: !17849)
!17855 = !DILocation(line: 690, column: 25, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17848, file: !1447, line: 689, column: 23)
!17857 = !DILocation(line: 690, column: 25, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17859, file: !1447, line: 690, column: 25)
!17859 = distinct !DILexicalBlock(scope: !17856, file: !1447, line: 690, column: 25)
!17860 = !DILocation(line: 690, column: 25, scope: !17859)
!17861 = !DILocation(line: 690, column: 25, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17859, file: !1447, line: 690, column: 25)
!17863 = !DILocation(line: 690, column: 25, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17862, file: !1447, line: 690, column: 25)
!17865 = !DILocation(line: 690, column: 25, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17867, file: !1447, line: 690, column: 25)
!17867 = distinct !DILexicalBlock(scope: !17864, file: !1447, line: 690, column: 25)
!17868 = !DILocation(line: 690, column: 25, scope: !17867)
!17869 = !DILocation(line: 690, column: 25, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17871, file: !1447, line: 690, column: 25)
!17871 = distinct !DILexicalBlock(scope: !17864, file: !1447, line: 690, column: 25)
!17872 = !DILocation(line: 690, column: 25, scope: !17871)
!17873 = !DILocation(line: 690, column: 25, scope: !17874)
!17874 = distinct !DILexicalBlock(scope: !17875, file: !1447, line: 690, column: 25)
!17875 = distinct !DILexicalBlock(scope: !17864, file: !1447, line: 690, column: 25)
!17876 = !DILocation(line: 690, column: 25, scope: !17875)
!17877 = !DILocation(line: 690, column: 25, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17879, file: !1447, line: 690, column: 25)
!17879 = distinct !DILexicalBlock(scope: !17859, file: !1447, line: 690, column: 25)
!17880 = !DILocation(line: 690, column: 25, scope: !17879)
!17881 = !DILocation(line: 691, column: 25, scope: !17856)
!17882 = !DILocation(line: 691, column: 25, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17884, file: !1447, line: 691, column: 25)
!17884 = distinct !DILexicalBlock(scope: !17856, file: !1447, line: 691, column: 25)
!17885 = !DILocation(line: 691, column: 25, scope: !17884)
!17886 = !DILocation(line: 692, column: 25, scope: !17856)
!17887 = !DILocation(line: 692, column: 25, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17889, file: !1447, line: 692, column: 25)
!17889 = distinct !DILexicalBlock(scope: !17856, file: !1447, line: 692, column: 25)
!17890 = !DILocation(line: 692, column: 25, scope: !17889)
!17891 = !DILocation(line: 693, column: 36, scope: !17856)
!17892 = !DILocation(line: 693, column: 38, scope: !17856)
!17893 = !DILocation(line: 693, column: 33, scope: !17856)
!17894 = !DILocation(line: 693, column: 29, scope: !17856)
!17895 = !DILocation(line: 693, column: 27, scope: !17856)
!17896 = !DILocation(line: 694, column: 23, scope: !17856)
!17897 = !DILocation(line: 695, column: 30, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17848, file: !1447, line: 695, column: 30)
!17899 = !DILocation(line: 695, column: 30, scope: !17848)
!17900 = !DILocation(line: 697, column: 25, scope: !17901)
!17901 = distinct !DILexicalBlock(scope: !17898, file: !1447, line: 696, column: 23)
!17902 = !DILocation(line: 697, column: 25, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17904, file: !1447, line: 697, column: 25)
!17904 = distinct !DILexicalBlock(scope: !17901, file: !1447, line: 697, column: 25)
!17905 = !DILocation(line: 697, column: 25, scope: !17904)
!17906 = !DILocation(line: 698, column: 40, scope: !17901)
!17907 = !DILocation(line: 699, column: 23, scope: !17901)
!17908 = !DILocation(line: 700, column: 25, scope: !17909)
!17909 = distinct !DILexicalBlock(scope: !17849, file: !1447, line: 700, column: 25)
!17910 = !DILocation(line: 700, column: 33, scope: !17909)
!17911 = !DILocation(line: 700, column: 35, scope: !17909)
!17912 = !DILocation(line: 700, column: 30, scope: !17909)
!17913 = !DILocation(line: 700, column: 25, scope: !17849)
!17914 = !DILocation(line: 701, column: 23, scope: !17909)
!17915 = !DILocation(line: 702, column: 21, scope: !17849)
!17916 = !DILocation(line: 702, column: 21, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17918, file: !1447, line: 702, column: 21)
!17918 = distinct !DILexicalBlock(scope: !17849, file: !1447, line: 702, column: 21)
!17919 = !DILocation(line: 702, column: 21, scope: !17918)
!17920 = !DILocation(line: 702, column: 21, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17917, file: !1447, line: 702, column: 21)
!17922 = !DILocation(line: 702, column: 21, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17924, file: !1447, line: 702, column: 21)
!17924 = distinct !DILexicalBlock(scope: !17921, file: !1447, line: 702, column: 21)
!17925 = !DILocation(line: 702, column: 21, scope: !17924)
!17926 = !DILocation(line: 702, column: 21, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17928, file: !1447, line: 702, column: 21)
!17928 = distinct !DILexicalBlock(scope: !17921, file: !1447, line: 702, column: 21)
!17929 = !DILocation(line: 702, column: 21, scope: !17928)
!17930 = !DILocation(line: 703, column: 21, scope: !17849)
!17931 = !DILocation(line: 703, column: 21, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17933, file: !1447, line: 703, column: 21)
!17933 = distinct !DILexicalBlock(scope: !17849, file: !1447, line: 703, column: 21)
!17934 = !DILocation(line: 703, column: 21, scope: !17933)
!17935 = !DILocation(line: 704, column: 25, scope: !17849)
!17936 = !DILocation(line: 704, column: 29, scope: !17849)
!17937 = !DILocation(line: 704, column: 23, scope: !17849)
!17938 = !DILocation(line: 686, column: 17, scope: !17850)
!17939 = distinct !{!17939, !17940, !17941}
!17940 = !DILocation(line: 686, column: 17, scope: !17851)
!17941 = !DILocation(line: 705, column: 19, scope: !17851)
!17942 = !DILocation(line: 707, column: 17, scope: !17841)
!17943 = !DILocation(line: 710, column: 9, scope: !17457)
!17944 = !DILocation(line: 712, column: 16, scope: !17945)
!17945 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 712, column: 11)
!17946 = !DILocation(line: 712, column: 34, scope: !17945)
!17947 = !DILocation(line: 712, column: 37, scope: !17945)
!17948 = !DILocation(line: 712, column: 51, scope: !17945)
!17949 = !DILocation(line: 713, column: 15, scope: !17945)
!17950 = !DILocation(line: 713, column: 18, scope: !17945)
!17951 = !DILocation(line: 714, column: 14, scope: !17945)
!17952 = !DILocation(line: 714, column: 17, scope: !17945)
!17953 = !DILocation(line: 715, column: 14, scope: !17945)
!17954 = !DILocation(line: 715, column: 17, scope: !17945)
!17955 = !DILocation(line: 715, column: 33, scope: !17945)
!17956 = !DILocation(line: 715, column: 35, scope: !17945)
!17957 = !DILocation(line: 715, column: 51, scope: !17945)
!17958 = !DILocation(line: 715, column: 53, scope: !17945)
!17959 = !DILocation(line: 715, column: 47, scope: !17945)
!17960 = !DILocation(line: 715, column: 65, scope: !17945)
!17961 = !DILocation(line: 716, column: 11, scope: !17945)
!17962 = !DILocation(line: 716, column: 15, scope: !17945)
!17963 = !DILocation(line: 712, column: 11, scope: !17403)
!17964 = !DILocation(line: 717, column: 9, scope: !17945)
!17965 = !DILabel(scope: !17403, name: "store_escape", file: !1447, line: 719)
!17966 = !DILocation(line: 719, column: 5, scope: !17403)
!17967 = !DILocation(line: 720, column: 7, scope: !17403)
!17968 = !DILocation(line: 720, column: 7, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17970, file: !1447, line: 720, column: 7)
!17970 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 720, column: 7)
!17971 = !DILocation(line: 720, column: 7, scope: !17970)
!17972 = !DILocation(line: 720, column: 7, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17970, file: !1447, line: 720, column: 7)
!17974 = !DILocation(line: 720, column: 7, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17973, file: !1447, line: 720, column: 7)
!17976 = !DILocation(line: 720, column: 7, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17978, file: !1447, line: 720, column: 7)
!17978 = distinct !DILexicalBlock(scope: !17975, file: !1447, line: 720, column: 7)
!17979 = !DILocation(line: 720, column: 7, scope: !17978)
!17980 = !DILocation(line: 720, column: 7, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17982, file: !1447, line: 720, column: 7)
!17982 = distinct !DILexicalBlock(scope: !17975, file: !1447, line: 720, column: 7)
!17983 = !DILocation(line: 720, column: 7, scope: !17982)
!17984 = !DILocation(line: 720, column: 7, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17986, file: !1447, line: 720, column: 7)
!17986 = distinct !DILexicalBlock(scope: !17975, file: !1447, line: 720, column: 7)
!17987 = !DILocation(line: 720, column: 7, scope: !17986)
!17988 = !DILocation(line: 720, column: 7, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17990, file: !1447, line: 720, column: 7)
!17990 = distinct !DILexicalBlock(scope: !17970, file: !1447, line: 720, column: 7)
!17991 = !DILocation(line: 720, column: 7, scope: !17990)
!17992 = !DILabel(scope: !17403, name: "store_c", file: !1447, line: 722)
!17993 = !DILocation(line: 722, column: 5, scope: !17403)
!17994 = !DILocation(line: 723, column: 7, scope: !17403)
!17995 = !DILocation(line: 723, column: 7, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17997, file: !1447, line: 723, column: 7)
!17997 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 723, column: 7)
!17998 = !DILocation(line: 723, column: 7, scope: !17997)
!17999 = !DILocation(line: 723, column: 7, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17996, file: !1447, line: 723, column: 7)
!18001 = !DILocation(line: 723, column: 7, scope: !18002)
!18002 = distinct !DILexicalBlock(scope: !18003, file: !1447, line: 723, column: 7)
!18003 = distinct !DILexicalBlock(scope: !18000, file: !1447, line: 723, column: 7)
!18004 = !DILocation(line: 723, column: 7, scope: !18003)
!18005 = !DILocation(line: 723, column: 7, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !18007, file: !1447, line: 723, column: 7)
!18007 = distinct !DILexicalBlock(scope: !18000, file: !1447, line: 723, column: 7)
!18008 = !DILocation(line: 723, column: 7, scope: !18007)
!18009 = !DILocation(line: 724, column: 7, scope: !17403)
!18010 = !DILocation(line: 724, column: 7, scope: !18011)
!18011 = distinct !DILexicalBlock(scope: !18012, file: !1447, line: 724, column: 7)
!18012 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 724, column: 7)
!18013 = !DILocation(line: 724, column: 7, scope: !18012)
!18014 = !DILocation(line: 726, column: 13, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !17403, file: !1447, line: 726, column: 11)
!18016 = !DILocation(line: 726, column: 11, scope: !17403)
!18017 = !DILocation(line: 727, column: 38, scope: !18015)
!18018 = !DILocation(line: 727, column: 9, scope: !18015)
!18019 = !DILocation(line: 728, column: 5, scope: !17403)
!18020 = !DILocation(line: 400, column: 75, scope: !17392)
!18021 = !DILocation(line: 400, column: 3, scope: !17392)
!18022 = distinct !{!18022, !17401, !18023}
!18023 = !DILocation(line: 728, column: 5, scope: !17389)
!18024 = !DILocation(line: 730, column: 7, scope: !18025)
!18025 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 730, column: 7)
!18026 = !DILocation(line: 730, column: 11, scope: !18025)
!18027 = !DILocation(line: 730, column: 16, scope: !18025)
!18028 = !DILocation(line: 730, column: 19, scope: !18025)
!18029 = !DILocation(line: 730, column: 33, scope: !18025)
!18030 = !DILocation(line: 731, column: 7, scope: !18025)
!18031 = !DILocation(line: 731, column: 10, scope: !18025)
!18032 = !DILocation(line: 730, column: 7, scope: !17253)
!18033 = !DILocation(line: 732, column: 5, scope: !18025)
!18034 = !DILocation(line: 738, column: 7, scope: !18035)
!18035 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 738, column: 7)
!18036 = !DILocation(line: 738, column: 21, scope: !18035)
!18037 = !DILocation(line: 738, column: 51, scope: !18035)
!18038 = !DILocation(line: 738, column: 56, scope: !18035)
!18039 = !DILocation(line: 739, column: 7, scope: !18035)
!18040 = !DILocation(line: 739, column: 10, scope: !18035)
!18041 = !DILocation(line: 738, column: 7, scope: !17253)
!18042 = !DILocation(line: 741, column: 11, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18044, file: !1447, line: 741, column: 11)
!18044 = distinct !DILexicalBlock(scope: !18035, file: !1447, line: 740, column: 5)
!18045 = !DILocation(line: 741, column: 11, scope: !18044)
!18046 = !DILocation(line: 742, column: 42, scope: !18043)
!18047 = !DILocation(line: 742, column: 50, scope: !18043)
!18048 = !DILocation(line: 742, column: 67, scope: !18043)
!18049 = !DILocation(line: 742, column: 72, scope: !18043)
!18050 = !DILocation(line: 744, column: 42, scope: !18043)
!18051 = !DILocation(line: 744, column: 49, scope: !18043)
!18052 = !DILocation(line: 745, column: 42, scope: !18043)
!18053 = !DILocation(line: 745, column: 54, scope: !18043)
!18054 = !DILocation(line: 742, column: 16, scope: !18043)
!18055 = !DILocation(line: 742, column: 9, scope: !18043)
!18056 = !DILocation(line: 746, column: 18, scope: !18057)
!18057 = distinct !DILexicalBlock(scope: !18043, file: !1447, line: 746, column: 16)
!18058 = !DILocation(line: 746, column: 29, scope: !18057)
!18059 = !DILocation(line: 746, column: 32, scope: !18057)
!18060 = !DILocation(line: 746, column: 16, scope: !18043)
!18061 = !DILocation(line: 749, column: 24, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18057, file: !1447, line: 747, column: 9)
!18063 = !DILocation(line: 749, column: 22, scope: !18062)
!18064 = !DILocation(line: 750, column: 15, scope: !18062)
!18065 = !DILocation(line: 751, column: 11, scope: !18062)
!18066 = !DILocation(line: 753, column: 5, scope: !18044)
!18067 = !DILocation(line: 755, column: 7, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 755, column: 7)
!18069 = !DILocation(line: 755, column: 20, scope: !18068)
!18070 = !DILocation(line: 755, column: 24, scope: !18068)
!18071 = !DILocation(line: 755, column: 7, scope: !17253)
!18072 = !DILocation(line: 756, column: 5, scope: !18068)
!18073 = !DILocation(line: 756, column: 13, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18075, file: !1447, line: 756, column: 5)
!18075 = distinct !DILexicalBlock(scope: !18068, file: !1447, line: 756, column: 5)
!18076 = !DILocation(line: 756, column: 12, scope: !18074)
!18077 = !DILocation(line: 756, column: 5, scope: !18075)
!18078 = !DILocation(line: 757, column: 7, scope: !18074)
!18079 = !DILocation(line: 757, column: 7, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18081, file: !1447, line: 757, column: 7)
!18081 = distinct !DILexicalBlock(scope: !18074, file: !1447, line: 757, column: 7)
!18082 = !DILocation(line: 757, column: 7, scope: !18081)
!18083 = !DILocation(line: 756, column: 39, scope: !18074)
!18084 = !DILocation(line: 756, column: 5, scope: !18074)
!18085 = distinct !{!18085, !18077, !18086}
!18086 = !DILocation(line: 757, column: 7, scope: !18075)
!18087 = !DILocation(line: 759, column: 7, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 759, column: 7)
!18089 = !DILocation(line: 759, column: 13, scope: !18088)
!18090 = !DILocation(line: 759, column: 11, scope: !18088)
!18091 = !DILocation(line: 759, column: 7, scope: !17253)
!18092 = !DILocation(line: 760, column: 5, scope: !18088)
!18093 = !DILocation(line: 760, column: 12, scope: !18088)
!18094 = !DILocation(line: 760, column: 17, scope: !18088)
!18095 = !DILocation(line: 761, column: 10, scope: !17253)
!18096 = !DILocation(line: 761, column: 3, scope: !17253)
!18097 = !DILabel(scope: !17253, name: "force_outer_quoting_style", file: !1447, line: 763)
!18098 = !DILocation(line: 763, column: 2, scope: !17253)
!18099 = !DILocation(line: 766, column: 7, scope: !18100)
!18100 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 766, column: 7)
!18101 = !DILocation(line: 766, column: 21, scope: !18100)
!18102 = !DILocation(line: 766, column: 51, scope: !18100)
!18103 = !DILocation(line: 766, column: 54, scope: !18100)
!18104 = !DILocation(line: 766, column: 7, scope: !17253)
!18105 = !DILocation(line: 767, column: 19, scope: !18100)
!18106 = !DILocation(line: 767, column: 5, scope: !18100)
!18107 = !DILocation(line: 768, column: 36, scope: !17253)
!18108 = !DILocation(line: 768, column: 44, scope: !17253)
!18109 = !DILocation(line: 768, column: 56, scope: !17253)
!18110 = !DILocation(line: 768, column: 61, scope: !17253)
!18111 = !DILocation(line: 769, column: 36, scope: !17253)
!18112 = !DILocation(line: 770, column: 36, scope: !17253)
!18113 = !DILocation(line: 770, column: 42, scope: !17253)
!18114 = !DILocation(line: 771, column: 36, scope: !17253)
!18115 = !DILocation(line: 771, column: 48, scope: !17253)
!18116 = !DILocation(line: 768, column: 10, scope: !17253)
!18117 = !DILocation(line: 768, column: 3, scope: !17253)
!18118 = !DILocation(line: 772, column: 1, scope: !17253)
!18119 = distinct !DISubprogram(name: "gettext_quote", scope: !1447, file: !1447, line: 207, type: !1525, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18120 = !DILocalVariable(name: "msgid", arg: 1, scope: !18119, file: !1447, line: 207, type: !146)
!18121 = !DILocation(line: 207, column: 28, scope: !18119)
!18122 = !DILocalVariable(name: "s", arg: 2, scope: !18119, file: !1447, line: 207, type: !95)
!18123 = !DILocation(line: 207, column: 54, scope: !18119)
!18124 = !DILocalVariable(name: "translation", scope: !18119, file: !1447, line: 209, type: !146)
!18125 = !DILocation(line: 209, column: 15, scope: !18119)
!18126 = !DILocation(line: 209, column: 29, scope: !18119)
!18127 = !DILocalVariable(name: "locale_code", scope: !18119, file: !1447, line: 210, type: !146)
!18128 = !DILocation(line: 210, column: 15, scope: !18119)
!18129 = !DILocation(line: 212, column: 7, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18119, file: !1447, line: 212, column: 7)
!18131 = !DILocation(line: 212, column: 22, scope: !18130)
!18132 = !DILocation(line: 212, column: 19, scope: !18130)
!18133 = !DILocation(line: 212, column: 7, scope: !18119)
!18134 = !DILocation(line: 213, column: 12, scope: !18130)
!18135 = !DILocation(line: 213, column: 5, scope: !18130)
!18136 = !DILocation(line: 233, column: 17, scope: !18119)
!18137 = !DILocation(line: 233, column: 15, scope: !18119)
!18138 = !DILocation(line: 234, column: 7, scope: !18139)
!18139 = distinct !DILexicalBlock(scope: !18119, file: !1447, line: 234, column: 7)
!18140 = !DILocation(line: 234, column: 7, scope: !18119)
!18141 = !DILocation(line: 235, column: 12, scope: !18139)
!18142 = !DILocation(line: 235, column: 21, scope: !18139)
!18143 = !DILocation(line: 235, column: 5, scope: !18139)
!18144 = !DILocation(line: 236, column: 7, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18119, file: !1447, line: 236, column: 7)
!18146 = !DILocation(line: 236, column: 7, scope: !18119)
!18147 = !DILocation(line: 237, column: 12, scope: !18145)
!18148 = !DILocation(line: 237, column: 21, scope: !18145)
!18149 = !DILocation(line: 237, column: 5, scope: !18145)
!18150 = !DILocation(line: 239, column: 11, scope: !18119)
!18151 = !DILocation(line: 239, column: 13, scope: !18119)
!18152 = !DILocation(line: 239, column: 3, scope: !18119)
!18153 = !DILocation(line: 240, column: 1, scope: !18119)
!18154 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1447, file: !1447, line: 799, type: !1470, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18155 = !DILocalVariable(name: "arg", arg: 1, scope: !18154, file: !1447, line: 799, type: !146)
!18156 = !DILocation(line: 799, column: 29, scope: !18154)
!18157 = !DILocalVariable(name: "argsize", arg: 2, scope: !18154, file: !1447, line: 799, type: !149)
!18158 = !DILocation(line: 799, column: 41, scope: !18154)
!18159 = !DILocalVariable(name: "o", arg: 3, scope: !18154, file: !1447, line: 800, type: !1457)
!18160 = !DILocation(line: 800, column: 47, scope: !18154)
!18161 = !DILocation(line: 802, column: 30, scope: !18154)
!18162 = !DILocation(line: 802, column: 35, scope: !18154)
!18163 = !DILocation(line: 802, column: 50, scope: !18154)
!18164 = !DILocation(line: 802, column: 10, scope: !18154)
!18165 = !DILocation(line: 802, column: 3, scope: !18154)
!18166 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1447, file: !1447, line: 812, type: !1472, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18167 = !DILocalVariable(name: "arg", arg: 1, scope: !18166, file: !1447, line: 812, type: !146)
!18168 = !DILocation(line: 812, column: 33, scope: !18166)
!18169 = !DILocalVariable(name: "argsize", arg: 2, scope: !18166, file: !1447, line: 812, type: !149)
!18170 = !DILocation(line: 812, column: 45, scope: !18166)
!18171 = !DILocalVariable(name: "size", arg: 3, scope: !18166, file: !1447, line: 812, type: !148)
!18172 = !DILocation(line: 812, column: 62, scope: !18166)
!18173 = !DILocalVariable(name: "o", arg: 4, scope: !18166, file: !1447, line: 813, type: !1457)
!18174 = !DILocation(line: 813, column: 51, scope: !18166)
!18175 = !DILocalVariable(name: "p", scope: !18166, file: !1447, line: 815, type: !1457)
!18176 = !DILocation(line: 815, column: 33, scope: !18166)
!18177 = !DILocation(line: 815, column: 37, scope: !18166)
!18178 = !DILocation(line: 815, column: 41, scope: !18166)
!18179 = !DILocalVariable(name: "e", scope: !18166, file: !1447, line: 816, type: !27)
!18180 = !DILocation(line: 816, column: 7, scope: !18166)
!18181 = !DILocation(line: 816, column: 11, scope: !18166)
!18182 = !DILocalVariable(name: "flags", scope: !18166, file: !1447, line: 818, type: !27)
!18183 = !DILocation(line: 818, column: 7, scope: !18166)
!18184 = !DILocation(line: 818, column: 15, scope: !18166)
!18185 = !DILocation(line: 818, column: 18, scope: !18166)
!18186 = !DILocation(line: 818, column: 27, scope: !18166)
!18187 = !DILocation(line: 818, column: 24, scope: !18166)
!18188 = !DILocalVariable(name: "bufsize", scope: !18166, file: !1447, line: 819, type: !149)
!18189 = !DILocation(line: 819, column: 10, scope: !18166)
!18190 = !DILocation(line: 819, column: 52, scope: !18166)
!18191 = !DILocation(line: 819, column: 57, scope: !18166)
!18192 = !DILocation(line: 819, column: 66, scope: !18166)
!18193 = !DILocation(line: 819, column: 69, scope: !18166)
!18194 = !DILocation(line: 820, column: 46, scope: !18166)
!18195 = !DILocation(line: 820, column: 53, scope: !18166)
!18196 = !DILocation(line: 820, column: 56, scope: !18166)
!18197 = !DILocation(line: 821, column: 46, scope: !18166)
!18198 = !DILocation(line: 821, column: 49, scope: !18166)
!18199 = !DILocation(line: 822, column: 46, scope: !18166)
!18200 = !DILocation(line: 822, column: 49, scope: !18166)
!18201 = !DILocation(line: 819, column: 20, scope: !18166)
!18202 = !DILocation(line: 822, column: 62, scope: !18166)
!18203 = !DILocalVariable(name: "buf", scope: !18166, file: !1447, line: 823, type: !143)
!18204 = !DILocation(line: 823, column: 9, scope: !18166)
!18205 = !DILocation(line: 823, column: 27, scope: !18166)
!18206 = !DILocation(line: 823, column: 15, scope: !18166)
!18207 = !DILocation(line: 824, column: 29, scope: !18166)
!18208 = !DILocation(line: 824, column: 34, scope: !18166)
!18209 = !DILocation(line: 824, column: 43, scope: !18166)
!18210 = !DILocation(line: 824, column: 48, scope: !18166)
!18211 = !DILocation(line: 824, column: 57, scope: !18166)
!18212 = !DILocation(line: 824, column: 60, scope: !18166)
!18213 = !DILocation(line: 824, column: 67, scope: !18166)
!18214 = !DILocation(line: 825, column: 29, scope: !18166)
!18215 = !DILocation(line: 825, column: 32, scope: !18166)
!18216 = !DILocation(line: 826, column: 29, scope: !18166)
!18217 = !DILocation(line: 826, column: 32, scope: !18166)
!18218 = !DILocation(line: 826, column: 44, scope: !18166)
!18219 = !DILocation(line: 826, column: 47, scope: !18166)
!18220 = !DILocation(line: 824, column: 3, scope: !18166)
!18221 = !DILocation(line: 827, column: 11, scope: !18166)
!18222 = !DILocation(line: 827, column: 3, scope: !18166)
!18223 = !DILocation(line: 827, column: 9, scope: !18166)
!18224 = !DILocation(line: 828, column: 7, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18166, file: !1447, line: 828, column: 7)
!18226 = !DILocation(line: 828, column: 7, scope: !18166)
!18227 = !DILocation(line: 829, column: 13, scope: !18225)
!18228 = !DILocation(line: 829, column: 21, scope: !18225)
!18229 = !DILocation(line: 829, column: 6, scope: !18225)
!18230 = !DILocation(line: 829, column: 11, scope: !18225)
!18231 = !DILocation(line: 829, column: 5, scope: !18225)
!18232 = !DILocation(line: 830, column: 10, scope: !18166)
!18233 = !DILocation(line: 830, column: 3, scope: !18166)
!18234 = distinct !DISubprogram(name: "quotearg_free", scope: !1447, file: !1447, line: 848, type: !341, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18235 = !DILocalVariable(name: "sv", scope: !18234, file: !1447, line: 850, type: !1474)
!18236 = !DILocation(line: 850, column: 19, scope: !18234)
!18237 = !DILocation(line: 850, column: 24, scope: !18234)
!18238 = !DILocalVariable(name: "i", scope: !18234, file: !1447, line: 851, type: !27)
!18239 = !DILocation(line: 851, column: 7, scope: !18234)
!18240 = !DILocation(line: 852, column: 10, scope: !18241)
!18241 = distinct !DILexicalBlock(scope: !18234, file: !1447, line: 852, column: 3)
!18242 = !DILocation(line: 852, column: 8, scope: !18241)
!18243 = !DILocation(line: 852, column: 15, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18241, file: !1447, line: 852, column: 3)
!18245 = !DILocation(line: 852, column: 19, scope: !18244)
!18246 = !DILocation(line: 852, column: 17, scope: !18244)
!18247 = !DILocation(line: 852, column: 3, scope: !18241)
!18248 = !DILocation(line: 853, column: 11, scope: !18244)
!18249 = !DILocation(line: 853, column: 14, scope: !18244)
!18250 = !DILocation(line: 853, column: 17, scope: !18244)
!18251 = !{!18252, !2443, i64 8}
!18252 = !{!"slotvec", !2467, i64 0, !2443, i64 8}
!18253 = !DILocation(line: 853, column: 5, scope: !18244)
!18254 = !DILocation(line: 852, column: 28, scope: !18244)
!18255 = !DILocation(line: 852, column: 3, scope: !18244)
!18256 = distinct !{!18256, !18247, !18257}
!18257 = !DILocation(line: 853, column: 20, scope: !18241)
!18258 = !DILocation(line: 854, column: 7, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18234, file: !1447, line: 854, column: 7)
!18260 = !DILocation(line: 854, column: 13, scope: !18259)
!18261 = !DILocation(line: 854, column: 17, scope: !18259)
!18262 = !DILocation(line: 854, column: 7, scope: !18234)
!18263 = !DILocation(line: 856, column: 13, scope: !18264)
!18264 = distinct !DILexicalBlock(scope: !18259, file: !1447, line: 855, column: 5)
!18265 = !DILocation(line: 856, column: 19, scope: !18264)
!18266 = !DILocation(line: 856, column: 7, scope: !18264)
!18267 = !DILocation(line: 857, column: 21, scope: !18264)
!18268 = !{!18252, !2467, i64 0}
!18269 = !DILocation(line: 858, column: 20, scope: !18264)
!18270 = !DILocation(line: 859, column: 5, scope: !18264)
!18271 = !DILocation(line: 860, column: 7, scope: !18272)
!18272 = distinct !DILexicalBlock(scope: !18234, file: !1447, line: 860, column: 7)
!18273 = !DILocation(line: 860, column: 10, scope: !18272)
!18274 = !DILocation(line: 860, column: 7, scope: !18234)
!18275 = !DILocation(line: 862, column: 13, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18272, file: !1447, line: 861, column: 5)
!18277 = !DILocation(line: 862, column: 7, scope: !18276)
!18278 = !DILocation(line: 863, column: 15, scope: !18276)
!18279 = !DILocation(line: 864, column: 5, scope: !18276)
!18280 = !DILocation(line: 865, column: 10, scope: !18234)
!18281 = !DILocation(line: 866, column: 1, scope: !18234)
!18282 = distinct !DISubprogram(name: "quotearg_n", scope: !1447, file: !1447, line: 931, type: !1479, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18283 = !DILocalVariable(name: "n", arg: 1, scope: !18282, file: !1447, line: 931, type: !27)
!18284 = !DILocation(line: 931, column: 17, scope: !18282)
!18285 = !DILocalVariable(name: "arg", arg: 2, scope: !18282, file: !1447, line: 931, type: !146)
!18286 = !DILocation(line: 931, column: 32, scope: !18282)
!18287 = !DILocation(line: 933, column: 30, scope: !18282)
!18288 = !DILocation(line: 933, column: 33, scope: !18282)
!18289 = !DILocation(line: 933, column: 10, scope: !18282)
!18290 = !DILocation(line: 933, column: 3, scope: !18282)
!18291 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1447, file: !1447, line: 877, type: !1527, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18292 = !DILocalVariable(name: "n", arg: 1, scope: !18291, file: !1447, line: 877, type: !27)
!18293 = !DILocation(line: 877, column: 25, scope: !18291)
!18294 = !DILocalVariable(name: "arg", arg: 2, scope: !18291, file: !1447, line: 877, type: !146)
!18295 = !DILocation(line: 877, column: 40, scope: !18291)
!18296 = !DILocalVariable(name: "argsize", arg: 3, scope: !18291, file: !1447, line: 877, type: !149)
!18297 = !DILocation(line: 877, column: 52, scope: !18291)
!18298 = !DILocalVariable(name: "options", arg: 4, scope: !18291, file: !1447, line: 878, type: !1457)
!18299 = !DILocation(line: 878, column: 51, scope: !18291)
!18300 = !DILocalVariable(name: "e", scope: !18291, file: !1447, line: 880, type: !27)
!18301 = !DILocation(line: 880, column: 7, scope: !18291)
!18302 = !DILocation(line: 880, column: 11, scope: !18291)
!18303 = !DILocalVariable(name: "sv", scope: !18291, file: !1447, line: 882, type: !1474)
!18304 = !DILocation(line: 882, column: 19, scope: !18291)
!18305 = !DILocation(line: 882, column: 24, scope: !18291)
!18306 = !DILocation(line: 884, column: 7, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18291, file: !1447, line: 884, column: 7)
!18308 = !DILocation(line: 884, column: 9, scope: !18307)
!18309 = !DILocation(line: 884, column: 7, scope: !18291)
!18310 = !DILocation(line: 885, column: 5, scope: !18307)
!18311 = !DILocation(line: 887, column: 7, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18291, file: !1447, line: 887, column: 7)
!18313 = !DILocation(line: 887, column: 17, scope: !18312)
!18314 = !DILocation(line: 887, column: 14, scope: !18312)
!18315 = !DILocation(line: 887, column: 7, scope: !18291)
!18316 = !DILocalVariable(name: "preallocated", scope: !18317, file: !1447, line: 889, type: !141)
!18317 = distinct !DILexicalBlock(scope: !18312, file: !1447, line: 888, column: 5)
!18318 = !DILocation(line: 889, column: 12, scope: !18317)
!18319 = !DILocation(line: 889, column: 28, scope: !18317)
!18320 = !DILocation(line: 889, column: 31, scope: !18317)
!18321 = !DILocalVariable(name: "nmax", scope: !18317, file: !1447, line: 890, type: !27)
!18322 = !DILocation(line: 890, column: 11, scope: !18317)
!18323 = !DILocation(line: 892, column: 11, scope: !18324)
!18324 = distinct !DILexicalBlock(scope: !18317, file: !1447, line: 892, column: 11)
!18325 = !DILocation(line: 892, column: 18, scope: !18324)
!18326 = !DILocation(line: 892, column: 16, scope: !18324)
!18327 = !DILocation(line: 892, column: 11, scope: !18317)
!18328 = !DILocation(line: 893, column: 9, scope: !18324)
!18329 = !DILocation(line: 895, column: 32, scope: !18317)
!18330 = !DILocation(line: 895, column: 54, scope: !18317)
!18331 = !DILocation(line: 895, column: 59, scope: !18317)
!18332 = !DILocation(line: 895, column: 61, scope: !18317)
!18333 = !DILocation(line: 895, column: 58, scope: !18317)
!18334 = !DILocation(line: 895, column: 66, scope: !18317)
!18335 = !DILocation(line: 895, column: 22, scope: !18317)
!18336 = !DILocation(line: 895, column: 20, scope: !18317)
!18337 = !DILocation(line: 895, column: 15, scope: !18317)
!18338 = !DILocation(line: 896, column: 11, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18317, file: !1447, line: 896, column: 11)
!18340 = !DILocation(line: 896, column: 11, scope: !18317)
!18341 = !DILocation(line: 897, column: 10, scope: !18339)
!18342 = !DILocation(line: 897, column: 15, scope: !18339)
!18343 = !{i64 0, i64 8, !2579, i64 8, i64 8, !2442}
!18344 = !DILocation(line: 897, column: 9, scope: !18339)
!18345 = !DILocation(line: 898, column: 15, scope: !18317)
!18346 = !DILocation(line: 898, column: 20, scope: !18317)
!18347 = !DILocation(line: 898, column: 18, scope: !18317)
!18348 = !DILocation(line: 898, column: 7, scope: !18317)
!18349 = !DILocation(line: 898, column: 32, scope: !18317)
!18350 = !DILocation(line: 898, column: 34, scope: !18317)
!18351 = !DILocation(line: 898, column: 40, scope: !18317)
!18352 = !DILocation(line: 898, column: 38, scope: !18317)
!18353 = !DILocation(line: 898, column: 31, scope: !18317)
!18354 = !DILocation(line: 898, column: 48, scope: !18317)
!18355 = !DILocation(line: 899, column: 16, scope: !18317)
!18356 = !DILocation(line: 899, column: 18, scope: !18317)
!18357 = !DILocation(line: 899, column: 14, scope: !18317)
!18358 = !DILocation(line: 900, column: 5, scope: !18317)
!18359 = !DILocalVariable(name: "size", scope: !18360, file: !1447, line: 903, type: !149)
!18360 = distinct !DILexicalBlock(scope: !18291, file: !1447, line: 902, column: 3)
!18361 = !DILocation(line: 903, column: 12, scope: !18360)
!18362 = !DILocation(line: 903, column: 19, scope: !18360)
!18363 = !DILocation(line: 903, column: 22, scope: !18360)
!18364 = !DILocation(line: 903, column: 25, scope: !18360)
!18365 = !DILocalVariable(name: "val", scope: !18360, file: !1447, line: 904, type: !143)
!18366 = !DILocation(line: 904, column: 11, scope: !18360)
!18367 = !DILocation(line: 904, column: 17, scope: !18360)
!18368 = !DILocation(line: 904, column: 20, scope: !18360)
!18369 = !DILocation(line: 904, column: 23, scope: !18360)
!18370 = !DILocalVariable(name: "flags", scope: !18360, file: !1447, line: 906, type: !27)
!18371 = !DILocation(line: 906, column: 9, scope: !18360)
!18372 = !DILocation(line: 906, column: 17, scope: !18360)
!18373 = !DILocation(line: 906, column: 26, scope: !18360)
!18374 = !DILocation(line: 906, column: 32, scope: !18360)
!18375 = !DILocalVariable(name: "qsize", scope: !18360, file: !1447, line: 907, type: !149)
!18376 = !DILocation(line: 907, column: 12, scope: !18360)
!18377 = !DILocation(line: 907, column: 46, scope: !18360)
!18378 = !DILocation(line: 907, column: 51, scope: !18360)
!18379 = !DILocation(line: 907, column: 57, scope: !18360)
!18380 = !DILocation(line: 907, column: 62, scope: !18360)
!18381 = !DILocation(line: 908, column: 46, scope: !18360)
!18382 = !DILocation(line: 908, column: 55, scope: !18360)
!18383 = !DILocation(line: 908, column: 62, scope: !18360)
!18384 = !DILocation(line: 909, column: 46, scope: !18360)
!18385 = !DILocation(line: 909, column: 55, scope: !18360)
!18386 = !DILocation(line: 910, column: 46, scope: !18360)
!18387 = !DILocation(line: 910, column: 55, scope: !18360)
!18388 = !DILocation(line: 911, column: 46, scope: !18360)
!18389 = !DILocation(line: 911, column: 55, scope: !18360)
!18390 = !DILocation(line: 907, column: 20, scope: !18360)
!18391 = !DILocation(line: 913, column: 9, scope: !18392)
!18392 = distinct !DILexicalBlock(scope: !18360, file: !1447, line: 913, column: 9)
!18393 = !DILocation(line: 913, column: 17, scope: !18392)
!18394 = !DILocation(line: 913, column: 14, scope: !18392)
!18395 = !DILocation(line: 913, column: 9, scope: !18360)
!18396 = !DILocation(line: 915, column: 29, scope: !18397)
!18397 = distinct !DILexicalBlock(scope: !18392, file: !1447, line: 914, column: 7)
!18398 = !DILocation(line: 915, column: 35, scope: !18397)
!18399 = !DILocation(line: 915, column: 27, scope: !18397)
!18400 = !DILocation(line: 915, column: 9, scope: !18397)
!18401 = !DILocation(line: 915, column: 12, scope: !18397)
!18402 = !DILocation(line: 915, column: 15, scope: !18397)
!18403 = !DILocation(line: 915, column: 20, scope: !18397)
!18404 = !DILocation(line: 916, column: 13, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18397, file: !1447, line: 916, column: 13)
!18406 = !DILocation(line: 916, column: 17, scope: !18405)
!18407 = !DILocation(line: 916, column: 13, scope: !18397)
!18408 = !DILocation(line: 917, column: 17, scope: !18405)
!18409 = !DILocation(line: 917, column: 11, scope: !18405)
!18410 = !DILocation(line: 918, column: 39, scope: !18397)
!18411 = !DILocation(line: 918, column: 27, scope: !18397)
!18412 = !DILocation(line: 918, column: 25, scope: !18397)
!18413 = !DILocation(line: 918, column: 9, scope: !18397)
!18414 = !DILocation(line: 918, column: 12, scope: !18397)
!18415 = !DILocation(line: 918, column: 15, scope: !18397)
!18416 = !DILocation(line: 918, column: 19, scope: !18397)
!18417 = !DILocation(line: 919, column: 35, scope: !18397)
!18418 = !DILocation(line: 919, column: 40, scope: !18397)
!18419 = !DILocation(line: 919, column: 46, scope: !18397)
!18420 = !DILocation(line: 919, column: 51, scope: !18397)
!18421 = !DILocation(line: 919, column: 60, scope: !18397)
!18422 = !DILocation(line: 919, column: 69, scope: !18397)
!18423 = !DILocation(line: 920, column: 35, scope: !18397)
!18424 = !DILocation(line: 920, column: 42, scope: !18397)
!18425 = !DILocation(line: 920, column: 51, scope: !18397)
!18426 = !DILocation(line: 921, column: 35, scope: !18397)
!18427 = !DILocation(line: 921, column: 44, scope: !18397)
!18428 = !DILocation(line: 922, column: 35, scope: !18397)
!18429 = !DILocation(line: 922, column: 44, scope: !18397)
!18430 = !DILocation(line: 919, column: 9, scope: !18397)
!18431 = !DILocation(line: 923, column: 7, scope: !18397)
!18432 = !DILocation(line: 925, column: 13, scope: !18360)
!18433 = !DILocation(line: 925, column: 5, scope: !18360)
!18434 = !DILocation(line: 925, column: 11, scope: !18360)
!18435 = !DILocation(line: 926, column: 12, scope: !18360)
!18436 = !DILocation(line: 926, column: 5, scope: !18360)
!18437 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1447, file: !1447, line: 937, type: !1481, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18438 = !DILocalVariable(name: "n", arg: 1, scope: !18437, file: !1447, line: 937, type: !27)
!18439 = !DILocation(line: 937, column: 21, scope: !18437)
!18440 = !DILocalVariable(name: "arg", arg: 2, scope: !18437, file: !1447, line: 937, type: !146)
!18441 = !DILocation(line: 937, column: 36, scope: !18437)
!18442 = !DILocalVariable(name: "argsize", arg: 3, scope: !18437, file: !1447, line: 937, type: !149)
!18443 = !DILocation(line: 937, column: 48, scope: !18437)
!18444 = !DILocation(line: 939, column: 30, scope: !18437)
!18445 = !DILocation(line: 939, column: 33, scope: !18437)
!18446 = !DILocation(line: 939, column: 38, scope: !18437)
!18447 = !DILocation(line: 939, column: 10, scope: !18437)
!18448 = !DILocation(line: 939, column: 3, scope: !18437)
!18449 = distinct !DISubprogram(name: "quotearg", scope: !1447, file: !1447, line: 943, type: !572, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18450 = !DILocalVariable(name: "arg", arg: 1, scope: !18449, file: !1447, line: 943, type: !146)
!18451 = !DILocation(line: 943, column: 23, scope: !18449)
!18452 = !DILocation(line: 945, column: 25, scope: !18449)
!18453 = !DILocation(line: 945, column: 10, scope: !18449)
!18454 = !DILocation(line: 945, column: 3, scope: !18449)
!18455 = distinct !DISubprogram(name: "quotearg_mem", scope: !1447, file: !1447, line: 949, type: !1483, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18456 = !DILocalVariable(name: "arg", arg: 1, scope: !18455, file: !1447, line: 949, type: !146)
!18457 = !DILocation(line: 949, column: 27, scope: !18455)
!18458 = !DILocalVariable(name: "argsize", arg: 2, scope: !18455, file: !1447, line: 949, type: !149)
!18459 = !DILocation(line: 949, column: 39, scope: !18455)
!18460 = !DILocation(line: 951, column: 29, scope: !18455)
!18461 = !DILocation(line: 951, column: 34, scope: !18455)
!18462 = !DILocation(line: 951, column: 10, scope: !18455)
!18463 = !DILocation(line: 951, column: 3, scope: !18455)
!18464 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1447, file: !1447, line: 955, type: !1485, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18465 = !DILocalVariable(name: "n", arg: 1, scope: !18464, file: !1447, line: 955, type: !27)
!18466 = !DILocation(line: 955, column: 23, scope: !18464)
!18467 = !DILocalVariable(name: "s", arg: 2, scope: !18464, file: !1447, line: 955, type: !95)
!18468 = !DILocation(line: 955, column: 45, scope: !18464)
!18469 = !DILocalVariable(name: "arg", arg: 3, scope: !18464, file: !1447, line: 955, type: !146)
!18470 = !DILocation(line: 955, column: 60, scope: !18464)
!18471 = !DILocalVariable(name: "o", scope: !18464, file: !1447, line: 957, type: !1458)
!18472 = !DILocation(line: 957, column: 32, scope: !18464)
!18473 = !DILocation(line: 957, column: 64, scope: !18464)
!18474 = !DILocation(line: 957, column: 36, scope: !18464)
!18475 = !DILocation(line: 958, column: 30, scope: !18464)
!18476 = !DILocation(line: 958, column: 33, scope: !18464)
!18477 = !DILocation(line: 958, column: 10, scope: !18464)
!18478 = !DILocation(line: 958, column: 3, scope: !18464)
!18479 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1447, file: !1447, line: 193, type: !1529, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18480 = !DILocalVariable(name: "style", arg: 1, scope: !18479, file: !1447, line: 193, type: !95)
!18481 = !DILocation(line: 193, column: 48, scope: !18479)
!18482 = !DILocalVariable(name: "o", scope: !18479, file: !1447, line: 195, type: !1446)
!18483 = !DILocation(line: 195, column: 26, scope: !18479)
!18484 = !DILocation(line: 196, column: 7, scope: !18485)
!18485 = distinct !DILexicalBlock(scope: !18479, file: !1447, line: 196, column: 7)
!18486 = !DILocation(line: 196, column: 13, scope: !18485)
!18487 = !DILocation(line: 196, column: 7, scope: !18479)
!18488 = !DILocation(line: 197, column: 5, scope: !18485)
!18489 = !DILocation(line: 198, column: 13, scope: !18479)
!18490 = !DILocation(line: 198, column: 5, scope: !18479)
!18491 = !DILocation(line: 198, column: 11, scope: !18479)
!18492 = !DILocation(line: 199, column: 3, scope: !18479)
!18493 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1447, file: !1447, line: 962, type: !1487, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18494 = !DILocalVariable(name: "n", arg: 1, scope: !18493, file: !1447, line: 962, type: !27)
!18495 = !DILocation(line: 962, column: 27, scope: !18493)
!18496 = !DILocalVariable(name: "s", arg: 2, scope: !18493, file: !1447, line: 962, type: !95)
!18497 = !DILocation(line: 962, column: 49, scope: !18493)
!18498 = !DILocalVariable(name: "arg", arg: 3, scope: !18493, file: !1447, line: 963, type: !146)
!18499 = !DILocation(line: 963, column: 35, scope: !18493)
!18500 = !DILocalVariable(name: "argsize", arg: 4, scope: !18493, file: !1447, line: 963, type: !149)
!18501 = !DILocation(line: 963, column: 47, scope: !18493)
!18502 = !DILocalVariable(name: "o", scope: !18493, file: !1447, line: 965, type: !1458)
!18503 = !DILocation(line: 965, column: 32, scope: !18493)
!18504 = !DILocation(line: 965, column: 64, scope: !18493)
!18505 = !DILocation(line: 965, column: 36, scope: !18493)
!18506 = !DILocation(line: 966, column: 30, scope: !18493)
!18507 = !DILocation(line: 966, column: 33, scope: !18493)
!18508 = !DILocation(line: 966, column: 38, scope: !18493)
!18509 = !DILocation(line: 966, column: 10, scope: !18493)
!18510 = !DILocation(line: 966, column: 3, scope: !18493)
!18511 = distinct !DISubprogram(name: "quotearg_style", scope: !1447, file: !1447, line: 970, type: !1489, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18512 = !DILocalVariable(name: "s", arg: 1, scope: !18511, file: !1447, line: 970, type: !95)
!18513 = !DILocation(line: 970, column: 36, scope: !18511)
!18514 = !DILocalVariable(name: "arg", arg: 2, scope: !18511, file: !1447, line: 970, type: !146)
!18515 = !DILocation(line: 970, column: 51, scope: !18511)
!18516 = !DILocation(line: 972, column: 31, scope: !18511)
!18517 = !DILocation(line: 972, column: 34, scope: !18511)
!18518 = !DILocation(line: 972, column: 10, scope: !18511)
!18519 = !DILocation(line: 972, column: 3, scope: !18511)
!18520 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1447, file: !1447, line: 976, type: !1491, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18521 = !DILocalVariable(name: "s", arg: 1, scope: !18520, file: !1447, line: 976, type: !95)
!18522 = !DILocation(line: 976, column: 40, scope: !18520)
!18523 = !DILocalVariable(name: "arg", arg: 2, scope: !18520, file: !1447, line: 976, type: !146)
!18524 = !DILocation(line: 976, column: 55, scope: !18520)
!18525 = !DILocalVariable(name: "argsize", arg: 3, scope: !18520, file: !1447, line: 976, type: !149)
!18526 = !DILocation(line: 976, column: 67, scope: !18520)
!18527 = !DILocation(line: 978, column: 35, scope: !18520)
!18528 = !DILocation(line: 978, column: 38, scope: !18520)
!18529 = !DILocation(line: 978, column: 43, scope: !18520)
!18530 = !DILocation(line: 978, column: 10, scope: !18520)
!18531 = !DILocation(line: 978, column: 3, scope: !18520)
!18532 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1447, file: !1447, line: 982, type: !1493, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18533 = !DILocalVariable(name: "arg", arg: 1, scope: !18532, file: !1447, line: 982, type: !146)
!18534 = !DILocation(line: 982, column: 32, scope: !18532)
!18535 = !DILocalVariable(name: "argsize", arg: 2, scope: !18532, file: !1447, line: 982, type: !149)
!18536 = !DILocation(line: 982, column: 44, scope: !18532)
!18537 = !DILocalVariable(name: "ch", arg: 3, scope: !18532, file: !1447, line: 982, type: !144)
!18538 = !DILocation(line: 982, column: 58, scope: !18532)
!18539 = !DILocalVariable(name: "options", scope: !18532, file: !1447, line: 984, type: !1446)
!18540 = !DILocation(line: 984, column: 26, scope: !18532)
!18541 = !DILocation(line: 985, column: 13, scope: !18532)
!18542 = !{i64 0, i64 4, !2497, i64 4, i64 4, !2436, i64 8, i64 32, !2497, i64 40, i64 8, !2442, i64 48, i64 8, !2442}
!18543 = !DILocation(line: 986, column: 31, scope: !18532)
!18544 = !DILocation(line: 986, column: 3, scope: !18532)
!18545 = !DILocation(line: 987, column: 33, scope: !18532)
!18546 = !DILocation(line: 987, column: 38, scope: !18532)
!18547 = !DILocation(line: 987, column: 10, scope: !18532)
!18548 = !DILocation(line: 987, column: 3, scope: !18532)
!18549 = distinct !DISubprogram(name: "quotearg_char", scope: !1447, file: !1447, line: 991, type: !1495, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18550 = !DILocalVariable(name: "arg", arg: 1, scope: !18549, file: !1447, line: 991, type: !146)
!18551 = !DILocation(line: 991, column: 28, scope: !18549)
!18552 = !DILocalVariable(name: "ch", arg: 2, scope: !18549, file: !1447, line: 991, type: !144)
!18553 = !DILocation(line: 991, column: 38, scope: !18549)
!18554 = !DILocation(line: 993, column: 29, scope: !18549)
!18555 = !DILocation(line: 993, column: 44, scope: !18549)
!18556 = !DILocation(line: 993, column: 10, scope: !18549)
!18557 = !DILocation(line: 993, column: 3, scope: !18549)
!18558 = distinct !DISubprogram(name: "quotearg_colon", scope: !1447, file: !1447, line: 997, type: !572, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18559 = !DILocalVariable(name: "arg", arg: 1, scope: !18558, file: !1447, line: 997, type: !146)
!18560 = !DILocation(line: 997, column: 29, scope: !18558)
!18561 = !DILocation(line: 999, column: 25, scope: !18558)
!18562 = !DILocation(line: 999, column: 10, scope: !18558)
!18563 = !DILocation(line: 999, column: 3, scope: !18558)
!18564 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1447, file: !1447, line: 1003, type: !1483, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18565 = !DILocalVariable(name: "arg", arg: 1, scope: !18564, file: !1447, line: 1003, type: !146)
!18566 = !DILocation(line: 1003, column: 33, scope: !18564)
!18567 = !DILocalVariable(name: "argsize", arg: 2, scope: !18564, file: !1447, line: 1003, type: !149)
!18568 = !DILocation(line: 1003, column: 45, scope: !18564)
!18569 = !DILocation(line: 1005, column: 29, scope: !18564)
!18570 = !DILocation(line: 1005, column: 34, scope: !18564)
!18571 = !DILocation(line: 1005, column: 10, scope: !18564)
!18572 = !DILocation(line: 1005, column: 3, scope: !18564)
!18573 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1447, file: !1447, line: 1009, type: !1485, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18574 = !DILocalVariable(name: "n", arg: 1, scope: !18573, file: !1447, line: 1009, type: !27)
!18575 = !DILocation(line: 1009, column: 29, scope: !18573)
!18576 = !DILocalVariable(name: "s", arg: 2, scope: !18573, file: !1447, line: 1009, type: !95)
!18577 = !DILocation(line: 1009, column: 51, scope: !18573)
!18578 = !DILocalVariable(name: "arg", arg: 3, scope: !18573, file: !1447, line: 1009, type: !146)
!18579 = !DILocation(line: 1009, column: 66, scope: !18573)
!18580 = !DILocalVariable(name: "options", scope: !18573, file: !1447, line: 1011, type: !1446)
!18581 = !DILocation(line: 1011, column: 26, scope: !18573)
!18582 = !DILocation(line: 1012, column: 41, scope: !18573)
!18583 = !DILocation(line: 1012, column: 13, scope: !18573)
!18584 = !DILocation(line: 1013, column: 3, scope: !18573)
!18585 = !DILocation(line: 1014, column: 30, scope: !18573)
!18586 = !DILocation(line: 1014, column: 33, scope: !18573)
!18587 = !DILocation(line: 1014, column: 10, scope: !18573)
!18588 = !DILocation(line: 1014, column: 3, scope: !18573)
!18589 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1447, file: !1447, line: 1018, type: !1497, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18590 = !DILocalVariable(name: "n", arg: 1, scope: !18589, file: !1447, line: 1018, type: !27)
!18591 = !DILocation(line: 1018, column: 24, scope: !18589)
!18592 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18589, file: !1447, line: 1018, type: !146)
!18593 = !DILocation(line: 1018, column: 39, scope: !18589)
!18594 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18589, file: !1447, line: 1019, type: !146)
!18595 = !DILocation(line: 1019, column: 32, scope: !18589)
!18596 = !DILocalVariable(name: "arg", arg: 4, scope: !18589, file: !1447, line: 1019, type: !146)
!18597 = !DILocation(line: 1019, column: 57, scope: !18589)
!18598 = !DILocation(line: 1021, column: 33, scope: !18589)
!18599 = !DILocation(line: 1021, column: 36, scope: !18589)
!18600 = !DILocation(line: 1021, column: 48, scope: !18589)
!18601 = !DILocation(line: 1021, column: 61, scope: !18589)
!18602 = !DILocation(line: 1021, column: 10, scope: !18589)
!18603 = !DILocation(line: 1021, column: 3, scope: !18589)
!18604 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1447, file: !1447, line: 1026, type: !1499, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18605 = !DILocalVariable(name: "n", arg: 1, scope: !18604, file: !1447, line: 1026, type: !27)
!18606 = !DILocation(line: 1026, column: 28, scope: !18604)
!18607 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18604, file: !1447, line: 1026, type: !146)
!18608 = !DILocation(line: 1026, column: 43, scope: !18604)
!18609 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18604, file: !1447, line: 1027, type: !146)
!18610 = !DILocation(line: 1027, column: 36, scope: !18604)
!18611 = !DILocalVariable(name: "arg", arg: 4, scope: !18604, file: !1447, line: 1028, type: !146)
!18612 = !DILocation(line: 1028, column: 36, scope: !18604)
!18613 = !DILocalVariable(name: "argsize", arg: 5, scope: !18604, file: !1447, line: 1028, type: !149)
!18614 = !DILocation(line: 1028, column: 48, scope: !18604)
!18615 = !DILocalVariable(name: "o", scope: !18604, file: !1447, line: 1030, type: !1446)
!18616 = !DILocation(line: 1030, column: 26, scope: !18604)
!18617 = !DILocation(line: 1030, column: 30, scope: !18604)
!18618 = !DILocation(line: 1031, column: 27, scope: !18604)
!18619 = !DILocation(line: 1031, column: 39, scope: !18604)
!18620 = !DILocation(line: 1031, column: 3, scope: !18604)
!18621 = !DILocation(line: 1032, column: 30, scope: !18604)
!18622 = !DILocation(line: 1032, column: 33, scope: !18604)
!18623 = !DILocation(line: 1032, column: 38, scope: !18604)
!18624 = !DILocation(line: 1032, column: 10, scope: !18604)
!18625 = !DILocation(line: 1032, column: 3, scope: !18604)
!18626 = distinct !DISubprogram(name: "quotearg_custom", scope: !1447, file: !1447, line: 1036, type: !1501, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18627 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18626, file: !1447, line: 1036, type: !146)
!18628 = !DILocation(line: 1036, column: 30, scope: !18626)
!18629 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18626, file: !1447, line: 1036, type: !146)
!18630 = !DILocation(line: 1036, column: 54, scope: !18626)
!18631 = !DILocalVariable(name: "arg", arg: 3, scope: !18626, file: !1447, line: 1037, type: !146)
!18632 = !DILocation(line: 1037, column: 30, scope: !18626)
!18633 = !DILocation(line: 1039, column: 32, scope: !18626)
!18634 = !DILocation(line: 1039, column: 44, scope: !18626)
!18635 = !DILocation(line: 1039, column: 57, scope: !18626)
!18636 = !DILocation(line: 1039, column: 10, scope: !18626)
!18637 = !DILocation(line: 1039, column: 3, scope: !18626)
!18638 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1447, file: !1447, line: 1043, type: !1503, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18639 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18638, file: !1447, line: 1043, type: !146)
!18640 = !DILocation(line: 1043, column: 34, scope: !18638)
!18641 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18638, file: !1447, line: 1043, type: !146)
!18642 = !DILocation(line: 1043, column: 58, scope: !18638)
!18643 = !DILocalVariable(name: "arg", arg: 3, scope: !18638, file: !1447, line: 1044, type: !146)
!18644 = !DILocation(line: 1044, column: 34, scope: !18638)
!18645 = !DILocalVariable(name: "argsize", arg: 4, scope: !18638, file: !1447, line: 1044, type: !149)
!18646 = !DILocation(line: 1044, column: 46, scope: !18638)
!18647 = !DILocation(line: 1046, column: 36, scope: !18638)
!18648 = !DILocation(line: 1046, column: 48, scope: !18638)
!18649 = !DILocation(line: 1046, column: 61, scope: !18638)
!18650 = !DILocation(line: 1047, column: 33, scope: !18638)
!18651 = !DILocation(line: 1046, column: 10, scope: !18638)
!18652 = !DILocation(line: 1046, column: 3, scope: !18638)
!18653 = distinct !DISubprogram(name: "quote_n_mem", scope: !1447, file: !1447, line: 1061, type: !1505, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18654 = !DILocalVariable(name: "n", arg: 1, scope: !18653, file: !1447, line: 1061, type: !27)
!18655 = !DILocation(line: 1061, column: 18, scope: !18653)
!18656 = !DILocalVariable(name: "arg", arg: 2, scope: !18653, file: !1447, line: 1061, type: !146)
!18657 = !DILocation(line: 1061, column: 33, scope: !18653)
!18658 = !DILocalVariable(name: "argsize", arg: 3, scope: !18653, file: !1447, line: 1061, type: !149)
!18659 = !DILocation(line: 1061, column: 45, scope: !18653)
!18660 = !DILocation(line: 1063, column: 30, scope: !18653)
!18661 = !DILocation(line: 1063, column: 33, scope: !18653)
!18662 = !DILocation(line: 1063, column: 38, scope: !18653)
!18663 = !DILocation(line: 1063, column: 10, scope: !18653)
!18664 = !DILocation(line: 1063, column: 3, scope: !18653)
!18665 = distinct !DISubprogram(name: "quote_mem", scope: !1447, file: !1447, line: 1067, type: !1507, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18666 = !DILocalVariable(name: "arg", arg: 1, scope: !18665, file: !1447, line: 1067, type: !146)
!18667 = !DILocation(line: 1067, column: 24, scope: !18665)
!18668 = !DILocalVariable(name: "argsize", arg: 2, scope: !18665, file: !1447, line: 1067, type: !149)
!18669 = !DILocation(line: 1067, column: 36, scope: !18665)
!18670 = !DILocation(line: 1069, column: 26, scope: !18665)
!18671 = !DILocation(line: 1069, column: 31, scope: !18665)
!18672 = !DILocation(line: 1069, column: 10, scope: !18665)
!18673 = !DILocation(line: 1069, column: 3, scope: !18665)
!18674 = distinct !DISubprogram(name: "quote_n", scope: !1447, file: !1447, line: 1073, type: !1509, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18675 = !DILocalVariable(name: "n", arg: 1, scope: !18674, file: !1447, line: 1073, type: !27)
!18676 = !DILocation(line: 1073, column: 14, scope: !18674)
!18677 = !DILocalVariable(name: "arg", arg: 2, scope: !18674, file: !1447, line: 1073, type: !146)
!18678 = !DILocation(line: 1073, column: 29, scope: !18674)
!18679 = !DILocation(line: 1075, column: 23, scope: !18674)
!18680 = !DILocation(line: 1075, column: 26, scope: !18674)
!18681 = !DILocation(line: 1075, column: 10, scope: !18674)
!18682 = !DILocation(line: 1075, column: 3, scope: !18674)
!18683 = distinct !DISubprogram(name: "quote", scope: !1447, file: !1447, line: 1079, type: !579, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18684 = !DILocalVariable(name: "arg", arg: 1, scope: !18683, file: !1447, line: 1079, type: !146)
!18685 = !DILocation(line: 1079, column: 20, scope: !18683)
!18686 = !DILocation(line: 1081, column: 22, scope: !18683)
!18687 = !DILocation(line: 1081, column: 10, scope: !18683)
!18688 = !DILocation(line: 1081, column: 3, scope: !18683)
!18689 = distinct !DISubprogram(name: "same_name", scope: !18690, file: !18690, line: 61, type: !1955, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1952, retainedNodes: !152)
!18690 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!18691 = !DILocalVariable(name: "source", arg: 1, scope: !18689, file: !18690, line: 61, type: !146)
!18692 = !DILocation(line: 61, column: 24, scope: !18689)
!18693 = !DILocalVariable(name: "dest", arg: 2, scope: !18689, file: !18690, line: 61, type: !146)
!18694 = !DILocation(line: 61, column: 44, scope: !18689)
!18695 = !DILocation(line: 63, column: 33, scope: !18689)
!18696 = !DILocation(line: 63, column: 51, scope: !18689)
!18697 = !DILocation(line: 63, column: 10, scope: !18689)
!18698 = !DILocation(line: 63, column: 3, scope: !18689)
!18699 = distinct !DISubprogram(name: "same_nameat", scope: !18690, file: !18690, line: 70, type: !1957, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1952, retainedNodes: !152)
!18700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !18701)
!18701 = !{!18702, !18703, !18704, !18705, !18706, !18707, !18708, !18709, !18710, !18711, !18712, !18713, !18718, !18719, !18720}
!18702 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !18700, file: !192, line: 48, baseType: !195, size: 64)
!18703 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !18700, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!18704 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !18700, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!18705 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !18700, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!18706 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !18700, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!18707 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !18700, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!18708 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18700, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!18709 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !18700, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!18710 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !18700, file: !192, line: 74, baseType: !181, size: 64, offset: 384)
!18711 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !18700, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!18712 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !18700, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!18713 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !18700, file: !192, line: 91, baseType: !18714, size: 128, offset: 576)
!18714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !18715)
!18715 = !{!18716, !18717}
!18716 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18714, file: !215, line: 11, baseType: !164, size: 64)
!18717 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18714, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!18718 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !18700, file: !192, line: 92, baseType: !18714, size: 128, offset: 704)
!18719 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !18700, file: !192, line: 93, baseType: !18714, size: 128, offset: 832)
!18720 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !18700, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!18721 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !18699, file: !18690, line: 70, type: !27)
!18722 = !DILocation(line: 70, column: 18, scope: !18699)
!18723 = !DILocalVariable(name: "source", arg: 2, scope: !18699, file: !18690, line: 70, type: !146)
!18724 = !DILocation(line: 70, column: 42, scope: !18699)
!18725 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !18699, file: !18690, line: 71, type: !27)
!18726 = !DILocation(line: 71, column: 18, scope: !18699)
!18727 = !DILocalVariable(name: "dest", arg: 4, scope: !18699, file: !18690, line: 71, type: !146)
!18728 = !DILocation(line: 71, column: 40, scope: !18699)
!18729 = !DILocalVariable(name: "source_basename", scope: !18699, file: !18690, line: 74, type: !146)
!18730 = !DILocation(line: 74, column: 15, scope: !18699)
!18731 = !DILocation(line: 74, column: 49, scope: !18699)
!18732 = !DILocation(line: 74, column: 33, scope: !18699)
!18733 = !DILocalVariable(name: "dest_basename", scope: !18699, file: !18690, line: 75, type: !146)
!18734 = !DILocation(line: 75, column: 15, scope: !18699)
!18735 = !DILocation(line: 75, column: 47, scope: !18699)
!18736 = !DILocation(line: 75, column: 31, scope: !18699)
!18737 = !DILocalVariable(name: "source_baselen", scope: !18699, file: !18690, line: 76, type: !149)
!18738 = !DILocation(line: 76, column: 10, scope: !18699)
!18739 = !DILocation(line: 76, column: 37, scope: !18699)
!18740 = !DILocation(line: 76, column: 27, scope: !18699)
!18741 = !DILocalVariable(name: "dest_baselen", scope: !18699, file: !18690, line: 77, type: !149)
!18742 = !DILocation(line: 77, column: 10, scope: !18699)
!18743 = !DILocation(line: 77, column: 35, scope: !18699)
!18744 = !DILocation(line: 77, column: 25, scope: !18699)
!18745 = !DILocalVariable(name: "identical_basenames", scope: !18699, file: !18690, line: 78, type: !141)
!18746 = !DILocation(line: 78, column: 8, scope: !18699)
!18747 = !DILocation(line: 79, column: 6, scope: !18699)
!18748 = !DILocation(line: 79, column: 24, scope: !18699)
!18749 = !DILocation(line: 79, column: 21, scope: !18699)
!18750 = !DILocation(line: 80, column: 6, scope: !18699)
!18751 = !DILocation(line: 80, column: 17, scope: !18699)
!18752 = !DILocation(line: 80, column: 34, scope: !18699)
!18753 = !DILocation(line: 80, column: 49, scope: !18699)
!18754 = !DILocation(line: 80, column: 9, scope: !18699)
!18755 = !DILocation(line: 80, column: 63, scope: !18699)
!18756 = !DILocation(line: 0, scope: !18699)
!18757 = !DILocalVariable(name: "compare_dirs", scope: !18699, file: !18690, line: 81, type: !141)
!18758 = !DILocation(line: 81, column: 8, scope: !18699)
!18759 = !DILocation(line: 81, column: 23, scope: !18699)
!18760 = !DILocalVariable(name: "same", scope: !18699, file: !18690, line: 82, type: !141)
!18761 = !DILocation(line: 82, column: 8, scope: !18699)
!18762 = !DILocation(line: 92, column: 7, scope: !18763)
!18763 = distinct !DILexicalBlock(scope: !18699, file: !18690, line: 92, column: 7)
!18764 = !DILocation(line: 92, column: 7, scope: !18699)
!18765 = !DILocalVariable(name: "source_dir_stats", scope: !18766, file: !18690, line: 94, type: !18700)
!18766 = distinct !DILexicalBlock(scope: !18763, file: !18690, line: 93, column: 5)
!18767 = !DILocation(line: 94, column: 19, scope: !18766)
!18768 = !DILocalVariable(name: "dest_dir_stats", scope: !18766, file: !18690, line: 95, type: !18700)
!18769 = !DILocation(line: 95, column: 19, scope: !18766)
!18770 = !DILocalVariable(name: "source_dirname", scope: !18766, file: !18690, line: 98, type: !143)
!18771 = !DILocation(line: 98, column: 13, scope: !18766)
!18772 = !DILocation(line: 98, column: 40, scope: !18766)
!18773 = !DILocation(line: 98, column: 30, scope: !18766)
!18774 = !DILocalVariable(name: "flags", scope: !18766, file: !18690, line: 99, type: !27)
!18775 = !DILocation(line: 99, column: 11, scope: !18766)
!18776 = !DILocation(line: 100, column: 20, scope: !18777)
!18777 = distinct !DILexicalBlock(scope: !18766, file: !18690, line: 100, column: 11)
!18778 = !DILocation(line: 100, column: 32, scope: !18777)
!18779 = !DILocation(line: 100, column: 67, scope: !18777)
!18780 = !DILocation(line: 100, column: 11, scope: !18777)
!18781 = !DILocation(line: 100, column: 74, scope: !18777)
!18782 = !DILocation(line: 100, column: 11, scope: !18766)
!18783 = !DILocation(line: 103, column: 21, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18777, file: !18690, line: 101, column: 9)
!18785 = !DILocation(line: 103, column: 34, scope: !18784)
!18786 = !DILocation(line: 103, column: 11, scope: !18784)
!18787 = !DILocation(line: 104, column: 9, scope: !18784)
!18788 = !DILocation(line: 105, column: 13, scope: !18766)
!18789 = !DILocation(line: 105, column: 7, scope: !18766)
!18790 = !DILocalVariable(name: "dest_dirname", scope: !18766, file: !18690, line: 107, type: !143)
!18791 = !DILocation(line: 107, column: 13, scope: !18766)
!18792 = !DILocation(line: 107, column: 38, scope: !18766)
!18793 = !DILocation(line: 107, column: 28, scope: !18766)
!18794 = !DILocation(line: 137, column: 20, scope: !18795)
!18795 = distinct !DILexicalBlock(scope: !18766, file: !18690, line: 137, column: 11)
!18796 = !DILocation(line: 137, column: 30, scope: !18795)
!18797 = !DILocation(line: 137, column: 61, scope: !18795)
!18798 = !DILocation(line: 137, column: 11, scope: !18795)
!18799 = !DILocation(line: 137, column: 68, scope: !18795)
!18800 = !DILocation(line: 137, column: 11, scope: !18766)
!18801 = !DILocation(line: 140, column: 21, scope: !18802)
!18802 = distinct !DILexicalBlock(scope: !18795, file: !18690, line: 138, column: 9)
!18803 = !DILocation(line: 140, column: 34, scope: !18802)
!18804 = !DILocation(line: 140, column: 11, scope: !18802)
!18805 = !DILocation(line: 141, column: 9, scope: !18802)
!18806 = !DILocation(line: 142, column: 14, scope: !18766)
!18807 = !DILocation(line: 0, scope: !18766)
!18808 = !DILocation(line: 142, column: 12, scope: !18766)
!18809 = !DILocation(line: 145, column: 13, scope: !18766)
!18810 = !DILocation(line: 145, column: 7, scope: !18766)
!18811 = !DILocation(line: 146, column: 5, scope: !18766)
!18812 = !DILocation(line: 148, column: 10, scope: !18699)
!18813 = !DILocation(line: 148, column: 3, scope: !18699)
!18814 = distinct !DISubprogram(name: "getcon", scope: !1966, file: !1966, line: 87, type: !1962, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18815 = !DILocalVariable(name: "con", arg: 1, scope: !18814, file: !1966, line: 87, type: !1964)
!18816 = !DILocation(line: 87, column: 29, scope: !18814)
!18817 = !DILocation(line: 88, column: 5, scope: !18814)
!18818 = !DILocation(line: 88, column: 11, scope: !18814)
!18819 = !DILocation(line: 88, column: 22, scope: !18814)
!18820 = distinct !DISubprogram(name: "freecon", scope: !1966, file: !1966, line: 90, type: !1967, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18821 = !DILocalVariable(name: "con", arg: 1, scope: !18820, file: !1966, line: 90, type: !1965)
!18822 = !DILocation(line: 90, column: 29, scope: !18820)
!18823 = !DILocation(line: 90, column: 56, scope: !18820)
!18824 = distinct !DISubprogram(name: "getfscreatecon", scope: !1966, file: !1966, line: 93, type: !1962, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18825 = !DILocalVariable(name: "con", arg: 1, scope: !18824, file: !1966, line: 93, type: !1964)
!18826 = !DILocation(line: 93, column: 37, scope: !18824)
!18827 = !DILocation(line: 94, column: 5, scope: !18824)
!18828 = !DILocation(line: 94, column: 11, scope: !18824)
!18829 = !DILocation(line: 94, column: 22, scope: !18824)
!18830 = distinct !DISubprogram(name: "setfscreatecon", scope: !1966, file: !1966, line: 96, type: !1969, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18831 = !DILocalVariable(name: "con", arg: 1, scope: !18830, file: !1966, line: 96, type: !1965)
!18832 = !DILocation(line: 96, column: 36, scope: !18830)
!18833 = !DILocation(line: 97, column: 5, scope: !18830)
!18834 = !DILocation(line: 97, column: 11, scope: !18830)
!18835 = !DILocation(line: 97, column: 22, scope: !18830)
!18836 = distinct !DISubprogram(name: "matchpathcon", scope: !1966, file: !1966, line: 99, type: !1971, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18837 = !DILocalVariable(name: "file", arg: 1, scope: !18836, file: !1966, line: 99, type: !146)
!18838 = !DILocation(line: 99, column: 27, scope: !18836)
!18839 = !DILocalVariable(name: "m", arg: 2, scope: !18836, file: !1966, line: 100, type: !228)
!18840 = !DILocation(line: 100, column: 22, scope: !18836)
!18841 = !DILocalVariable(name: "con", arg: 3, scope: !18836, file: !1966, line: 101, type: !1964)
!18842 = !DILocation(line: 101, column: 23, scope: !18836)
!18843 = !DILocation(line: 102, column: 5, scope: !18836)
!18844 = !DILocation(line: 102, column: 11, scope: !18836)
!18845 = !DILocation(line: 102, column: 22, scope: !18836)
!18846 = distinct !DISubprogram(name: "getfilecon", scope: !1966, file: !1966, line: 104, type: !1973, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18847 = !DILocalVariable(name: "file", arg: 1, scope: !18846, file: !1966, line: 104, type: !146)
!18848 = !DILocation(line: 104, column: 25, scope: !18846)
!18849 = !DILocalVariable(name: "con", arg: 2, scope: !18846, file: !1966, line: 105, type: !1964)
!18850 = !DILocation(line: 105, column: 33, scope: !18846)
!18851 = !DILocation(line: 106, column: 5, scope: !18846)
!18852 = !DILocation(line: 106, column: 11, scope: !18846)
!18853 = !DILocation(line: 106, column: 22, scope: !18846)
!18854 = distinct !DISubprogram(name: "lgetfilecon", scope: !1966, file: !1966, line: 108, type: !1973, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18855 = !DILocalVariable(name: "file", arg: 1, scope: !18854, file: !1966, line: 108, type: !146)
!18856 = !DILocation(line: 108, column: 26, scope: !18854)
!18857 = !DILocalVariable(name: "con", arg: 2, scope: !18854, file: !1966, line: 109, type: !1964)
!18858 = !DILocation(line: 109, column: 34, scope: !18854)
!18859 = !DILocation(line: 110, column: 5, scope: !18854)
!18860 = !DILocation(line: 110, column: 11, scope: !18854)
!18861 = !DILocation(line: 110, column: 22, scope: !18854)
!18862 = distinct !DISubprogram(name: "fgetfilecon", scope: !1966, file: !1966, line: 112, type: !1975, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18863 = !DILocalVariable(name: "fd", arg: 1, scope: !18862, file: !1966, line: 112, type: !27)
!18864 = !DILocation(line: 112, column: 18, scope: !18862)
!18865 = !DILocalVariable(name: "con", arg: 2, scope: !18862, file: !1966, line: 112, type: !1964)
!18866 = !DILocation(line: 112, column: 42, scope: !18862)
!18867 = !DILocation(line: 113, column: 5, scope: !18862)
!18868 = !DILocation(line: 113, column: 11, scope: !18862)
!18869 = !DILocation(line: 113, column: 22, scope: !18862)
!18870 = distinct !DISubprogram(name: "setfilecon", scope: !1966, file: !1966, line: 115, type: !1977, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18871 = !DILocalVariable(name: "file", arg: 1, scope: !18870, file: !1966, line: 115, type: !146)
!18872 = !DILocation(line: 115, column: 25, scope: !18870)
!18873 = !DILocalVariable(name: "con", arg: 2, scope: !18870, file: !1966, line: 116, type: !1965)
!18874 = !DILocation(line: 116, column: 32, scope: !18870)
!18875 = !DILocation(line: 117, column: 5, scope: !18870)
!18876 = !DILocation(line: 117, column: 11, scope: !18870)
!18877 = !DILocation(line: 117, column: 22, scope: !18870)
!18878 = distinct !DISubprogram(name: "lsetfilecon", scope: !1966, file: !1966, line: 119, type: !1977, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18879 = !DILocalVariable(name: "file", arg: 1, scope: !18878, file: !1966, line: 119, type: !146)
!18880 = !DILocation(line: 119, column: 26, scope: !18878)
!18881 = !DILocalVariable(name: "con", arg: 2, scope: !18878, file: !1966, line: 120, type: !1965)
!18882 = !DILocation(line: 120, column: 33, scope: !18878)
!18883 = !DILocation(line: 121, column: 5, scope: !18878)
!18884 = !DILocation(line: 121, column: 11, scope: !18878)
!18885 = !DILocation(line: 121, column: 22, scope: !18878)
!18886 = distinct !DISubprogram(name: "fsetfilecon", scope: !1966, file: !1966, line: 123, type: !1979, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18887 = !DILocalVariable(name: "fd", arg: 1, scope: !18886, file: !1966, line: 123, type: !27)
!18888 = !DILocation(line: 123, column: 18, scope: !18886)
!18889 = !DILocalVariable(name: "con", arg: 2, scope: !18886, file: !1966, line: 124, type: !1965)
!18890 = !DILocation(line: 124, column: 33, scope: !18886)
!18891 = !DILocation(line: 125, column: 5, scope: !18886)
!18892 = !DILocation(line: 125, column: 11, scope: !18886)
!18893 = !DILocation(line: 125, column: 22, scope: !18886)
!18894 = distinct !DISubprogram(name: "security_check_context", scope: !1966, file: !1966, line: 128, type: !1969, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18895 = !DILocalVariable(name: "con", arg: 1, scope: !18894, file: !1966, line: 128, type: !1965)
!18896 = !DILocation(line: 128, column: 44, scope: !18894)
!18897 = !DILocation(line: 129, column: 5, scope: !18894)
!18898 = !DILocation(line: 129, column: 11, scope: !18894)
!18899 = !DILocation(line: 129, column: 22, scope: !18894)
!18900 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1966, file: !1966, line: 131, type: !1969, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18901 = !DILocalVariable(name: "con", arg: 1, scope: !18900, file: !1966, line: 131, type: !1965)
!18902 = !DILocation(line: 131, column: 48, scope: !18900)
!18903 = !DILocation(line: 132, column: 5, scope: !18900)
!18904 = !DILocation(line: 132, column: 11, scope: !18900)
!18905 = !DILocation(line: 132, column: 22, scope: !18900)
!18906 = distinct !DISubprogram(name: "setexeccon", scope: !1966, file: !1966, line: 134, type: !1969, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18907 = !DILocalVariable(name: "con", arg: 1, scope: !18906, file: !1966, line: 134, type: !1965)
!18908 = !DILocation(line: 134, column: 32, scope: !18906)
!18909 = !DILocation(line: 135, column: 5, scope: !18906)
!18910 = !DILocation(line: 135, column: 11, scope: !18906)
!18911 = !DILocation(line: 135, column: 22, scope: !18906)
!18912 = distinct !DISubprogram(name: "security_compute_create", scope: !1966, file: !1966, line: 137, type: !1981, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18913 = !DILocalVariable(name: "scon", arg: 1, scope: !18912, file: !1966, line: 137, type: !1965)
!18914 = !DILocation(line: 137, column: 45, scope: !18912)
!18915 = !DILocalVariable(name: "tcon", arg: 2, scope: !18912, file: !1966, line: 138, type: !1965)
!18916 = !DILocation(line: 138, column: 45, scope: !18912)
!18917 = !DILocalVariable(name: "tclass", arg: 3, scope: !18912, file: !1966, line: 139, type: !1983)
!18918 = !DILocation(line: 139, column: 43, scope: !18912)
!18919 = !DILocalVariable(name: "newcon", arg: 4, scope: !18912, file: !1966, line: 140, type: !1964)
!18920 = !DILocation(line: 140, column: 46, scope: !18912)
!18921 = !DILocation(line: 141, column: 5, scope: !18912)
!18922 = !DILocation(line: 141, column: 11, scope: !18912)
!18923 = !DILocation(line: 141, column: 22, scope: !18912)
!18924 = distinct !DISubprogram(name: "string_to_security_class", scope: !1966, file: !1966, line: 143, type: !1984, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18925 = !DILocalVariable(name: "name", arg: 1, scope: !18924, file: !1966, line: 143, type: !146)
!18926 = !DILocation(line: 143, column: 39, scope: !18924)
!18927 = !DILocation(line: 144, column: 5, scope: !18924)
!18928 = !DILocation(line: 144, column: 11, scope: !18924)
!18929 = !DILocation(line: 144, column: 22, scope: !18924)
!18930 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1966, file: !1966, line: 146, type: !731, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18931 = !DILocalVariable(name: "path", arg: 1, scope: !18930, file: !1966, line: 146, type: !146)
!18932 = !DILocation(line: 146, column: 39, scope: !18930)
!18933 = !DILocalVariable(name: "prefix", arg: 2, scope: !18930, file: !1966, line: 147, type: !146)
!18934 = !DILocation(line: 147, column: 39, scope: !18930)
!18935 = !DILocation(line: 148, column: 5, scope: !18930)
!18936 = !DILocation(line: 148, column: 11, scope: !18930)
!18937 = !DILocation(line: 148, column: 22, scope: !18930)
!18938 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !18939, file: !18939, line: 66, type: !1989, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18939 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/clone/coreutils")
!18940 = !DILocalVariable(name: "st", arg: 1, scope: !18938, file: !18939, line: 66, type: !1991)
!18941 = !DILocation(line: 66, column: 39, scope: !18938)
!18942 = !DILocation(line: 69, column: 10, scope: !18938)
!18943 = !DILocation(line: 69, column: 38, scope: !18938)
!18944 = !{!3810, !2467, i64 80}
!18945 = !DILocation(line: 69, column: 3, scope: !18938)
!18946 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !18939, file: !18939, line: 79, type: !1989, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18947 = !DILocalVariable(name: "st", arg: 1, scope: !18946, file: !18939, line: 79, type: !1991)
!18948 = !DILocation(line: 79, column: 39, scope: !18946)
!18949 = !DILocation(line: 82, column: 10, scope: !18946)
!18950 = !DILocation(line: 82, column: 38, scope: !18946)
!18951 = !{!3810, !2467, i64 112}
!18952 = !DILocation(line: 82, column: 3, scope: !18946)
!18953 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !18939, file: !18939, line: 92, type: !1989, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18954 = !DILocalVariable(name: "st", arg: 1, scope: !18953, file: !18939, line: 92, type: !1991)
!18955 = !DILocation(line: 92, column: 39, scope: !18953)
!18956 = !DILocation(line: 95, column: 10, scope: !18953)
!18957 = !DILocation(line: 95, column: 38, scope: !18953)
!18958 = !{!3810, !2467, i64 96}
!18959 = !DILocation(line: 95, column: 3, scope: !18953)
!18960 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !18939, file: !18939, line: 105, type: !1989, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18961 = !DILocalVariable(name: "st", arg: 1, scope: !18960, file: !18939, line: 105, type: !1991)
!18962 = !DILocation(line: 105, column: 43, scope: !18960)
!18963 = !DILocation(line: 112, column: 3, scope: !18960)
!18964 = distinct !DISubprogram(name: "get_stat_atime", scope: !18939, file: !18939, line: 118, type: !2014, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18965 = !DILocalVariable(name: "st", arg: 1, scope: !18964, file: !18939, line: 118, type: !1991)
!18966 = !DILocation(line: 118, column: 36, scope: !18964)
!18967 = !DILocation(line: 121, column: 10, scope: !18964)
!18968 = !DILocation(line: 121, column: 3, scope: !18964)
!18969 = distinct !DISubprogram(name: "get_stat_ctime", scope: !18939, file: !18939, line: 132, type: !2014, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18970 = !DILocalVariable(name: "st", arg: 1, scope: !18969, file: !18939, line: 132, type: !1991)
!18971 = !DILocation(line: 132, column: 36, scope: !18969)
!18972 = !DILocation(line: 135, column: 10, scope: !18969)
!18973 = !DILocation(line: 135, column: 3, scope: !18969)
!18974 = distinct !DISubprogram(name: "get_stat_mtime", scope: !18939, file: !18939, line: 146, type: !2014, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18975 = !DILocalVariable(name: "st", arg: 1, scope: !18974, file: !18939, line: 146, type: !1991)
!18976 = !DILocation(line: 146, column: 36, scope: !18974)
!18977 = !DILocation(line: 149, column: 10, scope: !18974)
!18978 = !DILocation(line: 149, column: 3, scope: !18974)
!18979 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !18939, file: !18939, line: 161, type: !2014, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18980 = !DILocalVariable(name: "st", arg: 1, scope: !18979, file: !18939, line: 161, type: !1991)
!18981 = !DILocation(line: 161, column: 40, scope: !18979)
!18982 = !DILocalVariable(name: "t", scope: !18979, file: !18939, line: 163, type: !2007)
!18983 = !DILocation(line: 163, column: 19, scope: !18979)
!18984 = !DILocation(line: 183, column: 5, scope: !18979)
!18985 = !DILocation(line: 183, column: 12, scope: !18979)
!18986 = !DILocation(line: 184, column: 5, scope: !18979)
!18987 = !DILocation(line: 184, column: 13, scope: !18979)
!18988 = !DILocation(line: 202, column: 3, scope: !18979)
!18989 = distinct !DISubprogram(name: "stat_time_normalize", scope: !18939, file: !18939, line: 211, type: !2016, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18990 = !DILocalVariable(name: "result", arg: 1, scope: !18989, file: !18939, line: 211, type: !27)
!18991 = !DILocation(line: 211, column: 26, scope: !18989)
!18992 = !DILocalVariable(name: "st", arg: 2, scope: !18989, file: !18939, line: 211, type: !2018)
!18993 = !DILocation(line: 211, column: 47, scope: !18989)
!18994 = !DILocation(line: 243, column: 10, scope: !18989)
!18995 = !DILocation(line: 243, column: 3, scope: !18989)
!18996 = distinct !DISubprogram(name: "make_timespec", scope: !18997, file: !18997, line: 54, type: !2022, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!18997 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mbarbar/clone/coreutils")
!18998 = !DILocalVariable(name: "s", arg: 1, scope: !18996, file: !18997, line: 54, type: !162)
!18999 = !DILocation(line: 54, column: 23, scope: !18996)
!19000 = !DILocalVariable(name: "ns", arg: 2, scope: !18996, file: !18997, line: 54, type: !166)
!19001 = !DILocation(line: 54, column: 35, scope: !18996)
!19002 = !DILocalVariable(name: "r", scope: !18996, file: !18997, line: 56, type: !2024)
!19003 = !DILocation(line: 56, column: 19, scope: !18996)
!19004 = !DILocation(line: 57, column: 14, scope: !18996)
!19005 = !DILocation(line: 57, column: 5, scope: !18996)
!19006 = !DILocation(line: 57, column: 12, scope: !18996)
!19007 = !DILocation(line: 58, column: 15, scope: !18996)
!19008 = !DILocation(line: 58, column: 5, scope: !18996)
!19009 = !DILocation(line: 58, column: 13, scope: !18996)
!19010 = !DILocation(line: 59, column: 3, scope: !18996)
!19011 = distinct !DISubprogram(name: "timespec_cmp", scope: !18997, file: !18997, line: 89, type: !2028, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!19012 = !DILocalVariable(name: "a", arg: 1, scope: !19011, file: !18997, line: 89, type: !2024)
!19013 = !DILocation(line: 89, column: 31, scope: !19011)
!19014 = !DILocalVariable(name: "b", arg: 2, scope: !19011, file: !18997, line: 89, type: !2024)
!19015 = !DILocation(line: 89, column: 50, scope: !19011)
!19016 = !DILocation(line: 91, column: 9, scope: !19017)
!19017 = distinct !DILexicalBlock(scope: !19011, file: !18997, line: 91, column: 7)
!19018 = !DILocation(line: 91, column: 20, scope: !19017)
!19019 = !DILocation(line: 91, column: 16, scope: !19017)
!19020 = !DILocation(line: 91, column: 7, scope: !19011)
!19021 = !DILocation(line: 92, column: 5, scope: !19017)
!19022 = !DILocation(line: 93, column: 9, scope: !19023)
!19023 = distinct !DILexicalBlock(scope: !19011, file: !18997, line: 93, column: 7)
!19024 = !DILocation(line: 93, column: 20, scope: !19023)
!19025 = !DILocation(line: 93, column: 16, scope: !19023)
!19026 = !DILocation(line: 93, column: 7, scope: !19011)
!19027 = !DILocation(line: 94, column: 5, scope: !19023)
!19028 = !DILocation(line: 98, column: 3, scope: !19011)
!19029 = !DILocation(line: 99, column: 3, scope: !19011)
!19030 = !DILocation(line: 101, column: 12, scope: !19011)
!19031 = !DILocation(line: 101, column: 24, scope: !19011)
!19032 = !DILocation(line: 101, column: 20, scope: !19011)
!19033 = !DILocation(line: 101, column: 10, scope: !19011)
!19034 = !DILocation(line: 101, column: 3, scope: !19011)
!19035 = !DILocation(line: 102, column: 1, scope: !19011)
!19036 = distinct !DISubprogram(name: "timespec_sign", scope: !18997, file: !18997, line: 107, type: !2030, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!19037 = !DILocalVariable(name: "a", arg: 1, scope: !19036, file: !18997, line: 107, type: !2024)
!19038 = !DILocation(line: 107, column: 32, scope: !19036)
!19039 = !DILocation(line: 109, column: 12, scope: !19036)
!19040 = !DILocation(line: 109, column: 19, scope: !19036)
!19041 = !DILocation(line: 109, column: 10, scope: !19036)
!19042 = !DILocation(line: 109, column: 32, scope: !19036)
!19043 = !DILocation(line: 109, column: 30, scope: !19036)
!19044 = !DILocation(line: 109, column: 39, scope: !19036)
!19045 = !DILocation(line: 109, column: 44, scope: !19036)
!19046 = !DILocation(line: 109, column: 3, scope: !19036)
!19047 = distinct !DISubprogram(name: "timespectod", scope: !18997, file: !18997, line: 121, type: !2032, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!19048 = !DILocalVariable(name: "a", arg: 1, scope: !19047, file: !18997, line: 121, type: !2024)
!19049 = !DILocation(line: 121, column: 30, scope: !19047)
!19050 = !DILocation(line: 123, column: 12, scope: !19047)
!19051 = !DILocation(line: 123, column: 10, scope: !19047)
!19052 = !DILocation(line: 123, column: 23, scope: !19047)
!19053 = !DILocation(line: 123, column: 21, scope: !19047)
!19054 = !DILocation(line: 123, column: 31, scope: !19047)
!19055 = !DILocation(line: 123, column: 19, scope: !19047)
!19056 = !DILocation(line: 123, column: 3, scope: !19047)
!19057 = distinct !DISubprogram(name: "version_etc_arn", scope: !19058, file: !19058, line: 61, type: !2038, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19058 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!19059 = !DILocalVariable(name: "stream", arg: 1, scope: !19057, file: !19058, line: 61, type: !2040)
!19060 = !DILocation(line: 61, column: 24, scope: !19057)
!19061 = !DILocalVariable(name: "command_name", arg: 2, scope: !19057, file: !19058, line: 62, type: !146)
!19062 = !DILocation(line: 62, column: 30, scope: !19057)
!19063 = !DILocalVariable(name: "package", arg: 3, scope: !19057, file: !19058, line: 62, type: !146)
!19064 = !DILocation(line: 62, column: 56, scope: !19057)
!19065 = !DILocalVariable(name: "version", arg: 4, scope: !19057, file: !19058, line: 63, type: !146)
!19066 = !DILocation(line: 63, column: 30, scope: !19057)
!19067 = !DILocalVariable(name: "authors", arg: 5, scope: !19057, file: !19058, line: 64, type: !567)
!19068 = !DILocation(line: 64, column: 39, scope: !19057)
!19069 = !DILocalVariable(name: "n_authors", arg: 6, scope: !19057, file: !19058, line: 64, type: !149)
!19070 = !DILocation(line: 64, column: 55, scope: !19057)
!19071 = !DILocation(line: 66, column: 7, scope: !19072)
!19072 = distinct !DILexicalBlock(scope: !19057, file: !19058, line: 66, column: 7)
!19073 = !DILocation(line: 66, column: 7, scope: !19057)
!19074 = !DILocation(line: 67, column: 14, scope: !19072)
!19075 = !DILocation(line: 67, column: 38, scope: !19072)
!19076 = !DILocation(line: 67, column: 52, scope: !19072)
!19077 = !DILocation(line: 67, column: 61, scope: !19072)
!19078 = !DILocation(line: 67, column: 5, scope: !19072)
!19079 = !DILocation(line: 69, column: 14, scope: !19072)
!19080 = !DILocation(line: 69, column: 33, scope: !19072)
!19081 = !DILocation(line: 69, column: 42, scope: !19072)
!19082 = !DILocation(line: 69, column: 5, scope: !19072)
!19083 = !DILocation(line: 83, column: 12, scope: !19057)
!19084 = !DILocation(line: 83, column: 43, scope: !19057)
!19085 = !DILocation(line: 83, column: 3, scope: !19057)
!19086 = !DILocation(line: 85, column: 3, scope: !19057)
!19087 = !DILocation(line: 88, column: 12, scope: !19057)
!19088 = !DILocation(line: 88, column: 20, scope: !19057)
!19089 = !DILocation(line: 88, column: 3, scope: !19057)
!19090 = !DILocation(line: 95, column: 3, scope: !19057)
!19091 = !DILocation(line: 97, column: 11, scope: !19057)
!19092 = !DILocation(line: 97, column: 3, scope: !19057)
!19093 = !DILocation(line: 102, column: 7, scope: !19094)
!19094 = distinct !DILexicalBlock(scope: !19057, file: !19058, line: 98, column: 5)
!19095 = !DILocation(line: 105, column: 16, scope: !19094)
!19096 = !DILocation(line: 105, column: 24, scope: !19094)
!19097 = !DILocation(line: 105, column: 47, scope: !19094)
!19098 = !DILocation(line: 105, column: 7, scope: !19094)
!19099 = !DILocation(line: 106, column: 7, scope: !19094)
!19100 = !DILocation(line: 109, column: 16, scope: !19094)
!19101 = !DILocation(line: 109, column: 24, scope: !19094)
!19102 = !DILocation(line: 109, column: 54, scope: !19094)
!19103 = !DILocation(line: 109, column: 66, scope: !19094)
!19104 = !DILocation(line: 109, column: 7, scope: !19094)
!19105 = !DILocation(line: 110, column: 7, scope: !19094)
!19106 = !DILocation(line: 113, column: 16, scope: !19094)
!19107 = !DILocation(line: 113, column: 24, scope: !19094)
!19108 = !DILocation(line: 114, column: 16, scope: !19094)
!19109 = !DILocation(line: 114, column: 28, scope: !19094)
!19110 = !DILocation(line: 114, column: 40, scope: !19094)
!19111 = !DILocation(line: 113, column: 7, scope: !19094)
!19112 = !DILocation(line: 115, column: 7, scope: !19094)
!19113 = !DILocation(line: 120, column: 16, scope: !19094)
!19114 = !DILocation(line: 120, column: 24, scope: !19094)
!19115 = !DILocation(line: 121, column: 16, scope: !19094)
!19116 = !DILocation(line: 121, column: 28, scope: !19094)
!19117 = !DILocation(line: 121, column: 40, scope: !19094)
!19118 = !DILocation(line: 121, column: 52, scope: !19094)
!19119 = !DILocation(line: 120, column: 7, scope: !19094)
!19120 = !DILocation(line: 122, column: 7, scope: !19094)
!19121 = !DILocation(line: 127, column: 16, scope: !19094)
!19122 = !DILocation(line: 127, column: 24, scope: !19094)
!19123 = !DILocation(line: 128, column: 16, scope: !19094)
!19124 = !DILocation(line: 128, column: 28, scope: !19094)
!19125 = !DILocation(line: 128, column: 40, scope: !19094)
!19126 = !DILocation(line: 128, column: 52, scope: !19094)
!19127 = !DILocation(line: 128, column: 64, scope: !19094)
!19128 = !DILocation(line: 127, column: 7, scope: !19094)
!19129 = !DILocation(line: 129, column: 7, scope: !19094)
!19130 = !DILocation(line: 134, column: 16, scope: !19094)
!19131 = !DILocation(line: 134, column: 24, scope: !19094)
!19132 = !DILocation(line: 135, column: 16, scope: !19094)
!19133 = !DILocation(line: 135, column: 28, scope: !19094)
!19134 = !DILocation(line: 135, column: 40, scope: !19094)
!19135 = !DILocation(line: 135, column: 52, scope: !19094)
!19136 = !DILocation(line: 135, column: 64, scope: !19094)
!19137 = !DILocation(line: 136, column: 16, scope: !19094)
!19138 = !DILocation(line: 134, column: 7, scope: !19094)
!19139 = !DILocation(line: 137, column: 7, scope: !19094)
!19140 = !DILocation(line: 142, column: 16, scope: !19094)
!19141 = !DILocation(line: 142, column: 24, scope: !19094)
!19142 = !DILocation(line: 143, column: 16, scope: !19094)
!19143 = !DILocation(line: 143, column: 28, scope: !19094)
!19144 = !DILocation(line: 143, column: 40, scope: !19094)
!19145 = !DILocation(line: 143, column: 52, scope: !19094)
!19146 = !DILocation(line: 143, column: 64, scope: !19094)
!19147 = !DILocation(line: 144, column: 16, scope: !19094)
!19148 = !DILocation(line: 144, column: 28, scope: !19094)
!19149 = !DILocation(line: 142, column: 7, scope: !19094)
!19150 = !DILocation(line: 145, column: 7, scope: !19094)
!19151 = !DILocation(line: 150, column: 16, scope: !19094)
!19152 = !DILocation(line: 150, column: 24, scope: !19094)
!19153 = !DILocation(line: 152, column: 17, scope: !19094)
!19154 = !DILocation(line: 152, column: 29, scope: !19094)
!19155 = !DILocation(line: 152, column: 41, scope: !19094)
!19156 = !DILocation(line: 152, column: 53, scope: !19094)
!19157 = !DILocation(line: 152, column: 65, scope: !19094)
!19158 = !DILocation(line: 153, column: 17, scope: !19094)
!19159 = !DILocation(line: 153, column: 29, scope: !19094)
!19160 = !DILocation(line: 153, column: 41, scope: !19094)
!19161 = !DILocation(line: 150, column: 7, scope: !19094)
!19162 = !DILocation(line: 154, column: 7, scope: !19094)
!19163 = !DILocation(line: 159, column: 16, scope: !19094)
!19164 = !DILocation(line: 159, column: 24, scope: !19094)
!19165 = !DILocation(line: 161, column: 16, scope: !19094)
!19166 = !DILocation(line: 161, column: 28, scope: !19094)
!19167 = !DILocation(line: 161, column: 40, scope: !19094)
!19168 = !DILocation(line: 161, column: 52, scope: !19094)
!19169 = !DILocation(line: 161, column: 64, scope: !19094)
!19170 = !DILocation(line: 162, column: 16, scope: !19094)
!19171 = !DILocation(line: 162, column: 28, scope: !19094)
!19172 = !DILocation(line: 162, column: 40, scope: !19094)
!19173 = !DILocation(line: 162, column: 52, scope: !19094)
!19174 = !DILocation(line: 159, column: 7, scope: !19094)
!19175 = !DILocation(line: 163, column: 7, scope: !19094)
!19176 = !DILocation(line: 170, column: 16, scope: !19094)
!19177 = !DILocation(line: 170, column: 24, scope: !19094)
!19178 = !DILocation(line: 172, column: 17, scope: !19094)
!19179 = !DILocation(line: 172, column: 29, scope: !19094)
!19180 = !DILocation(line: 172, column: 41, scope: !19094)
!19181 = !DILocation(line: 172, column: 53, scope: !19094)
!19182 = !DILocation(line: 172, column: 65, scope: !19094)
!19183 = !DILocation(line: 173, column: 17, scope: !19094)
!19184 = !DILocation(line: 173, column: 29, scope: !19094)
!19185 = !DILocation(line: 173, column: 41, scope: !19094)
!19186 = !DILocation(line: 173, column: 53, scope: !19094)
!19187 = !DILocation(line: 170, column: 7, scope: !19094)
!19188 = !DILocation(line: 174, column: 7, scope: !19094)
!19189 = !DILocation(line: 176, column: 1, scope: !19057)
!19190 = distinct !DISubprogram(name: "version_etc_ar", scope: !19058, file: !19058, line: 183, type: !2075, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19191 = !DILocalVariable(name: "stream", arg: 1, scope: !19190, file: !19058, line: 183, type: !2040)
!19192 = !DILocation(line: 183, column: 23, scope: !19190)
!19193 = !DILocalVariable(name: "command_name", arg: 2, scope: !19190, file: !19058, line: 184, type: !146)
!19194 = !DILocation(line: 184, column: 29, scope: !19190)
!19195 = !DILocalVariable(name: "package", arg: 3, scope: !19190, file: !19058, line: 184, type: !146)
!19196 = !DILocation(line: 184, column: 55, scope: !19190)
!19197 = !DILocalVariable(name: "version", arg: 4, scope: !19190, file: !19058, line: 185, type: !146)
!19198 = !DILocation(line: 185, column: 29, scope: !19190)
!19199 = !DILocalVariable(name: "authors", arg: 5, scope: !19190, file: !19058, line: 185, type: !567)
!19200 = !DILocation(line: 185, column: 59, scope: !19190)
!19201 = !DILocalVariable(name: "n_authors", scope: !19190, file: !19058, line: 187, type: !149)
!19202 = !DILocation(line: 187, column: 10, scope: !19190)
!19203 = !DILocation(line: 189, column: 18, scope: !19204)
!19204 = distinct !DILexicalBlock(scope: !19190, file: !19058, line: 189, column: 3)
!19205 = !DILocation(line: 189, column: 8, scope: !19204)
!19206 = !DILocation(line: 189, column: 23, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19204, file: !19058, line: 189, column: 3)
!19208 = !DILocation(line: 189, column: 31, scope: !19207)
!19209 = !DILocation(line: 189, column: 3, scope: !19204)
!19210 = !DILocation(line: 189, column: 52, scope: !19207)
!19211 = !DILocation(line: 189, column: 3, scope: !19207)
!19212 = distinct !{!19212, !19209, !19213}
!19213 = !DILocation(line: 190, column: 5, scope: !19204)
!19214 = !DILocation(line: 191, column: 20, scope: !19190)
!19215 = !DILocation(line: 191, column: 28, scope: !19190)
!19216 = !DILocation(line: 191, column: 42, scope: !19190)
!19217 = !DILocation(line: 191, column: 51, scope: !19190)
!19218 = !DILocation(line: 191, column: 60, scope: !19190)
!19219 = !DILocation(line: 191, column: 69, scope: !19190)
!19220 = !DILocation(line: 191, column: 3, scope: !19190)
!19221 = !DILocation(line: 192, column: 1, scope: !19190)
!19222 = distinct !DISubprogram(name: "version_etc_va", scope: !19058, file: !19058, line: 199, type: !2077, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19223 = !DILocalVariable(name: "stream", arg: 1, scope: !19222, file: !19058, line: 199, type: !2040)
!19224 = !DILocation(line: 199, column: 23, scope: !19222)
!19225 = !DILocalVariable(name: "command_name", arg: 2, scope: !19222, file: !19058, line: 200, type: !146)
!19226 = !DILocation(line: 200, column: 29, scope: !19222)
!19227 = !DILocalVariable(name: "package", arg: 3, scope: !19222, file: !19058, line: 200, type: !146)
!19228 = !DILocation(line: 200, column: 55, scope: !19222)
!19229 = !DILocalVariable(name: "version", arg: 4, scope: !19222, file: !19058, line: 201, type: !146)
!19230 = !DILocation(line: 201, column: 29, scope: !19222)
!19231 = !DILocalVariable(name: "authors", arg: 5, scope: !19222, file: !19058, line: 201, type: !2079)
!19232 = !DILocation(line: 201, column: 46, scope: !19222)
!19233 = !DILocalVariable(name: "n_authors", scope: !19222, file: !19058, line: 203, type: !149)
!19234 = !DILocation(line: 203, column: 10, scope: !19222)
!19235 = !DILocalVariable(name: "authtab", scope: !19222, file: !19058, line: 204, type: !2086)
!19236 = !DILocation(line: 204, column: 15, scope: !19222)
!19237 = !DILocation(line: 206, column: 18, scope: !19238)
!19238 = distinct !DILexicalBlock(scope: !19222, file: !19058, line: 206, column: 3)
!19239 = !DILocation(line: 206, column: 8, scope: !19238)
!19240 = !DILocation(line: 207, column: 8, scope: !19241)
!19241 = distinct !DILexicalBlock(scope: !19238, file: !19058, line: 206, column: 3)
!19242 = !DILocation(line: 207, column: 18, scope: !19241)
!19243 = !DILocation(line: 208, column: 10, scope: !19241)
!19244 = !DILocation(line: 208, column: 35, scope: !19241)
!19245 = !DILocation(line: 208, column: 22, scope: !19241)
!19246 = !DILocation(line: 208, column: 14, scope: !19241)
!19247 = !DILocation(line: 208, column: 33, scope: !19241)
!19248 = !DILocation(line: 208, column: 67, scope: !19241)
!19249 = !DILocation(line: 0, scope: !19241)
!19250 = !DILocation(line: 206, column: 3, scope: !19238)
!19251 = !DILocation(line: 209, column: 17, scope: !19241)
!19252 = !DILocation(line: 206, column: 3, scope: !19241)
!19253 = distinct !{!19253, !19250, !19254}
!19254 = !DILocation(line: 210, column: 5, scope: !19238)
!19255 = !DILocation(line: 211, column: 20, scope: !19222)
!19256 = !DILocation(line: 211, column: 28, scope: !19222)
!19257 = !DILocation(line: 211, column: 42, scope: !19222)
!19258 = !DILocation(line: 211, column: 51, scope: !19222)
!19259 = !DILocation(line: 212, column: 20, scope: !19222)
!19260 = !DILocation(line: 212, column: 29, scope: !19222)
!19261 = !DILocation(line: 211, column: 3, scope: !19222)
!19262 = !DILocation(line: 213, column: 1, scope: !19222)
!19263 = distinct !DISubprogram(name: "version_etc", scope: !19058, file: !19058, line: 230, type: !19264, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19264 = !DISubroutineType(types: !19265)
!19265 = !{null, !2040, !146, !146, !146, null}
!19266 = !DILocalVariable(name: "stream", arg: 1, scope: !19263, file: !19058, line: 230, type: !2040)
!19267 = !DILocation(line: 230, column: 20, scope: !19263)
!19268 = !DILocalVariable(name: "command_name", arg: 2, scope: !19263, file: !19058, line: 231, type: !146)
!19269 = !DILocation(line: 231, column: 26, scope: !19263)
!19270 = !DILocalVariable(name: "package", arg: 3, scope: !19263, file: !19058, line: 231, type: !146)
!19271 = !DILocation(line: 231, column: 52, scope: !19263)
!19272 = !DILocalVariable(name: "version", arg: 4, scope: !19263, file: !19058, line: 232, type: !146)
!19273 = !DILocation(line: 232, column: 26, scope: !19263)
!19274 = !DILocalVariable(name: "authors", scope: !19263, file: !19058, line: 234, type: !2089)
!19275 = !DILocation(line: 234, column: 11, scope: !19263)
!19276 = !DILocation(line: 236, column: 3, scope: !19263)
!19277 = !DILocation(line: 237, column: 19, scope: !19263)
!19278 = !DILocation(line: 237, column: 27, scope: !19263)
!19279 = !DILocation(line: 237, column: 41, scope: !19263)
!19280 = !DILocation(line: 237, column: 50, scope: !19263)
!19281 = !DILocation(line: 237, column: 59, scope: !19263)
!19282 = !DILocation(line: 237, column: 3, scope: !19263)
!19283 = !DILocation(line: 238, column: 3, scope: !19263)
!19284 = !DILocation(line: 239, column: 1, scope: !19263)
!19285 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !19058, file: !19058, line: 242, type: !341, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19286 = !DILocation(line: 244, column: 3, scope: !19285)
!19287 = !DILocation(line: 249, column: 11, scope: !19285)
!19288 = !DILocation(line: 249, column: 3, scope: !19285)
!19289 = !DILocation(line: 255, column: 11, scope: !19285)
!19290 = !DILocation(line: 255, column: 3, scope: !19285)
!19291 = !DILocation(line: 260, column: 11, scope: !19285)
!19292 = !DILocation(line: 260, column: 3, scope: !19285)
!19293 = !DILocation(line: 262, column: 1, scope: !19285)
!19294 = distinct !DISubprogram(name: "xnmalloc", scope: !19295, file: !19295, line: 99, type: !2098, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19295 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/clone/coreutils")
!19296 = !DILocalVariable(name: "n", arg: 1, scope: !19294, file: !19295, line: 99, type: !149)
!19297 = !DILocation(line: 99, column: 18, scope: !19294)
!19298 = !DILocalVariable(name: "s", arg: 2, scope: !19294, file: !19295, line: 99, type: !149)
!19299 = !DILocation(line: 99, column: 28, scope: !19294)
!19300 = !DILocation(line: 101, column: 7, scope: !19301)
!19301 = distinct !DILexicalBlock(scope: !19294, file: !19295, line: 101, column: 7)
!19302 = !DILocation(line: 101, column: 7, scope: !19294)
!19303 = !DILocation(line: 102, column: 5, scope: !19301)
!19304 = !DILocation(line: 103, column: 19, scope: !19294)
!19305 = !DILocation(line: 103, column: 23, scope: !19294)
!19306 = !DILocation(line: 103, column: 21, scope: !19294)
!19307 = !DILocation(line: 103, column: 10, scope: !19294)
!19308 = !DILocation(line: 103, column: 3, scope: !19294)
!19309 = distinct !DISubprogram(name: "xmalloc", scope: !19310, file: !19310, line: 39, type: !376, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19310 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!19311 = !DILocalVariable(name: "n", arg: 1, scope: !19309, file: !19310, line: 39, type: !149)
!19312 = !DILocation(line: 39, column: 17, scope: !19309)
!19313 = !DILocalVariable(name: "p", scope: !19309, file: !19310, line: 41, type: !167)
!19314 = !DILocation(line: 41, column: 9, scope: !19309)
!19315 = !DILocation(line: 41, column: 21, scope: !19309)
!19316 = !DILocation(line: 41, column: 13, scope: !19309)
!19317 = !DILocation(line: 42, column: 8, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19309, file: !19310, line: 42, column: 7)
!19319 = !DILocation(line: 42, column: 10, scope: !19318)
!19320 = !DILocation(line: 42, column: 13, scope: !19318)
!19321 = !DILocation(line: 42, column: 15, scope: !19318)
!19322 = !DILocation(line: 42, column: 7, scope: !19309)
!19323 = !DILocation(line: 43, column: 5, scope: !19318)
!19324 = !DILocation(line: 44, column: 10, scope: !19309)
!19325 = !DILocation(line: 44, column: 3, scope: !19309)
!19326 = distinct !DISubprogram(name: "xnrealloc", scope: !19295, file: !19295, line: 112, type: !2100, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19327 = !DILocalVariable(name: "p", arg: 1, scope: !19326, file: !19295, line: 112, type: !167)
!19328 = !DILocation(line: 112, column: 18, scope: !19326)
!19329 = !DILocalVariable(name: "n", arg: 2, scope: !19326, file: !19295, line: 112, type: !149)
!19330 = !DILocation(line: 112, column: 28, scope: !19326)
!19331 = !DILocalVariable(name: "s", arg: 3, scope: !19326, file: !19295, line: 112, type: !149)
!19332 = !DILocation(line: 112, column: 38, scope: !19326)
!19333 = !DILocation(line: 114, column: 7, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19326, file: !19295, line: 114, column: 7)
!19335 = !DILocation(line: 114, column: 7, scope: !19326)
!19336 = !DILocation(line: 115, column: 5, scope: !19334)
!19337 = !DILocation(line: 116, column: 20, scope: !19326)
!19338 = !DILocation(line: 116, column: 23, scope: !19326)
!19339 = !DILocation(line: 116, column: 27, scope: !19326)
!19340 = !DILocation(line: 116, column: 25, scope: !19326)
!19341 = !DILocation(line: 116, column: 10, scope: !19326)
!19342 = !DILocation(line: 116, column: 3, scope: !19326)
!19343 = distinct !DISubprogram(name: "xrealloc", scope: !19310, file: !19310, line: 51, type: !380, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19344 = !DILocalVariable(name: "p", arg: 1, scope: !19343, file: !19310, line: 51, type: !167)
!19345 = !DILocation(line: 51, column: 17, scope: !19343)
!19346 = !DILocalVariable(name: "n", arg: 2, scope: !19343, file: !19310, line: 51, type: !149)
!19347 = !DILocation(line: 51, column: 27, scope: !19343)
!19348 = !DILocation(line: 53, column: 8, scope: !19349)
!19349 = distinct !DILexicalBlock(scope: !19343, file: !19310, line: 53, column: 7)
!19350 = !DILocation(line: 53, column: 10, scope: !19349)
!19351 = !DILocation(line: 53, column: 13, scope: !19349)
!19352 = !DILocation(line: 53, column: 7, scope: !19343)
!19353 = !DILocation(line: 57, column: 13, scope: !19354)
!19354 = distinct !DILexicalBlock(scope: !19349, file: !19310, line: 54, column: 5)
!19355 = !DILocation(line: 57, column: 7, scope: !19354)
!19356 = !DILocation(line: 58, column: 7, scope: !19354)
!19357 = !DILocation(line: 61, column: 16, scope: !19343)
!19358 = !DILocation(line: 61, column: 19, scope: !19343)
!19359 = !DILocation(line: 61, column: 7, scope: !19343)
!19360 = !DILocation(line: 61, column: 5, scope: !19343)
!19361 = !DILocation(line: 62, column: 8, scope: !19362)
!19362 = distinct !DILexicalBlock(scope: !19343, file: !19310, line: 62, column: 7)
!19363 = !DILocation(line: 62, column: 10, scope: !19362)
!19364 = !DILocation(line: 62, column: 13, scope: !19362)
!19365 = !DILocation(line: 62, column: 7, scope: !19343)
!19366 = !DILocation(line: 63, column: 5, scope: !19362)
!19367 = !DILocation(line: 64, column: 10, scope: !19343)
!19368 = !DILocation(line: 64, column: 3, scope: !19343)
!19369 = !DILocation(line: 65, column: 1, scope: !19343)
!19370 = distinct !DISubprogram(name: "x2nrealloc", scope: !19295, file: !19295, line: 174, type: !2102, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19371 = !DILocalVariable(name: "p", arg: 1, scope: !19370, file: !19295, line: 174, type: !167)
!19372 = !DILocation(line: 174, column: 19, scope: !19370)
!19373 = !DILocalVariable(name: "pn", arg: 2, scope: !19370, file: !19295, line: 174, type: !148)
!19374 = !DILocation(line: 174, column: 30, scope: !19370)
!19375 = !DILocalVariable(name: "s", arg: 3, scope: !19370, file: !19295, line: 174, type: !149)
!19376 = !DILocation(line: 174, column: 41, scope: !19370)
!19377 = !DILocalVariable(name: "n", scope: !19370, file: !19295, line: 176, type: !149)
!19378 = !DILocation(line: 176, column: 10, scope: !19370)
!19379 = !DILocation(line: 176, column: 15, scope: !19370)
!19380 = !DILocation(line: 176, column: 14, scope: !19370)
!19381 = !DILocation(line: 178, column: 9, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19370, file: !19295, line: 178, column: 7)
!19383 = !DILocation(line: 178, column: 7, scope: !19370)
!19384 = !DILocation(line: 180, column: 13, scope: !19385)
!19385 = distinct !DILexicalBlock(scope: !19386, file: !19295, line: 180, column: 11)
!19386 = distinct !DILexicalBlock(scope: !19382, file: !19295, line: 179, column: 5)
!19387 = !DILocation(line: 180, column: 11, scope: !19386)
!19388 = !DILocation(line: 188, column: 32, scope: !19389)
!19389 = distinct !DILexicalBlock(scope: !19385, file: !19295, line: 181, column: 9)
!19390 = !DILocation(line: 188, column: 30, scope: !19389)
!19391 = !DILocation(line: 188, column: 13, scope: !19389)
!19392 = !DILocation(line: 189, column: 17, scope: !19389)
!19393 = !DILocation(line: 189, column: 16, scope: !19389)
!19394 = !DILocation(line: 189, column: 13, scope: !19389)
!19395 = !DILocation(line: 190, column: 9, scope: !19389)
!19396 = !DILocation(line: 191, column: 11, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19386, file: !19295, line: 191, column: 11)
!19398 = !DILocation(line: 191, column: 11, scope: !19386)
!19399 = !DILocation(line: 192, column: 9, scope: !19397)
!19400 = !DILocation(line: 193, column: 5, scope: !19386)
!19401 = !DILocation(line: 200, column: 71, scope: !19402)
!19402 = distinct !DILexicalBlock(scope: !19403, file: !19295, line: 200, column: 11)
!19403 = distinct !DILexicalBlock(scope: !19382, file: !19295, line: 195, column: 5)
!19404 = !DILocation(line: 200, column: 69, scope: !19402)
!19405 = !DILocation(line: 201, column: 14, scope: !19402)
!19406 = !DILocation(line: 201, column: 11, scope: !19402)
!19407 = !DILocation(line: 200, column: 11, scope: !19403)
!19408 = !DILocation(line: 202, column: 9, scope: !19402)
!19409 = !DILocation(line: 203, column: 12, scope: !19403)
!19410 = !DILocation(line: 203, column: 14, scope: !19403)
!19411 = !DILocation(line: 203, column: 18, scope: !19403)
!19412 = !DILocation(line: 203, column: 9, scope: !19403)
!19413 = !DILocation(line: 206, column: 9, scope: !19370)
!19414 = !DILocation(line: 206, column: 4, scope: !19370)
!19415 = !DILocation(line: 206, column: 7, scope: !19370)
!19416 = !DILocation(line: 207, column: 20, scope: !19370)
!19417 = !DILocation(line: 207, column: 23, scope: !19370)
!19418 = !DILocation(line: 207, column: 27, scope: !19370)
!19419 = !DILocation(line: 207, column: 25, scope: !19370)
!19420 = !DILocation(line: 207, column: 10, scope: !19370)
!19421 = !DILocation(line: 207, column: 3, scope: !19370)
!19422 = distinct !DISubprogram(name: "xcharalloc", scope: !19295, file: !19295, line: 216, type: !2104, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19423 = !DILocalVariable(name: "n", arg: 1, scope: !19422, file: !19295, line: 216, type: !149)
!19424 = !DILocation(line: 216, column: 20, scope: !19422)
!19425 = !DILocation(line: 218, column: 10, scope: !19422)
!19426 = !DILocation(line: 218, column: 3, scope: !19422)
!19427 = distinct !DISubprogram(name: "x2realloc", scope: !19310, file: !19310, line: 74, type: !2106, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19428 = !DILocalVariable(name: "p", arg: 1, scope: !19427, file: !19310, line: 74, type: !167)
!19429 = !DILocation(line: 74, column: 18, scope: !19427)
!19430 = !DILocalVariable(name: "pn", arg: 2, scope: !19427, file: !19310, line: 74, type: !148)
!19431 = !DILocation(line: 74, column: 29, scope: !19427)
!19432 = !DILocation(line: 76, column: 22, scope: !19427)
!19433 = !DILocation(line: 76, column: 25, scope: !19427)
!19434 = !DILocation(line: 76, column: 10, scope: !19427)
!19435 = !DILocation(line: 76, column: 3, scope: !19427)
!19436 = distinct !DISubprogram(name: "xzalloc", scope: !19310, file: !19310, line: 84, type: !376, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19437 = !DILocalVariable(name: "s", arg: 1, scope: !19436, file: !19310, line: 84, type: !149)
!19438 = !DILocation(line: 84, column: 17, scope: !19436)
!19439 = !DILocation(line: 86, column: 27, scope: !19436)
!19440 = !DILocation(line: 86, column: 18, scope: !19436)
!19441 = !DILocation(line: 86, column: 34, scope: !19436)
!19442 = !DILocation(line: 86, column: 10, scope: !19436)
!19443 = !DILocation(line: 86, column: 3, scope: !19436)
!19444 = distinct !DISubprogram(name: "xcalloc", scope: !19310, file: !19310, line: 93, type: !2098, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19445 = !DILocalVariable(name: "n", arg: 1, scope: !19444, file: !19310, line: 93, type: !149)
!19446 = !DILocation(line: 93, column: 17, scope: !19444)
!19447 = !DILocalVariable(name: "s", arg: 2, scope: !19444, file: !19310, line: 93, type: !149)
!19448 = !DILocation(line: 93, column: 27, scope: !19444)
!19449 = !DILocalVariable(name: "p", scope: !19444, file: !19310, line: 95, type: !167)
!19450 = !DILocation(line: 95, column: 9, scope: !19444)
!19451 = !DILocation(line: 100, column: 7, scope: !19452)
!19452 = distinct !DILexicalBlock(scope: !19444, file: !19310, line: 100, column: 7)
!19453 = !DILocation(line: 101, column: 7, scope: !19452)
!19454 = !DILocation(line: 101, column: 26, scope: !19452)
!19455 = !DILocation(line: 101, column: 29, scope: !19452)
!19456 = !DILocation(line: 101, column: 18, scope: !19452)
!19457 = !DILocation(line: 101, column: 16, scope: !19452)
!19458 = !DILocation(line: 100, column: 7, scope: !19444)
!19459 = !DILocation(line: 102, column: 5, scope: !19452)
!19460 = !DILocation(line: 103, column: 10, scope: !19444)
!19461 = !DILocation(line: 103, column: 3, scope: !19444)
!19462 = distinct !DISubprogram(name: "xmemdup", scope: !19310, file: !19310, line: 111, type: !2108, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19463 = !DILocalVariable(name: "p", arg: 1, scope: !19462, file: !19310, line: 111, type: !176)
!19464 = !DILocation(line: 111, column: 22, scope: !19462)
!19465 = !DILocalVariable(name: "s", arg: 2, scope: !19462, file: !19310, line: 111, type: !149)
!19466 = !DILocation(line: 111, column: 32, scope: !19462)
!19467 = !DILocation(line: 113, column: 27, scope: !19462)
!19468 = !DILocation(line: 113, column: 18, scope: !19462)
!19469 = !DILocation(line: 113, column: 31, scope: !19462)
!19470 = !DILocation(line: 113, column: 34, scope: !19462)
!19471 = !DILocation(line: 113, column: 10, scope: !19462)
!19472 = !DILocation(line: 113, column: 3, scope: !19462)
!19473 = distinct !DISubprogram(name: "xstrdup", scope: !19310, file: !19310, line: 119, type: !572, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19474 = !DILocalVariable(name: "string", arg: 1, scope: !19473, file: !19310, line: 119, type: !146)
!19475 = !DILocation(line: 119, column: 22, scope: !19473)
!19476 = !DILocation(line: 121, column: 19, scope: !19473)
!19477 = !DILocation(line: 121, column: 35, scope: !19473)
!19478 = !DILocation(line: 121, column: 27, scope: !19473)
!19479 = !DILocation(line: 121, column: 43, scope: !19473)
!19480 = !DILocation(line: 121, column: 10, scope: !19473)
!19481 = !DILocation(line: 121, column: 3, scope: !19473)
!19482 = distinct !DISubprogram(name: "xalloc_die", scope: !19483, file: !19483, line: 32, type: !341, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2110, retainedNodes: !152)
!19483 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!19484 = !DILocation(line: 34, column: 10, scope: !19482)
!19485 = !DILocation(line: 34, column: 33, scope: !19482)
!19486 = !DILocation(line: 34, column: 3, scope: !19482)
!19487 = !DILocation(line: 40, column: 3, scope: !19482)
!19488 = distinct !DISubprogram(name: "xnumtoumax", scope: !19489, file: !19489, line: 36, type: !2116, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2113, retainedNodes: !152)
!19489 = !DIFile(filename: "./lib/xdectoint.c", directory: "/home/mbarbar/clone/coreutils")
!19490 = !DILocalVariable(name: "n_str", arg: 1, scope: !19488, file: !19489, line: 36, type: !146)
!19491 = !DILocation(line: 36, column: 26, scope: !19488)
!19492 = !DILocalVariable(name: "base", arg: 2, scope: !19488, file: !19489, line: 36, type: !27)
!19493 = !DILocation(line: 36, column: 37, scope: !19488)
!19494 = !DILocalVariable(name: "min", arg: 3, scope: !19488, file: !19489, line: 36, type: !168)
!19495 = !DILocation(line: 36, column: 57, scope: !19488)
!19496 = !DILocalVariable(name: "max", arg: 4, scope: !19488, file: !19489, line: 36, type: !168)
!19497 = !DILocation(line: 36, column: 76, scope: !19488)
!19498 = !DILocalVariable(name: "suffixes", arg: 5, scope: !19488, file: !19489, line: 37, type: !146)
!19499 = !DILocation(line: 37, column: 26, scope: !19488)
!19500 = !DILocalVariable(name: "err", arg: 6, scope: !19488, file: !19489, line: 37, type: !146)
!19501 = !DILocation(line: 37, column: 48, scope: !19488)
!19502 = !DILocalVariable(name: "err_exit", arg: 7, scope: !19488, file: !19489, line: 37, type: !27)
!19503 = !DILocation(line: 37, column: 57, scope: !19488)
!19504 = !DILocalVariable(name: "s_err", scope: !19488, file: !19489, line: 39, type: !1322)
!19505 = !DILocation(line: 39, column: 16, scope: !19488)
!19506 = !DILocalVariable(name: "tnum", scope: !19488, file: !19489, line: 41, type: !168)
!19507 = !DILocation(line: 41, column: 17, scope: !19488)
!19508 = !DILocation(line: 42, column: 22, scope: !19488)
!19509 = !DILocation(line: 42, column: 35, scope: !19488)
!19510 = !DILocation(line: 42, column: 48, scope: !19488)
!19511 = !DILocation(line: 42, column: 11, scope: !19488)
!19512 = !DILocation(line: 42, column: 9, scope: !19488)
!19513 = !DILocation(line: 44, column: 7, scope: !19514)
!19514 = distinct !DILexicalBlock(scope: !19488, file: !19489, line: 44, column: 7)
!19515 = !DILocation(line: 44, column: 13, scope: !19514)
!19516 = !DILocation(line: 44, column: 7, scope: !19488)
!19517 = !DILocation(line: 46, column: 11, scope: !19518)
!19518 = distinct !DILexicalBlock(scope: !19519, file: !19489, line: 46, column: 11)
!19519 = distinct !DILexicalBlock(scope: !19514, file: !19489, line: 45, column: 5)
!19520 = !DILocation(line: 46, column: 18, scope: !19518)
!19521 = !DILocation(line: 46, column: 16, scope: !19518)
!19522 = !DILocation(line: 46, column: 22, scope: !19518)
!19523 = !DILocation(line: 46, column: 25, scope: !19518)
!19524 = !DILocation(line: 46, column: 31, scope: !19518)
!19525 = !DILocation(line: 46, column: 29, scope: !19518)
!19526 = !DILocation(line: 46, column: 11, scope: !19519)
!19527 = !DILocation(line: 48, column: 17, scope: !19528)
!19528 = distinct !DILexicalBlock(scope: !19518, file: !19489, line: 47, column: 9)
!19529 = !DILocation(line: 51, column: 15, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19528, file: !19489, line: 51, column: 15)
!19531 = !DILocation(line: 51, column: 20, scope: !19530)
!19532 = !DILocation(line: 51, column: 15, scope: !19528)
!19533 = !DILocation(line: 52, column: 13, scope: !19530)
!19534 = !DILocation(line: 52, column: 19, scope: !19530)
!19535 = !DILocation(line: 58, column: 13, scope: !19530)
!19536 = !DILocation(line: 58, column: 19, scope: !19530)
!19537 = !DILocation(line: 59, column: 9, scope: !19528)
!19538 = !DILocation(line: 60, column: 5, scope: !19519)
!19539 = !DILocation(line: 61, column: 12, scope: !19540)
!19540 = distinct !DILexicalBlock(scope: !19514, file: !19489, line: 61, column: 12)
!19541 = !DILocation(line: 61, column: 18, scope: !19540)
!19542 = !DILocation(line: 61, column: 12, scope: !19514)
!19543 = !DILocation(line: 62, column: 5, scope: !19540)
!19544 = !DILocation(line: 62, column: 11, scope: !19540)
!19545 = !DILocation(line: 63, column: 12, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19540, file: !19489, line: 63, column: 12)
!19547 = !DILocation(line: 63, column: 18, scope: !19546)
!19548 = !DILocation(line: 63, column: 12, scope: !19540)
!19549 = !DILocation(line: 64, column: 5, scope: !19546)
!19550 = !DILocation(line: 64, column: 11, scope: !19546)
!19551 = !DILocation(line: 66, column: 7, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19488, file: !19489, line: 66, column: 7)
!19553 = !DILocation(line: 66, column: 13, scope: !19552)
!19554 = !DILocation(line: 66, column: 7, scope: !19488)
!19555 = !DILocation(line: 69, column: 14, scope: !19556)
!19556 = distinct !DILexicalBlock(scope: !19552, file: !19489, line: 67, column: 5)
!19557 = !DILocation(line: 69, column: 25, scope: !19556)
!19558 = !DILocation(line: 69, column: 50, scope: !19556)
!19559 = !DILocation(line: 69, column: 56, scope: !19556)
!19560 = !DILocation(line: 69, column: 72, scope: !19556)
!19561 = !DILocation(line: 70, column: 24, scope: !19556)
!19562 = !DILocation(line: 70, column: 36, scope: !19556)
!19563 = !DILocation(line: 70, column: 29, scope: !19556)
!19564 = !DILocation(line: 69, column: 7, scope: !19556)
!19565 = !DILocation(line: 71, column: 5, scope: !19556)
!19566 = !DILocation(line: 73, column: 10, scope: !19488)
!19567 = !DILocation(line: 73, column: 3, scope: !19488)
!19568 = distinct !DISubprogram(name: "xdectoumax", scope: !19489, file: !19489, line: 82, type: !2118, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2113, retainedNodes: !152)
!19569 = !DILocalVariable(name: "n_str", arg: 1, scope: !19568, file: !19489, line: 82, type: !146)
!19570 = !DILocation(line: 82, column: 26, scope: !19568)
!19571 = !DILocalVariable(name: "min", arg: 2, scope: !19568, file: !19489, line: 82, type: !168)
!19572 = !DILocation(line: 82, column: 47, scope: !19568)
!19573 = !DILocalVariable(name: "max", arg: 3, scope: !19568, file: !19489, line: 82, type: !168)
!19574 = !DILocation(line: 82, column: 66, scope: !19568)
!19575 = !DILocalVariable(name: "suffixes", arg: 4, scope: !19568, file: !19489, line: 83, type: !146)
!19576 = !DILocation(line: 83, column: 26, scope: !19568)
!19577 = !DILocalVariable(name: "err", arg: 5, scope: !19568, file: !19489, line: 83, type: !146)
!19578 = !DILocation(line: 83, column: 48, scope: !19568)
!19579 = !DILocalVariable(name: "err_exit", arg: 6, scope: !19568, file: !19489, line: 83, type: !27)
!19580 = !DILocation(line: 83, column: 57, scope: !19568)
!19581 = !DILocation(line: 85, column: 23, scope: !19568)
!19582 = !DILocation(line: 85, column: 34, scope: !19568)
!19583 = !DILocation(line: 85, column: 39, scope: !19568)
!19584 = !DILocation(line: 85, column: 44, scope: !19568)
!19585 = !DILocation(line: 85, column: 54, scope: !19568)
!19586 = !DILocation(line: 85, column: 59, scope: !19568)
!19587 = !DILocation(line: 85, column: 10, scope: !19568)
!19588 = !DILocation(line: 85, column: 3, scope: !19568)
!19589 = distinct !DISubprogram(name: "xgetcwd", scope: !19590, file: !19590, line: 35, type: !2123, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2120, retainedNodes: !152)
!19590 = !DIFile(filename: "lib/xgetcwd.c", directory: "/home/mbarbar/clone/coreutils")
!19591 = !DILocalVariable(name: "cwd", scope: !19589, file: !19590, line: 37, type: !143)
!19592 = !DILocation(line: 37, column: 9, scope: !19589)
!19593 = !DILocation(line: 37, column: 15, scope: !19589)
!19594 = !DILocation(line: 38, column: 9, scope: !19595)
!19595 = distinct !DILexicalBlock(scope: !19589, file: !19590, line: 38, column: 7)
!19596 = !DILocation(line: 38, column: 13, scope: !19595)
!19597 = !DILocation(line: 38, column: 16, scope: !19595)
!19598 = !DILocation(line: 38, column: 22, scope: !19595)
!19599 = !DILocation(line: 38, column: 7, scope: !19589)
!19600 = !DILocation(line: 39, column: 5, scope: !19595)
!19601 = !DILocation(line: 40, column: 10, scope: !19589)
!19602 = !DILocation(line: 40, column: 3, scope: !19589)
!19603 = distinct !DISubprogram(name: "xgethostname", scope: !19604, file: !19604, line: 41, type: !2123, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2125, retainedNodes: !152)
!19604 = !DIFile(filename: "lib/xgethostname.c", directory: "/home/mbarbar/clone/coreutils")
!19605 = !DILocalVariable(name: "hostname", scope: !19603, file: !19604, line: 43, type: !143)
!19606 = !DILocation(line: 43, column: 9, scope: !19603)
!19607 = !DILocalVariable(name: "size", scope: !19603, file: !19604, line: 44, type: !149)
!19608 = !DILocation(line: 44, column: 10, scope: !19603)
!19609 = !DILocation(line: 46, column: 3, scope: !19603)
!19610 = !DILocalVariable(name: "size_1", scope: !19611, file: !19604, line: 51, type: !149)
!19611 = distinct !DILexicalBlock(scope: !19603, file: !19604, line: 47, column: 5)
!19612 = !DILocation(line: 51, column: 14, scope: !19611)
!19613 = !DILocation(line: 53, column: 29, scope: !19611)
!19614 = !DILocation(line: 53, column: 18, scope: !19611)
!19615 = !DILocation(line: 53, column: 16, scope: !19611)
!19616 = !DILocation(line: 54, column: 16, scope: !19611)
!19617 = !DILocation(line: 54, column: 21, scope: !19611)
!19618 = !DILocation(line: 54, column: 14, scope: !19611)
!19619 = !DILocation(line: 55, column: 7, scope: !19611)
!19620 = !DILocation(line: 55, column: 16, scope: !19611)
!19621 = !DILocation(line: 55, column: 23, scope: !19611)
!19622 = !DILocation(line: 55, column: 28, scope: !19611)
!19623 = !DILocation(line: 56, column: 7, scope: !19611)
!19624 = !DILocation(line: 56, column: 13, scope: !19611)
!19625 = !DILocation(line: 58, column: 24, scope: !19626)
!19626 = distinct !DILexicalBlock(scope: !19611, file: !19604, line: 58, column: 11)
!19627 = !DILocation(line: 58, column: 34, scope: !19626)
!19628 = !DILocation(line: 58, column: 11, scope: !19626)
!19629 = !DILocation(line: 58, column: 42, scope: !19626)
!19630 = !DILocation(line: 58, column: 11, scope: !19611)
!19631 = !DILocation(line: 60, column: 17, scope: !19632)
!19632 = distinct !DILexicalBlock(scope: !19633, file: !19604, line: 60, column: 15)
!19633 = distinct !DILexicalBlock(scope: !19626, file: !19604, line: 59, column: 9)
!19634 = !DILocation(line: 60, column: 26, scope: !19632)
!19635 = !DILocation(line: 60, column: 33, scope: !19632)
!19636 = !DILocation(line: 60, column: 15, scope: !19633)
!19637 = !DILocation(line: 61, column: 13, scope: !19632)
!19638 = !DILocation(line: 62, column: 9, scope: !19633)
!19639 = !DILocation(line: 63, column: 16, scope: !19640)
!19640 = distinct !DILexicalBlock(scope: !19626, file: !19604, line: 63, column: 16)
!19641 = !DILocation(line: 63, column: 22, scope: !19640)
!19642 = !DILocation(line: 63, column: 27, scope: !19640)
!19643 = !DILocation(line: 63, column: 30, scope: !19640)
!19644 = !DILocation(line: 63, column: 36, scope: !19640)
!19645 = !DILocation(line: 63, column: 52, scope: !19640)
!19646 = !DILocation(line: 63, column: 55, scope: !19640)
!19647 = !DILocation(line: 63, column: 61, scope: !19640)
!19648 = !DILocation(line: 65, column: 16, scope: !19640)
!19649 = !DILocation(line: 65, column: 19, scope: !19640)
!19650 = !DILocation(line: 65, column: 25, scope: !19640)
!19651 = !DILocation(line: 63, column: 16, scope: !19626)
!19652 = !DILocalVariable(name: "saved_errno", scope: !19653, file: !19604, line: 67, type: !27)
!19653 = distinct !DILexicalBlock(scope: !19640, file: !19604, line: 66, column: 9)
!19654 = !DILocation(line: 67, column: 15, scope: !19653)
!19655 = !DILocation(line: 67, column: 29, scope: !19653)
!19656 = !DILocation(line: 68, column: 17, scope: !19653)
!19657 = !DILocation(line: 68, column: 11, scope: !19653)
!19658 = !DILocation(line: 69, column: 19, scope: !19653)
!19659 = !DILocation(line: 69, column: 11, scope: !19653)
!19660 = !DILocation(line: 69, column: 17, scope: !19653)
!19661 = !DILocation(line: 70, column: 11, scope: !19653)
!19662 = distinct !{!19662, !19609, !19663}
!19663 = !DILocation(line: 72, column: 5, scope: !19603)
!19664 = !DILocalVariable(name: "actual_size", scope: !19665, file: !19604, line: 76, type: !149)
!19665 = distinct !DILexicalBlock(scope: !19603, file: !19604, line: 75, column: 3)
!19666 = !DILocation(line: 76, column: 12, scope: !19665)
!19667 = !DILocation(line: 76, column: 34, scope: !19665)
!19668 = !DILocation(line: 76, column: 26, scope: !19665)
!19669 = !DILocation(line: 76, column: 44, scope: !19665)
!19670 = !DILocation(line: 77, column: 9, scope: !19671)
!19671 = distinct !DILexicalBlock(scope: !19665, file: !19604, line: 77, column: 9)
!19672 = !DILocation(line: 77, column: 23, scope: !19671)
!19673 = !DILocation(line: 77, column: 21, scope: !19671)
!19674 = !DILocation(line: 77, column: 9, scope: !19665)
!19675 = !DILocalVariable(name: "shrinked_hostname", scope: !19676, file: !19604, line: 79, type: !143)
!19676 = distinct !DILexicalBlock(scope: !19671, file: !19604, line: 78, column: 7)
!19677 = !DILocation(line: 79, column: 15, scope: !19676)
!19678 = !DILocation(line: 79, column: 44, scope: !19676)
!19679 = !DILocation(line: 79, column: 54, scope: !19676)
!19680 = !DILocation(line: 79, column: 35, scope: !19676)
!19681 = !DILocation(line: 80, column: 13, scope: !19682)
!19682 = distinct !DILexicalBlock(scope: !19676, file: !19604, line: 80, column: 13)
!19683 = !DILocation(line: 80, column: 31, scope: !19682)
!19684 = !DILocation(line: 80, column: 13, scope: !19676)
!19685 = !DILocation(line: 81, column: 22, scope: !19682)
!19686 = !DILocation(line: 81, column: 20, scope: !19682)
!19687 = !DILocation(line: 81, column: 11, scope: !19682)
!19688 = !DILocation(line: 82, column: 7, scope: !19676)
!19689 = !DILocation(line: 85, column: 10, scope: !19603)
!19690 = !DILocation(line: 85, column: 3, scope: !19603)
!19691 = !DILocation(line: 86, column: 1, scope: !19603)
!19692 = distinct !DISubprogram(name: "xstrtoul", scope: !19693, file: !19693, line: 76, type: !2131, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19693 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/clone/coreutils")
!19694 = !DILocalVariable(name: "s", arg: 1, scope: !19692, file: !19693, line: 76, type: !146)
!19695 = !DILocation(line: 76, column: 24, scope: !19692)
!19696 = !DILocalVariable(name: "ptr", arg: 2, scope: !19692, file: !19693, line: 76, type: !142)
!19697 = !DILocation(line: 76, column: 34, scope: !19692)
!19698 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19692, file: !19693, line: 76, type: !27)
!19699 = !DILocation(line: 76, column: 43, scope: !19692)
!19700 = !DILocalVariable(name: "val", arg: 4, scope: !19692, file: !19693, line: 77, type: !2133)
!19701 = !DILocation(line: 77, column: 24, scope: !19692)
!19702 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19692, file: !19693, line: 77, type: !146)
!19703 = !DILocation(line: 77, column: 41, scope: !19692)
!19704 = !DILocalVariable(name: "t_ptr", scope: !19692, file: !19693, line: 79, type: !143)
!19705 = !DILocation(line: 79, column: 9, scope: !19692)
!19706 = !DILocalVariable(name: "p", scope: !19692, file: !19693, line: 80, type: !142)
!19707 = !DILocation(line: 80, column: 10, scope: !19692)
!19708 = !DILocalVariable(name: "tmp", scope: !19692, file: !19693, line: 81, type: !151)
!19709 = !DILocation(line: 81, column: 14, scope: !19692)
!19710 = !DILocalVariable(name: "err", scope: !19692, file: !19693, line: 82, type: !1322)
!19711 = !DILocation(line: 82, column: 16, scope: !19692)
!19712 = !DILocation(line: 84, column: 3, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19714, file: !19693, line: 84, column: 3)
!19714 = distinct !DILexicalBlock(scope: !19692, file: !19693, line: 84, column: 3)
!19715 = !DILocation(line: 84, column: 3, scope: !19714)
!19716 = !DILocation(line: 86, column: 8, scope: !19692)
!19717 = !DILocation(line: 86, column: 14, scope: !19692)
!19718 = !DILocation(line: 86, column: 5, scope: !19692)
!19719 = !DILocation(line: 88, column: 3, scope: !19692)
!19720 = !DILocation(line: 88, column: 9, scope: !19692)
!19721 = !DILocalVariable(name: "q", scope: !19722, file: !19693, line: 92, type: !146)
!19722 = distinct !DILexicalBlock(scope: !19723, file: !19693, line: 91, column: 5)
!19723 = distinct !DILexicalBlock(scope: !19692, file: !19693, line: 90, column: 7)
!19724 = !DILocation(line: 92, column: 19, scope: !19722)
!19725 = !DILocation(line: 92, column: 23, scope: !19722)
!19726 = !DILocalVariable(name: "ch", scope: !19722, file: !19693, line: 93, type: !591)
!19727 = !DILocation(line: 93, column: 21, scope: !19722)
!19728 = !DILocation(line: 93, column: 27, scope: !19722)
!19729 = !DILocation(line: 93, column: 26, scope: !19722)
!19730 = !DILocation(line: 94, column: 7, scope: !19722)
!19731 = !DILocation(line: 94, column: 14, scope: !19722)
!19732 = !DILocation(line: 95, column: 15, scope: !19722)
!19733 = !DILocation(line: 95, column: 14, scope: !19722)
!19734 = !DILocation(line: 95, column: 12, scope: !19722)
!19735 = distinct !{!19735, !19730, !19736}
!19736 = !DILocation(line: 95, column: 17, scope: !19722)
!19737 = !DILocation(line: 96, column: 11, scope: !19738)
!19738 = distinct !DILexicalBlock(scope: !19722, file: !19693, line: 96, column: 11)
!19739 = !DILocation(line: 96, column: 14, scope: !19738)
!19740 = !DILocation(line: 96, column: 11, scope: !19722)
!19741 = !DILocation(line: 97, column: 9, scope: !19738)
!19742 = !DILocation(line: 100, column: 19, scope: !19692)
!19743 = !DILocation(line: 100, column: 22, scope: !19692)
!19744 = !DILocation(line: 100, column: 25, scope: !19692)
!19745 = !DILocation(line: 100, column: 9, scope: !19692)
!19746 = !DILocation(line: 100, column: 7, scope: !19692)
!19747 = !DILocation(line: 102, column: 8, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19692, file: !19693, line: 102, column: 7)
!19749 = !DILocation(line: 102, column: 7, scope: !19748)
!19750 = !DILocation(line: 102, column: 13, scope: !19748)
!19751 = !DILocation(line: 102, column: 10, scope: !19748)
!19752 = !DILocation(line: 102, column: 7, scope: !19692)
!19753 = !DILocation(line: 106, column: 11, scope: !19754)
!19754 = distinct !DILexicalBlock(scope: !19755, file: !19693, line: 106, column: 11)
!19755 = distinct !DILexicalBlock(scope: !19748, file: !19693, line: 103, column: 5)
!19756 = !DILocation(line: 106, column: 26, scope: !19754)
!19757 = !DILocation(line: 106, column: 31, scope: !19754)
!19758 = !DILocation(line: 106, column: 30, scope: !19754)
!19759 = !DILocation(line: 106, column: 29, scope: !19754)
!19760 = !DILocation(line: 106, column: 33, scope: !19754)
!19761 = !DILocation(line: 106, column: 44, scope: !19754)
!19762 = !DILocation(line: 106, column: 62, scope: !19754)
!19763 = !DILocation(line: 106, column: 61, scope: !19754)
!19764 = !DILocation(line: 106, column: 60, scope: !19754)
!19765 = !DILocation(line: 106, column: 36, scope: !19754)
!19766 = !DILocation(line: 106, column: 11, scope: !19755)
!19767 = !DILocation(line: 107, column: 13, scope: !19754)
!19768 = !DILocation(line: 107, column: 9, scope: !19754)
!19769 = !DILocation(line: 109, column: 9, scope: !19754)
!19770 = !DILocation(line: 110, column: 5, scope: !19755)
!19771 = !DILocation(line: 111, column: 12, scope: !19772)
!19772 = distinct !DILexicalBlock(scope: !19748, file: !19693, line: 111, column: 12)
!19773 = !DILocation(line: 111, column: 18, scope: !19772)
!19774 = !DILocation(line: 111, column: 12, scope: !19748)
!19775 = !DILocation(line: 113, column: 11, scope: !19776)
!19776 = distinct !DILexicalBlock(scope: !19777, file: !19693, line: 113, column: 11)
!19777 = distinct !DILexicalBlock(scope: !19772, file: !19693, line: 112, column: 5)
!19778 = !DILocation(line: 113, column: 17, scope: !19776)
!19779 = !DILocation(line: 113, column: 11, scope: !19777)
!19780 = !DILocation(line: 114, column: 9, scope: !19776)
!19781 = !DILocation(line: 115, column: 11, scope: !19777)
!19782 = !DILocation(line: 116, column: 5, scope: !19777)
!19783 = !DILocation(line: 121, column: 8, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19692, file: !19693, line: 121, column: 7)
!19785 = !DILocation(line: 121, column: 7, scope: !19692)
!19786 = !DILocation(line: 123, column: 14, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19784, file: !19693, line: 122, column: 5)
!19788 = !DILocation(line: 123, column: 8, scope: !19787)
!19789 = !DILocation(line: 123, column: 12, scope: !19787)
!19790 = !DILocation(line: 124, column: 14, scope: !19787)
!19791 = !DILocation(line: 124, column: 7, scope: !19787)
!19792 = !DILocation(line: 127, column: 9, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19692, file: !19693, line: 127, column: 7)
!19794 = !DILocation(line: 127, column: 8, scope: !19793)
!19795 = !DILocation(line: 127, column: 7, scope: !19793)
!19796 = !DILocation(line: 127, column: 11, scope: !19793)
!19797 = !DILocation(line: 127, column: 7, scope: !19692)
!19798 = !DILocalVariable(name: "base", scope: !19799, file: !19693, line: 129, type: !27)
!19799 = distinct !DILexicalBlock(scope: !19793, file: !19693, line: 128, column: 5)
!19800 = !DILocation(line: 129, column: 11, scope: !19799)
!19801 = !DILocalVariable(name: "suffixes", scope: !19799, file: !19693, line: 130, type: !27)
!19802 = !DILocation(line: 130, column: 11, scope: !19799)
!19803 = !DILocalVariable(name: "overflow", scope: !19799, file: !19693, line: 131, type: !1322)
!19804 = !DILocation(line: 131, column: 20, scope: !19799)
!19805 = !DILocation(line: 133, column: 20, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19799, file: !19693, line: 133, column: 11)
!19807 = !DILocation(line: 133, column: 38, scope: !19806)
!19808 = !DILocation(line: 133, column: 37, scope: !19806)
!19809 = !DILocation(line: 133, column: 36, scope: !19806)
!19810 = !DILocation(line: 133, column: 12, scope: !19806)
!19811 = !DILocation(line: 133, column: 11, scope: !19799)
!19812 = !DILocation(line: 135, column: 18, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19806, file: !19693, line: 134, column: 9)
!19814 = !DILocation(line: 135, column: 12, scope: !19813)
!19815 = !DILocation(line: 135, column: 16, scope: !19813)
!19816 = !DILocation(line: 136, column: 18, scope: !19813)
!19817 = !DILocation(line: 136, column: 22, scope: !19813)
!19818 = !DILocation(line: 136, column: 11, scope: !19813)
!19819 = !DILocation(line: 139, column: 17, scope: !19799)
!19820 = !DILocation(line: 139, column: 16, scope: !19799)
!19821 = !DILocation(line: 139, column: 15, scope: !19799)
!19822 = !DILocation(line: 139, column: 7, scope: !19799)
!19823 = !DILocation(line: 151, column: 23, scope: !19824)
!19824 = distinct !DILexicalBlock(scope: !19825, file: !19693, line: 151, column: 15)
!19825 = distinct !DILexicalBlock(scope: !19799, file: !19693, line: 140, column: 9)
!19826 = !DILocation(line: 151, column: 15, scope: !19824)
!19827 = !DILocation(line: 151, column: 15, scope: !19825)
!19828 = !DILocation(line: 152, column: 21, scope: !19824)
!19829 = !DILocation(line: 152, column: 13, scope: !19824)
!19830 = !DILocation(line: 155, column: 21, scope: !19831)
!19831 = distinct !DILexicalBlock(scope: !19832, file: !19693, line: 155, column: 21)
!19832 = distinct !DILexicalBlock(scope: !19824, file: !19693, line: 153, column: 15)
!19833 = !DILocation(line: 155, column: 29, scope: !19831)
!19834 = !DILocation(line: 155, column: 21, scope: !19832)
!19835 = !DILocation(line: 156, column: 28, scope: !19831)
!19836 = !DILocation(line: 156, column: 19, scope: !19831)
!19837 = !DILocation(line: 157, column: 17, scope: !19832)
!19838 = !DILocation(line: 161, column: 22, scope: !19832)
!19839 = !DILocation(line: 162, column: 25, scope: !19832)
!19840 = !DILocation(line: 163, column: 17, scope: !19832)
!19841 = !DILocation(line: 164, column: 15, scope: !19832)
!19842 = !DILocation(line: 165, column: 9, scope: !19825)
!19843 = !DILocation(line: 167, column: 17, scope: !19799)
!19844 = !DILocation(line: 167, column: 16, scope: !19799)
!19845 = !DILocation(line: 167, column: 15, scope: !19799)
!19846 = !DILocation(line: 167, column: 7, scope: !19799)
!19847 = !DILocation(line: 170, column: 22, scope: !19848)
!19848 = distinct !DILexicalBlock(scope: !19799, file: !19693, line: 168, column: 9)
!19849 = !DILocation(line: 170, column: 20, scope: !19848)
!19850 = !DILocation(line: 171, column: 11, scope: !19848)
!19851 = !DILocation(line: 177, column: 22, scope: !19848)
!19852 = !DILocation(line: 177, column: 20, scope: !19848)
!19853 = !DILocation(line: 178, column: 11, scope: !19848)
!19854 = !DILocation(line: 181, column: 20, scope: !19848)
!19855 = !DILocation(line: 182, column: 11, scope: !19848)
!19856 = !DILocation(line: 185, column: 48, scope: !19848)
!19857 = !DILocation(line: 185, column: 22, scope: !19848)
!19858 = !DILocation(line: 185, column: 20, scope: !19848)
!19859 = !DILocation(line: 186, column: 11, scope: !19848)
!19860 = !DILocation(line: 190, column: 48, scope: !19848)
!19861 = !DILocation(line: 190, column: 22, scope: !19848)
!19862 = !DILocation(line: 190, column: 20, scope: !19848)
!19863 = !DILocation(line: 191, column: 11, scope: !19848)
!19864 = !DILocation(line: 195, column: 48, scope: !19848)
!19865 = !DILocation(line: 195, column: 22, scope: !19848)
!19866 = !DILocation(line: 195, column: 20, scope: !19848)
!19867 = !DILocation(line: 196, column: 11, scope: !19848)
!19868 = !DILocation(line: 200, column: 48, scope: !19848)
!19869 = !DILocation(line: 200, column: 22, scope: !19848)
!19870 = !DILocation(line: 200, column: 20, scope: !19848)
!19871 = !DILocation(line: 201, column: 11, scope: !19848)
!19872 = !DILocation(line: 204, column: 48, scope: !19848)
!19873 = !DILocation(line: 204, column: 22, scope: !19848)
!19874 = !DILocation(line: 204, column: 20, scope: !19848)
!19875 = !DILocation(line: 205, column: 11, scope: !19848)
!19876 = !DILocation(line: 209, column: 48, scope: !19848)
!19877 = !DILocation(line: 209, column: 22, scope: !19848)
!19878 = !DILocation(line: 209, column: 20, scope: !19848)
!19879 = !DILocation(line: 210, column: 11, scope: !19848)
!19880 = !DILocation(line: 213, column: 22, scope: !19848)
!19881 = !DILocation(line: 213, column: 20, scope: !19848)
!19882 = !DILocation(line: 214, column: 11, scope: !19848)
!19883 = !DILocation(line: 217, column: 48, scope: !19848)
!19884 = !DILocation(line: 217, column: 22, scope: !19848)
!19885 = !DILocation(line: 217, column: 20, scope: !19848)
!19886 = !DILocation(line: 218, column: 11, scope: !19848)
!19887 = !DILocation(line: 221, column: 48, scope: !19848)
!19888 = !DILocation(line: 221, column: 22, scope: !19848)
!19889 = !DILocation(line: 221, column: 20, scope: !19848)
!19890 = !DILocation(line: 222, column: 11, scope: !19848)
!19891 = !DILocation(line: 225, column: 18, scope: !19848)
!19892 = !DILocation(line: 225, column: 12, scope: !19848)
!19893 = !DILocation(line: 225, column: 16, scope: !19848)
!19894 = !DILocation(line: 226, column: 18, scope: !19848)
!19895 = !DILocation(line: 226, column: 22, scope: !19848)
!19896 = !DILocation(line: 226, column: 11, scope: !19848)
!19897 = !DILocation(line: 229, column: 14, scope: !19799)
!19898 = !DILocation(line: 229, column: 11, scope: !19799)
!19899 = !DILocation(line: 230, column: 13, scope: !19799)
!19900 = !DILocation(line: 230, column: 8, scope: !19799)
!19901 = !DILocation(line: 230, column: 10, scope: !19799)
!19902 = !DILocation(line: 231, column: 13, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19799, file: !19693, line: 231, column: 11)
!19904 = !DILocation(line: 231, column: 12, scope: !19903)
!19905 = !DILocation(line: 231, column: 11, scope: !19903)
!19906 = !DILocation(line: 231, column: 11, scope: !19799)
!19907 = !DILocation(line: 232, column: 13, scope: !19903)
!19908 = !DILocation(line: 232, column: 9, scope: !19903)
!19909 = !DILocation(line: 233, column: 5, scope: !19799)
!19910 = !DILocation(line: 235, column: 10, scope: !19692)
!19911 = !DILocation(line: 235, column: 4, scope: !19692)
!19912 = !DILocation(line: 235, column: 8, scope: !19692)
!19913 = !DILocation(line: 236, column: 10, scope: !19692)
!19914 = !DILocation(line: 236, column: 3, scope: !19692)
!19915 = !DILocation(line: 237, column: 1, scope: !19692)
!19916 = distinct !DISubprogram(name: "bkm_scale", scope: !19693, file: !19693, line: 48, type: !2134, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19917 = !DILocalVariable(name: "x", arg: 1, scope: !19916, file: !19693, line: 48, type: !2133)
!19918 = !DILocation(line: 48, column: 24, scope: !19916)
!19919 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19916, file: !19693, line: 48, type: !27)
!19920 = !DILocation(line: 48, column: 31, scope: !19916)
!19921 = !DILocation(line: 55, column: 26, scope: !19922)
!19922 = distinct !DILexicalBlock(scope: !19916, file: !19693, line: 55, column: 7)
!19923 = !DILocation(line: 55, column: 24, scope: !19922)
!19924 = !DILocation(line: 55, column: 42, scope: !19922)
!19925 = !DILocation(line: 55, column: 41, scope: !19922)
!19926 = !DILocation(line: 55, column: 39, scope: !19922)
!19927 = !DILocation(line: 55, column: 7, scope: !19916)
!19928 = !DILocation(line: 57, column: 8, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19922, file: !19693, line: 56, column: 5)
!19930 = !DILocation(line: 57, column: 10, scope: !19929)
!19931 = !DILocation(line: 58, column: 7, scope: !19929)
!19932 = !DILocation(line: 60, column: 9, scope: !19916)
!19933 = !DILocation(line: 60, column: 4, scope: !19916)
!19934 = !DILocation(line: 60, column: 6, scope: !19916)
!19935 = !DILocation(line: 61, column: 3, scope: !19916)
!19936 = !DILocation(line: 62, column: 1, scope: !19916)
!19937 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19693, file: !19693, line: 65, type: !2136, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19938 = !DILocalVariable(name: "x", arg: 1, scope: !19937, file: !19693, line: 65, type: !2133)
!19939 = !DILocation(line: 65, column: 33, scope: !19937)
!19940 = !DILocalVariable(name: "base", arg: 2, scope: !19937, file: !19693, line: 65, type: !27)
!19941 = !DILocation(line: 65, column: 40, scope: !19937)
!19942 = !DILocalVariable(name: "power", arg: 3, scope: !19937, file: !19693, line: 65, type: !27)
!19943 = !DILocation(line: 65, column: 50, scope: !19937)
!19944 = !DILocalVariable(name: "err", scope: !19937, file: !19693, line: 67, type: !1322)
!19945 = !DILocation(line: 67, column: 16, scope: !19937)
!19946 = !DILocation(line: 68, column: 3, scope: !19937)
!19947 = !DILocation(line: 68, column: 15, scope: !19937)
!19948 = !DILocation(line: 69, column: 23, scope: !19937)
!19949 = !DILocation(line: 69, column: 26, scope: !19937)
!19950 = !DILocation(line: 69, column: 12, scope: !19937)
!19951 = !DILocation(line: 69, column: 9, scope: !19937)
!19952 = distinct !{!19952, !19946, !19953}
!19953 = !DILocation(line: 69, column: 30, scope: !19937)
!19954 = !DILocation(line: 70, column: 10, scope: !19937)
!19955 = !DILocation(line: 70, column: 3, scope: !19937)
!19956 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !19957, file: !19957, line: 92, type: !2141, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2138, retainedNodes: !152)
!19957 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mbarbar/clone/coreutils")
!19958 = !DILocalVariable(name: "err", arg: 1, scope: !19956, file: !19957, line: 92, type: !109)
!19959 = !DILocation(line: 92, column: 34, scope: !19956)
!19960 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19956, file: !19957, line: 93, type: !27)
!19961 = !DILocation(line: 93, column: 20, scope: !19956)
!19962 = !DILocalVariable(name: "c", arg: 3, scope: !19956, file: !19957, line: 93, type: !144)
!19963 = !DILocation(line: 93, column: 34, scope: !19956)
!19964 = !DILocalVariable(name: "long_options", arg: 4, scope: !19956, file: !19957, line: 93, type: !2143)
!19965 = !DILocation(line: 93, column: 58, scope: !19956)
!19966 = !DILocalVariable(name: "arg", arg: 5, scope: !19956, file: !19957, line: 94, type: !146)
!19967 = !DILocation(line: 94, column: 28, scope: !19956)
!19968 = !DILocation(line: 96, column: 18, scope: !19956)
!19969 = !DILocation(line: 96, column: 23, scope: !19956)
!19970 = !DILocation(line: 96, column: 32, scope: !19956)
!19971 = !DILocation(line: 96, column: 35, scope: !19956)
!19972 = !DILocation(line: 96, column: 49, scope: !19956)
!19973 = !DILocation(line: 96, column: 54, scope: !19956)
!19974 = !DILocation(line: 96, column: 3, scope: !19956)
!19975 = !DILocation(line: 97, column: 3, scope: !19956)
!19976 = distinct !DISubprogram(name: "xstrtol_error", scope: !19957, file: !19957, line: 47, type: !2151, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2138, retainedNodes: !152)
!19977 = !DILocalVariable(name: "err", arg: 1, scope: !19976, file: !19957, line: 47, type: !109)
!19978 = !DILocation(line: 47, column: 34, scope: !19976)
!19979 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19976, file: !19957, line: 48, type: !27)
!19980 = !DILocation(line: 48, column: 20, scope: !19976)
!19981 = !DILocalVariable(name: "c", arg: 3, scope: !19976, file: !19957, line: 48, type: !144)
!19982 = !DILocation(line: 48, column: 34, scope: !19976)
!19983 = !DILocalVariable(name: "long_options", arg: 4, scope: !19976, file: !19957, line: 48, type: !2143)
!19984 = !DILocation(line: 48, column: 58, scope: !19976)
!19985 = !DILocalVariable(name: "arg", arg: 5, scope: !19976, file: !19957, line: 49, type: !146)
!19986 = !DILocation(line: 49, column: 28, scope: !19976)
!19987 = !DILocalVariable(name: "exit_status", arg: 6, scope: !19976, file: !19957, line: 50, type: !27)
!19988 = !DILocation(line: 50, column: 20, scope: !19976)
!19989 = !DILocalVariable(name: "hyphens", scope: !19976, file: !19957, line: 52, type: !146)
!19990 = !DILocation(line: 52, column: 15, scope: !19976)
!19991 = !DILocalVariable(name: "msgid", scope: !19976, file: !19957, line: 53, type: !146)
!19992 = !DILocation(line: 53, column: 15, scope: !19976)
!19993 = !DILocalVariable(name: "option", scope: !19976, file: !19957, line: 54, type: !146)
!19994 = !DILocation(line: 54, column: 15, scope: !19976)
!19995 = !DILocalVariable(name: "option_buffer", scope: !19976, file: !19957, line: 55, type: !666)
!19996 = !DILocation(line: 55, column: 8, scope: !19976)
!19997 = !DILocation(line: 57, column: 11, scope: !19976)
!19998 = !DILocation(line: 57, column: 3, scope: !19976)
!19999 = !DILocation(line: 60, column: 7, scope: !20000)
!20000 = distinct !DILexicalBlock(scope: !19976, file: !19957, line: 58, column: 5)
!20001 = !DILocation(line: 63, column: 13, scope: !20000)
!20002 = !DILocation(line: 64, column: 7, scope: !20000)
!20003 = !DILocation(line: 68, column: 13, scope: !20000)
!20004 = !DILocation(line: 69, column: 7, scope: !20000)
!20005 = !DILocation(line: 72, column: 13, scope: !20000)
!20006 = !DILocation(line: 73, column: 7, scope: !20000)
!20007 = !DILocation(line: 76, column: 7, scope: !20008)
!20008 = distinct !DILexicalBlock(scope: !19976, file: !19957, line: 76, column: 7)
!20009 = !DILocation(line: 76, column: 15, scope: !20008)
!20010 = !DILocation(line: 76, column: 7, scope: !19976)
!20011 = !DILocation(line: 78, column: 18, scope: !20012)
!20012 = distinct !DILexicalBlock(scope: !20008, file: !19957, line: 77, column: 5)
!20013 = !DILocation(line: 78, column: 15, scope: !20012)
!20014 = !DILocation(line: 79, column: 26, scope: !20012)
!20015 = !DILocation(line: 79, column: 7, scope: !20012)
!20016 = !DILocation(line: 79, column: 24, scope: !20012)
!20017 = !DILocation(line: 80, column: 7, scope: !20012)
!20018 = !DILocation(line: 80, column: 24, scope: !20012)
!20019 = !DILocation(line: 81, column: 16, scope: !20012)
!20020 = !DILocation(line: 81, column: 14, scope: !20012)
!20021 = !DILocation(line: 82, column: 5, scope: !20012)
!20022 = !DILocation(line: 84, column: 14, scope: !20008)
!20023 = !DILocation(line: 84, column: 27, scope: !20008)
!20024 = !DILocation(line: 84, column: 36, scope: !20008)
!20025 = !{!20026, !2443, i64 0}
!20026 = !{!"option", !2443, i64 0, !2437, i64 8, !2443, i64 16, !2437, i64 24}
!20027 = !DILocation(line: 84, column: 12, scope: !20008)
!20028 = !DILocation(line: 86, column: 10, scope: !19976)
!20029 = !DILocation(line: 86, column: 35, scope: !19976)
!20030 = !DILocation(line: 86, column: 26, scope: !19976)
!20031 = !DILocation(line: 86, column: 43, scope: !19976)
!20032 = !DILocation(line: 86, column: 52, scope: !19976)
!20033 = !DILocation(line: 86, column: 60, scope: !19976)
!20034 = !DILocation(line: 86, column: 3, scope: !19976)
!20035 = !DILocation(line: 87, column: 1, scope: !19976)
!20036 = distinct !DISubprogram(name: "xstrtoumax", scope: !19693, file: !19693, line: 76, type: !2156, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!20037 = !DILocalVariable(name: "s", arg: 1, scope: !20036, file: !19693, line: 76, type: !146)
!20038 = !DILocation(line: 76, column: 24, scope: !20036)
!20039 = !DILocalVariable(name: "ptr", arg: 2, scope: !20036, file: !19693, line: 76, type: !142)
!20040 = !DILocation(line: 76, column: 34, scope: !20036)
!20041 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !20036, file: !19693, line: 76, type: !27)
!20042 = !DILocation(line: 76, column: 43, scope: !20036)
!20043 = !DILocalVariable(name: "val", arg: 4, scope: !20036, file: !19693, line: 77, type: !1321)
!20044 = !DILocation(line: 77, column: 24, scope: !20036)
!20045 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !20036, file: !19693, line: 77, type: !146)
!20046 = !DILocation(line: 77, column: 41, scope: !20036)
!20047 = !DILocalVariable(name: "t_ptr", scope: !20036, file: !19693, line: 79, type: !143)
!20048 = !DILocation(line: 79, column: 9, scope: !20036)
!20049 = !DILocalVariable(name: "p", scope: !20036, file: !19693, line: 80, type: !142)
!20050 = !DILocation(line: 80, column: 10, scope: !20036)
!20051 = !DILocalVariable(name: "tmp", scope: !20036, file: !19693, line: 81, type: !168)
!20052 = !DILocation(line: 81, column: 14, scope: !20036)
!20053 = !DILocalVariable(name: "err", scope: !20036, file: !19693, line: 82, type: !1322)
!20054 = !DILocation(line: 82, column: 16, scope: !20036)
!20055 = !DILocation(line: 84, column: 3, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !20057, file: !19693, line: 84, column: 3)
!20057 = distinct !DILexicalBlock(scope: !20036, file: !19693, line: 84, column: 3)
!20058 = !DILocation(line: 84, column: 3, scope: !20057)
!20059 = !DILocation(line: 86, column: 8, scope: !20036)
!20060 = !DILocation(line: 86, column: 14, scope: !20036)
!20061 = !DILocation(line: 86, column: 5, scope: !20036)
!20062 = !DILocation(line: 88, column: 3, scope: !20036)
!20063 = !DILocation(line: 88, column: 9, scope: !20036)
!20064 = !DILocalVariable(name: "q", scope: !20065, file: !19693, line: 92, type: !146)
!20065 = distinct !DILexicalBlock(scope: !20066, file: !19693, line: 91, column: 5)
!20066 = distinct !DILexicalBlock(scope: !20036, file: !19693, line: 90, column: 7)
!20067 = !DILocation(line: 92, column: 19, scope: !20065)
!20068 = !DILocation(line: 92, column: 23, scope: !20065)
!20069 = !DILocalVariable(name: "ch", scope: !20065, file: !19693, line: 93, type: !591)
!20070 = !DILocation(line: 93, column: 21, scope: !20065)
!20071 = !DILocation(line: 93, column: 27, scope: !20065)
!20072 = !DILocation(line: 93, column: 26, scope: !20065)
!20073 = !DILocation(line: 94, column: 7, scope: !20065)
!20074 = !DILocation(line: 94, column: 14, scope: !20065)
!20075 = !DILocation(line: 95, column: 15, scope: !20065)
!20076 = !DILocation(line: 95, column: 14, scope: !20065)
!20077 = !DILocation(line: 95, column: 12, scope: !20065)
!20078 = distinct !{!20078, !20073, !20079}
!20079 = !DILocation(line: 95, column: 17, scope: !20065)
!20080 = !DILocation(line: 96, column: 11, scope: !20081)
!20081 = distinct !DILexicalBlock(scope: !20065, file: !19693, line: 96, column: 11)
!20082 = !DILocation(line: 96, column: 14, scope: !20081)
!20083 = !DILocation(line: 96, column: 11, scope: !20065)
!20084 = !DILocation(line: 97, column: 9, scope: !20081)
!20085 = !DILocation(line: 100, column: 19, scope: !20036)
!20086 = !DILocation(line: 100, column: 22, scope: !20036)
!20087 = !DILocation(line: 100, column: 25, scope: !20036)
!20088 = !DILocation(line: 100, column: 9, scope: !20036)
!20089 = !DILocation(line: 100, column: 7, scope: !20036)
!20090 = !DILocation(line: 102, column: 8, scope: !20091)
!20091 = distinct !DILexicalBlock(scope: !20036, file: !19693, line: 102, column: 7)
!20092 = !DILocation(line: 102, column: 7, scope: !20091)
!20093 = !DILocation(line: 102, column: 13, scope: !20091)
!20094 = !DILocation(line: 102, column: 10, scope: !20091)
!20095 = !DILocation(line: 102, column: 7, scope: !20036)
!20096 = !DILocation(line: 106, column: 11, scope: !20097)
!20097 = distinct !DILexicalBlock(scope: !20098, file: !19693, line: 106, column: 11)
!20098 = distinct !DILexicalBlock(scope: !20091, file: !19693, line: 103, column: 5)
!20099 = !DILocation(line: 106, column: 26, scope: !20097)
!20100 = !DILocation(line: 106, column: 31, scope: !20097)
!20101 = !DILocation(line: 106, column: 30, scope: !20097)
!20102 = !DILocation(line: 106, column: 29, scope: !20097)
!20103 = !DILocation(line: 106, column: 33, scope: !20097)
!20104 = !DILocation(line: 106, column: 44, scope: !20097)
!20105 = !DILocation(line: 106, column: 62, scope: !20097)
!20106 = !DILocation(line: 106, column: 61, scope: !20097)
!20107 = !DILocation(line: 106, column: 60, scope: !20097)
!20108 = !DILocation(line: 106, column: 36, scope: !20097)
!20109 = !DILocation(line: 106, column: 11, scope: !20098)
!20110 = !DILocation(line: 107, column: 13, scope: !20097)
!20111 = !DILocation(line: 107, column: 9, scope: !20097)
!20112 = !DILocation(line: 109, column: 9, scope: !20097)
!20113 = !DILocation(line: 110, column: 5, scope: !20098)
!20114 = !DILocation(line: 111, column: 12, scope: !20115)
!20115 = distinct !DILexicalBlock(scope: !20091, file: !19693, line: 111, column: 12)
!20116 = !DILocation(line: 111, column: 18, scope: !20115)
!20117 = !DILocation(line: 111, column: 12, scope: !20091)
!20118 = !DILocation(line: 113, column: 11, scope: !20119)
!20119 = distinct !DILexicalBlock(scope: !20120, file: !19693, line: 113, column: 11)
!20120 = distinct !DILexicalBlock(scope: !20115, file: !19693, line: 112, column: 5)
!20121 = !DILocation(line: 113, column: 17, scope: !20119)
!20122 = !DILocation(line: 113, column: 11, scope: !20120)
!20123 = !DILocation(line: 114, column: 9, scope: !20119)
!20124 = !DILocation(line: 115, column: 11, scope: !20120)
!20125 = !DILocation(line: 116, column: 5, scope: !20120)
!20126 = !DILocation(line: 121, column: 8, scope: !20127)
!20127 = distinct !DILexicalBlock(scope: !20036, file: !19693, line: 121, column: 7)
!20128 = !DILocation(line: 121, column: 7, scope: !20036)
!20129 = !DILocation(line: 123, column: 14, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20127, file: !19693, line: 122, column: 5)
!20131 = !DILocation(line: 123, column: 8, scope: !20130)
!20132 = !DILocation(line: 123, column: 12, scope: !20130)
!20133 = !DILocation(line: 124, column: 14, scope: !20130)
!20134 = !DILocation(line: 124, column: 7, scope: !20130)
!20135 = !DILocation(line: 127, column: 9, scope: !20136)
!20136 = distinct !DILexicalBlock(scope: !20036, file: !19693, line: 127, column: 7)
!20137 = !DILocation(line: 127, column: 8, scope: !20136)
!20138 = !DILocation(line: 127, column: 7, scope: !20136)
!20139 = !DILocation(line: 127, column: 11, scope: !20136)
!20140 = !DILocation(line: 127, column: 7, scope: !20036)
!20141 = !DILocalVariable(name: "base", scope: !20142, file: !19693, line: 129, type: !27)
!20142 = distinct !DILexicalBlock(scope: !20136, file: !19693, line: 128, column: 5)
!20143 = !DILocation(line: 129, column: 11, scope: !20142)
!20144 = !DILocalVariable(name: "suffixes", scope: !20142, file: !19693, line: 130, type: !27)
!20145 = !DILocation(line: 130, column: 11, scope: !20142)
!20146 = !DILocalVariable(name: "overflow", scope: !20142, file: !19693, line: 131, type: !1322)
!20147 = !DILocation(line: 131, column: 20, scope: !20142)
!20148 = !DILocation(line: 133, column: 20, scope: !20149)
!20149 = distinct !DILexicalBlock(scope: !20142, file: !19693, line: 133, column: 11)
!20150 = !DILocation(line: 133, column: 38, scope: !20149)
!20151 = !DILocation(line: 133, column: 37, scope: !20149)
!20152 = !DILocation(line: 133, column: 36, scope: !20149)
!20153 = !DILocation(line: 133, column: 12, scope: !20149)
!20154 = !DILocation(line: 133, column: 11, scope: !20142)
!20155 = !DILocation(line: 135, column: 18, scope: !20156)
!20156 = distinct !DILexicalBlock(scope: !20149, file: !19693, line: 134, column: 9)
!20157 = !DILocation(line: 135, column: 12, scope: !20156)
!20158 = !DILocation(line: 135, column: 16, scope: !20156)
!20159 = !DILocation(line: 136, column: 18, scope: !20156)
!20160 = !DILocation(line: 136, column: 22, scope: !20156)
!20161 = !DILocation(line: 136, column: 11, scope: !20156)
!20162 = !DILocation(line: 139, column: 17, scope: !20142)
!20163 = !DILocation(line: 139, column: 16, scope: !20142)
!20164 = !DILocation(line: 139, column: 15, scope: !20142)
!20165 = !DILocation(line: 139, column: 7, scope: !20142)
!20166 = !DILocation(line: 151, column: 23, scope: !20167)
!20167 = distinct !DILexicalBlock(scope: !20168, file: !19693, line: 151, column: 15)
!20168 = distinct !DILexicalBlock(scope: !20142, file: !19693, line: 140, column: 9)
!20169 = !DILocation(line: 151, column: 15, scope: !20167)
!20170 = !DILocation(line: 151, column: 15, scope: !20168)
!20171 = !DILocation(line: 152, column: 21, scope: !20167)
!20172 = !DILocation(line: 152, column: 13, scope: !20167)
!20173 = !DILocation(line: 155, column: 21, scope: !20174)
!20174 = distinct !DILexicalBlock(scope: !20175, file: !19693, line: 155, column: 21)
!20175 = distinct !DILexicalBlock(scope: !20167, file: !19693, line: 153, column: 15)
!20176 = !DILocation(line: 155, column: 29, scope: !20174)
!20177 = !DILocation(line: 155, column: 21, scope: !20175)
!20178 = !DILocation(line: 156, column: 28, scope: !20174)
!20179 = !DILocation(line: 156, column: 19, scope: !20174)
!20180 = !DILocation(line: 157, column: 17, scope: !20175)
!20181 = !DILocation(line: 161, column: 22, scope: !20175)
!20182 = !DILocation(line: 162, column: 25, scope: !20175)
!20183 = !DILocation(line: 163, column: 17, scope: !20175)
!20184 = !DILocation(line: 164, column: 15, scope: !20175)
!20185 = !DILocation(line: 165, column: 9, scope: !20168)
!20186 = !DILocation(line: 167, column: 17, scope: !20142)
!20187 = !DILocation(line: 167, column: 16, scope: !20142)
!20188 = !DILocation(line: 167, column: 15, scope: !20142)
!20189 = !DILocation(line: 167, column: 7, scope: !20142)
!20190 = !DILocation(line: 170, column: 22, scope: !20191)
!20191 = distinct !DILexicalBlock(scope: !20142, file: !19693, line: 168, column: 9)
!20192 = !DILocation(line: 170, column: 20, scope: !20191)
!20193 = !DILocation(line: 171, column: 11, scope: !20191)
!20194 = !DILocation(line: 177, column: 22, scope: !20191)
!20195 = !DILocation(line: 177, column: 20, scope: !20191)
!20196 = !DILocation(line: 178, column: 11, scope: !20191)
!20197 = !DILocation(line: 181, column: 20, scope: !20191)
!20198 = !DILocation(line: 182, column: 11, scope: !20191)
!20199 = !DILocation(line: 185, column: 48, scope: !20191)
!20200 = !DILocation(line: 185, column: 22, scope: !20191)
!20201 = !DILocation(line: 185, column: 20, scope: !20191)
!20202 = !DILocation(line: 186, column: 11, scope: !20191)
!20203 = !DILocation(line: 190, column: 48, scope: !20191)
!20204 = !DILocation(line: 190, column: 22, scope: !20191)
!20205 = !DILocation(line: 190, column: 20, scope: !20191)
!20206 = !DILocation(line: 191, column: 11, scope: !20191)
!20207 = !DILocation(line: 195, column: 48, scope: !20191)
!20208 = !DILocation(line: 195, column: 22, scope: !20191)
!20209 = !DILocation(line: 195, column: 20, scope: !20191)
!20210 = !DILocation(line: 196, column: 11, scope: !20191)
!20211 = !DILocation(line: 200, column: 48, scope: !20191)
!20212 = !DILocation(line: 200, column: 22, scope: !20191)
!20213 = !DILocation(line: 200, column: 20, scope: !20191)
!20214 = !DILocation(line: 201, column: 11, scope: !20191)
!20215 = !DILocation(line: 204, column: 48, scope: !20191)
!20216 = !DILocation(line: 204, column: 22, scope: !20191)
!20217 = !DILocation(line: 204, column: 20, scope: !20191)
!20218 = !DILocation(line: 205, column: 11, scope: !20191)
!20219 = !DILocation(line: 209, column: 48, scope: !20191)
!20220 = !DILocation(line: 209, column: 22, scope: !20191)
!20221 = !DILocation(line: 209, column: 20, scope: !20191)
!20222 = !DILocation(line: 210, column: 11, scope: !20191)
!20223 = !DILocation(line: 213, column: 22, scope: !20191)
!20224 = !DILocation(line: 213, column: 20, scope: !20191)
!20225 = !DILocation(line: 214, column: 11, scope: !20191)
!20226 = !DILocation(line: 217, column: 48, scope: !20191)
!20227 = !DILocation(line: 217, column: 22, scope: !20191)
!20228 = !DILocation(line: 217, column: 20, scope: !20191)
!20229 = !DILocation(line: 218, column: 11, scope: !20191)
!20230 = !DILocation(line: 221, column: 48, scope: !20191)
!20231 = !DILocation(line: 221, column: 22, scope: !20191)
!20232 = !DILocation(line: 221, column: 20, scope: !20191)
!20233 = !DILocation(line: 222, column: 11, scope: !20191)
!20234 = !DILocation(line: 225, column: 18, scope: !20191)
!20235 = !DILocation(line: 225, column: 12, scope: !20191)
!20236 = !DILocation(line: 225, column: 16, scope: !20191)
!20237 = !DILocation(line: 226, column: 18, scope: !20191)
!20238 = !DILocation(line: 226, column: 22, scope: !20191)
!20239 = !DILocation(line: 226, column: 11, scope: !20191)
!20240 = !DILocation(line: 229, column: 14, scope: !20142)
!20241 = !DILocation(line: 229, column: 11, scope: !20142)
!20242 = !DILocation(line: 230, column: 13, scope: !20142)
!20243 = !DILocation(line: 230, column: 8, scope: !20142)
!20244 = !DILocation(line: 230, column: 10, scope: !20142)
!20245 = !DILocation(line: 231, column: 13, scope: !20246)
!20246 = distinct !DILexicalBlock(scope: !20142, file: !19693, line: 231, column: 11)
!20247 = !DILocation(line: 231, column: 12, scope: !20246)
!20248 = !DILocation(line: 231, column: 11, scope: !20246)
!20249 = !DILocation(line: 231, column: 11, scope: !20142)
!20250 = !DILocation(line: 232, column: 13, scope: !20246)
!20251 = !DILocation(line: 232, column: 9, scope: !20246)
!20252 = !DILocation(line: 233, column: 5, scope: !20142)
!20253 = !DILocation(line: 235, column: 10, scope: !20036)
!20254 = !DILocation(line: 235, column: 4, scope: !20036)
!20255 = !DILocation(line: 235, column: 8, scope: !20036)
!20256 = !DILocation(line: 236, column: 10, scope: !20036)
!20257 = !DILocation(line: 236, column: 3, scope: !20036)
!20258 = !DILocation(line: 237, column: 1, scope: !20036)
!20259 = distinct !DISubprogram(name: "bkm_scale", scope: !19693, file: !19693, line: 48, type: !2158, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!20260 = !DILocalVariable(name: "x", arg: 1, scope: !20259, file: !19693, line: 48, type: !1321)
!20261 = !DILocation(line: 48, column: 24, scope: !20259)
!20262 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !20259, file: !19693, line: 48, type: !27)
!20263 = !DILocation(line: 48, column: 31, scope: !20259)
!20264 = !DILocation(line: 55, column: 26, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20259, file: !19693, line: 55, column: 7)
!20266 = !DILocation(line: 55, column: 24, scope: !20265)
!20267 = !DILocation(line: 55, column: 42, scope: !20265)
!20268 = !DILocation(line: 55, column: 41, scope: !20265)
!20269 = !DILocation(line: 55, column: 39, scope: !20265)
!20270 = !DILocation(line: 55, column: 7, scope: !20259)
!20271 = !DILocation(line: 57, column: 8, scope: !20272)
!20272 = distinct !DILexicalBlock(scope: !20265, file: !19693, line: 56, column: 5)
!20273 = !DILocation(line: 57, column: 10, scope: !20272)
!20274 = !DILocation(line: 58, column: 7, scope: !20272)
!20275 = !DILocation(line: 60, column: 9, scope: !20259)
!20276 = !DILocation(line: 60, column: 4, scope: !20259)
!20277 = !DILocation(line: 60, column: 6, scope: !20259)
!20278 = !DILocation(line: 61, column: 3, scope: !20259)
!20279 = !DILocation(line: 62, column: 1, scope: !20259)
!20280 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19693, file: !19693, line: 65, type: !2160, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!20281 = !DILocalVariable(name: "x", arg: 1, scope: !20280, file: !19693, line: 65, type: !1321)
!20282 = !DILocation(line: 65, column: 33, scope: !20280)
!20283 = !DILocalVariable(name: "base", arg: 2, scope: !20280, file: !19693, line: 65, type: !27)
!20284 = !DILocation(line: 65, column: 40, scope: !20280)
!20285 = !DILocalVariable(name: "power", arg: 3, scope: !20280, file: !19693, line: 65, type: !27)
!20286 = !DILocation(line: 65, column: 50, scope: !20280)
!20287 = !DILocalVariable(name: "err", scope: !20280, file: !19693, line: 67, type: !1322)
!20288 = !DILocation(line: 67, column: 16, scope: !20280)
!20289 = !DILocation(line: 68, column: 3, scope: !20280)
!20290 = !DILocation(line: 68, column: 15, scope: !20280)
!20291 = !DILocation(line: 69, column: 23, scope: !20280)
!20292 = !DILocation(line: 69, column: 26, scope: !20280)
!20293 = !DILocation(line: 69, column: 12, scope: !20280)
!20294 = !DILocation(line: 69, column: 9, scope: !20280)
!20295 = distinct !{!20295, !20289, !20296}
!20296 = !DILocation(line: 69, column: 30, scope: !20280)
!20297 = !DILocation(line: 70, column: 10, scope: !20280)
!20298 = !DILocation(line: 70, column: 3, scope: !20280)
!20299 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !20300, file: !20300, line: 461, type: !2165, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2162, retainedNodes: !152)
!20300 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!20301 = !DILocalVariable(name: "pwc", arg: 1, scope: !20299, file: !20300, line: 461, type: !1874)
!20302 = !DILocation(line: 461, column: 23, scope: !20299)
!20303 = !DILocalVariable(name: "s", arg: 2, scope: !20299, file: !20300, line: 461, type: !146)
!20304 = !DILocation(line: 461, column: 40, scope: !20299)
!20305 = !DILocalVariable(name: "n", arg: 3, scope: !20299, file: !20300, line: 461, type: !149)
!20306 = !DILocation(line: 461, column: 50, scope: !20299)
!20307 = !DILocalVariable(name: "ps", arg: 4, scope: !20299, file: !20300, line: 461, type: !2167)
!20308 = !DILocation(line: 461, column: 64, scope: !20299)
!20309 = !DILocalVariable(name: "ret", scope: !20299, file: !20300, line: 463, type: !149)
!20310 = !DILocation(line: 463, column: 10, scope: !20299)
!20311 = !DILocalVariable(name: "wc", scope: !20299, file: !20300, line: 464, type: !654)
!20312 = !DILocation(line: 464, column: 11, scope: !20299)
!20313 = !DILocation(line: 480, column: 9, scope: !20314)
!20314 = distinct !DILexicalBlock(scope: !20299, file: !20300, line: 480, column: 7)
!20315 = !DILocation(line: 480, column: 7, scope: !20299)
!20316 = !DILocation(line: 481, column: 9, scope: !20314)
!20317 = !DILocation(line: 481, column: 5, scope: !20314)
!20318 = !DILocation(line: 515, column: 18, scope: !20299)
!20319 = !DILocation(line: 515, column: 23, scope: !20299)
!20320 = !DILocation(line: 515, column: 26, scope: !20299)
!20321 = !DILocation(line: 515, column: 29, scope: !20299)
!20322 = !DILocation(line: 515, column: 9, scope: !20299)
!20323 = !DILocation(line: 515, column: 7, scope: !20299)
!20324 = !DILocation(line: 523, column: 22, scope: !20325)
!20325 = distinct !DILexicalBlock(scope: !20299, file: !20300, line: 523, column: 7)
!20326 = !DILocation(line: 523, column: 19, scope: !20325)
!20327 = !DILocation(line: 523, column: 26, scope: !20325)
!20328 = !DILocation(line: 523, column: 29, scope: !20325)
!20329 = !DILocation(line: 523, column: 31, scope: !20325)
!20330 = !DILocation(line: 523, column: 36, scope: !20325)
!20331 = !DILocation(line: 523, column: 41, scope: !20325)
!20332 = !DILocation(line: 523, column: 7, scope: !20299)
!20333 = !DILocalVariable(name: "uc", scope: !20334, file: !20300, line: 525, type: !591)
!20334 = distinct !DILexicalBlock(scope: !20325, file: !20300, line: 524, column: 5)
!20335 = !DILocation(line: 525, column: 21, scope: !20334)
!20336 = !DILocation(line: 525, column: 27, scope: !20334)
!20337 = !DILocation(line: 525, column: 26, scope: !20334)
!20338 = !DILocation(line: 526, column: 14, scope: !20334)
!20339 = !DILocation(line: 526, column: 8, scope: !20334)
!20340 = !DILocation(line: 526, column: 12, scope: !20334)
!20341 = !DILocation(line: 527, column: 7, scope: !20334)
!20342 = !DILocation(line: 531, column: 10, scope: !20299)
!20343 = !DILocation(line: 531, column: 3, scope: !20299)
!20344 = !DILocation(line: 532, column: 1, scope: !20299)
!20345 = distinct !DISubprogram(name: "print_and_abort", scope: !1646, file: !1646, line: 330, type: !341, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20346 = !DILocation(line: 340, column: 12, scope: !20345)
!20347 = !DILocation(line: 340, column: 28, scope: !20345)
!20348 = !DILocation(line: 340, column: 3, scope: !20345)
!20349 = !DILocation(line: 342, column: 9, scope: !20345)
!20350 = !DILocation(line: 342, column: 3, scope: !20345)
!20351 = distinct !DISubprogram(name: "_obstack_begin", scope: !1646, file: !1646, line: 150, type: !1561, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20352 = !DILocalVariable(name: "h", arg: 1, scope: !20351, file: !1646, line: 150, type: !1563)
!20353 = !DILocation(line: 150, column: 33, scope: !20351)
!20354 = !DILocalVariable(name: "size", arg: 2, scope: !20351, file: !1646, line: 151, type: !149)
!20355 = !DILocation(line: 151, column: 33, scope: !20351)
!20356 = !DILocalVariable(name: "alignment", arg: 3, scope: !20351, file: !1646, line: 151, type: !149)
!20357 = !DILocation(line: 151, column: 55, scope: !20351)
!20358 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20351, file: !1646, line: 152, type: !375)
!20359 = !DILocation(line: 152, column: 25, scope: !20351)
!20360 = !DILocalVariable(name: "freefun", arg: 5, scope: !20351, file: !1646, line: 153, type: !386)
!20361 = !DILocation(line: 153, column: 24, scope: !20351)
!20362 = !DILocation(line: 155, column: 23, scope: !20351)
!20363 = !DILocation(line: 155, column: 3, scope: !20351)
!20364 = !DILocation(line: 155, column: 6, scope: !20351)
!20365 = !DILocation(line: 155, column: 15, scope: !20351)
!20366 = !DILocation(line: 155, column: 21, scope: !20351)
!20367 = !DILocation(line: 156, column: 22, scope: !20351)
!20368 = !DILocation(line: 156, column: 3, scope: !20351)
!20369 = !DILocation(line: 156, column: 6, scope: !20351)
!20370 = !DILocation(line: 156, column: 14, scope: !20351)
!20371 = !DILocation(line: 156, column: 20, scope: !20351)
!20372 = !DILocation(line: 157, column: 3, scope: !20351)
!20373 = !DILocation(line: 157, column: 6, scope: !20351)
!20374 = !DILocation(line: 157, column: 20, scope: !20351)
!20375 = !DILocation(line: 158, column: 33, scope: !20351)
!20376 = !DILocation(line: 158, column: 36, scope: !20351)
!20377 = !DILocation(line: 158, column: 42, scope: !20351)
!20378 = !DILocation(line: 158, column: 10, scope: !20351)
!20379 = !DILocation(line: 158, column: 3, scope: !20351)
!20380 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1646, file: !1646, line: 109, type: !1607, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20381 = !DILocalVariable(name: "h", arg: 1, scope: !20380, file: !1646, line: 109, type: !1563)
!20382 = !DILocation(line: 109, column: 40, scope: !20380)
!20383 = !DILocalVariable(name: "size", arg: 2, scope: !20380, file: !1646, line: 110, type: !149)
!20384 = !DILocation(line: 110, column: 40, scope: !20380)
!20385 = !DILocalVariable(name: "alignment", arg: 3, scope: !20380, file: !1646, line: 110, type: !149)
!20386 = !DILocation(line: 110, column: 62, scope: !20380)
!20387 = !DILocalVariable(name: "chunk", scope: !20380, file: !1646, line: 112, type: !1568)
!20388 = !DILocation(line: 112, column: 26, scope: !20380)
!20389 = !DILocation(line: 114, column: 7, scope: !20390)
!20390 = distinct !DILexicalBlock(scope: !20380, file: !1646, line: 114, column: 7)
!20391 = !DILocation(line: 114, column: 17, scope: !20390)
!20392 = !DILocation(line: 114, column: 7, scope: !20380)
!20393 = !DILocation(line: 115, column: 15, scope: !20390)
!20394 = !DILocation(line: 115, column: 5, scope: !20390)
!20395 = !DILocation(line: 116, column: 7, scope: !20396)
!20396 = distinct !DILexicalBlock(scope: !20380, file: !1646, line: 116, column: 7)
!20397 = !DILocation(line: 116, column: 12, scope: !20396)
!20398 = !DILocation(line: 116, column: 7, scope: !20380)
!20399 = !DILocalVariable(name: "extra", scope: !20400, file: !1646, line: 127, type: !27)
!20400 = distinct !DILexicalBlock(scope: !20396, file: !1646, line: 118, column: 5)
!20401 = !DILocation(line: 127, column: 11, scope: !20400)
!20402 = !DILocation(line: 130, column: 21, scope: !20400)
!20403 = !DILocation(line: 130, column: 19, scope: !20400)
!20404 = !DILocation(line: 130, column: 14, scope: !20400)
!20405 = !DILocation(line: 130, column: 12, scope: !20400)
!20406 = !DILocation(line: 131, column: 5, scope: !20400)
!20407 = !DILocation(line: 133, column: 19, scope: !20380)
!20408 = !DILocation(line: 133, column: 3, scope: !20380)
!20409 = !DILocation(line: 133, column: 6, scope: !20380)
!20410 = !DILocation(line: 133, column: 17, scope: !20380)
!20411 = !{!4745, !2467, i64 0}
!20412 = !DILocation(line: 134, column: 23, scope: !20380)
!20413 = !DILocation(line: 134, column: 33, scope: !20380)
!20414 = !DILocation(line: 134, column: 3, scope: !20380)
!20415 = !DILocation(line: 134, column: 6, scope: !20380)
!20416 = !DILocation(line: 134, column: 21, scope: !20380)
!20417 = !DILocation(line: 136, column: 37, scope: !20380)
!20418 = !DILocation(line: 136, column: 40, scope: !20380)
!20419 = !DILocation(line: 136, column: 43, scope: !20380)
!20420 = !DILocation(line: 136, column: 22, scope: !20380)
!20421 = !DILocation(line: 136, column: 11, scope: !20380)
!20422 = !DILocation(line: 136, column: 14, scope: !20380)
!20423 = !DILocation(line: 136, column: 20, scope: !20380)
!20424 = !DILocation(line: 136, column: 9, scope: !20380)
!20425 = !DILocation(line: 137, column: 8, scope: !20426)
!20426 = distinct !DILexicalBlock(scope: !20380, file: !1646, line: 137, column: 7)
!20427 = !DILocation(line: 137, column: 7, scope: !20380)
!20428 = !DILocation(line: 138, column: 7, scope: !20426)
!20429 = !DILocation(line: 138, column: 5, scope: !20426)
!20430 = !DILocation(line: 139, column: 35, scope: !20380)
!20431 = !DILocation(line: 139, column: 18, scope: !20380)
!20432 = !DILocation(line: 139, column: 21, scope: !20380)
!20433 = !DILocation(line: 139, column: 33, scope: !20380)
!20434 = !DILocation(line: 139, column: 3, scope: !20380)
!20435 = !DILocation(line: 139, column: 6, scope: !20380)
!20436 = !DILocation(line: 139, column: 16, scope: !20380)
!20437 = !DILocation(line: 141, column: 44, scope: !20380)
!20438 = !DILocation(line: 141, column: 35, scope: !20380)
!20439 = !DILocation(line: 141, column: 52, scope: !20380)
!20440 = !DILocation(line: 141, column: 55, scope: !20380)
!20441 = !DILocation(line: 141, column: 50, scope: !20380)
!20442 = !DILocation(line: 141, column: 20, scope: !20380)
!20443 = !DILocation(line: 141, column: 27, scope: !20380)
!20444 = !DILocation(line: 141, column: 33, scope: !20380)
!20445 = !DILocation(line: 141, column: 3, scope: !20380)
!20446 = !DILocation(line: 141, column: 6, scope: !20380)
!20447 = !DILocation(line: 141, column: 18, scope: !20380)
!20448 = !DILocation(line: 142, column: 3, scope: !20380)
!20449 = !DILocation(line: 142, column: 10, scope: !20380)
!20450 = !DILocation(line: 142, column: 15, scope: !20380)
!20451 = !DILocation(line: 144, column: 3, scope: !20380)
!20452 = !DILocation(line: 144, column: 6, scope: !20380)
!20453 = !DILocation(line: 144, column: 25, scope: !20380)
!20454 = !DILocation(line: 145, column: 3, scope: !20380)
!20455 = !DILocation(line: 145, column: 6, scope: !20380)
!20456 = !DILocation(line: 145, column: 19, scope: !20380)
!20457 = !DILocation(line: 146, column: 3, scope: !20380)
!20458 = distinct !DISubprogram(name: "call_chunkfun", scope: !1646, file: !1646, line: 84, type: !1609, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20459 = !DILocalVariable(name: "h", arg: 1, scope: !20458, file: !1646, line: 84, type: !1563)
!20460 = !DILocation(line: 84, column: 32, scope: !20458)
!20461 = !DILocalVariable(name: "size", arg: 2, scope: !20458, file: !1646, line: 84, type: !149)
!20462 = !DILocation(line: 84, column: 42, scope: !20458)
!20463 = !DILocation(line: 86, column: 7, scope: !20464)
!20464 = distinct !DILexicalBlock(scope: !20458, file: !1646, line: 86, column: 7)
!20465 = !DILocation(line: 86, column: 10, scope: !20464)
!20466 = !DILocation(line: 86, column: 7, scope: !20458)
!20467 = !DILocation(line: 87, column: 12, scope: !20464)
!20468 = !DILocation(line: 87, column: 15, scope: !20464)
!20469 = !DILocation(line: 87, column: 24, scope: !20464)
!20470 = !DILocation(line: 87, column: 31, scope: !20464)
!20471 = !DILocation(line: 87, column: 34, scope: !20464)
!20472 = !{!4745, !2443, i64 72}
!20473 = !DILocation(line: 87, column: 45, scope: !20464)
!20474 = !DILocation(line: 87, column: 5, scope: !20464)
!20475 = !DILocation(line: 89, column: 12, scope: !20464)
!20476 = !DILocation(line: 89, column: 15, scope: !20464)
!20477 = !DILocation(line: 89, column: 24, scope: !20464)
!20478 = !DILocation(line: 89, column: 31, scope: !20464)
!20479 = !DILocation(line: 89, column: 5, scope: !20464)
!20480 = !DILocation(line: 90, column: 1, scope: !20458)
!20481 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1646, file: !1646, line: 162, type: !1597, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20482 = !DILocalVariable(name: "h", arg: 1, scope: !20481, file: !1646, line: 162, type: !1563)
!20483 = !DILocation(line: 162, column: 35, scope: !20481)
!20484 = !DILocalVariable(name: "size", arg: 2, scope: !20481, file: !1646, line: 163, type: !149)
!20485 = !DILocation(line: 163, column: 35, scope: !20481)
!20486 = !DILocalVariable(name: "alignment", arg: 3, scope: !20481, file: !1646, line: 163, type: !149)
!20487 = !DILocation(line: 163, column: 57, scope: !20481)
!20488 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20481, file: !1646, line: 164, type: !379)
!20489 = !DILocation(line: 164, column: 27, scope: !20481)
!20490 = !DILocalVariable(name: "freefun", arg: 5, scope: !20481, file: !1646, line: 165, type: !388)
!20491 = !DILocation(line: 165, column: 26, scope: !20481)
!20492 = !DILocalVariable(name: "arg", arg: 6, scope: !20481, file: !1646, line: 166, type: !167)
!20493 = !DILocation(line: 166, column: 25, scope: !20481)
!20494 = !DILocation(line: 168, column: 23, scope: !20481)
!20495 = !DILocation(line: 168, column: 3, scope: !20481)
!20496 = !DILocation(line: 168, column: 6, scope: !20481)
!20497 = !DILocation(line: 168, column: 15, scope: !20481)
!20498 = !DILocation(line: 168, column: 21, scope: !20481)
!20499 = !DILocation(line: 169, column: 22, scope: !20481)
!20500 = !DILocation(line: 169, column: 3, scope: !20481)
!20501 = !DILocation(line: 169, column: 6, scope: !20481)
!20502 = !DILocation(line: 169, column: 14, scope: !20481)
!20503 = !DILocation(line: 169, column: 20, scope: !20481)
!20504 = !DILocation(line: 170, column: 18, scope: !20481)
!20505 = !DILocation(line: 170, column: 3, scope: !20481)
!20506 = !DILocation(line: 170, column: 6, scope: !20481)
!20507 = !DILocation(line: 170, column: 16, scope: !20481)
!20508 = !DILocation(line: 171, column: 3, scope: !20481)
!20509 = !DILocation(line: 171, column: 6, scope: !20481)
!20510 = !DILocation(line: 171, column: 20, scope: !20481)
!20511 = !DILocation(line: 172, column: 33, scope: !20481)
!20512 = !DILocation(line: 172, column: 36, scope: !20481)
!20513 = !DILocation(line: 172, column: 42, scope: !20481)
!20514 = !DILocation(line: 172, column: 10, scope: !20481)
!20515 = !DILocation(line: 172, column: 3, scope: !20481)
!20516 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1646, file: !1646, line: 182, type: !1599, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20517 = !DILocalVariable(name: "h", arg: 1, scope: !20516, file: !1646, line: 182, type: !1563)
!20518 = !DILocation(line: 182, column: 36, scope: !20516)
!20519 = !DILocalVariable(name: "length", arg: 2, scope: !20516, file: !1646, line: 182, type: !149)
!20520 = !DILocation(line: 182, column: 55, scope: !20516)
!20521 = !DILocalVariable(name: "old_chunk", scope: !20516, file: !1646, line: 184, type: !1568)
!20522 = !DILocation(line: 184, column: 26, scope: !20516)
!20523 = !DILocation(line: 184, column: 38, scope: !20516)
!20524 = !DILocation(line: 184, column: 41, scope: !20516)
!20525 = !DILocalVariable(name: "new_chunk", scope: !20516, file: !1646, line: 185, type: !1568)
!20526 = !DILocation(line: 185, column: 26, scope: !20516)
!20527 = !DILocalVariable(name: "obj_size", scope: !20516, file: !1646, line: 186, type: !149)
!20528 = !DILocation(line: 186, column: 10, scope: !20516)
!20529 = !DILocation(line: 186, column: 21, scope: !20516)
!20530 = !DILocation(line: 186, column: 24, scope: !20516)
!20531 = !DILocation(line: 186, column: 36, scope: !20516)
!20532 = !DILocation(line: 186, column: 39, scope: !20516)
!20533 = !DILocation(line: 186, column: 34, scope: !20516)
!20534 = !DILocalVariable(name: "object_base", scope: !20516, file: !1646, line: 187, type: !143)
!20535 = !DILocation(line: 187, column: 9, scope: !20516)
!20536 = !DILocalVariable(name: "sum1", scope: !20516, file: !1646, line: 190, type: !149)
!20537 = !DILocation(line: 190, column: 10, scope: !20516)
!20538 = !DILocation(line: 190, column: 17, scope: !20516)
!20539 = !DILocation(line: 190, column: 28, scope: !20516)
!20540 = !DILocation(line: 190, column: 26, scope: !20516)
!20541 = !DILocalVariable(name: "sum2", scope: !20516, file: !1646, line: 191, type: !149)
!20542 = !DILocation(line: 191, column: 10, scope: !20516)
!20543 = !DILocation(line: 191, column: 17, scope: !20516)
!20544 = !DILocation(line: 191, column: 24, scope: !20516)
!20545 = !DILocation(line: 191, column: 27, scope: !20516)
!20546 = !DILocation(line: 191, column: 22, scope: !20516)
!20547 = !DILocalVariable(name: "new_size", scope: !20516, file: !1646, line: 192, type: !149)
!20548 = !DILocation(line: 192, column: 10, scope: !20516)
!20549 = !DILocation(line: 192, column: 21, scope: !20516)
!20550 = !DILocation(line: 192, column: 29, scope: !20516)
!20551 = !DILocation(line: 192, column: 38, scope: !20516)
!20552 = !DILocation(line: 192, column: 26, scope: !20516)
!20553 = !DILocation(line: 192, column: 44, scope: !20516)
!20554 = !DILocation(line: 193, column: 7, scope: !20555)
!20555 = distinct !DILexicalBlock(scope: !20516, file: !1646, line: 193, column: 7)
!20556 = !DILocation(line: 193, column: 18, scope: !20555)
!20557 = !DILocation(line: 193, column: 16, scope: !20555)
!20558 = !DILocation(line: 193, column: 7, scope: !20516)
!20559 = !DILocation(line: 194, column: 16, scope: !20555)
!20560 = !DILocation(line: 194, column: 14, scope: !20555)
!20561 = !DILocation(line: 194, column: 5, scope: !20555)
!20562 = !DILocation(line: 195, column: 7, scope: !20563)
!20563 = distinct !DILexicalBlock(scope: !20516, file: !1646, line: 195, column: 7)
!20564 = !DILocation(line: 195, column: 18, scope: !20563)
!20565 = !DILocation(line: 195, column: 21, scope: !20563)
!20566 = !DILocation(line: 195, column: 16, scope: !20563)
!20567 = !DILocation(line: 195, column: 7, scope: !20516)
!20568 = !DILocation(line: 196, column: 16, scope: !20563)
!20569 = !DILocation(line: 196, column: 19, scope: !20563)
!20570 = !DILocation(line: 196, column: 14, scope: !20563)
!20571 = !DILocation(line: 196, column: 5, scope: !20563)
!20572 = !DILocation(line: 199, column: 7, scope: !20573)
!20573 = distinct !DILexicalBlock(scope: !20516, file: !1646, line: 199, column: 7)
!20574 = !DILocation(line: 199, column: 19, scope: !20573)
!20575 = !DILocation(line: 199, column: 16, scope: !20573)
!20576 = !DILocation(line: 199, column: 24, scope: !20573)
!20577 = !DILocation(line: 199, column: 27, scope: !20573)
!20578 = !DILocation(line: 199, column: 35, scope: !20573)
!20579 = !DILocation(line: 199, column: 32, scope: !20573)
!20580 = !DILocation(line: 199, column: 7, scope: !20516)
!20581 = !DILocation(line: 200, column: 32, scope: !20573)
!20582 = !DILocation(line: 200, column: 35, scope: !20573)
!20583 = !DILocation(line: 200, column: 17, scope: !20573)
!20584 = !DILocation(line: 200, column: 15, scope: !20573)
!20585 = !DILocation(line: 200, column: 5, scope: !20573)
!20586 = !DILocation(line: 201, column: 8, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20516, file: !1646, line: 201, column: 7)
!20588 = !DILocation(line: 201, column: 7, scope: !20516)
!20589 = !DILocation(line: 202, column: 7, scope: !20587)
!20590 = !DILocation(line: 202, column: 5, scope: !20587)
!20591 = !DILocation(line: 203, column: 14, scope: !20516)
!20592 = !DILocation(line: 203, column: 3, scope: !20516)
!20593 = !DILocation(line: 203, column: 6, scope: !20516)
!20594 = !DILocation(line: 203, column: 12, scope: !20516)
!20595 = !DILocation(line: 204, column: 21, scope: !20516)
!20596 = !DILocation(line: 204, column: 3, scope: !20516)
!20597 = !DILocation(line: 204, column: 14, scope: !20516)
!20598 = !DILocation(line: 204, column: 19, scope: !20516)
!20599 = !DILocation(line: 205, column: 48, scope: !20516)
!20600 = !DILocation(line: 205, column: 39, scope: !20516)
!20601 = !DILocation(line: 205, column: 60, scope: !20516)
!20602 = !DILocation(line: 205, column: 58, scope: !20516)
!20603 = !DILocation(line: 205, column: 22, scope: !20516)
!20604 = !DILocation(line: 205, column: 25, scope: !20516)
!20605 = !DILocation(line: 205, column: 37, scope: !20516)
!20606 = !DILocation(line: 205, column: 3, scope: !20516)
!20607 = !DILocation(line: 205, column: 14, scope: !20516)
!20608 = !DILocation(line: 205, column: 20, scope: !20516)
!20609 = !DILocation(line: 209, column: 5, scope: !20516)
!20610 = !DILocation(line: 208, column: 15, scope: !20516)
!20611 = !DILocation(line: 212, column: 11, scope: !20516)
!20612 = !DILocation(line: 212, column: 24, scope: !20516)
!20613 = !DILocation(line: 212, column: 27, scope: !20516)
!20614 = !DILocation(line: 212, column: 40, scope: !20516)
!20615 = !DILocation(line: 212, column: 3, scope: !20516)
!20616 = !DILocation(line: 217, column: 8, scope: !20617)
!20617 = distinct !DILexicalBlock(scope: !20516, file: !1646, line: 217, column: 7)
!20618 = !DILocation(line: 217, column: 11, scope: !20617)
!20619 = !DILocation(line: 218, column: 7, scope: !20617)
!20620 = !DILocation(line: 218, column: 11, scope: !20617)
!20621 = !DILocation(line: 218, column: 14, scope: !20617)
!20622 = !DILocation(line: 219, column: 14, scope: !20617)
!20623 = !DILocation(line: 219, column: 11, scope: !20617)
!20624 = !DILocation(line: 217, column: 7, scope: !20516)
!20625 = !DILocation(line: 222, column: 25, scope: !20626)
!20626 = distinct !DILexicalBlock(scope: !20617, file: !1646, line: 221, column: 5)
!20627 = !DILocation(line: 222, column: 36, scope: !20626)
!20628 = !DILocation(line: 222, column: 7, scope: !20626)
!20629 = !DILocation(line: 222, column: 18, scope: !20626)
!20630 = !DILocation(line: 222, column: 23, scope: !20626)
!20631 = !DILocation(line: 223, column: 21, scope: !20626)
!20632 = !DILocation(line: 223, column: 24, scope: !20626)
!20633 = !DILocation(line: 223, column: 7, scope: !20626)
!20634 = !DILocation(line: 224, column: 5, scope: !20626)
!20635 = !DILocation(line: 226, column: 20, scope: !20516)
!20636 = !DILocation(line: 226, column: 3, scope: !20516)
!20637 = !DILocation(line: 226, column: 6, scope: !20516)
!20638 = !DILocation(line: 226, column: 18, scope: !20516)
!20639 = !DILocation(line: 227, column: 18, scope: !20516)
!20640 = !DILocation(line: 227, column: 21, scope: !20516)
!20641 = !DILocation(line: 227, column: 35, scope: !20516)
!20642 = !DILocation(line: 227, column: 33, scope: !20516)
!20643 = !DILocation(line: 227, column: 3, scope: !20516)
!20644 = !DILocation(line: 227, column: 6, scope: !20516)
!20645 = !DILocation(line: 227, column: 16, scope: !20516)
!20646 = !DILocation(line: 229, column: 3, scope: !20516)
!20647 = !DILocation(line: 229, column: 6, scope: !20516)
!20648 = !DILocation(line: 229, column: 25, scope: !20516)
!20649 = !DILocation(line: 230, column: 1, scope: !20516)
!20650 = distinct !DISubprogram(name: "call_freefun", scope: !1646, file: !1646, line: 93, type: !1603, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20651 = !DILocalVariable(name: "h", arg: 1, scope: !20650, file: !1646, line: 93, type: !1563)
!20652 = !DILocation(line: 93, column: 31, scope: !20650)
!20653 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !20650, file: !1646, line: 93, type: !167)
!20654 = !DILocation(line: 93, column: 40, scope: !20650)
!20655 = !DILocation(line: 95, column: 7, scope: !20656)
!20656 = distinct !DILexicalBlock(scope: !20650, file: !1646, line: 95, column: 7)
!20657 = !DILocation(line: 95, column: 10, scope: !20656)
!20658 = !DILocation(line: 95, column: 7, scope: !20650)
!20659 = !DILocation(line: 96, column: 5, scope: !20656)
!20660 = !DILocation(line: 96, column: 8, scope: !20656)
!20661 = !DILocation(line: 96, column: 16, scope: !20656)
!20662 = !DILocation(line: 96, column: 23, scope: !20656)
!20663 = !DILocation(line: 96, column: 26, scope: !20656)
!20664 = !DILocation(line: 96, column: 37, scope: !20656)
!20665 = !DILocation(line: 98, column: 5, scope: !20656)
!20666 = !DILocation(line: 98, column: 8, scope: !20656)
!20667 = !DILocation(line: 98, column: 16, scope: !20656)
!20668 = !DILocation(line: 98, column: 23, scope: !20656)
!20669 = !DILocation(line: 99, column: 1, scope: !20650)
!20670 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1646, file: !1646, line: 241, type: !1601, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20671 = !DILocalVariable(name: "h", arg: 1, scope: !20670, file: !1646, line: 241, type: !1563)
!20672 = !DILocation(line: 241, column: 39, scope: !20670)
!20673 = !DILocalVariable(name: "obj", arg: 2, scope: !20670, file: !1646, line: 241, type: !167)
!20674 = !DILocation(line: 241, column: 48, scope: !20670)
!20675 = !DILocalVariable(name: "lp", scope: !20670, file: !1646, line: 243, type: !1568)
!20676 = !DILocation(line: 243, column: 26, scope: !20670)
!20677 = !DILocalVariable(name: "plp", scope: !20670, file: !1646, line: 244, type: !1568)
!20678 = !DILocation(line: 244, column: 26, scope: !20670)
!20679 = !DILocation(line: 246, column: 9, scope: !20670)
!20680 = !DILocation(line: 246, column: 13, scope: !20670)
!20681 = !DILocation(line: 246, column: 6, scope: !20670)
!20682 = !DILocation(line: 250, column: 3, scope: !20670)
!20683 = !DILocation(line: 250, column: 10, scope: !20670)
!20684 = !DILocation(line: 250, column: 13, scope: !20670)
!20685 = !DILocation(line: 250, column: 18, scope: !20670)
!20686 = !DILocation(line: 250, column: 31, scope: !20670)
!20687 = !DILocation(line: 250, column: 22, scope: !20670)
!20688 = !DILocation(line: 250, column: 37, scope: !20670)
!20689 = !DILocation(line: 250, column: 34, scope: !20670)
!20690 = !DILocation(line: 250, column: 41, scope: !20670)
!20691 = !DILocation(line: 250, column: 54, scope: !20670)
!20692 = !DILocation(line: 250, column: 59, scope: !20670)
!20693 = !DILocation(line: 250, column: 67, scope: !20670)
!20694 = !DILocation(line: 250, column: 65, scope: !20670)
!20695 = !DILocation(line: 0, scope: !20670)
!20696 = !DILocation(line: 252, column: 13, scope: !20697)
!20697 = distinct !DILexicalBlock(scope: !20670, file: !1646, line: 251, column: 5)
!20698 = !DILocation(line: 252, column: 17, scope: !20697)
!20699 = !DILocation(line: 252, column: 11, scope: !20697)
!20700 = !DILocation(line: 253, column: 12, scope: !20697)
!20701 = !DILocation(line: 253, column: 10, scope: !20697)
!20702 = distinct !{!20702, !20682, !20703}
!20703 = !DILocation(line: 254, column: 5, scope: !20670)
!20704 = !DILocation(line: 255, column: 10, scope: !20670)
!20705 = !DILocation(line: 255, column: 13, scope: !20670)
!20706 = !DILocation(line: 255, column: 3, scope: !20670)
!20707 = distinct !DISubprogram(name: "_obstack_free", scope: !1646, file: !1646, line: 262, type: !1603, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20708 = !DILocalVariable(name: "h", arg: 1, scope: !20707, file: !1646, line: 262, type: !1563)
!20709 = !DILocation(line: 262, column: 32, scope: !20707)
!20710 = !DILocalVariable(name: "obj", arg: 2, scope: !20707, file: !1646, line: 262, type: !167)
!20711 = !DILocation(line: 262, column: 41, scope: !20707)
!20712 = !DILocalVariable(name: "lp", scope: !20707, file: !1646, line: 264, type: !1568)
!20713 = !DILocation(line: 264, column: 26, scope: !20707)
!20714 = !DILocalVariable(name: "plp", scope: !20707, file: !1646, line: 265, type: !1568)
!20715 = !DILocation(line: 265, column: 26, scope: !20707)
!20716 = !DILocation(line: 267, column: 8, scope: !20707)
!20717 = !DILocation(line: 267, column: 11, scope: !20707)
!20718 = !DILocation(line: 267, column: 6, scope: !20707)
!20719 = !DILocation(line: 271, column: 3, scope: !20707)
!20720 = !DILocation(line: 271, column: 10, scope: !20707)
!20721 = !DILocation(line: 271, column: 13, scope: !20707)
!20722 = !DILocation(line: 271, column: 18, scope: !20707)
!20723 = !DILocation(line: 271, column: 31, scope: !20707)
!20724 = !DILocation(line: 271, column: 22, scope: !20707)
!20725 = !DILocation(line: 271, column: 37, scope: !20707)
!20726 = !DILocation(line: 271, column: 34, scope: !20707)
!20727 = !DILocation(line: 271, column: 41, scope: !20707)
!20728 = !DILocation(line: 271, column: 54, scope: !20707)
!20729 = !DILocation(line: 271, column: 59, scope: !20707)
!20730 = !DILocation(line: 271, column: 67, scope: !20707)
!20731 = !DILocation(line: 271, column: 65, scope: !20707)
!20732 = !DILocation(line: 0, scope: !20707)
!20733 = !DILocation(line: 273, column: 13, scope: !20734)
!20734 = distinct !DILexicalBlock(scope: !20707, file: !1646, line: 272, column: 5)
!20735 = !DILocation(line: 273, column: 17, scope: !20734)
!20736 = !DILocation(line: 273, column: 11, scope: !20734)
!20737 = !DILocation(line: 274, column: 21, scope: !20734)
!20738 = !DILocation(line: 274, column: 24, scope: !20734)
!20739 = !DILocation(line: 274, column: 7, scope: !20734)
!20740 = !DILocation(line: 275, column: 12, scope: !20734)
!20741 = !DILocation(line: 275, column: 10, scope: !20734)
!20742 = !DILocation(line: 278, column: 7, scope: !20734)
!20743 = !DILocation(line: 278, column: 10, scope: !20734)
!20744 = !DILocation(line: 278, column: 29, scope: !20734)
!20745 = distinct !{!20745, !20719, !20746}
!20746 = !DILocation(line: 279, column: 5, scope: !20707)
!20747 = !DILocation(line: 280, column: 7, scope: !20748)
!20748 = distinct !DILexicalBlock(scope: !20707, file: !1646, line: 280, column: 7)
!20749 = !DILocation(line: 280, column: 7, scope: !20707)
!20750 = !DILocation(line: 282, column: 49, scope: !20751)
!20751 = distinct !DILexicalBlock(scope: !20748, file: !1646, line: 281, column: 5)
!20752 = !DILocation(line: 282, column: 24, scope: !20751)
!20753 = !DILocation(line: 282, column: 27, scope: !20751)
!20754 = !DILocation(line: 282, column: 37, scope: !20751)
!20755 = !DILocation(line: 282, column: 7, scope: !20751)
!20756 = !DILocation(line: 282, column: 10, scope: !20751)
!20757 = !DILocation(line: 282, column: 22, scope: !20751)
!20758 = !DILocation(line: 283, column: 24, scope: !20751)
!20759 = !DILocation(line: 283, column: 28, scope: !20751)
!20760 = !DILocation(line: 283, column: 7, scope: !20751)
!20761 = !DILocation(line: 283, column: 10, scope: !20751)
!20762 = !DILocation(line: 283, column: 22, scope: !20751)
!20763 = !DILocation(line: 284, column: 18, scope: !20751)
!20764 = !DILocation(line: 284, column: 7, scope: !20751)
!20765 = !DILocation(line: 284, column: 10, scope: !20751)
!20766 = !DILocation(line: 284, column: 16, scope: !20751)
!20767 = !DILocation(line: 285, column: 5, scope: !20751)
!20768 = !DILocation(line: 286, column: 12, scope: !20769)
!20769 = distinct !DILexicalBlock(scope: !20748, file: !1646, line: 286, column: 12)
!20770 = !DILocation(line: 286, column: 16, scope: !20769)
!20771 = !DILocation(line: 286, column: 12, scope: !20748)
!20772 = !DILocation(line: 288, column: 5, scope: !20769)
!20773 = !DILocation(line: 289, column: 1, scope: !20707)
!20774 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1646, file: !1646, line: 292, type: !1605, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20775 = !DILocalVariable(name: "h", arg: 1, scope: !20774, file: !1646, line: 292, type: !1563)
!20776 = !DILocation(line: 292, column: 39, scope: !20774)
!20777 = !DILocalVariable(name: "lp", scope: !20774, file: !1646, line: 294, type: !1568)
!20778 = !DILocation(line: 294, column: 26, scope: !20774)
!20779 = !DILocalVariable(name: "nbytes", scope: !20774, file: !1646, line: 295, type: !149)
!20780 = !DILocation(line: 295, column: 19, scope: !20774)
!20781 = !DILocation(line: 297, column: 13, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20774, file: !1646, line: 297, column: 3)
!20783 = !DILocation(line: 297, column: 16, scope: !20782)
!20784 = !DILocation(line: 297, column: 11, scope: !20782)
!20785 = !DILocation(line: 297, column: 8, scope: !20782)
!20786 = !DILocation(line: 297, column: 23, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20782, file: !1646, line: 297, column: 3)
!20788 = !DILocation(line: 297, column: 26, scope: !20787)
!20789 = !DILocation(line: 297, column: 3, scope: !20782)
!20790 = !DILocation(line: 299, column: 17, scope: !20791)
!20791 = distinct !DILexicalBlock(scope: !20787, file: !1646, line: 298, column: 5)
!20792 = !DILocation(line: 299, column: 21, scope: !20791)
!20793 = !DILocation(line: 299, column: 38, scope: !20791)
!20794 = !DILocation(line: 299, column: 29, scope: !20791)
!20795 = !DILocation(line: 299, column: 27, scope: !20791)
!20796 = !DILocation(line: 299, column: 14, scope: !20791)
!20797 = !DILocation(line: 300, column: 5, scope: !20791)
!20798 = !DILocation(line: 297, column: 37, scope: !20787)
!20799 = !DILocation(line: 297, column: 41, scope: !20787)
!20800 = !DILocation(line: 297, column: 35, scope: !20787)
!20801 = !DILocation(line: 297, column: 3, scope: !20787)
!20802 = distinct !{!20802, !20789, !20803}
!20803 = !DILocation(line: 300, column: 5, scope: !20782)
!20804 = !DILocation(line: 301, column: 10, scope: !20774)
!20805 = !DILocation(line: 301, column: 3, scope: !20774)
!20806 = distinct !DISubprogram(name: "tzalloc", scope: !2231, file: !2231, line: 95, type: !2181, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20807 = !DILocalVariable(name: "name", arg: 1, scope: !20806, file: !2231, line: 95, type: !146)
!20808 = !DILocation(line: 95, column: 22, scope: !20806)
!20809 = !DILocalVariable(name: "name_size", scope: !20806, file: !2231, line: 97, type: !149)
!20810 = !DILocation(line: 97, column: 10, scope: !20806)
!20811 = !DILocation(line: 97, column: 22, scope: !20806)
!20812 = !DILocation(line: 97, column: 37, scope: !20806)
!20813 = !DILocation(line: 97, column: 29, scope: !20806)
!20814 = !DILocation(line: 97, column: 43, scope: !20806)
!20815 = !DILocalVariable(name: "abbr_size", scope: !20806, file: !2231, line: 98, type: !149)
!20816 = !DILocation(line: 98, column: 10, scope: !20806)
!20817 = !DILocation(line: 98, column: 22, scope: !20806)
!20818 = !DILocation(line: 98, column: 32, scope: !20806)
!20819 = !DILocation(line: 98, column: 66, scope: !20806)
!20820 = !DILocation(line: 98, column: 76, scope: !20806)
!20821 = !DILocalVariable(name: "tz", scope: !20806, file: !2231, line: 99, type: !2183)
!20822 = !DILocation(line: 99, column: 14, scope: !20806)
!20823 = !DILocation(line: 99, column: 27, scope: !20806)
!20824 = !DILocation(line: 99, column: 19, scope: !20806)
!20825 = !DILocation(line: 100, column: 7, scope: !20826)
!20826 = distinct !DILexicalBlock(scope: !20806, file: !2231, line: 100, column: 7)
!20827 = !DILocation(line: 100, column: 7, scope: !20806)
!20828 = !DILocation(line: 102, column: 7, scope: !20829)
!20829 = distinct !DILexicalBlock(scope: !20826, file: !2231, line: 101, column: 5)
!20830 = !DILocation(line: 102, column: 11, scope: !20829)
!20831 = !DILocation(line: 102, column: 16, scope: !20829)
!20832 = !DILocation(line: 106, column: 25, scope: !20829)
!20833 = !DILocation(line: 106, column: 24, scope: !20829)
!20834 = !DILocation(line: 106, column: 23, scope: !20829)
!20835 = !DILocation(line: 106, column: 7, scope: !20829)
!20836 = !DILocation(line: 106, column: 11, scope: !20829)
!20837 = !DILocation(line: 106, column: 21, scope: !20829)
!20838 = !DILocation(line: 107, column: 7, scope: !20829)
!20839 = !DILocation(line: 107, column: 11, scope: !20829)
!20840 = !DILocation(line: 107, column: 20, scope: !20829)
!20841 = !DILocation(line: 108, column: 11, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20829, file: !2231, line: 108, column: 11)
!20843 = !DILocation(line: 108, column: 11, scope: !20829)
!20844 = !DILocation(line: 109, column: 23, scope: !20842)
!20845 = !DILocation(line: 109, column: 27, scope: !20842)
!20846 = !DILocation(line: 109, column: 34, scope: !20842)
!20847 = !DILocation(line: 109, column: 40, scope: !20842)
!20848 = !DILocation(line: 109, column: 9, scope: !20842)
!20849 = !DILocation(line: 110, column: 5, scope: !20829)
!20850 = !DILocation(line: 111, column: 10, scope: !20806)
!20851 = !DILocation(line: 111, column: 3, scope: !20806)
!20852 = distinct !DISubprogram(name: "extend_abbrs", scope: !2231, file: !2231, line: 86, type: !2212, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20853 = !DILocalVariable(name: "abbrs", arg: 1, scope: !20852, file: !2231, line: 86, type: !143)
!20854 = !DILocation(line: 86, column: 21, scope: !20852)
!20855 = !DILocalVariable(name: "abbr", arg: 2, scope: !20852, file: !2231, line: 86, type: !146)
!20856 = !DILocation(line: 86, column: 40, scope: !20852)
!20857 = !DILocalVariable(name: "abbr_size", arg: 3, scope: !20852, file: !2231, line: 86, type: !149)
!20858 = !DILocation(line: 86, column: 53, scope: !20852)
!20859 = !DILocation(line: 88, column: 11, scope: !20852)
!20860 = !DILocation(line: 88, column: 18, scope: !20852)
!20861 = !DILocation(line: 88, column: 24, scope: !20852)
!20862 = !DILocation(line: 88, column: 3, scope: !20852)
!20863 = !DILocation(line: 89, column: 3, scope: !20852)
!20864 = !DILocation(line: 89, column: 9, scope: !20852)
!20865 = !DILocation(line: 89, column: 20, scope: !20852)
!20866 = !DILocation(line: 90, column: 1, scope: !20852)
!20867 = distinct !DISubprogram(name: "tzfree", scope: !2231, file: !2231, line: 196, type: !2190, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20868 = !DILocalVariable(name: "tz", arg: 1, scope: !20867, file: !2231, line: 196, type: !2183)
!20869 = !DILocation(line: 196, column: 20, scope: !20867)
!20870 = !DILocation(line: 198, column: 7, scope: !20871)
!20871 = distinct !DILexicalBlock(scope: !20867, file: !2231, line: 198, column: 7)
!20872 = !DILocation(line: 198, column: 10, scope: !20871)
!20873 = !DILocation(line: 198, column: 7, scope: !20867)
!20874 = !DILocation(line: 199, column: 5, scope: !20871)
!20875 = !DILocation(line: 199, column: 12, scope: !20871)
!20876 = !DILocalVariable(name: "next", scope: !20877, file: !2231, line: 201, type: !2183)
!20877 = distinct !DILexicalBlock(scope: !20871, file: !2231, line: 200, column: 7)
!20878 = !DILocation(line: 201, column: 20, scope: !20877)
!20879 = !DILocation(line: 201, column: 27, scope: !20877)
!20880 = !DILocation(line: 201, column: 31, scope: !20877)
!20881 = !DILocation(line: 202, column: 15, scope: !20877)
!20882 = !DILocation(line: 202, column: 9, scope: !20877)
!20883 = !DILocation(line: 203, column: 14, scope: !20877)
!20884 = !DILocation(line: 203, column: 12, scope: !20877)
!20885 = distinct !{!20885, !20874, !20886}
!20886 = !DILocation(line: 204, column: 7, scope: !20871)
!20887 = !DILocation(line: 205, column: 1, scope: !20867)
!20888 = distinct !DISubprogram(name: "localtime_rz", scope: !2231, file: !2231, line: 287, type: !2192, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20889 = !DILocalVariable(name: "tz", arg: 1, scope: !20888, file: !2231, line: 287, type: !2183)
!20890 = !DILocation(line: 287, column: 26, scope: !20888)
!20891 = !DILocalVariable(name: "t", arg: 2, scope: !20888, file: !2231, line: 287, type: !2208)
!20892 = !DILocation(line: 287, column: 44, scope: !20888)
!20893 = !DILocalVariable(name: "tm", arg: 3, scope: !20888, file: !2231, line: 287, type: !2194)
!20894 = !DILocation(line: 287, column: 58, scope: !20888)
!20895 = !DILocation(line: 304, column: 8, scope: !20896)
!20896 = distinct !DILexicalBlock(scope: !20888, file: !2231, line: 304, column: 7)
!20897 = !DILocation(line: 304, column: 7, scope: !20888)
!20898 = !DILocation(line: 305, column: 22, scope: !20896)
!20899 = !DILocation(line: 305, column: 25, scope: !20896)
!20900 = !DILocation(line: 305, column: 12, scope: !20896)
!20901 = !DILocation(line: 305, column: 5, scope: !20896)
!20902 = !DILocalVariable(name: "old_tz", scope: !20903, file: !2231, line: 308, type: !2183)
!20903 = distinct !DILexicalBlock(scope: !20896, file: !2231, line: 307, column: 5)
!20904 = !DILocation(line: 308, column: 18, scope: !20903)
!20905 = !DILocation(line: 308, column: 35, scope: !20903)
!20906 = !DILocation(line: 308, column: 27, scope: !20903)
!20907 = !DILocation(line: 309, column: 11, scope: !20908)
!20908 = distinct !DILexicalBlock(scope: !20903, file: !2231, line: 309, column: 11)
!20909 = !DILocation(line: 309, column: 11, scope: !20903)
!20910 = !DILocalVariable(name: "abbr_saved", scope: !20911, file: !2231, line: 311, type: !141)
!20911 = distinct !DILexicalBlock(scope: !20908, file: !2231, line: 310, column: 9)
!20912 = !DILocation(line: 311, column: 16, scope: !20911)
!20913 = !DILocation(line: 311, column: 42, scope: !20911)
!20914 = !DILocation(line: 311, column: 45, scope: !20911)
!20915 = !DILocation(line: 311, column: 29, scope: !20911)
!20916 = !DILocation(line: 311, column: 49, scope: !20911)
!20917 = !DILocation(line: 311, column: 63, scope: !20911)
!20918 = !DILocation(line: 311, column: 67, scope: !20911)
!20919 = !DILocation(line: 311, column: 52, scope: !20911)
!20920 = !DILocation(line: 0, scope: !20911)
!20921 = !DILocation(line: 312, column: 26, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20911, file: !2231, line: 312, column: 15)
!20923 = !DILocation(line: 312, column: 15, scope: !20922)
!20924 = !DILocation(line: 312, column: 34, scope: !20922)
!20925 = !DILocation(line: 312, column: 37, scope: !20922)
!20926 = !DILocation(line: 312, column: 15, scope: !20911)
!20927 = !DILocation(line: 313, column: 20, scope: !20922)
!20928 = !DILocation(line: 313, column: 13, scope: !20922)
!20929 = !DILocation(line: 314, column: 9, scope: !20911)
!20930 = !DILocation(line: 315, column: 7, scope: !20903)
!20931 = !DILocation(line: 317, column: 1, scope: !20888)
!20932 = distinct !DISubprogram(name: "set_tz", scope: !2231, file: !2231, line: 242, type: !2214, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20933 = !DILocalVariable(name: "tz", arg: 1, scope: !20932, file: !2231, line: 242, type: !2183)
!20934 = !DILocation(line: 242, column: 20, scope: !20932)
!20935 = !DILocalVariable(name: "env_tz", scope: !20932, file: !2231, line: 244, type: !143)
!20936 = !DILocation(line: 244, column: 9, scope: !20932)
!20937 = !DILocation(line: 244, column: 18, scope: !20932)
!20938 = !DILocation(line: 245, column: 7, scope: !20939)
!20939 = distinct !DILexicalBlock(scope: !20932, file: !2231, line: 245, column: 7)
!20940 = !DILocation(line: 245, column: 7, scope: !20932)
!20941 = !DILocation(line: 246, column: 9, scope: !20939)
!20942 = !DILocation(line: 246, column: 13, scope: !20939)
!20943 = !DILocation(line: 246, column: 23, scope: !20939)
!20944 = !DILocation(line: 246, column: 34, scope: !20939)
!20945 = !DILocation(line: 246, column: 38, scope: !20939)
!20946 = !DILocation(line: 246, column: 45, scope: !20939)
!20947 = !DILocation(line: 246, column: 26, scope: !20939)
!20948 = !DILocation(line: 246, column: 53, scope: !20939)
!20949 = !DILocation(line: 247, column: 10, scope: !20939)
!20950 = !DILocation(line: 247, column: 14, scope: !20939)
!20951 = !DILocation(line: 248, column: 5, scope: !20939)
!20952 = !DILocalVariable(name: "old_tz", scope: !20953, file: !2231, line: 251, type: !2183)
!20953 = distinct !DILexicalBlock(scope: !20939, file: !2231, line: 250, column: 5)
!20954 = !DILocation(line: 251, column: 18, scope: !20953)
!20955 = !DILocation(line: 251, column: 36, scope: !20953)
!20956 = !DILocation(line: 251, column: 27, scope: !20953)
!20957 = !DILocation(line: 252, column: 12, scope: !20958)
!20958 = distinct !DILexicalBlock(scope: !20953, file: !2231, line: 252, column: 11)
!20959 = !DILocation(line: 252, column: 11, scope: !20953)
!20960 = !DILocation(line: 253, column: 16, scope: !20958)
!20961 = !DILocation(line: 253, column: 9, scope: !20958)
!20962 = !DILocation(line: 254, column: 25, scope: !20963)
!20963 = distinct !DILexicalBlock(scope: !20953, file: !2231, line: 254, column: 11)
!20964 = !DILocation(line: 254, column: 13, scope: !20963)
!20965 = !DILocation(line: 254, column: 11, scope: !20953)
!20966 = !DILocalVariable(name: "saved_errno", scope: !20967, file: !2231, line: 256, type: !27)
!20967 = distinct !DILexicalBlock(scope: !20963, file: !2231, line: 255, column: 9)
!20968 = !DILocation(line: 256, column: 15, scope: !20967)
!20969 = !DILocation(line: 256, column: 29, scope: !20967)
!20970 = !DILocation(line: 257, column: 19, scope: !20967)
!20971 = !DILocation(line: 257, column: 11, scope: !20967)
!20972 = !DILocation(line: 258, column: 19, scope: !20967)
!20973 = !DILocation(line: 258, column: 11, scope: !20967)
!20974 = !DILocation(line: 258, column: 17, scope: !20967)
!20975 = !DILocation(line: 259, column: 11, scope: !20967)
!20976 = !DILocation(line: 261, column: 14, scope: !20953)
!20977 = !DILocation(line: 261, column: 7, scope: !20953)
!20978 = !DILocation(line: 263, column: 1, scope: !20932)
!20979 = distinct !DISubprogram(name: "save_abbr", scope: !2231, file: !2231, line: 119, type: !2220, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20980 = !DILocalVariable(name: "tz", arg: 1, scope: !20979, file: !2231, line: 119, type: !2183)
!20981 = !DILocation(line: 119, column: 23, scope: !20979)
!20982 = !DILocalVariable(name: "tm", arg: 2, scope: !20979, file: !2231, line: 119, type: !2194)
!20983 = !DILocation(line: 119, column: 38, scope: !20979)
!20984 = !DILocalVariable(name: "zone", scope: !20979, file: !2231, line: 122, type: !146)
!20985 = !DILocation(line: 122, column: 15, scope: !20979)
!20986 = !DILocalVariable(name: "zone_copy", scope: !20979, file: !2231, line: 123, type: !143)
!20987 = !DILocation(line: 123, column: 9, scope: !20979)
!20988 = !DILocation(line: 130, column: 10, scope: !20979)
!20989 = !DILocation(line: 130, column: 14, scope: !20979)
!20990 = !DILocation(line: 130, column: 8, scope: !20979)
!20991 = !DILocation(line: 142, column: 8, scope: !20992)
!20992 = distinct !DILexicalBlock(scope: !20979, file: !2231, line: 142, column: 7)
!20993 = !DILocation(line: 142, column: 13, scope: !20992)
!20994 = !DILocation(line: 142, column: 26, scope: !20992)
!20995 = !DILocation(line: 142, column: 17, scope: !20992)
!20996 = !DILocation(line: 142, column: 32, scope: !20992)
!20997 = !DILocation(line: 142, column: 29, scope: !20992)
!20998 = !DILocation(line: 142, column: 37, scope: !20992)
!20999 = !DILocation(line: 142, column: 40, scope: !20992)
!21000 = !DILocation(line: 142, column: 57, scope: !20992)
!21001 = !DILocation(line: 142, column: 60, scope: !20992)
!21002 = !DILocation(line: 142, column: 47, scope: !20992)
!21003 = !DILocation(line: 142, column: 45, scope: !20992)
!21004 = !DILocation(line: 142, column: 7, scope: !20979)
!21005 = !DILocation(line: 143, column: 5, scope: !20992)
!21006 = !DILocation(line: 145, column: 8, scope: !21007)
!21007 = distinct !DILexicalBlock(scope: !20979, file: !2231, line: 145, column: 7)
!21008 = !DILocation(line: 145, column: 7, scope: !21007)
!21009 = !DILocation(line: 145, column: 7, scope: !20979)
!21010 = !DILocation(line: 147, column: 19, scope: !21011)
!21011 = distinct !DILexicalBlock(scope: !21007, file: !2231, line: 146, column: 5)
!21012 = !DILocation(line: 147, column: 23, scope: !21011)
!21013 = !DILocation(line: 147, column: 17, scope: !21011)
!21014 = !DILocation(line: 149, column: 7, scope: !21011)
!21015 = !DILocation(line: 149, column: 22, scope: !21011)
!21016 = !DILocation(line: 149, column: 33, scope: !21011)
!21017 = !DILocation(line: 149, column: 14, scope: !21011)
!21018 = !DILocation(line: 149, column: 39, scope: !21011)
!21019 = !DILocation(line: 151, column: 19, scope: !21020)
!21020 = distinct !DILexicalBlock(scope: !21021, file: !2231, line: 151, column: 15)
!21021 = distinct !DILexicalBlock(scope: !21011, file: !2231, line: 150, column: 9)
!21022 = !DILocation(line: 151, column: 18, scope: !21020)
!21023 = !DILocation(line: 151, column: 29, scope: !21020)
!21024 = !DILocation(line: 151, column: 33, scope: !21020)
!21025 = !DILocation(line: 151, column: 46, scope: !21020)
!21026 = !DILocation(line: 151, column: 50, scope: !21020)
!21027 = !DILocation(line: 151, column: 43, scope: !21020)
!21028 = !DILocation(line: 151, column: 56, scope: !21020)
!21029 = !DILocation(line: 151, column: 59, scope: !21020)
!21030 = !DILocation(line: 151, column: 63, scope: !21020)
!21031 = !DILocation(line: 151, column: 15, scope: !21021)
!21032 = !DILocalVariable(name: "zone_size", scope: !21033, file: !2231, line: 153, type: !149)
!21033 = distinct !DILexicalBlock(scope: !21020, file: !2231, line: 152, column: 13)
!21034 = !DILocation(line: 153, column: 22, scope: !21033)
!21035 = !DILocation(line: 153, column: 42, scope: !21033)
!21036 = !DILocation(line: 153, column: 34, scope: !21033)
!21037 = !DILocation(line: 153, column: 48, scope: !21033)
!21038 = !DILocalVariable(name: "zone_used", scope: !21033, file: !2231, line: 154, type: !149)
!21039 = !DILocation(line: 154, column: 22, scope: !21033)
!21040 = !DILocation(line: 154, column: 34, scope: !21033)
!21041 = !DILocation(line: 154, column: 46, scope: !21033)
!21042 = !DILocation(line: 154, column: 50, scope: !21033)
!21043 = !DILocation(line: 154, column: 44, scope: !21033)
!21044 = !DILocation(line: 155, column: 30, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21033, file: !2231, line: 155, column: 19)
!21046 = !DILocation(line: 155, column: 28, scope: !21045)
!21047 = !DILocation(line: 155, column: 42, scope: !21045)
!21048 = !DILocation(line: 155, column: 40, scope: !21045)
!21049 = !DILocation(line: 155, column: 19, scope: !21033)
!21050 = !DILocation(line: 157, column: 19, scope: !21051)
!21051 = distinct !DILexicalBlock(scope: !21045, file: !2231, line: 156, column: 17)
!21052 = !DILocation(line: 157, column: 25, scope: !21051)
!21053 = !DILocation(line: 158, column: 19, scope: !21051)
!21054 = !DILocation(line: 160, column: 19, scope: !21055)
!21055 = distinct !DILexicalBlock(scope: !21033, file: !2231, line: 160, column: 19)
!21056 = !DILocation(line: 160, column: 31, scope: !21055)
!21057 = !DILocation(line: 160, column: 29, scope: !21055)
!21058 = !DILocation(line: 160, column: 41, scope: !21055)
!21059 = !DILocation(line: 160, column: 19, scope: !21033)
!21060 = !DILocation(line: 161, column: 31, scope: !21055)
!21061 = !DILocation(line: 161, column: 42, scope: !21055)
!21062 = !DILocation(line: 161, column: 48, scope: !21055)
!21063 = !DILocation(line: 161, column: 17, scope: !21055)
!21064 = !DILocation(line: 164, column: 44, scope: !21065)
!21065 = distinct !DILexicalBlock(scope: !21055, file: !2231, line: 163, column: 17)
!21066 = !DILocation(line: 164, column: 35, scope: !21065)
!21067 = !DILocation(line: 164, column: 24, scope: !21065)
!21068 = !DILocation(line: 164, column: 28, scope: !21065)
!21069 = !DILocation(line: 164, column: 33, scope: !21065)
!21070 = !DILocation(line: 164, column: 22, scope: !21065)
!21071 = !DILocation(line: 165, column: 24, scope: !21072)
!21072 = distinct !DILexicalBlock(scope: !21065, file: !2231, line: 165, column: 23)
!21073 = !DILocation(line: 165, column: 23, scope: !21065)
!21074 = !DILocation(line: 166, column: 21, scope: !21072)
!21075 = !DILocation(line: 167, column: 19, scope: !21065)
!21076 = !DILocation(line: 167, column: 23, scope: !21065)
!21077 = !DILocation(line: 167, column: 33, scope: !21065)
!21078 = !DILocation(line: 168, column: 31, scope: !21065)
!21079 = !DILocation(line: 168, column: 35, scope: !21065)
!21080 = !DILocation(line: 168, column: 29, scope: !21065)
!21081 = !DILocation(line: 170, column: 15, scope: !21033)
!21082 = !DILocation(line: 173, column: 32, scope: !21021)
!21083 = !DILocation(line: 173, column: 24, scope: !21021)
!21084 = !DILocation(line: 173, column: 43, scope: !21021)
!21085 = !DILocation(line: 173, column: 21, scope: !21021)
!21086 = !DILocation(line: 174, column: 17, scope: !21087)
!21087 = distinct !DILexicalBlock(scope: !21021, file: !2231, line: 174, column: 15)
!21088 = !DILocation(line: 174, column: 16, scope: !21087)
!21089 = !DILocation(line: 174, column: 27, scope: !21087)
!21090 = !DILocation(line: 174, column: 30, scope: !21087)
!21091 = !DILocation(line: 174, column: 34, scope: !21087)
!21092 = !DILocation(line: 174, column: 15, scope: !21021)
!21093 = !DILocation(line: 176, column: 20, scope: !21094)
!21094 = distinct !DILexicalBlock(scope: !21087, file: !2231, line: 175, column: 13)
!21095 = !DILocation(line: 176, column: 24, scope: !21094)
!21096 = !DILocation(line: 176, column: 18, scope: !21094)
!21097 = !DILocation(line: 177, column: 27, scope: !21094)
!21098 = !DILocation(line: 177, column: 31, scope: !21094)
!21099 = !DILocation(line: 177, column: 25, scope: !21094)
!21100 = !DILocation(line: 178, column: 13, scope: !21094)
!21101 = distinct !{!21101, !21014, !21102}
!21102 = !DILocation(line: 179, column: 9, scope: !21011)
!21103 = !DILocation(line: 180, column: 5, scope: !21011)
!21104 = !DILocation(line: 184, column: 17, scope: !20979)
!21105 = !DILocation(line: 184, column: 3, scope: !20979)
!21106 = !DILocation(line: 184, column: 7, scope: !20979)
!21107 = !DILocation(line: 184, column: 15, scope: !20979)
!21108 = !DILocation(line: 191, column: 3, scope: !20979)
!21109 = !DILocation(line: 192, column: 1, scope: !20979)
!21110 = distinct !DISubprogram(name: "revert_tz", scope: !2231, file: !2231, line: 269, type: !2216, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21111 = !DILocalVariable(name: "tz", arg: 1, scope: !21110, file: !2231, line: 269, type: !2183)
!21112 = !DILocation(line: 269, column: 23, scope: !21110)
!21113 = !DILocation(line: 271, column: 7, scope: !21114)
!21114 = distinct !DILexicalBlock(scope: !21110, file: !2231, line: 271, column: 7)
!21115 = !DILocation(line: 271, column: 10, scope: !21114)
!21116 = !DILocation(line: 271, column: 7, scope: !21110)
!21117 = !DILocation(line: 272, column: 5, scope: !21114)
!21118 = !DILocalVariable(name: "saved_errno", scope: !21119, file: !2231, line: 275, type: !27)
!21119 = distinct !DILexicalBlock(scope: !21114, file: !2231, line: 274, column: 5)
!21120 = !DILocation(line: 275, column: 11, scope: !21119)
!21121 = !DILocation(line: 275, column: 25, scope: !21119)
!21122 = !DILocalVariable(name: "ok", scope: !21119, file: !2231, line: 276, type: !141)
!21123 = !DILocation(line: 276, column: 12, scope: !21119)
!21124 = !DILocation(line: 276, column: 29, scope: !21119)
!21125 = !DILocation(line: 276, column: 17, scope: !21119)
!21126 = !DILocation(line: 277, column: 12, scope: !21127)
!21127 = distinct !DILexicalBlock(scope: !21119, file: !2231, line: 277, column: 11)
!21128 = !DILocation(line: 277, column: 11, scope: !21119)
!21129 = !DILocation(line: 278, column: 23, scope: !21127)
!21130 = !DILocation(line: 278, column: 21, scope: !21127)
!21131 = !DILocation(line: 278, column: 9, scope: !21127)
!21132 = !DILocation(line: 279, column: 15, scope: !21119)
!21133 = !DILocation(line: 279, column: 7, scope: !21119)
!21134 = !DILocation(line: 280, column: 15, scope: !21119)
!21135 = !DILocation(line: 280, column: 7, scope: !21119)
!21136 = !DILocation(line: 280, column: 13, scope: !21119)
!21137 = !DILocation(line: 281, column: 14, scope: !21119)
!21138 = !DILocation(line: 281, column: 7, scope: !21119)
!21139 = !DILocation(line: 283, column: 1, scope: !21110)
!21140 = distinct !DISubprogram(name: "change_env", scope: !2231, file: !2231, line: 229, type: !2216, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21141 = !DILocalVariable(name: "tz", arg: 1, scope: !21140, file: !2231, line: 229, type: !2183)
!21142 = !DILocation(line: 229, column: 24, scope: !21140)
!21143 = !DILocation(line: 231, column: 18, scope: !21144)
!21144 = distinct !DILexicalBlock(scope: !21140, file: !2231, line: 231, column: 7)
!21145 = !DILocation(line: 231, column: 22, scope: !21144)
!21146 = !DILocation(line: 231, column: 34, scope: !21144)
!21147 = !DILocation(line: 231, column: 38, scope: !21144)
!21148 = !DILocation(line: 231, column: 7, scope: !21144)
!21149 = !DILocation(line: 231, column: 52, scope: !21144)
!21150 = !DILocation(line: 231, column: 7, scope: !21140)
!21151 = !DILocation(line: 232, column: 5, scope: !21144)
!21152 = !DILocation(line: 233, column: 3, scope: !21140)
!21153 = !DILocation(line: 234, column: 3, scope: !21140)
!21154 = !DILocation(line: 235, column: 1, scope: !21140)
!21155 = distinct !DISubprogram(name: "setenv_TZ", scope: !2231, file: !2231, line: 220, type: !2218, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21156 = !DILocalVariable(name: "tz", arg: 1, scope: !21155, file: !2231, line: 220, type: !146)
!21157 = !DILocation(line: 220, column: 24, scope: !21155)
!21158 = !DILocation(line: 222, column: 10, scope: !21155)
!21159 = !DILocation(line: 222, column: 29, scope: !21155)
!21160 = !DILocation(line: 222, column: 15, scope: !21155)
!21161 = !DILocation(line: 222, column: 38, scope: !21155)
!21162 = !DILocation(line: 222, column: 3, scope: !21155)
!21163 = distinct !DISubprogram(name: "getenv_TZ", scope: !2231, file: !2231, line: 212, type: !2123, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21164 = !DILocation(line: 214, column: 10, scope: !21163)
!21165 = !DILocation(line: 214, column: 3, scope: !21163)
!21166 = distinct !DISubprogram(name: "mktime_z", scope: !2231, file: !2231, line: 321, type: !2210, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21167 = !DILocalVariable(name: "tz", arg: 1, scope: !21166, file: !2231, line: 321, type: !2183)
!21168 = !DILocation(line: 321, column: 22, scope: !21166)
!21169 = !DILocalVariable(name: "tm", arg: 2, scope: !21166, file: !2231, line: 321, type: !2194)
!21170 = !DILocation(line: 321, column: 37, scope: !21166)
!21171 = !DILocation(line: 323, column: 8, scope: !21172)
!21172 = distinct !DILexicalBlock(scope: !21166, file: !2231, line: 323, column: 7)
!21173 = !DILocation(line: 323, column: 7, scope: !21166)
!21174 = !DILocation(line: 324, column: 20, scope: !21172)
!21175 = !DILocation(line: 324, column: 12, scope: !21172)
!21176 = !DILocation(line: 324, column: 5, scope: !21172)
!21177 = !DILocalVariable(name: "old_tz", scope: !21178, file: !2231, line: 327, type: !2183)
!21178 = distinct !DILexicalBlock(scope: !21172, file: !2231, line: 326, column: 5)
!21179 = !DILocation(line: 327, column: 18, scope: !21178)
!21180 = !DILocation(line: 327, column: 35, scope: !21178)
!21181 = !DILocation(line: 327, column: 27, scope: !21178)
!21182 = !DILocation(line: 328, column: 11, scope: !21183)
!21183 = distinct !DILexicalBlock(scope: !21178, file: !2231, line: 328, column: 11)
!21184 = !DILocation(line: 328, column: 11, scope: !21178)
!21185 = !DILocalVariable(name: "t", scope: !21186, file: !2231, line: 330, type: !162)
!21186 = distinct !DILexicalBlock(scope: !21183, file: !2231, line: 329, column: 9)
!21187 = !DILocation(line: 330, column: 18, scope: !21186)
!21188 = !DILocation(line: 330, column: 30, scope: !21186)
!21189 = !DILocation(line: 330, column: 22, scope: !21186)
!21190 = !DILocalVariable(name: "badtime", scope: !21186, file: !2231, line: 332, type: !162)
!21191 = !DILocation(line: 332, column: 18, scope: !21186)
!21192 = !DILocalVariable(name: "tm_1", scope: !21186, file: !2231, line: 333, type: !2195)
!21193 = !DILocation(line: 333, column: 21, scope: !21186)
!21194 = !DILocation(line: 334, column: 16, scope: !21195)
!21195 = distinct !DILexicalBlock(scope: !21186, file: !2231, line: 334, column: 15)
!21196 = !DILocation(line: 334, column: 21, scope: !21195)
!21197 = !DILocation(line: 334, column: 18, scope: !21195)
!21198 = !DILocation(line: 335, column: 16, scope: !21195)
!21199 = !DILocation(line: 335, column: 20, scope: !21195)
!21200 = !DILocation(line: 335, column: 44, scope: !21195)
!21201 = !DILocation(line: 335, column: 57, scope: !21195)
!21202 = !DILocation(line: 335, column: 47, scope: !21195)
!21203 = !DILocation(line: 336, column: 15, scope: !21195)
!21204 = !DILocation(line: 336, column: 30, scope: !21195)
!21205 = !DILocation(line: 336, column: 34, scope: !21195)
!21206 = !DILocation(line: 336, column: 19, scope: !21195)
!21207 = !DILocation(line: 334, column: 15, scope: !21186)
!21208 = !DILocation(line: 337, column: 17, scope: !21195)
!21209 = !DILocation(line: 337, column: 15, scope: !21195)
!21210 = !DILocation(line: 337, column: 13, scope: !21195)
!21211 = !DILocation(line: 339, column: 26, scope: !21212)
!21212 = distinct !DILexicalBlock(scope: !21186, file: !2231, line: 339, column: 15)
!21213 = !DILocation(line: 339, column: 15, scope: !21212)
!21214 = !DILocation(line: 339, column: 15, scope: !21186)
!21215 = !DILocation(line: 340, column: 20, scope: !21212)
!21216 = !DILocation(line: 340, column: 13, scope: !21212)
!21217 = !DILocation(line: 341, column: 9, scope: !21186)
!21218 = !DILocation(line: 342, column: 7, scope: !21178)
!21219 = !DILocation(line: 344, column: 1, scope: !21166)
!21220 = distinct !DISubprogram(name: "equal_tm", scope: !2231, file: !2231, line: 69, type: !2222, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21221 = !DILocalVariable(name: "a", arg: 1, scope: !21220, file: !2231, line: 69, type: !2224)
!21222 = !DILocation(line: 69, column: 28, scope: !21220)
!21223 = !DILocalVariable(name: "b", arg: 2, scope: !21220, file: !2231, line: 69, type: !2224)
!21224 = !DILocation(line: 69, column: 48, scope: !21220)
!21225 = !DILocation(line: 71, column: 14, scope: !21220)
!21226 = !DILocation(line: 71, column: 17, scope: !21220)
!21227 = !DILocation(line: 71, column: 26, scope: !21220)
!21228 = !DILocation(line: 71, column: 29, scope: !21220)
!21229 = !DILocation(line: 71, column: 24, scope: !21220)
!21230 = !DILocation(line: 72, column: 16, scope: !21220)
!21231 = !DILocation(line: 72, column: 19, scope: !21220)
!21232 = !DILocation(line: 72, column: 28, scope: !21220)
!21233 = !DILocation(line: 72, column: 31, scope: !21220)
!21234 = !DILocation(line: 72, column: 26, scope: !21220)
!21235 = !DILocation(line: 72, column: 13, scope: !21220)
!21236 = !DILocation(line: 73, column: 16, scope: !21220)
!21237 = !DILocation(line: 73, column: 19, scope: !21220)
!21238 = !DILocation(line: 73, column: 29, scope: !21220)
!21239 = !DILocation(line: 73, column: 32, scope: !21220)
!21240 = !DILocation(line: 73, column: 27, scope: !21220)
!21241 = !DILocation(line: 73, column: 13, scope: !21220)
!21242 = !DILocation(line: 74, column: 16, scope: !21220)
!21243 = !DILocation(line: 74, column: 19, scope: !21220)
!21244 = !DILocation(line: 74, column: 29, scope: !21220)
!21245 = !DILocation(line: 74, column: 32, scope: !21220)
!21246 = !DILocation(line: 74, column: 27, scope: !21220)
!21247 = !DILocation(line: 74, column: 13, scope: !21220)
!21248 = !DILocation(line: 75, column: 16, scope: !21220)
!21249 = !DILocation(line: 75, column: 19, scope: !21220)
!21250 = !DILocation(line: 75, column: 28, scope: !21220)
!21251 = !DILocation(line: 75, column: 31, scope: !21220)
!21252 = !DILocation(line: 75, column: 26, scope: !21220)
!21253 = !DILocation(line: 75, column: 13, scope: !21220)
!21254 = !DILocation(line: 76, column: 16, scope: !21220)
!21255 = !DILocation(line: 76, column: 19, scope: !21220)
!21256 = !DILocation(line: 76, column: 29, scope: !21220)
!21257 = !DILocation(line: 76, column: 32, scope: !21220)
!21258 = !DILocation(line: 76, column: 27, scope: !21220)
!21259 = !DILocation(line: 76, column: 13, scope: !21220)
!21260 = !DILocation(line: 77, column: 29, scope: !21220)
!21261 = !DILocation(line: 77, column: 32, scope: !21220)
!21262 = !DILocation(line: 77, column: 42, scope: !21220)
!21263 = !DILocation(line: 77, column: 45, scope: !21220)
!21264 = !DILocation(line: 77, column: 15, scope: !21220)
!21265 = !DILocation(line: 77, column: 13, scope: !21220)
!21266 = !DILocation(line: 71, column: 10, scope: !21220)
!21267 = !DILocation(line: 71, column: 3, scope: !21220)
!21268 = distinct !DISubprogram(name: "isdst_differ", scope: !2231, file: !2231, line: 62, type: !2226, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21269 = !DILocalVariable(name: "a", arg: 1, scope: !21268, file: !2231, line: 62, type: !27)
!21270 = !DILocation(line: 62, column: 19, scope: !21268)
!21271 = !DILocalVariable(name: "b", arg: 2, scope: !21268, file: !2231, line: 62, type: !27)
!21272 = !DILocation(line: 62, column: 26, scope: !21268)
!21273 = !DILocation(line: 64, column: 11, scope: !21268)
!21274 = !DILocation(line: 64, column: 10, scope: !21268)
!21275 = !DILocation(line: 64, column: 17, scope: !21268)
!21276 = !DILocation(line: 64, column: 16, scope: !21268)
!21277 = !DILocation(line: 64, column: 13, scope: !21268)
!21278 = !DILocation(line: 64, column: 19, scope: !21268)
!21279 = !DILocation(line: 64, column: 27, scope: !21268)
!21280 = !DILocation(line: 64, column: 24, scope: !21268)
!21281 = !DILocation(line: 64, column: 29, scope: !21268)
!21282 = !DILocation(line: 64, column: 37, scope: !21268)
!21283 = !DILocation(line: 64, column: 34, scope: !21268)
!21284 = !DILocation(line: 0, scope: !21268)
!21285 = !DILocation(line: 64, column: 3, scope: !21268)
!21286 = distinct !DISubprogram(name: "acl_errno_valid", scope: !21287, file: !21287, line: 30, type: !680, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2233, retainedNodes: !152)
!21287 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!21288 = !DILocalVariable(name: "errnum", arg: 1, scope: !21286, file: !21287, line: 30, type: !27)
!21289 = !DILocation(line: 30, column: 22, scope: !21286)
!21290 = !DILocation(line: 34, column: 11, scope: !21286)
!21291 = !DILocation(line: 34, column: 3, scope: !21286)
!21292 = !DILocation(line: 36, column: 17, scope: !21293)
!21293 = distinct !DILexicalBlock(scope: !21286, file: !21287, line: 35, column: 5)
!21294 = !DILocation(line: 37, column: 18, scope: !21293)
!21295 = !DILocation(line: 41, column: 18, scope: !21293)
!21296 = !DILocation(line: 49, column: 22, scope: !21293)
!21297 = !DILocation(line: 50, column: 14, scope: !21293)
!21298 = !DILocation(line: 52, column: 1, scope: !21286)
!21299 = distinct !DISubprogram(name: "rotl64", scope: !21300, file: !21300, line: 39, type: !2239, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21300 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/clone/coreutils")
!21301 = !DILocalVariable(name: "x", arg: 1, scope: !21299, file: !21300, line: 39, type: !2241)
!21302 = !DILocation(line: 39, column: 18, scope: !21299)
!21303 = !DILocalVariable(name: "n", arg: 2, scope: !21299, file: !21300, line: 39, type: !27)
!21304 = !DILocation(line: 39, column: 25, scope: !21299)
!21305 = !DILocation(line: 41, column: 12, scope: !21299)
!21306 = !DILocation(line: 41, column: 17, scope: !21299)
!21307 = !DILocation(line: 41, column: 14, scope: !21299)
!21308 = !DILocation(line: 41, column: 23, scope: !21299)
!21309 = !DILocation(line: 41, column: 34, scope: !21299)
!21310 = !DILocation(line: 41, column: 32, scope: !21299)
!21311 = !DILocation(line: 41, column: 25, scope: !21299)
!21312 = !DILocation(line: 41, column: 20, scope: !21299)
!21313 = !DILocation(line: 41, column: 3, scope: !21299)
!21314 = distinct !DISubprogram(name: "rotr64", scope: !21300, file: !21300, line: 48, type: !2239, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21315 = !DILocalVariable(name: "x", arg: 1, scope: !21314, file: !21300, line: 48, type: !2241)
!21316 = !DILocation(line: 48, column: 18, scope: !21314)
!21317 = !DILocalVariable(name: "n", arg: 2, scope: !21314, file: !21300, line: 48, type: !27)
!21318 = !DILocation(line: 48, column: 25, scope: !21314)
!21319 = !DILocation(line: 50, column: 12, scope: !21314)
!21320 = !DILocation(line: 50, column: 17, scope: !21314)
!21321 = !DILocation(line: 50, column: 14, scope: !21314)
!21322 = !DILocation(line: 50, column: 23, scope: !21314)
!21323 = !DILocation(line: 50, column: 34, scope: !21314)
!21324 = !DILocation(line: 50, column: 32, scope: !21314)
!21325 = !DILocation(line: 50, column: 25, scope: !21314)
!21326 = !DILocation(line: 50, column: 20, scope: !21314)
!21327 = !DILocation(line: 50, column: 3, scope: !21314)
!21328 = distinct !DISubprogram(name: "rotl32", scope: !21300, file: !21300, line: 58, type: !2244, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21329 = !DILocalVariable(name: "x", arg: 1, scope: !21328, file: !21300, line: 58, type: !2246)
!21330 = !DILocation(line: 58, column: 18, scope: !21328)
!21331 = !DILocalVariable(name: "n", arg: 2, scope: !21328, file: !21300, line: 58, type: !27)
!21332 = !DILocation(line: 58, column: 25, scope: !21328)
!21333 = !DILocation(line: 60, column: 12, scope: !21328)
!21334 = !DILocation(line: 60, column: 17, scope: !21328)
!21335 = !DILocation(line: 60, column: 14, scope: !21328)
!21336 = !DILocation(line: 60, column: 23, scope: !21328)
!21337 = !DILocation(line: 60, column: 34, scope: !21328)
!21338 = !DILocation(line: 60, column: 32, scope: !21328)
!21339 = !DILocation(line: 60, column: 25, scope: !21328)
!21340 = !DILocation(line: 60, column: 20, scope: !21328)
!21341 = !DILocation(line: 60, column: 3, scope: !21328)
!21342 = distinct !DISubprogram(name: "rotr32", scope: !21300, file: !21300, line: 67, type: !2244, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21343 = !DILocalVariable(name: "x", arg: 1, scope: !21342, file: !21300, line: 67, type: !2246)
!21344 = !DILocation(line: 67, column: 18, scope: !21342)
!21345 = !DILocalVariable(name: "n", arg: 2, scope: !21342, file: !21300, line: 67, type: !27)
!21346 = !DILocation(line: 67, column: 25, scope: !21342)
!21347 = !DILocation(line: 69, column: 12, scope: !21342)
!21348 = !DILocation(line: 69, column: 17, scope: !21342)
!21349 = !DILocation(line: 69, column: 14, scope: !21342)
!21350 = !DILocation(line: 69, column: 23, scope: !21342)
!21351 = !DILocation(line: 69, column: 34, scope: !21342)
!21352 = !DILocation(line: 69, column: 32, scope: !21342)
!21353 = !DILocation(line: 69, column: 25, scope: !21342)
!21354 = !DILocation(line: 69, column: 20, scope: !21342)
!21355 = !DILocation(line: 69, column: 3, scope: !21342)
!21356 = distinct !DISubprogram(name: "rotl_sz", scope: !21300, file: !21300, line: 76, type: !2247, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21357 = !DILocalVariable(name: "x", arg: 1, scope: !21356, file: !21300, line: 76, type: !149)
!21358 = !DILocation(line: 76, column: 17, scope: !21356)
!21359 = !DILocalVariable(name: "n", arg: 2, scope: !21356, file: !21300, line: 76, type: !27)
!21360 = !DILocation(line: 76, column: 24, scope: !21356)
!21361 = !DILocation(line: 78, column: 12, scope: !21356)
!21362 = !DILocation(line: 78, column: 17, scope: !21356)
!21363 = !DILocation(line: 78, column: 14, scope: !21356)
!21364 = !DILocation(line: 78, column: 23, scope: !21356)
!21365 = !DILocation(line: 78, column: 53, scope: !21356)
!21366 = !DILocation(line: 78, column: 51, scope: !21356)
!21367 = !DILocation(line: 78, column: 25, scope: !21356)
!21368 = !DILocation(line: 78, column: 20, scope: !21356)
!21369 = !DILocation(line: 78, column: 3, scope: !21356)
!21370 = distinct !DISubprogram(name: "rotr_sz", scope: !21300, file: !21300, line: 85, type: !2247, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21371 = !DILocalVariable(name: "x", arg: 1, scope: !21370, file: !21300, line: 85, type: !149)
!21372 = !DILocation(line: 85, column: 17, scope: !21370)
!21373 = !DILocalVariable(name: "n", arg: 2, scope: !21370, file: !21300, line: 85, type: !27)
!21374 = !DILocation(line: 85, column: 24, scope: !21370)
!21375 = !DILocation(line: 87, column: 12, scope: !21370)
!21376 = !DILocation(line: 87, column: 17, scope: !21370)
!21377 = !DILocation(line: 87, column: 14, scope: !21370)
!21378 = !DILocation(line: 87, column: 23, scope: !21370)
!21379 = !DILocation(line: 87, column: 53, scope: !21370)
!21380 = !DILocation(line: 87, column: 51, scope: !21370)
!21381 = !DILocation(line: 87, column: 25, scope: !21370)
!21382 = !DILocation(line: 87, column: 20, scope: !21370)
!21383 = !DILocation(line: 87, column: 3, scope: !21370)
!21384 = distinct !DISubprogram(name: "rotl16", scope: !21300, file: !21300, line: 96, type: !2249, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21385 = !DILocalVariable(name: "x", arg: 1, scope: !21384, file: !21300, line: 96, type: !2251)
!21386 = !DILocation(line: 96, column: 18, scope: !21384)
!21387 = !DILocalVariable(name: "n", arg: 2, scope: !21384, file: !21300, line: 96, type: !27)
!21388 = !DILocation(line: 96, column: 25, scope: !21384)
!21389 = !DILocation(line: 98, column: 27, scope: !21384)
!21390 = !DILocation(line: 98, column: 12, scope: !21384)
!21391 = !DILocation(line: 98, column: 32, scope: !21384)
!21392 = !DILocation(line: 98, column: 29, scope: !21384)
!21393 = !DILocation(line: 98, column: 53, scope: !21384)
!21394 = !DILocation(line: 98, column: 38, scope: !21384)
!21395 = !DILocation(line: 98, column: 64, scope: !21384)
!21396 = !DILocation(line: 98, column: 62, scope: !21384)
!21397 = !DILocation(line: 98, column: 55, scope: !21384)
!21398 = !DILocation(line: 98, column: 35, scope: !21384)
!21399 = !DILocation(line: 99, column: 10, scope: !21384)
!21400 = !DILocation(line: 98, column: 10, scope: !21384)
!21401 = !DILocation(line: 98, column: 3, scope: !21384)
!21402 = distinct !DISubprogram(name: "rotr16", scope: !21300, file: !21300, line: 108, type: !2249, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21403 = !DILocalVariable(name: "x", arg: 1, scope: !21402, file: !21300, line: 108, type: !2251)
!21404 = !DILocation(line: 108, column: 18, scope: !21402)
!21405 = !DILocalVariable(name: "n", arg: 2, scope: !21402, file: !21300, line: 108, type: !27)
!21406 = !DILocation(line: 108, column: 25, scope: !21402)
!21407 = !DILocation(line: 110, column: 27, scope: !21402)
!21408 = !DILocation(line: 110, column: 12, scope: !21402)
!21409 = !DILocation(line: 110, column: 32, scope: !21402)
!21410 = !DILocation(line: 110, column: 29, scope: !21402)
!21411 = !DILocation(line: 110, column: 53, scope: !21402)
!21412 = !DILocation(line: 110, column: 38, scope: !21402)
!21413 = !DILocation(line: 110, column: 64, scope: !21402)
!21414 = !DILocation(line: 110, column: 62, scope: !21402)
!21415 = !DILocation(line: 110, column: 55, scope: !21402)
!21416 = !DILocation(line: 110, column: 35, scope: !21402)
!21417 = !DILocation(line: 111, column: 10, scope: !21402)
!21418 = !DILocation(line: 110, column: 10, scope: !21402)
!21419 = !DILocation(line: 110, column: 3, scope: !21402)
!21420 = distinct !DISubprogram(name: "rotl8", scope: !21300, file: !21300, line: 120, type: !2253, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21421 = !DILocalVariable(name: "x", arg: 1, scope: !21420, file: !21300, line: 120, type: !2255)
!21422 = !DILocation(line: 120, column: 16, scope: !21420)
!21423 = !DILocalVariable(name: "n", arg: 2, scope: !21420, file: !21300, line: 120, type: !27)
!21424 = !DILocation(line: 120, column: 23, scope: !21420)
!21425 = !DILocation(line: 122, column: 27, scope: !21420)
!21426 = !DILocation(line: 122, column: 12, scope: !21420)
!21427 = !DILocation(line: 122, column: 32, scope: !21420)
!21428 = !DILocation(line: 122, column: 29, scope: !21420)
!21429 = !DILocation(line: 122, column: 53, scope: !21420)
!21430 = !DILocation(line: 122, column: 38, scope: !21420)
!21431 = !DILocation(line: 122, column: 63, scope: !21420)
!21432 = !DILocation(line: 122, column: 61, scope: !21420)
!21433 = !DILocation(line: 122, column: 55, scope: !21420)
!21434 = !DILocation(line: 122, column: 35, scope: !21420)
!21435 = !DILocation(line: 122, column: 68, scope: !21420)
!21436 = !DILocation(line: 122, column: 10, scope: !21420)
!21437 = !DILocation(line: 122, column: 3, scope: !21420)
!21438 = distinct !DISubprogram(name: "rotr8", scope: !21300, file: !21300, line: 131, type: !2253, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21439 = !DILocalVariable(name: "x", arg: 1, scope: !21438, file: !21300, line: 131, type: !2255)
!21440 = !DILocation(line: 131, column: 16, scope: !21438)
!21441 = !DILocalVariable(name: "n", arg: 2, scope: !21438, file: !21300, line: 131, type: !27)
!21442 = !DILocation(line: 131, column: 23, scope: !21438)
!21443 = !DILocation(line: 133, column: 27, scope: !21438)
!21444 = !DILocation(line: 133, column: 12, scope: !21438)
!21445 = !DILocation(line: 133, column: 32, scope: !21438)
!21446 = !DILocation(line: 133, column: 29, scope: !21438)
!21447 = !DILocation(line: 133, column: 53, scope: !21438)
!21448 = !DILocation(line: 133, column: 38, scope: !21438)
!21449 = !DILocation(line: 133, column: 63, scope: !21438)
!21450 = !DILocation(line: 133, column: 61, scope: !21438)
!21451 = !DILocation(line: 133, column: 55, scope: !21438)
!21452 = !DILocation(line: 133, column: 35, scope: !21438)
!21453 = !DILocation(line: 133, column: 68, scope: !21438)
!21454 = !DILocation(line: 133, column: 10, scope: !21438)
!21455 = !DILocation(line: 133, column: 3, scope: !21438)
!21456 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21457, file: !21457, line: 27, type: !731, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2257, retainedNodes: !152)
!21457 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!21458 = !DILocalVariable(name: "s1", arg: 1, scope: !21456, file: !21457, line: 27, type: !146)
!21459 = !DILocation(line: 27, column: 27, scope: !21456)
!21460 = !DILocalVariable(name: "s2", arg: 2, scope: !21456, file: !21457, line: 27, type: !146)
!21461 = !DILocation(line: 27, column: 43, scope: !21456)
!21462 = !DILocalVariable(name: "p1", scope: !21456, file: !21457, line: 29, type: !1660)
!21463 = !DILocation(line: 29, column: 33, scope: !21456)
!21464 = !DILocation(line: 29, column: 62, scope: !21456)
!21465 = !DILocalVariable(name: "p2", scope: !21456, file: !21457, line: 30, type: !1660)
!21466 = !DILocation(line: 30, column: 33, scope: !21456)
!21467 = !DILocation(line: 30, column: 62, scope: !21456)
!21468 = !DILocalVariable(name: "c1", scope: !21456, file: !21457, line: 31, type: !591)
!21469 = !DILocation(line: 31, column: 17, scope: !21456)
!21470 = !DILocalVariable(name: "c2", scope: !21456, file: !21457, line: 31, type: !591)
!21471 = !DILocation(line: 31, column: 21, scope: !21456)
!21472 = !DILocation(line: 33, column: 7, scope: !21473)
!21473 = distinct !DILexicalBlock(scope: !21456, file: !21457, line: 33, column: 7)
!21474 = !DILocation(line: 33, column: 13, scope: !21473)
!21475 = !DILocation(line: 33, column: 10, scope: !21473)
!21476 = !DILocation(line: 33, column: 7, scope: !21456)
!21477 = !DILocation(line: 34, column: 5, scope: !21473)
!21478 = !DILocation(line: 36, column: 3, scope: !21456)
!21479 = !DILocation(line: 38, column: 24, scope: !21480)
!21480 = distinct !DILexicalBlock(scope: !21456, file: !21457, line: 37, column: 5)
!21481 = !DILocation(line: 38, column: 23, scope: !21480)
!21482 = !DILocation(line: 38, column: 12, scope: !21480)
!21483 = !DILocation(line: 38, column: 10, scope: !21480)
!21484 = !DILocation(line: 39, column: 24, scope: !21480)
!21485 = !DILocation(line: 39, column: 23, scope: !21480)
!21486 = !DILocation(line: 39, column: 12, scope: !21480)
!21487 = !DILocation(line: 39, column: 10, scope: !21480)
!21488 = !DILocation(line: 41, column: 11, scope: !21489)
!21489 = distinct !DILexicalBlock(scope: !21480, file: !21457, line: 41, column: 11)
!21490 = !DILocation(line: 41, column: 14, scope: !21489)
!21491 = !DILocation(line: 41, column: 11, scope: !21480)
!21492 = !DILocation(line: 42, column: 9, scope: !21489)
!21493 = !DILocation(line: 44, column: 7, scope: !21480)
!21494 = !DILocation(line: 45, column: 7, scope: !21480)
!21495 = !DILocation(line: 46, column: 5, scope: !21480)
!21496 = !DILocation(line: 47, column: 10, scope: !21456)
!21497 = !DILocation(line: 47, column: 16, scope: !21456)
!21498 = !DILocation(line: 47, column: 13, scope: !21456)
!21499 = distinct !{!21499, !21478, !21500}
!21500 = !DILocation(line: 47, column: 18, scope: !21456)
!21501 = !DILocation(line: 50, column: 12, scope: !21502)
!21502 = distinct !DILexicalBlock(scope: !21456, file: !21457, line: 49, column: 7)
!21503 = !DILocation(line: 50, column: 17, scope: !21502)
!21504 = !DILocation(line: 50, column: 15, scope: !21502)
!21505 = !DILocation(line: 50, column: 5, scope: !21502)
!21506 = !DILocation(line: 56, column: 1, scope: !21456)
!21507 = distinct !DISubprogram(name: "close_stream", scope: !21508, file: !21508, line: 56, type: !2263, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2260, retainedNodes: !152)
!21508 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!21509 = !DILocalVariable(name: "stream", arg: 1, scope: !21507, file: !21508, line: 56, type: !2265)
!21510 = !DILocation(line: 56, column: 21, scope: !21507)
!21511 = !DILocalVariable(name: "some_pending", scope: !21507, file: !21508, line: 58, type: !2299)
!21512 = !DILocation(line: 58, column: 14, scope: !21507)
!21513 = !DILocation(line: 58, column: 42, scope: !21507)
!21514 = !DILocation(line: 58, column: 30, scope: !21507)
!21515 = !DILocation(line: 58, column: 50, scope: !21507)
!21516 = !DILocalVariable(name: "prev_fail", scope: !21507, file: !21508, line: 59, type: !2299)
!21517 = !DILocation(line: 59, column: 14, scope: !21507)
!21518 = !DILocation(line: 59, column: 27, scope: !21507)
!21519 = !DILocation(line: 59, column: 43, scope: !21507)
!21520 = !DILocalVariable(name: "fclose_fail", scope: !21507, file: !21508, line: 60, type: !2299)
!21521 = !DILocation(line: 60, column: 14, scope: !21507)
!21522 = !DILocation(line: 60, column: 37, scope: !21507)
!21523 = !DILocation(line: 60, column: 29, scope: !21507)
!21524 = !DILocation(line: 60, column: 45, scope: !21507)
!21525 = !DILocation(line: 70, column: 7, scope: !21526)
!21526 = distinct !DILexicalBlock(scope: !21507, file: !21508, line: 70, column: 7)
!21527 = !DILocation(line: 70, column: 17, scope: !21526)
!21528 = !DILocation(line: 70, column: 21, scope: !21526)
!21529 = !DILocation(line: 70, column: 33, scope: !21526)
!21530 = !DILocation(line: 70, column: 37, scope: !21526)
!21531 = !DILocation(line: 70, column: 50, scope: !21526)
!21532 = !DILocation(line: 70, column: 53, scope: !21526)
!21533 = !DILocation(line: 70, column: 59, scope: !21526)
!21534 = !DILocation(line: 70, column: 7, scope: !21507)
!21535 = !DILocation(line: 72, column: 13, scope: !21536)
!21536 = distinct !DILexicalBlock(scope: !21537, file: !21508, line: 72, column: 11)
!21537 = distinct !DILexicalBlock(scope: !21526, file: !21508, line: 71, column: 5)
!21538 = !DILocation(line: 72, column: 11, scope: !21537)
!21539 = !DILocation(line: 73, column: 9, scope: !21536)
!21540 = !DILocation(line: 73, column: 15, scope: !21536)
!21541 = !DILocation(line: 74, column: 7, scope: !21537)
!21542 = !DILocation(line: 77, column: 3, scope: !21507)
!21543 = !DILocation(line: 78, column: 1, scope: !21507)
!21544 = distinct !DISubprogram(name: "dir_name", scope: !21545, file: !21545, line: 32, type: !572, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2300, retainedNodes: !152)
!21545 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!21546 = !DILocalVariable(name: "file", arg: 1, scope: !21544, file: !21545, line: 32, type: !146)
!21547 = !DILocation(line: 32, column: 23, scope: !21544)
!21548 = !DILocalVariable(name: "result", scope: !21544, file: !21545, line: 34, type: !143)
!21549 = !DILocation(line: 34, column: 9, scope: !21544)
!21550 = !DILocation(line: 34, column: 29, scope: !21544)
!21551 = !DILocation(line: 34, column: 18, scope: !21544)
!21552 = !DILocation(line: 35, column: 8, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21544, file: !21545, line: 35, column: 7)
!21554 = !DILocation(line: 35, column: 7, scope: !21544)
!21555 = !DILocation(line: 36, column: 5, scope: !21553)
!21556 = !DILocation(line: 37, column: 10, scope: !21544)
!21557 = !DILocation(line: 37, column: 3, scope: !21544)
!21558 = distinct !DISubprogram(name: "hash_pjw", scope: !21559, file: !21559, line: 31, type: !333, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2303, retainedNodes: !152)
!21559 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!21560 = !DILocalVariable(name: "x", arg: 1, scope: !21558, file: !21559, line: 31, type: !176)
!21561 = !DILocation(line: 31, column: 23, scope: !21558)
!21562 = !DILocalVariable(name: "tablesize", arg: 2, scope: !21558, file: !21559, line: 31, type: !149)
!21563 = !DILocation(line: 31, column: 33, scope: !21558)
!21564 = !DILocalVariable(name: "s", scope: !21558, file: !21559, line: 33, type: !146)
!21565 = !DILocation(line: 33, column: 15, scope: !21558)
!21566 = !DILocalVariable(name: "h", scope: !21558, file: !21559, line: 34, type: !149)
!21567 = !DILocation(line: 34, column: 10, scope: !21558)
!21568 = !DILocation(line: 36, column: 12, scope: !21569)
!21569 = distinct !DILexicalBlock(scope: !21558, file: !21559, line: 36, column: 3)
!21570 = !DILocation(line: 36, column: 10, scope: !21569)
!21571 = !DILocation(line: 36, column: 8, scope: !21569)
!21572 = !DILocation(line: 36, column: 16, scope: !21573)
!21573 = distinct !DILexicalBlock(scope: !21569, file: !21559, line: 36, column: 3)
!21574 = !DILocation(line: 36, column: 15, scope: !21573)
!21575 = !DILocation(line: 36, column: 3, scope: !21569)
!21576 = !DILocation(line: 37, column: 10, scope: !21573)
!21577 = !DILocation(line: 37, column: 9, scope: !21573)
!21578 = !DILocation(line: 37, column: 16, scope: !21573)
!21579 = !DILocation(line: 37, column: 18, scope: !21573)
!21580 = !DILocation(line: 37, column: 27, scope: !21573)
!21581 = !DILocation(line: 37, column: 29, scope: !21573)
!21582 = !DILocation(line: 37, column: 24, scope: !21573)
!21583 = !DILocation(line: 37, column: 12, scope: !21573)
!21584 = !DILocation(line: 37, column: 7, scope: !21573)
!21585 = !DILocation(line: 37, column: 5, scope: !21573)
!21586 = !DILocation(line: 36, column: 20, scope: !21573)
!21587 = !DILocation(line: 36, column: 3, scope: !21573)
!21588 = distinct !{!21588, !21575, !21589}
!21589 = !DILocation(line: 37, column: 48, scope: !21569)
!21590 = !DILocation(line: 39, column: 10, scope: !21558)
!21591 = !DILocation(line: 39, column: 14, scope: !21558)
!21592 = !DILocation(line: 39, column: 12, scope: !21558)
!21593 = !DILocation(line: 39, column: 3, scope: !21558)
!21594 = distinct !DISubprogram(name: "locale_charset", scope: !21595, file: !21595, line: 826, type: !2309, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2306, retainedNodes: !152)
!21595 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!21596 = !DILocalVariable(name: "codeset", scope: !21594, file: !21595, line: 828, type: !146)
!21597 = !DILocation(line: 828, column: 15, scope: !21594)
!21598 = !DILocation(line: 835, column: 13, scope: !21594)
!21599 = !DILocation(line: 835, column: 11, scope: !21594)
!21600 = !DILocation(line: 893, column: 7, scope: !21601)
!21601 = distinct !DILexicalBlock(scope: !21594, file: !21595, line: 893, column: 7)
!21602 = !DILocation(line: 893, column: 15, scope: !21601)
!21603 = !DILocation(line: 893, column: 7, scope: !21594)
!21604 = !DILocation(line: 895, column: 13, scope: !21601)
!21605 = !DILocation(line: 895, column: 5, scope: !21601)
!21606 = !DILocation(line: 1051, column: 13, scope: !21607)
!21607 = distinct !DILexicalBlock(scope: !21608, file: !21595, line: 1051, column: 13)
!21608 = distinct !DILexicalBlock(scope: !21609, file: !21595, line: 1041, column: 7)
!21609 = distinct !DILexicalBlock(scope: !21594, file: !21595, line: 1000, column: 3)
!21610 = !DILocation(line: 1051, column: 24, scope: !21607)
!21611 = !DILocation(line: 1051, column: 13, scope: !21608)
!21612 = !DILocation(line: 1052, column: 19, scope: !21607)
!21613 = !DILocation(line: 1052, column: 11, scope: !21607)
!21614 = !DILocation(line: 1139, column: 10, scope: !21594)
!21615 = !DILocation(line: 1139, column: 3, scope: !21594)
!21616 = distinct !DISubprogram(name: "rpl_fclose", scope: !21617, file: !21617, line: 58, type: !2313, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2310, retainedNodes: !152)
!21617 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!21618 = !DILocalVariable(name: "fp", arg: 1, scope: !21616, file: !21617, line: 58, type: !2315)
!21619 = !DILocation(line: 58, column: 19, scope: !21616)
!21620 = !DILocalVariable(name: "saved_errno", scope: !21616, file: !21617, line: 60, type: !27)
!21621 = !DILocation(line: 60, column: 7, scope: !21616)
!21622 = !DILocalVariable(name: "fd", scope: !21616, file: !21617, line: 61, type: !27)
!21623 = !DILocation(line: 61, column: 7, scope: !21616)
!21624 = !DILocalVariable(name: "result", scope: !21616, file: !21617, line: 62, type: !27)
!21625 = !DILocation(line: 62, column: 7, scope: !21616)
!21626 = !DILocation(line: 65, column: 16, scope: !21616)
!21627 = !DILocation(line: 65, column: 8, scope: !21616)
!21628 = !DILocation(line: 65, column: 6, scope: !21616)
!21629 = !DILocation(line: 66, column: 7, scope: !21630)
!21630 = distinct !DILexicalBlock(scope: !21616, file: !21617, line: 66, column: 7)
!21631 = !DILocation(line: 66, column: 10, scope: !21630)
!21632 = !DILocation(line: 66, column: 7, scope: !21616)
!21633 = !DILocation(line: 67, column: 28, scope: !21630)
!21634 = !DILocation(line: 67, column: 12, scope: !21630)
!21635 = !DILocation(line: 67, column: 5, scope: !21630)
!21636 = !DILocation(line: 72, column: 9, scope: !21637)
!21637 = distinct !DILexicalBlock(scope: !21616, file: !21617, line: 72, column: 7)
!21638 = !DILocation(line: 72, column: 23, scope: !21637)
!21639 = !DILocation(line: 72, column: 41, scope: !21637)
!21640 = !DILocation(line: 72, column: 33, scope: !21637)
!21641 = !DILocation(line: 72, column: 26, scope: !21637)
!21642 = !DILocation(line: 72, column: 59, scope: !21637)
!21643 = !DILocation(line: 73, column: 7, scope: !21637)
!21644 = !DILocation(line: 73, column: 18, scope: !21637)
!21645 = !DILocation(line: 73, column: 10, scope: !21637)
!21646 = !DILocation(line: 72, column: 7, scope: !21616)
!21647 = !DILocation(line: 74, column: 19, scope: !21637)
!21648 = !DILocation(line: 74, column: 17, scope: !21637)
!21649 = !DILocation(line: 74, column: 5, scope: !21637)
!21650 = !DILocation(line: 100, column: 28, scope: !21616)
!21651 = !DILocation(line: 100, column: 12, scope: !21616)
!21652 = !DILocation(line: 100, column: 10, scope: !21616)
!21653 = !DILocation(line: 105, column: 7, scope: !21654)
!21654 = distinct !DILexicalBlock(scope: !21616, file: !21617, line: 105, column: 7)
!21655 = !DILocation(line: 105, column: 19, scope: !21654)
!21656 = !DILocation(line: 105, column: 7, scope: !21616)
!21657 = !DILocation(line: 107, column: 15, scope: !21658)
!21658 = distinct !DILexicalBlock(scope: !21654, file: !21617, line: 106, column: 5)
!21659 = !DILocation(line: 107, column: 7, scope: !21658)
!21660 = !DILocation(line: 107, column: 13, scope: !21658)
!21661 = !DILocation(line: 108, column: 14, scope: !21658)
!21662 = !DILocation(line: 109, column: 5, scope: !21658)
!21663 = !DILocation(line: 111, column: 10, scope: !21616)
!21664 = !DILocation(line: 111, column: 3, scope: !21616)
!21665 = !DILocation(line: 112, column: 1, scope: !21616)
!21666 = distinct !DISubprogram(name: "rpl_fflush", scope: !21667, file: !21667, line: 129, type: !2352, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2349, retainedNodes: !152)
!21667 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!21668 = !DILocalVariable(name: "stream", arg: 1, scope: !21666, file: !21667, line: 129, type: !2354)
!21669 = !DILocation(line: 129, column: 19, scope: !21666)
!21670 = !DILocation(line: 150, column: 7, scope: !21671)
!21671 = distinct !DILexicalBlock(scope: !21666, file: !21667, line: 150, column: 7)
!21672 = !DILocation(line: 150, column: 14, scope: !21671)
!21673 = !DILocation(line: 150, column: 22, scope: !21671)
!21674 = !DILocation(line: 150, column: 27, scope: !21671)
!21675 = !DILocation(line: 150, column: 7, scope: !21666)
!21676 = !DILocation(line: 151, column: 20, scope: !21671)
!21677 = !DILocation(line: 151, column: 12, scope: !21671)
!21678 = !DILocation(line: 151, column: 5, scope: !21671)
!21679 = !DILocation(line: 156, column: 44, scope: !21666)
!21680 = !DILocation(line: 156, column: 3, scope: !21666)
!21681 = !DILocation(line: 158, column: 18, scope: !21666)
!21682 = !DILocation(line: 158, column: 10, scope: !21666)
!21683 = !DILocation(line: 158, column: 3, scope: !21666)
!21684 = !DILocation(line: 232, column: 1, scope: !21666)
!21685 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !21667, file: !21667, line: 41, type: !2388, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2349, retainedNodes: !152)
!21686 = !DILocalVariable(name: "fp", arg: 1, scope: !21685, file: !21667, line: 41, type: !2354)
!21687 = !DILocation(line: 41, column: 48, scope: !21685)
!21688 = !DILocation(line: 43, column: 7, scope: !21689)
!21689 = distinct !DILexicalBlock(scope: !21685, file: !21667, line: 43, column: 7)
!21690 = !DILocation(line: 43, column: 11, scope: !21689)
!21691 = !{!21692, !2437, i64 0}
!21692 = !{!"_IO_FILE", !2437, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72, !2443, i64 80, !2443, i64 88, !2443, i64 96, !2443, i64 104, !2437, i64 112, !2437, i64 116, !2467, i64 120, !2863, i64 128, !2438, i64 130, !2438, i64 131, !2443, i64 136, !2467, i64 144, !2443, i64 152, !2443, i64 160, !2443, i64 168, !2443, i64 176, !2467, i64 184, !2437, i64 192, !2438, i64 196}
!21693 = !DILocation(line: 43, column: 18, scope: !21689)
!21694 = !DILocation(line: 43, column: 7, scope: !21685)
!21695 = !DILocation(line: 45, column: 13, scope: !21689)
!21696 = !DILocation(line: 45, column: 5, scope: !21689)
!21697 = !DILocation(line: 46, column: 1, scope: !21685)
!21698 = distinct !DISubprogram(name: "rpl_fseeko", scope: !21699, file: !21699, line: 28, type: !2393, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !152)
!21699 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!21700 = !DILocalVariable(name: "fp", arg: 1, scope: !21698, file: !21699, line: 28, type: !2395)
!21701 = !DILocation(line: 28, column: 15, scope: !21698)
!21702 = !DILocalVariable(name: "offset", arg: 2, scope: !21698, file: !21699, line: 28, type: !2429)
!21703 = !DILocation(line: 28, column: 25, scope: !21698)
!21704 = !DILocalVariable(name: "whence", arg: 3, scope: !21698, file: !21699, line: 28, type: !27)
!21705 = !DILocation(line: 28, column: 37, scope: !21698)
!21706 = !DILocation(line: 52, column: 7, scope: !21707)
!21707 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 52, column: 7)
!21708 = !DILocation(line: 52, column: 11, scope: !21707)
!21709 = !{!21692, !2443, i64 16}
!21710 = !DILocation(line: 52, column: 27, scope: !21707)
!21711 = !DILocation(line: 52, column: 31, scope: !21707)
!21712 = !{!21692, !2443, i64 8}
!21713 = !DILocation(line: 52, column: 24, scope: !21707)
!21714 = !DILocation(line: 53, column: 7, scope: !21707)
!21715 = !DILocation(line: 53, column: 10, scope: !21707)
!21716 = !DILocation(line: 53, column: 14, scope: !21707)
!21717 = !{!21692, !2443, i64 40}
!21718 = !DILocation(line: 53, column: 31, scope: !21707)
!21719 = !DILocation(line: 53, column: 35, scope: !21707)
!21720 = !{!21692, !2443, i64 32}
!21721 = !DILocation(line: 53, column: 28, scope: !21707)
!21722 = !DILocation(line: 54, column: 7, scope: !21707)
!21723 = !DILocation(line: 54, column: 10, scope: !21707)
!21724 = !DILocation(line: 54, column: 14, scope: !21707)
!21725 = !{!21692, !2443, i64 72}
!21726 = !DILocation(line: 54, column: 28, scope: !21707)
!21727 = !DILocation(line: 52, column: 7, scope: !21698)
!21728 = !DILocalVariable(name: "pos", scope: !21729, file: !21699, line: 117, type: !2429)
!21729 = distinct !DILexicalBlock(scope: !21707, file: !21699, line: 113, column: 5)
!21730 = !DILocation(line: 117, column: 13, scope: !21729)
!21731 = !DILocation(line: 117, column: 34, scope: !21729)
!21732 = !DILocation(line: 117, column: 26, scope: !21729)
!21733 = !DILocation(line: 117, column: 39, scope: !21729)
!21734 = !DILocation(line: 117, column: 47, scope: !21729)
!21735 = !DILocation(line: 117, column: 19, scope: !21729)
!21736 = !DILocation(line: 118, column: 11, scope: !21737)
!21737 = distinct !DILexicalBlock(scope: !21729, file: !21699, line: 118, column: 11)
!21738 = !DILocation(line: 118, column: 15, scope: !21737)
!21739 = !DILocation(line: 118, column: 11, scope: !21729)
!21740 = !DILocation(line: 124, column: 11, scope: !21741)
!21741 = distinct !DILexicalBlock(scope: !21737, file: !21699, line: 119, column: 9)
!21742 = !DILocation(line: 129, column: 7, scope: !21729)
!21743 = !DILocation(line: 129, column: 11, scope: !21729)
!21744 = !DILocation(line: 129, column: 18, scope: !21729)
!21745 = !DILocation(line: 130, column: 21, scope: !21729)
!21746 = !DILocation(line: 130, column: 7, scope: !21729)
!21747 = !DILocation(line: 130, column: 11, scope: !21729)
!21748 = !DILocation(line: 130, column: 19, scope: !21729)
!21749 = !{!21692, !2467, i64 144}
!21750 = !DILocation(line: 161, column: 7, scope: !21729)
!21751 = !DILocation(line: 163, column: 18, scope: !21698)
!21752 = !DILocation(line: 163, column: 22, scope: !21698)
!21753 = !DILocation(line: 163, column: 30, scope: !21698)
!21754 = !DILocation(line: 163, column: 10, scope: !21698)
!21755 = !DILocation(line: 163, column: 3, scope: !21698)
!21756 = !DILocation(line: 164, column: 1, scope: !21698)
