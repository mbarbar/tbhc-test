; ModuleID = 'ls.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pending = type { i8*, i8*, i8, %struct.pending* }
%struct.dev_ino = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, %union.anon, i64, %union.anon.0, %union.anon.1, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [0 x i8] }
%union.anon = type { i64 }
%union.anon.0 = type { i8* (i64)* }
%union.anon.1 = type { void (i8*)* }
%struct.tm_zone = type { %struct.tm_zone*, i8, [0 x i8] }
%struct.fileinfo = type { i8*, i8*, i8*, %struct.stat, i32, i32, i8*, i8, i8, i32, i8, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.dev_ino, %struct.dev_ino, %struct.dev_ino, [3 x i64] }
%struct.bin_str = type { i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%struct.ignore_pattern = type { i8*, %struct.ignore_pattern* }
%struct.color_ext_type = type { %struct.bin_str, %struct.bin_str, %struct.color_ext_type* }
%struct.column_info = type { i8, i64, i64* }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.userid = type { %union.anon.12, %struct.userid*, [0 x i8] }
%union.anon.12 = type { i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.sigaction = type { %union.anon.2, %struct.__sigset_t, i32, void ()* }
%union.anon.2 = type { void (i32)* }
%struct.__mbstate_t = type { i32, %union.anon.12 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._cap_struct = type opaque
%struct.F_triple = type { i8*, i64, i64 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@exit_status = internal global i32 0, align 4, !dbg !0, !ctir !27
@print_dir_name = internal global i8 0, align 1, !dbg !861, !ctir !141
@pending_dirs = internal global %struct.pending* null, align 8, !dbg !829, !ctir !237
@current_time = internal global %struct.dev_ino zeroinitializer, align 8, !dbg !831, !ctir !214
@print_with_color = internal global i8 0, align 1, !dbg !845, !ctir !141
@directories_first = internal global i8 0, align 1, !dbg !857, !ctir !141
@check_symlink_mode = internal global i8 0, align 1, !dbg !849, !ctir !141
@color_symlink_as_referent = internal global i8 0, align 1, !dbg !825, !ctir !141
@format = internal global i32 0, align 4, !dbg !835, !ctir !5
@dereference = internal global i32 0, align 4, !dbg !851, !ctir !13
@immediate_dirs = internal global i8 0, align 1, !dbg !855, !ctir !141
@indicator_style = internal global i32 0, align 4, !dbg !843, !ctir !20
@recursive = internal global i8 0, align 1, !dbg !853, !ctir !141
@active_dir_set = internal global %struct.hash_table* null, align 8, !dbg !817, !ctir !244
@dev_ino_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !879, !ctir !350
@.str.3 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@localtz = internal global %struct.tm_zone* null, align 8, !dbg !863, !ctir !248
@sort_type = internal global i32 0, align 4, !dbg !837, !ctir !26
@print_scontext = internal global i8 0, align 1, !dbg !833, !ctir !141
@print_block_size = internal global i8 0, align 1, !dbg !839, !ctir !141
@format_needs_stat = internal global i8 0, align 1, !dbg !865, !ctir !141
@format_needs_type = internal global i8 0, align 1, !dbg !867, !ctir !141
@dired = internal global i8 0, align 1, !dbg !841, !ctir !141
@dired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !875, !ctir !350
@subdired_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !877, !ctir !350
@print_hyperlink = internal global i8 0, align 1, !dbg !847, !ctir !141
@hostname = internal global i8* null, align 8, !dbg !827, !ctir !146
@cwd_n_alloc = internal global i64 0, align 8, !dbg !821, !ctir !149
@cwd_file = internal global %struct.fileinfo* null, align 8, !dbg !819, !ctir !252
@cwd_n_used = internal global i64 0, align 8, !dbg !823, !ctir !149
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@dired_pos = internal global i64 0, align 8, !dbg !873, !ctir !149
@.str.5 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"src/ls.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@used_color = internal global i8 0, align 1, !dbg !883, !ctir !141
@color_indicator = internal global [24 x %struct.bin_str] [%struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0) }, %struct.bin_str { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str zeroinitializer, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0) }, %struct.bin_str { i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, %struct.bin_str zeroinitializer, %struct.bin_str { i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0) }], align 16, !dbg !885, !ctir !261
@.str.7 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !268
@stop_signal_count = internal global i32 0, align 4, !dbg !871, !ctir !320
@interrupt_signal = internal global i32 0, align 4, !dbg !869, !ctir !320
@.str.8 = private unnamed_addr constant [10 x i8] c"//DIRED//\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"//SUBDIRED//\00", align 1
@filename_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !859, !ctir !328
@.str.10 = private unnamed_addr constant [38 x i8] c"//DIRED-OPTIONS// --quoting-style=%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"hash_get_n_entries (active_dir_set) == 0\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c" %lu\00", align 1
@caught_signals = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !890, !ctir !403
@signal_setup.sig = internal constant [12 x i32] [i32 20, i32 14, i32 1, i32 2, i32 13, i32 3, i32 15, i32 29, i32 27, i32 26, i32 24, i32 25], align 16, !dbg !887
@.str.48 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"01;34\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"01;36\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"33\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"01;35\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"01;33\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"01;32\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"37;41\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"30;43\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"37;44\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"34;42\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"30;42\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"30;41\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\1B[K\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"cannot open directory %s\00", align 1
@.str.204 = private unnamed_addr constant [40 x i8] c"cannot determine device and inode of %s\00", align 1
@.str.205 = private unnamed_addr constant [41 x i8] c"%s: not listing already-listed directory\00", align 1
@print_dir.first = internal global i8 1, align 1, !dbg !977
@.str.206 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.207 = private unnamed_addr constant [24 x i8] c"error canonicalizing %s\00", align 1
@dirname_quoting_options = internal global %struct.quoting_options* null, align 8, !dbg !956, !ctir !328
@.str.208 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.209 = private unnamed_addr constant [21 x i8] c"reading directory %s\00", align 1
@.str.210 = private unnamed_addr constant [21 x i8] c"closing directory %s\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@human_output_opts = internal global i32 0, align 4, !dbg !920, !ctir !27
@output_block_size = internal global i64 0, align 8, !dbg !924, !ctir !168
@ignore_mode = internal global i32 0, align 4, !dbg !906, !ctir !85
@hide_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !910, !ctir !511
@ignore_patterns = internal global %struct.ignore_pattern* null, align 8, !dbg !908, !ctir !511
@align_variable_outer_quotes = internal global i8 0, align 1, !dbg !954, !ctir !141
@cwd_some_quoted = internal global i8 0, align 1, !dbg !980, !ctir !141
@.str.213 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.212 = private unnamed_addr constant [20 x i8] c"\1B]8;;file://%s%s%s\07\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"\1B]8;;\07\00", align 1
@RFC3986 = internal global [256 x i8] zeroinitializer, align 16, !dbg !881, !ctir !343
@.str.215 = private unnamed_addr constant [7 x i8] c"%%%02x\00", align 1
@qmark_funny_chars = internal global i8 0, align 1, !dbg !896, !ctir !141
@.str.47 = private unnamed_addr constant [55 x i8] c"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\00", align 1
@__PRETTY_FUNCTION__.dev_ino_pop = private unnamed_addr constant [33 x i8] c"struct dev_ino dev_ino_pop(void)\00", align 1
@sorted_file = internal global i8** null, align 8, !dbg !982, !ctir !663
@line_length = internal global i64 0, align 8, !dbg !912, !ctir !149
@filetype_letter = internal constant [11 x i8] c"?pcdb-lswd\00", align 1, !dbg !1031, !ctir !773
@any_has_acl = internal global i8 0, align 1, !dbg !986, !ctir !141
@time_type = internal global i32 0, align 4, !dbg !898, !ctir !79
@print_inode = internal global i8 0, align 1, !dbg !904, !ctir !141
@inode_number_width = internal global i32 0, align 4, !dbg !988, !ctir !27
@.str.224 = private unnamed_addr constant [5 x i8] c"%*s \00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@block_size_width = internal global i32 0, align 4, !dbg !990, !ctir !27
@nlink_width = internal global i32 0, align 4, !dbg !992, !ctir !27
@.str.227 = private unnamed_addr constant [8 x i8] c"%s %*s \00", align 1
@print_owner = internal global i8 1, align 1, !dbg !918, !ctir !141
@print_group = internal global i8 1, align 1, !dbg !928, !ctir !141
@print_author = internal global i8 0, align 1, !dbg !930, !ctir !141
@owner_width = internal global i32 0, align 4, !dbg !994, !ctir !27
@group_width = internal global i32 0, align 4, !dbg !996, !ctir !27
@author_width = internal global i32 0, align 4, !dbg !998, !ctir !27
@scontext_width = internal global i32 0, align 4, !dbg !1000, !ctir !27
@file_size_width = internal global i32 0, align 4, !dbg !1006, !ctir !27
@major_device_number_width = internal global i32 0, align 4, !dbg !1002, !ctir !27
@minor_device_number_width = internal global i32 0, align 4, !dbg !1004, !ctir !27
@.str.228 = private unnamed_addr constant [10 x i8] c"%*s, %*s \00", align 1
@file_human_output_opts = internal global i32 0, align 4, !dbg !922, !ctir !27
@file_output_block_size = internal global i64 1, align 8, !dbg !926, !ctir !168
@.str.229 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@get_color_indicator.filetype_indicator = internal global [10 x i32] [i32 13, i32 8, i32 11, i32 6, i32 10, i32 5, i32 7, i32 9, i32 5, i32 6], align 16, !dbg !1023
@color_ext_list = internal global %struct.color_ext_type* null, align 8, !dbg !973, !ctir !593
@long_time_expected_width.width = internal global i32 -1, align 4, !dbg !1033
@use_abformat = internal global i8 0, align 1, !dbg !966, !ctir !141
@abformat = internal global [2 x [12 x [128 x i8]]] zeroinitializer, align 16, !dbg !964, !ctir !577
@long_time_format = internal global [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i32 0, i32 0)], align 16, !dbg !958, !ctir !561
@.str.166 = private unnamed_addr constant [10 x i8] c"%b %e  %Y\00", align 1
@.str.167 = private unnamed_addr constant [12 x i8] c"%b %e %H:%M\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"%*lu \00", align 1
@numeric_ids = internal global i8 0, align 1, !dbg !902, !ctir !141
@.str.226 = private unnamed_addr constant [40 x i8] c"INT_BUFSIZE_BOUND (uintmax_t) <= buflen\00", align 1
@__PRETTY_FUNCTION__.format_inode = private unnamed_addr constant [60 x i8] c"char *format_inode(char *, size_t, const struct fileinfo *)\00", align 1
@column_info = internal global %struct.column_info* null, align 8, !dbg !1029, !ctir !762
@tabsize = internal global i64 0, align 8, !dbg !914, !ctir !149
@max_idx = internal global i64 0, align 8, !dbg !952, !ctir !149
@init_column_info.column_info_alloc = internal global i64 0, align 8, !dbg !1026
@UNKNOWN_SECURITY_CONTEXT = internal global [2 x i8] c"?\00", align 1, !dbg !984, !ctir !666
@sorted_file_alloc = internal global i64 0, align 8, !dbg !1017, !ctir !149
@failed_strcoll = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16, !dbg !1019, !ctir !704
@.str.222 = private unnamed_addr constant [26 x i8] c"sort_type != sort_version\00", align 1
@__PRETTY_FUNCTION__.sort_files = private unnamed_addr constant [22 x i8] c"void sort_files(void)\00", align 1
@sort_functions = internal constant [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]] [[2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_name, i32 (i8*, i8*)* @xstrcoll_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_name, i32 (i8*, i8*)* @rev_xstrcoll_df_name]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_name, i32 (i8*, i8*)* @strcmp_df_name], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_name, i32 (i8*, i8*)* @rev_strcmp_df_name]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_extension, i32 (i8*, i8*)* @xstrcoll_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_extension, i32 (i8*, i8*)* @rev_xstrcoll_df_extension]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_extension, i32 (i8*, i8*)* @strcmp_df_extension], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_extension, i32 (i8*, i8*)* @rev_strcmp_df_extension]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_size, i32 (i8*, i8*)* @xstrcoll_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_size, i32 (i8*, i8*)* @rev_xstrcoll_df_size]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_size, i32 (i8*, i8*)* @strcmp_df_size], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_size, i32 (i8*, i8*)* @rev_strcmp_df_size]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_version, i32 (i8*, i8*)* @xstrcoll_df_version], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_version, i32 (i8*, i8*)* @rev_xstrcoll_df_version]], [2 x [2 x i32 (i8*, i8*)*]] zeroinitializer], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_mtime, i32 (i8*, i8*)* @xstrcoll_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_mtime, i32 (i8*, i8*)* @rev_xstrcoll_df_mtime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_mtime, i32 (i8*, i8*)* @strcmp_df_mtime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_mtime, i32 (i8*, i8*)* @rev_strcmp_df_mtime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_ctime, i32 (i8*, i8*)* @xstrcoll_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_ctime, i32 (i8*, i8*)* @rev_xstrcoll_df_ctime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_ctime, i32 (i8*, i8*)* @strcmp_df_ctime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_ctime, i32 (i8*, i8*)* @rev_strcmp_df_ctime]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]] [[2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @xstrcoll_atime, i32 (i8*, i8*)* @xstrcoll_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_xstrcoll_atime, i32 (i8*, i8*)* @rev_xstrcoll_df_atime]], [2 x [2 x i32 (i8*, i8*)*]] [[2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @strcmp_atime, i32 (i8*, i8*)* @strcmp_df_atime], [2 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* @rev_strcmp_atime, i32 (i8*, i8*)* @rev_strcmp_df_atime]]]], align 16, !dbg !1021, !ctir !715
@sort_reverse = internal global i8 0, align 1, !dbg !900, !ctir !141
@.str.223 = private unnamed_addr constant [36 x i8] c"cannot compare file names %s and %s\00", align 1
@.str.216 = private unnamed_addr constant [51 x i8] c"! command_line_arg || inode == NOT_AN_INODE_NUMBER\00", align 1
@__PRETTY_FUNCTION__.gobble_file = private unnamed_addr constant [79 x i8] c"uintmax_t gobble_file(const char *, enum filetype, ino_t, _Bool, const char *)\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"unlabeled\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.220 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@file_has_acl_cache.unsupported_device = internal global i64 0, align 8, !dbg !1014
@getfilecon_cache.unsupported_device = internal global i64 0, align 8, !dbg !1011
@has_capability_cache.unsupported_device = internal global i64 0, align 8, !dbg !1008
@.str.46 = private unnamed_addr constant [3 x i8] c"00\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"LS_COLORS\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"COLORTERM\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@color_buf = internal global i8* null, align 8, !dbg !971, !ctir !143
@indicator_name = internal constant [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8* null], align 16, !dbg !975, !ctir !599
@.str.175 = private unnamed_addr constant [24 x i8] c"unrecognized prefix: %s\00", align 1
@.str.176 = private unnamed_addr constant [52 x i8] c"unparsable value for LS_COLORS environment variable\00", align 1
@.str.177 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"lc\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"ec\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c"bd\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c"ex\00", align 1
@.str.194 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.195 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.196 = private unnamed_addr constant [3 x i8] c"sg\00", align 1
@.str.197 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.198 = private unnamed_addr constant [3 x i8] c"ow\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"mh\00", align 1
@.str.202 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@G_line = internal constant [4292 x i8] c"# Configuration file for dircolors, a utility to help you set the\00# LS_COLORS environment variable used by GNU ls with the --color option.\00# Copyright (C) 1996-2019 Free Software Foundation, Inc.\00# Copying and distribution of this file, with or without modification,\00# are permitted provided the copyright notice and this notice are preserved.\00# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\00# slackware version of dircolors) are recognized but ignored.\00# Below are TERM entries, which can be a glob patterns, to match\00# against the TERM environment variable to determine if it is colorizable.\00TERM Eterm\00TERM ansi\00TERM *color*\00TERM con[0-9]*x[0-9]*\00TERM cons25\00TERM console\00TERM cygwin\00TERM dtterm\00TERM gnome\00TERM hurd\00TERM jfbterm\00TERM konsole\00TERM kterm\00TERM linux\00TERM linux-c\00TERM mlterm\00TERM putty\00TERM rxvt*\00TERM screen*\00TERM st\00TERM terminator\00TERM tmux*\00TERM vt100\00TERM xterm*\00# Below are the color init strings for the basic file types.\00# One can use codes for 256 or more colors supported by modern terminals.\00# The default color codes use the capabilities of an 8 color terminal\00# with some additional attributes as per the following codes:\00# Attribute codes:\00# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\00# Text color codes:\00# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\00# Background color codes:\00# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\00#NORMAL 00 # no color code at all\00#FILE 00 # regular file: use no color at all\00RESET 0 # reset to \22normal\22 color\00DIR 01;34 # directory\00LINK 01;36 # symbolic link. (If you set this to 'target' instead of a\00 # numerical value, the color is as for the file pointed to.)\00MULTIHARDLINK 00 # regular file with more than one link\00FIFO 40;33 # pipe\00SOCK 01;35 # socket\00DOOR 01;35 # door\00BLK 40;33;01 # block device driver\00CHR 40;33;01 # character device driver\00ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'able file ...\00MISSING 00 # ... and the files they point to\00SETUID 37;41 # file that is setuid (u+s)\00SETGID 30;43 # file that is setgid (g+s)\00CAPABILITY 30;41 # file with capability\00STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\00OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky\00STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\00# This is for files with execute permission:\00EXEC 01;32\00# List any file extensions like '.gz' or '.tar' that you would like ls\00# to colorize below. Put the extension, a space, and the color init string.\00# (and any comments you want to add after a '#')\00# If you use DOS-style suffixes, you may want to uncomment the following:\00#.cmd 01;32 # executables (bright green)\00#.exe 01;32\00#.com 01;32\00#.btm 01;32\00#.bat 01;32\00# Or if you want to colorize scripts even if they do not have the\00# executable bit actually set.\00#.sh 01;32\00#.csh 01;32\00 # archives or compressed (bright red)\00.tar 01;31\00.tgz 01;31\00.arc 01;31\00.arj 01;31\00.taz 01;31\00.lha 01;31\00.lz4 01;31\00.lzh 01;31\00.lzma 01;31\00.tlz 01;31\00.txz 01;31\00.tzo 01;31\00.t7z 01;31\00.zip 01;31\00.z 01;31\00.dz 01;31\00.gz 01;31\00.lrz 01;31\00.lz 01;31\00.lzo 01;31\00.xz 01;31\00.zst 01;31\00.tzst 01;31\00.bz2 01;31\00.bz 01;31\00.tbz 01;31\00.tbz2 01;31\00.tz 01;31\00.deb 01;31\00.rpm 01;31\00.jar 01;31\00.war 01;31\00.ear 01;31\00.sar 01;31\00.rar 01;31\00.alz 01;31\00.ace 01;31\00.zoo 01;31\00.cpio 01;31\00.7z 01;31\00.rz 01;31\00.cab 01;31\00.wim 01;31\00.swm 01;31\00.dwm 01;31\00.esd 01;31\00# image formats\00.jpg 01;35\00.jpeg 01;35\00.mjpg 01;35\00.mjpeg 01;35\00.gif 01;35\00.bmp 01;35\00.pbm 01;35\00.pgm 01;35\00.ppm 01;35\00.tga 01;35\00.xbm 01;35\00.xpm 01;35\00.tif 01;35\00.tiff 01;35\00.png 01;35\00.svg 01;35\00.svgz 01;35\00.mng 01;35\00.pcx 01;35\00.mov 01;35\00.mpg 01;35\00.mpeg 01;35\00.m2v 01;35\00.mkv 01;35\00.webm 01;35\00.ogm 01;35\00.mp4 01;35\00.m4v 01;35\00.mp4v 01;35\00.vob 01;35\00.qt 01;35\00.nuv 01;35\00.wmv 01;35\00.asf 01;35\00.rm 01;35\00.rmvb 01;35\00.flc 01;35\00.avi 01;35\00.fli 01;35\00.flv 01;35\00.gl 01;35\00.dl 01;35\00.xcf 01;35\00.xwd 01;35\00.yuv 01;35\00.cgm 01;35\00.emf 01;35\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.ogv 01;35\00.ogx 01;35\00# audio formats\00.aac 00;36\00.au 00;36\00.flac 00;36\00.m4a 00;36\00.mid 00;36\00.midi 00;36\00.mka 00;36\00.mp3 00;36\00.mpc 00;36\00.ogg 00;36\00.ra 00;36\00.wav 00;36\00# https://wiki.xiph.org/MIME_Types_and_File_Extensions\00.oga 00;36\00.opus 00;36\00.spx 00;36\00.xspf 00;36\00", align 16, !dbg !968, !ctir !604
@.str.179 = private unnamed_addr constant [6 x i8] c"TERM \00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.64 = private unnamed_addr constant [59 x i8] c"ignoring invalid width in environment variable COLUMNS: %s\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"TABSIZE\00", align 1
@.str.66 = private unnamed_addr constant [62 x i8] c"ignoring invalid tab size in environment variable TABSIZE: %s\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\00", align 1
@long_options = internal constant [44 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i32 0, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.105, i32 0, i32 0), i32 0, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i32 0, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i32 0, i32 0), i32 0, i32* null, i32 113 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32 1, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i32 0, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i32 0, i32* null, i32 70 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.119, i32 0, i32 0), i32 0, i32* null, i32 141 }, %struct.option { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i32 1, i32* null, i32 136 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), i32 1, i32* null, i32 138 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i32 0, i32* null, i32 81 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 1, i32* null, i32 139 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i32 1, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), i32 0, i32* null, i32 140 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i32 1, i32* null, i32 142 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i32 1, i32* null, i32 143 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i32 1, i32* null, i32 144 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i32 2, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i32 2, i32* null, i32 137 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !916, !ctir !516
@optarg = external dso_local global i8*, align 8, !ctir !143
@.str.69 = private unnamed_addr constant [19 x i8] c"invalid line width\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"*~\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c".*~\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"invalid tab size\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"--sort\00", align 1
@sort_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i32 0, i32 0), i8* null], align 16, !dbg !934, !ctir !532
@sort_types = internal constant [5 x i32] [i32 -1, i32 4, i32 2, i32 1, i32 3], align 16, !dbg !932, !ctir !528
@.str.74 = private unnamed_addr constant [7 x i8] c"--time\00", align 1
@time_args = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8* null], align 16, !dbg !938, !ctir !532
@time_types = internal constant [5 x i32] [i32 2, i32 2, i32 2, i32 1, i32 1], align 16, !dbg !936, !ctir !537
@.str.75 = private unnamed_addr constant [9 x i8] c"--format\00", align 1
@format_args = internal constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), i8* null], align 16, !dbg !942, !ctir !543
@format_types = internal constant [7 x i32] [i32 0, i32 0, i32 4, i32 3, i32 3, i32 2, i32 1], align 16, !dbg !940, !ctir !539
@.str.76 = private unnamed_addr constant [9 x i8] c"full-iso\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"--color\00", align 1
@when_args = internal constant [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i8* null], align 16, !dbg !946, !ctir !550
@when_types = internal constant [9 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2], align 16, !dbg !944, !ctir !546
@.str.78 = private unnamed_addr constant [12 x i8] c"--hyperlink\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"--indicator-style\00", align 1
@indicator_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* null], align 16, !dbg !950, !ctir !557
@indicator_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !948, !ctir !553
@.str.80 = private unnamed_addr constant [16 x i8] c"--quoting-style\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"vdir\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"Richard M. Stallman\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.84 = private unnamed_addr constant [14 x i8] c"LS_BLOCK_SIZE\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"*=>@|\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"TIME_STYLE\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@decode_switches.posix_prefix = internal constant [7 x i8] c"posix-\00", align 1, !dbg !892
@optind = external dso_local global i32, align 4, !ctir !27
@.str.89 = private unnamed_addr constant [29 x i8] c"invalid time style format %s\00", align 1
@time_style_args = internal constant [5 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* null], align 16, !dbg !960, !ctir !557
@time_style_types = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !962, !ctir !565
@.str.90 = private unnamed_addr constant [11 x i8] c"time style\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"Valid arguments are:\0A\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !268
@.str.92 = private unnamed_addr constant [16 x i8] c"  - [posix-]%s\0A\00", align 1
@.str.93 = private unnamed_addr constant [54 x i8] c"  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\0A\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"%Y-%m-%d %H:%M:%S.%N %z\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.96 = private unnamed_addr constant [10 x i8] c"%Y-%m-%d \00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"%m-%d %H:%M\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"%.*s%s%s\00", align 1
@.str.168 = private unnamed_addr constant [9 x i8] c"long-iso\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 1
@.str.14 = private unnamed_addr constant [144 x i8] c"List information about the FILEs (the current directory by default).\0ASort entries alphabetically if none of -cftuvSUX nor --sort is specified.\0A\00", align 1
@.str.15 = private unnamed_addr constant [271 x i8] c"  -a, --all                  do not ignore entries starting with .\0A  -A, --almost-all           do not list implied . and ..\0A      --author               with -l, print the author of each file\0A  -b, --escape               print C-style escapes for nongraphic characters\0A\00", align 1
@.str.16 = private unnamed_addr constant [156 x i8] c"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\0A                               e.g., '--block-size=M'; see SIZE format below\0A\00", align 1
@.str.17 = private unnamed_addr constant [362 x i8] c"  -B, --ignore-backups       do not list implied entries ending with ~\0A  -c                         with -lt: sort by, and show, ctime (time of last\0A                               modification of file status information);\0A                               with -l: show ctime and sort by name;\0A                               otherwise: sort by ctime, newest first\0A\00", align 1
@.str.18 = private unnamed_addr constant [367 x i8] c"  -C                         list entries by columns\0A      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\0A                               if omitted), 'auto', or 'never'; more info below\0A  -d, --directory            list directories themselves, not their contents\0A  -D, --dired                generate output designed for Emacs' dired mode\0A\00", align 1
@.str.19 = private unnamed_addr constant [419 x i8] c"  -f                         do not sort, enable -aU, disable -ls --color\0A  -F, --classify             append indicator (one of */=>@|) to entries\0A      --file-type            likewise, except do not append '*'\0A      --format=WORD          across -x, commas -m, horizontal -x, long -l,\0A                               single-column -1, verbose -l, vertical -C\0A      --full-time            like -l --time-style=full-iso\0A\00", align 1
@.str.20 = private unnamed_addr constant [61 x i8] c"  -g                         like -l, but do not list owner\0A\00", align 1
@.str.21 = private unnamed_addr constant [245 x i8] c"      --group-directories-first\0A                             group directories before files;\0A                               can be augmented with a --sort option, but any\0A                               use of --sort=none (-U) disables grouping\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"  -G, --no-group             in a long listing, don't print group names\0A\00", align 1
@.str.23 = private unnamed_addr constant [150 x i8] c"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\0A      --si                   likewise, but use powers of 1000 not 1024\0A\00", align 1
@.str.24 = private unnamed_addr constant [422 x i8] c"  -H, --dereference-command-line\0A                             follow symbolic links listed on the command line\0A      --dereference-command-line-symlink-to-dir\0A                             follow each command line symbolic link\0A                               that points to a directory\0A      --hide=PATTERN         do not list implied entries matching shell PATTERN\0A                               (overridden by -a or -A)\0A\00", align 1
@.str.25 = private unnamed_addr constant [145 x i8] c"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\0A                               (default if omitted), 'auto', or 'never'\0A\00", align 1
@.str.26 = private unnamed_addr constant [354 x i8] c"      --indicator-style=WORD  append indicator with style WORD to entry names:\0A                               none (default), slash (-p),\0A                               file-type (--file-type), classify (-F)\0A  -i, --inode                print the index number of each file\0A  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\0A\00", align 1
@.str.27 = private unnamed_addr constant [148 x i8] c"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\0A                               used only with -s and per directory totals\0A\00", align 1
@.str.28 = private unnamed_addr constant [359 x i8] c"  -l                         use a long listing format\0A  -L, --dereference          when showing file information for a symbolic\0A                               link, show information for the file the link\0A                               references rather than for the link itself\0A  -m                         fill width with a comma separated list of entries\0A\00", align 1
@.str.29 = private unnamed_addr constant [303 x i8] c"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\0A  -N, --literal              print entry names without quoting\0A  -o                         like -l, but do not list group information\0A  -p, --indicator-style=slash\0A                             append / indicator to directories\0A\00", align 1
@.str.30 = private unnamed_addr constant [585 x i8] c"  -q, --hide-control-chars   print ? instead of nongraphic characters\0A      --show-control-chars   show nongraphic characters as-is (the default,\0A                               unless program is 'ls' and output is a terminal)\0A  -Q, --quote-name           enclose entry names in double quotes\0A      --quoting-style=WORD   use quoting style WORD for entry names:\0A                               literal, locale, shell, shell-always,\0A                               shell-escape, shell-escape-always, c, escape\0A                               (overrides QUOTING_STYLE environment variable)\0A\00", align 1
@.str.31 = private unnamed_addr constant [197 x i8] c"  -r, --reverse              reverse order while sorting\0A  -R, --recursive            list subdirectories recursively\0A  -s, --size                 print the allocated size of each file, in blocks\0A\00", align 1
@.str.32 = private unnamed_addr constant [519 x i8] c"  -S                         sort by file size, largest first\0A      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\0A                               time (-t), version (-v), extension (-X)\0A      --time=WORD            with -l, show time as WORD instead of default\0A                               modification time: atime or access or use (-u);\0A                               ctime or status (-c); also use specified time\0A                               as sort key if --sort=time (newest first)\0A\00", align 1
@.str.33 = private unnamed_addr constant [79 x i8] c"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\0A\00", align 1
@.str.34 = private unnamed_addr constant [142 x i8] c"  -t                         sort by modification time, newest first\0A  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\0A\00", align 1
@.str.35 = private unnamed_addr constant [372 x i8] c"  -u                         with -lt: sort by, and show, access time;\0A                               with -l: show access time and sort by name;\0A                               otherwise: sort by access time, newest first\0A  -U                         do not sort; list entries in directory order\0A  -v                         natural sort of (version) numbers within text\0A\00", align 1
@.str.36 = private unnamed_addr constant [363 x i8] c"  -w, --width=COLS           set output width to COLS.  0 means no limit\0A  -x                         list entries by lines instead of by columns\0A  -X                         sort alphabetically by entry extension\0A  -Z, --context              print any security context of each file\0A  -1                         list one file per line.  Avoid '\5Cn' with -q or -b\0A\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.39 = private unnamed_addr constant [376 x i8] c"\0AThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\0AFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\0Athen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\0ATIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\0AAlso the TIME_STYLE environment variable sets the default style to use.\0A\00", align 1
@.str.40 = private unnamed_addr constant [286 x i8] c"\0AUsing color to distinguish file types is disabled both by default and\0Awith --color=never.  With --color=auto, ls emits color codes only when\0Astandard output is connected to a terminal.  The LS_COLORS environment\0Avariable can change the settings.  Use the dircolors command to set it.\0A\00", align 1
@.str.41 = private unnamed_addr constant [152 x i8] c"\0AExit status:\0A 0  if OK,\0A 1  if minor problems (e.g., cannot access subdirectory),\0A 2  if serious trouble (e.g., cannot access command-line argument).\0A\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.235, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.237, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.241 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.242 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.243 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.244 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.246 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.233 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.234 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.235 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.237 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.238 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.240 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.232 = private unnamed_addr constant [212 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0ABinary prefixes can be used, too: KiB=K, MiB=M, and so on.\0A\00", align 1
@.str.231 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.165 = private unnamed_addr constant [6 x i8] c"slash\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"file-type\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"classify\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"if-tty\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"commas\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"across\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"single-column\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"use\00", align 1
@.str.148 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.142 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"dired\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"full-time\00", align 1
@.str.105 = private unnamed_addr constant [24 x i8] c"group-directories-first\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"kibibytes\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"numeric-uid-gid\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"no-group\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"hide-control-chars\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"almost-all\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"ignore-backups\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"dereference-command-line\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"dereference-command-line-symlink-to-dir\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"hide\00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"indicator-style\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"quote-name\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"quoting-style\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"show-control-chars\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"tabsize\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"time-style\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"hyperlink\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.140 = private unnamed_addr constant [7 x i8] c"author\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"QUOTING_STYLE\00", align 1
@.str.99 = private unnamed_addr constant [65 x i8] c"ignoring invalid value of environment variable QUOTING_STYLE: %s\00", align 1
@ls_mode = dso_local global i32 1, align 4, !dbg !1036, !ctir !27
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.248, i32 0, i32 0), align 8, !dbg !1041, !ctir !146
@.str.248 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1047, !ctir !535
@.str.257 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.258 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.259 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.260 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.261 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.270 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null, align 8, !dbg !1098, !ctir !146
@ignore_EPIPE = internal global i8 0, align 1, !dbg !1138, !ctir !141
@.str.273 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.274 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.275 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !1141, !ctir !330
@.str.284 = private unnamed_addr constant [24 x i8] c"system.posix_acl_access\00", align 1
@.str.1.285 = private unnamed_addr constant [25 x i8] c"system.posix_acl_default\00", align 1
@.str.298 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.299 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.304 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.305 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.308 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.309 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.310 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.311 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !1148, !ctir !1175
@.str.330 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.331 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.332 = private unnamed_addr constant [6 x i8] c"%.0Lf\00", align 1
@.str.3.333 = private unnamed_addr constant [6 x i8] c"%.1Lf\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY", align 1, !dbg !1280, !ctir !1318
@.str.9.336 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.4.337 = private unnamed_addr constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str.5.338 = private unnamed_addr constant [10 x i8] c"BLOCKSIZE\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.340, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.341, i32 0, i32 0), i8* null], align 16, !dbg !1337, !ctir !1332
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144], align 4, !dbg !1340, !ctir !1333
@.str.6.339 = private unnamed_addr constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@.str.7.340 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str.8.341 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@user_alist = internal global %struct.userid* null, align 8, !dbg !1342, !ctir !1349
@.str.344 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@nouser_alist = internal global %struct.userid* null, align 8, !dbg !1388, !ctir !1349
@group_alist = internal global %struct.userid* null, align 8, !dbg !1390, !ctir !1349
@nogroup_alist = internal global %struct.userid* null, align 8, !dbg !1392, !ctir !1349
@.str.361 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.362 = private unnamed_addr constant [9 x i8] c"%m/%d/%y\00", align 1
@.str.2.363 = private unnamed_addr constant [9 x i8] c"%Y-%m-%d\00", align 1
@.str.3.364 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.4.365 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !1394, !ctir !146
@.str.370 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.371 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.372 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !143
@program_invocation_name = external dso_local global i8*, align 8, !ctir !143
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.376, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.377, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.378, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.379, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.381, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.382, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.384, i32 0, i32 0), i8* null], align 16, !dbg !1435, !ctir !1441
@.str.375 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.376 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.377 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.378 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.379 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.380 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.381 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.382 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.383 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.384 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1532, !ctir !1442
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1534, !ctir !1446
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1536, !ctir !1446
@.str.10.397 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.398 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.399 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.400 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.401 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.402 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.403 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.404 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.405 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.bin_str* @slotvec0, align 8, !dbg !1540, !ctir !1474
@nslots = internal global i32 1, align 4, !dbg !1542, !ctir !27
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1538, !ctir !343
@slotvec0 = internal global %struct.bin_str { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1544, !ctir !1475
@.str.420 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.435 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.436 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.437 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.438 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.439 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.440 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.441 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.442 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.443 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.444 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.445 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.446 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.447 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.448 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.451 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.452 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.453 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.454 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.455 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.456 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1546, !ctir !1551
@.str.1.475 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.476 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.479 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.486 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.487 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@.str.490 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1.491 = private unnamed_addr constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str.2.492 = private unnamed_addr constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 1
@.str.3.493 = private unnamed_addr constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str.496 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.497 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoumax = private unnamed_addr constant [79 x i8] c"strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)\00", align 1
@obstack_alloc_failed_handler = dso_local global void ()* @print_and_abort, align 8, !dbg !1556, !ctir !425
@.str.1.502 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.503 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.512 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.1.513 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.530 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.531 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !2435 !ctir !235 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4, !ctir !27
  %thispend = alloca %struct.pending*, align 8, !ctir !237
  %n_files = alloca i32, align 4, !ctir !27
  %di = alloca %struct.dev_ino, align 8, !ctir !254
  %found = alloca %struct.dev_ino*, align 8, !ctir !253
  %j = alloca i32, align 4, !ctir !27
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2440, metadata !DIExpression()), !dbg !2441
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2444, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata %struct.pending** %thispend, metadata !2448, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2450, metadata !DIExpression()), !dbg !2451
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2452, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2452, !ctir !142
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2452, !tbaa !2442
  call void @set_program_name(i8* %1), !dbg !2453
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13, !dbg !2454
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !2455
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !2456
  call void @initialize_exit_failure(i32 2), !dbg !2457
  %call3 = call i32 @atexit(void ()* @close_stdout) #13, !dbg !2458
  store i32 0, i32* @exit_status, align 4, !dbg !2459, !tbaa !2436
  store i8 1, i8* @print_dir_name, align 1, !dbg !2460, !tbaa !2461
  store %struct.pending* null, %struct.pending** @pending_dirs, align 8, !dbg !2463, !tbaa !2442
  store i64 -9223372036854775808, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !2464, !tbaa !2465, !ctir !164
  store i64 -1, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !2468, !tbaa !2469, !ctir !219
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2470, !tbaa !2436
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2471, !tbaa !2442
  %call4 = call i32 @decode_switches(i32 %2, i8** %3), !dbg !2472
  store i32 %call4, i32* %i, align 4, !dbg !2473, !tbaa !2436
  %4 = load i8, i8* @print_with_color, align 1, !dbg !2474, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !2474
  br i1 %tobool, label %if.then, label %if.end, !dbg !2476

if.then:                                          ; preds = %entry
  call void @parse_ls_color(), !dbg !2477
  br label %if.end, !dbg !2477

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* @directories_first, align 1, !dbg !2478, !tbaa !2461
  %tobool5 = trunc i8 %5 to i1, !dbg !2478
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !2480

if.then6:                                         ; preds = %if.end
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2481, !tbaa !2461
  br label %if.end18, !dbg !2482

if.else:                                          ; preds = %if.end
  %6 = load i8, i8* @print_with_color, align 1, !dbg !2483, !tbaa !2461
  %tobool7 = trunc i8 %6 to i1, !dbg !2483
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !2485

if.then8:                                         ; preds = %if.else
  %call9 = call zeroext i1 @is_colored(i32 13), !dbg !2486
  br i1 %call9, label %if.then15, label %lor.lhs.false, !dbg !2489

lor.lhs.false:                                    ; preds = %if.then8
  %call10 = call zeroext i1 @is_colored(i32 14), !dbg !2490
  br i1 %call10, label %land.lhs.true, label %lor.lhs.false12, !dbg !2491

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !2492, !tbaa !2461
  %tobool11 = trunc i8 %7 to i1, !dbg !2492
  br i1 %tobool11, label %if.then15, label %lor.lhs.false12, !dbg !2493

lor.lhs.false12:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %call13 = call zeroext i1 @is_colored(i32 12), !dbg !2494
  br i1 %call13, label %land.lhs.true14, label %if.end16, !dbg !2495

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %8 = load i32, i32* @format, align 4, !dbg !2496, !tbaa !2497
  %cmp = icmp eq i32 %8, 0, !dbg !2498
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !2499

if.then15:                                        ; preds = %land.lhs.true14, %land.lhs.true, %if.then8
  store i8 1, i8* @check_symlink_mode, align 1, !dbg !2500, !tbaa !2461
  br label %if.end16, !dbg !2501

if.end16:                                         ; preds = %if.then15, %land.lhs.true14, %lor.lhs.false12
  br label %if.end17, !dbg !2502

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  %9 = load i32, i32* @dereference, align 4, !dbg !2503, !tbaa !2497
  %cmp19 = icmp eq i32 %9, 1, !dbg !2505
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !2506

if.then20:                                        ; preds = %if.end18
  %10 = load i8, i8* @immediate_dirs, align 1, !dbg !2507, !tbaa !2461
  %tobool21 = trunc i8 %10 to i1, !dbg !2507
  br i1 %tobool21, label %lor.end, label %lor.lhs.false22, !dbg !2508

lor.lhs.false22:                                  ; preds = %if.then20
  %11 = load i32, i32* @indicator_style, align 4, !dbg !2509, !tbaa !2497
  %cmp23 = icmp eq i32 %11, 3, !dbg !2510
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !2511

lor.rhs:                                          ; preds = %lor.lhs.false22
  %12 = load i32, i32* @format, align 4, !dbg !2512, !tbaa !2497
  %cmp24 = icmp eq i32 %12, 0, !dbg !2513
  br label %lor.end, !dbg !2511

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false22, %if.then20
  %13 = phi i1 [ true, %lor.lhs.false22 ], [ true, %if.then20 ], [ %cmp24, %lor.rhs ]
  %14 = zext i1 %13 to i64, !dbg !2514
  %cond = select i1 %13, i32 2, i32 4, !dbg !2514
  store i32 %cond, i32* @dereference, align 4, !dbg !2515, !tbaa !2497
  br label %if.end25, !dbg !2516

if.end25:                                         ; preds = %lor.end, %if.end18
  %15 = load i8, i8* @recursive, align 1, !dbg !2517, !tbaa !2461
  %tobool26 = trunc i8 %15 to i1, !dbg !2517
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !2519

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.hash_table* @hash_initialize(i64 30, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_ino_hash, i1 (i8*, i8*)* @dev_ino_compare, void (i8*)* @dev_ino_free), !dbg !2520
  store %struct.hash_table* %call28, %struct.hash_table** @active_dir_set, align 8, !dbg !2522, !tbaa !2442
  %16 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2523, !tbaa !2442
  %cmp29 = icmp eq %struct.hash_table* %16, null, !dbg !2525
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2526

if.then30:                                        ; preds = %if.then27
  call void @xalloc_die() #14, !dbg !2527
  unreachable, !dbg !2527

if.end31:                                         ; preds = %if.then27
  %call32 = call i32 @_obstack_begin(%struct.obstack* @dev_ino_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2528
  br label %if.end33, !dbg !2529

if.end33:                                         ; preds = %if.end31, %if.end25
  %call34 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !2530
  %call35 = call %struct.tm_zone* @tzalloc(i8* %call34), !dbg !2531
  store %struct.tm_zone* %call35, %struct.tm_zone** @localtz, align 8, !dbg !2532, !tbaa !2442
  %17 = load i32, i32* @sort_type, align 4, !dbg !2533, !tbaa !2497
  %cmp36 = icmp eq i32 %17, 4, !dbg !2534
  br i1 %cmp36, label %lor.end45, label %lor.lhs.false37, !dbg !2535

lor.lhs.false37:                                  ; preds = %if.end33
  %18 = load i32, i32* @sort_type, align 4, !dbg !2536, !tbaa !2497
  %cmp38 = icmp eq i32 %18, 2, !dbg !2537
  br i1 %cmp38, label %lor.end45, label %lor.lhs.false39, !dbg !2538

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %19 = load i32, i32* @format, align 4, !dbg !2539, !tbaa !2497
  %cmp40 = icmp eq i32 %19, 0, !dbg !2540
  br i1 %cmp40, label %lor.end45, label %lor.lhs.false41, !dbg !2541

lor.lhs.false41:                                  ; preds = %lor.lhs.false39
  %20 = load i8, i8* @print_scontext, align 1, !dbg !2542, !tbaa !2461
  %tobool42 = trunc i8 %20 to i1, !dbg !2542
  br i1 %tobool42, label %lor.end45, label %lor.rhs43, !dbg !2543

lor.rhs43:                                        ; preds = %lor.lhs.false41
  %21 = load i8, i8* @print_block_size, align 1, !dbg !2544, !tbaa !2461
  %tobool44 = trunc i8 %21 to i1, !dbg !2544
  br label %lor.end45, !dbg !2543

lor.end45:                                        ; preds = %lor.rhs43, %lor.lhs.false41, %lor.lhs.false39, %lor.lhs.false37, %if.end33
  %22 = phi i1 [ true, %lor.lhs.false41 ], [ true, %lor.lhs.false39 ], [ true, %lor.lhs.false37 ], [ true, %if.end33 ], [ %tobool44, %lor.rhs43 ]
  %frombool = zext i1 %22 to i8, !dbg !2545
  store i8 %frombool, i8* @format_needs_stat, align 1, !dbg !2545, !tbaa !2461
  %23 = load i8, i8* @format_needs_stat, align 1, !dbg !2546, !tbaa !2461
  %tobool46 = trunc i8 %23 to i1, !dbg !2546
  br i1 %tobool46, label %land.end, label %land.rhs, !dbg !2547

land.rhs:                                         ; preds = %lor.end45
  %24 = load i8, i8* @recursive, align 1, !dbg !2548, !tbaa !2461
  %tobool47 = trunc i8 %24 to i1, !dbg !2548
  br i1 %tobool47, label %lor.end54, label %lor.lhs.false48, !dbg !2549

lor.lhs.false48:                                  ; preds = %land.rhs
  %25 = load i8, i8* @print_with_color, align 1, !dbg !2550, !tbaa !2461
  %tobool49 = trunc i8 %25 to i1, !dbg !2550
  br i1 %tobool49, label %lor.end54, label %lor.lhs.false50, !dbg !2551

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %26 = load i32, i32* @indicator_style, align 4, !dbg !2552, !tbaa !2497
  %cmp51 = icmp ne i32 %26, 0, !dbg !2553
  br i1 %cmp51, label %lor.end54, label %lor.rhs52, !dbg !2554

lor.rhs52:                                        ; preds = %lor.lhs.false50
  %27 = load i8, i8* @directories_first, align 1, !dbg !2555, !tbaa !2461
  %tobool53 = trunc i8 %27 to i1, !dbg !2555
  br label %lor.end54, !dbg !2554

lor.end54:                                        ; preds = %lor.rhs52, %lor.lhs.false50, %lor.lhs.false48, %land.rhs
  %28 = phi i1 [ true, %lor.lhs.false50 ], [ true, %lor.lhs.false48 ], [ true, %land.rhs ], [ %tobool53, %lor.rhs52 ]
  br label %land.end

land.end:                                         ; preds = %lor.end54, %lor.end45
  %29 = phi i1 [ false, %lor.end45 ], [ %28, %lor.end54 ], !dbg !2556
  %frombool55 = zext i1 %29 to i8, !dbg !2557
  store i8 %frombool55, i8* @format_needs_type, align 1, !dbg !2557, !tbaa !2461
  %30 = load i8, i8* @dired, align 1, !dbg !2558, !tbaa !2461
  %tobool56 = trunc i8 %30 to i1, !dbg !2558
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !2560

if.then57:                                        ; preds = %land.end
  %call58 = call i32 @_obstack_begin(%struct.obstack* @dired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2561
  %call59 = call i32 @_obstack_begin(%struct.obstack* @subdired_obstack, i64 0, i64 0, i8* (i64)* @malloc, void (i8*)* @free), !dbg !2563
  br label %if.end60, !dbg !2564

if.end60:                                         ; preds = %if.then57, %land.end
  %31 = load i8, i8* @print_hyperlink, align 1, !dbg !2565, !tbaa !2461
  %tobool61 = trunc i8 %31 to i1, !dbg !2565
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !2567

if.then62:                                        ; preds = %if.end60
  call void @file_escape_init(), !dbg !2568
  %call63 = call i8* @xgethostname(), !dbg !2570
  store i8* %call63, i8** @hostname, align 8, !dbg !2571, !tbaa !2442
  %32 = load i8*, i8** @hostname, align 8, !dbg !2572, !tbaa !2442
  %tobool64 = icmp ne i8* %32, null, !dbg !2572
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !2574

if.then65:                                        ; preds = %if.then62
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** @hostname, align 8, !dbg !2575, !tbaa !2442
  br label %if.end66, !dbg !2576

if.end66:                                         ; preds = %if.then65, %if.then62
  br label %if.end67, !dbg !2577

if.end67:                                         ; preds = %if.end66, %if.end60
  store i64 100, i64* @cwd_n_alloc, align 8, !dbg !2578, !tbaa !2579
  %33 = load i64, i64* @cwd_n_alloc, align 8, !dbg !2580, !tbaa !2579
  %call68 = call noalias i8* @xnmalloc(i64 %33, i64 200), !dbg !2581
  %34 = bitcast i8* %call68 to %struct.fileinfo*, !dbg !2581
  store %struct.fileinfo* %34, %struct.fileinfo** @cwd_file, align 8, !dbg !2582, !tbaa !2442
  store i64 0, i64* @cwd_n_used, align 8, !dbg !2583, !tbaa !2579
  call void @clear_files(), !dbg !2584
  %35 = load i32, i32* %argc.addr, align 4, !dbg !2585, !tbaa !2436
  %36 = load i32, i32* %i, align 4, !dbg !2586, !tbaa !2436
  %sub = sub nsw i32 %35, %36, !dbg !2587
  store i32 %sub, i32* %n_files, align 4, !dbg !2588, !tbaa !2436
  %37 = load i32, i32* %n_files, align 4, !dbg !2589, !tbaa !2436
  %cmp69 = icmp sle i32 %37, 0, !dbg !2591
  br i1 %cmp69, label %if.then70, label %if.else76, !dbg !2592

if.then70:                                        ; preds = %if.end67
  %38 = load i8, i8* @immediate_dirs, align 1, !dbg !2593, !tbaa !2461
  %tobool71 = trunc i8 %38 to i1, !dbg !2593
  br i1 %tobool71, label %if.then72, label %if.else74, !dbg !2596

if.then72:                                        ; preds = %if.then70
  %call73 = call i64 @gobble_file(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 3, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2597
  br label %if.end75, !dbg !2597

if.else74:                                        ; preds = %if.then70
  call void @queue_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* null, i1 zeroext true), !dbg !2598
  br label %if.end75

if.end75:                                         ; preds = %if.else74, %if.then72
  br label %if.end80, !dbg !2599

if.else76:                                        ; preds = %if.end67
  br label %do.body, !dbg !2600

do.body:                                          ; preds = %do.cond, %if.else76
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !2601, !tbaa !2442
  %40 = load i32, i32* %i, align 4, !dbg !2602, !tbaa !2436
  %inc = add nsw i32 %40, 1, !dbg !2602
  store i32 %inc, i32* %i, align 4, !dbg !2602, !tbaa !2436
  %idxprom = sext i32 %40 to i64, !dbg !2601
  %arrayidx77 = getelementptr inbounds i8*, i8** %39, i64 %idxprom, !dbg !2601, !ctir !142
  %41 = load i8*, i8** %arrayidx77, align 8, !dbg !2601, !tbaa !2442
  %call78 = call i64 @gobble_file(i8* %41, i32 0, i64 0, i1 zeroext true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2603
  br label %do.cond, !dbg !2603

do.cond:                                          ; preds = %do.body
  %42 = load i32, i32* %i, align 4, !dbg !2604, !tbaa !2436
  %43 = load i32, i32* %argc.addr, align 4, !dbg !2605, !tbaa !2436
  %cmp79 = icmp slt i32 %42, %43, !dbg !2606
  br i1 %cmp79, label %do.body, label %do.end, !dbg !2603, !llvm.loop !2607

do.end:                                           ; preds = %do.cond
  br label %if.end80

if.end80:                                         ; preds = %do.end, %if.end75
  %44 = load i64, i64* @cwd_n_used, align 8, !dbg !2609, !tbaa !2579
  %tobool81 = icmp ne i64 %44, 0, !dbg !2609
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !2611

if.then82:                                        ; preds = %if.end80
  call void @sort_files(), !dbg !2612
  %45 = load i8, i8* @immediate_dirs, align 1, !dbg !2614, !tbaa !2461
  %tobool83 = trunc i8 %45 to i1, !dbg !2614
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !2616

if.then84:                                        ; preds = %if.then82
  call void @extract_dirs_from_files(i8* null, i1 zeroext true), !dbg !2617
  br label %if.end85, !dbg !2617

if.end85:                                         ; preds = %if.then84, %if.then82
  br label %if.end86, !dbg !2618

if.end86:                                         ; preds = %if.end85, %if.end80
  %46 = load i64, i64* @cwd_n_used, align 8, !dbg !2619, !tbaa !2579
  %tobool87 = icmp ne i64 %46, 0, !dbg !2619
  br i1 %tobool87, label %if.then88, label %if.else97, !dbg !2621

if.then88:                                        ; preds = %if.end86
  call void @print_current_files(), !dbg !2622
  %47 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2624, !tbaa !2442
  %tobool89 = icmp ne %struct.pending* %47, null, !dbg !2624
  br i1 %tobool89, label %if.then90, label %if.end96, !dbg !2626

if.then90:                                        ; preds = %if.then88
  br label %do.body91, !dbg !2627

do.body91:                                        ; preds = %if.then90
  %call92 = call i32 @putchar_unlocked(i32 10), !dbg !2628
  %48 = load i64, i64* @dired_pos, align 8, !dbg !2628, !tbaa !2579
  %inc93 = add i64 %48, 1, !dbg !2628
  store i64 %inc93, i64* @dired_pos, align 8, !dbg !2628, !tbaa !2579
  br label %do.end95, !dbg !2628

do.end95:                                         ; preds = %do.body91
  br label %if.end96, !dbg !2628

if.end96:                                         ; preds = %do.end95, %if.then88
  br label %if.end105, !dbg !2630

if.else97:                                        ; preds = %if.end86
  %49 = load i32, i32* %n_files, align 4, !dbg !2631, !tbaa !2436
  %cmp98 = icmp sle i32 %49, 1, !dbg !2633
  br i1 %cmp98, label %land.lhs.true99, label %if.end104, !dbg !2634

land.lhs.true99:                                  ; preds = %if.else97
  %50 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2635, !tbaa !2442
  %tobool100 = icmp ne %struct.pending* %50, null, !dbg !2635
  br i1 %tobool100, label %land.lhs.true101, label %if.end104, !dbg !2636

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %51 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2637, !tbaa !2442
  %next = getelementptr inbounds %struct.pending, %struct.pending* %51, i32 0, i32 3, !dbg !2638, !ctir !238
  %52 = load %struct.pending*, %struct.pending** %next, align 8, !dbg !2638, !tbaa !2639, !ctir !237
  %cmp102 = icmp eq %struct.pending* %52, null, !dbg !2641
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !2642

if.then103:                                       ; preds = %land.lhs.true101
  store i8 0, i8* @print_dir_name, align 1, !dbg !2643, !tbaa !2461
  br label %if.end104, !dbg !2644

if.end104:                                        ; preds = %if.then103, %land.lhs.true101, %land.lhs.true99, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end96
  br label %while.cond, !dbg !2645

while.cond:                                       ; preds = %if.end119, %if.end117, %if.end105
  %53 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2646, !tbaa !2442
  %tobool106 = icmp ne %struct.pending* %53, null, !dbg !2645
  br i1 %tobool106, label %while.body, label %while.end, !dbg !2645

while.body:                                       ; preds = %while.cond
  %54 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2647, !tbaa !2442
  store %struct.pending* %54, %struct.pending** %thispend, align 8, !dbg !2649, !tbaa !2442
  %55 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !2650, !tbaa !2442
  %next107 = getelementptr inbounds %struct.pending, %struct.pending* %55, i32 0, i32 3, !dbg !2651, !ctir !238
  %56 = load %struct.pending*, %struct.pending** %next107, align 8, !dbg !2651, !tbaa !2639, !ctir !237
  store %struct.pending* %56, %struct.pending** @pending_dirs, align 8, !dbg !2652, !tbaa !2442
  %57 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2653, !tbaa !2442
  %tobool108 = icmp ne %struct.hash_table* %57, null, !dbg !2653
  br i1 %tobool108, label %if.then109, label %if.end119, !dbg !2655

if.then109:                                       ; preds = %while.body
  %58 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2656, !tbaa !2442
  %name = getelementptr inbounds %struct.pending, %struct.pending* %58, i32 0, i32 0, !dbg !2659, !ctir !238
  %59 = load i8*, i8** %name, align 8, !dbg !2659, !tbaa !2660, !ctir !143
  %cmp110 = icmp eq i8* %59, null, !dbg !2661
  br i1 %cmp110, label %if.then111, label %if.end118, !dbg !2662

if.then111:                                       ; preds = %if.then109
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %di, metadata !2663, metadata !DIExpression()), !dbg !2665
  %call112 = call { i64, i64 } @dev_ino_pop(), !dbg !2666
  %60 = bitcast %struct.dev_ino* %di to { i64, i64 }*, !dbg !2666
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0, !dbg !2666
  %62 = extractvalue { i64, i64 } %call112, 0, !dbg !2666
  store i64 %62, i64* %61, align 8, !dbg !2666
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1, !dbg !2666
  %64 = extractvalue { i64, i64 } %call112, 1, !dbg !2666
  store i64 %64, i64* %63, align 8, !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %found, metadata !2667, metadata !DIExpression()), !dbg !2668
  %65 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2669, !tbaa !2442
  %66 = bitcast %struct.dev_ino* %di to i8*, !dbg !2670
  %call113 = call i8* @hash_delete(%struct.hash_table* %65, i8* %66), !dbg !2671
  %67 = bitcast i8* %call113 to %struct.dev_ino*, !dbg !2671
  store %struct.dev_ino* %67, %struct.dev_ino** %found, align 8, !dbg !2668, !tbaa !2442
  %68 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2672, !tbaa !2442
  %tobool114 = icmp ne %struct.dev_ino* %68, null, !dbg !2672
  br i1 %tobool114, label %if.then115, label %if.else116, !dbg !2675

if.then115:                                       ; preds = %if.then111
  br label %if.end117, !dbg !2675

if.else116:                                       ; preds = %if.then111
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1600, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2672
  unreachable, !dbg !2672

if.end117:                                        ; preds = %if.then115
  %69 = load %struct.dev_ino*, %struct.dev_ino** %found, align 8, !dbg !2676, !tbaa !2442
  %70 = bitcast %struct.dev_ino* %69 to i8*, !dbg !2676
  call void @dev_ino_free(i8* %70), !dbg !2677
  %71 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2678, !tbaa !2442
  call void @free_pending_ent(%struct.pending* %71), !dbg !2679
  br label %while.cond, !dbg !2680, !llvm.loop !2681

if.end118:                                        ; preds = %if.then109
  br label %if.end119, !dbg !2683

if.end119:                                        ; preds = %if.end118, %while.body
  %72 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2684, !tbaa !2442
  %name120 = getelementptr inbounds %struct.pending, %struct.pending* %72, i32 0, i32 0, !dbg !2685, !ctir !238
  %73 = load i8*, i8** %name120, align 8, !dbg !2685, !tbaa !2660, !ctir !143
  %74 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2686, !tbaa !2442
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %74, i32 0, i32 1, !dbg !2687, !ctir !238
  %75 = load i8*, i8** %realname, align 8, !dbg !2687, !tbaa !2688, !ctir !143
  %76 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2689, !tbaa !2442
  %command_line_arg = getelementptr inbounds %struct.pending, %struct.pending* %76, i32 0, i32 2, !dbg !2690, !ctir !238
  %77 = load i8, i8* %command_line_arg, align 8, !dbg !2690, !tbaa !2691
  %tobool121 = trunc i8 %77 to i1, !dbg !2690, !ctir !141
  call void @print_dir(i8* %73, i8* %75, i1 zeroext %tobool121), !dbg !2692
  %78 = load %struct.pending*, %struct.pending** %thispend, align 8, !dbg !2693, !tbaa !2442
  call void @free_pending_ent(%struct.pending* %78), !dbg !2694
  store i8 1, i8* @print_dir_name, align 1, !dbg !2695, !tbaa !2461
  br label %while.cond, !dbg !2645, !llvm.loop !2681

while.end:                                        ; preds = %while.cond
  %79 = load i8, i8* @print_with_color, align 1, !dbg !2696, !tbaa !2461
  %tobool122 = trunc i8 %79 to i1, !dbg !2696
  br i1 %tobool122, label %land.lhs.true123, label %if.end145, !dbg !2698

land.lhs.true123:                                 ; preds = %while.end
  %80 = load i8, i8* @used_color, align 1, !dbg !2699, !tbaa !2461
  %tobool124 = trunc i8 %80 to i1, !dbg !2699
  br i1 %tobool124, label %if.then125, label %if.end145, !dbg !2700

if.then125:                                       ; preds = %land.lhs.true123
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2701, metadata !DIExpression()), !dbg !2703
  %81 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 0), align 16, !dbg !2704, !tbaa !2706, !ctir !149
  %cmp126 = icmp eq i64 %81, 2, !dbg !2708
  br i1 %cmp126, label %land.lhs.true127, label %if.then136, !dbg !2709

land.lhs.true127:                                 ; preds = %if.then125
  %82 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0, i32 1), align 8, !dbg !2710, !tbaa !2711, !ctir !146
  %call128 = call i32 @memcmp(i8* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16, !dbg !2712
  %cmp129 = icmp eq i32 %call128, 0, !dbg !2713
  br i1 %cmp129, label %land.lhs.true130, label %if.then136, !dbg !2714

land.lhs.true130:                                 ; preds = %land.lhs.true127
  %83 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 0), align 16, !dbg !2715, !tbaa !2706, !ctir !149
  %cmp131 = icmp eq i64 %83, 1, !dbg !2716
  br i1 %cmp131, label %land.lhs.true132, label %if.then136, !dbg !2717

land.lhs.true132:                                 ; preds = %land.lhs.true130
  %84 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1, i32 1), align 8, !dbg !2718, !tbaa !2711, !ctir !146
  %arrayidx133 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !2719, !ctir !146
  %85 = load i8, i8* %arrayidx133, align 1, !dbg !2719, !tbaa !2497
  %conv = sext i8 %85 to i32, !dbg !2719
  %cmp134 = icmp eq i32 %conv, 109, !dbg !2720
  br i1 %cmp134, label %if.end137, label %if.then136, !dbg !2721

if.then136:                                       ; preds = %land.lhs.true132, %land.lhs.true130, %land.lhs.true127, %if.then125
  call void @restore_default_color(), !dbg !2722
  br label %if.end137, !dbg !2722

if.end137:                                        ; preds = %if.then136, %land.lhs.true132
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2723, !tbaa !2442
  %call138 = call i32 @fflush_unlocked(%struct._IO_FILE* %86), !dbg !2723
  call void @signal_restore(), !dbg !2724
  %87 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !2725, !tbaa !2436
  store i32 %87, i32* %j, align 4, !dbg !2727, !tbaa !2436
  br label %for.cond, !dbg !2728

for.cond:                                         ; preds = %for.inc, %if.end137
  %88 = load i32, i32* %j, align 4, !dbg !2729, !tbaa !2436
  %tobool139 = icmp ne i32 %88, 0, !dbg !2731
  br i1 %tobool139, label %for.body, label %for.end, !dbg !2731

for.body:                                         ; preds = %for.cond
  %call140 = call i32 @raise(i32 19) #13, !dbg !2732
  br label %for.inc, !dbg !2732

for.inc:                                          ; preds = %for.body
  %89 = load i32, i32* %j, align 4, !dbg !2733, !tbaa !2436
  %dec = add nsw i32 %89, -1, !dbg !2733
  store i32 %dec, i32* %j, align 4, !dbg !2733, !tbaa !2436
  br label %for.cond, !dbg !2734, !llvm.loop !2735

for.end:                                          ; preds = %for.cond
  %90 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !2737, !tbaa !2436
  store i32 %90, i32* %j, align 4, !dbg !2738, !tbaa !2436
  %91 = load i32, i32* %j, align 4, !dbg !2739, !tbaa !2436
  %tobool141 = icmp ne i32 %91, 0, !dbg !2739
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !2741

if.then142:                                       ; preds = %for.end
  %92 = load i32, i32* %j, align 4, !dbg !2742, !tbaa !2436
  %call143 = call i32 @raise(i32 %92) #13, !dbg !2743
  br label %if.end144, !dbg !2743

if.end144:                                        ; preds = %if.then142, %for.end
  br label %if.end145, !dbg !2744

if.end145:                                        ; preds = %if.end144, %land.lhs.true123, %while.end
  %93 = load i8, i8* @dired, align 1, !dbg !2745, !tbaa !2461
  %tobool146 = trunc i8 %93 to i1, !dbg !2745
  br i1 %tobool146, label %if.then147, label %if.end152, !dbg !2747

if.then147:                                       ; preds = %if.end145
  call void @dired_dump_obstack(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.obstack* @dired_obstack), !dbg !2748
  call void @dired_dump_obstack(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %struct.obstack* @subdired_obstack), !dbg !2750
  %94 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !2751, !tbaa !2442
  %call148 = call i32 @get_quoting_style(%struct.quoting_options* %94), !dbg !2752
  %idxprom149 = zext i32 %call148 to i64, !dbg !2753
  %arrayidx150 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @quoting_style_args to [0 x i8*]*), i64 0, i64 %idxprom149, !dbg !2753, !ctir !324
  %95 = load i8*, i8** %arrayidx150, align 8, !dbg !2753, !tbaa !2442
  %call151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %95), !dbg !2754
  br label %if.end152, !dbg !2755

if.end152:                                        ; preds = %if.then147, %if.end145
  %96 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2756, !tbaa !2442
  %tobool153 = icmp ne %struct.hash_table* %96, null, !dbg !2756
  br i1 %tobool153, label %if.then154, label %if.end161, !dbg !2758

if.then154:                                       ; preds = %if.end152
  %97 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2759, !tbaa !2442
  %call155 = call i64 @hash_get_n_entries(%struct.hash_table* %97) #16, !dbg !2759
  %cmp156 = icmp eq i64 %call155, 0, !dbg !2759
  br i1 %cmp156, label %if.then158, label %if.else159, !dbg !2763

if.then158:                                       ; preds = %if.then154
  br label %if.end160, !dbg !2763

if.else159:                                       ; preds = %if.then154
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1652, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #15, !dbg !2759
  unreachable, !dbg !2759

if.end160:                                        ; preds = %if.then158
  %98 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !2764, !tbaa !2442
  call void @hash_free(%struct.hash_table* %98), !dbg !2765
  br label %if.end161, !dbg !2766

if.end161:                                        ; preds = %if.end160, %if.end152
  %99 = load i32, i32* @exit_status, align 4, !dbg !2767, !tbaa !2436
  ret i32 %99, !dbg !2768
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_exit_failure(i32 %status) #0 !dbg !2769 !ctir !174 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  %0 = load i32, i32* %status.addr, align 4, !dbg !2772, !tbaa !2436
  %cmp = icmp ne i32 %0, 1, !dbg !2774
  br i1 %cmp, label %if.then, label %if.end, !dbg !2775

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !2776, !tbaa !2436
  store volatile i32 %1, i32* @exit_failure, align 4, !dbg !2777, !tbaa !2436
  br label %if.end, !dbg !2778

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2779
}

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @decode_switches(i32 %argc, i8** %argv) #0 !dbg !894 !ctir !235 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %time_style_option = alloca i8*, align 8, !ctir !143
  %sort_type_specified = alloca i8, align 1, !ctir !141
  %kibibytes_specified = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %ws = alloca %struct.winsize, align 2, !ctir !2780
  %p29 = alloca i8*, align 8, !ctir !146
  %tmp_ulong = alloca i64, align 8, !ctir !151
  %oi = alloca i32, align 4, !ctir !27
  %c = alloca i32, align 4, !ctir !27
  %hide = alloca %struct.ignore_pattern*, align 8, !ctir !511
  %i = alloca i32, align 4, !ctir !27
  %i139 = alloca i32, align 4, !ctir !27
  %e = alloca i32, align 4, !ctir !109
  %ls_block_size = alloca i8*, align 8, !ctir !146
  %qs = alloca i32, align 4, !ctir !95
  %p231 = alloca i8*, align 8, !ctir !146
  %style = alloca i8*, align 8, !ctir !143
  %p0 = alloca i8*, align 8, !ctir !143
  %p1 = alloca i8*, align 8, !ctir !143
  %res = alloca i64, align 8, !ctir !564
  %p304 = alloca i8**, align 8, !ctir !567
  %i320 = alloca i32, align 4, !ctir !27
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2787, metadata !DIExpression()), !dbg !2788
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2789, metadata !DIExpression()), !dbg !2790
  call void @llvm.dbg.declare(metadata i8** %time_style_option, metadata !2791, metadata !DIExpression()), !dbg !2792
  store i8* null, i8** %time_style_option, align 8, !dbg !2792, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %sort_type_specified, metadata !2793, metadata !DIExpression()), !dbg !2794
  store i8 0, i8* %sort_type_specified, align 1, !dbg !2794, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %kibibytes_specified, metadata !2795, metadata !DIExpression()), !dbg !2796
  store i8 0, i8* %kibibytes_specified, align 1, !dbg !2796, !tbaa !2461
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2797, !tbaa !2461
  %0 = load i32, i32* @ls_mode, align 4, !dbg !2798, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !2799

sw.bb:                                            ; preds = %entry
  store i32 2, i32* @format, align 4, !dbg !2800, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2802
  br label %sw.epilog, !dbg !2803

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* @format, align 4, !dbg !2804, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2805
  br label %sw.epilog, !dbg !2806

sw.bb2:                                           ; preds = %entry
  %call = call i32 @isatty(i32 1) #13, !dbg !2807
  %tobool = icmp ne i32 %call, 0, !dbg !2807
  br i1 %tobool, label %if.then, label %if.else, !dbg !2809

if.then:                                          ; preds = %sw.bb2
  store i32 2, i32* @format, align 4, !dbg !2810, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 3), !dbg !2812
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2813, !tbaa !2461
  br label %if.end, !dbg !2814

if.else:                                          ; preds = %sw.bb2
  store i32 1, i32* @format, align 4, !dbg !2815, !tbaa !2497
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !2817, !tbaa !2461
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !2818

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !2819
  unreachable, !dbg !2819

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  store i32 0, i32* @time_type, align 4, !dbg !2820, !tbaa !2497
  store i32 0, i32* @sort_type, align 4, !dbg !2821, !tbaa !2497
  store i8 0, i8* @sort_reverse, align 1, !dbg !2822, !tbaa !2461
  store i8 0, i8* @numeric_ids, align 1, !dbg !2823, !tbaa !2461
  store i8 0, i8* @print_block_size, align 1, !dbg !2824, !tbaa !2461
  store i32 0, i32* @indicator_style, align 4, !dbg !2825, !tbaa !2497
  store i8 0, i8* @print_inode, align 1, !dbg !2826, !tbaa !2461
  store i32 1, i32* @dereference, align 4, !dbg !2827, !tbaa !2497
  store i8 0, i8* @recursive, align 1, !dbg !2828, !tbaa !2461
  store i8 0, i8* @immediate_dirs, align 1, !dbg !2829, !tbaa !2461
  store i32 0, i32* @ignore_mode, align 4, !dbg !2830, !tbaa !2497
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !2831, !tbaa !2442
  store %struct.ignore_pattern* null, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !2832, !tbaa !2442
  store i8 0, i8* @print_scontext, align 1, !dbg !2833, !tbaa !2461
  call void @getenv_quoting_style(), !dbg !2834
  store i64 80, i64* @line_length, align 8, !dbg !2835, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2836, metadata !DIExpression()), !dbg !2838
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !2839
  store i8* %call3, i8** %p, align 8, !dbg !2838, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !2840, !tbaa !2442
  %tobool4 = icmp ne i8* %1, null, !dbg !2840
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !2842

land.lhs.true:                                    ; preds = %sw.epilog
  %2 = load i8*, i8** %p, align 8, !dbg !2843, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !2844, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !2844
  %tobool5 = icmp ne i32 %conv, 0, !dbg !2844
  br i1 %tobool5, label %land.lhs.true6, label %if.end11, !dbg !2845

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %p, align 8, !dbg !2846, !tbaa !2442
  %call7 = call zeroext i1 @set_line_length(i8* %4), !dbg !2847
  br i1 %call7, label %if.end11, label %if.then8, !dbg !2848

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.64, i64 0, i64 0)) #13, !dbg !2849
  %5 = load i8*, i8** %p, align 8, !dbg !2850, !tbaa !2442
  %call10 = call i8* @quote(i8* %5), !dbg !2851
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call9, i8* %call10), !dbg !2852
  br label %if.end11, !dbg !2852

if.end11:                                         ; preds = %if.then8, %land.lhs.true6, %land.lhs.true, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.winsize* %ws, metadata !2853, metadata !DIExpression()), !dbg !2855
  %call12 = call i32 (i32, i64, ...) @ioctl(i32 1, i64 21523, %struct.winsize* %ws) #13, !dbg !2856
  %cmp = icmp ne i32 %call12, -1, !dbg !2858
  br i1 %cmp, label %land.lhs.true14, label %if.end28, !dbg !2859

land.lhs.true14:                                  ; preds = %if.end11
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2860, !ctir !2780
  %6 = load i16, i16* %ws_col, align 2, !dbg !2860, !tbaa !2861, !ctir !176
  %conv15 = zext i16 %6 to i32, !dbg !2864
  %cmp16 = icmp slt i32 0, %conv15, !dbg !2865
  br i1 %cmp16, label %land.lhs.true18, label %if.end28, !dbg !2866

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %ws_col19 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2867, !ctir !2780
  %7 = load i16, i16* %ws_col19, align 2, !dbg !2867, !tbaa !2861, !ctir !176
  %conv20 = zext i16 %7 to i64, !dbg !2868
  %ws_col21 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2869, !ctir !2780
  %8 = load i16, i16* %ws_col21, align 2, !dbg !2869, !tbaa !2861, !ctir !176
  %conv22 = zext i16 %8 to i64, !dbg !2870
  %cmp23 = icmp eq i64 %conv20, %conv22, !dbg !2871
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2872

if.then25:                                        ; preds = %land.lhs.true18
  %ws_col26 = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !2873, !ctir !2780
  %9 = load i16, i16* %ws_col26, align 2, !dbg !2873, !tbaa !2861, !ctir !176
  %conv27 = zext i16 %9 to i64, !dbg !2874
  store i64 %conv27, i64* @line_length, align 8, !dbg !2875, !tbaa !2579
  br label %if.end28, !dbg !2876

if.end28:                                         ; preds = %if.then25, %land.lhs.true18, %land.lhs.true14, %if.end11
  call void @llvm.dbg.declare(metadata i8** %p29, metadata !2877, metadata !DIExpression()), !dbg !2879
  %call30 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !2880
  store i8* %call30, i8** %p29, align 8, !dbg !2879, !tbaa !2442
  store i64 8, i64* @tabsize, align 8, !dbg !2881, !tbaa !2579
  %10 = load i8*, i8** %p29, align 8, !dbg !2882, !tbaa !2442
  %tobool31 = icmp ne i8* %10, null, !dbg !2882
  br i1 %tobool31, label %if.then32, label %if.end44, !dbg !2884

if.then32:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i64* %tmp_ulong, metadata !2885, metadata !DIExpression()), !dbg !2887
  %11 = load i8*, i8** %p29, align 8, !dbg !2888, !tbaa !2442
  %call33 = call i32 @xstrtoul(i8* %11, i8** null, i32 0, i64* %tmp_ulong, i8* null), !dbg !2890
  %cmp34 = icmp eq i32 %call33, 0, !dbg !2891
  br i1 %cmp34, label %land.lhs.true36, label %if.else40, !dbg !2892

land.lhs.true36:                                  ; preds = %if.then32
  %12 = load i64, i64* %tmp_ulong, align 8, !dbg !2893, !tbaa !2579
  %cmp37 = icmp ule i64 %12, -1, !dbg !2894
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !2895

if.then39:                                        ; preds = %land.lhs.true36
  %13 = load i64, i64* %tmp_ulong, align 8, !dbg !2896, !tbaa !2579
  store i64 %13, i64* @tabsize, align 8, !dbg !2898, !tbaa !2579
  br label %if.end43, !dbg !2899

if.else40:                                        ; preds = %land.lhs.true36, %if.then32
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !2900
  %14 = load i8*, i8** %p29, align 8, !dbg !2902, !tbaa !2442
  %call42 = call i8* @quote(i8* %14), !dbg !2903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call42), !dbg !2904
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.then39
  br label %if.end44, !dbg !2905

if.end44:                                         ; preds = %if.end43, %if.end28
  br label %while.body, !dbg !2906

while.body:                                       ; preds = %if.end44, %sw.epilog182
  call void @llvm.dbg.declare(metadata i32* %oi, metadata !2907, metadata !DIExpression()), !dbg !2909
  store i32 -1, i32* %oi, align 4, !dbg !2909, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2910, metadata !DIExpression()), !dbg !2911
  %15 = load i32, i32* %argc.addr, align 4, !dbg !2912, !tbaa !2436
  %16 = load i8**, i8*** %argv.addr, align 8, !dbg !2913, !tbaa !2442
  %call45 = call i32 @getopt_long(i32 %15, i8** %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0), %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) #13, !dbg !2914
  store i32 %call45, i32* %c, align 4, !dbg !2911, !tbaa !2436
  %17 = load i32, i32* %c, align 4, !dbg !2915, !tbaa !2436
  %cmp46 = icmp eq i32 %17, -1, !dbg !2917
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2918

if.then48:                                        ; preds = %while.body
  br label %while.end, !dbg !2919

if.end49:                                         ; preds = %while.body
  %18 = load i32, i32* %c, align 4, !dbg !2920, !tbaa !2436
  switch i32 %18, label %sw.default181 [
    i32 97, label %sw.bb50
    i32 98, label %sw.bb51
    i32 99, label %sw.bb52
    i32 100, label %sw.bb53
    i32 102, label %sw.bb54
    i32 132, label %sw.bb61
    i32 103, label %sw.bb62
    i32 104, label %sw.bb63
    i32 105, label %sw.bb64
    i32 107, label %sw.bb65
    i32 108, label %sw.bb66
    i32 109, label %sw.bb67
    i32 110, label %sw.bb68
    i32 111, label %sw.bb69
    i32 112, label %sw.bb70
    i32 113, label %sw.bb71
    i32 114, label %sw.bb72
    i32 115, label %sw.bb73
    i32 116, label %sw.bb74
    i32 117, label %sw.bb75
    i32 118, label %sw.bb76
    i32 119, label %sw.bb77
    i32 120, label %sw.bb83
    i32 65, label %sw.bb84
    i32 66, label %sw.bb85
    i32 67, label %sw.bb86
    i32 68, label %sw.bb87
    i32 70, label %sw.bb88
    i32 71, label %sw.bb89
    i32 72, label %sw.bb90
    i32 131, label %sw.bb91
    i32 73, label %sw.bb92
    i32 76, label %sw.bb93
    i32 78, label %sw.bb94
    i32 81, label %sw.bb95
    i32 82, label %sw.bb96
    i32 83, label %sw.bb97
    i32 84, label %sw.bb98
    i32 85, label %sw.bb101
    i32 88, label %sw.bb102
    i32 49, label %sw.bb103
    i32 128, label %sw.bb108
    i32 136, label %sw.bb109
    i32 142, label %sw.bb111
    i32 135, label %sw.bb113
    i32 143, label %sw.bb114
    i32 133, label %sw.bb117
    i32 134, label %sw.bb120
    i32 130, label %sw.bb122
    i32 137, label %sw.bb138
    i32 138, label %sw.bb157
    i32 139, label %sw.bb160
    i32 144, label %sw.bb163
    i32 140, label %sw.bb164
    i32 129, label %sw.bb165
    i32 141, label %sw.bb171
    i32 90, label %sw.bb172
    i32 -130, label %sw.bb173
    i32 -131, label %sw.bb174
  ], !dbg !2921

sw.bb50:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2922, !tbaa !2497
  br label %sw.epilog182, !dbg !2924

sw.bb51:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 7), !dbg !2925
  br label %sw.epilog182, !dbg !2926

sw.bb52:                                          ; preds = %if.end49
  store i32 1, i32* @time_type, align 4, !dbg !2927, !tbaa !2497
  br label %sw.epilog182, !dbg !2928

sw.bb53:                                          ; preds = %if.end49
  store i8 1, i8* @immediate_dirs, align 1, !dbg !2929, !tbaa !2461
  br label %sw.epilog182, !dbg !2930

sw.bb54:                                          ; preds = %if.end49
  store i32 2, i32* @ignore_mode, align 4, !dbg !2931, !tbaa !2497
  store i32 -1, i32* @sort_type, align 4, !dbg !2932, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2933, !tbaa !2461
  %19 = load i32, i32* @format, align 4, !dbg !2934, !tbaa !2497
  %cmp55 = icmp eq i32 %19, 0, !dbg !2936
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !2937

if.then57:                                        ; preds = %sw.bb54
  %call58 = call i32 @isatty(i32 1) #13, !dbg !2938
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2938
  %20 = zext i1 %tobool59 to i64, !dbg !2938
  %cond = select i1 %tobool59, i32 2, i32 1, !dbg !2938
  store i32 %cond, i32* @format, align 4, !dbg !2939, !tbaa !2497
  br label %if.end60, !dbg !2940

if.end60:                                         ; preds = %if.then57, %sw.bb54
  store i8 0, i8* @print_block_size, align 1, !dbg !2941, !tbaa !2461
  store i8 0, i8* @print_with_color, align 1, !dbg !2942, !tbaa !2461
  store i8 0, i8* @print_hyperlink, align 1, !dbg !2943, !tbaa !2461
  br label %sw.epilog182, !dbg !2944

sw.bb61:                                          ; preds = %if.end49
  store i32 2, i32* @indicator_style, align 4, !dbg !2945, !tbaa !2497
  br label %sw.epilog182, !dbg !2946

sw.bb62:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2947, !tbaa !2497
  store i8 0, i8* @print_owner, align 1, !dbg !2948, !tbaa !2461
  br label %sw.epilog182, !dbg !2949

sw.bb63:                                          ; preds = %if.end49
  store i32 176, i32* @human_output_opts, align 4, !dbg !2950, !tbaa !2436
  store i32 176, i32* @file_human_output_opts, align 4, !dbg !2951, !tbaa !2436
  store i64 1, i64* @output_block_size, align 8, !dbg !2952, !tbaa !2579
  store i64 1, i64* @file_output_block_size, align 8, !dbg !2953, !tbaa !2579
  br label %sw.epilog182, !dbg !2954

sw.bb64:                                          ; preds = %if.end49
  store i8 1, i8* @print_inode, align 1, !dbg !2955, !tbaa !2461
  br label %sw.epilog182, !dbg !2956

sw.bb65:                                          ; preds = %if.end49
  store i8 1, i8* %kibibytes_specified, align 1, !dbg !2957, !tbaa !2461
  br label %sw.epilog182, !dbg !2958

sw.bb66:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2959, !tbaa !2497
  br label %sw.epilog182, !dbg !2960

sw.bb67:                                          ; preds = %if.end49
  store i32 4, i32* @format, align 4, !dbg !2961, !tbaa !2497
  br label %sw.epilog182, !dbg !2962

sw.bb68:                                          ; preds = %if.end49
  store i8 1, i8* @numeric_ids, align 1, !dbg !2963, !tbaa !2461
  store i32 0, i32* @format, align 4, !dbg !2964, !tbaa !2497
  br label %sw.epilog182, !dbg !2965

sw.bb69:                                          ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !2966, !tbaa !2497
  store i8 0, i8* @print_group, align 1, !dbg !2967, !tbaa !2461
  br label %sw.epilog182, !dbg !2968

sw.bb70:                                          ; preds = %if.end49
  store i32 1, i32* @indicator_style, align 4, !dbg !2969, !tbaa !2497
  br label %sw.epilog182, !dbg !2970

sw.bb71:                                          ; preds = %if.end49
  store i8 1, i8* @qmark_funny_chars, align 1, !dbg !2971, !tbaa !2461
  br label %sw.epilog182, !dbg !2972

sw.bb72:                                          ; preds = %if.end49
  store i8 1, i8* @sort_reverse, align 1, !dbg !2973, !tbaa !2461
  br label %sw.epilog182, !dbg !2974

sw.bb73:                                          ; preds = %if.end49
  store i8 1, i8* @print_block_size, align 1, !dbg !2975, !tbaa !2461
  br label %sw.epilog182, !dbg !2976

sw.bb74:                                          ; preds = %if.end49
  store i32 4, i32* @sort_type, align 4, !dbg !2977, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2978, !tbaa !2461
  br label %sw.epilog182, !dbg !2979

sw.bb75:                                          ; preds = %if.end49
  store i32 2, i32* @time_type, align 4, !dbg !2980, !tbaa !2497
  br label %sw.epilog182, !dbg !2981

sw.bb76:                                          ; preds = %if.end49
  store i32 3, i32* @sort_type, align 4, !dbg !2982, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !2983, !tbaa !2461
  br label %sw.epilog182, !dbg !2984

sw.bb77:                                          ; preds = %if.end49
  %21 = load i8*, i8** @optarg, align 8, !dbg !2985, !tbaa !2442
  %call78 = call zeroext i1 @set_line_length(i8* %21), !dbg !2987
  br i1 %call78, label %if.end82, label %if.then79, !dbg !2988

if.then79:                                        ; preds = %sw.bb77
  %call80 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !2989
  %22 = load i8*, i8** @optarg, align 8, !dbg !2989, !tbaa !2442
  %call81 = call i8* @quote(i8* %22), !dbg !2989
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i8* %call80, i8* %call81), !dbg !2989
  unreachable, !dbg !2989

if.end82:                                         ; preds = %sw.bb77
  br label %sw.epilog182, !dbg !2990

sw.bb83:                                          ; preds = %if.end49
  store i32 3, i32* @format, align 4, !dbg !2991, !tbaa !2497
  br label %sw.epilog182, !dbg !2992

sw.bb84:                                          ; preds = %if.end49
  store i32 1, i32* @ignore_mode, align 4, !dbg !2993, !tbaa !2497
  br label %sw.epilog182, !dbg !2994

sw.bb85:                                          ; preds = %if.end49
  call void @add_ignore_pattern(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i64 0, i64 0)), !dbg !2995
  call void @add_ignore_pattern(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0)), !dbg !2996
  br label %sw.epilog182, !dbg !2997

sw.bb86:                                          ; preds = %if.end49
  store i32 2, i32* @format, align 4, !dbg !2998, !tbaa !2497
  br label %sw.epilog182, !dbg !2999

sw.bb87:                                          ; preds = %if.end49
  store i8 1, i8* @dired, align 1, !dbg !3000, !tbaa !2461
  br label %sw.epilog182, !dbg !3001

sw.bb88:                                          ; preds = %if.end49
  store i32 3, i32* @indicator_style, align 4, !dbg !3002, !tbaa !2497
  br label %sw.epilog182, !dbg !3003

sw.bb89:                                          ; preds = %if.end49
  store i8 0, i8* @print_group, align 1, !dbg !3004, !tbaa !2461
  br label %sw.epilog182, !dbg !3005

sw.bb90:                                          ; preds = %if.end49
  store i32 3, i32* @dereference, align 4, !dbg !3006, !tbaa !2497
  br label %sw.epilog182, !dbg !3007

sw.bb91:                                          ; preds = %if.end49
  store i32 4, i32* @dereference, align 4, !dbg !3008, !tbaa !2497
  br label %sw.epilog182, !dbg !3009

sw.bb92:                                          ; preds = %if.end49
  %23 = load i8*, i8** @optarg, align 8, !dbg !3010, !tbaa !2442
  call void @add_ignore_pattern(i8* %23), !dbg !3011
  br label %sw.epilog182, !dbg !3012

sw.bb93:                                          ; preds = %if.end49
  store i32 5, i32* @dereference, align 4, !dbg !3013, !tbaa !2497
  br label %sw.epilog182, !dbg !3014

sw.bb94:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 0), !dbg !3015
  br label %sw.epilog182, !dbg !3016

sw.bb95:                                          ; preds = %if.end49
  call void @set_quoting_style(%struct.quoting_options* null, i32 5), !dbg !3017
  br label %sw.epilog182, !dbg !3018

sw.bb96:                                          ; preds = %if.end49
  store i8 1, i8* @recursive, align 1, !dbg !3019, !tbaa !2461
  br label %sw.epilog182, !dbg !3020

sw.bb97:                                          ; preds = %if.end49
  store i32 2, i32* @sort_type, align 4, !dbg !3021, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3022, !tbaa !2461
  br label %sw.epilog182, !dbg !3023

sw.bb98:                                          ; preds = %if.end49
  %24 = load i8*, i8** @optarg, align 8, !dbg !3024, !tbaa !2442
  %call99 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !3025
  %call100 = call i64 @xnumtoumax(i8* %24, i32 0, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %call99, i32 2), !dbg !3026
  store i64 %call100, i64* @tabsize, align 8, !dbg !3027, !tbaa !2579
  br label %sw.epilog182, !dbg !3028

sw.bb101:                                         ; preds = %if.end49
  store i32 -1, i32* @sort_type, align 4, !dbg !3029, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3030, !tbaa !2461
  br label %sw.epilog182, !dbg !3031

sw.bb102:                                         ; preds = %if.end49
  store i32 1, i32* @sort_type, align 4, !dbg !3032, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3033, !tbaa !2461
  br label %sw.epilog182, !dbg !3034

sw.bb103:                                         ; preds = %if.end49
  %25 = load i32, i32* @format, align 4, !dbg !3035, !tbaa !2497
  %cmp104 = icmp ne i32 %25, 0, !dbg !3037
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !3038

if.then106:                                       ; preds = %sw.bb103
  store i32 1, i32* @format, align 4, !dbg !3039, !tbaa !2497
  br label %if.end107, !dbg !3040

if.end107:                                        ; preds = %if.then106, %sw.bb103
  br label %sw.epilog182, !dbg !3041

sw.bb108:                                         ; preds = %if.end49
  store i8 1, i8* @print_author, align 1, !dbg !3042, !tbaa !2461
  br label %sw.epilog182, !dbg !3043

sw.bb109:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %hide, metadata !3044, metadata !DIExpression()), !dbg !3046
  %call110 = call noalias i8* @xmalloc(i64 16), !dbg !3047
  %26 = bitcast i8* %call110 to %struct.ignore_pattern*, !dbg !3047
  store %struct.ignore_pattern* %26, %struct.ignore_pattern** %hide, align 8, !dbg !3046, !tbaa !2442
  %27 = load i8*, i8** @optarg, align 8, !dbg !3048, !tbaa !2442
  %28 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3049, !tbaa !2442
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %28, i32 0, i32 0, !dbg !3050, !ctir !512
  store i8* %27, i8** %pattern, align 8, !dbg !3051, !tbaa !3052, !ctir !146
  %29 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3054, !tbaa !2442
  %30 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3055, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %30, i32 0, i32 1, !dbg !3056, !ctir !512
  store %struct.ignore_pattern* %29, %struct.ignore_pattern** %next, align 8, !dbg !3057, !tbaa !3058, !ctir !511
  %31 = load %struct.ignore_pattern*, %struct.ignore_pattern** %hide, align 8, !dbg !3059, !tbaa !2442
  store %struct.ignore_pattern* %31, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !3060, !tbaa !2442
  br label %sw.epilog182, !dbg !3061

sw.bb111:                                         ; preds = %if.end49
  %32 = load i8*, i8** @optarg, align 8, !dbg !3062, !tbaa !2442
  %33 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3062, !tbaa !2442
  %call112 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), i8* %32, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @sort_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @sort_types to i8*), i64 4, void ()* %33), !dbg !3062
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @sort_types, i64 0, i64 %call112, !dbg !3062, !ctir !528
  %34 = load i32, i32* %arrayidx, align 4, !dbg !3062, !tbaa !2497
  store i32 %34, i32* @sort_type, align 4, !dbg !3063, !tbaa !2497
  store i8 1, i8* %sort_type_specified, align 1, !dbg !3064, !tbaa !2461
  br label %sw.epilog182, !dbg !3065

sw.bb113:                                         ; preds = %if.end49
  store i8 1, i8* @directories_first, align 1, !dbg !3066, !tbaa !2461
  br label %sw.epilog182, !dbg !3067

sw.bb114:                                         ; preds = %if.end49
  %35 = load i8*, i8** @optarg, align 8, !dbg !3068, !tbaa !2442
  %36 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3068, !tbaa !2442
  %call115 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* %35, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @time_args, i64 0, i64 0), i8* bitcast ([5 x i32]* @time_types to i8*), i64 4, void ()* %36), !dbg !3068
  %arrayidx116 = getelementptr inbounds [5 x i32], [5 x i32]* @time_types, i64 0, i64 %call115, !dbg !3068, !ctir !537
  %37 = load i32, i32* %arrayidx116, align 4, !dbg !3068, !tbaa !2497
  store i32 %37, i32* @time_type, align 4, !dbg !3069, !tbaa !2497
  br label %sw.epilog182, !dbg !3070

sw.bb117:                                         ; preds = %if.end49
  %38 = load i8*, i8** @optarg, align 8, !dbg !3071, !tbaa !2442
  %39 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3071, !tbaa !2442
  %call118 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), i8* %38, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @format_args, i64 0, i64 0), i8* bitcast ([7 x i32]* @format_types to i8*), i64 4, void ()* %39), !dbg !3071
  %arrayidx119 = getelementptr inbounds [7 x i32], [7 x i32]* @format_types, i64 0, i64 %call118, !dbg !3071, !ctir !539
  %40 = load i32, i32* %arrayidx119, align 4, !dbg !3071, !tbaa !2497
  store i32 %40, i32* @format, align 4, !dbg !3072, !tbaa !2497
  br label %sw.epilog182, !dbg !3073

sw.bb120:                                         ; preds = %if.end49
  store i32 0, i32* @format, align 4, !dbg !3074, !tbaa !2497
  %call121 = call i8* @bad_cast(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)), !dbg !3075
  store i8* %call121, i8** %time_style_option, align 8, !dbg !3076, !tbaa !2442
  br label %sw.epilog182, !dbg !3077

sw.bb122:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3078, metadata !DIExpression()), !dbg !3080
  %41 = load i8*, i8** @optarg, align 8, !dbg !3081, !tbaa !2442
  %tobool123 = icmp ne i8* %41, null, !dbg !3081
  br i1 %tobool123, label %if.then124, label %if.else127, !dbg !3083

if.then124:                                       ; preds = %sw.bb122
  %42 = load i8*, i8** @optarg, align 8, !dbg !3084, !tbaa !2442
  %43 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3084, !tbaa !2442
  %call125 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %42, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %43), !dbg !3084
  %arrayidx126 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call125, !dbg !3084, !ctir !546
  %44 = load i32, i32* %arrayidx126, align 4, !dbg !3084, !tbaa !2497
  store i32 %44, i32* %i, align 4, !dbg !3085, !tbaa !2436
  br label %if.end128, !dbg !3086

if.else127:                                       ; preds = %sw.bb122
  store i32 1, i32* %i, align 4, !dbg !3087, !tbaa !2436
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then124
  %45 = load i32, i32* %i, align 4, !dbg !3088, !tbaa !2436
  %cmp129 = icmp eq i32 %45, 1, !dbg !3089
  br i1 %cmp129, label %lor.end, label %lor.rhs, !dbg !3090

lor.rhs:                                          ; preds = %if.end128
  %46 = load i32, i32* %i, align 4, !dbg !3091, !tbaa !2436
  %cmp131 = icmp eq i32 %46, 2, !dbg !3092
  br i1 %cmp131, label %land.rhs, label %land.end, !dbg !3093

land.rhs:                                         ; preds = %lor.rhs
  %call133 = call i32 @isatty(i32 1) #13, !dbg !3094
  %tobool134 = icmp ne i32 %call133, 0, !dbg !3093
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %47 = phi i1 [ false, %lor.rhs ], [ %tobool134, %land.rhs ], !dbg !3095
  br label %lor.end, !dbg !3090

lor.end:                                          ; preds = %land.end, %if.end128
  %48 = phi i1 [ true, %if.end128 ], [ %47, %land.end ]
  %frombool = zext i1 %48 to i8, !dbg !3096
  store i8 %frombool, i8* @print_with_color, align 1, !dbg !3096, !tbaa !2461
  %49 = load i8, i8* @print_with_color, align 1, !dbg !3097, !tbaa !2461
  %tobool135 = trunc i8 %49 to i1, !dbg !3097
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !3099

if.then136:                                       ; preds = %lor.end
  store i64 0, i64* @tabsize, align 8, !dbg !3100, !tbaa !2579
  br label %if.end137, !dbg !3102

if.end137:                                        ; preds = %if.then136, %lor.end
  br label %sw.epilog182, !dbg !3103

sw.bb138:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %i139, metadata !3104, metadata !DIExpression()), !dbg !3106
  %50 = load i8*, i8** @optarg, align 8, !dbg !3107, !tbaa !2442
  %tobool140 = icmp ne i8* %50, null, !dbg !3107
  br i1 %tobool140, label %if.then141, label %if.else144, !dbg !3109

if.then141:                                       ; preds = %sw.bb138
  %51 = load i8*, i8** @optarg, align 8, !dbg !3110, !tbaa !2442
  %52 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3110, !tbaa !2442
  %call142 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i8* %51, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @when_args, i64 0, i64 0), i8* bitcast ([9 x i32]* @when_types to i8*), i64 4, void ()* %52), !dbg !3110
  %arrayidx143 = getelementptr inbounds [9 x i32], [9 x i32]* @when_types, i64 0, i64 %call142, !dbg !3110, !ctir !546
  %53 = load i32, i32* %arrayidx143, align 4, !dbg !3110, !tbaa !2497
  store i32 %53, i32* %i139, align 4, !dbg !3111, !tbaa !2436
  br label %if.end145, !dbg !3112

if.else144:                                       ; preds = %sw.bb138
  store i32 1, i32* %i139, align 4, !dbg !3113, !tbaa !2436
  br label %if.end145

if.end145:                                        ; preds = %if.else144, %if.then141
  %54 = load i32, i32* %i139, align 4, !dbg !3114, !tbaa !2436
  %cmp146 = icmp eq i32 %54, 1, !dbg !3115
  br i1 %cmp146, label %lor.end155, label %lor.rhs148, !dbg !3116

lor.rhs148:                                       ; preds = %if.end145
  %55 = load i32, i32* %i139, align 4, !dbg !3117, !tbaa !2436
  %cmp149 = icmp eq i32 %55, 2, !dbg !3118
  br i1 %cmp149, label %land.rhs151, label %land.end154, !dbg !3119

land.rhs151:                                      ; preds = %lor.rhs148
  %call152 = call i32 @isatty(i32 1) #13, !dbg !3120
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3119
  br label %land.end154

land.end154:                                      ; preds = %land.rhs151, %lor.rhs148
  %56 = phi i1 [ false, %lor.rhs148 ], [ %tobool153, %land.rhs151 ], !dbg !3121
  br label %lor.end155, !dbg !3116

lor.end155:                                       ; preds = %land.end154, %if.end145
  %57 = phi i1 [ true, %if.end145 ], [ %56, %land.end154 ]
  %frombool156 = zext i1 %57 to i8, !dbg !3122
  store i8 %frombool156, i8* @print_hyperlink, align 1, !dbg !3122, !tbaa !2461
  br label %sw.epilog182, !dbg !3123

sw.bb157:                                         ; preds = %if.end49
  %58 = load i8*, i8** @optarg, align 8, !dbg !3124, !tbaa !2442
  %59 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3124, !tbaa !2442
  %call158 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* %58, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @indicator_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @indicator_style_types to i8*), i64 4, void ()* %59), !dbg !3124
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* @indicator_style_types, i64 0, i64 %call158, !dbg !3124, !ctir !553
  %60 = load i32, i32* %arrayidx159, align 4, !dbg !3124, !tbaa !2497
  store i32 %60, i32* @indicator_style, align 4, !dbg !3125, !tbaa !2497
  br label %sw.epilog182, !dbg !3126

sw.bb160:                                         ; preds = %if.end49
  %61 = load i8*, i8** @optarg, align 8, !dbg !3127, !tbaa !2442
  %62 = load void ()*, void ()** @argmatch_die, align 8, !dbg !3127, !tbaa !2442
  %call161 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i8* %61, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4, void ()* %62), !dbg !3127
  %arrayidx162 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %call161, !dbg !3127, !ctir !558
  %63 = load i32, i32* %arrayidx162, align 4, !dbg !3127, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 %63), !dbg !3128
  br label %sw.epilog182, !dbg !3129

sw.bb163:                                         ; preds = %if.end49
  %64 = load i8*, i8** @optarg, align 8, !dbg !3130, !tbaa !2442
  store i8* %64, i8** %time_style_option, align 8, !dbg !3131, !tbaa !2442
  br label %sw.epilog182, !dbg !3132

sw.bb164:                                         ; preds = %if.end49
  store i8 0, i8* @qmark_funny_chars, align 1, !dbg !3133, !tbaa !2461
  br label %sw.epilog182, !dbg !3134

sw.bb165:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3135, metadata !DIExpression()), !dbg !3137
  %65 = load i8*, i8** @optarg, align 8, !dbg !3138, !tbaa !2442
  %call166 = call i32 @human_options(i8* %65, i32* @human_output_opts, i64* @output_block_size), !dbg !3139
  store i32 %call166, i32* %e, align 4, !dbg !3137, !tbaa !2497
  %66 = load i32, i32* %e, align 4, !dbg !3140, !tbaa !2497
  %cmp167 = icmp ne i32 %66, 0, !dbg !3142
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !3143

if.then169:                                       ; preds = %sw.bb165
  %67 = load i32, i32* %e, align 4, !dbg !3144, !tbaa !2497
  %68 = load i32, i32* %oi, align 4, !dbg !3145, !tbaa !2436
  %69 = load i8*, i8** @optarg, align 8, !dbg !3146, !tbaa !2442
  call void @xstrtol_fatal(i32 %67, i32 %68, i8 signext 0, %struct.option* getelementptr inbounds ([44 x %struct.option], [44 x %struct.option]* @long_options, i64 0, i64 0), i8* %69) #14, !dbg !3147
  unreachable, !dbg !3147

if.end170:                                        ; preds = %sw.bb165
  %70 = load i32, i32* @human_output_opts, align 4, !dbg !3148, !tbaa !2436
  store i32 %70, i32* @file_human_output_opts, align 4, !dbg !3149, !tbaa !2436
  %71 = load i64, i64* @output_block_size, align 8, !dbg !3150, !tbaa !2579
  store i64 %71, i64* @file_output_block_size, align 8, !dbg !3151, !tbaa !2579
  br label %sw.epilog182, !dbg !3152

sw.bb171:                                         ; preds = %if.end49
  store i32 144, i32* @human_output_opts, align 4, !dbg !3153, !tbaa !2436
  store i32 144, i32* @file_human_output_opts, align 4, !dbg !3154, !tbaa !2436
  store i64 1, i64* @output_block_size, align 8, !dbg !3155, !tbaa !2579
  store i64 1, i64* @file_output_block_size, align 8, !dbg !3156, !tbaa !2579
  br label %sw.epilog182, !dbg !3157

sw.bb172:                                         ; preds = %if.end49
  store i8 1, i8* @print_scontext, align 1, !dbg !3158, !tbaa !2461
  br label %sw.epilog182, !dbg !3159

sw.bb173:                                         ; preds = %if.end49
  call void @usage(i32 0) #14, !dbg !3160
  unreachable, !dbg !3160

sw.bb174:                                         ; preds = %if.end49
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3161, !tbaa !2442
  %73 = load i32, i32* @ls_mode, align 4, !dbg !3161, !tbaa !2436
  %cmp175 = icmp eq i32 %73, 1, !dbg !3161
  br i1 %cmp175, label %cond.true, label %cond.false, !dbg !3161

cond.true:                                        ; preds = %sw.bb174
  br label %cond.end, !dbg !3161

cond.false:                                       ; preds = %sw.bb174
  %74 = load i32, i32* @ls_mode, align 4, !dbg !3161, !tbaa !2436
  %cmp177 = icmp eq i32 %74, 2, !dbg !3161
  %75 = zext i1 %cmp177 to i64, !dbg !3161
  %cond179 = select i1 %cmp177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !3161
  br label %cond.end, !dbg !3161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond180 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond179, %cond.false ], !dbg !3161
  %76 = load i8*, i8** @Version, align 8, !dbg !3161, !tbaa !2442
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %72, i8* %cond180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* %76, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* null), !dbg !3161
  call void @exit(i32 0) #15, !dbg !3161
  unreachable, !dbg !3161

sw.default181:                                    ; preds = %if.end49
  call void @usage(i32 2) #14, !dbg !3162
  unreachable, !dbg !3162

sw.epilog182:                                     ; preds = %sw.bb172, %sw.bb171, %if.end170, %sw.bb164, %sw.bb163, %sw.bb160, %sw.bb157, %lor.end155, %if.end137, %sw.bb120, %sw.bb117, %sw.bb114, %sw.bb113, %sw.bb111, %sw.bb109, %sw.bb108, %if.end107, %sw.bb102, %sw.bb101, %sw.bb98, %sw.bb97, %sw.bb96, %sw.bb95, %sw.bb94, %sw.bb93, %sw.bb92, %sw.bb91, %sw.bb90, %sw.bb89, %sw.bb88, %sw.bb87, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %if.end82, %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %if.end60, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50
  br label %while.body, !dbg !2906, !llvm.loop !3163

while.end:                                        ; preds = %if.then48
  %77 = load i64, i64* @output_block_size, align 8, !dbg !3165, !tbaa !2579
  %tobool183 = icmp ne i64 %77, 0, !dbg !3165
  br i1 %tobool183, label %if.end195, label %if.then184, !dbg !3167

if.then184:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %ls_block_size, metadata !3168, metadata !DIExpression()), !dbg !3170
  %call185 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84, i64 0, i64 0)) #13, !dbg !3171
  store i8* %call185, i8** %ls_block_size, align 8, !dbg !3170, !tbaa !2442
  %78 = load i8*, i8** %ls_block_size, align 8, !dbg !3172, !tbaa !2442
  %call186 = call i32 @human_options(i8* %78, i32* @human_output_opts, i64* @output_block_size), !dbg !3173
  %79 = load i8*, i8** %ls_block_size, align 8, !dbg !3174, !tbaa !2442
  %tobool187 = icmp ne i8* %79, null, !dbg !3174
  br i1 %tobool187, label %if.then190, label %lor.lhs.false, !dbg !3176

lor.lhs.false:                                    ; preds = %if.then184
  %call188 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i64 0, i64 0)) #13, !dbg !3177
  %tobool189 = icmp ne i8* %call188, null, !dbg !3177
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !3178

if.then190:                                       ; preds = %lor.lhs.false, %if.then184
  %80 = load i32, i32* @human_output_opts, align 4, !dbg !3179, !tbaa !2436
  store i32 %80, i32* @file_human_output_opts, align 4, !dbg !3181, !tbaa !2436
  %81 = load i64, i64* @output_block_size, align 8, !dbg !3182, !tbaa !2579
  store i64 %81, i64* @file_output_block_size, align 8, !dbg !3183, !tbaa !2579
  br label %if.end191, !dbg !3184

if.end191:                                        ; preds = %if.then190, %lor.lhs.false
  %82 = load i8, i8* %kibibytes_specified, align 1, !dbg !3185, !tbaa !2461
  %tobool192 = trunc i8 %82 to i1, !dbg !3185
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !3187

if.then193:                                       ; preds = %if.end191
  store i32 0, i32* @human_output_opts, align 4, !dbg !3188, !tbaa !2436
  store i64 1024, i64* @output_block_size, align 8, !dbg !3190, !tbaa !2579
  br label %if.end194, !dbg !3191

if.end194:                                        ; preds = %if.then193, %if.end191
  br label %if.end195, !dbg !3192

if.end195:                                        ; preds = %if.end194, %while.end
  %83 = load i64, i64* @line_length, align 8, !dbg !3193, !tbaa !2579
  %div = udiv i64 %83, 3, !dbg !3194
  store i64 %div, i64* @max_idx, align 8, !dbg !3195, !tbaa !2579
  %84 = load i64, i64* @line_length, align 8, !dbg !3196, !tbaa !2579
  %rem = urem i64 %84, 3, !dbg !3197
  %cmp196 = icmp ne i64 %rem, 0, !dbg !3198
  %conv197 = zext i1 %cmp196 to i32, !dbg !3198
  %conv198 = sext i32 %conv197 to i64, !dbg !3196
  %85 = load i64, i64* @max_idx, align 8, !dbg !3199, !tbaa !2579
  %add = add i64 %85, %conv198, !dbg !3199
  store i64 %add, i64* @max_idx, align 8, !dbg !3199, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !3200, metadata !DIExpression()), !dbg !3201
  %call199 = call i32 @get_quoting_style(%struct.quoting_options* null), !dbg !3202
  store i32 %call199, i32* %qs, align 4, !dbg !3201, !tbaa !2497
  %86 = load i32, i32* @format, align 4, !dbg !3203, !tbaa !2497
  %cmp200 = icmp ne i32 %86, 4, !dbg !3204
  br i1 %cmp200, label %land.lhs.true202, label %land.end220, !dbg !3205

land.lhs.true202:                                 ; preds = %if.end195
  %87 = load i32, i32* @format, align 4, !dbg !3206, !tbaa !2497
  %cmp203 = icmp ne i32 %87, 1, !dbg !3207
  br i1 %cmp203, label %land.lhs.true205, label %land.end220, !dbg !3208

land.lhs.true205:                                 ; preds = %land.lhs.true202
  %88 = load i64, i64* @line_length, align 8, !dbg !3209, !tbaa !2579
  %tobool206 = icmp ne i64 %88, 0, !dbg !3209
  br i1 %tobool206, label %land.rhs210, label %lor.lhs.false207, !dbg !3210

lor.lhs.false207:                                 ; preds = %land.lhs.true205
  %89 = load i32, i32* @format, align 4, !dbg !3211, !tbaa !2497
  %cmp208 = icmp eq i32 %89, 0, !dbg !3212
  br i1 %cmp208, label %land.rhs210, label %land.end220, !dbg !3213

land.rhs210:                                      ; preds = %lor.lhs.false207, %land.lhs.true205
  %90 = load i32, i32* %qs, align 4, !dbg !3214, !tbaa !2497
  %cmp211 = icmp eq i32 %90, 1, !dbg !3215
  br i1 %cmp211, label %lor.end219, label %lor.lhs.false213, !dbg !3216

lor.lhs.false213:                                 ; preds = %land.rhs210
  %91 = load i32, i32* %qs, align 4, !dbg !3217, !tbaa !2497
  %cmp214 = icmp eq i32 %91, 3, !dbg !3218
  br i1 %cmp214, label %lor.end219, label %lor.rhs216, !dbg !3219

lor.rhs216:                                       ; preds = %lor.lhs.false213
  %92 = load i32, i32* %qs, align 4, !dbg !3220, !tbaa !2497
  %cmp217 = icmp eq i32 %92, 6, !dbg !3221
  br label %lor.end219, !dbg !3219

lor.end219:                                       ; preds = %lor.rhs216, %lor.lhs.false213, %land.rhs210
  %93 = phi i1 [ true, %lor.lhs.false213 ], [ true, %land.rhs210 ], [ %cmp217, %lor.rhs216 ]
  br label %land.end220

land.end220:                                      ; preds = %lor.end219, %lor.lhs.false207, %land.lhs.true202, %if.end195
  %94 = phi i1 [ false, %lor.lhs.false207 ], [ false, %land.lhs.true202 ], [ false, %if.end195 ], [ %93, %lor.end219 ], !dbg !3222
  %frombool221 = zext i1 %94 to i8, !dbg !3223
  store i8 %frombool221, i8* @align_variable_outer_quotes, align 1, !dbg !3223, !tbaa !2461
  %call222 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3224
  store %struct.quoting_options* %call222, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3225, !tbaa !2442
  %95 = load i32, i32* %qs, align 4, !dbg !3226, !tbaa !2497
  %cmp223 = icmp eq i32 %95, 7, !dbg !3228
  br i1 %cmp223, label %if.then225, label %if.end227, !dbg !3229

if.then225:                                       ; preds = %land.end220
  %96 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3230, !tbaa !2442
  %call226 = call i32 @set_char_quoting(%struct.quoting_options* %96, i8 signext 32, i32 1), !dbg !3231
  br label %if.end227, !dbg !3231

if.end227:                                        ; preds = %if.then225, %land.end220
  %97 = load i32, i32* @indicator_style, align 4, !dbg !3232, !tbaa !2497
  %cmp228 = icmp ule i32 2, %97, !dbg !3234
  br i1 %cmp228, label %if.then230, label %if.end235, !dbg !3235

if.then230:                                       ; preds = %if.end227
  call void @llvm.dbg.declare(metadata i8** %p231, metadata !3236, metadata !DIExpression()), !dbg !3238
  %98 = load i32, i32* @indicator_style, align 4, !dbg !3239, !tbaa !2497
  %sub = sub i32 %98, 2, !dbg !3241
  %idxprom = zext i32 %sub to i64, !dbg !3242
  %arrayidx232 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.86, i64 0, i64 %idxprom, !dbg !3242, !ctir !560
  store i8* %arrayidx232, i8** %p231, align 8, !dbg !3243, !tbaa !2442
  br label %for.cond, !dbg !3244

for.cond:                                         ; preds = %for.inc, %if.then230
  %99 = load i8*, i8** %p231, align 8, !dbg !3245, !tbaa !2442
  %100 = load i8, i8* %99, align 1, !dbg !3247, !tbaa !2497, !ctir !147
  %tobool233 = icmp ne i8 %100, 0, !dbg !3248
  br i1 %tobool233, label %for.body, label %for.end, !dbg !3248

for.body:                                         ; preds = %for.cond
  %101 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !3249, !tbaa !2442
  %102 = load i8*, i8** %p231, align 8, !dbg !3250, !tbaa !2442
  %103 = load i8, i8* %102, align 1, !dbg !3251, !tbaa !2497, !ctir !147
  %call234 = call i32 @set_char_quoting(%struct.quoting_options* %101, i8 signext %103, i32 1), !dbg !3252
  br label %for.inc, !dbg !3252

for.inc:                                          ; preds = %for.body
  %104 = load i8*, i8** %p231, align 8, !dbg !3253, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %104, i32 1, !dbg !3253
  store i8* %incdec.ptr, i8** %p231, align 8, !dbg !3253, !tbaa !2442
  br label %for.cond, !dbg !3254, !llvm.loop !3255

for.end:                                          ; preds = %for.cond
  br label %if.end235, !dbg !3257

if.end235:                                        ; preds = %for.end, %if.end227
  %call236 = call %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* null), !dbg !3258
  store %struct.quoting_options* %call236, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3259, !tbaa !2442
  %105 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !3260, !tbaa !2442
  %call237 = call i32 @set_char_quoting(%struct.quoting_options* %105, i8 signext 58, i32 1), !dbg !3261
  %106 = load i8, i8* @dired, align 1, !dbg !3262, !tbaa !2461
  %tobool238 = trunc i8 %106 to i1, !dbg !3262
  br i1 %tobool238, label %land.lhs.true240, label %if.end247, !dbg !3264

land.lhs.true240:                                 ; preds = %if.end235
  %107 = load i32, i32* @format, align 4, !dbg !3265, !tbaa !2497
  %cmp241 = icmp ne i32 %107, 0, !dbg !3266
  br i1 %cmp241, label %if.then246, label %lor.lhs.false243, !dbg !3267

lor.lhs.false243:                                 ; preds = %land.lhs.true240
  %108 = load i8, i8* @print_hyperlink, align 1, !dbg !3268, !tbaa !2461
  %tobool244 = trunc i8 %108 to i1, !dbg !3268
  br i1 %tobool244, label %if.then246, label %if.end247, !dbg !3269

if.then246:                                       ; preds = %lor.lhs.false243, %land.lhs.true240
  store i8 0, i8* @dired, align 1, !dbg !3270, !tbaa !2461
  br label %if.end247, !dbg !3271

if.end247:                                        ; preds = %if.then246, %lor.lhs.false243, %if.end235
  %109 = load i32, i32* @time_type, align 4, !dbg !3272, !tbaa !2497
  %cmp248 = icmp eq i32 %109, 1, !dbg !3274
  br i1 %cmp248, label %land.lhs.true253, label %lor.lhs.false250, !dbg !3275

lor.lhs.false250:                                 ; preds = %if.end247
  %110 = load i32, i32* @time_type, align 4, !dbg !3276, !tbaa !2497
  %cmp251 = icmp eq i32 %110, 2, !dbg !3277
  br i1 %cmp251, label %land.lhs.true253, label %if.end259, !dbg !3278

land.lhs.true253:                                 ; preds = %lor.lhs.false250, %if.end247
  %111 = load i8, i8* %sort_type_specified, align 1, !dbg !3279, !tbaa !2461
  %tobool254 = trunc i8 %111 to i1, !dbg !3279
  br i1 %tobool254, label %if.end259, label %land.lhs.true255, !dbg !3280

land.lhs.true255:                                 ; preds = %land.lhs.true253
  %112 = load i32, i32* @format, align 4, !dbg !3281, !tbaa !2497
  %cmp256 = icmp ne i32 %112, 0, !dbg !3282
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !3283

if.then258:                                       ; preds = %land.lhs.true255
  store i32 4, i32* @sort_type, align 4, !dbg !3284, !tbaa !2497
  br label %if.end259, !dbg !3286

if.end259:                                        ; preds = %if.then258, %land.lhs.true255, %land.lhs.true253, %lor.lhs.false250
  %113 = load i32, i32* @format, align 4, !dbg !3287, !tbaa !2497
  %cmp260 = icmp eq i32 %113, 0, !dbg !3289
  br i1 %cmp260, label %if.then262, label %if.end335, !dbg !3290

if.then262:                                       ; preds = %if.end259
  call void @llvm.dbg.declare(metadata i8** %style, metadata !3291, metadata !DIExpression()), !dbg !3293
  %114 = load i8*, i8** %time_style_option, align 8, !dbg !3294, !tbaa !2442
  store i8* %114, i8** %style, align 8, !dbg !3293, !tbaa !2442
  %115 = load i8*, i8** %style, align 8, !dbg !3295, !tbaa !2442
  %tobool263 = icmp ne i8* %115, null, !dbg !3295
  br i1 %tobool263, label %if.end270, label %if.then264, !dbg !3297

if.then264:                                       ; preds = %if.then262
  %call265 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !3298
  store i8* %call265, i8** %style, align 8, !dbg !3300, !tbaa !2442
  %tobool266 = icmp ne i8* %call265, null, !dbg !3300
  br i1 %tobool266, label %if.end269, label %if.then267, !dbg !3301

if.then267:                                       ; preds = %if.then264
  %call268 = call i8* @bad_cast(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)), !dbg !3302
  store i8* %call268, i8** %style, align 8, !dbg !3303, !tbaa !2442
  br label %if.end269, !dbg !3304

if.end269:                                        ; preds = %if.then267, %if.then264
  br label %if.end270, !dbg !3305

if.end270:                                        ; preds = %if.end269, %if.then262
  br label %while.cond, !dbg !3306

while.cond:                                       ; preds = %if.end277, %if.end270
  %116 = load i8*, i8** %style, align 8, !dbg !3307, !tbaa !2442
  %call271 = call i32 @strncmp(i8* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @decode_switches.posix_prefix, i64 0, i64 0), i64 6) #16, !dbg !3307
  %cmp272 = icmp eq i32 %call271, 0, !dbg !3307
  br i1 %cmp272, label %while.body274, label %while.end278, !dbg !3306

while.body274:                                    ; preds = %while.cond
  %call275 = call zeroext i1 @hard_locale(i32 2), !dbg !3308
  br i1 %call275, label %if.end277, label %if.then276, !dbg !3311

if.then276:                                       ; preds = %while.body274
  %117 = load i32, i32* @optind, align 4, !dbg !3312, !tbaa !2436
  store i32 %117, i32* %retval, align 4, !dbg !3313
  br label %return, !dbg !3313

if.end277:                                        ; preds = %while.body274
  %118 = load i8*, i8** %style, align 8, !dbg !3314, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %118, i64 6, !dbg !3314
  store i8* %add.ptr, i8** %style, align 8, !dbg !3314, !tbaa !2442
  br label %while.cond, !dbg !3306, !llvm.loop !3315

while.end278:                                     ; preds = %while.cond
  %119 = load i8*, i8** %style, align 8, !dbg !3317, !tbaa !2442
  %120 = load i8, i8* %119, align 1, !dbg !3319, !tbaa !2497, !ctir !144
  %conv279 = sext i8 %120 to i32, !dbg !3319
  %cmp280 = icmp eq i32 %conv279, 43, !dbg !3320
  br i1 %cmp280, label %if.then282, label %if.else297, !dbg !3321

if.then282:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3322, metadata !DIExpression()), !dbg !3324
  %121 = load i8*, i8** %style, align 8, !dbg !3325, !tbaa !2442
  %add.ptr283 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !3326
  store i8* %add.ptr283, i8** %p0, align 8, !dbg !3324, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !3327, metadata !DIExpression()), !dbg !3328
  %122 = load i8*, i8** %p0, align 8, !dbg !3329, !tbaa !2442
  %call284 = call i8* @strchr(i8* %122, i32 10) #16, !dbg !3330
  store i8* %call284, i8** %p1, align 8, !dbg !3328, !tbaa !2442
  %123 = load i8*, i8** %p1, align 8, !dbg !3331, !tbaa !2442
  %tobool285 = icmp ne i8* %123, null, !dbg !3331
  br i1 %tobool285, label %if.else287, label %if.then286, !dbg !3333

if.then286:                                       ; preds = %if.then282
  %124 = load i8*, i8** %p0, align 8, !dbg !3334, !tbaa !2442
  store i8* %124, i8** %p1, align 8, !dbg !3335, !tbaa !2442
  br label %if.end296, !dbg !3336

if.else287:                                       ; preds = %if.then282
  %125 = load i8*, i8** %p1, align 8, !dbg !3337, !tbaa !2442
  %add.ptr288 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !3340
  %call289 = call i8* @strchr(i8* %add.ptr288, i32 10) #16, !dbg !3341
  %tobool290 = icmp ne i8* %call289, null, !dbg !3341
  br i1 %tobool290, label %if.then291, label %if.end294, !dbg !3342

if.then291:                                       ; preds = %if.else287
  %call292 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !3343
  %126 = load i8*, i8** %p0, align 8, !dbg !3343, !tbaa !2442
  %call293 = call i8* @quote(i8* %126), !dbg !3343
  call void (i32, i32, i8*, ...) @error(i32 2, i32 0, i8* %call292, i8* %call293), !dbg !3343
  unreachable, !dbg !3343

if.end294:                                        ; preds = %if.else287
  %127 = load i8*, i8** %p1, align 8, !dbg !3344, !tbaa !2442
  %incdec.ptr295 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !3344
  store i8* %incdec.ptr295, i8** %p1, align 8, !dbg !3344, !tbaa !2442
  store i8 0, i8* %127, align 1, !dbg !3345, !tbaa !2497, !ctir !144
  br label %if.end296

if.end296:                                        ; preds = %if.end294, %if.then286
  %128 = load i8*, i8** %p0, align 8, !dbg !3346, !tbaa !2442
  store i8* %128, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3347, !tbaa !2442
  %129 = load i8*, i8** %p1, align 8, !dbg !3348, !tbaa !2442
  store i8* %129, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3349, !tbaa !2442
  br label %if.end334, !dbg !3350

if.else297:                                       ; preds = %while.end278
  call void @llvm.dbg.declare(metadata i64* %res, metadata !3351, metadata !DIExpression()), !dbg !3353
  %130 = load i8*, i8** %style, align 8, !dbg !3354, !tbaa !2442
  %call298 = call i64 @argmatch(i8* %130, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8* bitcast ([4 x i32]* @time_style_types to i8*), i64 4) #16, !dbg !3355
  store i64 %call298, i64* %res, align 8, !dbg !3353, !tbaa !2579
  %131 = load i64, i64* %res, align 8, !dbg !3356, !tbaa !2579
  %cmp299 = icmp slt i64 %131, 0, !dbg !3358
  br i1 %cmp299, label %if.then301, label %if.end313, !dbg !3359

if.then301:                                       ; preds = %if.else297
  %132 = load i8*, i8** %style, align 8, !dbg !3360, !tbaa !2442
  %133 = load i64, i64* %res, align 8, !dbg !3362, !tbaa !2579
  call void @argmatch_invalid(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i8* %132, i64 %133), !dbg !3363
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0)) #13, !dbg !3364
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3364, !tbaa !2442
  %call303 = call i32 @fputs_unlocked(i8* %call302, %struct._IO_FILE* %134), !dbg !3364
  call void @llvm.dbg.declare(metadata i8*** %p304, metadata !3365, metadata !DIExpression()), !dbg !3366
  store i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @time_style_args, i64 0, i64 0), i8*** %p304, align 8, !dbg !3366, !tbaa !2442
  br label %while.cond305, !dbg !3367

while.cond305:                                    ; preds = %while.body307, %if.then301
  %135 = load i8**, i8*** %p304, align 8, !dbg !3368, !tbaa !2442
  %136 = load i8*, i8** %135, align 8, !dbg !3369, !tbaa !2442, !ctir !325
  %tobool306 = icmp ne i8* %136, null, !dbg !3367
  br i1 %tobool306, label %while.body307, label %while.end310, !dbg !3367

while.body307:                                    ; preds = %while.cond305
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3370, !tbaa !2442
  %138 = load i8**, i8*** %p304, align 8, !dbg !3371, !tbaa !2442
  %incdec.ptr308 = getelementptr inbounds i8*, i8** %138, i32 1, !dbg !3371
  store i8** %incdec.ptr308, i8*** %p304, align 8, !dbg !3371, !tbaa !2442
  %139 = load i8*, i8** %138, align 8, !dbg !3372, !tbaa !2442, !ctir !325
  %call309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8* %139), !dbg !3373
  br label %while.cond305, !dbg !3367, !llvm.loop !3374

while.end310:                                     ; preds = %while.cond305
  %call311 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !3376
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3376, !tbaa !2442
  %call312 = call i32 @fputs_unlocked(i8* %call311, %struct._IO_FILE* %140), !dbg !3376
  call void @usage(i32 2) #14, !dbg !3377
  unreachable, !dbg !3377

if.end313:                                        ; preds = %if.else297
  %141 = load i64, i64* %res, align 8, !dbg !3378, !tbaa !2579
  switch i64 %141, label %sw.epilog333 [
    i64 0, label %sw.bb314
    i64 1, label %sw.bb315
    i64 2, label %sw.bb316
    i64 3, label %sw.bb317
  ], !dbg !3379

sw.bb314:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3380, !tbaa !2442
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3382, !tbaa !2442
  br label %sw.epilog333, !dbg !3383

sw.bb315:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3384, !tbaa !2442
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3385, !tbaa !2442
  br label %sw.epilog333, !dbg !3386

sw.bb316:                                         ; preds = %if.end313
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 0), align 16, !dbg !3387, !tbaa !2442
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 1), align 8, !dbg !3388, !tbaa !2442
  br label %sw.epilog333, !dbg !3389

sw.bb317:                                         ; preds = %if.end313
  %call318 = call zeroext i1 @hard_locale(i32 2), !dbg !3390
  br i1 %call318, label %if.then319, label %if.end332, !dbg !3392

if.then319:                                       ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %i320, metadata !3393, metadata !DIExpression()), !dbg !3396
  store i32 0, i32* %i320, align 4, !dbg !3396, !tbaa !2436
  br label %for.cond321, !dbg !3397

for.cond321:                                      ; preds = %for.inc330, %if.then319
  %142 = load i32, i32* %i320, align 4, !dbg !3398, !tbaa !2436
  %cmp322 = icmp slt i32 %142, 2, !dbg !3400
  br i1 %cmp322, label %for.body324, label %for.end331, !dbg !3401

for.body324:                                      ; preds = %for.cond321
  %143 = load i32, i32* %i320, align 4, !dbg !3402, !tbaa !2436
  %idxprom325 = sext i32 %143 to i64, !dbg !3403
  %arrayidx326 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom325, !dbg !3403, !ctir !561
  %144 = load i8*, i8** %arrayidx326, align 8, !dbg !3403, !tbaa !2442
  %call327 = call i8* @dcgettext(i8* null, i8* %144, i32 2) #13, !dbg !3404
  %145 = load i32, i32* %i320, align 4, !dbg !3405, !tbaa !2436
  %idxprom328 = sext i32 %145 to i64, !dbg !3406
  %arrayidx329 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom328, !dbg !3406, !ctir !561
  store i8* %call327, i8** %arrayidx329, align 8, !dbg !3407, !tbaa !2442
  br label %for.inc330, !dbg !3406

for.inc330:                                       ; preds = %for.body324
  %146 = load i32, i32* %i320, align 4, !dbg !3408, !tbaa !2436
  %inc = add nsw i32 %146, 1, !dbg !3408
  store i32 %inc, i32* %i320, align 4, !dbg !3408, !tbaa !2436
  br label %for.cond321, !dbg !3409, !llvm.loop !3410

for.end331:                                       ; preds = %for.cond321
  br label %if.end332, !dbg !3412

if.end332:                                        ; preds = %for.end331, %sw.bb317
  br label %sw.epilog333, !dbg !3413

sw.epilog333:                                     ; preds = %if.end332, %if.end313, %sw.bb316, %sw.bb315, %sw.bb314
  br label %if.end334

if.end334:                                        ; preds = %sw.epilog333, %if.end296
  call void @abformat_init(), !dbg !3414
  br label %if.end335, !dbg !3415

if.end335:                                        ; preds = %if.end334, %if.end259
  %147 = load i32, i32* @optind, align 4, !dbg !3416, !tbaa !2436
  store i32 %147, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

return:                                           ; preds = %if.end335, %if.then276
  %148 = load i32, i32* %retval, align 4, !dbg !3418
  ret i32 %148, !dbg !3418
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_ls_color() #0 !dbg !3419 !ctir !341 {
entry:
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca i8*, align 8, !ctir !143
  %ind_no = alloca i32, align 4, !ctir !27
  %label = alloca [3 x i8], align 1, !ctir !592
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !593
  %colorterm = alloca i8*, align 8, !ctir !146
  %state = alloca i32, align 4, !ctir !129
  %e = alloca %struct.color_ext_type*, align 8, !ctir !593
  %e2 = alloca %struct.color_ext_type*, align 8, !ctir !593
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3420, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3422, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.declare(metadata i32* %ind_no, metadata !3424, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.declare(metadata [3 x i8]* %label, metadata !3426, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !3428, metadata !DIExpression()), !dbg !3429
  %call = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0)) #13, !dbg !3430
  store i8* %call, i8** %p, align 8, !dbg !3432, !tbaa !2442
  %cmp = icmp eq i8* %call, null, !dbg !3433
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3434

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %p, align 8, !dbg !3435, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !3436, !tbaa !2497, !ctir !147
  %conv = sext i8 %1 to i32, !dbg !3436
  %cmp1 = icmp eq i32 %conv, 0, !dbg !3437
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !3438

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8** %colorterm, metadata !3439, metadata !DIExpression()), !dbg !3441
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i64 0, i64 0)) #13, !dbg !3442
  store i8* %call3, i8** %colorterm, align 8, !dbg !3441, !tbaa !2442
  %2 = load i8*, i8** %colorterm, align 8, !dbg !3443, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !3443
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true6, !dbg !3445

land.lhs.true:                                    ; preds = %if.then
  %3 = load i8*, i8** %colorterm, align 8, !dbg !3446, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !3447, !tbaa !2497, !ctir !147
  %conv4 = sext i8 %4 to i32, !dbg !3447
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !3447
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !3448

land.lhs.true6:                                   ; preds = %land.lhs.true, %if.then
  %call7 = call zeroext i1 @known_term_type(), !dbg !3449
  br i1 %call7, label %if.end, label %if.then8, !dbg !3450

if.then8:                                         ; preds = %land.lhs.true6
  store i8 0, i8* @print_with_color, align 1, !dbg !3451, !tbaa !2461
  br label %if.end, !dbg !3452

if.end:                                           ; preds = %if.then8, %land.lhs.true6, %land.lhs.true
  br label %if.end97, !dbg !3453

if.end9:                                          ; preds = %lor.lhs.false
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !3454, !tbaa !2442
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3455
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #13, !dbg !3456
  %5 = load i8*, i8** %p, align 8, !dbg !3457, !tbaa !2442
  %call11 = call noalias i8* @xstrdup(i8* %5), !dbg !3458
  store i8* %call11, i8** @color_buf, align 8, !dbg !3459, !tbaa !2442
  store i8* %call11, i8** %buf, align 8, !dbg !3460, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %state, metadata !3461, metadata !DIExpression()), !dbg !3462
  store i32 1, i32* %state, align 4, !dbg !3462, !tbaa !2497
  br label %while.body, !dbg !3463

while.body:                                       ; preds = %if.end9, %sw.epilog79
  %6 = load i32, i32* %state, align 4, !dbg !3464, !tbaa !2497
  switch i32 %6, label %sw.default78 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb29
    i32 4, label %sw.bb63
    i32 6, label %sw.bb77
  ], !dbg !3466

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !3467, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !3469, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %8 to i32, !dbg !3469
  switch i32 %conv12, label %sw.default [
    i32 58, label %sw.bb13
    i32 42, label %sw.bb14
    i32 0, label %sw.bb21
  ], !dbg !3470

sw.bb13:                                          ; preds = %sw.bb
  %9 = load i8*, i8** %p, align 8, !dbg !3471, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !3471
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3471, !tbaa !2442
  br label %sw.epilog, !dbg !3473

sw.bb14:                                          ; preds = %sw.bb
  %call15 = call noalias i8* @xmalloc(i64 40), !dbg !3474
  %10 = bitcast i8* %call15 to %struct.color_ext_type*, !dbg !3474
  store %struct.color_ext_type* %10, %struct.color_ext_type** %ext, align 8, !dbg !3475, !tbaa !2442
  %11 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3476, !tbaa !2442
  %12 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3477, !tbaa !2442
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %12, i32 0, i32 2, !dbg !3478, !ctir !594
  store %struct.color_ext_type* %11, %struct.color_ext_type** %next, align 8, !dbg !3479, !tbaa !3480, !ctir !593
  %13 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3482, !tbaa !2442
  store %struct.color_ext_type* %13, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3483, !tbaa !2442
  %14 = load i8*, i8** %p, align 8, !dbg !3484, !tbaa !2442
  %incdec.ptr16 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !3484
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !3484, !tbaa !2442
  %15 = load i8*, i8** %buf, align 8, !dbg !3485, !tbaa !2442
  %16 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3486, !tbaa !2442
  %ext17 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %16, i32 0, i32 0, !dbg !3487, !ctir !594
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext17, i32 0, i32 1, !dbg !3488, !ctir !262
  store i8* %15, i8** %string, align 8, !dbg !3489, !tbaa !3490, !ctir !146
  %17 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3491, !tbaa !2442
  %ext18 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %17, i32 0, i32 0, !dbg !3492, !ctir !594
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext18, i32 0, i32 0, !dbg !3493, !ctir !262
  %call19 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext true, i64* %len), !dbg !3494
  %18 = zext i1 %call19 to i64, !dbg !3494
  %cond = select i1 %call19, i32 4, i32 6, !dbg !3494
  store i32 %cond, i32* %state, align 4, !dbg !3495, !tbaa !2497
  br label %sw.epilog, !dbg !3496

sw.bb21:                                          ; preds = %sw.bb
  store i32 5, i32* %state, align 4, !dbg !3497, !tbaa !2497
  br label %done, !dbg !3498

sw.default:                                       ; preds = %sw.bb
  %19 = load i8*, i8** %p, align 8, !dbg !3499, !tbaa !2442
  %incdec.ptr22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !3499
  store i8* %incdec.ptr22, i8** %p, align 8, !dbg !3499, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !3500, !tbaa !2497, !ctir !147
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3501, !ctir !592
  store i8 %20, i8* %arrayidx, align 1, !dbg !3502, !tbaa !2497
  store i32 2, i32* %state, align 4, !dbg !3503, !tbaa !2497
  br label %sw.epilog, !dbg !3504

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb13
  br label %sw.epilog79, !dbg !3505

sw.bb23:                                          ; preds = %while.body
  %21 = load i8*, i8** %p, align 8, !dbg !3506, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !3508, !tbaa !2497, !ctir !147
  %tobool24 = icmp ne i8 %22, 0, !dbg !3508
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !3509

if.then25:                                        ; preds = %sw.bb23
  %23 = load i8*, i8** %p, align 8, !dbg !3510, !tbaa !2442
  %incdec.ptr26 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !3510
  store i8* %incdec.ptr26, i8** %p, align 8, !dbg !3510, !tbaa !2442
  %24 = load i8, i8* %23, align 1, !dbg !3512, !tbaa !2497, !ctir !147
  %arrayidx27 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 1, !dbg !3513, !ctir !592
  store i8 %24, i8* %arrayidx27, align 1, !dbg !3514, !tbaa !2497
  store i32 3, i32* %state, align 4, !dbg !3515, !tbaa !2497
  br label %if.end28, !dbg !3516

if.else:                                          ; preds = %sw.bb23
  store i32 6, i32* %state, align 4, !dbg !3517, !tbaa !2497
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %sw.epilog79, !dbg !3518

sw.bb29:                                          ; preds = %while.body
  store i32 6, i32* %state, align 4, !dbg !3519, !tbaa !2497
  %25 = load i8*, i8** %p, align 8, !dbg !3520, !tbaa !2442
  %incdec.ptr30 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !3520
  store i8* %incdec.ptr30, i8** %p, align 8, !dbg !3520, !tbaa !2442
  %26 = load i8, i8* %25, align 1, !dbg !3522, !tbaa !2497, !ctir !147
  %conv31 = sext i8 %26 to i32, !dbg !3522
  %cmp32 = icmp eq i32 %conv31, 61, !dbg !3523
  br i1 %cmp32, label %if.then34, label %if.end62, !dbg !3524

if.then34:                                        ; preds = %sw.bb29
  store i32 0, i32* %ind_no, align 4, !dbg !3525, !tbaa !2436
  br label %for.cond, !dbg !3528

for.cond:                                         ; preds = %for.inc, %if.then34
  %27 = load i32, i32* %ind_no, align 4, !dbg !3529, !tbaa !2436
  %idxprom = sext i32 %27 to i64, !dbg !3531
  %arrayidx35 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom, !dbg !3531, !ctir !599
  %28 = load i8*, i8** %arrayidx35, align 8, !dbg !3531, !tbaa !2442
  %cmp36 = icmp ne i8* %28, null, !dbg !3532
  br i1 %cmp36, label %for.body, label %for.end, !dbg !3533

for.body:                                         ; preds = %for.cond
  %arraydecay38 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3534
  %29 = load i32, i32* %ind_no, align 4, !dbg !3534, !tbaa !2436
  %idxprom39 = sext i32 %29 to i64, !dbg !3534
  %arrayidx40 = getelementptr inbounds [25 x i8*], [25 x i8*]* @indicator_name, i64 0, i64 %idxprom39, !dbg !3534, !ctir !599
  %30 = load i8*, i8** %arrayidx40, align 8, !dbg !3534, !tbaa !2442
  %call41 = call i32 @strcmp(i8* %arraydecay38, i8* %30) #16, !dbg !3534
  %cmp42 = icmp eq i32 %call41, 0, !dbg !3534
  br i1 %cmp42, label %if.then44, label %if.end54, !dbg !3537

if.then44:                                        ; preds = %for.body
  %31 = load i8*, i8** %buf, align 8, !dbg !3538, !tbaa !2442
  %32 = load i32, i32* %ind_no, align 4, !dbg !3540, !tbaa !2436
  %idxprom45 = sext i32 %32 to i64, !dbg !3541
  %arrayidx46 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom45, !dbg !3541, !ctir !261
  %string47 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx46, i32 0, i32 1, !dbg !3542, !ctir !262
  store i8* %31, i8** %string47, align 8, !dbg !3543, !tbaa !2711, !ctir !146
  %33 = load i32, i32* %ind_no, align 4, !dbg !3544, !tbaa !2436
  %idxprom48 = sext i32 %33 to i64, !dbg !3545
  %arrayidx49 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom48, !dbg !3545, !ctir !261
  %len50 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx49, i32 0, i32 0, !dbg !3546, !ctir !262
  %call51 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len50), !dbg !3547
  %34 = zext i1 %call51 to i64, !dbg !3547
  %cond53 = select i1 %call51, i32 1, i32 6, !dbg !3547
  store i32 %cond53, i32* %state, align 4, !dbg !3548, !tbaa !2497
  br label %for.end, !dbg !3549

if.end54:                                         ; preds = %for.body
  br label %for.inc, !dbg !3550

for.inc:                                          ; preds = %if.end54
  %35 = load i32, i32* %ind_no, align 4, !dbg !3551, !tbaa !2436
  %inc = add nsw i32 %35, 1, !dbg !3551
  store i32 %inc, i32* %ind_no, align 4, !dbg !3551, !tbaa !2436
  br label %for.cond, !dbg !3552, !llvm.loop !3553

for.end:                                          ; preds = %if.then44, %for.cond
  %36 = load i32, i32* %state, align 4, !dbg !3555, !tbaa !2497
  %cmp55 = icmp eq i32 %36, 6, !dbg !3557
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !3558

if.then57:                                        ; preds = %for.end
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.175, i64 0, i64 0)) #13, !dbg !3559
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %label, i64 0, i64 0, !dbg !3560
  %call60 = call i8* @quote(i8* %arraydecay59), !dbg !3561
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call58, i8* %call60), !dbg !3562
  br label %if.end61, !dbg !3562

if.end61:                                         ; preds = %if.then57, %for.end
  br label %if.end62, !dbg !3563

if.end62:                                         ; preds = %if.end61, %sw.bb29
  br label %sw.epilog79, !dbg !3564

sw.bb63:                                          ; preds = %while.body
  %37 = load i8*, i8** %p, align 8, !dbg !3565, !tbaa !2442
  %incdec.ptr64 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !3565
  store i8* %incdec.ptr64, i8** %p, align 8, !dbg !3565, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !3567, !tbaa !2497, !ctir !147
  %conv65 = sext i8 %38 to i32, !dbg !3567
  %cmp66 = icmp eq i32 %conv65, 61, !dbg !3568
  br i1 %cmp66, label %if.then68, label %if.else75, !dbg !3569

if.then68:                                        ; preds = %sw.bb63
  %39 = load i8*, i8** %buf, align 8, !dbg !3570, !tbaa !2442
  %40 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3572, !tbaa !2442
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %40, i32 0, i32 1, !dbg !3573, !ctir !594
  %string69 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq, i32 0, i32 1, !dbg !3574, !ctir !262
  store i8* %39, i8** %string69, align 8, !dbg !3575, !tbaa !3576, !ctir !146
  %41 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !3577, !tbaa !2442
  %seq70 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %41, i32 0, i32 1, !dbg !3578, !ctir !594
  %len71 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %seq70, i32 0, i32 0, !dbg !3579, !ctir !262
  %call72 = call zeroext i1 @get_funky_string(i8** %buf, i8** %p, i1 zeroext false, i64* %len71), !dbg !3580
  %42 = zext i1 %call72 to i64, !dbg !3580
  %cond74 = select i1 %call72, i32 1, i32 6, !dbg !3580
  store i32 %cond74, i32* %state, align 4, !dbg !3581, !tbaa !2497
  br label %if.end76, !dbg !3582

if.else75:                                        ; preds = %sw.bb63
  store i32 6, i32* %state, align 4, !dbg !3583, !tbaa !2497
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then68
  br label %sw.epilog79, !dbg !3584

sw.bb77:                                          ; preds = %while.body
  br label %done, !dbg !3585

sw.default78:                                     ; preds = %while.body
  call void @abort() #15, !dbg !3586
  unreachable, !dbg !3586

sw.epilog79:                                      ; preds = %if.end76, %if.end62, %if.end28, %sw.epilog
  br label %while.body, !dbg !3463, !llvm.loop !3587

done:                                             ; preds = %sw.bb77, %sw.bb21
  call void @llvm.dbg.label(metadata !3589), !dbg !3590
  %43 = load i32, i32* %state, align 4, !dbg !3591, !tbaa !2497
  %cmp80 = icmp eq i32 %43, 6, !dbg !3593
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !3594

if.then82:                                        ; preds = %done
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e, metadata !3595, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %e2, metadata !3598, metadata !DIExpression()), !dbg !3599
  %call83 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.176, i64 0, i64 0)) #13, !dbg !3600
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call83), !dbg !3601
  %44 = load i8*, i8** @color_buf, align 8, !dbg !3602, !tbaa !2442
  call void @free(i8* %44) #13, !dbg !3603
  %45 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !3604, !tbaa !2442
  store %struct.color_ext_type* %45, %struct.color_ext_type** %e, align 8, !dbg !3606, !tbaa !2442
  br label %for.cond84, !dbg !3607

for.cond84:                                       ; preds = %for.body87, %if.then82
  %46 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3608, !tbaa !2442
  %cmp85 = icmp ne %struct.color_ext_type* %46, null, !dbg !3610
  br i1 %cmp85, label %for.body87, label %for.end89, !dbg !3611

for.body87:                                       ; preds = %for.cond84
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3612, !tbaa !2442
  store %struct.color_ext_type* %47, %struct.color_ext_type** %e2, align 8, !dbg !3614, !tbaa !2442
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %e, align 8, !dbg !3615, !tbaa !2442
  %next88 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %48, i32 0, i32 2, !dbg !3616, !ctir !594
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %next88, align 8, !dbg !3616, !tbaa !3480, !ctir !593
  store %struct.color_ext_type* %49, %struct.color_ext_type** %e, align 8, !dbg !3617, !tbaa !2442
  %50 = load %struct.color_ext_type*, %struct.color_ext_type** %e2, align 8, !dbg !3618, !tbaa !2442
  %51 = bitcast %struct.color_ext_type* %50 to i8*, !dbg !3618
  call void @free(i8* %51) #13, !dbg !3619
  br label %for.cond84, !dbg !3620, !llvm.loop !3621

for.end89:                                        ; preds = %for.cond84
  store i8 0, i8* @print_with_color, align 1, !dbg !3623, !tbaa !2461
  br label %if.end90, !dbg !3624

if.end90:                                         ; preds = %for.end89, %done
  %52 = load i64, i64* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 0), align 16, !dbg !3625, !tbaa !2706, !ctir !149
  %cmp91 = icmp eq i64 %52, 6, !dbg !3627
  br i1 %cmp91, label %land.lhs.true93, label %if.end97, !dbg !3628

land.lhs.true93:                                  ; preds = %if.end90
  %53 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 7, i32 1), align 8, !dbg !3629, !tbaa !2711, !ctir !146
  %call94 = call i32 @strncmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i64 0, i64 0), i64 6) #16, !dbg !3629
  %tobool95 = icmp ne i32 %call94, 0, !dbg !3629
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !3630

if.then96:                                        ; preds = %land.lhs.true93
  store i8 1, i8* @color_symlink_as_referent, align 1, !dbg !3631, !tbaa !2461
  br label %if.end97, !dbg !3632

if.end97:                                         ; preds = %if.end, %if.then96, %land.lhs.true93, %if.end90
  ret void, !dbg !3633
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_colored(i32 %type) #0 !dbg !3634 !ctir !331 {
entry:
  %type.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %s = alloca i8*, align 8, !ctir !146
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3637, metadata !DIExpression()), !dbg !3638
  %0 = load i32, i32* %type.addr, align 4, !dbg !3639, !tbaa !2497
  %idxprom = zext i32 %0 to i64, !dbg !3640
  %arrayidx = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom, !dbg !3640, !ctir !261
  %len1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !3641, !ctir !262
  %1 = load i64, i64* %len1, align 16, !dbg !3641, !tbaa !2706, !ctir !149
  store i64 %1, i64* %len, align 8, !dbg !3638, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %s, metadata !3642, metadata !DIExpression()), !dbg !3643
  %2 = load i32, i32* %type.addr, align 4, !dbg !3644, !tbaa !2497
  %idxprom2 = zext i32 %2 to i64, !dbg !3645
  %arrayidx3 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom2, !dbg !3645, !ctir !261
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx3, i32 0, i32 1, !dbg !3646, !ctir !262
  %3 = load i8*, i8** %string, align 8, !dbg !3646, !tbaa !2711, !ctir !146
  store i8* %3, i8** %s, align 8, !dbg !3643, !tbaa !2442
  %4 = load i64, i64* %len, align 8, !dbg !3647, !tbaa !2579
  %cmp = icmp eq i64 %4, 0, !dbg !3648
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !3649

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !3650, !tbaa !2579
  %cmp4 = icmp eq i64 %5, 1, !dbg !3651
  br i1 %cmp4, label %land.lhs.true, label %lor.rhs, !dbg !3652

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s, align 8, !dbg !3653, !tbaa !2442
  %call = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1) #16, !dbg !3653
  %cmp5 = icmp eq i32 %call, 0, !dbg !3654
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3655

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i64, i64* %len, align 8, !dbg !3656, !tbaa !2579
  %cmp6 = icmp eq i64 %7, 2, !dbg !3657
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3658

land.rhs:                                         ; preds = %lor.rhs
  %8 = load i8*, i8** %s, align 8, !dbg !3659, !tbaa !2442
  %call7 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2) #16, !dbg !3659
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3660
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs ], !dbg !3661
  br label %lor.end, !dbg !3655

lor.end:                                          ; preds = %land.end, %land.lhs.true, %entry
  %10 = phi i1 [ true, %land.lhs.true ], [ true, %entry ], [ %9, %land.end ]
  %lnot = xor i1 %10, true, !dbg !3662
  ret i1 %lnot, !dbg !3663
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_ino_hash(i8* %x, i64 %table_size) #0 !dbg !3664 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.dev_ino*, align 8, !ctir !335
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %p, metadata !3669, metadata !DIExpression()), !dbg !3670
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3671, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3671
  store %struct.dev_ino* %1, %struct.dev_ino** %p, align 8, !dbg !3670, !tbaa !2442
  %2 = load %struct.dev_ino*, %struct.dev_ino** %p, align 8, !dbg !3672, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !3673, !ctir !336
  %3 = load i64, i64* %st_ino, align 8, !dbg !3673, !tbaa !3674, !ctir !258
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !3676, !tbaa !2579
  %rem = urem i64 %3, %4, !dbg !3677
  ret i64 %rem, !dbg !3678
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_ino_compare(i8* %x, i8* %y) #0 !dbg !3679 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.dev_ino*, align 8, !ctir !335
  %b = alloca %struct.dev_ino*, align 8, !ctir !335
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %a, metadata !3684, metadata !DIExpression()), !dbg !3685
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3686, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.dev_ino*, !dbg !3686
  store %struct.dev_ino* %1, %struct.dev_ino** %a, align 8, !dbg !3685, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %b, metadata !3687, metadata !DIExpression()), !dbg !3688
  %2 = load i8*, i8** %y.addr, align 8, !dbg !3689, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.dev_ino*, !dbg !3689
  store %struct.dev_ino* %3, %struct.dev_ino** %b, align 8, !dbg !3688, !tbaa !2442
  %4 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3690, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 0, !dbg !3690, !ctir !336
  %5 = load i64, i64* %st_ino, align 8, !dbg !3690, !tbaa !3674, !ctir !258
  %6 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3690, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %6, i32 0, i32 0, !dbg !3690, !ctir !336
  %7 = load i64, i64* %st_ino1, align 8, !dbg !3690, !tbaa !3674, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !3690
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3690

land.rhs:                                         ; preds = %entry
  %8 = load %struct.dev_ino*, %struct.dev_ino** %a, align 8, !dbg !3690, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %8, i32 0, i32 1, !dbg !3690, !ctir !336
  %9 = load i64, i64* %st_dev, align 8, !dbg !3690, !tbaa !3691, !ctir !260
  %10 = load %struct.dev_ino*, %struct.dev_ino** %b, align 8, !dbg !3690, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %10, i32 0, i32 1, !dbg !3690, !ctir !336
  %11 = load i64, i64* %st_dev2, align 8, !dbg !3690, !tbaa !3691, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !3690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !3692
  %13 = zext i1 %12 to i64, !dbg !3690
  %cond = select i1 %12, i32 1, i32 0, !dbg !3690
  %tobool = icmp ne i32 %cond, 0, !dbg !3690
  ret i1 %tobool, !dbg !3693
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_free(i8* %x) #0 !dbg !3694 !ctir !339 {
entry:
  %x.addr = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3697, !tbaa !2442
  call void @free(i8* %0) #13, !dbg !3698
  ret void, !dbg !3699
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_escape_init() #0 !dbg !3700 !ctir !341 {
entry:
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3701, metadata !DIExpression()), !dbg !3703
  store i32 0, i32* %i, align 4, !dbg !3703, !tbaa !2436
  br label %for.cond, !dbg !3704

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3705, !tbaa !2436
  %cmp = icmp slt i32 %0, 256, !dbg !3707
  br i1 %cmp, label %for.body, label %for.end, !dbg !3708

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3709, !tbaa !2436
  %call = call zeroext i1 @c_isalnum(i32 %1), !dbg !3710
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !3711

lor.lhs.false:                                    ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3712, !tbaa !2436
  %cmp1 = icmp eq i32 %2, 126, !dbg !3713
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !3714

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %i, align 4, !dbg !3715, !tbaa !2436
  %cmp3 = icmp eq i32 %3, 45, !dbg !3716
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !3717

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* %i, align 4, !dbg !3718, !tbaa !2436
  %cmp5 = icmp eq i32 %4, 46, !dbg !3719
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !3720

lor.rhs:                                          ; preds = %lor.lhs.false4
  %5 = load i32, i32* %i, align 4, !dbg !3721, !tbaa !2436
  %cmp6 = icmp eq i32 %5, 95, !dbg !3722
  br label %lor.end, !dbg !3720

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %for.body
  %6 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !3720
  %7 = load i32, i32* %i, align 4, !dbg !3723, !tbaa !2436
  %idxprom = sext i32 %7 to i64, !dbg !3724
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !3724, !ctir !343
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3725, !tbaa !2497
  %conv = sext i8 %8 to i32, !dbg !3725
  %or = or i32 %conv, %lor.ext, !dbg !3725
  %conv7 = trunc i32 %or to i8, !dbg !3725
  store i8 %conv7, i8* %arrayidx, align 1, !dbg !3725, !tbaa !2497
  br label %for.inc, !dbg !3724

for.inc:                                          ; preds = %lor.end
  %9 = load i32, i32* %i, align 4, !dbg !3726, !tbaa !2436
  %inc = add nsw i32 %9, 1, !dbg !3726
  store i32 %inc, i32* %i, align 4, !dbg !3726, !tbaa !2436
  br label %for.cond, !dbg !3727, !llvm.loop !3728

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3730
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_files() #0 !dbg !3731 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3732, metadata !DIExpression()), !dbg !3734
  store i64 0, i64* %i, align 8, !dbg !3734, !tbaa !2579
  br label %for.cond, !dbg !3735

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !3736, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !3738, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !3739
  br i1 %cmp, label %for.body, label %for.end, !dbg !3740

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3741, metadata !DIExpression()), !dbg !3743
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !3744, !tbaa !2442
  %3 = load i64, i64* %i, align 8, !dbg !3745, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !3744, !ctir !663
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !3744, !tbaa !2442
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !3744
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !3743, !tbaa !2442
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3746, !tbaa !2442
  call void @free_ent(%struct.fileinfo* %6), !dbg !3747
  br label %for.inc, !dbg !3748

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !3749, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !3749
  store i64 %inc, i64* %i, align 8, !dbg !3749, !tbaa !2579
  br label %for.cond, !dbg !3750, !llvm.loop !3751

for.end:                                          ; preds = %for.cond
  store i64 0, i64* @cwd_n_used, align 8, !dbg !3753, !tbaa !2579
  store i8 0, i8* @cwd_some_quoted, align 1, !dbg !3754, !tbaa !2461
  store i8 0, i8* @any_has_acl, align 1, !dbg !3755, !tbaa !2461
  store i32 0, i32* @inode_number_width, align 4, !dbg !3756, !tbaa !2436
  store i32 0, i32* @block_size_width, align 4, !dbg !3757, !tbaa !2436
  store i32 0, i32* @nlink_width, align 4, !dbg !3758, !tbaa !2436
  store i32 0, i32* @owner_width, align 4, !dbg !3759, !tbaa !2436
  store i32 0, i32* @group_width, align 4, !dbg !3760, !tbaa !2436
  store i32 0, i32* @author_width, align 4, !dbg !3761, !tbaa !2436
  store i32 0, i32* @scontext_width, align 4, !dbg !3762, !tbaa !2436
  store i32 0, i32* @major_device_number_width, align 4, !dbg !3763, !tbaa !2436
  store i32 0, i32* @minor_device_number_width, align 4, !dbg !3764, !tbaa !2436
  store i32 0, i32* @file_size_width, align 4, !dbg !3765, !tbaa !2436
  ret void, !dbg !3766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @gobble_file(i8* %name, i32 %type, i64 %inode, i1 zeroext %command_line_arg, i8* %dirname) #0 !dbg !3767 !ctir !667 {
entry:
  %retval = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %inode.addr = alloca i64, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirname.addr = alloca i8*, align 8
  %blocks = alloca i64, align 8, !ctir !168
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  %full_name = alloca i8*, align 8, !ctir !143
  %do_deref = alloca i8, align 1, !ctir !141
  %err = alloca i32, align 4, !ctir !27
  %need_lstat = alloca i8, align 1, !ctir !141
  %have_scontext = alloca i8, align 1, !ctir !141
  %have_acl = alloca i8, align 1, !ctir !141
  %attr_len = alloca i32, align 4, !ctir !27
  %n = alloca i32, align 4, !ctir !27
  %linkstats = alloca %struct.stat, align 8, !ctir !191
  %linkname = alloca i8*, align 8, !ctir !143
  %buf = alloca [652 x i8], align 16, !ctir !622
  %len = alloca i32, align 4, !ctir !27
  %len345 = alloca i32, align 4, !ctir !27
  %len355 = alloca i32, align 4, !ctir !27
  %len365 = alloca i32, align 4, !ctir !27
  %len377 = alloca i32, align 4, !ctir !27
  %b = alloca [21 x i8], align 16, !ctir !669
  %b_len = alloca i32, align 4, !ctir !27
  %buf410 = alloca [21 x i8], align 16, !ctir !669
  %len411 = alloca i32, align 4, !ctir !27
  %buf442 = alloca [652 x i8], align 16, !ctir !622
  %size = alloca i64, align 8, !ctir !168
  %len445 = alloca i32, align 4, !ctir !27
  %buf458 = alloca [21 x i8], align 16, !ctir !669
  %len459 = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  store i64 %inode, i64* %inode.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %inode.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !3774, metadata !DIExpression()), !dbg !3775
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i64 0, i64* %blocks, align 8, !dbg !3779, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !3780, metadata !DIExpression()), !dbg !3781
  %0 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3782, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !3782
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3782

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %inode.addr, align 8, !dbg !3782, !tbaa !2579
  %cmp = icmp eq i64 %1, 0, !dbg !3782
  br i1 %cmp, label %if.then, label %if.else, !dbg !3785

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end, !dbg !3785

if.else:                                          ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3119, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.gobble_file, i64 0, i64 0)) #15, !dbg !3782
  unreachable, !dbg !3782

if.end:                                           ; preds = %if.then
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !3786, !tbaa !2579
  %3 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3788, !tbaa !2579
  %cmp1 = icmp eq i64 %2, %3, !dbg !3789
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3790

if.then2:                                         ; preds = %if.end
  %4 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3791, !tbaa !2442
  %5 = bitcast %struct.fileinfo* %4 to i8*, !dbg !3791
  %6 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3793, !tbaa !2579
  %call = call i8* @xnrealloc(i8* %5, i64 %6, i64 400), !dbg !3794
  %7 = bitcast i8* %call to %struct.fileinfo*, !dbg !3794
  store %struct.fileinfo* %7, %struct.fileinfo** @cwd_file, align 8, !dbg !3795, !tbaa !2442
  %8 = load i64, i64* @cwd_n_alloc, align 8, !dbg !3796, !tbaa !2579
  %mul = mul i64 %8, 2, !dbg !3796
  store i64 %mul, i64* @cwd_n_alloc, align 8, !dbg !3796, !tbaa !2579
  br label %if.end3, !dbg !3797

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !3798, !tbaa !2442
  %10 = load i64, i64* @cwd_n_used, align 8, !dbg !3799, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i64 %10, !dbg !3798, !ctir !252
  store %struct.fileinfo* %arrayidx, %struct.fileinfo** %f, align 8, !dbg !3800, !tbaa !2442
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3801, !tbaa !2442
  %12 = bitcast %struct.fileinfo* %11 to i8*, !dbg !3802
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 200, i1 false), !dbg !3802
  %13 = load i64, i64* %inode.addr, align 8, !dbg !3803, !tbaa !2579
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3804, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 3, !dbg !3805, !ctir !185
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !3806, !ctir !191
  store i64 %13, i64* %st_ino, align 8, !dbg !3807, !tbaa !3808, !ctir !197
  %15 = load i32, i32* %type.addr, align 4, !dbg !3811, !tbaa !2497
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3812, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 4, !dbg !3813, !ctir !185
  store i32 %15, i32* %filetype, align 8, !dbg !3814, !tbaa !3815, !ctir !36
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3816, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 11, !dbg !3817, !ctir !185
  store i32 -1, i32* %quoted, align 4, !dbg !3818, !tbaa !3819, !ctir !27
  %18 = load i8, i8* @cwd_some_quoted, align 1, !dbg !3820, !tbaa !2461
  %tobool4 = trunc i8 %18 to i1, !dbg !3820
  br i1 %tobool4, label %if.end13, label %land.lhs.true, !dbg !3822

land.lhs.true:                                    ; preds = %if.end3
  %19 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !3823, !tbaa !2461
  %tobool5 = trunc i8 %19 to i1, !dbg !3823
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !3824

if.then6:                                         ; preds = %land.lhs.true
  %20 = load i8*, i8** %name.addr, align 8, !dbg !3825, !tbaa !2442
  %call7 = call zeroext i1 @needs_quoting(i8* %20), !dbg !3827
  %conv = zext i1 %call7 to i32, !dbg !3827
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3828, !tbaa !2442
  %quoted8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 11, !dbg !3829, !ctir !185
  store i32 %conv, i32* %quoted8, align 4, !dbg !3830, !tbaa !3819, !ctir !27
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3831, !tbaa !2442
  %quoted9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 11, !dbg !3833, !ctir !185
  %23 = load i32, i32* %quoted9, align 4, !dbg !3833, !tbaa !3819, !ctir !27
  %tobool10 = icmp ne i32 %23, 0, !dbg !3831
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !3834

if.then11:                                        ; preds = %if.then6
  store i8 1, i8* @cwd_some_quoted, align 1, !dbg !3835, !tbaa !2461
  br label %if.end12, !dbg !3836

if.end12:                                         ; preds = %if.then11, %if.then6
  br label %if.end13, !dbg !3837

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %if.end3
  %24 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3838, !tbaa !2461
  %tobool14 = trunc i8 %24 to i1, !dbg !3838
  br i1 %tobool14, label %if.then94, label %lor.lhs.false16, !dbg !3840

lor.lhs.false16:                                  ; preds = %if.end13
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !3841, !tbaa !2461
  %tobool17 = trunc i8 %25 to i1, !dbg !3841
  br i1 %tobool17, label %if.then94, label %lor.lhs.false19, !dbg !3842

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %26 = load i8, i8* @format_needs_stat, align 1, !dbg !3843, !tbaa !2461
  %tobool20 = trunc i8 %26 to i1, !dbg !3843
  br i1 %tobool20, label %if.then94, label %lor.lhs.false22, !dbg !3844

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %27 = load i32, i32* %type.addr, align 4, !dbg !3845, !tbaa !2497
  %cmp23 = icmp eq i32 %27, 3, !dbg !3846
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false37, !dbg !3847

land.lhs.true25:                                  ; preds = %lor.lhs.false22
  %28 = load i8, i8* @print_with_color, align 1, !dbg !3848, !tbaa !2461
  %tobool26 = trunc i8 %28 to i1, !dbg !3848
  br i1 %tobool26, label %land.lhs.true28, label %lor.lhs.false37, !dbg !3849

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %call29 = call zeroext i1 @is_colored(i32 19), !dbg !3850
  br i1 %call29, label %if.then94, label %lor.lhs.false31, !dbg !3851

lor.lhs.false31:                                  ; preds = %land.lhs.true28
  %call32 = call zeroext i1 @is_colored(i32 18), !dbg !3852
  br i1 %call32, label %if.then94, label %lor.lhs.false34, !dbg !3853

lor.lhs.false34:                                  ; preds = %lor.lhs.false31
  %call35 = call zeroext i1 @is_colored(i32 20), !dbg !3854
  br i1 %call35, label %if.then94, label %lor.lhs.false37, !dbg !3855

lor.lhs.false37:                                  ; preds = %lor.lhs.false34, %land.lhs.true25, %lor.lhs.false22
  %29 = load i8, i8* @print_inode, align 1, !dbg !3856, !tbaa !2461
  %tobool38 = trunc i8 %29 to i1, !dbg !3856
  br i1 %tobool38, label %land.lhs.true43, label %lor.lhs.false40, !dbg !3857

lor.lhs.false40:                                  ; preds = %lor.lhs.false37
  %30 = load i8, i8* @format_needs_type, align 1, !dbg !3858, !tbaa !2461
  %tobool41 = trunc i8 %30 to i1, !dbg !3858
  br i1 %tobool41, label %land.lhs.true43, label %lor.lhs.false58, !dbg !3859

land.lhs.true43:                                  ; preds = %lor.lhs.false40, %lor.lhs.false37
  %31 = load i32, i32* %type.addr, align 4, !dbg !3860, !tbaa !2497
  %cmp44 = icmp eq i32 %31, 6, !dbg !3861
  br i1 %cmp44, label %land.lhs.true49, label %lor.lhs.false46, !dbg !3862

lor.lhs.false46:                                  ; preds = %land.lhs.true43
  %32 = load i32, i32* %type.addr, align 4, !dbg !3863, !tbaa !2497
  %cmp47 = icmp eq i32 %32, 0, !dbg !3864
  br i1 %cmp47, label %land.lhs.true49, label %lor.lhs.false58, !dbg !3865

land.lhs.true49:                                  ; preds = %lor.lhs.false46, %land.lhs.true43
  %33 = load i32, i32* @dereference, align 4, !dbg !3866, !tbaa !2497
  %cmp50 = icmp eq i32 %33, 5, !dbg !3867
  br i1 %cmp50, label %if.then94, label %lor.lhs.false52, !dbg !3868

lor.lhs.false52:                                  ; preds = %land.lhs.true49
  %34 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !3869, !tbaa !2461
  %tobool53 = trunc i8 %34 to i1, !dbg !3869
  br i1 %tobool53, label %if.then94, label %lor.lhs.false55, !dbg !3870

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %35 = load i8, i8* @check_symlink_mode, align 1, !dbg !3871, !tbaa !2461
  %tobool56 = trunc i8 %35 to i1, !dbg !3871
  br i1 %tobool56, label %if.then94, label %lor.lhs.false58, !dbg !3872

lor.lhs.false58:                                  ; preds = %lor.lhs.false55, %lor.lhs.false46, %lor.lhs.false40
  %36 = load i8, i8* @print_inode, align 1, !dbg !3873, !tbaa !2461
  %tobool59 = trunc i8 %36 to i1, !dbg !3873
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false64, !dbg !3874

land.lhs.true61:                                  ; preds = %lor.lhs.false58
  %37 = load i64, i64* %inode.addr, align 8, !dbg !3875, !tbaa !2579
  %cmp62 = icmp eq i64 %37, 0, !dbg !3876
  br i1 %cmp62, label %if.then94, label %lor.lhs.false64, !dbg !3877

lor.lhs.false64:                                  ; preds = %land.lhs.true61, %lor.lhs.false58
  %38 = load i8, i8* @format_needs_type, align 1, !dbg !3878, !tbaa !2461
  %tobool65 = trunc i8 %38 to i1, !dbg !3878
  br i1 %tobool65, label %land.lhs.true67, label %if.end455, !dbg !3879

land.lhs.true67:                                  ; preds = %lor.lhs.false64
  %39 = load i32, i32* %type.addr, align 4, !dbg !3880, !tbaa !2497
  %cmp68 = icmp eq i32 %39, 0, !dbg !3881
  br i1 %cmp68, label %if.then94, label %lor.lhs.false70, !dbg !3882

lor.lhs.false70:                                  ; preds = %land.lhs.true67
  %40 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3883, !tbaa !2461
  %tobool71 = trunc i8 %40 to i1, !dbg !3883
  br i1 %tobool71, label %if.then94, label %lor.lhs.false73, !dbg !3884

lor.lhs.false73:                                  ; preds = %lor.lhs.false70
  %41 = load i32, i32* %type.addr, align 4, !dbg !3885, !tbaa !2497
  %cmp74 = icmp eq i32 %41, 5, !dbg !3886
  br i1 %cmp74, label %land.lhs.true76, label %if.end455, !dbg !3887

land.lhs.true76:                                  ; preds = %lor.lhs.false73
  %42 = load i32, i32* @indicator_style, align 4, !dbg !3888, !tbaa !2497
  %cmp77 = icmp eq i32 %42, 3, !dbg !3889
  br i1 %cmp77, label %if.then94, label %lor.lhs.false79, !dbg !3890

lor.lhs.false79:                                  ; preds = %land.lhs.true76
  %43 = load i8, i8* @print_with_color, align 1, !dbg !3891, !tbaa !2461
  %tobool80 = trunc i8 %43 to i1, !dbg !3891
  br i1 %tobool80, label %land.lhs.true82, label %if.end455, !dbg !3892

land.lhs.true82:                                  ; preds = %lor.lhs.false79
  %call83 = call zeroext i1 @is_colored(i32 14), !dbg !3893
  br i1 %call83, label %if.then94, label %lor.lhs.false85, !dbg !3894

lor.lhs.false85:                                  ; preds = %land.lhs.true82
  %call86 = call zeroext i1 @is_colored(i32 16), !dbg !3895
  br i1 %call86, label %if.then94, label %lor.lhs.false88, !dbg !3896

lor.lhs.false88:                                  ; preds = %lor.lhs.false85
  %call89 = call zeroext i1 @is_colored(i32 17), !dbg !3897
  br i1 %call89, label %if.then94, label %lor.lhs.false91, !dbg !3898

lor.lhs.false91:                                  ; preds = %lor.lhs.false88
  %call92 = call zeroext i1 @is_colored(i32 21), !dbg !3899
  br i1 %call92, label %if.then94, label %if.end455, !dbg !3900

if.then94:                                        ; preds = %lor.lhs.false91, %lor.lhs.false88, %lor.lhs.false85, %land.lhs.true82, %land.lhs.true76, %lor.lhs.false70, %land.lhs.true67, %land.lhs.true61, %lor.lhs.false55, %lor.lhs.false52, %land.lhs.true49, %lor.lhs.false34, %lor.lhs.false31, %land.lhs.true28, %lor.lhs.false19, %lor.lhs.false16, %if.end13
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3901, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata i8* %do_deref, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3906, metadata !DIExpression()), !dbg !3907
  %44 = load i8*, i8** %name.addr, align 8, !dbg !3908, !tbaa !2442
  %arrayidx95 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !3908, !ctir !146
  %45 = load i8, i8* %arrayidx95, align 1, !dbg !3908, !tbaa !2497
  %conv96 = sext i8 %45 to i32, !dbg !3908
  %cmp97 = icmp eq i32 %conv96, 47, !dbg !3910
  br i1 %cmp97, label %if.then104, label %lor.lhs.false99, !dbg !3911

lor.lhs.false99:                                  ; preds = %if.then94
  %46 = load i8*, i8** %dirname.addr, align 8, !dbg !3912, !tbaa !2442
  %arrayidx100 = getelementptr inbounds i8, i8* %46, i64 0, !dbg !3912, !ctir !146
  %47 = load i8, i8* %arrayidx100, align 1, !dbg !3912, !tbaa !2497
  %conv101 = sext i8 %47 to i32, !dbg !3912
  %cmp102 = icmp eq i32 %conv101, 0, !dbg !3913
  br i1 %cmp102, label %if.then104, label %if.else105, !dbg !3914

if.then104:                                       ; preds = %lor.lhs.false99, %if.then94
  %48 = load i8*, i8** %name.addr, align 8, !dbg !3915, !tbaa !2442
  store i8* %48, i8** %full_name, align 8, !dbg !3916, !tbaa !2442
  br label %if.end109, !dbg !3917

if.else105:                                       ; preds = %lor.lhs.false99
  %49 = load i8*, i8** %name.addr, align 8, !dbg !3918, !tbaa !2442
  %call106 = call i64 @strlen(i8* %49) #16, !dbg !3920
  %50 = load i8*, i8** %dirname.addr, align 8, !dbg !3921, !tbaa !2442
  %call107 = call i64 @strlen(i8* %50) #16, !dbg !3922
  %add = add i64 %call106, %call107, !dbg !3923
  %add108 = add i64 %add, 2, !dbg !3924
  %51 = alloca i8, i64 %add108, align 16, !dbg !3925
  store i8* %51, i8** %full_name, align 8, !dbg !3926, !tbaa !2442
  %52 = load i8*, i8** %full_name, align 8, !dbg !3927, !tbaa !2442
  %53 = load i8*, i8** %dirname.addr, align 8, !dbg !3928, !tbaa !2442
  %54 = load i8*, i8** %name.addr, align 8, !dbg !3929, !tbaa !2442
  call void @attach(i8* %52, i8* %53, i8* %54), !dbg !3930
  br label %if.end109

if.end109:                                        ; preds = %if.else105, %if.then104
  %55 = load i8, i8* @print_hyperlink, align 1, !dbg !3931, !tbaa !2461
  %tobool110 = trunc i8 %55 to i1, !dbg !3931
  br i1 %tobool110, label %if.then111, label %if.end119, !dbg !3933

if.then111:                                       ; preds = %if.end109
  %56 = load i8*, i8** %full_name, align 8, !dbg !3934, !tbaa !2442
  %call112 = call i8* @canonicalize_filename_mode(i8* %56, i32 2), !dbg !3936
  %57 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3937, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %57, i32 0, i32 2, !dbg !3938, !ctir !185
  store i8* %call112, i8** %absolute_name, align 8, !dbg !3939, !tbaa !3940, !ctir !143
  %58 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3941, !tbaa !2442
  %absolute_name113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %58, i32 0, i32 2, !dbg !3943, !ctir !185
  %59 = load i8*, i8** %absolute_name113, align 8, !dbg !3943, !tbaa !3940, !ctir !143
  %tobool114 = icmp ne i8* %59, null, !dbg !3941
  br i1 %tobool114, label %if.end118, label %if.then115, !dbg !3944

if.then115:                                       ; preds = %if.then111
  %60 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3945, !tbaa !2461
  %tobool116 = trunc i8 %60 to i1, !dbg !3945
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !3946
  %61 = load i8*, i8** %full_name, align 8, !dbg !3947, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool116, i8* %call117, i8* %61), !dbg !3948
  br label %if.end118, !dbg !3948

if.end118:                                        ; preds = %if.then115, %if.then111
  br label %if.end119, !dbg !3949

if.end119:                                        ; preds = %if.end118, %if.end109
  %62 = load i32, i32* @dereference, align 4, !dbg !3950, !tbaa !2497
  switch i32 %62, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb122
    i32 4, label %sw.bb122
  ], !dbg !3951

sw.bb:                                            ; preds = %if.end119
  %63 = load i8*, i8** %full_name, align 8, !dbg !3952, !tbaa !2442
  %64 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3954, !tbaa !2442
  %stat120 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %64, i32 0, i32 3, !dbg !3955, !ctir !185
  %call121 = call i32 @stat(i8* %63, %struct.stat* %stat120) #13, !dbg !3956
  store i32 %call121, i32* %err, align 4, !dbg !3957, !tbaa !2436
  store i8 1, i8* %do_deref, align 1, !dbg !3958, !tbaa !2461
  br label %sw.epilog, !dbg !3959

sw.bb122:                                         ; preds = %if.end119, %if.end119
  %65 = load i8, i8* %command_line_arg.addr, align 1, !dbg !3960, !tbaa !2461
  %tobool123 = trunc i8 %65 to i1, !dbg !3960
  br i1 %tobool123, label %if.then124, label %if.end144, !dbg !3962

if.then124:                                       ; preds = %sw.bb122
  call void @llvm.dbg.declare(metadata i8* %need_lstat, metadata !3963, metadata !DIExpression()), !dbg !3965
  %66 = load i8*, i8** %full_name, align 8, !dbg !3966, !tbaa !2442
  %67 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3967, !tbaa !2442
  %stat125 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %67, i32 0, i32 3, !dbg !3968, !ctir !185
  %call126 = call i32 @stat(i8* %66, %struct.stat* %stat125) #13, !dbg !3969
  store i32 %call126, i32* %err, align 4, !dbg !3970, !tbaa !2436
  store i8 1, i8* %do_deref, align 1, !dbg !3971, !tbaa !2461
  %68 = load i32, i32* @dereference, align 4, !dbg !3972, !tbaa !2497
  %cmp127 = icmp eq i32 %68, 3, !dbg !3974
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !3975

if.then129:                                       ; preds = %if.then124
  br label %sw.epilog, !dbg !3976

if.end130:                                        ; preds = %if.then124
  %69 = load i32, i32* %err, align 4, !dbg !3977, !tbaa !2436
  %cmp131 = icmp slt i32 %69, 0, !dbg !3978
  br i1 %cmp131, label %cond.true, label %cond.false, !dbg !3977

cond.true:                                        ; preds = %if.end130
  %call133 = call i32* @__errno_location() #17, !dbg !3979
  %70 = load i32, i32* %call133, align 4, !dbg !3979, !tbaa !2436, !ctir !27
  %cmp134 = icmp eq i32 %70, 2, !dbg !3980
  %conv135 = zext i1 %cmp134 to i32, !dbg !3980
  br label %cond.end, !dbg !3977

cond.false:                                       ; preds = %if.end130
  %71 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3981, !tbaa !2442
  %stat136 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %71, i32 0, i32 3, !dbg !3981, !ctir !185
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat136, i32 0, i32 3, !dbg !3981, !ctir !191
  %72 = load i32, i32* %st_mode, align 8, !dbg !3981, !tbaa !3982, !ctir !201
  %and = and i32 %72, 61440, !dbg !3981
  %cmp137 = icmp eq i32 %and, 16384, !dbg !3981
  %lnot = xor i1 %cmp137, true, !dbg !3983
  %lnot.ext = zext i1 %lnot to i32, !dbg !3983
  br label %cond.end, !dbg !3977

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv135, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !3977
  %tobool139 = icmp ne i32 %cond, 0, !dbg !3984
  %frombool140 = zext i1 %tobool139 to i8, !dbg !3985
  store i8 %frombool140, i8* %need_lstat, align 1, !dbg !3985, !tbaa !2461
  %73 = load i8, i8* %need_lstat, align 1, !dbg !3986, !tbaa !2461
  %tobool141 = trunc i8 %73 to i1, !dbg !3986
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !3988

if.then142:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !3989

if.end143:                                        ; preds = %cond.end
  br label %if.end144, !dbg !3990

if.end144:                                        ; preds = %if.end143, %sw.bb122
  br label %sw.default, !dbg !3991

sw.default:                                       ; preds = %if.end119, %if.end144
  %74 = load i8*, i8** %full_name, align 8, !dbg !3992, !tbaa !2442
  %75 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !3993, !tbaa !2442
  %stat145 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %75, i32 0, i32 3, !dbg !3994, !ctir !185
  %call146 = call i32 @lstat(i8* %74, %struct.stat* %stat145) #13, !dbg !3995
  store i32 %call146, i32* %err, align 4, !dbg !3996, !tbaa !2436
  store i8 0, i8* %do_deref, align 1, !dbg !3997, !tbaa !2461
  br label %sw.epilog, !dbg !3998

sw.epilog:                                        ; preds = %sw.default, %if.then142, %if.then129, %sw.bb
  %76 = load i32, i32* %err, align 4, !dbg !3999, !tbaa !2436
  %cmp147 = icmp ne i32 %76, 0, !dbg !4001
  br i1 %cmp147, label %if.then149, label %if.end157, !dbg !4002

if.then149:                                       ; preds = %sw.epilog
  %77 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4003, !tbaa !2461
  %tobool150 = trunc i8 %77 to i1, !dbg !4003
  %call151 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #13, !dbg !4005
  %78 = load i8*, i8** %full_name, align 8, !dbg !4006, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool150, i8* %call151, i8* %78), !dbg !4007
  %79 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4008, !tbaa !2461
  %tobool152 = trunc i8 %79 to i1, !dbg !4008
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !4010

if.then153:                                       ; preds = %if.then149
  store i64 0, i64* %retval, align 8, !dbg !4011
  br label %return, !dbg !4011

if.end154:                                        ; preds = %if.then149
  %80 = load i8*, i8** %name.addr, align 8, !dbg !4012, !tbaa !2442
  %call155 = call noalias i8* @xstrdup(i8* %80), !dbg !4013
  %81 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4014, !tbaa !2442
  %name156 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %81, i32 0, i32 0, !dbg !4015, !ctir !185
  store i8* %call155, i8** %name156, align 8, !dbg !4016, !tbaa !4017, !ctir !143
  %82 = load i64, i64* @cwd_n_used, align 8, !dbg !4018, !tbaa !2579
  %inc = add i64 %82, 1, !dbg !4018
  store i64 %inc, i64* @cwd_n_used, align 8, !dbg !4018, !tbaa !2579
  store i64 0, i64* %retval, align 8, !dbg !4019
  br label %return, !dbg !4019

if.end157:                                        ; preds = %sw.epilog
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4020, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 7, !dbg !4021, !ctir !185
  store i8 1, i8* %stat_ok, align 8, !dbg !4022, !tbaa !4023, !ctir !141
  %84 = load i32, i32* %type.addr, align 4, !dbg !4024, !tbaa !2497
  %cmp158 = icmp eq i32 %84, 5, !dbg !4026
  br i1 %cmp158, label %land.lhs.true166, label %lor.lhs.false160, !dbg !4027

lor.lhs.false160:                                 ; preds = %if.end157
  %85 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4028, !tbaa !2442
  %stat161 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %85, i32 0, i32 3, !dbg !4028, !ctir !185
  %st_mode162 = getelementptr inbounds %struct.stat, %struct.stat* %stat161, i32 0, i32 3, !dbg !4028, !ctir !191
  %86 = load i32, i32* %st_mode162, align 8, !dbg !4028, !tbaa !3982, !ctir !201
  %and163 = and i32 %86, 61440, !dbg !4028
  %cmp164 = icmp eq i32 %and163, 32768, !dbg !4028
  br i1 %cmp164, label %land.lhs.true166, label %if.end175, !dbg !4029

land.lhs.true166:                                 ; preds = %lor.lhs.false160, %if.end157
  %87 = load i8, i8* @print_with_color, align 1, !dbg !4030, !tbaa !2461
  %tobool167 = trunc i8 %87 to i1, !dbg !4030
  br i1 %tobool167, label %land.lhs.true169, label %if.end175, !dbg !4031

land.lhs.true169:                                 ; preds = %land.lhs.true166
  %call170 = call zeroext i1 @is_colored(i32 21), !dbg !4032
  br i1 %call170, label %if.then172, label %if.end175, !dbg !4033

if.then172:                                       ; preds = %land.lhs.true169
  %88 = load i8*, i8** %full_name, align 8, !dbg !4034, !tbaa !2442
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4035, !tbaa !2442
  %call173 = call zeroext i1 @has_capability_cache(i8* %88, %struct.fileinfo* %89), !dbg !4036
  %90 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4037, !tbaa !2442
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %90, i32 0, i32 10, !dbg !4038, !ctir !185
  %frombool174 = zext i1 %call173 to i8, !dbg !4039
  store i8 %frombool174, i8* %has_capability, align 8, !dbg !4039, !tbaa !4040, !ctir !141
  br label %if.end175, !dbg !4037

if.end175:                                        ; preds = %if.then172, %land.lhs.true169, %land.lhs.true166, %lor.lhs.false160
  %91 = load i32, i32* @format, align 4, !dbg !4041, !tbaa !2497
  %cmp176 = icmp eq i32 %91, 0, !dbg !4043
  br i1 %cmp176, label %if.then181, label %lor.lhs.false178, !dbg !4044

lor.lhs.false178:                                 ; preds = %if.end175
  %92 = load i8, i8* @print_scontext, align 1, !dbg !4045, !tbaa !2461
  %tobool179 = trunc i8 %92 to i1, !dbg !4045
  br i1 %tobool179, label %if.then181, label %if.end256, !dbg !4046

if.then181:                                       ; preds = %lor.lhs.false178, %if.end175
  call void @llvm.dbg.declare(metadata i8* %have_scontext, metadata !4047, metadata !DIExpression()), !dbg !4049
  store i8 0, i8* %have_scontext, align 1, !dbg !4049, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %have_acl, metadata !4050, metadata !DIExpression()), !dbg !4051
  store i8 0, i8* %have_acl, align 1, !dbg !4051, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %attr_len, metadata !4052, metadata !DIExpression()), !dbg !4053
  %93 = load i8*, i8** %full_name, align 8, !dbg !4054, !tbaa !2442
  %94 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4055, !tbaa !2442
  %95 = load i8, i8* %do_deref, align 1, !dbg !4056, !tbaa !2461
  %tobool182 = trunc i8 %95 to i1, !dbg !4056
  %call183 = call i32 @getfilecon_cache(i8* %93, %struct.fileinfo* %94, i1 zeroext %tobool182), !dbg !4057
  store i32 %call183, i32* %attr_len, align 4, !dbg !4053, !tbaa !2436
  %96 = load i32, i32* %attr_len, align 4, !dbg !4058, !tbaa !2436
  %cmp184 = icmp slt i32 %96, 0, !dbg !4059
  %conv185 = zext i1 %cmp184 to i32, !dbg !4059
  store i32 %conv185, i32* %err, align 4, !dbg !4060, !tbaa !2436
  %97 = load i32, i32* %err, align 4, !dbg !4061, !tbaa !2436
  %cmp186 = icmp eq i32 %97, 0, !dbg !4063
  br i1 %cmp186, label %if.then188, label %if.else206, !dbg !4064

if.then188:                                       ; preds = %if.then181
  %call189 = call zeroext i1 @is_smack_enabled(), !dbg !4065
  br i1 %call189, label %if.then190, label %if.else197, !dbg !4068

if.then190:                                       ; preds = %if.then188
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4069, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 6, !dbg !4069, !ctir !185
  %99 = load i8*, i8** %scontext, align 8, !dbg !4069, !tbaa !4070, !ctir !143
  %call191 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0), i8* %99) #16, !dbg !4069
  %cmp192 = icmp eq i32 %call191, 0, !dbg !4069
  %lnot194 = xor i1 %cmp192, true, !dbg !4071
  %frombool196 = zext i1 %lnot194 to i8, !dbg !4072
  store i8 %frombool196, i8* %have_scontext, align 1, !dbg !4072, !tbaa !2461
  br label %if.end205, !dbg !4073

if.else197:                                       ; preds = %if.then188
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4074, !tbaa !2442
  %scontext198 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 6, !dbg !4074, !ctir !185
  %101 = load i8*, i8** %scontext198, align 8, !dbg !4074, !tbaa !4070, !ctir !143
  %call199 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i8* %101) #16, !dbg !4074
  %cmp200 = icmp eq i32 %call199, 0, !dbg !4074
  %lnot202 = xor i1 %cmp200, true, !dbg !4075
  %frombool204 = zext i1 %lnot202 to i8, !dbg !4076
  store i8 %frombool204, i8* %have_scontext, align 1, !dbg !4076, !tbaa !2461
  br label %if.end205

if.end205:                                        ; preds = %if.else197, %if.then190
  br label %if.end217, !dbg !4077

if.else206:                                       ; preds = %if.then181
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4078, !tbaa !2442
  %scontext207 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 6, !dbg !4080, !ctir !185
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), i8** %scontext207, align 8, !dbg !4081, !tbaa !4070, !ctir !143
  %call208 = call i32* @__errno_location() #17, !dbg !4082
  %103 = load i32, i32* %call208, align 4, !dbg !4082, !tbaa !2436, !ctir !27
  %call209 = call zeroext i1 @is_ENOTSUP(i32 %103), !dbg !4084
  br i1 %call209, label %if.then215, label %lor.lhs.false211, !dbg !4085

lor.lhs.false211:                                 ; preds = %if.else206
  %call212 = call i32* @__errno_location() #17, !dbg !4086
  %104 = load i32, i32* %call212, align 4, !dbg !4086, !tbaa !2436, !ctir !27
  %cmp213 = icmp eq i32 %104, 61, !dbg !4087
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4088

if.then215:                                       ; preds = %lor.lhs.false211, %if.else206
  store i32 0, i32* %err, align 4, !dbg !4089, !tbaa !2436
  br label %if.end216, !dbg !4090

if.end216:                                        ; preds = %if.then215, %lor.lhs.false211
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end205
  %105 = load i32, i32* %err, align 4, !dbg !4091, !tbaa !2436
  %cmp218 = icmp eq i32 %105, 0, !dbg !4093
  br i1 %cmp218, label %land.lhs.true220, label %if.end230, !dbg !4094

land.lhs.true220:                                 ; preds = %if.end217
  %106 = load i32, i32* @format, align 4, !dbg !4095, !tbaa !2497
  %cmp221 = icmp eq i32 %106, 0, !dbg !4096
  br i1 %cmp221, label %if.then223, label %if.end230, !dbg !4097

if.then223:                                       ; preds = %land.lhs.true220
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4098, metadata !DIExpression()), !dbg !4100
  %107 = load i8*, i8** %full_name, align 8, !dbg !4101, !tbaa !2442
  %108 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4102, !tbaa !2442
  %call224 = call i32 @file_has_acl_cache(i8* %107, %struct.fileinfo* %108), !dbg !4103
  store i32 %call224, i32* %n, align 4, !dbg !4100, !tbaa !2436
  %109 = load i32, i32* %n, align 4, !dbg !4104, !tbaa !2436
  %cmp225 = icmp slt i32 %109, 0, !dbg !4105
  %conv226 = zext i1 %cmp225 to i32, !dbg !4105
  store i32 %conv226, i32* %err, align 4, !dbg !4106, !tbaa !2436
  %110 = load i32, i32* %n, align 4, !dbg !4107, !tbaa !2436
  %cmp227 = icmp slt i32 0, %110, !dbg !4108
  %frombool229 = zext i1 %cmp227 to i8, !dbg !4109
  store i8 %frombool229, i8* %have_acl, align 1, !dbg !4109, !tbaa !2461
  br label %if.end230, !dbg !4110

if.end230:                                        ; preds = %if.then223, %land.lhs.true220, %if.end217
  %111 = load i8, i8* %have_scontext, align 1, !dbg !4111, !tbaa !2461
  %tobool231 = trunc i8 %111 to i1, !dbg !4111
  br i1 %tobool231, label %cond.false235, label %land.lhs.true232, !dbg !4112

land.lhs.true232:                                 ; preds = %if.end230
  %112 = load i8, i8* %have_acl, align 1, !dbg !4113, !tbaa !2461
  %tobool233 = trunc i8 %112 to i1, !dbg !4113
  br i1 %tobool233, label %cond.false235, label %cond.true234, !dbg !4114

cond.true234:                                     ; preds = %land.lhs.true232
  br label %cond.end242, !dbg !4114

cond.false235:                                    ; preds = %land.lhs.true232, %if.end230
  %113 = load i8, i8* %have_scontext, align 1, !dbg !4115, !tbaa !2461
  %tobool236 = trunc i8 %113 to i1, !dbg !4115
  br i1 %tobool236, label %land.rhs, label %land.end, !dbg !4116

land.rhs:                                         ; preds = %cond.false235
  %114 = load i8, i8* %have_acl, align 1, !dbg !4117, !tbaa !2461
  %tobool238 = trunc i8 %114 to i1, !dbg !4117
  %lnot239 = xor i1 %tobool238, true, !dbg !4118
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false235
  %115 = phi i1 [ false, %cond.false235 ], [ %lnot239, %land.rhs ], !dbg !4119
  %116 = zext i1 %115 to i64, !dbg !4115
  %cond241 = select i1 %115, i32 1, i32 2, !dbg !4115
  br label %cond.end242, !dbg !4114

cond.end242:                                      ; preds = %land.end, %cond.true234
  %cond243 = phi i32 [ 0, %cond.true234 ], [ %cond241, %land.end ], !dbg !4114
  %117 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4120, !tbaa !2442
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %117, i32 0, i32 9, !dbg !4121, !ctir !185
  store i32 %cond243, i32* %acl_type, align 4, !dbg !4122, !tbaa !4123, !ctir !48
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4124, !tbaa !2442
  %acl_type244 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 9, !dbg !4125, !ctir !185
  %119 = load i32, i32* %acl_type244, align 4, !dbg !4125, !tbaa !4123, !ctir !48
  %cmp245 = icmp ne i32 %119, 0, !dbg !4126
  %conv246 = zext i1 %cmp245 to i32, !dbg !4126
  %120 = load i8, i8* @any_has_acl, align 1, !dbg !4127, !tbaa !2461
  %tobool247 = trunc i8 %120 to i1, !dbg !4127
  %conv248 = zext i1 %tobool247 to i32, !dbg !4127
  %or = or i32 %conv248, %conv246, !dbg !4127
  %tobool249 = icmp ne i32 %or, 0, !dbg !4127
  %frombool250 = zext i1 %tobool249 to i8, !dbg !4127
  store i8 %frombool250, i8* @any_has_acl, align 1, !dbg !4127, !tbaa !2461
  %121 = load i32, i32* %err, align 4, !dbg !4128, !tbaa !2436
  %tobool251 = icmp ne i32 %121, 0, !dbg !4128
  br i1 %tobool251, label %if.then252, label %if.end255, !dbg !4130

if.then252:                                       ; preds = %cond.end242
  %call253 = call i32* @__errno_location() #17, !dbg !4131
  %122 = load i32, i32* %call253, align 4, !dbg !4131, !tbaa !2436, !ctir !27
  %123 = load i8*, i8** %full_name, align 8, !dbg !4132, !tbaa !2442
  %call254 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %123), !dbg !4132
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %call254), !dbg !4133
  br label %if.end255, !dbg !4133

if.end255:                                        ; preds = %if.then252, %cond.end242
  br label %if.end256, !dbg !4134

if.end256:                                        ; preds = %if.end255, %lor.lhs.false178
  %124 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4135, !tbaa !2442
  %stat257 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %124, i32 0, i32 3, !dbg !4135, !ctir !185
  %st_mode258 = getelementptr inbounds %struct.stat, %struct.stat* %stat257, i32 0, i32 3, !dbg !4135, !ctir !191
  %125 = load i32, i32* %st_mode258, align 8, !dbg !4135, !tbaa !3982, !ctir !201
  %and259 = and i32 %125, 61440, !dbg !4135
  %cmp260 = icmp eq i32 %and259, 40960, !dbg !4135
  br i1 %cmp260, label %land.lhs.true262, label %if.end298, !dbg !4137

land.lhs.true262:                                 ; preds = %if.end256
  %126 = load i32, i32* @format, align 4, !dbg !4138, !tbaa !2497
  %cmp263 = icmp eq i32 %126, 0, !dbg !4139
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !4140

lor.lhs.false265:                                 ; preds = %land.lhs.true262
  %127 = load i8, i8* @check_symlink_mode, align 1, !dbg !4141, !tbaa !2461
  %tobool266 = trunc i8 %127 to i1, !dbg !4141
  br i1 %tobool266, label %if.then268, label %if.end298, !dbg !4142

if.then268:                                       ; preds = %lor.lhs.false265, %land.lhs.true262
  call void @llvm.dbg.declare(metadata %struct.stat* %linkstats, metadata !4143, metadata !DIExpression()), !dbg !4145
  %128 = load i8*, i8** %full_name, align 8, !dbg !4146, !tbaa !2442
  %129 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4147, !tbaa !2442
  %130 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4148, !tbaa !2461
  %tobool269 = trunc i8 %130 to i1, !dbg !4148
  call void @get_link_name(i8* %128, %struct.fileinfo* %129, i1 zeroext %tobool269), !dbg !4149
  call void @llvm.dbg.declare(metadata i8** %linkname, metadata !4150, metadata !DIExpression()), !dbg !4151
  %131 = load i8*, i8** %full_name, align 8, !dbg !4152, !tbaa !2442
  %132 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4153, !tbaa !2442
  %linkname270 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %132, i32 0, i32 1, !dbg !4154, !ctir !185
  %133 = load i8*, i8** %linkname270, align 8, !dbg !4154, !tbaa !4155, !ctir !143
  %call271 = call i8* @make_link_name(i8* %131, i8* %133), !dbg !4156
  store i8* %call271, i8** %linkname, align 8, !dbg !4151, !tbaa !2442
  %134 = load i8*, i8** %linkname, align 8, !dbg !4157, !tbaa !2442
  %tobool272 = icmp ne i8* %134, null, !dbg !4157
  br i1 %tobool272, label %land.lhs.true273, label %if.end283, !dbg !4159

land.lhs.true273:                                 ; preds = %if.then268
  %135 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4160, !tbaa !2442
  %quoted274 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %135, i32 0, i32 11, !dbg !4161, !ctir !185
  %136 = load i32, i32* %quoted274, align 4, !dbg !4161, !tbaa !3819, !ctir !27
  %cmp275 = icmp eq i32 %136, 0, !dbg !4162
  br i1 %cmp275, label %land.lhs.true277, label %if.end283, !dbg !4163

land.lhs.true277:                                 ; preds = %land.lhs.true273
  %137 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4164, !tbaa !2442
  %linkname278 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %137, i32 0, i32 1, !dbg !4165, !ctir !185
  %138 = load i8*, i8** %linkname278, align 8, !dbg !4165, !tbaa !4155, !ctir !143
  %call279 = call zeroext i1 @needs_quoting(i8* %138), !dbg !4166
  br i1 %call279, label %if.then281, label %if.end283, !dbg !4167

if.then281:                                       ; preds = %land.lhs.true277
  %139 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4168, !tbaa !2442
  %quoted282 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %139, i32 0, i32 11, !dbg !4169, !ctir !185
  store i32 -1, i32* %quoted282, align 4, !dbg !4170, !tbaa !3819, !ctir !27
  br label %if.end283, !dbg !4168

if.end283:                                        ; preds = %if.then281, %land.lhs.true277, %land.lhs.true273, %if.then268
  %140 = load i8*, i8** %linkname, align 8, !dbg !4171, !tbaa !2442
  %tobool284 = icmp ne i8* %140, null, !dbg !4171
  br i1 %tobool284, label %land.lhs.true285, label %if.end297, !dbg !4173

land.lhs.true285:                                 ; preds = %if.end283
  %141 = load i32, i32* @indicator_style, align 4, !dbg !4174, !tbaa !2497
  %cmp286 = icmp ule i32 2, %141, !dbg !4175
  br i1 %cmp286, label %land.lhs.true291, label %lor.lhs.false288, !dbg !4176

lor.lhs.false288:                                 ; preds = %land.lhs.true285
  %142 = load i8, i8* @check_symlink_mode, align 1, !dbg !4177, !tbaa !2461
  %tobool289 = trunc i8 %142 to i1, !dbg !4177
  br i1 %tobool289, label %land.lhs.true291, label %if.end297, !dbg !4178

land.lhs.true291:                                 ; preds = %lor.lhs.false288, %land.lhs.true285
  %143 = load i8*, i8** %linkname, align 8, !dbg !4179, !tbaa !2442
  %call292 = call i32 @stat(i8* %143, %struct.stat* %linkstats) #13, !dbg !4180
  %cmp293 = icmp eq i32 %call292, 0, !dbg !4181
  br i1 %cmp293, label %if.then295, label %if.end297, !dbg !4182

if.then295:                                       ; preds = %land.lhs.true291
  %144 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4183, !tbaa !2442
  %linkok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %144, i32 0, i32 8, !dbg !4185, !ctir !185
  store i8 1, i8* %linkok, align 1, !dbg !4186, !tbaa !4187, !ctir !141
  %st_mode296 = getelementptr inbounds %struct.stat, %struct.stat* %linkstats, i32 0, i32 3, !dbg !4188, !ctir !191
  %145 = load i32, i32* %st_mode296, align 8, !dbg !4188, !tbaa !4189, !ctir !201
  %146 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4190, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %146, i32 0, i32 5, !dbg !4191, !ctir !185
  store i32 %145, i32* %linkmode, align 4, !dbg !4192, !tbaa !4193, !ctir !228
  br label %if.end297, !dbg !4194

if.end297:                                        ; preds = %if.then295, %land.lhs.true291, %lor.lhs.false288, %if.end283
  %147 = load i8*, i8** %linkname, align 8, !dbg !4195, !tbaa !2442
  call void @free(i8* %147) #13, !dbg !4196
  br label %if.end298, !dbg !4197

if.end298:                                        ; preds = %if.end297, %lor.lhs.false265, %if.end256
  %148 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4198, !tbaa !2442
  %stat299 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %148, i32 0, i32 3, !dbg !4198, !ctir !185
  %st_mode300 = getelementptr inbounds %struct.stat, %struct.stat* %stat299, i32 0, i32 3, !dbg !4198, !ctir !191
  %149 = load i32, i32* %st_mode300, align 8, !dbg !4198, !tbaa !3982, !ctir !201
  %and301 = and i32 %149, 61440, !dbg !4198
  %cmp302 = icmp eq i32 %and301, 40960, !dbg !4198
  br i1 %cmp302, label %if.then304, label %if.else306, !dbg !4200

if.then304:                                       ; preds = %if.end298
  %150 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4201, !tbaa !2442
  %filetype305 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %150, i32 0, i32 4, !dbg !4202, !ctir !185
  store i32 6, i32* %filetype305, align 8, !dbg !4203, !tbaa !3815, !ctir !36
  br label %if.end325, !dbg !4201

if.else306:                                       ; preds = %if.end298
  %151 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4204, !tbaa !2442
  %stat307 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %151, i32 0, i32 3, !dbg !4204, !ctir !185
  %st_mode308 = getelementptr inbounds %struct.stat, %struct.stat* %stat307, i32 0, i32 3, !dbg !4204, !ctir !191
  %152 = load i32, i32* %st_mode308, align 8, !dbg !4204, !tbaa !3982, !ctir !201
  %and309 = and i32 %152, 61440, !dbg !4204
  %cmp310 = icmp eq i32 %and309, 16384, !dbg !4204
  br i1 %cmp310, label %if.then312, label %if.else322, !dbg !4206

if.then312:                                       ; preds = %if.else306
  %153 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4207, !tbaa !2461
  %tobool313 = trunc i8 %153 to i1, !dbg !4207
  br i1 %tobool313, label %land.lhs.true315, label %if.else319, !dbg !4210

land.lhs.true315:                                 ; preds = %if.then312
  %154 = load i8, i8* @immediate_dirs, align 1, !dbg !4211, !tbaa !2461
  %tobool316 = trunc i8 %154 to i1, !dbg !4211
  br i1 %tobool316, label %if.else319, label %if.then317, !dbg !4212

if.then317:                                       ; preds = %land.lhs.true315
  %155 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4213, !tbaa !2442
  %filetype318 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %155, i32 0, i32 4, !dbg !4214, !ctir !185
  store i32 9, i32* %filetype318, align 8, !dbg !4215, !tbaa !3815, !ctir !36
  br label %if.end321, !dbg !4213

if.else319:                                       ; preds = %land.lhs.true315, %if.then312
  %156 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4216, !tbaa !2442
  %filetype320 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %156, i32 0, i32 4, !dbg !4217, !ctir !185
  store i32 3, i32* %filetype320, align 8, !dbg !4218, !tbaa !3815, !ctir !36
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then317
  br label %if.end324, !dbg !4219

if.else322:                                       ; preds = %if.else306
  %157 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4220, !tbaa !2442
  %filetype323 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %157, i32 0, i32 4, !dbg !4221, !ctir !185
  store i32 5, i32* %filetype323, align 8, !dbg !4222, !tbaa !3815, !ctir !36
  br label %if.end324

if.end324:                                        ; preds = %if.else322, %if.end321
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then304
  %158 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4223, !tbaa !2442
  %stat326 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %158, i32 0, i32 3, !dbg !4223, !ctir !185
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat326, i32 0, i32 10, !dbg !4223, !ctir !191
  %159 = load i64, i64* %st_blocks, align 8, !dbg !4223, !tbaa !4224, !ctir !212
  store i64 %159, i64* %blocks, align 8, !dbg !4225, !tbaa !2579
  %160 = load i32, i32* @format, align 4, !dbg !4226, !tbaa !2497
  %cmp327 = icmp eq i32 %160, 0, !dbg !4228
  br i1 %cmp327, label %if.then332, label %lor.lhs.false329, !dbg !4229

lor.lhs.false329:                                 ; preds = %if.end325
  %161 = load i8, i8* @print_block_size, align 1, !dbg !4230, !tbaa !2461
  %tobool330 = trunc i8 %161 to i1, !dbg !4230
  br i1 %tobool330, label %if.then332, label %if.end339, !dbg !4231

if.then332:                                       ; preds = %lor.lhs.false329, %if.end325
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4235, metadata !DIExpression()), !dbg !4236
  %162 = load i64, i64* %blocks, align 8, !dbg !4237, !tbaa !2579
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !4238
  %163 = load i32, i32* @human_output_opts, align 4, !dbg !4239, !tbaa !2436
  %164 = load i64, i64* @output_block_size, align 8, !dbg !4240, !tbaa !2579
  %call333 = call i8* @human_readable(i64 %162, i8* %arraydecay, i32 %163, i64 512, i64 %164), !dbg !4241
  %call334 = call i32 @gnu_mbswidth(i8* %call333, i32 0), !dbg !4242
  store i32 %call334, i32* %len, align 4, !dbg !4236, !tbaa !2436
  %165 = load i32, i32* @block_size_width, align 4, !dbg !4243, !tbaa !2436
  %166 = load i32, i32* %len, align 4, !dbg !4245, !tbaa !2436
  %cmp335 = icmp slt i32 %165, %166, !dbg !4246
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !4247

if.then337:                                       ; preds = %if.then332
  %167 = load i32, i32* %len, align 4, !dbg !4248, !tbaa !2436
  store i32 %167, i32* @block_size_width, align 4, !dbg !4249, !tbaa !2436
  br label %if.end338, !dbg !4250

if.end338:                                        ; preds = %if.then337, %if.then332
  br label %if.end339, !dbg !4251

if.end339:                                        ; preds = %if.end338, %lor.lhs.false329
  %168 = load i32, i32* @format, align 4, !dbg !4252, !tbaa !2497
  %cmp340 = icmp eq i32 %168, 0, !dbg !4254
  br i1 %cmp340, label %if.then342, label %if.end374, !dbg !4255

if.then342:                                       ; preds = %if.end339
  %169 = load i8, i8* @print_owner, align 1, !dbg !4256, !tbaa !2461
  %tobool343 = trunc i8 %169 to i1, !dbg !4256
  br i1 %tobool343, label %if.then344, label %if.end352, !dbg !4259

if.then344:                                       ; preds = %if.then342
  call void @llvm.dbg.declare(metadata i32* %len345, metadata !4260, metadata !DIExpression()), !dbg !4262
  %170 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4263, !tbaa !2442
  %stat346 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %170, i32 0, i32 3, !dbg !4264, !ctir !185
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat346, i32 0, i32 4, !dbg !4265, !ctir !191
  %171 = load i32, i32* %st_uid, align 4, !dbg !4265, !tbaa !4266, !ctir !203
  %call347 = call i32 @format_user_width(i32 %171), !dbg !4267
  store i32 %call347, i32* %len345, align 4, !dbg !4262, !tbaa !2436
  %172 = load i32, i32* @owner_width, align 4, !dbg !4268, !tbaa !2436
  %173 = load i32, i32* %len345, align 4, !dbg !4270, !tbaa !2436
  %cmp348 = icmp slt i32 %172, %173, !dbg !4271
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !4272

if.then350:                                       ; preds = %if.then344
  %174 = load i32, i32* %len345, align 4, !dbg !4273, !tbaa !2436
  store i32 %174, i32* @owner_width, align 4, !dbg !4274, !tbaa !2436
  br label %if.end351, !dbg !4275

if.end351:                                        ; preds = %if.then350, %if.then344
  br label %if.end352, !dbg !4276

if.end352:                                        ; preds = %if.end351, %if.then342
  %175 = load i8, i8* @print_group, align 1, !dbg !4277, !tbaa !2461
  %tobool353 = trunc i8 %175 to i1, !dbg !4277
  br i1 %tobool353, label %if.then354, label %if.end362, !dbg !4279

if.then354:                                       ; preds = %if.end352
  call void @llvm.dbg.declare(metadata i32* %len355, metadata !4280, metadata !DIExpression()), !dbg !4282
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4283, !tbaa !2442
  %stat356 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 3, !dbg !4284, !ctir !185
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat356, i32 0, i32 5, !dbg !4285, !ctir !191
  %177 = load i32, i32* %st_gid, align 8, !dbg !4285, !tbaa !4286, !ctir !205
  %call357 = call i32 @format_group_width(i32 %177), !dbg !4287
  store i32 %call357, i32* %len355, align 4, !dbg !4282, !tbaa !2436
  %178 = load i32, i32* @group_width, align 4, !dbg !4288, !tbaa !2436
  %179 = load i32, i32* %len355, align 4, !dbg !4290, !tbaa !2436
  %cmp358 = icmp slt i32 %178, %179, !dbg !4291
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !4292

if.then360:                                       ; preds = %if.then354
  %180 = load i32, i32* %len355, align 4, !dbg !4293, !tbaa !2436
  store i32 %180, i32* @group_width, align 4, !dbg !4294, !tbaa !2436
  br label %if.end361, !dbg !4295

if.end361:                                        ; preds = %if.then360, %if.then354
  br label %if.end362, !dbg !4296

if.end362:                                        ; preds = %if.end361, %if.end352
  %181 = load i8, i8* @print_author, align 1, !dbg !4297, !tbaa !2461
  %tobool363 = trunc i8 %181 to i1, !dbg !4297
  br i1 %tobool363, label %if.then364, label %if.end373, !dbg !4299

if.then364:                                       ; preds = %if.end362
  call void @llvm.dbg.declare(metadata i32* %len365, metadata !4300, metadata !DIExpression()), !dbg !4302
  %182 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4303, !tbaa !2442
  %stat366 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %182, i32 0, i32 3, !dbg !4304, !ctir !185
  %st_uid367 = getelementptr inbounds %struct.stat, %struct.stat* %stat366, i32 0, i32 4, !dbg !4305, !ctir !191
  %183 = load i32, i32* %st_uid367, align 4, !dbg !4305, !tbaa !4266, !ctir !203
  %call368 = call i32 @format_user_width(i32 %183), !dbg !4306
  store i32 %call368, i32* %len365, align 4, !dbg !4302, !tbaa !2436
  %184 = load i32, i32* @author_width, align 4, !dbg !4307, !tbaa !2436
  %185 = load i32, i32* %len365, align 4, !dbg !4309, !tbaa !2436
  %cmp369 = icmp slt i32 %184, %185, !dbg !4310
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !4311

if.then371:                                       ; preds = %if.then364
  %186 = load i32, i32* %len365, align 4, !dbg !4312, !tbaa !2436
  store i32 %186, i32* @author_width, align 4, !dbg !4313, !tbaa !2436
  br label %if.end372, !dbg !4314

if.end372:                                        ; preds = %if.then371, %if.then364
  br label %if.end373, !dbg !4315

if.end373:                                        ; preds = %if.end372, %if.end362
  br label %if.end374, !dbg !4316

if.end374:                                        ; preds = %if.end373, %if.end339
  %187 = load i8, i8* @print_scontext, align 1, !dbg !4317, !tbaa !2461
  %tobool375 = trunc i8 %187 to i1, !dbg !4317
  br i1 %tobool375, label %if.then376, label %if.end385, !dbg !4319

if.then376:                                       ; preds = %if.end374
  call void @llvm.dbg.declare(metadata i32* %len377, metadata !4320, metadata !DIExpression()), !dbg !4322
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4323, !tbaa !2442
  %scontext378 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 6, !dbg !4324, !ctir !185
  %189 = load i8*, i8** %scontext378, align 8, !dbg !4324, !tbaa !4070, !ctir !143
  %call379 = call i64 @strlen(i8* %189) #16, !dbg !4325
  %conv380 = trunc i64 %call379 to i32, !dbg !4325
  store i32 %conv380, i32* %len377, align 4, !dbg !4322, !tbaa !2436
  %190 = load i32, i32* @scontext_width, align 4, !dbg !4326, !tbaa !2436
  %191 = load i32, i32* %len377, align 4, !dbg !4328, !tbaa !2436
  %cmp381 = icmp slt i32 %190, %191, !dbg !4329
  br i1 %cmp381, label %if.then383, label %if.end384, !dbg !4330

if.then383:                                       ; preds = %if.then376
  %192 = load i32, i32* %len377, align 4, !dbg !4331, !tbaa !2436
  store i32 %192, i32* @scontext_width, align 4, !dbg !4332, !tbaa !2436
  br label %if.end384, !dbg !4333

if.end384:                                        ; preds = %if.then383, %if.then376
  br label %if.end385, !dbg !4334

if.end385:                                        ; preds = %if.end384, %if.end374
  %193 = load i32, i32* @format, align 4, !dbg !4335, !tbaa !2497
  %cmp386 = icmp eq i32 %193, 0, !dbg !4337
  br i1 %cmp386, label %if.then388, label %if.end454, !dbg !4338

if.then388:                                       ; preds = %if.end385
  call void @llvm.dbg.declare(metadata [21 x i8]* %b, metadata !4339, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.declare(metadata i32* %b_len, metadata !4342, metadata !DIExpression()), !dbg !4343
  %194 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4344, !tbaa !2442
  %stat389 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %194, i32 0, i32 3, !dbg !4345, !ctir !185
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat389, i32 0, i32 2, !dbg !4346, !ctir !191
  %195 = load i64, i64* %st_nlink, align 8, !dbg !4346, !tbaa !4347, !ctir !199
  %arraydecay390 = getelementptr inbounds [21 x i8], [21 x i8]* %b, i64 0, i64 0, !dbg !4348
  %call391 = call i8* @umaxtostr(i64 %195, i8* %arraydecay390), !dbg !4349
  %call392 = call i64 @strlen(i8* %call391) #16, !dbg !4350
  %conv393 = trunc i64 %call392 to i32, !dbg !4350
  store i32 %conv393, i32* %b_len, align 4, !dbg !4343, !tbaa !2436
  %196 = load i32, i32* @nlink_width, align 4, !dbg !4351, !tbaa !2436
  %197 = load i32, i32* %b_len, align 4, !dbg !4353, !tbaa !2436
  %cmp394 = icmp slt i32 %196, %197, !dbg !4354
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !4355

if.then396:                                       ; preds = %if.then388
  %198 = load i32, i32* %b_len, align 4, !dbg !4356, !tbaa !2436
  store i32 %198, i32* @nlink_width, align 4, !dbg !4357, !tbaa !2436
  br label %if.end397, !dbg !4358

if.end397:                                        ; preds = %if.then396, %if.then388
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4359, !tbaa !2442
  %stat398 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 3, !dbg !4359, !ctir !185
  %st_mode399 = getelementptr inbounds %struct.stat, %struct.stat* %stat398, i32 0, i32 3, !dbg !4359, !ctir !191
  %200 = load i32, i32* %st_mode399, align 8, !dbg !4359, !tbaa !3982, !ctir !201
  %and400 = and i32 %200, 61440, !dbg !4359
  %cmp401 = icmp eq i32 %and400, 8192, !dbg !4359
  br i1 %cmp401, label %if.then409, label %lor.lhs.false403, !dbg !4361

lor.lhs.false403:                                 ; preds = %if.end397
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4362, !tbaa !2442
  %stat404 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !4362, !ctir !185
  %st_mode405 = getelementptr inbounds %struct.stat, %struct.stat* %stat404, i32 0, i32 3, !dbg !4362, !ctir !191
  %202 = load i32, i32* %st_mode405, align 8, !dbg !4362, !tbaa !3982, !ctir !201
  %and406 = and i32 %202, 61440, !dbg !4362
  %cmp407 = icmp eq i32 %and406, 24576, !dbg !4362
  br i1 %cmp407, label %if.then409, label %if.else441, !dbg !4363

if.then409:                                       ; preds = %lor.lhs.false403, %if.end397
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf410, metadata !4364, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %len411, metadata !4367, metadata !DIExpression()), !dbg !4368
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4369, !tbaa !2442
  %stat412 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 3, !dbg !4369, !ctir !185
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat412, i32 0, i32 7, !dbg !4369, !ctir !191
  %204 = load i64, i64* %st_rdev, align 8, !dbg !4369, !tbaa !4370, !ctir !195
  %call413 = call i32 @gnu_dev_major(i64 %204) #17, !dbg !4369
  %conv414 = zext i32 %call413 to i64, !dbg !4369
  %arraydecay415 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4371
  %call416 = call i8* @umaxtostr(i64 %conv414, i8* %arraydecay415), !dbg !4372
  %call417 = call i64 @strlen(i8* %call416) #16, !dbg !4373
  %conv418 = trunc i64 %call417 to i32, !dbg !4373
  store i32 %conv418, i32* %len411, align 4, !dbg !4368, !tbaa !2436
  %205 = load i32, i32* @major_device_number_width, align 4, !dbg !4374, !tbaa !2436
  %206 = load i32, i32* %len411, align 4, !dbg !4376, !tbaa !2436
  %cmp419 = icmp slt i32 %205, %206, !dbg !4377
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !4378

if.then421:                                       ; preds = %if.then409
  %207 = load i32, i32* %len411, align 4, !dbg !4379, !tbaa !2436
  store i32 %207, i32* @major_device_number_width, align 4, !dbg !4380, !tbaa !2436
  br label %if.end422, !dbg !4381

if.end422:                                        ; preds = %if.then421, %if.then409
  %208 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4382, !tbaa !2442
  %stat423 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %208, i32 0, i32 3, !dbg !4382, !ctir !185
  %st_rdev424 = getelementptr inbounds %struct.stat, %struct.stat* %stat423, i32 0, i32 7, !dbg !4382, !ctir !191
  %209 = load i64, i64* %st_rdev424, align 8, !dbg !4382, !tbaa !4370, !ctir !195
  %call425 = call i32 @gnu_dev_minor(i64 %209) #17, !dbg !4382
  %conv426 = zext i32 %call425 to i64, !dbg !4382
  %arraydecay427 = getelementptr inbounds [21 x i8], [21 x i8]* %buf410, i64 0, i64 0, !dbg !4383
  %call428 = call i8* @umaxtostr(i64 %conv426, i8* %arraydecay427), !dbg !4384
  %call429 = call i64 @strlen(i8* %call428) #16, !dbg !4385
  %conv430 = trunc i64 %call429 to i32, !dbg !4385
  store i32 %conv430, i32* %len411, align 4, !dbg !4386, !tbaa !2436
  %210 = load i32, i32* @minor_device_number_width, align 4, !dbg !4387, !tbaa !2436
  %211 = load i32, i32* %len411, align 4, !dbg !4389, !tbaa !2436
  %cmp431 = icmp slt i32 %210, %211, !dbg !4390
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !4391

if.then433:                                       ; preds = %if.end422
  %212 = load i32, i32* %len411, align 4, !dbg !4392, !tbaa !2436
  store i32 %212, i32* @minor_device_number_width, align 4, !dbg !4393, !tbaa !2436
  br label %if.end434, !dbg !4394

if.end434:                                        ; preds = %if.then433, %if.end422
  %213 = load i32, i32* @major_device_number_width, align 4, !dbg !4395, !tbaa !2436
  %add435 = add nsw i32 %213, 2, !dbg !4396
  %214 = load i32, i32* @minor_device_number_width, align 4, !dbg !4397, !tbaa !2436
  %add436 = add nsw i32 %add435, %214, !dbg !4398
  store i32 %add436, i32* %len411, align 4, !dbg !4399, !tbaa !2436
  %215 = load i32, i32* @file_size_width, align 4, !dbg !4400, !tbaa !2436
  %216 = load i32, i32* %len411, align 4, !dbg !4402, !tbaa !2436
  %cmp437 = icmp slt i32 %215, %216, !dbg !4403
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4404

if.then439:                                       ; preds = %if.end434
  %217 = load i32, i32* %len411, align 4, !dbg !4405, !tbaa !2436
  store i32 %217, i32* @file_size_width, align 4, !dbg !4406, !tbaa !2436
  br label %if.end440, !dbg !4407

if.end440:                                        ; preds = %if.then439, %if.end434
  br label %if.end453, !dbg !4408

if.else441:                                       ; preds = %lor.lhs.false403
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf442, metadata !4409, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4412, metadata !DIExpression()), !dbg !4413
  %218 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4414, !tbaa !2442
  %stat443 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %218, i32 0, i32 3, !dbg !4415, !ctir !185
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat443, i32 0, i32 8, !dbg !4416, !ctir !191
  %219 = load i64, i64* %st_size, align 8, !dbg !4416, !tbaa !4417, !ctir !179
  %call444 = call i64 @unsigned_file_size(i64 %219), !dbg !4418
  store i64 %call444, i64* %size, align 8, !dbg !4413, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %len445, metadata !4419, metadata !DIExpression()), !dbg !4420
  %220 = load i64, i64* %size, align 8, !dbg !4421, !tbaa !2579
  %arraydecay446 = getelementptr inbounds [652 x i8], [652 x i8]* %buf442, i64 0, i64 0, !dbg !4422
  %221 = load i32, i32* @file_human_output_opts, align 4, !dbg !4423, !tbaa !2436
  %222 = load i64, i64* @file_output_block_size, align 8, !dbg !4424, !tbaa !2579
  %call447 = call i8* @human_readable(i64 %220, i8* %arraydecay446, i32 %221, i64 1, i64 %222), !dbg !4425
  %call448 = call i32 @gnu_mbswidth(i8* %call447, i32 0), !dbg !4426
  store i32 %call448, i32* %len445, align 4, !dbg !4420, !tbaa !2436
  %223 = load i32, i32* @file_size_width, align 4, !dbg !4427, !tbaa !2436
  %224 = load i32, i32* %len445, align 4, !dbg !4429, !tbaa !2436
  %cmp449 = icmp slt i32 %223, %224, !dbg !4430
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !4431

if.then451:                                       ; preds = %if.else441
  %225 = load i32, i32* %len445, align 4, !dbg !4432, !tbaa !2436
  store i32 %225, i32* @file_size_width, align 4, !dbg !4433, !tbaa !2436
  br label %if.end452, !dbg !4434

if.end452:                                        ; preds = %if.then451, %if.else441
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.end440
  br label %if.end454, !dbg !4435

if.end454:                                        ; preds = %if.end453, %if.end385
  br label %if.end455, !dbg !4436

if.end455:                                        ; preds = %if.end454, %lor.lhs.false91, %lor.lhs.false79, %lor.lhs.false73, %lor.lhs.false64
  %226 = load i8, i8* @print_inode, align 1, !dbg !4437, !tbaa !2461
  %tobool456 = trunc i8 %226 to i1, !dbg !4437
  br i1 %tobool456, label %if.then457, label %if.end470, !dbg !4439

if.then457:                                       ; preds = %if.end455
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf458, metadata !4440, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.declare(metadata i32* %len459, metadata !4443, metadata !DIExpression()), !dbg !4444
  %227 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4445, !tbaa !2442
  %stat460 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %227, i32 0, i32 3, !dbg !4446, !ctir !185
  %st_ino461 = getelementptr inbounds %struct.stat, %struct.stat* %stat460, i32 0, i32 1, !dbg !4447, !ctir !191
  %228 = load i64, i64* %st_ino461, align 8, !dbg !4447, !tbaa !3808, !ctir !197
  %arraydecay462 = getelementptr inbounds [21 x i8], [21 x i8]* %buf458, i64 0, i64 0, !dbg !4448
  %call463 = call i8* @umaxtostr(i64 %228, i8* %arraydecay462), !dbg !4449
  %call464 = call i64 @strlen(i8* %call463) #16, !dbg !4450
  %conv465 = trunc i64 %call464 to i32, !dbg !4450
  store i32 %conv465, i32* %len459, align 4, !dbg !4444, !tbaa !2436
  %229 = load i32, i32* @inode_number_width, align 4, !dbg !4451, !tbaa !2436
  %230 = load i32, i32* %len459, align 4, !dbg !4453, !tbaa !2436
  %cmp466 = icmp slt i32 %229, %230, !dbg !4454
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !4455

if.then468:                                       ; preds = %if.then457
  %231 = load i32, i32* %len459, align 4, !dbg !4456, !tbaa !2436
  store i32 %231, i32* @inode_number_width, align 4, !dbg !4457, !tbaa !2436
  br label %if.end469, !dbg !4458

if.end469:                                        ; preds = %if.then468, %if.then457
  br label %if.end470, !dbg !4459

if.end470:                                        ; preds = %if.end469, %if.end455
  %232 = load i8*, i8** %name.addr, align 8, !dbg !4460, !tbaa !2442
  %call471 = call noalias i8* @xstrdup(i8* %232), !dbg !4461
  %233 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4462, !tbaa !2442
  %name472 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %233, i32 0, i32 0, !dbg !4463, !ctir !185
  store i8* %call471, i8** %name472, align 8, !dbg !4464, !tbaa !4017, !ctir !143
  %234 = load i64, i64* @cwd_n_used, align 8, !dbg !4465, !tbaa !2579
  %inc473 = add i64 %234, 1, !dbg !4465
  store i64 %inc473, i64* @cwd_n_used, align 8, !dbg !4465, !tbaa !2579
  %235 = load i64, i64* %blocks, align 8, !dbg !4466, !tbaa !2579
  store i64 %235, i64* %retval, align 8, !dbg !4467
  br label %return, !dbg !4467

return:                                           ; preds = %if.end470, %if.end154, %if.then153
  %236 = load i64, i64* %retval, align 8, !dbg !4468
  ret i64 %236, !dbg !4468
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @queue_directory(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !4469 !ctir !607 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %new = alloca %struct.pending*, align 8, !ctir !237
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4470, metadata !DIExpression()), !dbg !4471
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4472, metadata !DIExpression()), !dbg !4473
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata %struct.pending** %new, metadata !4476, metadata !DIExpression()), !dbg !4477
  %call = call noalias i8* @xmalloc(i64 32), !dbg !4478
  %0 = bitcast i8* %call to %struct.pending*, !dbg !4478
  store %struct.pending* %0, %struct.pending** %new, align 8, !dbg !4477, !tbaa !2442
  %1 = load i8*, i8** %realname.addr, align 8, !dbg !4479, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !4479
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4479

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %realname.addr, align 8, !dbg !4480, !tbaa !2442
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !4481
  br label %cond.end, !dbg !4479

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !4479
  %3 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4482, !tbaa !2442
  %realname2 = getelementptr inbounds %struct.pending, %struct.pending* %3, i32 0, i32 1, !dbg !4483, !ctir !238
  store i8* %cond, i8** %realname2, align 8, !dbg !4484, !tbaa !2688, !ctir !143
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4485, !tbaa !2442
  %tobool3 = icmp ne i8* %4, null, !dbg !4485
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !4485

cond.true4:                                       ; preds = %cond.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4486, !tbaa !2442
  %call5 = call noalias i8* @xstrdup(i8* %5), !dbg !4487
  br label %cond.end7, !dbg !4485

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !4485

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi i8* [ %call5, %cond.true4 ], [ null, %cond.false6 ], !dbg !4485
  %6 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4488, !tbaa !2442
  %name9 = getelementptr inbounds %struct.pending, %struct.pending* %6, i32 0, i32 0, !dbg !4489, !ctir !238
  store i8* %cond8, i8** %name9, align 8, !dbg !4490, !tbaa !2660, !ctir !143
  %7 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4491, !tbaa !2461
  %tobool10 = trunc i8 %7 to i1, !dbg !4491
  %8 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4492, !tbaa !2442
  %command_line_arg11 = getelementptr inbounds %struct.pending, %struct.pending* %8, i32 0, i32 2, !dbg !4493, !ctir !238
  %frombool12 = zext i1 %tobool10 to i8, !dbg !4494
  store i8 %frombool12, i8* %command_line_arg11, align 8, !dbg !4494, !tbaa !2691, !ctir !141
  %9 = load %struct.pending*, %struct.pending** @pending_dirs, align 8, !dbg !4495, !tbaa !2442
  %10 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4496, !tbaa !2442
  %next = getelementptr inbounds %struct.pending, %struct.pending* %10, i32 0, i32 3, !dbg !4497, !ctir !238
  store %struct.pending* %9, %struct.pending** %next, align 8, !dbg !4498, !tbaa !2639, !ctir !237
  %11 = load %struct.pending*, %struct.pending** %new, align 8, !dbg !4499, !tbaa !2442
  store %struct.pending* %11, %struct.pending** @pending_dirs, align 8, !dbg !4500, !tbaa !2442
  ret void, !dbg !4501
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sort_files() #0 !dbg !4502 !ctir !341 {
entry:
  %use_strcmp = alloca i8, align 1, !ctir !141
  call void @llvm.dbg.declare(metadata i8* %use_strcmp, metadata !4503, metadata !DIExpression()), !dbg !4504
  %0 = load i64, i64* @sorted_file_alloc, align 8, !dbg !4505, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !4507, !tbaa !2579
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4508, !tbaa !2579
  %div = udiv i64 %2, 2, !dbg !4509
  %add = add i64 %1, %div, !dbg !4510
  %cmp = icmp ult i64 %0, %add, !dbg !4511
  br i1 %cmp, label %if.then, label %if.end, !dbg !4512

if.then:                                          ; preds = %entry
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4513, !tbaa !2442
  %4 = bitcast i8** %3 to i8*, !dbg !4513
  call void @free(i8* %4) #13, !dbg !4515
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !4516, !tbaa !2579
  %call = call noalias i8* @xnmalloc(i64 %5, i64 24), !dbg !4517
  %6 = bitcast i8* %call to i8**, !dbg !4517
  store i8** %6, i8*** @sorted_file, align 8, !dbg !4518, !tbaa !2442
  %7 = load i64, i64* @cwd_n_used, align 8, !dbg !4519, !tbaa !2579
  %mul = mul i64 3, %7, !dbg !4520
  store i64 %mul, i64* @sorted_file_alloc, align 8, !dbg !4521, !tbaa !2579
  br label %if.end, !dbg !4522

if.end:                                           ; preds = %if.then, %entry
  call void @initialize_ordering_vector(), !dbg !4523
  %8 = load i32, i32* @sort_type, align 4, !dbg !4524, !tbaa !2497
  %cmp1 = icmp eq i32 %8, -1, !dbg !4526
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4527

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !4528

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0)) #18, !dbg !4529
  %tobool = icmp ne i32 %call4, 0, !dbg !4529
  br i1 %tobool, label %if.else, label %if.then5, !dbg !4531

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* %use_strcmp, align 1, !dbg !4532, !tbaa !2461
  br label %if.end10, !dbg !4533

if.else:                                          ; preds = %if.end3
  store i8 1, i8* %use_strcmp, align 1, !dbg !4534, !tbaa !2461
  %9 = load i32, i32* @sort_type, align 4, !dbg !4536, !tbaa !2497
  %cmp6 = icmp ne i32 %9, 3, !dbg !4536
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !4539

if.then7:                                         ; preds = %if.else
  br label %if.end9, !dbg !4539

if.else8:                                         ; preds = %if.else
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 3818, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.sort_files, i64 0, i64 0)) #15, !dbg !4536
  unreachable, !dbg !4536

if.end9:                                          ; preds = %if.then7
  call void @initialize_ordering_vector(), !dbg !4540
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then5
  %10 = load i8**, i8*** @sorted_file, align 8, !dbg !4541, !tbaa !2442
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4542, !tbaa !2579
  %12 = load i32, i32* @sort_type, align 4, !dbg !4543, !tbaa !2497
  %13 = load i32, i32* @sort_type, align 4, !dbg !4544, !tbaa !2497
  %cmp11 = icmp eq i32 %13, 4, !dbg !4545
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !4544

cond.true:                                        ; preds = %if.end10
  %14 = load i32, i32* @time_type, align 4, !dbg !4546, !tbaa !2497
  br label %cond.end, !dbg !4544

cond.false:                                       ; preds = %if.end10
  br label %cond.end, !dbg !4544

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %cond.false ], !dbg !4544
  %add12 = add i32 %12, %cond, !dbg !4547
  %idxprom = zext i32 %add12 to i64, !dbg !4548
  %arrayidx = getelementptr inbounds [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]], [7 x [2 x [2 x [2 x i32 (i8*, i8*)*]]]]* @sort_functions, i64 0, i64 %idxprom, !dbg !4548, !ctir !715
  %15 = load i8, i8* %use_strcmp, align 1, !dbg !4549, !tbaa !2461
  %tobool13 = trunc i8 %15 to i1, !dbg !4549
  %idxprom14 = zext i1 %tobool13 to i64, !dbg !4548
  %arrayidx15 = getelementptr inbounds [2 x [2 x [2 x i32 (i8*, i8*)*]]], [2 x [2 x [2 x i32 (i8*, i8*)*]]]* %arrayidx, i64 0, i64 %idxprom14, !dbg !4548, !ctir !723
  %16 = load i8, i8* @sort_reverse, align 1, !dbg !4550, !tbaa !2461
  %tobool16 = trunc i8 %16 to i1, !dbg !4550
  %idxprom17 = zext i1 %tobool16 to i64, !dbg !4548
  %arrayidx18 = getelementptr inbounds [2 x [2 x i32 (i8*, i8*)*]], [2 x [2 x i32 (i8*, i8*)*]]* %arrayidx15, i64 0, i64 %idxprom17, !dbg !4548, !ctir !725
  %17 = load i8, i8* @directories_first, align 1, !dbg !4551, !tbaa !2461
  %tobool19 = trunc i8 %17 to i1, !dbg !4551
  %idxprom20 = zext i1 %tobool19 to i64, !dbg !4548
  %arrayidx21 = getelementptr inbounds [2 x i32 (i8*, i8*)*], [2 x i32 (i8*, i8*)*]* %arrayidx18, i64 0, i64 %idxprom20, !dbg !4548, !ctir !727
  %18 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx21, align 8, !dbg !4548, !tbaa !2442
  call void @mpsort(i8** %10, i64 %11, i32 (i8*, i8*)* %18), !dbg !4552
  br label %return, !dbg !4553

return:                                           ; preds = %cond.end, %if.then2
  ret void, !dbg !4553
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extract_dirs_from_files(i8* %dirname, i1 zeroext %command_line_arg) #0 !dbg !4554 !ctir !700 {
entry:
  %dirname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %i = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ignore_dot_and_dot_dot = alloca i8, align 1, !ctir !141
  %f = alloca %struct.fileinfo*, align 8, !ctir !252
  %name17 = alloca i8*, align 8, !ctir !143
  %f32 = alloca %struct.fileinfo*, align 8, !ctir !252
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !4555, metadata !DIExpression()), !dbg !4556
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4557, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4559, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4561, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata i8* %ignore_dot_and_dot_dot, metadata !4563, metadata !DIExpression()), !dbg !4564
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !4565, !tbaa !2442
  %cmp = icmp ne i8* %0, null, !dbg !4566
  %frombool1 = zext i1 %cmp to i8, !dbg !4564
  store i8 %frombool1, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4564, !tbaa !2461
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !4567, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !4567
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4569

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4570, !tbaa !2442
  %tobool2 = icmp ne %struct.hash_table* %2, null, !dbg !4570
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4571

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !4572, !tbaa !2442
  call void @queue_directory(i8* null, i8* %3, i1 zeroext false), !dbg !4574
  br label %if.end, !dbg !4575

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !4576, !tbaa !2579
  store i64 %4, i64* %i, align 8, !dbg !4578, !tbaa !2579
  br label %for.cond, !dbg !4579

for.cond:                                         ; preds = %if.end27, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !4580, !tbaa !2579
  %dec = add i64 %5, -1, !dbg !4580
  store i64 %dec, i64* %i, align 8, !dbg !4580, !tbaa !2579
  %cmp3 = icmp ne i64 %5, 0, !dbg !4582
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4583

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !4584, metadata !DIExpression()), !dbg !4586
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !4587, !tbaa !2442
  %7 = load i64, i64* %i, align 8, !dbg !4588, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !4587, !ctir !663
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !4587, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !4587
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !4586, !tbaa !2442
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4589, !tbaa !2442
  %call = call zeroext i1 @is_directory(%struct.fileinfo* %10), !dbg !4591
  br i1 %call, label %land.lhs.true4, label %if.end27, !dbg !4592

land.lhs.true4:                                   ; preds = %for.body
  %11 = load i8, i8* %ignore_dot_and_dot_dot, align 1, !dbg !4593, !tbaa !2461
  %tobool5 = trunc i8 %11 to i1, !dbg !4593
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !4594

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4595, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !4596, !ctir !185
  %13 = load i8*, i8** %name, align 8, !dbg !4596, !tbaa !4017, !ctir !143
  %call6 = call zeroext i1 @basename_is_dot_or_dotdot(i8* %13), !dbg !4597
  br i1 %call6, label %if.end27, label %if.then7, !dbg !4598

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true4
  %14 = load i8*, i8** %dirname.addr, align 8, !dbg !4599, !tbaa !2442
  %tobool8 = icmp ne i8* %14, null, !dbg !4599
  br i1 %tobool8, label %lor.lhs.false9, label %if.then14, !dbg !4602

lor.lhs.false9:                                   ; preds = %if.then7
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4603, !tbaa !2442
  %name10 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 0, !dbg !4604, !ctir !185
  %16 = load i8*, i8** %name10, align 8, !dbg !4604, !tbaa !4017, !ctir !143
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !4603, !ctir !143
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !4603, !tbaa !2497
  %conv = sext i8 %17 to i32, !dbg !4603
  %cmp12 = icmp eq i32 %conv, 47, !dbg !4605
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4606

if.then14:                                        ; preds = %lor.lhs.false9, %if.then7
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4607, !tbaa !2442
  %name15 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 0, !dbg !4608, !ctir !185
  %19 = load i8*, i8** %name15, align 8, !dbg !4608, !tbaa !4017, !ctir !143
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4609, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 1, !dbg !4610, !ctir !185
  %21 = load i8*, i8** %linkname, align 8, !dbg !4610, !tbaa !4155, !ctir !143
  %22 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4611, !tbaa !2461
  %tobool16 = trunc i8 %22 to i1, !dbg !4611
  call void @queue_directory(i8* %19, i8* %21, i1 zeroext %tobool16), !dbg !4612
  br label %if.end22, !dbg !4612

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.dbg.declare(metadata i8** %name17, metadata !4613, metadata !DIExpression()), !dbg !4615
  %23 = load i8*, i8** %dirname.addr, align 8, !dbg !4616, !tbaa !2442
  %24 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4617, !tbaa !2442
  %name18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %24, i32 0, i32 0, !dbg !4618, !ctir !185
  %25 = load i8*, i8** %name18, align 8, !dbg !4618, !tbaa !4017, !ctir !143
  %call19 = call i8* @file_name_concat(i8* %23, i8* %25, i8** null), !dbg !4619
  store i8* %call19, i8** %name17, align 8, !dbg !4615, !tbaa !2442
  %26 = load i8*, i8** %name17, align 8, !dbg !4620, !tbaa !2442
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4621, !tbaa !2442
  %linkname20 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 1, !dbg !4622, !ctir !185
  %28 = load i8*, i8** %linkname20, align 8, !dbg !4622, !tbaa !4155, !ctir !143
  %29 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4623, !tbaa !2461
  %tobool21 = trunc i8 %29 to i1, !dbg !4623
  call void @queue_directory(i8* %26, i8* %28, i1 zeroext %tobool21), !dbg !4624
  %30 = load i8*, i8** %name17, align 8, !dbg !4625, !tbaa !2442
  call void @free(i8* %30) #13, !dbg !4626
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then14
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4627, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 4, !dbg !4629, !ctir !185
  %32 = load i32, i32* %filetype, align 8, !dbg !4629, !tbaa !3815, !ctir !36
  %cmp23 = icmp eq i32 %32, 9, !dbg !4630
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4631

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !4632, !tbaa !2442
  call void @free_ent(%struct.fileinfo* %33), !dbg !4633
  br label %if.end26, !dbg !4633

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %if.end27, !dbg !4634

if.end27:                                         ; preds = %if.end26, %lor.lhs.false, %for.body
  br label %for.cond, !dbg !4635, !llvm.loop !4636

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4638, !tbaa !2579
  store i64 0, i64* %j, align 8, !dbg !4640, !tbaa !2579
  br label %for.cond28, !dbg !4641

for.cond28:                                       ; preds = %for.inc, %for.end
  %34 = load i64, i64* %i, align 8, !dbg !4642, !tbaa !2579
  %35 = load i64, i64* @cwd_n_used, align 8, !dbg !4644, !tbaa !2579
  %cmp29 = icmp ult i64 %34, %35, !dbg !4645
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !4646

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f32, metadata !4647, metadata !DIExpression()), !dbg !4649
  %36 = load i8**, i8*** @sorted_file, align 8, !dbg !4650, !tbaa !2442
  %37 = load i64, i64* %i, align 8, !dbg !4651, !tbaa !2579
  %arrayidx33 = getelementptr inbounds i8*, i8** %36, i64 %37, !dbg !4650, !ctir !663
  %38 = load i8*, i8** %arrayidx33, align 8, !dbg !4650, !tbaa !2442
  %39 = bitcast i8* %38 to %struct.fileinfo*, !dbg !4650
  store %struct.fileinfo* %39, %struct.fileinfo** %f32, align 8, !dbg !4649, !tbaa !2442
  %40 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4652, !tbaa !2442
  %41 = bitcast %struct.fileinfo* %40 to i8*, !dbg !4652
  %42 = load i8**, i8*** @sorted_file, align 8, !dbg !4653, !tbaa !2442
  %43 = load i64, i64* %j, align 8, !dbg !4654, !tbaa !2579
  %arrayidx34 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !4653, !ctir !663
  store i8* %41, i8** %arrayidx34, align 8, !dbg !4655, !tbaa !2442
  %44 = load %struct.fileinfo*, %struct.fileinfo** %f32, align 8, !dbg !4656, !tbaa !2442
  %filetype35 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %44, i32 0, i32 4, !dbg !4657, !ctir !185
  %45 = load i32, i32* %filetype35, align 8, !dbg !4657, !tbaa !3815, !ctir !36
  %cmp36 = icmp ne i32 %45, 9, !dbg !4658
  %conv37 = zext i1 %cmp36 to i32, !dbg !4658
  %conv38 = sext i32 %conv37 to i64, !dbg !4659
  %46 = load i64, i64* %j, align 8, !dbg !4660, !tbaa !2579
  %add = add i64 %46, %conv38, !dbg !4660
  store i64 %add, i64* %j, align 8, !dbg !4660, !tbaa !2579
  br label %for.inc, !dbg !4661

for.inc:                                          ; preds = %for.body31
  %47 = load i64, i64* %i, align 8, !dbg !4662, !tbaa !2579
  %inc = add i64 %47, 1, !dbg !4662
  store i64 %inc, i64* %i, align 8, !dbg !4662, !tbaa !2579
  br label %for.cond28, !dbg !4663, !llvm.loop !4664

for.end39:                                        ; preds = %for.cond28
  %48 = load i64, i64* %j, align 8, !dbg !4666, !tbaa !2579
  store i64 %48, i64* @cwd_n_used, align 8, !dbg !4667, !tbaa !2579
  ret void, !dbg !4668
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_current_files() #0 !dbg !4669 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4670, metadata !DIExpression()), !dbg !4671
  %0 = load i32, i32* @format, align 4, !dbg !4672, !tbaa !2497
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb8
    i32 0, label %sw.bb9
  ], !dbg !4673

sw.bb:                                            ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4674, !tbaa !2579
  br label %for.cond, !dbg !4677

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i64, i64* %i, align 8, !dbg !4678, !tbaa !2579
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !4680, !tbaa !2579
  %cmp = icmp ult i64 %1, %2, !dbg !4681
  br i1 %cmp, label %for.body, label %for.end, !dbg !4682

for.body:                                         ; preds = %for.cond
  %3 = load i8**, i8*** @sorted_file, align 8, !dbg !4683, !tbaa !2442
  %4 = load i64, i64* %i, align 8, !dbg !4685, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %4, !dbg !4683, !ctir !663
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4683, !tbaa !2442
  %6 = bitcast i8* %5 to %struct.fileinfo*, !dbg !4683
  %call = call i64 @print_file_name_and_frills(%struct.fileinfo* %6, i64 0), !dbg !4686
  %call1 = call i32 @putchar_unlocked(i32 10), !dbg !4687
  br label %for.inc, !dbg !4688

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !4689, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !4689
  store i64 %inc, i64* %i, align 8, !dbg !4689, !tbaa !2579
  br label %for.cond, !dbg !4690, !llvm.loop !4691

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4693

sw.bb2:                                           ; preds = %entry
  %8 = load i64, i64* @line_length, align 8, !dbg !4694, !tbaa !2579
  %tobool = icmp ne i64 %8, 0, !dbg !4694
  br i1 %tobool, label %if.else, label %if.then, !dbg !4696

if.then:                                          ; preds = %sw.bb2
  call void @print_with_separator(i8 signext 32), !dbg !4697
  br label %if.end, !dbg !4697

if.else:                                          ; preds = %sw.bb2
  call void @print_many_per_line(), !dbg !4698
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !4699

sw.bb3:                                           ; preds = %entry
  %9 = load i64, i64* @line_length, align 8, !dbg !4700, !tbaa !2579
  %tobool4 = icmp ne i64 %9, 0, !dbg !4700
  br i1 %tobool4, label %if.else6, label %if.then5, !dbg !4702

if.then5:                                         ; preds = %sw.bb3
  call void @print_with_separator(i8 signext 32), !dbg !4703
  br label %if.end7, !dbg !4703

if.else6:                                         ; preds = %sw.bb3
  call void @print_horizontal(), !dbg !4704
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  br label %sw.epilog, !dbg !4705

sw.bb8:                                           ; preds = %entry
  call void @print_with_separator(i8 signext 44), !dbg !4706
  br label %sw.epilog, !dbg !4707

sw.bb9:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4708, !tbaa !2579
  br label %for.cond10, !dbg !4710

for.cond10:                                       ; preds = %for.inc16, %sw.bb9
  %10 = load i64, i64* %i, align 8, !dbg !4711, !tbaa !2579
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !4713, !tbaa !2579
  %cmp11 = icmp ult i64 %10, %11, !dbg !4714
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !4715

for.body12:                                       ; preds = %for.cond10
  call void @set_normal_color(), !dbg !4716
  %12 = load i8**, i8*** @sorted_file, align 8, !dbg !4718, !tbaa !2442
  %13 = load i64, i64* %i, align 8, !dbg !4719, !tbaa !2579
  %arrayidx13 = getelementptr inbounds i8*, i8** %12, i64 %13, !dbg !4718, !ctir !663
  %14 = load i8*, i8** %arrayidx13, align 8, !dbg !4718, !tbaa !2442
  %15 = bitcast i8* %14 to %struct.fileinfo*, !dbg !4718
  call void @print_long_format(%struct.fileinfo* %15), !dbg !4720
  br label %do.body, !dbg !4721

do.body:                                          ; preds = %for.body12
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !4722
  %16 = load i64, i64* @dired_pos, align 8, !dbg !4722, !tbaa !2579
  %inc15 = add i64 %16, 1, !dbg !4722
  store i64 %inc15, i64* @dired_pos, align 8, !dbg !4722, !tbaa !2579
  br label %do.end, !dbg !4722

do.end:                                           ; preds = %do.body
  br label %for.inc16, !dbg !4724

for.inc16:                                        ; preds = %do.end
  %17 = load i64, i64* %i, align 8, !dbg !4725, !tbaa !2579
  %inc17 = add i64 %17, 1, !dbg !4725
  store i64 %inc17, i64* %i, align 8, !dbg !4725, !tbaa !2579
  br label %for.cond10, !dbg !4726, !llvm.loop !4727

for.end18:                                        ; preds = %for.cond10
  br label %sw.epilog, !dbg !4729

sw.epilog:                                        ; preds = %entry, %for.end18, %sw.bb8, %if.end7, %if.end, %for.end
  ret void, !dbg !4730
}

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal { i64, i64 } @dev_ino_pop() #0 !dbg !4731 !ctir !346 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !253
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !4734, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !4736, metadata !DIExpression()), !dbg !4737
  store i32 16, i32* %dev_ino_size, align 4, !dbg !4737, !tbaa !2436
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !4738, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !4738
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !4741, metadata !DIExpression()), !dbg !4743
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !4743, !ctir !349
  %2 = load i8*, i8** %next_free, align 8, !dbg !4743, !tbaa !4744, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !4743, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !4743, !ctir !349
  %4 = load i8*, i8** %object_base, align 8, !dbg !4743, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4743
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4743
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4743
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !4743, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !4743, !tbaa !2579
  %cmp = icmp ule i64 %conv, %5, !dbg !4738
  br i1 %cmp, label %if.then, label %if.else, !dbg !4747

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4747

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.dev_ino_pop, i64 0, i64 0)) #15, !dbg !4738
  unreachable, !dbg !4738

if.end:                                           ; preds = %if.then
  %6 = load i32, i32* %dev_ino_size, align 4, !dbg !4748, !tbaa !2436
  %sub = sub nsw i32 0, %6, !dbg !4748
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4748, !tbaa !4744, !ctir !143
  %idx.ext = sext i32 %sub to i64, !dbg !4748
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !4748
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4748, !tbaa !4744, !ctir !143
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !4749, !tbaa !4744, !ctir !143
  store i8* %8, i8** %vdi, align 8, !dbg !4750, !tbaa !2442
  %9 = load i8*, i8** %vdi, align 8, !dbg !4751, !tbaa !2442
  %10 = bitcast i8* %9 to %struct.dev_ino*, !dbg !4751
  store %struct.dev_ino* %10, %struct.dev_ino** %di, align 8, !dbg !4752, !tbaa !2442
  %11 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !4753, !tbaa !2442
  %12 = bitcast %struct.dev_ino* %retval to i8*, !dbg !4754
  %13 = bitcast %struct.dev_ino* %11 to i8*, !dbg !4754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !4754, !tbaa.struct !4755
  %14 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !4756
  %15 = load { i64, i64 }, { i64, i64 }* %14, align 8, !dbg !4756
  ret { i64, i64 } %15, !dbg !4756
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_pending_ent(%struct.pending* %p) #0 !dbg !4757 !ctir !395 {
entry:
  %p.addr = alloca %struct.pending*, align 8
  store %struct.pending* %p, %struct.pending** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.pending** %p.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  %0 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4760, !tbaa !2442
  %name = getelementptr inbounds %struct.pending, %struct.pending* %0, i32 0, i32 0, !dbg !4761, !ctir !238
  %1 = load i8*, i8** %name, align 8, !dbg !4761, !tbaa !2660, !ctir !143
  call void @free(i8* %1) #13, !dbg !4762
  %2 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4763, !tbaa !2442
  %realname = getelementptr inbounds %struct.pending, %struct.pending* %2, i32 0, i32 1, !dbg !4764, !ctir !238
  %3 = load i8*, i8** %realname, align 8, !dbg !4764, !tbaa !2688, !ctir !143
  call void @free(i8* %3) #13, !dbg !4765
  %4 = load %struct.pending*, %struct.pending** %p.addr, align 8, !dbg !4766, !tbaa !2442
  %5 = bitcast %struct.pending* %4 to i8*, !dbg !4766
  call void @free(i8* %5) #13, !dbg !4767
  ret void, !dbg !4768
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_dir(i8* %name, i8* %realname, i1 zeroext %command_line_arg) #0 !dbg !979 !ctir !607 {
entry:
  %name.addr = alloca i8*, align 8
  %realname.addr = alloca i8*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %next = alloca %struct.dirent*, align 8, !ctir !613
  %total_blocks = alloca i64, align 8, !ctir !168
  %dir_stat = alloca %struct.stat, align 8, !ctir !191
  %fd = alloca i32, align 4, !ctir !27
  %absolute_name = alloca i8*, align 8, !ctir !143
  %type = alloca i32, align 4, !ctir !36
  %p = alloca i8*, align 8, !ctir !146
  %buf = alloca [652 x i8], align 16, !ctir !622
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4769, metadata !DIExpression()), !dbg !4770
  store i8* %realname, i8** %realname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %realname.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4775, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.declare(metadata %struct.dirent** %next, metadata !4777, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.declare(metadata i64* %total_blocks, metadata !4779, metadata !DIExpression()), !dbg !4780
  store i64 0, i64* %total_blocks, align 8, !dbg !4780, !tbaa !2579
  %call = call i32* @__errno_location() #17, !dbg !4781
  store i32 0, i32* %call, align 4, !dbg !4782, !tbaa !2436, !ctir !27
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4783, !tbaa !2442
  %call1 = call %struct.__dirstream* @opendir(i8* %0), !dbg !4784
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4785, !tbaa !2442
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4786, !tbaa !2442
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !4786
  br i1 %tobool, label %if.end, label %if.then, !dbg !4788

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4789, !tbaa !2461
  %tobool2 = trunc i8 %2 to i1, !dbg !4789
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !4791
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4792, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool2, i8* %call3, i8* %3), !dbg !4793
  br label %if.end150, !dbg !4794

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !4795, !tbaa !2442
  %tobool4 = icmp ne %struct.hash_table* %4, null, !dbg !4795
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4797

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.stat* %dir_stat, metadata !4798, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4801, metadata !DIExpression()), !dbg !4802
  %5 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4803, !tbaa !2442
  %call6 = call i32 @dirfd(%struct.__dirstream* %5) #13, !dbg !4804
  store i32 %call6, i32* %fd, align 4, !dbg !4802, !tbaa !2436
  %6 = load i32, i32* %fd, align 4, !dbg !4805, !tbaa !2436
  %cmp = icmp sle i32 0, %6, !dbg !4807
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4808

cond.true:                                        ; preds = %if.then5
  %7 = load i32, i32* %fd, align 4, !dbg !4809, !tbaa !2436
  %call7 = call i32 @fstat(i32 %7, %struct.stat* %dir_stat) #13, !dbg !4810
  br label %cond.end, !dbg !4808

cond.false:                                       ; preds = %if.then5
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4811, !tbaa !2442
  %call8 = call i32 @stat(i8* %8, %struct.stat* %dir_stat) #13, !dbg !4812
  br label %cond.end, !dbg !4808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !4808
  %cmp9 = icmp slt i32 %cond, 0, !dbg !4813
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !4814

if.then10:                                        ; preds = %cond.end
  %9 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4815, !tbaa !2461
  %tobool11 = trunc i8 %9 to i1, !dbg !4815
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.204, i64 0, i64 0)) #13, !dbg !4817
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4818, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool11, i8* %call12, i8* %10), !dbg !4819
  %11 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4820, !tbaa !2442
  %call13 = call i32 @closedir(%struct.__dirstream* %11), !dbg !4821
  br label %if.end150, !dbg !4822

if.end14:                                         ; preds = %cond.end
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4823, !ctir !191
  %12 = load i64, i64* %st_dev, align 8, !dbg !4823, !tbaa !4825, !ctir !195
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4826, !ctir !191
  %13 = load i64, i64* %st_ino, align 8, !dbg !4826, !tbaa !4827, !ctir !197
  %call15 = call zeroext i1 @visit_dir(i64 %12, i64 %13), !dbg !4828
  br i1 %call15, label %if.then16, label %if.end20, !dbg !4829

if.then16:                                        ; preds = %if.end14
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0)) #13, !dbg !4830
  %14 = load i8*, i8** %name.addr, align 8, !dbg !4832, !tbaa !2442
  %call18 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %14), !dbg !4832
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17, i8* %call18), !dbg !4833
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4834, !tbaa !2442
  %call19 = call i32 @closedir(%struct.__dirstream* %15), !dbg !4835
  call void @set_exit_status(i1 zeroext true), !dbg !4836
  br label %if.end150, !dbg !4837

if.end20:                                         ; preds = %if.end14
  %st_dev21 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 0, !dbg !4838, !ctir !191
  %16 = load i64, i64* %st_dev21, align 8, !dbg !4838, !tbaa !4825, !ctir !195
  %st_ino22 = getelementptr inbounds %struct.stat, %struct.stat* %dir_stat, i32 0, i32 1, !dbg !4839, !ctir !191
  %17 = load i64, i64* %st_ino22, align 8, !dbg !4839, !tbaa !4827, !ctir !197
  call void @dev_ino_push(i64 %16, i64 %17), !dbg !4840
  br label %if.end23, !dbg !4841

if.end23:                                         ; preds = %if.end20, %if.end
  call void @clear_files(), !dbg !4842
  %18 = load i8, i8* @recursive, align 1, !dbg !4843, !tbaa !2461
  %tobool24 = trunc i8 %18 to i1, !dbg !4843
  br i1 %tobool24, label %if.then26, label %lor.lhs.false, !dbg !4845

lor.lhs.false:                                    ; preds = %if.end23
  %19 = load i8, i8* @print_dir_name, align 1, !dbg !4846, !tbaa !2461
  %tobool25 = trunc i8 %19 to i1, !dbg !4846
  br i1 %tobool25, label %if.then26, label %if.end58, !dbg !4847

if.then26:                                        ; preds = %lor.lhs.false, %if.end23
  %20 = load i8, i8* @print_dir.first, align 1, !dbg !4848, !tbaa !2461
  %tobool27 = trunc i8 %20 to i1, !dbg !4848
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4851

if.then28:                                        ; preds = %if.then26
  br label %do.body, !dbg !4852

do.body:                                          ; preds = %if.then28
  %call29 = call i32 @putchar_unlocked(i32 10), !dbg !4853
  %21 = load i64, i64* @dired_pos, align 8, !dbg !4853, !tbaa !2579
  %inc = add i64 %21, 1, !dbg !4853
  store i64 %inc, i64* @dired_pos, align 8, !dbg !4853, !tbaa !2579
  br label %do.end, !dbg !4853

do.end:                                           ; preds = %do.body
  br label %if.end30, !dbg !4853

if.end30:                                         ; preds = %do.end, %if.then26
  store i8 0, i8* @print_dir.first, align 1, !dbg !4855, !tbaa !2461
  br label %do.body31, !dbg !4856

do.body31:                                        ; preds = %if.end30
  %22 = load i8, i8* @dired, align 1, !dbg !4857, !tbaa !2461
  %tobool32 = trunc i8 %22 to i1, !dbg !4857
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !4860

if.then33:                                        ; preds = %do.body31
  br label %do.body34, !dbg !4857

do.body34:                                        ; preds = %if.then33
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4861, !tbaa !2442
  %call35 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %23), !dbg !4861
  %24 = load i64, i64* @dired_pos, align 8, !dbg !4861, !tbaa !2579
  %add = add i64 %24, 2, !dbg !4861
  store i64 %add, i64* @dired_pos, align 8, !dbg !4861, !tbaa !2579
  br label %do.end36, !dbg !4861

do.end36:                                         ; preds = %do.body34
  br label %if.end37, !dbg !4861

if.end37:                                         ; preds = %do.end36, %do.body31
  br label %do.end38, !dbg !4860

do.end38:                                         ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i8** %absolute_name, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i8* null, i8** %absolute_name, align 8, !dbg !4864, !tbaa !2442
  %25 = load i8, i8* @print_hyperlink, align 1, !dbg !4865, !tbaa !2461
  %tobool39 = trunc i8 %25 to i1, !dbg !4865
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !4867

if.then40:                                        ; preds = %do.end38
  %26 = load i8*, i8** %name.addr, align 8, !dbg !4868, !tbaa !2442
  %call41 = call i8* @canonicalize_filename_mode(i8* %26, i32 2), !dbg !4870
  store i8* %call41, i8** %absolute_name, align 8, !dbg !4871, !tbaa !2442
  %27 = load i8*, i8** %absolute_name, align 8, !dbg !4872, !tbaa !2442
  %tobool42 = icmp ne i8* %27, null, !dbg !4872
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !4874

if.then43:                                        ; preds = %if.then40
  %28 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4875, !tbaa !2461
  %tobool44 = trunc i8 %28 to i1, !dbg !4875
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.207, i64 0, i64 0)) #13, !dbg !4876
  %29 = load i8*, i8** %name.addr, align 8, !dbg !4877, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool44, i8* %call45, i8* %29), !dbg !4878
  br label %if.end46, !dbg !4878

if.end46:                                         ; preds = %if.then43, %if.then40
  br label %if.end47, !dbg !4879

if.end47:                                         ; preds = %if.end46, %do.end38
  %30 = load i8*, i8** %realname.addr, align 8, !dbg !4880, !tbaa !2442
  %tobool48 = icmp ne i8* %30, null, !dbg !4880
  br i1 %tobool48, label %cond.true49, label %cond.false50, !dbg !4880

cond.true49:                                      ; preds = %if.end47
  %31 = load i8*, i8** %realname.addr, align 8, !dbg !4881, !tbaa !2442
  br label %cond.end51, !dbg !4880

cond.false50:                                     ; preds = %if.end47
  %32 = load i8*, i8** %name.addr, align 8, !dbg !4882, !tbaa !2442
  br label %cond.end51, !dbg !4880

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i8* [ %31, %cond.true49 ], [ %32, %cond.false50 ], !dbg !4880
  %33 = load %struct.quoting_options*, %struct.quoting_options** @dirname_quoting_options, align 8, !dbg !4883, !tbaa !2442
  %34 = load i8*, i8** %absolute_name, align 8, !dbg !4884, !tbaa !2442
  %call53 = call i64 @quote_name(i8* %cond52, %struct.quoting_options* %33, i32 -1, %struct.bin_str* null, i1 zeroext true, %struct.obstack* @subdired_obstack, i8* %34), !dbg !4885
  %35 = load i8*, i8** %absolute_name, align 8, !dbg !4886, !tbaa !2442
  call void @free(i8* %35) #13, !dbg !4887
  br label %do.body54, !dbg !4888

do.body54:                                        ; preds = %cond.end51
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4889, !tbaa !2442
  %call55 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i64 0, i64 0), %struct._IO_FILE* %36), !dbg !4889
  %37 = load i64, i64* @dired_pos, align 8, !dbg !4889, !tbaa !2579
  %add56 = add i64 %37, 2, !dbg !4889
  store i64 %add56, i64* @dired_pos, align 8, !dbg !4889, !tbaa !2579
  br label %do.end57, !dbg !4889

do.end57:                                         ; preds = %do.body54
  br label %if.end58, !dbg !4891

if.end58:                                         ; preds = %do.end57, %lor.lhs.false
  br label %while.body, !dbg !4892

while.body:                                       ; preds = %if.end58, %if.end100
  %call59 = call i32* @__errno_location() #17, !dbg !4893
  store i32 0, i32* %call59, align 4, !dbg !4895, !tbaa !2436, !ctir !27
  %38 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4896, !tbaa !2442
  %call60 = call %struct.dirent* @readdir(%struct.__dirstream* %38), !dbg !4897
  store %struct.dirent* %call60, %struct.dirent** %next, align 8, !dbg !4898, !tbaa !2442
  %39 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4899, !tbaa !2442
  %tobool61 = icmp ne %struct.dirent* %39, null, !dbg !4899
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !4901

if.then62:                                        ; preds = %while.body
  %40 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4902, !tbaa !2442
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4, !dbg !4905, !ctir !614
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4902
  %call63 = call zeroext i1 @file_ignored(i8* %arraydecay), !dbg !4906
  br i1 %call63, label %if.end86, label %if.then64, !dbg !4907

if.then64:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4908, metadata !DIExpression()), !dbg !4910
  store i32 0, i32* %type, align 4, !dbg !4910, !tbaa !2497
  %41 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4911, !tbaa !2442
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %41, i32 0, i32 3, !dbg !4912, !ctir !614
  %42 = load i8, i8* %d_type, align 2, !dbg !4912, !tbaa !4913, !ctir !591
  %conv = zext i8 %42 to i32, !dbg !4911
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 2, label %sw.bb65
    i32 4, label %sw.bb66
    i32 1, label %sw.bb67
    i32 10, label %sw.bb68
    i32 8, label %sw.bb69
    i32 12, label %sw.bb70
    i32 14, label %sw.bb71
  ], !dbg !4915

sw.bb:                                            ; preds = %if.then64
  store i32 4, i32* %type, align 4, !dbg !4916, !tbaa !2497
  br label %sw.epilog, !dbg !4918

sw.bb65:                                          ; preds = %if.then64
  store i32 2, i32* %type, align 4, !dbg !4919, !tbaa !2497
  br label %sw.epilog, !dbg !4920

sw.bb66:                                          ; preds = %if.then64
  store i32 3, i32* %type, align 4, !dbg !4921, !tbaa !2497
  br label %sw.epilog, !dbg !4922

sw.bb67:                                          ; preds = %if.then64
  store i32 1, i32* %type, align 4, !dbg !4923, !tbaa !2497
  br label %sw.epilog, !dbg !4924

sw.bb68:                                          ; preds = %if.then64
  store i32 6, i32* %type, align 4, !dbg !4925, !tbaa !2497
  br label %sw.epilog, !dbg !4926

sw.bb69:                                          ; preds = %if.then64
  store i32 5, i32* %type, align 4, !dbg !4927, !tbaa !2497
  br label %sw.epilog, !dbg !4928

sw.bb70:                                          ; preds = %if.then64
  store i32 7, i32* %type, align 4, !dbg !4929, !tbaa !2497
  br label %sw.epilog, !dbg !4930

sw.bb71:                                          ; preds = %if.then64
  store i32 8, i32* %type, align 4, !dbg !4931, !tbaa !2497
  br label %sw.epilog, !dbg !4932

sw.epilog:                                        ; preds = %if.then64, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb
  %43 = load %struct.dirent*, %struct.dirent** %next, align 8, !dbg !4933, !tbaa !2442
  %d_name72 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !4934, !ctir !614
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name72, i64 0, i64 0, !dbg !4933
  %44 = load i32, i32* %type, align 4, !dbg !4935, !tbaa !2497
  %45 = load i8*, i8** %name.addr, align 8, !dbg !4936, !tbaa !2442
  %call74 = call i64 @gobble_file(i8* %arraydecay73, i32 %44, i64 0, i1 zeroext false, i8* %45), !dbg !4937
  %46 = load i64, i64* %total_blocks, align 8, !dbg !4938, !tbaa !2579
  %add75 = add i64 %46, %call74, !dbg !4938
  store i64 %add75, i64* %total_blocks, align 8, !dbg !4938, !tbaa !2579
  %47 = load i32, i32* @format, align 4, !dbg !4939, !tbaa !2497
  %cmp76 = icmp eq i32 %47, 1, !dbg !4941
  br i1 %cmp76, label %land.lhs.true, label %if.end85, !dbg !4942

land.lhs.true:                                    ; preds = %sw.epilog
  %48 = load i32, i32* @sort_type, align 4, !dbg !4943, !tbaa !2497
  %cmp78 = icmp eq i32 %48, -1, !dbg !4944
  br i1 %cmp78, label %land.lhs.true80, label %if.end85, !dbg !4945

land.lhs.true80:                                  ; preds = %land.lhs.true
  %49 = load i8, i8* @print_block_size, align 1, !dbg !4946, !tbaa !2461
  %tobool81 = trunc i8 %49 to i1, !dbg !4946
  br i1 %tobool81, label %if.end85, label %land.lhs.true82, !dbg !4947

land.lhs.true82:                                  ; preds = %land.lhs.true80
  %50 = load i8, i8* @recursive, align 1, !dbg !4948, !tbaa !2461
  %tobool83 = trunc i8 %50 to i1, !dbg !4948
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !4949

if.then84:                                        ; preds = %land.lhs.true82
  call void @sort_files(), !dbg !4950
  call void @print_current_files(), !dbg !4952
  call void @clear_files(), !dbg !4953
  br label %if.end85, !dbg !4954

if.end85:                                         ; preds = %if.then84, %land.lhs.true82, %land.lhs.true80, %land.lhs.true, %sw.epilog
  br label %if.end86, !dbg !4955

if.end86:                                         ; preds = %if.end85, %if.then62
  br label %if.end100, !dbg !4956

if.else:                                          ; preds = %while.body
  %call87 = call i32* @__errno_location() #17, !dbg !4957
  %51 = load i32, i32* %call87, align 4, !dbg !4957, !tbaa !2436, !ctir !27
  %cmp88 = icmp ne i32 %51, 0, !dbg !4959
  br i1 %cmp88, label %if.then90, label %if.else98, !dbg !4960

if.then90:                                        ; preds = %if.else
  %52 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4961, !tbaa !2461
  %tobool91 = trunc i8 %52 to i1, !dbg !4961
  %call92 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.209, i64 0, i64 0)) #13, !dbg !4963
  %53 = load i8*, i8** %name.addr, align 8, !dbg !4964, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool91, i8* %call92, i8* %53), !dbg !4965
  %call93 = call i32* @__errno_location() #17, !dbg !4966
  %54 = load i32, i32* %call93, align 4, !dbg !4966, !tbaa !2436, !ctir !27
  %cmp94 = icmp ne i32 %54, 75, !dbg !4968
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4969

if.then96:                                        ; preds = %if.then90
  br label %while.end, !dbg !4970

if.end97:                                         ; preds = %if.then90
  br label %if.end99, !dbg !4971

if.else98:                                        ; preds = %if.else
  br label %while.end, !dbg !4972

if.end99:                                         ; preds = %if.end97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end86
  call void @process_signals(), !dbg !4973
  br label %while.body, !dbg !4892, !llvm.loop !4974

while.end:                                        ; preds = %if.else98, %if.then96
  %55 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4976, !tbaa !2442
  %call101 = call i32 @closedir(%struct.__dirstream* %55), !dbg !4978
  %cmp102 = icmp ne i32 %call101, 0, !dbg !4979
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !4980

if.then104:                                       ; preds = %while.end
  %56 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4981, !tbaa !2461
  %tobool105 = trunc i8 %56 to i1, !dbg !4981
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #13, !dbg !4983
  %57 = load i8*, i8** %name.addr, align 8, !dbg !4984, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool105, i8* %call106, i8* %57), !dbg !4985
  br label %if.end107, !dbg !4986

if.end107:                                        ; preds = %if.then104, %while.end
  call void @sort_files(), !dbg !4987
  %58 = load i8, i8* @recursive, align 1, !dbg !4988, !tbaa !2461
  %tobool108 = trunc i8 %58 to i1, !dbg !4988
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !4990

if.then109:                                       ; preds = %if.end107
  %59 = load i8*, i8** %name.addr, align 8, !dbg !4991, !tbaa !2442
  call void @extract_dirs_from_files(i8* %59, i1 zeroext false), !dbg !4992
  br label %if.end110, !dbg !4992

if.end110:                                        ; preds = %if.then109, %if.end107
  %60 = load i32, i32* @format, align 4, !dbg !4993, !tbaa !2497
  %cmp111 = icmp eq i32 %60, 0, !dbg !4995
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !4996

lor.lhs.false113:                                 ; preds = %if.end110
  %61 = load i8, i8* @print_block_size, align 1, !dbg !4997, !tbaa !2461
  %tobool114 = trunc i8 %61 to i1, !dbg !4997
  br i1 %tobool114, label %if.then116, label %if.end147, !dbg !4998

if.then116:                                       ; preds = %lor.lhs.false113, %if.end110
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4999, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5002, metadata !DIExpression()), !dbg !5003
  br label %do.body117, !dbg !5004

do.body117:                                       ; preds = %if.then116
  %62 = load i8, i8* @dired, align 1, !dbg !5005, !tbaa !2461
  %tobool118 = trunc i8 %62 to i1, !dbg !5005
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !5008

if.then119:                                       ; preds = %do.body117
  br label %do.body120, !dbg !5005

do.body120:                                       ; preds = %if.then119
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5009, !tbaa !2442
  %call121 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %63), !dbg !5009
  %64 = load i64, i64* @dired_pos, align 8, !dbg !5009, !tbaa !2579
  %add122 = add i64 %64, 2, !dbg !5009
  store i64 %add122, i64* @dired_pos, align 8, !dbg !5009, !tbaa !2579
  br label %do.end123, !dbg !5009

do.end123:                                        ; preds = %do.body120
  br label %if.end124, !dbg !5009

if.end124:                                        ; preds = %do.end123, %do.body117
  br label %do.end125, !dbg !5008

do.end125:                                        ; preds = %if.end124
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0)) #13, !dbg !5011
  store i8* %call126, i8** %p, align 8, !dbg !5012, !tbaa !2442
  br label %do.body127, !dbg !5013

do.body127:                                       ; preds = %do.end125
  %65 = load i8*, i8** %p, align 8, !dbg !5014, !tbaa !2442
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5014, !tbaa !2442
  %call128 = call i32 @fputs_unlocked(i8* %65, %struct._IO_FILE* %66), !dbg !5014
  %67 = load i8*, i8** %p, align 8, !dbg !5014, !tbaa !2442
  %call129 = call i64 @strlen(i8* %67) #16, !dbg !5014
  %68 = load i64, i64* @dired_pos, align 8, !dbg !5014, !tbaa !2579
  %add130 = add i64 %68, %call129, !dbg !5014
  store i64 %add130, i64* @dired_pos, align 8, !dbg !5014, !tbaa !2579
  br label %do.end131, !dbg !5014

do.end131:                                        ; preds = %do.body127
  br label %do.body132, !dbg !5016

do.body132:                                       ; preds = %do.end131
  %call133 = call i32 @putchar_unlocked(i32 32), !dbg !5017
  %69 = load i64, i64* @dired_pos, align 8, !dbg !5017, !tbaa !2579
  %inc134 = add i64 %69, 1, !dbg !5017
  store i64 %inc134, i64* @dired_pos, align 8, !dbg !5017, !tbaa !2579
  br label %do.end135, !dbg !5017

do.end135:                                        ; preds = %do.body132
  %70 = load i64, i64* %total_blocks, align 8, !dbg !5019, !tbaa !2579
  %arraydecay136 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5020
  %71 = load i32, i32* @human_output_opts, align 4, !dbg !5021, !tbaa !2436
  %72 = load i64, i64* @output_block_size, align 8, !dbg !5022, !tbaa !2579
  %call137 = call i8* @human_readable(i64 %70, i8* %arraydecay136, i32 %71, i64 512, i64 %72), !dbg !5023
  store i8* %call137, i8** %p, align 8, !dbg !5024, !tbaa !2442
  br label %do.body138, !dbg !5025

do.body138:                                       ; preds = %do.end135
  %73 = load i8*, i8** %p, align 8, !dbg !5026, !tbaa !2442
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5026, !tbaa !2442
  %call139 = call i32 @fputs_unlocked(i8* %73, %struct._IO_FILE* %74), !dbg !5026
  %75 = load i8*, i8** %p, align 8, !dbg !5026, !tbaa !2442
  %call140 = call i64 @strlen(i8* %75) #16, !dbg !5026
  %76 = load i64, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2579
  %add141 = add i64 %76, %call140, !dbg !5026
  store i64 %add141, i64* @dired_pos, align 8, !dbg !5026, !tbaa !2579
  br label %do.end142, !dbg !5026

do.end142:                                        ; preds = %do.body138
  br label %do.body143, !dbg !5028

do.body143:                                       ; preds = %do.end142
  %call144 = call i32 @putchar_unlocked(i32 10), !dbg !5029
  %77 = load i64, i64* @dired_pos, align 8, !dbg !5029, !tbaa !2579
  %inc145 = add i64 %77, 1, !dbg !5029
  store i64 %inc145, i64* @dired_pos, align 8, !dbg !5029, !tbaa !2579
  br label %do.end146, !dbg !5029

do.end146:                                        ; preds = %do.body143
  br label %if.end147, !dbg !5031

if.end147:                                        ; preds = %do.end146, %lor.lhs.false113
  %78 = load i64, i64* @cwd_n_used, align 8, !dbg !5032, !tbaa !2579
  %tobool148 = icmp ne i64 %78, 0, !dbg !5032
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !5034

if.then149:                                       ; preds = %if.end147
  call void @print_current_files(), !dbg !5035
  br label %if.end150, !dbg !5035

if.end150:                                        ; preds = %if.then, %if.then10, %if.then16, %if.then149, %if.end147
  ret void, !dbg !5036
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_color() #0 !dbg !5037 !ctir !341 {
entry:
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5038
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5039
  ret void, !dbg !5040
}

declare dso_local i32 @fflush_unlocked(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_restore() #0 !dbg !5041 !ctir !341 {
entry:
  call void @signal_setup(i1 zeroext false), !dbg !5042
  ret void, !dbg !5043
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dired_dump_obstack(i8* %prefix, %struct.obstack* %os) #0 !dbg !5044 !ctir !508 {
entry:
  %prefix.addr = alloca i8*, align 8
  %os.addr = alloca %struct.obstack*, align 8
  %n_pos = alloca i64, align 8, !ctir !149
  %__o = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  %pos = alloca i64*, align 8, !ctir !148
  %__o1 = alloca %struct.obstack*, align 8, !ctir !510
  %__value = alloca i8*, align 8, !ctir !167
  %tmp25 = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  store %struct.obstack* %os, %struct.obstack** %os.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %os.addr, metadata !5047, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.declare(metadata i64* %n_pos, metadata !5049, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5051, metadata !DIExpression()), !dbg !5053
  %0 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5053, !tbaa !2442
  store %struct.obstack* %0, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 3, !dbg !5053, !ctir !349
  %2 = load i8*, i8** %next_free, align 8, !dbg !5053, !tbaa !4744, !ctir !143
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5053, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 2, !dbg !5053, !ctir !349
  %4 = load i8*, i8** %object_base, align 8, !dbg !5053, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !5053
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !5053
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5053
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5053, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !5053, !tbaa !2579
  %div = udiv i64 %5, 8, !dbg !5054
  store i64 %div, i64* %n_pos, align 8, !dbg !5055, !tbaa !2579
  %6 = load i64, i64* %n_pos, align 8, !dbg !5056, !tbaa !2579
  %cmp = icmp ugt i64 %6, 0, !dbg !5058
  br i1 %cmp, label %if.then, label %if.end29, !dbg !5059

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64** %pos, metadata !5060, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5063, metadata !DIExpression()), !dbg !5065
  %7 = load %struct.obstack*, %struct.obstack** %os.addr, align 8, !dbg !5065, !tbaa !2442
  store %struct.obstack* %7, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %__value, metadata !5066, metadata !DIExpression()), !dbg !5065
  %8 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %object_base1 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 2, !dbg !5065, !ctir !350
  %9 = load i8*, i8** %object_base1, align 8, !dbg !5065, !tbaa !4746, !ctir !143
  store i8* %9, i8** %__value, align 8, !dbg !5065, !tbaa !2442
  %10 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5067, !tbaa !2442
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3, !dbg !5067, !ctir !350
  %11 = load i8*, i8** %next_free2, align 8, !dbg !5067, !tbaa !4744, !ctir !143
  %12 = load i8*, i8** %__value, align 8, !dbg !5067, !tbaa !2442
  %cmp3 = icmp eq i8* %11, %12, !dbg !5067
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5065

if.then4:                                         ; preds = %if.then
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5067, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 10, !dbg !5067, !ctir !350
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !5067
  %bf.clear = and i8 %bf.load, -3, !dbg !5067
  %bf.set = or i8 %bf.clear, 2, !dbg !5067
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !5067
  br label %if.end, !dbg !5067

if.end:                                           ; preds = %if.then4, %if.then
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3, !dbg !5065, !ctir !350
  %15 = load i8*, i8** %next_free5, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast6 = ptrtoint i8* %15 to i64, !dbg !5065
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast6, 0, !dbg !5065
  %16 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %16, i32 0, i32 6, !dbg !5065, !ctir !350
  %17 = load i64, i64* %alignment_mask, align 8, !dbg !5065, !tbaa !5069, !ctir !149
  %add = add i64 %sub.ptr.sub7, %17, !dbg !5065
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %alignment_mask8 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 6, !dbg !5065, !ctir !350
  %19 = load i64, i64* %alignment_mask8, align 8, !dbg !5065, !tbaa !5069, !ctir !149
  %neg = xor i64 %19, -1, !dbg !5065
  %and = and i64 %add, %neg, !dbg !5065
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !5065
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free9 = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !5065, !ctir !350
  store i8* %add.ptr, i8** %next_free9, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 3, !dbg !5070, !ctir !350
  %22 = load i8*, i8** %next_free10, align 8, !dbg !5070, !tbaa !4744, !ctir !143
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 1, !dbg !5070, !ctir !350
  %24 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !5070, !tbaa !5072, !ctir !355
  %25 = bitcast %struct._obstack_chunk* %24 to i8*, !dbg !5070
  %sub.ptr.lhs.cast11 = ptrtoint i8* %22 to i64, !dbg !5070
  %sub.ptr.rhs.cast12 = ptrtoint i8* %25 to i64, !dbg !5070
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !5070
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 4, !dbg !5070, !ctir !350
  %27 = load i8*, i8** %chunk_limit, align 8, !dbg !5070, !tbaa !5073, !ctir !143
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk14 = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1, !dbg !5070, !ctir !350
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk14, align 8, !dbg !5070, !tbaa !5072, !ctir !355
  %30 = bitcast %struct._obstack_chunk* %29 to i8*, !dbg !5070
  %sub.ptr.lhs.cast15 = ptrtoint i8* %27 to i64, !dbg !5070
  %sub.ptr.rhs.cast16 = ptrtoint i8* %30 to i64, !dbg !5070
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !5070
  %cmp18 = icmp ugt i64 %sub.ptr.sub13, %sub.ptr.sub17, !dbg !5070
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !5065

if.then19:                                        ; preds = %if.end
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %chunk_limit20 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4, !dbg !5070, !ctir !350
  %32 = load i8*, i8** %chunk_limit20, align 8, !dbg !5070, !tbaa !5073, !ctir !143
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5070, !tbaa !2442
  %next_free21 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 3, !dbg !5070, !ctir !350
  store i8* %32, i8** %next_free21, align 8, !dbg !5070, !tbaa !4744, !ctir !143
  br label %if.end22, !dbg !5070

if.end22:                                         ; preds = %if.then19, %if.end
  %34 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %next_free23 = getelementptr inbounds %struct.obstack, %struct.obstack* %34, i32 0, i32 3, !dbg !5065, !ctir !350
  %35 = load i8*, i8** %next_free23, align 8, !dbg !5065, !tbaa !4744, !ctir !143
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5065, !tbaa !2442
  %object_base24 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 2, !dbg !5065, !ctir !350
  store i8* %35, i8** %object_base24, align 8, !dbg !5065, !tbaa !4746, !ctir !143
  %37 = load i8*, i8** %__value, align 8, !dbg !5065, !tbaa !2442
  store i8* %37, i8** %tmp25, align 8, !dbg !5065, !tbaa !2442
  %38 = load i8*, i8** %tmp25, align 8, !dbg !5065, !tbaa !2442
  %39 = bitcast i8* %38 to i64*, !dbg !5074
  store i64* %39, i64** %pos, align 8, !dbg !5062, !tbaa !2442
  %40 = load i8*, i8** %prefix.addr, align 8, !dbg !5075, !tbaa !2442
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5075, !tbaa !2442
  %call = call i32 @fputs_unlocked(i8* %40, %struct._IO_FILE* %41), !dbg !5075
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5076, metadata !DIExpression()), !dbg !5078
  store i64 0, i64* %i, align 8, !dbg !5078, !tbaa !2579
  br label %for.cond, !dbg !5079

for.cond:                                         ; preds = %for.inc, %if.end22
  %42 = load i64, i64* %i, align 8, !dbg !5080, !tbaa !2579
  %43 = load i64, i64* %n_pos, align 8, !dbg !5082, !tbaa !2579
  %cmp26 = icmp ult i64 %42, %43, !dbg !5083
  br i1 %cmp26, label %for.body, label %for.end, !dbg !5084

for.body:                                         ; preds = %for.cond
  %44 = load i64*, i64** %pos, align 8, !dbg !5085, !tbaa !2442
  %45 = load i64, i64* %i, align 8, !dbg !5086, !tbaa !2579
  %arrayidx = getelementptr inbounds i64, i64* %44, i64 %45, !dbg !5085, !ctir !148
  %46 = load i64, i64* %arrayidx, align 8, !dbg !5085, !tbaa !2579
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 %46), !dbg !5087
  br label %for.inc, !dbg !5087

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %i, align 8, !dbg !5088, !tbaa !2579
  %inc = add i64 %47, 1, !dbg !5088
  store i64 %inc, i64* %i, align 8, !dbg !5088, !tbaa !2579
  br label %for.cond, !dbg !5089, !llvm.loop !5090

for.end:                                          ; preds = %for.cond
  %call28 = call i32 @putchar_unlocked(i32 10), !dbg !5092
  br label %if.end29, !dbg !5093

if.end29:                                         ; preds = %for.end, %entry
  ret void, !dbg !5094
}

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_setup(i1 zeroext %init) #0 !dbg !889 !ctir !401 {
entry:
  %init.addr = alloca i8, align 1
  %j = alloca i32, align 4, !ctir !27
  %act = alloca %struct.sigaction, align 8, !ctir !419
  %frombool = zext i1 %init to i8
  store i8 %frombool, i8* %init.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %init.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5097, metadata !DIExpression()), !dbg !5098
  %0 = load i8, i8* %init.addr, align 1, !dbg !5099, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5099
  br i1 %tobool, label %if.then, label %if.else, !dbg !5101

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sigaction* %act, metadata !5102, metadata !DIExpression()), !dbg !5104
  %call = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #13, !dbg !5105
  store i32 0, i32* %j, align 4, !dbg !5106, !tbaa !2436
  br label %for.cond, !dbg !5108

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4, !dbg !5109, !tbaa !2436
  %cmp = icmp slt i32 %1, 12, !dbg !5111
  br i1 %cmp, label %for.body, label %for.end, !dbg !5112

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4, !dbg !5113, !tbaa !2436
  %idxprom = sext i32 %2 to i64, !dbg !5115
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom, !dbg !5115, !ctir !413
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5115, !tbaa !2436
  %call1 = call i32 @sigaction(i32 %3, %struct.sigaction* null, %struct.sigaction* %act) #13, !dbg !5116
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5117, !ctir !419
  %sa_handler = bitcast %union.anon.2* %__sigaction_handler to void (i32)**, !dbg !5117
  %4 = load void (i32)*, void (i32)** %sa_handler, align 8, !dbg !5117, !tbaa !2497, !ctir !417
  %cmp2 = icmp ne void (i32)* %4, inttoptr (i64 1 to void (i32)*), !dbg !5119
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5120

if.then3:                                         ; preds = %for.body
  %5 = load i32, i32* %j, align 4, !dbg !5121, !tbaa !2436
  %idxprom4 = sext i32 %5 to i64, !dbg !5122
  %arrayidx5 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom4, !dbg !5122, !ctir !413
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !5122, !tbaa !2436
  %call6 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %6) #13, !dbg !5123
  br label %if.end, !dbg !5123

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5124

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %j, align 4, !dbg !5125, !tbaa !2436
  %inc = add nsw i32 %7, 1, !dbg !5125
  store i32 %inc, i32* %j, align 4, !dbg !5125, !tbaa !2436
  br label %for.cond, !dbg !5126, !llvm.loop !5127

for.end:                                          ; preds = %for.cond
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 1, !dbg !5129, !ctir !419
  %8 = bitcast %struct.__sigset_t* %sa_mask to i8*, !dbg !5130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i1 false), !dbg !5130, !tbaa.struct !5131
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 2, !dbg !5132, !ctir !419
  store i32 268435456, i32* %sa_flags, align 8, !dbg !5133, !tbaa !5134, !ctir !27
  store i32 0, i32* %j, align 4, !dbg !5137, !tbaa !2436
  br label %for.cond7, !dbg !5139

for.cond7:                                        ; preds = %for.inc24, %for.end
  %9 = load i32, i32* %j, align 4, !dbg !5140, !tbaa !2436
  %cmp8 = icmp slt i32 %9, 12, !dbg !5142
  br i1 %cmp8, label %for.body9, label %for.end26, !dbg !5143

for.body9:                                        ; preds = %for.cond7
  %10 = load i32, i32* %j, align 4, !dbg !5144, !tbaa !2436
  %idxprom10 = sext i32 %10 to i64, !dbg !5146
  %arrayidx11 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom10, !dbg !5146, !ctir !413
  %11 = load i32, i32* %arrayidx11, align 4, !dbg !5146, !tbaa !2436
  %call12 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %11) #13, !dbg !5147
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5147
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !5148

if.then14:                                        ; preds = %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !5149, !tbaa !2436
  %idxprom15 = sext i32 %12 to i64, !dbg !5151
  %arrayidx16 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom15, !dbg !5151, !ctir !413
  %13 = load i32, i32* %arrayidx16, align 4, !dbg !5151, !tbaa !2436
  %cmp17 = icmp eq i32 %13, 20, !dbg !5152
  %14 = zext i1 %cmp17 to i64, !dbg !5151
  %cond = select i1 %cmp17, void (i32)* @stophandler, void (i32)* @sighandler, !dbg !5151
  %__sigaction_handler18 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %act, i32 0, i32 0, !dbg !5153, !ctir !419
  %sa_handler19 = bitcast %union.anon.2* %__sigaction_handler18 to void (i32)**, !dbg !5153
  store void (i32)* %cond, void (i32)** %sa_handler19, align 8, !dbg !5154, !tbaa !2497, !ctir !417
  %15 = load i32, i32* %j, align 4, !dbg !5155, !tbaa !2436
  %idxprom20 = sext i32 %15 to i64, !dbg !5156
  %arrayidx21 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom20, !dbg !5156, !ctir !413
  %16 = load i32, i32* %arrayidx21, align 4, !dbg !5156, !tbaa !2436
  %call22 = call i32 @sigaction(i32 %16, %struct.sigaction* %act, %struct.sigaction* null) #13, !dbg !5157
  br label %if.end23, !dbg !5158

if.end23:                                         ; preds = %if.then14, %for.body9
  br label %for.inc24, !dbg !5159

for.inc24:                                        ; preds = %if.end23
  %17 = load i32, i32* %j, align 4, !dbg !5160, !tbaa !2436
  %inc25 = add nsw i32 %17, 1, !dbg !5160
  store i32 %inc25, i32* %j, align 4, !dbg !5160, !tbaa !2436
  br label %for.cond7, !dbg !5161, !llvm.loop !5162

for.end26:                                        ; preds = %for.cond7
  br label %if.end42, !dbg !5164

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !dbg !5165, !tbaa !2436
  br label %for.cond27, !dbg !5168

for.cond27:                                       ; preds = %for.inc39, %if.else
  %18 = load i32, i32* %j, align 4, !dbg !5169, !tbaa !2436
  %cmp28 = icmp slt i32 %18, 12, !dbg !5171
  br i1 %cmp28, label %for.body29, label %for.end41, !dbg !5172

for.body29:                                       ; preds = %for.cond27
  %19 = load i32, i32* %j, align 4, !dbg !5173, !tbaa !2436
  %idxprom30 = sext i32 %19 to i64, !dbg !5175
  %arrayidx31 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom30, !dbg !5175, !ctir !413
  %20 = load i32, i32* %arrayidx31, align 4, !dbg !5175, !tbaa !2436
  %call32 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %20) #13, !dbg !5176
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5176
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !5177

if.then34:                                        ; preds = %for.body29
  %21 = load i32, i32* %j, align 4, !dbg !5178, !tbaa !2436
  %idxprom35 = sext i32 %21 to i64, !dbg !5179
  %arrayidx36 = getelementptr inbounds [12 x i32], [12 x i32]* @signal_setup.sig, i64 0, i64 %idxprom35, !dbg !5179, !ctir !413
  %22 = load i32, i32* %arrayidx36, align 4, !dbg !5179, !tbaa !2436
  %call37 = call void (i32)* @signal(i32 %22, void (i32)* null) #13, !dbg !5180
  br label %if.end38, !dbg !5180

if.end38:                                         ; preds = %if.then34, %for.body29
  br label %for.inc39, !dbg !5181

for.inc39:                                        ; preds = %if.end38
  %23 = load i32, i32* %j, align 4, !dbg !5182, !tbaa !2436
  %inc40 = add nsw i32 %23, 1, !dbg !5182
  store i32 %inc40, i32* %j, align 4, !dbg !5182, !tbaa !2436
  br label %for.cond27, !dbg !5183, !llvm.loop !5184

for.end41:                                        ; preds = %for.cond27
  br label %if.end42

if.end42:                                         ; preds = %for.end41, %for.end26
  ret void, !dbg !5186
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @sigismember(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @stophandler(i32 %sig) #0 !dbg !5187 !ctir !174 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5190, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5190
  br i1 %tobool, label %if.end, label %if.then, !dbg !5192

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5193, !tbaa !2436
  %inc = add nsw i32 %1, 1, !dbg !5193
  store volatile i32 %inc, i32* @stop_signal_count, align 4, !dbg !5193, !tbaa !2436
  br label %if.end, !dbg !5194

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5195
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sighandler(i32 %sig) #0 !dbg !5196 !ctir !174 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5199, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5199
  br i1 %tobool, label %if.end, label %if.then, !dbg !5201

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %sig.addr, align 4, !dbg !5202, !tbaa !2436
  store volatile i32 %1, i32* @interrupt_signal, align 4, !dbg !5203, !tbaa !2436
  br label %if.end, !dbg !5204

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5205
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @put_indicator(%struct.bin_str* %ind) #0 !dbg !5206 !ctir !397 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  %0 = load i8, i8* @used_color, align 1, !dbg !5209, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5209
  br i1 %tobool, label %if.end2, label %if.then, !dbg !5211

if.then:                                          ; preds = %entry
  store i8 1, i8* @used_color, align 1, !dbg !5212, !tbaa !2461
  %call = call i32 @tcgetpgrp(i32 1) #13, !dbg !5214
  %cmp = icmp sle i32 0, %call, !dbg !5216
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5217

if.then1:                                         ; preds = %if.then
  call void @signal_init(), !dbg !5218
  br label %if.end, !dbg !5218

if.end:                                           ; preds = %if.then1, %if.then
  call void @prep_non_filename_text(), !dbg !5219
  br label %if.end2, !dbg !5220

if.end2:                                          ; preds = %if.end, %entry
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5221, !tbaa !2442
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %1, i32 0, i32 1, !dbg !5221, !ctir !400
  %2 = load i8*, i8** %string, align 8, !dbg !5221, !tbaa !2711, !ctir !146
  %3 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5221, !tbaa !2442
  %len = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i32 0, i32 0, !dbg !5221, !ctir !400
  %4 = load i64, i64* %len, align 8, !dbg !5221, !tbaa !2706, !ctir !149
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5221, !tbaa !2442
  %call3 = call i64 @fwrite_unlocked(i8* %2, i64 %4, i64 1, %struct._IO_FILE* %5), !dbg !5221
  ret void, !dbg !5222
}

; Function Attrs: nounwind
declare dso_local i32 @tcgetpgrp(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @signal_init() #0 !dbg !5223 !ctir !341 {
entry:
  call void @signal_setup(i1 zeroext true), !dbg !5224
  ret void, !dbg !5225
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prep_non_filename_text() #0 !dbg !5226 !ctir !341 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2, i32 1), align 8, !dbg !5227, !tbaa !2711, !ctir !146
  %cmp = icmp ne i8* %0, null, !dbg !5229
  br i1 %cmp, label %if.then, label %if.else, !dbg !5230

if.then:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 2)), !dbg !5231
  br label %if.end, !dbg !5231

if.else:                                          ; preds = %entry
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5232
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 3)), !dbg !5234
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5235
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5236
}

declare dso_local i64 @fwrite_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @file_failure(i1 zeroext %serious, i8* %message, i8* %file) #0 !dbg !5237 !ctir !625 {
entry:
  %serious.addr = alloca i8, align 1
  %message.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  store i8* %message, i8** %message.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  %call = call i32* @__errno_location() #17, !dbg !5244
  %0 = load i32, i32* %call, align 4, !dbg !5244, !tbaa !2436, !ctir !27
  %1 = load i8*, i8** %message.addr, align 8, !dbg !5245, !tbaa !2442
  %2 = load i8*, i8** %file.addr, align 8, !dbg !5246, !tbaa !2442
  %call1 = call i8* @quotearg_style(i32 4, i8* %2), !dbg !5246
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %0, i8* %1, i8* %call1), !dbg !5247
  %3 = load i8, i8* %serious.addr, align 1, !dbg !5248, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5248
  call void @set_exit_status(i1 zeroext %tobool), !dbg !5249
  ret void, !dbg !5250
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @visit_dir(i64 %dev, i64 %ino) #0 !dbg !5251 !ctir !627 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %ent = alloca %struct.dev_ino*, align 8, !ctir !253
  %ent_from_table = alloca %struct.dev_ino*, align 8, !ctir !253
  %found_match = alloca i8, align 1, !ctir !141
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ent_from_table, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata i8* %found_match, metadata !5260, metadata !DIExpression()), !dbg !5261
  %call = call noalias i8* @xmalloc(i64 16), !dbg !5262
  %0 = bitcast i8* %call to %struct.dev_ino*, !dbg !5262
  store %struct.dev_ino* %0, %struct.dev_ino** %ent, align 8, !dbg !5263, !tbaa !2442
  %1 = load i64, i64* %ino.addr, align 8, !dbg !5264, !tbaa !2579
  %2 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5265, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %2, i32 0, i32 0, !dbg !5266, !ctir !254
  store i64 %1, i64* %st_ino, align 8, !dbg !5267, !tbaa !3674, !ctir !258
  %3 = load i64, i64* %dev.addr, align 8, !dbg !5268, !tbaa !2579
  %4 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5269, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %4, i32 0, i32 1, !dbg !5270, !ctir !254
  store i64 %3, i64* %st_dev, align 8, !dbg !5271, !tbaa !3691, !ctir !260
  %5 = load %struct.hash_table*, %struct.hash_table** @active_dir_set, align 8, !dbg !5272, !tbaa !2442
  %6 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5273, !tbaa !2442
  %7 = bitcast %struct.dev_ino* %6 to i8*, !dbg !5273
  %call1 = call i8* @hash_insert(%struct.hash_table* %5, i8* %7), !dbg !5274
  %8 = bitcast i8* %call1 to %struct.dev_ino*, !dbg !5274
  store %struct.dev_ino* %8, %struct.dev_ino** %ent_from_table, align 8, !dbg !5275, !tbaa !2442
  %9 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5276, !tbaa !2442
  %cmp = icmp eq %struct.dev_ino* %9, null, !dbg !5278
  br i1 %cmp, label %if.then, label %if.end, !dbg !5279

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !5280
  unreachable, !dbg !5280

if.end:                                           ; preds = %entry
  %10 = load %struct.dev_ino*, %struct.dev_ino** %ent_from_table, align 8, !dbg !5282, !tbaa !2442
  %11 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5283, !tbaa !2442
  %cmp2 = icmp ne %struct.dev_ino* %10, %11, !dbg !5284
  %frombool = zext i1 %cmp2 to i8, !dbg !5285
  store i8 %frombool, i8* %found_match, align 1, !dbg !5285, !tbaa !2461
  %12 = load i8, i8* %found_match, align 1, !dbg !5286, !tbaa !2461
  %tobool = trunc i8 %12 to i1, !dbg !5286
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5288

if.then3:                                         ; preds = %if.end
  %13 = load %struct.dev_ino*, %struct.dev_ino** %ent, align 8, !dbg !5289, !tbaa !2442
  %14 = bitcast %struct.dev_ino* %13 to i8*, !dbg !5289
  call void @free(i8* %14) #13, !dbg !5291
  br label %if.end4, !dbg !5292

if.end4:                                          ; preds = %if.then3, %if.end
  %15 = load i8, i8* %found_match, align 1, !dbg !5293, !tbaa !2461
  %tobool5 = trunc i8 %15 to i1, !dbg !5293
  ret i1 %tobool5, !dbg !5294
}

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_exit_status(i1 zeroext %serious) #0 !dbg !5295 !ctir !401 {
entry:
  %serious.addr = alloca i8, align 1
  %frombool = zext i1 %serious to i8
  store i8 %frombool, i8* %serious.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %serious.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  %0 = load i8, i8* %serious.addr, align 1, !dbg !5298, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5298
  br i1 %tobool, label %if.then, label %if.else, !dbg !5300

if.then:                                          ; preds = %entry
  store i32 2, i32* @exit_status, align 4, !dbg !5301, !tbaa !2436
  br label %if.end2, !dbg !5302

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @exit_status, align 4, !dbg !5303, !tbaa !2436
  %cmp = icmp eq i32 %1, 0, !dbg !5305
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5306

if.then1:                                         ; preds = %if.else
  store i32 1, i32* @exit_status, align 4, !dbg !5307, !tbaa !2436
  br label %if.end, !dbg !5308

if.end:                                           ; preds = %if.then1, %if.else
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then
  ret void, !dbg !5309
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dev_ino_push(i64 %dev, i64 %ino) #0 !dbg !5310 !ctir !629 {
entry:
  %dev.addr = alloca i64, align 8
  %ino.addr = alloca i64, align 8
  %vdi = alloca i8*, align 8, !ctir !167
  %di = alloca %struct.dev_ino*, align 8, !ctir !253
  %dev_ino_size = alloca i32, align 4, !ctir !27
  %__o = alloca %struct.obstack*, align 8, !ctir !510
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !5311, metadata !DIExpression()), !dbg !5312
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i8** %vdi, metadata !5315, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %di, metadata !5317, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata i32* %dev_ino_size, metadata !5319, metadata !DIExpression()), !dbg !5320
  store i32 16, i32* %dev_ino_size, align 4, !dbg !5320, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5321, metadata !DIExpression()), !dbg !5323
  store %struct.obstack* @dev_ino_obstack, %struct.obstack** %__o, align 8, !dbg !5323, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5324, metadata !DIExpression()), !dbg !5323
  %0 = load i32, i32* %dev_ino_size, align 4, !dbg !5323, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !5323
  store i64 %conv, i64* %__len, align 8, !dbg !5323, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5325, metadata !DIExpression()), !dbg !5328
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5328, !tbaa !2442
  store %struct.obstack* %1, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %2 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4, !dbg !5328, !ctir !349
  %3 = load i8*, i8** %chunk_limit, align 8, !dbg !5328, !tbaa !5073, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5328, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3, !dbg !5328, !ctir !349
  %5 = load i8*, i8** %next_free, align 8, !dbg !5328, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !5328
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !5328
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5328
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5328, !tbaa !2579
  %6 = load i64, i64* %tmp, align 8, !dbg !5328, !tbaa !2579
  %7 = load i64, i64* %__len, align 8, !dbg !5329, !tbaa !2579
  %cmp = icmp ult i64 %6, %7, !dbg !5329
  br i1 %cmp, label %if.then, label %if.end, !dbg !5323

if.then:                                          ; preds = %entry
  %8 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5329, !tbaa !2442
  %9 = load i64, i64* %__len, align 8, !dbg !5329, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %8, i64 %9), !dbg !5329
  br label %if.end, !dbg !5329

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, i64* %__len, align 8, !dbg !5323, !tbaa !2579
  %11 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5323, !tbaa !2442
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 3, !dbg !5323, !ctir !350
  %12 = load i8*, i8** %next_free2, align 8, !dbg !5323, !tbaa !4744, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %10, !dbg !5323
  store i8* %add.ptr, i8** %next_free2, align 8, !dbg !5323, !tbaa !4744, !ctir !143
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @dev_ino_obstack, i32 0, i32 3), align 8, !dbg !5330, !tbaa !4744, !ctir !143
  store i8* %13, i8** %vdi, align 8, !dbg !5331, !tbaa !2442
  %14 = load i8*, i8** %vdi, align 8, !dbg !5332, !tbaa !2442
  %15 = bitcast i8* %14 to %struct.dev_ino*, !dbg !5332
  store %struct.dev_ino* %15, %struct.dev_ino** %di, align 8, !dbg !5333, !tbaa !2442
  %16 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5334, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %16, i32 -1, !dbg !5334
  store %struct.dev_ino* %incdec.ptr, %struct.dev_ino** %di, align 8, !dbg !5334, !tbaa !2442
  %17 = load i64, i64* %dev.addr, align 8, !dbg !5335, !tbaa !2579
  %18 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5336, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %18, i32 0, i32 1, !dbg !5337, !ctir !254
  store i64 %17, i64* %st_dev, align 8, !dbg !5338, !tbaa !3691, !ctir !260
  %19 = load i64, i64* %ino.addr, align 8, !dbg !5339, !tbaa !2579
  %20 = load %struct.dev_ino*, %struct.dev_ino** %di, align 8, !dbg !5340, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %20, i32 0, i32 0, !dbg !5341, !ctir !254
  store i64 %19, i64* %st_ino, align 8, !dbg !5342, !tbaa !3674, !ctir !258
  ret void, !dbg !5343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, %struct.bin_str* %color, i1 zeroext %allow_pad, %struct.obstack* %stack, i8* %absolute_name) #0 !dbg !5344 !ctir !631 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %color.addr = alloca %struct.bin_str*, align 8
  %allow_pad.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %absolute_name.addr = alloca i8*, align 8
  %smallbuf = alloca [8192 x i8], align 16, !ctir !635
  %buf = alloca i8*, align 8, !ctir !143
  %len = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  %skip_quotes = alloca i8, align 1, !ctir !141
  %h = alloca i8*, align 8, !ctir !143
  %n = alloca i8*, align 8, !ctir !143
  %__o = alloca %struct.obstack*, align 8, !ctir !510
  %__len = alloca i64, align 8, !ctir !149
  %__o1 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp = alloca i64, align 8
  %__o49 = alloca %struct.obstack*, align 8, !ctir !510
  %__len50 = alloca i64, align 8, !ctir !149
  %__o151 = alloca %struct.obstack*, align 8, !ctir !348
  %tmp52 = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.bin_str* %color, %struct.bin_str** %color.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  %frombool = zext i1 %allow_pad to i8
  store i8 %frombool, i8* %allow_pad.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %allow_pad.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  store i8* %absolute_name, i8** %absolute_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %absolute_name.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !5359, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5361, metadata !DIExpression()), !dbg !5362
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5363
  store i8* %arraydecay, i8** %buf, align 8, !dbg !5362, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !5366, metadata !DIExpression()), !dbg !5367
  %0 = load i8*, i8** %name.addr, align 8, !dbg !5368, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5369, !tbaa !2442
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5370, !tbaa !2436
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* null, i8* %pad), !dbg !5371
  store i64 %call, i64* %len, align 8, !dbg !5372, !tbaa !2579
  %3 = load i8, i8* %pad, align 1, !dbg !5373, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5373
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5375

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %allow_pad.addr, align 1, !dbg !5376, !tbaa !2461
  %tobool1 = trunc i8 %4 to i1, !dbg !5376
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5377

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !5378

do.body:                                          ; preds = %if.then
  %call2 = call i32 @putchar_unlocked(i32 32), !dbg !5379
  %5 = load i64, i64* @dired_pos, align 8, !dbg !5379, !tbaa !2579
  %inc = add i64 %5, 1, !dbg !5379
  store i64 %inc, i64* @dired_pos, align 8, !dbg !5379, !tbaa !2579
  br label %do.end, !dbg !5379

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !5379

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  %6 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5381, !tbaa !2442
  %tobool3 = icmp ne %struct.bin_str* %6, null, !dbg !5381
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5383

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bin_str*, %struct.bin_str** %color.addr, align 8, !dbg !5384, !tbaa !2442
  %call5 = call zeroext i1 @print_color_indicator(%struct.bin_str* %7), !dbg !5385
  br label %if.end6, !dbg !5385

if.end6:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i8* %skip_quotes, metadata !5386, metadata !DIExpression()), !dbg !5387
  store i8 0, i8* %skip_quotes, align 1, !dbg !5387, !tbaa !2461
  %8 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5388, !tbaa !2442
  %tobool7 = icmp ne i8* %8, null, !dbg !5388
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !5390

if.then8:                                         ; preds = %if.end6
  %9 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5391, !tbaa !2461
  %tobool9 = trunc i8 %9 to i1, !dbg !5391
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !5394

land.lhs.true10:                                  ; preds = %if.then8
  %10 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5395, !tbaa !2461
  %tobool11 = trunc i8 %10 to i1, !dbg !5395
  br i1 %tobool11, label %land.lhs.true12, label %if.end16, !dbg !5396

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load i8, i8* %pad, align 1, !dbg !5397, !tbaa !2461
  %tobool13 = trunc i8 %11 to i1, !dbg !5397
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !5398

if.then14:                                        ; preds = %land.lhs.true12
  store i8 1, i8* %skip_quotes, align 1, !dbg !5399, !tbaa !2461
  %12 = load i8*, i8** %buf, align 8, !dbg !5401, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !5401, !tbaa !2497, !ctir !144
  %conv = sext i8 %13 to i32, !dbg !5401
  %call15 = call i32 @putchar_unlocked(i32 %conv), !dbg !5401
  br label %if.end16, !dbg !5402

if.end16:                                         ; preds = %if.then14, %land.lhs.true12, %land.lhs.true10, %if.then8
  call void @llvm.dbg.declare(metadata i8** %h, metadata !5403, metadata !DIExpression()), !dbg !5404
  %14 = load i8*, i8** @hostname, align 8, !dbg !5405, !tbaa !2442
  %call17 = call i8* @file_escape(i8* %14, i1 zeroext false), !dbg !5406
  store i8* %call17, i8** %h, align 8, !dbg !5404, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n, metadata !5407, metadata !DIExpression()), !dbg !5408
  %15 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5409, !tbaa !2442
  %call18 = call i8* @file_escape(i8* %15, i1 zeroext true), !dbg !5410
  store i8* %call18, i8** %n, align 8, !dbg !5408, !tbaa !2442
  %16 = load i8*, i8** %h, align 8, !dbg !5411, !tbaa !2442
  %17 = load i8*, i8** %n, align 8, !dbg !5412, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !5413, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %18 to i32, !dbg !5413
  %cmp = icmp eq i32 %conv19, 47, !dbg !5414
  %19 = zext i1 %cmp to i64, !dbg !5413
  %cond = select i1 %cmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.213, i64 0, i64 0), !dbg !5413
  %20 = load i8*, i8** %n, align 8, !dbg !5415, !tbaa !2442
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i64 0, i64 0), i8* %16, i8* %cond, i8* %20), !dbg !5416
  %21 = load i8*, i8** %h, align 8, !dbg !5417, !tbaa !2442
  call void @free(i8* %21) #13, !dbg !5418
  %22 = load i8*, i8** %n, align 8, !dbg !5419, !tbaa !2442
  call void @free(i8* %22) #13, !dbg !5420
  br label %if.end22, !dbg !5421

if.end22:                                         ; preds = %if.end16, %if.end6
  %23 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5422, !tbaa !2442
  %tobool23 = icmp ne %struct.obstack* %23, null, !dbg !5422
  br i1 %tobool23, label %if.then24, label %if.end36, !dbg !5424

if.then24:                                        ; preds = %if.end22
  br label %do.body25, !dbg !5425

do.body25:                                        ; preds = %if.then24
  %24 = load i8, i8* @dired, align 1, !dbg !5426, !tbaa !2461
  %tobool26 = trunc i8 %24 to i1, !dbg !5426
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !5429

if.then27:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o, metadata !5430, metadata !DIExpression()), !dbg !5432
  %25 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5432, !tbaa !2442
  store %struct.obstack* %25, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5433, metadata !DIExpression()), !dbg !5432
  store i64 8, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o1, metadata !5434, metadata !DIExpression()), !dbg !5437
  %26 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5437, !tbaa !2442
  store %struct.obstack* %26, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 4, !dbg !5437, !ctir !349
  %28 = load i8*, i8** %chunk_limit, align 8, !dbg !5437, !tbaa !5073, !ctir !143
  %29 = load %struct.obstack*, %struct.obstack** %__o1, align 8, !dbg !5437, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %29, i32 0, i32 3, !dbg !5437, !ctir !349
  %30 = load i8*, i8** %next_free, align 8, !dbg !5437, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !5437
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !5437
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5437
  store i64 %sub.ptr.sub, i64* %tmp, align 8, !dbg !5437, !tbaa !2579
  %31 = load i64, i64* %tmp, align 8, !dbg !5437, !tbaa !2579
  %32 = load i64, i64* %__len, align 8, !dbg !5438, !tbaa !2579
  %cmp28 = icmp ult i64 %31, %32, !dbg !5438
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5432

if.then30:                                        ; preds = %if.then27
  %33 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5438, !tbaa !2442
  %34 = load i64, i64* %__len, align 8, !dbg !5438, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %33, i64 %34), !dbg !5438
  br label %if.end31, !dbg !5438

if.end31:                                         ; preds = %if.then30, %if.then27
  %35 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  %next_free32 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 3, !dbg !5432, !ctir !350
  %36 = load i8*, i8** %next_free32, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  %37 = load i64, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %37, i1 false), !dbg !5432
  %38 = load i64, i64* %__len, align 8, !dbg !5432, !tbaa !2579
  %39 = load %struct.obstack*, %struct.obstack** %__o, align 8, !dbg !5432, !tbaa !2442
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3, !dbg !5432, !ctir !350
  %40 = load i8*, i8** %next_free33, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %38, !dbg !5432
  store i8* %add.ptr, i8** %next_free33, align 8, !dbg !5432, !tbaa !4744, !ctir !143
  br label %if.end34, !dbg !5426

if.end34:                                         ; preds = %if.end31, %do.body25
  br label %do.end35, !dbg !5429

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !5429

if.end36:                                         ; preds = %do.end35, %if.end22
  %41 = load i8*, i8** %buf, align 8, !dbg !5439, !tbaa !2442
  %42 = load i8, i8* %skip_quotes, align 1, !dbg !5439, !tbaa !2461
  %tobool37 = trunc i8 %42 to i1, !dbg !5439
  %conv38 = zext i1 %tobool37 to i32, !dbg !5439
  %idx.ext = sext i32 %conv38 to i64, !dbg !5439
  %add.ptr39 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !5439
  %43 = load i64, i64* %len, align 8, !dbg !5439, !tbaa !2579
  %44 = load i8, i8* %skip_quotes, align 1, !dbg !5439, !tbaa !2461
  %tobool40 = trunc i8 %44 to i1, !dbg !5439
  %conv41 = zext i1 %tobool40 to i32, !dbg !5439
  %mul = mul nsw i32 %conv41, 2, !dbg !5439
  %conv42 = sext i32 %mul to i64, !dbg !5439
  %sub = sub i64 %43, %conv42, !dbg !5439
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5439, !tbaa !2442
  %call43 = call i64 @fwrite_unlocked(i8* %add.ptr39, i64 1, i64 %sub, %struct._IO_FILE* %45), !dbg !5439
  %46 = load i64, i64* %len, align 8, !dbg !5440, !tbaa !2579
  %47 = load i64, i64* @dired_pos, align 8, !dbg !5441, !tbaa !2579
  %add = add i64 %47, %46, !dbg !5441
  store i64 %add, i64* @dired_pos, align 8, !dbg !5441, !tbaa !2579
  %48 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5442, !tbaa !2442
  %tobool44 = icmp ne %struct.obstack* %48, null, !dbg !5442
  br i1 %tobool44, label %if.then45, label %if.end67, !dbg !5444

if.then45:                                        ; preds = %if.end36
  br label %do.body46, !dbg !5445

do.body46:                                        ; preds = %if.then45
  %49 = load i8, i8* @dired, align 1, !dbg !5446, !tbaa !2461
  %tobool47 = trunc i8 %49 to i1, !dbg !5446
  br i1 %tobool47, label %if.then48, label %if.end65, !dbg !5449

if.then48:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o49, metadata !5450, metadata !DIExpression()), !dbg !5452
  %50 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !5452, !tbaa !2442
  store %struct.obstack* %50, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %__len50, metadata !5453, metadata !DIExpression()), !dbg !5452
  store i64 8, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.obstack** %__o151, metadata !5454, metadata !DIExpression()), !dbg !5457
  %51 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5457, !tbaa !2442
  store %struct.obstack* %51, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %52 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %chunk_limit53 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 4, !dbg !5457, !ctir !349
  %53 = load i8*, i8** %chunk_limit53, align 8, !dbg !5457, !tbaa !5073, !ctir !143
  %54 = load %struct.obstack*, %struct.obstack** %__o151, align 8, !dbg !5457, !tbaa !2442
  %next_free54 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 3, !dbg !5457, !ctir !349
  %55 = load i8*, i8** %next_free54, align 8, !dbg !5457, !tbaa !4744, !ctir !143
  %sub.ptr.lhs.cast55 = ptrtoint i8* %53 to i64, !dbg !5457
  %sub.ptr.rhs.cast56 = ptrtoint i8* %55 to i64, !dbg !5457
  %sub.ptr.sub57 = sub i64 %sub.ptr.lhs.cast55, %sub.ptr.rhs.cast56, !dbg !5457
  store i64 %sub.ptr.sub57, i64* %tmp52, align 8, !dbg !5457, !tbaa !2579
  %56 = load i64, i64* %tmp52, align 8, !dbg !5457, !tbaa !2579
  %57 = load i64, i64* %__len50, align 8, !dbg !5458, !tbaa !2579
  %cmp58 = icmp ult i64 %56, %57, !dbg !5458
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5452

if.then60:                                        ; preds = %if.then48
  %58 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5458, !tbaa !2442
  %59 = load i64, i64* %__len50, align 8, !dbg !5458, !tbaa !2579
  call void @_obstack_newchunk(%struct.obstack* %58, i64 %59), !dbg !5458
  br label %if.end61, !dbg !5458

if.end61:                                         ; preds = %if.then60, %if.then48
  %60 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  %next_free62 = getelementptr inbounds %struct.obstack, %struct.obstack* %60, i32 0, i32 3, !dbg !5452, !ctir !350
  %61 = load i8*, i8** %next_free62, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  %62 = load i64, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 8 bitcast (i64* @dired_pos to i8*), i64 %62, i1 false), !dbg !5452
  %63 = load i64, i64* %__len50, align 8, !dbg !5452, !tbaa !2579
  %64 = load %struct.obstack*, %struct.obstack** %__o49, align 8, !dbg !5452, !tbaa !2442
  %next_free63 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 3, !dbg !5452, !ctir !350
  %65 = load i8*, i8** %next_free63, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %63, !dbg !5452
  store i8* %add.ptr64, i8** %next_free63, align 8, !dbg !5452, !tbaa !4744, !ctir !143
  br label %if.end65, !dbg !5446

if.end65:                                         ; preds = %if.end61, %do.body46
  br label %do.end66, !dbg !5449

do.end66:                                         ; preds = %if.end65
  br label %if.end67, !dbg !5449

if.end67:                                         ; preds = %do.end66, %if.end36
  %66 = load i8*, i8** %absolute_name.addr, align 8, !dbg !5459, !tbaa !2442
  %tobool68 = icmp ne i8* %66, null, !dbg !5459
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !5461

if.then69:                                        ; preds = %if.end67
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5462, !tbaa !2442
  %call70 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !5462
  %68 = load i8, i8* %skip_quotes, align 1, !dbg !5464, !tbaa !2461
  %tobool71 = trunc i8 %68 to i1, !dbg !5464
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !5466

if.then72:                                        ; preds = %if.then69
  %69 = load i8*, i8** %buf, align 8, !dbg !5467, !tbaa !2442
  %70 = load i64, i64* %len, align 8, !dbg !5467, !tbaa !2579
  %add.ptr73 = getelementptr inbounds i8, i8* %69, i64 %70, !dbg !5467
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr73, i64 -1, !dbg !5467
  %71 = load i8, i8* %add.ptr74, align 1, !dbg !5467, !tbaa !2497, !ctir !144
  %conv75 = sext i8 %71 to i32, !dbg !5467
  %call76 = call i32 @putchar_unlocked(i32 %conv75), !dbg !5467
  br label %if.end77, !dbg !5467

if.end77:                                         ; preds = %if.then72, %if.then69
  br label %if.end78, !dbg !5468

if.end78:                                         ; preds = %if.end77, %if.end67
  %72 = load i8*, i8** %buf, align 8, !dbg !5469, !tbaa !2442
  %arraydecay79 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !5471
  %cmp80 = icmp ne i8* %72, %arraydecay79, !dbg !5472
  br i1 %cmp80, label %land.lhs.true82, label %if.end86, !dbg !5473

land.lhs.true82:                                  ; preds = %if.end78
  %73 = load i8*, i8** %buf, align 8, !dbg !5474, !tbaa !2442
  %74 = load i8*, i8** %name.addr, align 8, !dbg !5475, !tbaa !2442
  %cmp83 = icmp ne i8* %73, %74, !dbg !5476
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !5477

if.then85:                                        ; preds = %land.lhs.true82
  %75 = load i8*, i8** %buf, align 8, !dbg !5478, !tbaa !2442
  call void @free(i8* %75) #13, !dbg !5479
  br label %if.end86, !dbg !5479

if.end86:                                         ; preds = %if.then85, %land.lhs.true82, %if.end78
  %76 = load i64, i64* %len, align 8, !dbg !5480, !tbaa !2579
  %77 = load i8, i8* %pad, align 1, !dbg !5481, !tbaa !2461
  %tobool87 = trunc i8 %77 to i1, !dbg !5481
  %conv88 = zext i1 %tobool87 to i64, !dbg !5481
  %add89 = add i64 %76, %conv88, !dbg !5482
  ret i64 %add89, !dbg !5483
}

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @file_ignored(i8* %name) #0 !dbg !5484 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load i32, i32* @ignore_mode, align 4, !dbg !5487, !tbaa !2497
  %cmp = icmp ne i32 %0, 2, !dbg !5488
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false11, !dbg !5489

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5490, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !5490, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5490, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !5490
  %cmp1 = icmp eq i32 %conv, 46, !dbg !5491
  br i1 %cmp1, label %land.lhs.true3, label %lor.lhs.false11, !dbg !5492

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @ignore_mode, align 4, !dbg !5493, !tbaa !2497
  %cmp4 = icmp eq i32 %3, 0, !dbg !5494
  br i1 %cmp4, label %lor.end, label %lor.lhs.false, !dbg !5495

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5496, !tbaa !2442
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5497, !tbaa !2442
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !5497, !ctir !146
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !5497, !tbaa !2497
  %conv7 = sext i8 %6 to i32, !dbg !5497
  %cmp8 = icmp eq i32 %conv7, 46, !dbg !5498
  %conv9 = zext i1 %cmp8 to i32, !dbg !5498
  %add = add nsw i32 1, %conv9, !dbg !5499
  %idxprom = sext i32 %add to i64, !dbg !5496
  %arrayidx10 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5496, !ctir !146
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !5496, !tbaa !2497
  %tobool = icmp ne i8 %7, 0, !dbg !5496
  br i1 %tobool, label %lor.lhs.false11, label %lor.end, !dbg !5500

lor.lhs.false11:                                  ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %8 = load i32, i32* @ignore_mode, align 4, !dbg !5501, !tbaa !2497
  %cmp12 = icmp eq i32 %8, 0, !dbg !5502
  br i1 %cmp12, label %land.lhs.true14, label %lor.rhs, !dbg !5503

land.lhs.true14:                                  ; preds = %lor.lhs.false11
  %9 = load %struct.ignore_pattern*, %struct.ignore_pattern** @hide_patterns, align 8, !dbg !5504, !tbaa !2442
  %10 = load i8*, i8** %name.addr, align 8, !dbg !5505, !tbaa !2442
  %call = call zeroext i1 @patterns_match(%struct.ignore_pattern* %9, i8* %10), !dbg !5506
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !5507

lor.rhs:                                          ; preds = %land.lhs.true14, %lor.lhs.false11
  %11 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !5508, !tbaa !2442
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5509, !tbaa !2442
  %call16 = call zeroext i1 @patterns_match(%struct.ignore_pattern* %11, i8* %12), !dbg !5510
  br label %lor.end, !dbg !5507

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true14, %lor.lhs.false, %land.lhs.true3
  %13 = phi i1 [ true, %land.lhs.true14 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true3 ], [ %call16, %lor.rhs ]
  ret i1 %13, !dbg !5511
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_signals() #0 !dbg !5512 !ctir !341 {
entry:
  %sig = alloca i32, align 4, !ctir !27
  %stops = alloca i32, align 4, !ctir !27
  %oldset = alloca %struct.__sigset_t, align 8, !ctir !403
  br label %while.cond, !dbg !5513

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5514, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !5514
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5515

lor.rhs:                                          ; preds = %while.cond
  %1 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5516, !tbaa !2436
  %tobool1 = icmp ne i32 %1, 0, !dbg !5515
  br label %lor.end, !dbg !5515

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %2 = phi i1 [ true, %while.cond ], [ %tobool1, %lor.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !5513

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %sig, metadata !5517, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %stops, metadata !5520, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %oldset, metadata !5522, metadata !DIExpression()), !dbg !5523
  %3 = load i8, i8* @used_color, align 1, !dbg !5524, !tbaa !2461
  %tobool2 = trunc i8 %3 to i1, !dbg !5524
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5526

if.then:                                          ; preds = %while.body
  call void @restore_default_color(), !dbg !5527
  br label %if.end, !dbg !5527

if.end:                                           ; preds = %if.then, %while.body
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5528, !tbaa !2442
  %call = call i32 @fflush_unlocked(%struct._IO_FILE* %4), !dbg !5528
  %call3 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #13, !dbg !5529
  %5 = load volatile i32, i32* @interrupt_signal, align 4, !dbg !5530, !tbaa !2436
  store i32 %5, i32* %sig, align 4, !dbg !5531, !tbaa !2436
  %6 = load volatile i32, i32* @stop_signal_count, align 4, !dbg !5532, !tbaa !2436
  store i32 %6, i32* %stops, align 4, !dbg !5533, !tbaa !2436
  %7 = load i32, i32* %stops, align 4, !dbg !5534, !tbaa !2436
  %tobool4 = icmp ne i32 %7, 0, !dbg !5534
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5536

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %stops, align 4, !dbg !5537, !tbaa !2436
  %sub = sub nsw i32 %8, 1, !dbg !5539
  store volatile i32 %sub, i32* @stop_signal_count, align 4, !dbg !5540, !tbaa !2436
  store i32 19, i32* %sig, align 4, !dbg !5541, !tbaa !2436
  br label %if.end7, !dbg !5542

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %sig, align 4, !dbg !5543, !tbaa !2436
  %call6 = call void (i32)* @signal(i32 %9, void (i32)* null) #13, !dbg !5544
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %10 = load i32, i32* %sig, align 4, !dbg !5545, !tbaa !2436
  %call8 = call i32 @raise(i32 %10) #13, !dbg !5546
  %call9 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #13, !dbg !5547
  br label %while.cond, !dbg !5513, !llvm.loop !5548

while.end:                                        ; preds = %lor.end
  ret void, !dbg !5550
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @patterns_match(%struct.ignore_pattern* %patterns, i8* %file) #0 !dbg !5551 !ctir !659 {
entry:
  %retval = alloca i1, align 1
  %patterns.addr = alloca %struct.ignore_pattern*, align 8
  %file.addr = alloca i8*, align 8
  %p = alloca %struct.ignore_pattern*, align 8, !ctir !661
  store %struct.ignore_pattern* %patterns, %struct.ignore_pattern** %patterns.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %patterns.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %p, metadata !5556, metadata !DIExpression()), !dbg !5557
  %0 = load %struct.ignore_pattern*, %struct.ignore_pattern** %patterns.addr, align 8, !dbg !5558, !tbaa !2442
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %p, align 8, !dbg !5560, !tbaa !2442
  br label %for.cond, !dbg !5561

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5562, !tbaa !2442
  %tobool = icmp ne %struct.ignore_pattern* %1, null, !dbg !5564
  br i1 %tobool, label %for.body, label %for.end, !dbg !5564

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5565, !tbaa !2442
  %pattern = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !5567, !ctir !662
  %3 = load i8*, i8** %pattern, align 8, !dbg !5567, !tbaa !3052, !ctir !146
  %4 = load i8*, i8** %file.addr, align 8, !dbg !5568, !tbaa !2442
  %call = call i32 @fnmatch(i8* %3, i8* %4, i32 4), !dbg !5569
  %cmp = icmp eq i32 %call, 0, !dbg !5570
  br i1 %cmp, label %if.then, label %if.end, !dbg !5571

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5572
  br label %return, !dbg !5572

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5573

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %p, align 8, !dbg !5574, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %5, i32 0, i32 1, !dbg !5575, !ctir !662
  %6 = load %struct.ignore_pattern*, %struct.ignore_pattern** %next, align 8, !dbg !5575, !tbaa !3058, !ctir !511
  store %struct.ignore_pattern* %6, %struct.ignore_pattern** %p, align 8, !dbg !5576, !tbaa !2442
  br label %for.cond, !dbg !5577, !llvm.loop !5578

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5580
  br label %return, !dbg !5580

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !5581
  ret i1 %7, !dbg !5581
}

declare dso_local i32 @fnmatch(i8*, i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_buf(i8** %inbuf, i64 %bufsize, i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting, i64* %width, i8* %pad) #0 !dbg !5582 !ctir !638 {
entry:
  %inbuf.addr = alloca i8**, align 8
  %bufsize.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %width.addr = alloca i64*, align 8
  %pad.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8, !ctir !143
  %displayed_width = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %quoted = alloca i8, align 1, !ctir !141
  %qs = alloca i32, align 4, !ctir !95
  %needs_further_quoting = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !641
  %wc = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %p83 = alloca i8*, align 8, !ctir !143
  %plimit84 = alloca i8*, align 8, !ctir !146
  %p111 = alloca i8*, align 8, !ctir !146
  %plimit112 = alloca i8*, align 8, !ctir !146
  store i8** %inbuf, i8*** %inbuf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %inbuf.addr, metadata !5583, metadata !DIExpression()), !dbg !5584
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  store i8* %pad, i8** %pad.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %pad.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5597, metadata !DIExpression()), !dbg !5598
  %0 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5599, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !5600, !tbaa !2442, !ctir !143
  store i8* %1, i8** %buf, align 8, !dbg !5598, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %displayed_width, metadata !5601, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5603, metadata !DIExpression()), !dbg !5604
  store i64 0, i64* %len, align 8, !dbg !5604, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %quoted, metadata !5605, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.declare(metadata i32* %qs, metadata !5607, metadata !DIExpression()), !dbg !5608
  %2 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5609, !tbaa !2442
  %call = call i32 @get_quoting_style(%struct.quoting_options* %2), !dbg !5610
  store i32 %call, i32* %qs, align 4, !dbg !5608, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %needs_further_quoting, metadata !5611, metadata !DIExpression()), !dbg !5612
  %3 = load i8, i8* @qmark_funny_chars, align 1, !dbg !5613, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !5613
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5614

land.rhs:                                         ; preds = %entry
  %4 = load i32, i32* %qs, align 4, !dbg !5615, !tbaa !2497
  %cmp = icmp eq i32 %4, 1, !dbg !5616
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !5617

lor.lhs.false:                                    ; preds = %land.rhs
  %5 = load i32, i32* %qs, align 4, !dbg !5618, !tbaa !2497
  %cmp1 = icmp eq i32 %5, 2, !dbg !5619
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !5620

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %qs, align 4, !dbg !5621, !tbaa !2497
  %cmp2 = icmp eq i32 %6, 0, !dbg !5622
  br label %lor.end, !dbg !5620

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ], !dbg !5623
  %frombool = zext i1 %8 to i8, !dbg !5612
  store i8 %frombool, i8* %needs_further_quoting, align 1, !dbg !5612, !tbaa !2461
  %9 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !5624, !tbaa !2436
  %cmp3 = icmp ne i32 %9, 0, !dbg !5626
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5627

if.then:                                          ; preds = %land.end
  %10 = load i8*, i8** %buf, align 8, !dbg !5628, !tbaa !2442
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !5630, !tbaa !2579
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5631, !tbaa !2442
  %13 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5632, !tbaa !2442
  %call4 = call i64 @quotearg_buffer(i8* %10, i64 %11, i8* %12, i64 -1, %struct.quoting_options* %13), !dbg !5633
  store i64 %call4, i64* %len, align 8, !dbg !5634, !tbaa !2579
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !5635, !tbaa !2579
  %15 = load i64, i64* %len, align 8, !dbg !5637, !tbaa !2579
  %cmp5 = icmp ule i64 %14, %15, !dbg !5638
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5639

if.then6:                                         ; preds = %if.then
  %16 = load i64, i64* %len, align 8, !dbg !5640, !tbaa !2579
  %add = add i64 %16, 1, !dbg !5642
  %call7 = call noalias i8* @xmalloc(i64 %add), !dbg !5643
  store i8* %call7, i8** %buf, align 8, !dbg !5644, !tbaa !2442
  %17 = load i8*, i8** %buf, align 8, !dbg !5645, !tbaa !2442
  %18 = load i64, i64* %len, align 8, !dbg !5646, !tbaa !2579
  %add8 = add i64 %18, 1, !dbg !5647
  %19 = load i8*, i8** %name.addr, align 8, !dbg !5648, !tbaa !2442
  %20 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !5649, !tbaa !2442
  %call9 = call i64 @quotearg_buffer(i8* %17, i64 %add8, i8* %19, i64 -1, %struct.quoting_options* %20), !dbg !5650
  br label %if.end, !dbg !5651

if.end:                                           ; preds = %if.then6, %if.then
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5652, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !5653, !tbaa !2497, !ctir !144
  %conv = sext i8 %22 to i32, !dbg !5653
  %23 = load i8*, i8** %buf, align 8, !dbg !5654, !tbaa !2442
  %24 = load i8, i8* %23, align 1, !dbg !5655, !tbaa !2497, !ctir !144
  %conv10 = sext i8 %24 to i32, !dbg !5655
  %cmp11 = icmp ne i32 %conv, %conv10, !dbg !5656
  br i1 %cmp11, label %lor.end17, label %lor.rhs13, !dbg !5657

lor.rhs13:                                        ; preds = %if.end
  %25 = load i8*, i8** %name.addr, align 8, !dbg !5658, !tbaa !2442
  %call14 = call i64 @strlen(i8* %25) #16, !dbg !5659
  %26 = load i64, i64* %len, align 8, !dbg !5660, !tbaa !2579
  %cmp15 = icmp ne i64 %call14, %26, !dbg !5661
  br label %lor.end17, !dbg !5657

lor.end17:                                        ; preds = %lor.rhs13, %if.end
  %27 = phi i1 [ true, %if.end ], [ %cmp15, %lor.rhs13 ]
  %frombool18 = zext i1 %27 to i8, !dbg !5662
  store i8 %frombool18, i8* %quoted, align 1, !dbg !5662, !tbaa !2461
  br label %if.end32, !dbg !5663

if.else:                                          ; preds = %land.end
  %28 = load i8, i8* %needs_further_quoting, align 1, !dbg !5664, !tbaa !2461
  %tobool19 = trunc i8 %28 to i1, !dbg !5664
  br i1 %tobool19, label %if.then20, label %if.else29, !dbg !5666

if.then20:                                        ; preds = %if.else
  %29 = load i8*, i8** %name.addr, align 8, !dbg !5667, !tbaa !2442
  %call21 = call i64 @strlen(i8* %29) #16, !dbg !5669
  store i64 %call21, i64* %len, align 8, !dbg !5670, !tbaa !2579
  %30 = load i64, i64* %bufsize.addr, align 8, !dbg !5671, !tbaa !2579
  %31 = load i64, i64* %len, align 8, !dbg !5673, !tbaa !2579
  %cmp22 = icmp ule i64 %30, %31, !dbg !5674
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !5675

if.then24:                                        ; preds = %if.then20
  %32 = load i64, i64* %len, align 8, !dbg !5676, !tbaa !2579
  %add25 = add i64 %32, 1, !dbg !5677
  %call26 = call noalias i8* @xmalloc(i64 %add25), !dbg !5678
  store i8* %call26, i8** %buf, align 8, !dbg !5679, !tbaa !2442
  br label %if.end27, !dbg !5680

if.end27:                                         ; preds = %if.then24, %if.then20
  %33 = load i8*, i8** %buf, align 8, !dbg !5681, !tbaa !2442
  %34 = load i8*, i8** %name.addr, align 8, !dbg !5682, !tbaa !2442
  %35 = load i64, i64* %len, align 8, !dbg !5683, !tbaa !2579
  %add28 = add i64 %35, 1, !dbg !5684
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %add28, i1 false), !dbg !5685
  store i8 0, i8* %quoted, align 1, !dbg !5686, !tbaa !2461
  br label %if.end31, !dbg !5687

if.else29:                                        ; preds = %if.else
  %36 = load i8*, i8** %name.addr, align 8, !dbg !5688, !tbaa !2442
  %call30 = call i64 @strlen(i8* %36) #16, !dbg !5690
  store i64 %call30, i64* %len, align 8, !dbg !5691, !tbaa !2579
  %37 = load i8*, i8** %name.addr, align 8, !dbg !5692, !tbaa !2442
  store i8* %37, i8** %buf, align 8, !dbg !5693, !tbaa !2442
  store i8 0, i8* %quoted, align 1, !dbg !5694, !tbaa !2461
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.end27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %lor.end17
  %38 = load i8, i8* %needs_further_quoting, align 1, !dbg !5695, !tbaa !2461
  %tobool33 = trunc i8 %38 to i1, !dbg !5695
  br i1 %tobool33, label %if.then34, label %if.else100, !dbg !5697

if.then34:                                        ; preds = %if.end32
  %call35 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5698
  %cmp36 = icmp ugt i64 %call35, 1, !dbg !5701
  br i1 %cmp36, label %if.then38, label %if.else82, !dbg !5702

if.then38:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5703, metadata !DIExpression()), !dbg !5705
  %39 = load i8*, i8** %buf, align 8, !dbg !5706, !tbaa !2442
  store i8* %39, i8** %p, align 8, !dbg !5705, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !5707, metadata !DIExpression()), !dbg !5708
  %40 = load i8*, i8** %buf, align 8, !dbg !5709, !tbaa !2442
  %41 = load i64, i64* %len, align 8, !dbg !5710, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !5711
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !5708, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %q, metadata !5712, metadata !DIExpression()), !dbg !5713
  %42 = load i8*, i8** %buf, align 8, !dbg !5714, !tbaa !2442
  store i8* %42, i8** %q, align 8, !dbg !5713, !tbaa !2442
  store i64 0, i64* %displayed_width, align 8, !dbg !5715, !tbaa !2579
  br label %while.cond, !dbg !5716

while.cond:                                       ; preds = %sw.epilog, %if.then38
  %43 = load i8*, i8** %p, align 8, !dbg !5717, !tbaa !2442
  %44 = load i8*, i8** %plimit, align 8, !dbg !5718, !tbaa !2442
  %cmp39 = icmp ult i8* %43, %44, !dbg !5719
  br i1 %cmp39, label %while.body, label %while.end, !dbg !5716

while.body:                                       ; preds = %while.cond
  %45 = load i8*, i8** %p, align 8, !dbg !5720, !tbaa !2442
  %46 = load i8, i8* %45, align 1, !dbg !5721, !tbaa !2497, !ctir !147
  %conv41 = sext i8 %46 to i32, !dbg !5721
  switch i32 %conv41, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !5722

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %47 = load i8*, i8** %p, align 8, !dbg !5723, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !5723
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5723, !tbaa !2442
  %48 = load i8, i8* %47, align 1, !dbg !5725, !tbaa !2497, !ctir !147
  %49 = load i8*, i8** %q, align 8, !dbg !5726, !tbaa !2442
  %incdec.ptr42 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !5726
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !5726, !tbaa !2442
  store i8 %48, i8* %49, align 1, !dbg !5727, !tbaa !2497, !ctir !144
  %50 = load i64, i64* %displayed_width, align 8, !dbg !5728, !tbaa !2579
  %add43 = add i64 %50, 1, !dbg !5728
  store i64 %add43, i64* %displayed_width, align 8, !dbg !5728, !tbaa !2579
  br label %sw.epilog, !dbg !5729

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !5730, metadata !DIExpression()), !dbg !5732
  %51 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !5732
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 8, i1 false), !dbg !5732
  br label %do.body, !dbg !5733

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !5734, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5739, metadata !DIExpression()), !dbg !5740
  %52 = load i8*, i8** %p, align 8, !dbg !5741, !tbaa !2442
  %53 = load i8*, i8** %plimit, align 8, !dbg !5742, !tbaa !2442
  %54 = load i8*, i8** %p, align 8, !dbg !5743, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %53 to i64, !dbg !5744
  %sub.ptr.rhs.cast = ptrtoint i8* %54 to i64, !dbg !5744
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5744
  %call44 = call i64 @rpl_mbrtowc(i32* %wc, i8* %52, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !5745
  store i64 %call44, i64* %bytes, align 8, !dbg !5746, !tbaa !2579
  %55 = load i64, i64* %bytes, align 8, !dbg !5747, !tbaa !2579
  %cmp45 = icmp eq i64 %55, -1, !dbg !5749
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !5750

if.then47:                                        ; preds = %do.body
  %56 = load i8*, i8** %p, align 8, !dbg !5751, !tbaa !2442
  %incdec.ptr48 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5751
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !5751, !tbaa !2442
  %57 = load i8*, i8** %q, align 8, !dbg !5753, !tbaa !2442
  %incdec.ptr49 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !5753
  store i8* %incdec.ptr49, i8** %q, align 8, !dbg !5753, !tbaa !2442
  store i8 63, i8* %57, align 1, !dbg !5754, !tbaa !2497, !ctir !144
  %58 = load i64, i64* %displayed_width, align 8, !dbg !5755, !tbaa !2579
  %add50 = add i64 %58, 1, !dbg !5755
  store i64 %add50, i64* %displayed_width, align 8, !dbg !5755, !tbaa !2579
  br label %do.end, !dbg !5756

if.end51:                                         ; preds = %do.body
  %59 = load i64, i64* %bytes, align 8, !dbg !5757, !tbaa !2579
  %cmp52 = icmp eq i64 %59, -2, !dbg !5759
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !5760

if.then54:                                        ; preds = %if.end51
  %60 = load i8*, i8** %plimit, align 8, !dbg !5761, !tbaa !2442
  store i8* %60, i8** %p, align 8, !dbg !5763, !tbaa !2442
  %61 = load i8*, i8** %q, align 8, !dbg !5764, !tbaa !2442
  %incdec.ptr55 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !5764
  store i8* %incdec.ptr55, i8** %q, align 8, !dbg !5764, !tbaa !2442
  store i8 63, i8* %61, align 1, !dbg !5765, !tbaa !2497, !ctir !144
  %62 = load i64, i64* %displayed_width, align 8, !dbg !5766, !tbaa !2579
  %add56 = add i64 %62, 1, !dbg !5766
  store i64 %add56, i64* %displayed_width, align 8, !dbg !5766, !tbaa !2579
  br label %do.end, !dbg !5767

if.end57:                                         ; preds = %if.end51
  %63 = load i64, i64* %bytes, align 8, !dbg !5768, !tbaa !2579
  %cmp58 = icmp eq i64 %63, 0, !dbg !5770
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5771

if.then60:                                        ; preds = %if.end57
  store i64 1, i64* %bytes, align 8, !dbg !5772, !tbaa !2579
  br label %if.end61, !dbg !5773

if.end61:                                         ; preds = %if.then60, %if.end57
  %64 = load i32, i32* %wc, align 4, !dbg !5774, !tbaa !2436
  %call62 = call i32 @wcwidth(i32 %64) #13, !dbg !5775
  store i32 %call62, i32* %w, align 4, !dbg !5776, !tbaa !2436
  %65 = load i32, i32* %w, align 4, !dbg !5777, !tbaa !2436
  %cmp63 = icmp sge i32 %65, 0, !dbg !5779
  br i1 %cmp63, label %if.then65, label %if.else72, !dbg !5780

if.then65:                                        ; preds = %if.end61
  br label %for.cond, !dbg !5781

for.cond:                                         ; preds = %for.inc, %if.then65
  %66 = load i64, i64* %bytes, align 8, !dbg !5783, !tbaa !2579
  %cmp66 = icmp ugt i64 %66, 0, !dbg !5786
  br i1 %cmp66, label %for.body, label %for.end, !dbg !5787

for.body:                                         ; preds = %for.cond
  %67 = load i8*, i8** %p, align 8, !dbg !5788, !tbaa !2442
  %incdec.ptr68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !5788
  store i8* %incdec.ptr68, i8** %p, align 8, !dbg !5788, !tbaa !2442
  %68 = load i8, i8* %67, align 1, !dbg !5789, !tbaa !2497, !ctir !147
  %69 = load i8*, i8** %q, align 8, !dbg !5790, !tbaa !2442
  %incdec.ptr69 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !5790
  store i8* %incdec.ptr69, i8** %q, align 8, !dbg !5790, !tbaa !2442
  store i8 %68, i8* %69, align 1, !dbg !5791, !tbaa !2497, !ctir !144
  br label %for.inc, !dbg !5792

for.inc:                                          ; preds = %for.body
  %70 = load i64, i64* %bytes, align 8, !dbg !5793, !tbaa !2579
  %dec = add i64 %70, -1, !dbg !5793
  store i64 %dec, i64* %bytes, align 8, !dbg !5793, !tbaa !2579
  br label %for.cond, !dbg !5794, !llvm.loop !5795

for.end:                                          ; preds = %for.cond
  %71 = load i32, i32* %w, align 4, !dbg !5797, !tbaa !2436
  %conv70 = sext i32 %71 to i64, !dbg !5797
  %72 = load i64, i64* %displayed_width, align 8, !dbg !5798, !tbaa !2579
  %add71 = add i64 %72, %conv70, !dbg !5798
  store i64 %add71, i64* %displayed_width, align 8, !dbg !5798, !tbaa !2579
  br label %if.end76, !dbg !5799

if.else72:                                        ; preds = %if.end61
  %73 = load i64, i64* %bytes, align 8, !dbg !5800, !tbaa !2579
  %74 = load i8*, i8** %p, align 8, !dbg !5802, !tbaa !2442
  %add.ptr73 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !5802
  store i8* %add.ptr73, i8** %p, align 8, !dbg !5802, !tbaa !2442
  %75 = load i8*, i8** %q, align 8, !dbg !5803, !tbaa !2442
  %incdec.ptr74 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5803
  store i8* %incdec.ptr74, i8** %q, align 8, !dbg !5803, !tbaa !2442
  store i8 63, i8* %75, align 1, !dbg !5804, !tbaa !2497, !ctir !144
  %76 = load i64, i64* %displayed_width, align 8, !dbg !5805, !tbaa !2579
  %add75 = add i64 %76, 1, !dbg !5805
  store i64 %add75, i64* %displayed_width, align 8, !dbg !5805, !tbaa !2579
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %for.end
  br label %do.cond, !dbg !5806

do.cond:                                          ; preds = %if.end76
  %call77 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !5807
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5808
  %lnot = xor i1 %tobool78, true, !dbg !5808
  br i1 %lnot, label %do.body, label %do.end, !dbg !5806, !llvm.loop !5809

do.end:                                           ; preds = %do.cond, %if.then54, %if.then47
  br label %sw.epilog, !dbg !5811

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !5716, !llvm.loop !5812

while.end:                                        ; preds = %while.cond
  %77 = load i8*, i8** %q, align 8, !dbg !5814, !tbaa !2442
  %78 = load i8*, i8** %buf, align 8, !dbg !5815, !tbaa !2442
  %sub.ptr.lhs.cast79 = ptrtoint i8* %77 to i64, !dbg !5816
  %sub.ptr.rhs.cast80 = ptrtoint i8* %78 to i64, !dbg !5816
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !5816
  store i64 %sub.ptr.sub81, i64* %len, align 8, !dbg !5817, !tbaa !2579
  br label %if.end99, !dbg !5818

if.else82:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i8** %p83, metadata !5819, metadata !DIExpression()), !dbg !5821
  %79 = load i8*, i8** %buf, align 8, !dbg !5822, !tbaa !2442
  store i8* %79, i8** %p83, align 8, !dbg !5821, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit84, metadata !5823, metadata !DIExpression()), !dbg !5824
  %80 = load i8*, i8** %buf, align 8, !dbg !5825, !tbaa !2442
  %81 = load i64, i64* %len, align 8, !dbg !5826, !tbaa !2579
  %add.ptr85 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !5827
  store i8* %add.ptr85, i8** %plimit84, align 8, !dbg !5824, !tbaa !2442
  br label %while.cond86, !dbg !5828

while.cond86:                                     ; preds = %if.end96, %if.else82
  %82 = load i8*, i8** %p83, align 8, !dbg !5829, !tbaa !2442
  %83 = load i8*, i8** %plimit84, align 8, !dbg !5830, !tbaa !2442
  %cmp87 = icmp ult i8* %82, %83, !dbg !5831
  br i1 %cmp87, label %while.body89, label %while.end98, !dbg !5828

while.body89:                                     ; preds = %while.cond86
  %call90 = call i16** @__ctype_b_loc() #17, !dbg !5832
  %84 = load i16*, i16** %call90, align 8, !dbg !5832, !tbaa !2442, !ctir !587
  %85 = load i8*, i8** %p83, align 8, !dbg !5832, !tbaa !2442
  %86 = load i8, i8* %85, align 1, !dbg !5832, !tbaa !2497, !ctir !144
  %call91 = call zeroext i8 @to_uchar(i8 signext %86), !dbg !5832
  %conv92 = zext i8 %call91 to i32, !dbg !5832
  %idxprom = sext i32 %conv92 to i64, !dbg !5832
  %arrayidx = getelementptr inbounds i16, i16* %84, i64 %idxprom, !dbg !5832, !ctir !587
  %87 = load i16, i16* %arrayidx, align 2, !dbg !5832, !tbaa !5835
  %conv93 = zext i16 %87 to i32, !dbg !5832
  %and = and i32 %conv93, 16384, !dbg !5832
  %tobool94 = icmp ne i32 %and, 0, !dbg !5832
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !5836

if.then95:                                        ; preds = %while.body89
  %88 = load i8*, i8** %p83, align 8, !dbg !5837, !tbaa !2442
  store i8 63, i8* %88, align 1, !dbg !5838, !tbaa !2497, !ctir !144
  br label %if.end96, !dbg !5839

if.end96:                                         ; preds = %if.then95, %while.body89
  %89 = load i8*, i8** %p83, align 8, !dbg !5840, !tbaa !2442
  %incdec.ptr97 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !5840
  store i8* %incdec.ptr97, i8** %p83, align 8, !dbg !5840, !tbaa !2442
  br label %while.cond86, !dbg !5828, !llvm.loop !5841

while.end98:                                      ; preds = %while.cond86
  %90 = load i64, i64* %len, align 8, !dbg !5843, !tbaa !2579
  store i64 %90, i64* %displayed_width, align 8, !dbg !5844, !tbaa !2579
  br label %if.end99

if.end99:                                         ; preds = %while.end98, %while.end
  br label %if.end132, !dbg !5845

if.else100:                                       ; preds = %if.end32
  %91 = load i64*, i64** %width.addr, align 8, !dbg !5846, !tbaa !2442
  %cmp101 = icmp ne i64* %91, null, !dbg !5848
  br i1 %cmp101, label %if.then103, label %if.end131, !dbg !5849

if.then103:                                       ; preds = %if.else100
  %call104 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !5850
  %cmp105 = icmp ugt i64 %call104, 1, !dbg !5853
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !5854

if.then107:                                       ; preds = %if.then103
  %92 = load i8*, i8** %buf, align 8, !dbg !5855, !tbaa !2442
  %93 = load i64, i64* %len, align 8, !dbg !5856, !tbaa !2579
  %call108 = call i32 @mbsnwidth(i8* %92, i64 %93, i32 0), !dbg !5857
  %conv109 = sext i32 %call108 to i64, !dbg !5857
  store i64 %conv109, i64* %displayed_width, align 8, !dbg !5858, !tbaa !2579
  br label %if.end130, !dbg !5859

if.else110:                                       ; preds = %if.then103
  call void @llvm.dbg.declare(metadata i8** %p111, metadata !5860, metadata !DIExpression()), !dbg !5862
  %94 = load i8*, i8** %buf, align 8, !dbg !5863, !tbaa !2442
  store i8* %94, i8** %p111, align 8, !dbg !5862, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit112, metadata !5864, metadata !DIExpression()), !dbg !5865
  %95 = load i8*, i8** %buf, align 8, !dbg !5866, !tbaa !2442
  %96 = load i64, i64* %len, align 8, !dbg !5867, !tbaa !2579
  %add.ptr113 = getelementptr inbounds i8, i8* %95, i64 %96, !dbg !5868
  store i8* %add.ptr113, i8** %plimit112, align 8, !dbg !5865, !tbaa !2442
  store i64 0, i64* %displayed_width, align 8, !dbg !5869, !tbaa !2579
  br label %while.cond114, !dbg !5870

while.cond114:                                    ; preds = %if.end127, %if.else110
  %97 = load i8*, i8** %p111, align 8, !dbg !5871, !tbaa !2442
  %98 = load i8*, i8** %plimit112, align 8, !dbg !5872, !tbaa !2442
  %cmp115 = icmp ult i8* %97, %98, !dbg !5873
  br i1 %cmp115, label %while.body117, label %while.end129, !dbg !5870

while.body117:                                    ; preds = %while.cond114
  %call118 = call i16** @__ctype_b_loc() #17, !dbg !5874
  %99 = load i16*, i16** %call118, align 8, !dbg !5874, !tbaa !2442, !ctir !587
  %100 = load i8*, i8** %p111, align 8, !dbg !5874, !tbaa !2442
  %101 = load i8, i8* %100, align 1, !dbg !5874, !tbaa !2497, !ctir !147
  %call119 = call zeroext i8 @to_uchar(i8 signext %101), !dbg !5874
  %conv120 = zext i8 %call119 to i32, !dbg !5874
  %idxprom121 = sext i32 %conv120 to i64, !dbg !5874
  %arrayidx122 = getelementptr inbounds i16, i16* %99, i64 %idxprom121, !dbg !5874, !ctir !587
  %102 = load i16, i16* %arrayidx122, align 2, !dbg !5874, !tbaa !5835
  %conv123 = zext i16 %102 to i32, !dbg !5874
  %and124 = and i32 %conv123, 16384, !dbg !5874
  %tobool125 = icmp ne i32 %and124, 0, !dbg !5874
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !5877

if.then126:                                       ; preds = %while.body117
  %103 = load i64, i64* %displayed_width, align 8, !dbg !5878, !tbaa !2579
  %inc = add i64 %103, 1, !dbg !5878
  store i64 %inc, i64* %displayed_width, align 8, !dbg !5878, !tbaa !2579
  br label %if.end127, !dbg !5879

if.end127:                                        ; preds = %if.then126, %while.body117
  %104 = load i8*, i8** %p111, align 8, !dbg !5880, !tbaa !2442
  %incdec.ptr128 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !5880
  store i8* %incdec.ptr128, i8** %p111, align 8, !dbg !5880, !tbaa !2442
  br label %while.cond114, !dbg !5870, !llvm.loop !5881

while.end129:                                     ; preds = %while.cond114
  br label %if.end130

if.end130:                                        ; preds = %while.end129, %if.then107
  br label %if.end131, !dbg !5883

if.end131:                                        ; preds = %if.end130, %if.else100
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end99
  %105 = load i8, i8* @align_variable_outer_quotes, align 1, !dbg !5884, !tbaa !2461
  %tobool133 = trunc i8 %105 to i1, !dbg !5884
  br i1 %tobool133, label %land.lhs.true, label %land.end140, !dbg !5885

land.lhs.true:                                    ; preds = %if.end132
  %106 = load i8, i8* @cwd_some_quoted, align 1, !dbg !5886, !tbaa !2461
  %tobool135 = trunc i8 %106 to i1, !dbg !5886
  br i1 %tobool135, label %land.rhs137, label %land.end140, !dbg !5887

land.rhs137:                                      ; preds = %land.lhs.true
  %107 = load i8, i8* %quoted, align 1, !dbg !5888, !tbaa !2461
  %tobool138 = trunc i8 %107 to i1, !dbg !5888
  %lnot139 = xor i1 %tobool138, true, !dbg !5889
  br label %land.end140

land.end140:                                      ; preds = %land.rhs137, %land.lhs.true, %if.end132
  %108 = phi i1 [ false, %land.lhs.true ], [ false, %if.end132 ], [ %lnot139, %land.rhs137 ], !dbg !5623
  %109 = load i8*, i8** %pad.addr, align 8, !dbg !5890, !tbaa !2442
  %frombool141 = zext i1 %108 to i8, !dbg !5891
  store i8 %frombool141, i8* %109, align 1, !dbg !5891, !tbaa !2461, !ctir !141
  %110 = load i64*, i64** %width.addr, align 8, !dbg !5892, !tbaa !2442
  %cmp142 = icmp ne i64* %110, null, !dbg !5894
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !5895

if.then144:                                       ; preds = %land.end140
  %111 = load i64, i64* %displayed_width, align 8, !dbg !5896, !tbaa !2579
  %112 = load i64*, i64** %width.addr, align 8, !dbg !5897, !tbaa !2442
  store i64 %111, i64* %112, align 8, !dbg !5898, !tbaa !2579, !ctir !149
  br label %if.end145, !dbg !5899

if.end145:                                        ; preds = %if.then144, %land.end140
  %113 = load i8*, i8** %buf, align 8, !dbg !5900, !tbaa !2442
  %114 = load i8**, i8*** %inbuf.addr, align 8, !dbg !5901, !tbaa !2442
  store i8* %113, i8** %114, align 8, !dbg !5902, !tbaa !2442, !ctir !143
  %115 = load i64, i64* %len, align 8, !dbg !5903, !tbaa !2579
  ret i64 %115, !dbg !5904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_color_indicator(%struct.bin_str* %ind) #0 !dbg !5905 !ctir !655 {
entry:
  %ind.addr = alloca %struct.bin_str*, align 8
  store %struct.bin_str* %ind, %struct.bin_str** %ind.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %ind.addr, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5908, !tbaa !2442
  %tobool = icmp ne %struct.bin_str* %0, null, !dbg !5908
  br i1 %tobool, label %if.then, label %if.end2, !dbg !5910

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !5911
  br i1 %call, label %if.then1, label %if.end, !dbg !5914

if.then1:                                         ; preds = %if.then
  call void @restore_default_color(), !dbg !5915
  br label %if.end, !dbg !5915

if.end:                                           ; preds = %if.then1, %if.then
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !5916
  %1 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5917, !tbaa !2442
  call void @put_indicator(%struct.bin_str* %1), !dbg !5918
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !5919
  br label %if.end2, !dbg !5920

if.end2:                                          ; preds = %if.end, %entry
  %2 = load %struct.bin_str*, %struct.bin_str** %ind.addr, align 8, !dbg !5921, !tbaa !2442
  %cmp = icmp ne %struct.bin_str* %2, null, !dbg !5922
  ret i1 %cmp, !dbg !5923
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @file_escape(i8* %str, i1 zeroext %path) #0 !dbg !5924 !ctir !657 {
entry:
  %str.addr = alloca i8*, align 8
  %path.addr = alloca i8, align 1
  %esc = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5925, metadata !DIExpression()), !dbg !5926
  %frombool = zext i1 %path to i8
  store i8 %frombool, i8* %path.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %path.addr, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata i8** %esc, metadata !5929, metadata !DIExpression()), !dbg !5930
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5931, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !5932
  %add = add i64 %call, 1, !dbg !5933
  %call1 = call noalias i8* @xnmalloc(i64 3, i64 %add), !dbg !5934
  store i8* %call1, i8** %esc, align 8, !dbg !5930, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5935, metadata !DIExpression()), !dbg !5936
  %1 = load i8*, i8** %esc, align 8, !dbg !5937, !tbaa !2442
  store i8* %1, i8** %p, align 8, !dbg !5936, !tbaa !2442
  br label %while.cond, !dbg !5938

while.cond:                                       ; preds = %if.end15, %entry
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5939, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !5940, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %3, 0, !dbg !5938
  br i1 %tobool, label %while.body, label %while.end, !dbg !5938

while.body:                                       ; preds = %while.cond
  %4 = load i8, i8* %path.addr, align 1, !dbg !5941, !tbaa !2461
  %tobool2 = trunc i8 %4 to i1, !dbg !5941
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5944

land.lhs.true:                                    ; preds = %while.body
  %5 = load i8*, i8** %str.addr, align 8, !dbg !5945, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !5945, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !5945
  %cmp = icmp eq i32 %conv, 47, !dbg !5945
  br i1 %cmp, label %if.then, label %if.else, !dbg !5946

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8*, i8** %p, align 8, !dbg !5947, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5947
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5947, !tbaa !2442
  store i8 47, i8* %7, align 1, !dbg !5949, !tbaa !2497, !ctir !144
  %8 = load i8*, i8** %str.addr, align 8, !dbg !5950, !tbaa !2442
  %incdec.ptr4 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5950
  store i8* %incdec.ptr4, i8** %str.addr, align 8, !dbg !5950, !tbaa !2442
  br label %if.end15, !dbg !5951

if.else:                                          ; preds = %land.lhs.true, %while.body
  %9 = load i8*, i8** %str.addr, align 8, !dbg !5952, !tbaa !2442
  %10 = load i8, i8* %9, align 1, !dbg !5954, !tbaa !2497, !ctir !147
  %call5 = call zeroext i8 @to_uchar(i8 signext %10), !dbg !5955
  %idxprom = zext i8 %call5 to i64, !dbg !5956
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @RFC3986, i64 0, i64 %idxprom, !dbg !5956, !ctir !343
  %11 = load i8, i8* %arrayidx, align 1, !dbg !5956, !tbaa !2497
  %tobool6 = icmp ne i8 %11, 0, !dbg !5956
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !5957

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !5958, !tbaa !2442
  %incdec.ptr8 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !5958
  store i8* %incdec.ptr8, i8** %str.addr, align 8, !dbg !5958, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !5959, !tbaa !2497, !ctir !147
  %14 = load i8*, i8** %p, align 8, !dbg !5960, !tbaa !2442
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5960
  store i8* %incdec.ptr9, i8** %p, align 8, !dbg !5960, !tbaa !2442
  store i8 %13, i8* %14, align 1, !dbg !5961, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !5962

if.else10:                                        ; preds = %if.else
  %15 = load i8*, i8** %p, align 8, !dbg !5963, !tbaa !2442
  %16 = load i8*, i8** %str.addr, align 8, !dbg !5964, !tbaa !2442
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5964
  store i8* %incdec.ptr11, i8** %str.addr, align 8, !dbg !5964, !tbaa !2442
  %17 = load i8, i8* %16, align 1, !dbg !5965, !tbaa !2497, !ctir !147
  %call12 = call zeroext i8 @to_uchar(i8 signext %17), !dbg !5966
  %conv13 = zext i8 %call12 to i32, !dbg !5966
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), i32 %conv13) #13, !dbg !5967
  %18 = load i8*, i8** %p, align 8, !dbg !5968, !tbaa !2442
  %idx.ext = sext i32 %call14 to i64, !dbg !5968
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !5968
  store i8* %add.ptr, i8** %p, align 8, !dbg !5968, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !5938, !llvm.loop !5969

while.end:                                        ; preds = %while.cond
  %19 = load i8*, i8** %p, align 8, !dbg !5971, !tbaa !2442
  store i8 0, i8* %19, align 1, !dbg !5972, !tbaa !2497, !ctir !144
  %20 = load i8*, i8** %esc, align 8, !dbg !5973, !tbaa !2442
  ret i8* %20, !dbg !5974
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @to_uchar(i8 signext %ch) #0 !dbg !5975 !ctir !589 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  %0 = load i8, i8* %ch.addr, align 1, !dbg !5978, !tbaa !2497
  ret i8 %0, !dbg !5979
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind
declare dso_local i32 @wcwidth(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_file_name_and_frills(%struct.fileinfo* %f, i64 %start_col) #0 !dbg !5980 !ctir !735 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %start_col.addr = alloca i64, align 8
  %buf = alloca [652 x i8], align 16, !ctir !622
  %width = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !5985, metadata !DIExpression()), !dbg !5986
  call void @set_normal_color(), !dbg !5987
  %0 = load i8, i8* @print_inode, align 1, !dbg !5988, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !5988
  br i1 %tobool, label %if.then, label %if.end, !dbg !5990

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !5991, !tbaa !2497
  %cmp = icmp eq i32 %1, 4, !dbg !5992
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5991

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5991

cond.false:                                       ; preds = %if.then
  %2 = load i32, i32* @inode_number_width, align 4, !dbg !5993, !tbaa !2436
  br label %cond.end, !dbg !5991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %2, %cond.false ], !dbg !5991
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !5994
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !5995, !tbaa !2442
  %call = call i8* @format_inode(i8* %arraydecay, i64 652, %struct.fileinfo* %3), !dbg !5996
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond, i8* %call), !dbg !5997
  br label %if.end, !dbg !5997

if.end:                                           ; preds = %cond.end, %entry
  %4 = load i8, i8* @print_block_size, align 1, !dbg !5998, !tbaa !2461
  %tobool2 = trunc i8 %4 to i1, !dbg !5998
  br i1 %tobool2, label %if.then3, label %if.end17, !dbg !6000

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* @format, align 4, !dbg !6001, !tbaa !2497
  %cmp4 = icmp eq i32 %5, 4, !dbg !6002
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !6001

cond.true5:                                       ; preds = %if.then3
  br label %cond.end7, !dbg !6001

cond.false6:                                      ; preds = %if.then3
  %6 = load i32, i32* @block_size_width, align 4, !dbg !6003, !tbaa !2436
  br label %cond.end7, !dbg !6001

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ %6, %cond.false6 ], !dbg !6001
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6004, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 7, !dbg !6005, !ctir !184
  %8 = load i8, i8* %stat_ok, align 8, !dbg !6005, !tbaa !4023
  %tobool9 = trunc i8 %8 to i1, !dbg !6005, !ctir !141
  br i1 %tobool9, label %cond.false11, label %cond.true10, !dbg !6006

cond.true10:                                      ; preds = %cond.end7
  br label %cond.end14, !dbg !6006

cond.false11:                                     ; preds = %cond.end7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6007, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 3, !dbg !6007, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 10, !dbg !6007, !ctir !191
  %10 = load i64, i64* %st_blocks, align 8, !dbg !6007, !tbaa !4224, !ctir !212
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !6008
  %11 = load i32, i32* @human_output_opts, align 4, !dbg !6009, !tbaa !2436
  %12 = load i64, i64* @output_block_size, align 8, !dbg !6010, !tbaa !2579
  %call13 = call i8* @human_readable(i64 %10, i8* %arraydecay12, i32 %11, i64 512, i64 %12), !dbg !6011
  br label %cond.end14, !dbg !6006

cond.end14:                                       ; preds = %cond.false11, %cond.true10
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true10 ], [ %call13, %cond.false11 ], !dbg !6006
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond8, i8* %cond15), !dbg !6012
  br label %if.end17, !dbg !6012

if.end17:                                         ; preds = %cond.end14, %if.end
  %13 = load i8, i8* @print_scontext, align 1, !dbg !6013, !tbaa !2461
  %tobool18 = trunc i8 %13 to i1, !dbg !6013
  br i1 %tobool18, label %if.then19, label %if.end26, !dbg !6015

if.then19:                                        ; preds = %if.end17
  %14 = load i32, i32* @format, align 4, !dbg !6016, !tbaa !2497
  %cmp20 = icmp eq i32 %14, 4, !dbg !6017
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !6016

cond.true21:                                      ; preds = %if.then19
  br label %cond.end23, !dbg !6016

cond.false22:                                     ; preds = %if.then19
  %15 = load i32, i32* @scontext_width, align 4, !dbg !6018, !tbaa !2436
  br label %cond.end23, !dbg !6016

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ %15, %cond.false22 ], !dbg !6016
  %16 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6019, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %16, i32 0, i32 6, !dbg !6020, !ctir !184
  %17 = load i8*, i8** %scontext, align 8, !dbg !6020, !tbaa !4070, !ctir !143
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %cond24, i8* %17), !dbg !6021
  br label %if.end26, !dbg !6021

if.end26:                                         ; preds = %cond.end23, %if.end17
  call void @llvm.dbg.declare(metadata i64* %width, metadata !6022, metadata !DIExpression()), !dbg !6023
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6024, !tbaa !2442
  %19 = load i64, i64* %start_col.addr, align 8, !dbg !6025, !tbaa !2579
  %call27 = call i64 @print_name_with_quoting(%struct.fileinfo* %18, i1 zeroext false, %struct.obstack* null, i64 %19), !dbg !6026
  store i64 %call27, i64* %width, align 8, !dbg !6023, !tbaa !2579
  %20 = load i32, i32* @indicator_style, align 4, !dbg !6027, !tbaa !2497
  %cmp28 = icmp ne i32 %20, 0, !dbg !6029
  br i1 %cmp28, label %if.then29, label %if.end34, !dbg !6030

if.then29:                                        ; preds = %if.end26
  %21 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6031, !tbaa !2442
  %stat_ok30 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %21, i32 0, i32 7, !dbg !6032, !ctir !184
  %22 = load i8, i8* %stat_ok30, align 8, !dbg !6032, !tbaa !4023
  %tobool31 = trunc i8 %22 to i1, !dbg !6032, !ctir !141
  %23 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6033, !tbaa !2442
  %stat32 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %23, i32 0, i32 3, !dbg !6034, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat32, i32 0, i32 3, !dbg !6035, !ctir !191
  %24 = load i32, i32* %st_mode, align 8, !dbg !6035, !tbaa !3982, !ctir !201
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6036, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 4, !dbg !6037, !ctir !184
  %26 = load i32, i32* %filetype, align 8, !dbg !6037, !tbaa !3815, !ctir !36
  %call33 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool31, i32 %24, i32 %26), !dbg !6038
  %conv = zext i1 %call33 to i64, !dbg !6038
  %27 = load i64, i64* %width, align 8, !dbg !6039, !tbaa !2579
  %add = add i64 %27, %conv, !dbg !6039
  store i64 %add, i64* %width, align 8, !dbg !6039, !tbaa !2579
  br label %if.end34, !dbg !6040

if.end34:                                         ; preds = %if.then29, %if.end26
  %28 = load i64, i64* %width, align 8, !dbg !6041, !tbaa !2579
  ret i64 %28, !dbg !6042
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_with_separator(i8 signext %sep) #0 !dbg !6043 !ctir !749 {
entry:
  %sep.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %len = alloca i64, align 8, !ctir !149
  %separator = alloca i8, align 1, !ctir !144
  store i8 %sep, i8* %sep.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6048, metadata !DIExpression()), !dbg !6049
  store i64 0, i64* %pos, align 8, !dbg !6049, !tbaa !2579
  store i64 0, i64* %filesno, align 8, !dbg !6050, !tbaa !2579
  br label %for.cond, !dbg !6052

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %filesno, align 8, !dbg !6053, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !6055, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !6056
  br i1 %cmp, label %for.body, label %for.end, !dbg !6057

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6058, metadata !DIExpression()), !dbg !6060
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6061, !tbaa !2442
  %3 = load i64, i64* %filesno, align 8, !dbg !6062, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !6061, !ctir !663
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !6061, !tbaa !2442
  %5 = bitcast i8* %4 to %struct.fileinfo*, !dbg !6061
  store %struct.fileinfo* %5, %struct.fileinfo** %f, align 8, !dbg !6060, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6063, metadata !DIExpression()), !dbg !6064
  %6 = load i64, i64* @line_length, align 8, !dbg !6065, !tbaa !2579
  %tobool = icmp ne i64 %6, 0, !dbg !6065
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6065

cond.true:                                        ; preds = %for.body
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6066, !tbaa !2442
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %7), !dbg !6067
  br label %cond.end, !dbg !6065

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !6065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !6065
  store i64 %cond, i64* %len, align 8, !dbg !6064, !tbaa !2579
  %8 = load i64, i64* %filesno, align 8, !dbg !6068, !tbaa !2579
  %cmp1 = icmp ne i64 %8, 0, !dbg !6070
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !6071

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %separator, metadata !6072, metadata !DIExpression()), !dbg !6074
  %9 = load i64, i64* @line_length, align 8, !dbg !6075, !tbaa !2579
  %tobool2 = icmp ne i64 %9, 0, !dbg !6075
  br i1 %tobool2, label %lor.lhs.false, label %if.then7, !dbg !6077

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i64, i64* %pos, align 8, !dbg !6078, !tbaa !2579
  %11 = load i64, i64* %len, align 8, !dbg !6079, !tbaa !2579
  %add = add i64 %10, %11, !dbg !6080
  %add3 = add i64 %add, 2, !dbg !6081
  %12 = load i64, i64* @line_length, align 8, !dbg !6082, !tbaa !2579
  %cmp4 = icmp ult i64 %add3, %12, !dbg !6083
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !6084

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load i64, i64* %pos, align 8, !dbg !6085, !tbaa !2579
  %14 = load i64, i64* %len, align 8, !dbg !6086, !tbaa !2579
  %sub = sub i64 -1, %14, !dbg !6087
  %sub5 = sub i64 %sub, 2, !dbg !6088
  %cmp6 = icmp ule i64 %13, %sub5, !dbg !6089
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6090

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %15 = load i64, i64* %pos, align 8, !dbg !6091, !tbaa !2579
  %add8 = add i64 %15, 2, !dbg !6091
  store i64 %add8, i64* %pos, align 8, !dbg !6091, !tbaa !2579
  store i8 32, i8* %separator, align 1, !dbg !6093, !tbaa !2497
  br label %if.end, !dbg !6094

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i64 0, i64* %pos, align 8, !dbg !6095, !tbaa !2579
  store i8 10, i8* %separator, align 1, !dbg !6097, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %16 = load i8, i8* %sep.addr, align 1, !dbg !6098, !tbaa !2497
  %conv = sext i8 %16 to i32, !dbg !6098
  %call9 = call i32 @putchar_unlocked(i32 %conv), !dbg !6098
  %17 = load i8, i8* %separator, align 1, !dbg !6099, !tbaa !2497
  %conv10 = sext i8 %17 to i32, !dbg !6099
  %call11 = call i32 @putchar_unlocked(i32 %conv10), !dbg !6099
  br label %if.end12, !dbg !6100

if.end12:                                         ; preds = %if.end, %cond.end
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6101, !tbaa !2442
  %19 = load i64, i64* %pos, align 8, !dbg !6102, !tbaa !2579
  %call13 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6103
  %20 = load i64, i64* %len, align 8, !dbg !6104, !tbaa !2579
  %21 = load i64, i64* %pos, align 8, !dbg !6105, !tbaa !2579
  %add14 = add i64 %21, %20, !dbg !6105
  store i64 %add14, i64* %pos, align 8, !dbg !6105, !tbaa !2579
  br label %for.inc, !dbg !6106

for.inc:                                          ; preds = %if.end12
  %22 = load i64, i64* %filesno, align 8, !dbg !6107, !tbaa !2579
  %inc = add i64 %22, 1, !dbg !6107
  store i64 %inc, i64* %filesno, align 8, !dbg !6107, !tbaa !2579
  br label %for.cond, !dbg !6108, !llvm.loop !6109

for.end:                                          ; preds = %for.cond
  %call15 = call i32 @putchar_unlocked(i32 10), !dbg !6111
  ret void, !dbg !6112
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_many_per_line() #0 !dbg !6113 !ctir !341 {
entry:
  %row = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !755
  %rows = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %row, metadata !6114, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6116, metadata !DIExpression()), !dbg !6117
  %call = call i64 @calculate_columns(i1 zeroext true), !dbg !6118
  store i64 %call, i64* %cols, align 8, !dbg !6117, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6121, !tbaa !2442
  %1 = load i64, i64* %cols, align 8, !dbg !6122, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !6123
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6121, !ctir !762
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6120, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %rows, metadata !6124, metadata !DIExpression()), !dbg !6125
  %2 = load i64, i64* @cwd_n_used, align 8, !dbg !6126, !tbaa !2579
  %3 = load i64, i64* %cols, align 8, !dbg !6127, !tbaa !2579
  %div = udiv i64 %2, %3, !dbg !6128
  %4 = load i64, i64* @cwd_n_used, align 8, !dbg !6129, !tbaa !2579
  %5 = load i64, i64* %cols, align 8, !dbg !6130, !tbaa !2579
  %rem = urem i64 %4, %5, !dbg !6131
  %cmp = icmp ne i64 %rem, 0, !dbg !6132
  %conv = zext i1 %cmp to i32, !dbg !6132
  %conv1 = sext i32 %conv to i64, !dbg !6133
  %add = add i64 %div, %conv1, !dbg !6134
  store i64 %add, i64* %rows, align 8, !dbg !6125, !tbaa !2579
  store i64 0, i64* %row, align 8, !dbg !6135, !tbaa !2579
  br label %for.cond, !dbg !6137

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i64, i64* %row, align 8, !dbg !6138, !tbaa !2579
  %7 = load i64, i64* %rows, align 8, !dbg !6140, !tbaa !2579
  %cmp2 = icmp ult i64 %6, %7, !dbg !6141
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6143, metadata !DIExpression()), !dbg !6145
  store i64 0, i64* %col, align 8, !dbg !6145, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6146, metadata !DIExpression()), !dbg !6147
  %8 = load i64, i64* %row, align 8, !dbg !6148, !tbaa !2579
  store i64 %8, i64* %filesno, align 8, !dbg !6147, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6149, metadata !DIExpression()), !dbg !6150
  store i64 0, i64* %pos, align 8, !dbg !6150, !tbaa !2579
  br label %while.body, !dbg !6151

while.body:                                       ; preds = %for.body, %if.end
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6152, metadata !DIExpression()), !dbg !6154
  %9 = load i8**, i8*** @sorted_file, align 8, !dbg !6155, !tbaa !2442
  %10 = load i64, i64* %filesno, align 8, !dbg !6156, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !6155, !ctir !663
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !6155, !tbaa !2442
  %12 = bitcast i8* %11 to %struct.fileinfo*, !dbg !6155
  store %struct.fileinfo* %12, %struct.fileinfo** %f, align 8, !dbg !6154, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6157, metadata !DIExpression()), !dbg !6158
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6159, !tbaa !2442
  %call5 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %13), !dbg !6160
  store i64 %call5, i64* %name_length, align 8, !dbg !6158, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6161, metadata !DIExpression()), !dbg !6162
  %14 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6163, !tbaa !2442
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %14, i32 0, i32 2, !dbg !6164, !ctir !756
  %15 = load i64*, i64** %col_arr, align 8, !dbg !6164, !tbaa !6165, !ctir !148
  %16 = load i64, i64* %col, align 8, !dbg !6167, !tbaa !2579
  %inc = add i64 %16, 1, !dbg !6167
  store i64 %inc, i64* %col, align 8, !dbg !6167, !tbaa !2579
  %arrayidx6 = getelementptr inbounds i64, i64* %15, i64 %16, !dbg !6163, !ctir !148
  %17 = load i64, i64* %arrayidx6, align 8, !dbg !6163, !tbaa !2579
  store i64 %17, i64* %max_name_length, align 8, !dbg !6162, !tbaa !2579
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6168, !tbaa !2442
  %19 = load i64, i64* %pos, align 8, !dbg !6169, !tbaa !2579
  %call7 = call i64 @print_file_name_and_frills(%struct.fileinfo* %18, i64 %19), !dbg !6170
  %20 = load i64, i64* %rows, align 8, !dbg !6171, !tbaa !2579
  %21 = load i64, i64* %filesno, align 8, !dbg !6172, !tbaa !2579
  %add8 = add i64 %21, %20, !dbg !6172
  store i64 %add8, i64* %filesno, align 8, !dbg !6172, !tbaa !2579
  %22 = load i64, i64* %filesno, align 8, !dbg !6173, !tbaa !2579
  %23 = load i64, i64* @cwd_n_used, align 8, !dbg !6175, !tbaa !2579
  %cmp9 = icmp uge i64 %22, %23, !dbg !6176
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6177

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6178

if.end:                                           ; preds = %while.body
  %24 = load i64, i64* %pos, align 8, !dbg !6179, !tbaa !2579
  %25 = load i64, i64* %name_length, align 8, !dbg !6180, !tbaa !2579
  %add11 = add i64 %24, %25, !dbg !6181
  %26 = load i64, i64* %pos, align 8, !dbg !6182, !tbaa !2579
  %27 = load i64, i64* %max_name_length, align 8, !dbg !6183, !tbaa !2579
  %add12 = add i64 %26, %27, !dbg !6184
  call void @indent(i64 %add11, i64 %add12), !dbg !6185
  %28 = load i64, i64* %max_name_length, align 8, !dbg !6186, !tbaa !2579
  %29 = load i64, i64* %pos, align 8, !dbg !6187, !tbaa !2579
  %add13 = add i64 %29, %28, !dbg !6187
  store i64 %add13, i64* %pos, align 8, !dbg !6187, !tbaa !2579
  br label %while.body, !dbg !6151, !llvm.loop !6188

while.end:                                        ; preds = %if.then
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6190
  br label %for.inc, !dbg !6191

for.inc:                                          ; preds = %while.end
  %30 = load i64, i64* %row, align 8, !dbg !6192, !tbaa !2579
  %inc15 = add i64 %30, 1, !dbg !6192
  store i64 %inc15, i64* %row, align 8, !dbg !6192, !tbaa !2579
  br label %for.cond, !dbg !6193, !llvm.loop !6194

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6196
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_horizontal() #0 !dbg !6197 !ctir !341 {
entry:
  %filesno = alloca i64, align 8, !ctir !149
  %pos = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %line_fmt = alloca %struct.column_info*, align 8, !ctir !755
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %max_name_length = alloca i64, align 8, !ctir !149
  %col = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !6198, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6200, metadata !DIExpression()), !dbg !6201
  store i64 0, i64* %pos, align 8, !dbg !6201, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !6202, metadata !DIExpression()), !dbg !6203
  %call = call i64 @calculate_columns(i1 zeroext false), !dbg !6204
  store i64 %call, i64* %cols, align 8, !dbg !6203, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.column_info** %line_fmt, metadata !6205, metadata !DIExpression()), !dbg !6206
  %0 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !6207, !tbaa !2442
  %1 = load i64, i64* %cols, align 8, !dbg !6208, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !6209
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %0, i64 %sub, !dbg !6207, !ctir !762
  store %struct.column_info* %arrayidx, %struct.column_info** %line_fmt, align 8, !dbg !6206, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !6210, metadata !DIExpression()), !dbg !6211
  %2 = load i8**, i8*** @sorted_file, align 8, !dbg !6212, !tbaa !2442
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !6212, !ctir !663
  %3 = load i8*, i8** %arrayidx1, align 8, !dbg !6212, !tbaa !2442
  %4 = bitcast i8* %3 to %struct.fileinfo*, !dbg !6212
  store %struct.fileinfo* %4, %struct.fileinfo** %f, align 8, !dbg !6211, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !6213, metadata !DIExpression()), !dbg !6214
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6215, !tbaa !2442
  %call2 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %5), !dbg !6216
  store i64 %call2, i64* %name_length, align 8, !dbg !6214, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_name_length, metadata !6217, metadata !DIExpression()), !dbg !6218
  %6 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6219, !tbaa !2442
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %6, i32 0, i32 2, !dbg !6220, !ctir !756
  %7 = load i64*, i64** %col_arr, align 8, !dbg !6220, !tbaa !6165, !ctir !148
  %arrayidx3 = getelementptr inbounds i64, i64* %7, i64 0, !dbg !6219, !ctir !148
  %8 = load i64, i64* %arrayidx3, align 8, !dbg !6219, !tbaa !2579
  store i64 %8, i64* %max_name_length, align 8, !dbg !6218, !tbaa !2579
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6221, !tbaa !2442
  %call4 = call i64 @print_file_name_and_frills(%struct.fileinfo* %9, i64 0), !dbg !6222
  store i64 1, i64* %filesno, align 8, !dbg !6223, !tbaa !2579
  br label %for.cond, !dbg !6225

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i64, i64* %filesno, align 8, !dbg !6226, !tbaa !2579
  %11 = load i64, i64* @cwd_n_used, align 8, !dbg !6228, !tbaa !2579
  %cmp = icmp ult i64 %10, %11, !dbg !6229
  br i1 %cmp, label %for.body, label %for.end, !dbg !6230

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %col, metadata !6231, metadata !DIExpression()), !dbg !6233
  %12 = load i64, i64* %filesno, align 8, !dbg !6234, !tbaa !2579
  %13 = load i64, i64* %cols, align 8, !dbg !6235, !tbaa !2579
  %rem = urem i64 %12, %13, !dbg !6236
  store i64 %rem, i64* %col, align 8, !dbg !6233, !tbaa !2579
  %14 = load i64, i64* %col, align 8, !dbg !6237, !tbaa !2579
  %cmp5 = icmp eq i64 %14, 0, !dbg !6239
  br i1 %cmp5, label %if.then, label %if.else, !dbg !6240

if.then:                                          ; preds = %for.body
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6241
  store i64 0, i64* %pos, align 8, !dbg !6243, !tbaa !2579
  br label %if.end, !dbg !6244

if.else:                                          ; preds = %for.body
  %15 = load i64, i64* %pos, align 8, !dbg !6245, !tbaa !2579
  %16 = load i64, i64* %name_length, align 8, !dbg !6247, !tbaa !2579
  %add = add i64 %15, %16, !dbg !6248
  %17 = load i64, i64* %pos, align 8, !dbg !6249, !tbaa !2579
  %18 = load i64, i64* %max_name_length, align 8, !dbg !6250, !tbaa !2579
  %add7 = add i64 %17, %18, !dbg !6251
  call void @indent(i64 %add, i64 %add7), !dbg !6252
  %19 = load i64, i64* %max_name_length, align 8, !dbg !6253, !tbaa !2579
  %20 = load i64, i64* %pos, align 8, !dbg !6254, !tbaa !2579
  %add8 = add i64 %20, %19, !dbg !6254
  store i64 %add8, i64* %pos, align 8, !dbg !6254, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i8**, i8*** @sorted_file, align 8, !dbg !6255, !tbaa !2442
  %22 = load i64, i64* %filesno, align 8, !dbg !6256, !tbaa !2579
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 %22, !dbg !6255, !ctir !663
  %23 = load i8*, i8** %arrayidx9, align 8, !dbg !6255, !tbaa !2442
  %24 = bitcast i8* %23 to %struct.fileinfo*, !dbg !6255
  store %struct.fileinfo* %24, %struct.fileinfo** %f, align 8, !dbg !6257, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6258, !tbaa !2442
  %26 = load i64, i64* %pos, align 8, !dbg !6259, !tbaa !2579
  %call10 = call i64 @print_file_name_and_frills(%struct.fileinfo* %25, i64 %26), !dbg !6260
  %27 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !6261, !tbaa !2442
  %call11 = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %27), !dbg !6262
  store i64 %call11, i64* %name_length, align 8, !dbg !6263, !tbaa !2579
  %28 = load %struct.column_info*, %struct.column_info** %line_fmt, align 8, !dbg !6264, !tbaa !2442
  %col_arr12 = getelementptr inbounds %struct.column_info, %struct.column_info* %28, i32 0, i32 2, !dbg !6265, !ctir !756
  %29 = load i64*, i64** %col_arr12, align 8, !dbg !6265, !tbaa !6165, !ctir !148
  %30 = load i64, i64* %col, align 8, !dbg !6266, !tbaa !2579
  %arrayidx13 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !6264, !ctir !148
  %31 = load i64, i64* %arrayidx13, align 8, !dbg !6264, !tbaa !2579
  store i64 %31, i64* %max_name_length, align 8, !dbg !6267, !tbaa !2579
  br label %for.inc, !dbg !6268

for.inc:                                          ; preds = %if.end
  %32 = load i64, i64* %filesno, align 8, !dbg !6269, !tbaa !2579
  %inc = add i64 %32, 1, !dbg !6269
  store i64 %inc, i64* %filesno, align 8, !dbg !6269, !tbaa !2579
  br label %for.cond, !dbg !6270, !llvm.loop !6271

for.end:                                          ; preds = %for.cond
  %call14 = call i32 @putchar_unlocked(i32 10), !dbg !6273
  ret void, !dbg !6274
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_normal_color() #0 !dbg !6275 !ctir !341 {
entry:
  %0 = load i8, i8* @print_with_color, align 1, !dbg !6276, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6276
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6278

land.lhs.true:                                    ; preds = %entry
  %call = call zeroext i1 @is_colored(i32 4), !dbg !6279
  br i1 %call, label %if.then, label %if.end, !dbg !6280

if.then:                                          ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 0)), !dbg !6281
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 4)), !dbg !6283
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 1)), !dbg !6284
  br label %if.end, !dbg !6285

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6286
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_long_format(%struct.fileinfo* %f) #0 !dbg !6287 !ctir !767 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %modebuf = alloca [12 x i8], align 1, !ctir !769
  %buf = alloca [3643 x i8], align 16, !ctir !770
  %s = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %when_timespec = alloca %struct.dev_ino, align 8, !ctir !214
  %when_local = alloca %struct.tm, align 8, !ctir !786
  %tmp = alloca %struct.dev_ino, align 8
  %tmp20 = alloca %struct.dev_ino, align 8
  %tmp24 = alloca %struct.dev_ino, align 8
  %hbuf = alloca [21 x i8], align 16, !ctir !669
  %hbuf38 = alloca [652 x i8], align 16, !ctir !622
  %blocks = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %hbuf51 = alloca [21 x i8], align 16, !ctir !669
  %majorbuf = alloca [21 x i8], align 16, !ctir !669
  %minorbuf = alloca [21 x i8], align 16, !ctir !669
  %blanks_width = alloca i32, align 4, !ctir !27
  %hbuf141 = alloca [652 x i8], align 16, !ctir !622
  %size = alloca i8*, align 8, !ctir !146
  %pad152 = alloca i32, align 4, !ctir !27
  %six_months_ago = alloca %struct.dev_ino, align 8, !ctir !214
  %recent = alloca i8, align 1, !ctir !141
  %hbuf203 = alloca [21 x i8], align 16, !ctir !669
  %w = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.declare(metadata [12 x i8]* %modebuf, metadata !6290, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.declare(metadata [3643 x i8]* %buf, metadata !6292, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %s, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %when_timespec, metadata !6298, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.declare(metadata %struct.tm* %when_local, metadata !6300, metadata !DIExpression()), !dbg !6301
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6302, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 7, !dbg !6304, !ctir !184
  %1 = load i8, i8* %stat_ok, align 8, !dbg !6304, !tbaa !4023
  %tobool = trunc i8 %1 to i1, !dbg !6304, !ctir !141
  br i1 %tobool, label %if.then, label %if.else, !dbg !6305

if.then:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6306, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !6307, !ctir !184
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6308
  call void @filemodestring(%struct.stat* %stat, i8* %arraydecay), !dbg !6309
  br label %if.end, !dbg !6309

if.else:                                          ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6310, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 4, !dbg !6312, !ctir !184
  %4 = load i32, i32* %filetype, align 8, !dbg !6312, !tbaa !3815, !ctir !36
  %idxprom = zext i32 %4 to i64, !dbg !6313
  %arrayidx = getelementptr inbounds [11 x i8], [11 x i8]* @filetype_letter, i64 0, i64 %idxprom, !dbg !6313, !ctir !773
  %5 = load i8, i8* %arrayidx, align 1, !dbg !6313, !tbaa !2497
  %arrayidx1 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6314, !ctir !769
  store i8 %5, i8* %arrayidx1, align 1, !dbg !6315, !tbaa !2497
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6316
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 1, !dbg !6317
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 63, i64 10, i1 false), !dbg !6318
  %arrayidx3 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 11, !dbg !6319, !ctir !769
  store i8 0, i8* %arrayidx3, align 1, !dbg !6320, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* @any_has_acl, align 1, !dbg !6321, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !6321
  br i1 %tobool4, label %if.else7, label %if.then5, !dbg !6323

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6324, !ctir !769
  store i8 0, i8* %arrayidx6, align 1, !dbg !6325, !tbaa !2497
  br label %if.end17, !dbg !6324

if.else7:                                         ; preds = %if.end
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6326, !tbaa !2442
  %acl_type = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 9, !dbg !6328, !ctir !184
  %8 = load i32, i32* %acl_type, align 4, !dbg !6328, !tbaa !4123, !ctir !48
  %cmp = icmp eq i32 %8, 1, !dbg !6329
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !6330

if.then8:                                         ; preds = %if.else7
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6331, !ctir !769
  store i8 46, i8* %arrayidx9, align 1, !dbg !6332, !tbaa !2497
  br label %if.end16, !dbg !6331

if.else10:                                        ; preds = %if.else7
  %9 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6333, !tbaa !2442
  %acl_type11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %9, i32 0, i32 9, !dbg !6335, !ctir !184
  %10 = load i32, i32* %acl_type11, align 4, !dbg !6335, !tbaa !4123, !ctir !48
  %cmp12 = icmp eq i32 %10, 2, !dbg !6336
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6337

if.then13:                                        ; preds = %if.else10
  %arrayidx14 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 10, !dbg !6338, !ctir !769
  store i8 43, i8* %arrayidx14, align 1, !dbg !6339, !tbaa !2497
  br label %if.end15, !dbg !6338

if.end15:                                         ; preds = %if.then13, %if.else10
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  %11 = load i32, i32* @time_type, align 4, !dbg !6340, !tbaa !2497
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb19
    i32 2, label %sw.bb23
  ], !dbg !6341

sw.bb:                                            ; preds = %if.end17
  %12 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6342, !tbaa !2442
  %stat18 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 3, !dbg !6344, !ctir !184
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat18) #16, !dbg !6345
  %13 = bitcast %struct.dev_ino* %tmp to { i64, i64 }*, !dbg !6345
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !6345
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !6345
  store i64 %15, i64* %14, align 8, !dbg !6345
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !6345
  %17 = extractvalue { i64, i64 } %call, 1, !dbg !6345
  store i64 %17, i64* %16, align 8, !dbg !6345
  %18 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6345
  %19 = bitcast %struct.dev_ino* %tmp to i8*, !dbg !6345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !6345, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6346

sw.bb19:                                          ; preds = %if.end17
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6347, !tbaa !2442
  %stat21 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 3, !dbg !6348, !ctir !184
  %call22 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat21) #16, !dbg !6349
  %21 = bitcast %struct.dev_ino* %tmp20 to { i64, i64 }*, !dbg !6349
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !6349
  %23 = extractvalue { i64, i64 } %call22, 0, !dbg !6349
  store i64 %23, i64* %22, align 8, !dbg !6349
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !6349
  %25 = extractvalue { i64, i64 } %call22, 1, !dbg !6349
  store i64 %25, i64* %24, align 8, !dbg !6349
  %26 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6349
  %27 = bitcast %struct.dev_ino* %tmp20 to i8*, !dbg !6349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false), !dbg !6349, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6350

sw.bb23:                                          ; preds = %if.end17
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6351, !tbaa !2442
  %stat25 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 3, !dbg !6352, !ctir !184
  %call26 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat25) #16, !dbg !6353
  %29 = bitcast %struct.dev_ino* %tmp24 to { i64, i64 }*, !dbg !6353
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !6353
  %31 = extractvalue { i64, i64 } %call26, 0, !dbg !6353
  store i64 %31, i64* %30, align 8, !dbg !6353
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !6353
  %33 = extractvalue { i64, i64 } %call26, 1, !dbg !6353
  store i64 %33, i64* %32, align 8, !dbg !6353
  %34 = bitcast %struct.dev_ino* %when_timespec to i8*, !dbg !6353
  %35 = bitcast %struct.dev_ino* %tmp24 to i8*, !dbg !6353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !6353, !tbaa.struct !4755
  br label %sw.epilog, !dbg !6354

sw.default:                                       ; preds = %if.end17
  call void @abort() #15, !dbg !6355
  unreachable, !dbg !6355

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb19, %sw.bb
  %arraydecay27 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6356
  store i8* %arraydecay27, i8** %p, align 8, !dbg !6357, !tbaa !2442
  %36 = load i8, i8* @print_inode, align 1, !dbg !6358, !tbaa !2461
  %tobool28 = trunc i8 %36 to i1, !dbg !6358
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !6360

if.then29:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf, metadata !6361, metadata !DIExpression()), !dbg !6363
  %37 = load i8*, i8** %p, align 8, !dbg !6364, !tbaa !2442
  %38 = load i32, i32* @inode_number_width, align 4, !dbg !6365, !tbaa !2436
  %arraydecay30 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf, i64 0, i64 0, !dbg !6366
  %39 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6367, !tbaa !2442
  %call31 = call i8* @format_inode(i8* %arraydecay30, i64 21, %struct.fileinfo* %39), !dbg !6368
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %38, i8* %call31) #13, !dbg !6369
  %40 = load i8*, i8** %p, align 8, !dbg !6370, !tbaa !2442
  %call33 = call i64 @strlen(i8* %40) #16, !dbg !6371
  %41 = load i8*, i8** %p, align 8, !dbg !6372, !tbaa !2442
  %add.ptr34 = getelementptr inbounds i8, i8* %41, i64 %call33, !dbg !6372
  store i8* %add.ptr34, i8** %p, align 8, !dbg !6372, !tbaa !2442
  br label %if.end35, !dbg !6373

if.end35:                                         ; preds = %if.then29, %sw.epilog
  %42 = load i8, i8* @print_block_size, align 1, !dbg !6374, !tbaa !2461
  %tobool36 = trunc i8 %42 to i1, !dbg !6374
  br i1 %tobool36, label %if.then37, label %if.end50, !dbg !6376

if.then37:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf38, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata i8** %blocks, metadata !6380, metadata !DIExpression()), !dbg !6381
  %43 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6382, !tbaa !2442
  %stat_ok39 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %43, i32 0, i32 7, !dbg !6383, !ctir !184
  %44 = load i8, i8* %stat_ok39, align 8, !dbg !6383, !tbaa !4023
  %tobool40 = trunc i8 %44 to i1, !dbg !6383, !ctir !141
  br i1 %tobool40, label %cond.false, label %cond.true, !dbg !6384

cond.true:                                        ; preds = %if.then37
  br label %cond.end, !dbg !6384

cond.false:                                       ; preds = %if.then37
  %45 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6385, !tbaa !2442
  %stat41 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %45, i32 0, i32 3, !dbg !6385, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat41, i32 0, i32 10, !dbg !6385, !ctir !191
  %46 = load i64, i64* %st_blocks, align 8, !dbg !6385, !tbaa !4224, !ctir !212
  %arraydecay42 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf38, i64 0, i64 0, !dbg !6386
  %47 = load i32, i32* @human_output_opts, align 4, !dbg !6387, !tbaa !2436
  %48 = load i64, i64* @output_block_size, align 8, !dbg !6388, !tbaa !2579
  %call43 = call i8* @human_readable(i64 %46, i8* %arraydecay42, i32 %47, i64 512, i64 %48), !dbg !6389
  br label %cond.end, !dbg !6384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %call43, %cond.false ], !dbg !6384
  store i8* %cond, i8** %blocks, align 8, !dbg !6381, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6390, metadata !DIExpression()), !dbg !6391
  %49 = load i32, i32* @block_size_width, align 4, !dbg !6392, !tbaa !2436
  %50 = load i8*, i8** %blocks, align 8, !dbg !6394, !tbaa !2442
  %call44 = call i32 @gnu_mbswidth(i8* %50, i32 0), !dbg !6395
  %sub = sub nsw i32 %49, %call44, !dbg !6396
  store i32 %sub, i32* %pad, align 4, !dbg !6397, !tbaa !2436
  br label %for.cond, !dbg !6398

for.cond:                                         ; preds = %for.inc, %cond.end
  %51 = load i32, i32* %pad, align 4, !dbg !6399, !tbaa !2436
  %cmp45 = icmp slt i32 0, %51, !dbg !6401
  br i1 %cmp45, label %for.body, label %for.end, !dbg !6402

for.body:                                         ; preds = %for.cond
  %52 = load i8*, i8** %p, align 8, !dbg !6403, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %52, i32 1, !dbg !6403
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6403, !tbaa !2442
  store i8 32, i8* %52, align 1, !dbg !6404, !tbaa !2497, !ctir !144
  br label %for.inc, !dbg !6405

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %pad, align 4, !dbg !6406, !tbaa !2436
  %dec = add nsw i32 %53, -1, !dbg !6406
  store i32 %dec, i32* %pad, align 4, !dbg !6406, !tbaa !2436
  br label %for.cond, !dbg !6407, !llvm.loop !6408

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !6410

while.cond:                                       ; preds = %while.body, %for.end
  %54 = load i8*, i8** %blocks, align 8, !dbg !6411, !tbaa !2442
  %incdec.ptr46 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !6411
  store i8* %incdec.ptr46, i8** %blocks, align 8, !dbg !6411, !tbaa !2442
  %55 = load i8, i8* %54, align 1, !dbg !6412, !tbaa !2497, !ctir !147
  %56 = load i8*, i8** %p, align 8, !dbg !6413, !tbaa !2442
  %incdec.ptr47 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !6413
  store i8* %incdec.ptr47, i8** %p, align 8, !dbg !6413, !tbaa !2442
  store i8 %55, i8* %56, align 1, !dbg !6414, !tbaa !2497, !ctir !144
  %tobool48 = icmp ne i8 %55, 0, !dbg !6410
  br i1 %tobool48, label %while.body, label %while.end, !dbg !6410

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !6415, !llvm.loop !6416

while.end:                                        ; preds = %while.cond
  %57 = load i8*, i8** %p, align 8, !dbg !6417, !tbaa !2442
  %arrayidx49 = getelementptr inbounds i8, i8* %57, i64 -1, !dbg !6417, !ctir !143
  store i8 32, i8* %arrayidx49, align 1, !dbg !6418, !tbaa !2497
  br label %if.end50, !dbg !6419

if.end50:                                         ; preds = %while.end, %if.end35
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf51, metadata !6420, metadata !DIExpression()), !dbg !6422
  %58 = load i8*, i8** %p, align 8, !dbg !6423, !tbaa !2442
  %arraydecay52 = getelementptr inbounds [12 x i8], [12 x i8]* %modebuf, i64 0, i64 0, !dbg !6424
  %59 = load i32, i32* @nlink_width, align 4, !dbg !6425, !tbaa !2436
  %60 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6426, !tbaa !2442
  %stat_ok53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %60, i32 0, i32 7, !dbg !6427, !ctir !184
  %61 = load i8, i8* %stat_ok53, align 8, !dbg !6427, !tbaa !4023
  %tobool54 = trunc i8 %61 to i1, !dbg !6427, !ctir !141
  br i1 %tobool54, label %cond.false56, label %cond.true55, !dbg !6428

cond.true55:                                      ; preds = %if.end50
  br label %cond.end60, !dbg !6428

cond.false56:                                     ; preds = %if.end50
  %62 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6429, !tbaa !2442
  %stat57 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %62, i32 0, i32 3, !dbg !6430, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat57, i32 0, i32 2, !dbg !6431, !ctir !191
  %63 = load i64, i64* %st_nlink, align 8, !dbg !6431, !tbaa !4347, !ctir !199
  %arraydecay58 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf51, i64 0, i64 0, !dbg !6432
  %call59 = call i8* @umaxtostr(i64 %63, i8* %arraydecay58), !dbg !6433
  br label %cond.end60, !dbg !6428

cond.end60:                                       ; preds = %cond.false56, %cond.true55
  %cond61 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true55 ], [ %call59, %cond.false56 ], !dbg !6428
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i64 0, i64 0), i8* %arraydecay52, i32 %59, i8* %cond61) #13, !dbg !6434
  %64 = load i8*, i8** %p, align 8, !dbg !6435, !tbaa !2442
  %call63 = call i64 @strlen(i8* %64) #16, !dbg !6436
  %65 = load i8*, i8** %p, align 8, !dbg !6437, !tbaa !2442
  %add.ptr64 = getelementptr inbounds i8, i8* %65, i64 %call63, !dbg !6437
  store i8* %add.ptr64, i8** %p, align 8, !dbg !6437, !tbaa !2442
  br label %do.body, !dbg !6438

do.body:                                          ; preds = %cond.end60
  %66 = load i8, i8* @dired, align 1, !dbg !6439, !tbaa !2461
  %tobool65 = trunc i8 %66 to i1, !dbg !6439
  br i1 %tobool65, label %if.then66, label %if.end69, !dbg !6442

if.then66:                                        ; preds = %do.body
  br label %do.body67, !dbg !6439

do.body67:                                        ; preds = %if.then66
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6443, !tbaa !2442
  %call68 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0), %struct._IO_FILE* %67), !dbg !6443
  %68 = load i64, i64* @dired_pos, align 8, !dbg !6443, !tbaa !2579
  %add = add i64 %68, 2, !dbg !6443
  store i64 %add, i64* @dired_pos, align 8, !dbg !6443, !tbaa !2579
  br label %do.end, !dbg !6443

do.end:                                           ; preds = %do.body67
  br label %if.end69, !dbg !6443

if.end69:                                         ; preds = %do.end, %do.body
  br label %do.end70, !dbg !6442

do.end70:                                         ; preds = %if.end69
  %69 = load i8, i8* @print_owner, align 1, !dbg !6445, !tbaa !2461
  %tobool71 = trunc i8 %69 to i1, !dbg !6445
  br i1 %tobool71, label %if.then77, label %lor.lhs.false, !dbg !6447

lor.lhs.false:                                    ; preds = %do.end70
  %70 = load i8, i8* @print_group, align 1, !dbg !6448, !tbaa !2461
  %tobool72 = trunc i8 %70 to i1, !dbg !6448
  br i1 %tobool72, label %if.then77, label %lor.lhs.false73, !dbg !6449

lor.lhs.false73:                                  ; preds = %lor.lhs.false
  %71 = load i8, i8* @print_author, align 1, !dbg !6450, !tbaa !2461
  %tobool74 = trunc i8 %71 to i1, !dbg !6450
  br i1 %tobool74, label %if.then77, label %lor.lhs.false75, !dbg !6451

lor.lhs.false75:                                  ; preds = %lor.lhs.false73
  %72 = load i8, i8* @print_scontext, align 1, !dbg !6452, !tbaa !2461
  %tobool76 = trunc i8 %72 to i1, !dbg !6452
  br i1 %tobool76, label %if.then77, label %if.end107, !dbg !6453

if.then77:                                        ; preds = %lor.lhs.false75, %lor.lhs.false73, %lor.lhs.false, %do.end70
  br label %do.body78, !dbg !6454

do.body78:                                        ; preds = %if.then77
  %arraydecay79 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6456
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6456, !tbaa !2442
  %call80 = call i32 @fputs_unlocked(i8* %arraydecay79, %struct._IO_FILE* %73), !dbg !6456
  %74 = load i8*, i8** %p, align 8, !dbg !6456, !tbaa !2442
  %arraydecay81 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6456
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64, !dbg !6456
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay81 to i64, !dbg !6456
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6456
  %75 = load i64, i64* @dired_pos, align 8, !dbg !6456, !tbaa !2579
  %add82 = add i64 %75, %sub.ptr.sub, !dbg !6456
  store i64 %add82, i64* @dired_pos, align 8, !dbg !6456, !tbaa !2579
  br label %do.end83, !dbg !6456

do.end83:                                         ; preds = %do.body78
  %76 = load i8, i8* @print_owner, align 1, !dbg !6458, !tbaa !2461
  %tobool84 = trunc i8 %76 to i1, !dbg !6458
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !6460

if.then85:                                        ; preds = %do.end83
  %77 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6461, !tbaa !2442
  %stat86 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %77, i32 0, i32 3, !dbg !6462, !ctir !184
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stat86, i32 0, i32 4, !dbg !6463, !ctir !191
  %78 = load i32, i32* %st_uid, align 4, !dbg !6463, !tbaa !4266, !ctir !203
  %79 = load i32, i32* @owner_width, align 4, !dbg !6464, !tbaa !2436
  %80 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6465, !tbaa !2442
  %stat_ok87 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %80, i32 0, i32 7, !dbg !6466, !ctir !184
  %81 = load i8, i8* %stat_ok87, align 8, !dbg !6466, !tbaa !4023
  %tobool88 = trunc i8 %81 to i1, !dbg !6466, !ctir !141
  call void @format_user(i32 %78, i32 %79, i1 zeroext %tobool88), !dbg !6467
  br label %if.end89, !dbg !6467

if.end89:                                         ; preds = %if.then85, %do.end83
  %82 = load i8, i8* @print_group, align 1, !dbg !6468, !tbaa !2461
  %tobool90 = trunc i8 %82 to i1, !dbg !6468
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !6470

if.then91:                                        ; preds = %if.end89
  %83 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6471, !tbaa !2442
  %stat92 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %83, i32 0, i32 3, !dbg !6472, !ctir !184
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stat92, i32 0, i32 5, !dbg !6473, !ctir !191
  %84 = load i32, i32* %st_gid, align 8, !dbg !6473, !tbaa !4286, !ctir !205
  %85 = load i32, i32* @group_width, align 4, !dbg !6474, !tbaa !2436
  %86 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6475, !tbaa !2442
  %stat_ok93 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %86, i32 0, i32 7, !dbg !6476, !ctir !184
  %87 = load i8, i8* %stat_ok93, align 8, !dbg !6476, !tbaa !4023
  %tobool94 = trunc i8 %87 to i1, !dbg !6476, !ctir !141
  call void @format_group(i32 %84, i32 %85, i1 zeroext %tobool94), !dbg !6477
  br label %if.end95, !dbg !6477

if.end95:                                         ; preds = %if.then91, %if.end89
  %88 = load i8, i8* @print_author, align 1, !dbg !6478, !tbaa !2461
  %tobool96 = trunc i8 %88 to i1, !dbg !6478
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !6480

if.then97:                                        ; preds = %if.end95
  %89 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6481, !tbaa !2442
  %stat98 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %89, i32 0, i32 3, !dbg !6482, !ctir !184
  %st_uid99 = getelementptr inbounds %struct.stat, %struct.stat* %stat98, i32 0, i32 4, !dbg !6483, !ctir !191
  %90 = load i32, i32* %st_uid99, align 4, !dbg !6483, !tbaa !4266, !ctir !203
  %91 = load i32, i32* @author_width, align 4, !dbg !6484, !tbaa !2436
  %92 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6485, !tbaa !2442
  %stat_ok100 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %92, i32 0, i32 7, !dbg !6486, !ctir !184
  %93 = load i8, i8* %stat_ok100, align 8, !dbg !6486, !tbaa !4023
  %tobool101 = trunc i8 %93 to i1, !dbg !6486, !ctir !141
  call void @format_user(i32 %90, i32 %91, i1 zeroext %tobool101), !dbg !6487
  br label %if.end102, !dbg !6487

if.end102:                                        ; preds = %if.then97, %if.end95
  %94 = load i8, i8* @print_scontext, align 1, !dbg !6488, !tbaa !2461
  %tobool103 = trunc i8 %94 to i1, !dbg !6488
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !6490

if.then104:                                       ; preds = %if.end102
  %95 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6491, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %95, i32 0, i32 6, !dbg !6492, !ctir !184
  %96 = load i8*, i8** %scontext, align 8, !dbg !6492, !tbaa !4070, !ctir !143
  %97 = load i32, i32* @scontext_width, align 4, !dbg !6493, !tbaa !2436
  call void @format_user_or_group(i8* %96, i64 0, i32 %97), !dbg !6494
  br label %if.end105, !dbg !6494

if.end105:                                        ; preds = %if.then104, %if.end102
  %arraydecay106 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6495
  store i8* %arraydecay106, i8** %p, align 8, !dbg !6496, !tbaa !2442
  br label %if.end107, !dbg !6497

if.end107:                                        ; preds = %if.end105, %lor.lhs.false75
  %98 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6498, !tbaa !2442
  %stat_ok108 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %98, i32 0, i32 7, !dbg !6500, !ctir !184
  %99 = load i8, i8* %stat_ok108, align 8, !dbg !6500, !tbaa !4023
  %tobool109 = trunc i8 %99 to i1, !dbg !6500, !ctir !141
  br i1 %tobool109, label %land.lhs.true, label %if.else140, !dbg !6501

land.lhs.true:                                    ; preds = %if.end107
  %100 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6502, !tbaa !2442
  %stat110 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %100, i32 0, i32 3, !dbg !6502, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat110, i32 0, i32 3, !dbg !6502, !ctir !191
  %101 = load i32, i32* %st_mode, align 8, !dbg !6502, !tbaa !3982, !ctir !201
  %and = and i32 %101, 61440, !dbg !6502
  %cmp111 = icmp eq i32 %and, 8192, !dbg !6502
  br i1 %cmp111, label %if.then117, label %lor.lhs.false112, !dbg !6503

lor.lhs.false112:                                 ; preds = %land.lhs.true
  %102 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6504, !tbaa !2442
  %stat113 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %102, i32 0, i32 3, !dbg !6504, !ctir !184
  %st_mode114 = getelementptr inbounds %struct.stat, %struct.stat* %stat113, i32 0, i32 3, !dbg !6504, !ctir !191
  %103 = load i32, i32* %st_mode114, align 8, !dbg !6504, !tbaa !3982, !ctir !201
  %and115 = and i32 %103, 61440, !dbg !6504
  %cmp116 = icmp eq i32 %and115, 24576, !dbg !6504
  br i1 %cmp116, label %if.then117, label %if.else140, !dbg !6505

if.then117:                                       ; preds = %lor.lhs.false112, %land.lhs.true
  call void @llvm.dbg.declare(metadata [21 x i8]* %majorbuf, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.declare(metadata [21 x i8]* %minorbuf, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata i32* %blanks_width, metadata !6511, metadata !DIExpression()), !dbg !6512
  %104 = load i32, i32* @file_size_width, align 4, !dbg !6513, !tbaa !2436
  %105 = load i32, i32* @major_device_number_width, align 4, !dbg !6514, !tbaa !2436
  %add118 = add nsw i32 %105, 2, !dbg !6515
  %106 = load i32, i32* @minor_device_number_width, align 4, !dbg !6516, !tbaa !2436
  %add119 = add nsw i32 %add118, %106, !dbg !6517
  %sub120 = sub nsw i32 %104, %add119, !dbg !6518
  store i32 %sub120, i32* %blanks_width, align 4, !dbg !6512, !tbaa !2436
  %107 = load i8*, i8** %p, align 8, !dbg !6519, !tbaa !2442
  %108 = load i32, i32* @major_device_number_width, align 4, !dbg !6520, !tbaa !2436
  %109 = load i32, i32* %blanks_width, align 4, !dbg !6521, !tbaa !2436
  %cmp121 = icmp sgt i32 0, %109, !dbg !6521
  br i1 %cmp121, label %cond.true122, label %cond.false123, !dbg !6521

cond.true122:                                     ; preds = %if.then117
  br label %cond.end124, !dbg !6521

cond.false123:                                    ; preds = %if.then117
  %110 = load i32, i32* %blanks_width, align 4, !dbg !6521, !tbaa !2436
  br label %cond.end124, !dbg !6521

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ %110, %cond.false123 ], !dbg !6521
  %add126 = add nsw i32 %108, %cond125, !dbg !6522
  %111 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6523, !tbaa !2442
  %stat127 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %111, i32 0, i32 3, !dbg !6523, !ctir !184
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %stat127, i32 0, i32 7, !dbg !6523, !ctir !191
  %112 = load i64, i64* %st_rdev, align 8, !dbg !6523, !tbaa !4370, !ctir !195
  %call128 = call i32 @gnu_dev_major(i64 %112) #17, !dbg !6523
  %conv = zext i32 %call128 to i64, !dbg !6523
  %arraydecay129 = getelementptr inbounds [21 x i8], [21 x i8]* %majorbuf, i64 0, i64 0, !dbg !6524
  %call130 = call i8* @umaxtostr(i64 %conv, i8* %arraydecay129), !dbg !6525
  %113 = load i32, i32* @minor_device_number_width, align 4, !dbg !6526, !tbaa !2436
  %114 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6527, !tbaa !2442
  %stat131 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %114, i32 0, i32 3, !dbg !6527, !ctir !184
  %st_rdev132 = getelementptr inbounds %struct.stat, %struct.stat* %stat131, i32 0, i32 7, !dbg !6527, !ctir !191
  %115 = load i64, i64* %st_rdev132, align 8, !dbg !6527, !tbaa !4370, !ctir !195
  %call133 = call i32 @gnu_dev_minor(i64 %115) #17, !dbg !6527
  %conv134 = zext i32 %call133 to i64, !dbg !6527
  %arraydecay135 = getelementptr inbounds [21 x i8], [21 x i8]* %minorbuf, i64 0, i64 0, !dbg !6528
  %call136 = call i8* @umaxtostr(i64 %conv134, i8* %arraydecay135), !dbg !6529
  %call137 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.228, i64 0, i64 0), i32 %add126, i8* %call130, i32 %113, i8* %call136) #13, !dbg !6530
  %116 = load i32, i32* @file_size_width, align 4, !dbg !6531, !tbaa !2436
  %add138 = add nsw i32 %116, 1, !dbg !6532
  %117 = load i8*, i8** %p, align 8, !dbg !6533, !tbaa !2442
  %idx.ext = sext i32 %add138 to i64, !dbg !6533
  %add.ptr139 = getelementptr inbounds i8, i8* %117, i64 %idx.ext, !dbg !6533
  store i8* %add.ptr139, i8** %p, align 8, !dbg !6533, !tbaa !2442
  br label %if.end170, !dbg !6534

if.else140:                                       ; preds = %lor.lhs.false112, %if.end107
  call void @llvm.dbg.declare(metadata [652 x i8]* %hbuf141, metadata !6535, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata i8** %size, metadata !6538, metadata !DIExpression()), !dbg !6539
  %118 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6540, !tbaa !2442
  %stat_ok142 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %118, i32 0, i32 7, !dbg !6541, !ctir !184
  %119 = load i8, i8* %stat_ok142, align 8, !dbg !6541, !tbaa !4023
  %tobool143 = trunc i8 %119 to i1, !dbg !6541, !ctir !141
  br i1 %tobool143, label %cond.false145, label %cond.true144, !dbg !6542

cond.true144:                                     ; preds = %if.else140
  br label %cond.end150, !dbg !6542

cond.false145:                                    ; preds = %if.else140
  %120 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6543, !tbaa !2442
  %stat146 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %120, i32 0, i32 3, !dbg !6544, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat146, i32 0, i32 8, !dbg !6545, !ctir !191
  %121 = load i64, i64* %st_size, align 8, !dbg !6545, !tbaa !4417, !ctir !179
  %call147 = call i64 @unsigned_file_size(i64 %121), !dbg !6546
  %arraydecay148 = getelementptr inbounds [652 x i8], [652 x i8]* %hbuf141, i64 0, i64 0, !dbg !6547
  %122 = load i32, i32* @file_human_output_opts, align 4, !dbg !6548, !tbaa !2436
  %123 = load i64, i64* @file_output_block_size, align 8, !dbg !6549, !tbaa !2579
  %call149 = call i8* @human_readable(i64 %call147, i8* %arraydecay148, i32 %122, i64 1, i64 %123), !dbg !6550
  br label %cond.end150, !dbg !6542

cond.end150:                                      ; preds = %cond.false145, %cond.true144
  %cond151 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true144 ], [ %call149, %cond.false145 ], !dbg !6542
  store i8* %cond151, i8** %size, align 8, !dbg !6539, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %pad152, metadata !6551, metadata !DIExpression()), !dbg !6552
  %124 = load i32, i32* @file_size_width, align 4, !dbg !6553, !tbaa !2436
  %125 = load i8*, i8** %size, align 8, !dbg !6555, !tbaa !2442
  %call153 = call i32 @gnu_mbswidth(i8* %125, i32 0), !dbg !6556
  %sub154 = sub nsw i32 %124, %call153, !dbg !6557
  store i32 %sub154, i32* %pad152, align 4, !dbg !6558, !tbaa !2436
  br label %for.cond155, !dbg !6559

for.cond155:                                      ; preds = %for.inc160, %cond.end150
  %126 = load i32, i32* %pad152, align 4, !dbg !6560, !tbaa !2436
  %cmp156 = icmp slt i32 0, %126, !dbg !6562
  br i1 %cmp156, label %for.body158, label %for.end162, !dbg !6563

for.body158:                                      ; preds = %for.cond155
  %127 = load i8*, i8** %p, align 8, !dbg !6564, !tbaa !2442
  %incdec.ptr159 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !6564
  store i8* %incdec.ptr159, i8** %p, align 8, !dbg !6564, !tbaa !2442
  store i8 32, i8* %127, align 1, !dbg !6565, !tbaa !2497, !ctir !144
  br label %for.inc160, !dbg !6566

for.inc160:                                       ; preds = %for.body158
  %128 = load i32, i32* %pad152, align 4, !dbg !6567, !tbaa !2436
  %dec161 = add nsw i32 %128, -1, !dbg !6567
  store i32 %dec161, i32* %pad152, align 4, !dbg !6567, !tbaa !2436
  br label %for.cond155, !dbg !6568, !llvm.loop !6569

for.end162:                                       ; preds = %for.cond155
  br label %while.cond163, !dbg !6571

while.cond163:                                    ; preds = %while.body167, %for.end162
  %129 = load i8*, i8** %size, align 8, !dbg !6572, !tbaa !2442
  %incdec.ptr164 = getelementptr inbounds i8, i8* %129, i32 1, !dbg !6572
  store i8* %incdec.ptr164, i8** %size, align 8, !dbg !6572, !tbaa !2442
  %130 = load i8, i8* %129, align 1, !dbg !6573, !tbaa !2497, !ctir !147
  %131 = load i8*, i8** %p, align 8, !dbg !6574, !tbaa !2442
  %incdec.ptr165 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !6574
  store i8* %incdec.ptr165, i8** %p, align 8, !dbg !6574, !tbaa !2442
  store i8 %130, i8* %131, align 1, !dbg !6575, !tbaa !2497, !ctir !144
  %tobool166 = icmp ne i8 %130, 0, !dbg !6571
  br i1 %tobool166, label %while.body167, label %while.end168, !dbg !6571

while.body167:                                    ; preds = %while.cond163
  br label %while.cond163, !dbg !6576, !llvm.loop !6577

while.end168:                                     ; preds = %while.cond163
  %132 = load i8*, i8** %p, align 8, !dbg !6578, !tbaa !2442
  %arrayidx169 = getelementptr inbounds i8, i8* %132, i64 -1, !dbg !6578, !ctir !143
  store i8 32, i8* %arrayidx169, align 1, !dbg !6579, !tbaa !2497
  br label %if.end170

if.end170:                                        ; preds = %while.end168, %cond.end124
  store i64 0, i64* %s, align 8, !dbg !6580, !tbaa !2579
  %133 = load i8*, i8** %p, align 8, !dbg !6581, !tbaa !2442
  store i8 1, i8* %133, align 1, !dbg !6582, !tbaa !2497, !ctir !144
  %134 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6583, !tbaa !2442
  %stat_ok171 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %134, i32 0, i32 7, !dbg !6585, !ctir !184
  %135 = load i8, i8* %stat_ok171, align 8, !dbg !6585, !tbaa !4023
  %tobool172 = trunc i8 %135 to i1, !dbg !6585, !ctir !141
  br i1 %tobool172, label %land.lhs.true174, label %if.end195, !dbg !6586

land.lhs.true174:                                 ; preds = %if.end170
  %136 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6587, !tbaa !2442
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6588, !ctir !214
  %call175 = call %struct.tm* @localtime_rz(%struct.tm_zone* %136, i64* %tv_sec, %struct.tm* %when_local), !dbg !6589
  %tobool176 = icmp ne %struct.tm* %call175, null, !dbg !6589
  br i1 %tobool176, label %if.then177, label %if.end195, !dbg !6590

if.then177:                                       ; preds = %land.lhs.true174
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %six_months_ago, metadata !6591, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata i8* %recent, metadata !6594, metadata !DIExpression()), !dbg !6595
  %137 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6596
  %138 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6596
  %139 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6596
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 0, !dbg !6596
  %141 = load i64, i64* %140, align 8, !dbg !6596
  %142 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %139, i32 0, i32 1, !dbg !6596
  %143 = load i64, i64* %142, align 8, !dbg !6596
  %call178 = call i32 @timespec_cmp(i64 %137, i64 %138, i64 %141, i64 %143) #16, !dbg !6596
  %cmp179 = icmp slt i32 %call178, 0, !dbg !6598
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !6599

if.then181:                                       ; preds = %if.then177
  call void @gettime(%struct.dev_ino* @current_time), !dbg !6600
  br label %if.end182, !dbg !6600

if.end182:                                        ; preds = %if.then181, %if.then177
  %144 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 0), align 8, !dbg !6601, !tbaa !2465, !ctir !164
  %sub183 = sub nsw i64 %144, 15778476, !dbg !6602
  %tv_sec184 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 0, !dbg !6603, !ctir !214
  store i64 %sub183, i64* %tv_sec184, align 8, !dbg !6604, !tbaa !2465, !ctir !164
  %145 = load i64, i64* getelementptr inbounds (%struct.dev_ino, %struct.dev_ino* @current_time, i32 0, i32 1), align 8, !dbg !6605, !tbaa !2469, !ctir !219
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %six_months_ago, i32 0, i32 1, !dbg !6606, !ctir !214
  store i64 %145, i64* %tv_nsec, align 8, !dbg !6607, !tbaa !2469, !ctir !219
  %146 = bitcast %struct.dev_ino* %six_months_ago to { i64, i64 }*, !dbg !6608
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 0, !dbg !6608
  %148 = load i64, i64* %147, align 8, !dbg !6608
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %146, i32 0, i32 1, !dbg !6608
  %150 = load i64, i64* %149, align 8, !dbg !6608
  %151 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6608
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 0, !dbg !6608
  %153 = load i64, i64* %152, align 8, !dbg !6608
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 1, !dbg !6608
  %155 = load i64, i64* %154, align 8, !dbg !6608
  %call185 = call i32 @timespec_cmp(i64 %148, i64 %150, i64 %153, i64 %155) #16, !dbg !6608
  %cmp186 = icmp slt i32 %call185, 0, !dbg !6609
  br i1 %cmp186, label %land.rhs, label %land.end, !dbg !6610

land.rhs:                                         ; preds = %if.end182
  %156 = bitcast %struct.dev_ino* %when_timespec to { i64, i64 }*, !dbg !6611
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 0, !dbg !6611
  %158 = load i64, i64* %157, align 8, !dbg !6611
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %156, i32 0, i32 1, !dbg !6611
  %160 = load i64, i64* %159, align 8, !dbg !6611
  %161 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !6611
  %162 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.dev_ino* @current_time to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !6611
  %call188 = call i32 @timespec_cmp(i64 %158, i64 %160, i64 %161, i64 %162) #16, !dbg !6611
  %cmp189 = icmp slt i32 %call188, 0, !dbg !6612
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end182
  %163 = phi i1 [ false, %if.end182 ], [ %cmp189, %land.rhs ], !dbg !6613
  %frombool = zext i1 %163 to i8, !dbg !6614
  store i8 %frombool, i8* %recent, align 1, !dbg !6614, !tbaa !2461
  %164 = load i8*, i8** %p, align 8, !dbg !6615, !tbaa !2442
  %165 = load i8, i8* %recent, align 1, !dbg !6616, !tbaa !2461
  %tobool191 = trunc i8 %165 to i1, !dbg !6616
  %166 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6617, !tbaa !2442
  %tv_nsec192 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 1, !dbg !6618, !ctir !214
  %167 = load i64, i64* %tv_nsec192, align 8, !dbg !6618, !tbaa !2469, !ctir !219
  %conv193 = trunc i64 %167 to i32, !dbg !6619
  %call194 = call i64 @align_nstrftime(i8* %164, i64 1001, i1 zeroext %tobool191, %struct.tm* %when_local, %struct.tm_zone* %166, i32 %conv193), !dbg !6620
  store i64 %call194, i64* %s, align 8, !dbg !6621, !tbaa !2579
  br label %if.end195, !dbg !6622

if.end195:                                        ; preds = %land.end, %land.lhs.true174, %if.end170
  %168 = load i64, i64* %s, align 8, !dbg !6623, !tbaa !2579
  %tobool196 = icmp ne i64 %168, 0, !dbg !6623
  br i1 %tobool196, label %if.then199, label %lor.lhs.false197, !dbg !6625

lor.lhs.false197:                                 ; preds = %if.end195
  %169 = load i8*, i8** %p, align 8, !dbg !6626, !tbaa !2442
  %170 = load i8, i8* %169, align 1, !dbg !6627, !tbaa !2497, !ctir !144
  %tobool198 = icmp ne i8 %170, 0, !dbg !6627
  br i1 %tobool198, label %if.else202, label %if.then199, !dbg !6628

if.then199:                                       ; preds = %lor.lhs.false197, %if.end195
  %171 = load i64, i64* %s, align 8, !dbg !6629, !tbaa !2579
  %172 = load i8*, i8** %p, align 8, !dbg !6631, !tbaa !2442
  %add.ptr200 = getelementptr inbounds i8, i8* %172, i64 %171, !dbg !6631
  store i8* %add.ptr200, i8** %p, align 8, !dbg !6631, !tbaa !2442
  %173 = load i8*, i8** %p, align 8, !dbg !6632, !tbaa !2442
  %incdec.ptr201 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !6632
  store i8* %incdec.ptr201, i8** %p, align 8, !dbg !6632, !tbaa !2442
  store i8 32, i8* %173, align 1, !dbg !6633, !tbaa !2497, !ctir !144
  %174 = load i8*, i8** %p, align 8, !dbg !6634, !tbaa !2442
  store i8 0, i8* %174, align 1, !dbg !6635, !tbaa !2497, !ctir !144
  br label %if.end217, !dbg !6636

if.else202:                                       ; preds = %lor.lhs.false197
  call void @llvm.dbg.declare(metadata [21 x i8]* %hbuf203, metadata !6637, metadata !DIExpression()), !dbg !6639
  %175 = load i8*, i8** %p, align 8, !dbg !6640, !tbaa !2442
  %call204 = call i32 @long_time_expected_width(), !dbg !6641
  %176 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6642, !tbaa !2442
  %stat_ok205 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %176, i32 0, i32 7, !dbg !6643, !ctir !184
  %177 = load i8, i8* %stat_ok205, align 8, !dbg !6643, !tbaa !4023
  %tobool206 = trunc i8 %177 to i1, !dbg !6643, !ctir !141
  br i1 %tobool206, label %cond.false208, label %cond.true207, !dbg !6644

cond.true207:                                     ; preds = %if.else202
  br label %cond.end212, !dbg !6644

cond.false208:                                    ; preds = %if.else202
  %tv_sec209 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %when_timespec, i32 0, i32 0, !dbg !6645, !ctir !214
  %178 = load i64, i64* %tv_sec209, align 8, !dbg !6645, !tbaa !2465, !ctir !164
  %arraydecay210 = getelementptr inbounds [21 x i8], [21 x i8]* %hbuf203, i64 0, i64 0, !dbg !6646
  %call211 = call i8* @timetostr(i64 %178, i8* %arraydecay210), !dbg !6647
  br label %cond.end212, !dbg !6644

cond.end212:                                      ; preds = %cond.false208, %cond.true207
  %cond213 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true207 ], [ %call211, %cond.false208 ], !dbg !6644
  %call214 = call i32 (i8*, i8*, ...) @sprintf(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0), i32 %call204, i8* %cond213) #13, !dbg !6648
  %179 = load i8*, i8** %p, align 8, !dbg !6649, !tbaa !2442
  %call215 = call i64 @strlen(i8* %179) #16, !dbg !6650
  %180 = load i8*, i8** %p, align 8, !dbg !6651, !tbaa !2442
  %add.ptr216 = getelementptr inbounds i8, i8* %180, i64 %call215, !dbg !6651
  store i8* %add.ptr216, i8** %p, align 8, !dbg !6651, !tbaa !2442
  br label %if.end217

if.end217:                                        ; preds = %cond.end212, %if.then199
  br label %do.body218, !dbg !6652

do.body218:                                       ; preds = %if.end217
  %arraydecay219 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6653
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6653, !tbaa !2442
  %call220 = call i32 @fputs_unlocked(i8* %arraydecay219, %struct._IO_FILE* %181), !dbg !6653
  %182 = load i8*, i8** %p, align 8, !dbg !6653, !tbaa !2442
  %arraydecay221 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6653
  %sub.ptr.lhs.cast222 = ptrtoint i8* %182 to i64, !dbg !6653
  %sub.ptr.rhs.cast223 = ptrtoint i8* %arraydecay221 to i64, !dbg !6653
  %sub.ptr.sub224 = sub i64 %sub.ptr.lhs.cast222, %sub.ptr.rhs.cast223, !dbg !6653
  %183 = load i64, i64* @dired_pos, align 8, !dbg !6653, !tbaa !2579
  %add225 = add i64 %183, %sub.ptr.sub224, !dbg !6653
  store i64 %add225, i64* @dired_pos, align 8, !dbg !6653, !tbaa !2579
  br label %do.end226, !dbg !6653

do.end226:                                        ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %w, metadata !6655, metadata !DIExpression()), !dbg !6656
  %184 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6657, !tbaa !2442
  %185 = load i8*, i8** %p, align 8, !dbg !6658, !tbaa !2442
  %arraydecay227 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6659
  %sub.ptr.lhs.cast228 = ptrtoint i8* %185 to i64, !dbg !6660
  %sub.ptr.rhs.cast229 = ptrtoint i8* %arraydecay227 to i64, !dbg !6660
  %sub.ptr.sub230 = sub i64 %sub.ptr.lhs.cast228, %sub.ptr.rhs.cast229, !dbg !6660
  %call231 = call i64 @print_name_with_quoting(%struct.fileinfo* %184, i1 zeroext false, %struct.obstack* @dired_obstack, i64 %sub.ptr.sub230), !dbg !6661
  store i64 %call231, i64* %w, align 8, !dbg !6656, !tbaa !2579
  %186 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6662, !tbaa !2442
  %filetype232 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %186, i32 0, i32 4, !dbg !6664, !ctir !184
  %187 = load i32, i32* %filetype232, align 8, !dbg !6664, !tbaa !3815, !ctir !36
  %cmp233 = icmp eq i32 %187, 6, !dbg !6665
  br i1 %cmp233, label %if.then235, label %if.else255, !dbg !6666

if.then235:                                       ; preds = %do.end226
  %188 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6667, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %188, i32 0, i32 1, !dbg !6670, !ctir !184
  %189 = load i8*, i8** %linkname, align 8, !dbg !6670, !tbaa !4155, !ctir !143
  %tobool236 = icmp ne i8* %189, null, !dbg !6667
  br i1 %tobool236, label %if.then237, label %if.end254, !dbg !6671

if.then237:                                       ; preds = %if.then235
  br label %do.body238, !dbg !6672

do.body238:                                       ; preds = %if.then237
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6674, !tbaa !2442
  %call239 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i64 0, i64 0), %struct._IO_FILE* %190), !dbg !6674
  %191 = load i64, i64* @dired_pos, align 8, !dbg !6674, !tbaa !2579
  %add240 = add i64 %191, 4, !dbg !6674
  store i64 %add240, i64* @dired_pos, align 8, !dbg !6674, !tbaa !2579
  br label %do.end241, !dbg !6674

do.end241:                                        ; preds = %do.body238
  %192 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6676, !tbaa !2442
  %193 = load i8*, i8** %p, align 8, !dbg !6677, !tbaa !2442
  %arraydecay242 = getelementptr inbounds [3643 x i8], [3643 x i8]* %buf, i64 0, i64 0, !dbg !6678
  %sub.ptr.lhs.cast243 = ptrtoint i8* %193 to i64, !dbg !6679
  %sub.ptr.rhs.cast244 = ptrtoint i8* %arraydecay242 to i64, !dbg !6679
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !6679
  %194 = load i64, i64* %w, align 8, !dbg !6680, !tbaa !2579
  %add246 = add i64 %sub.ptr.sub245, %194, !dbg !6681
  %add247 = add i64 %add246, 4, !dbg !6682
  %call248 = call i64 @print_name_with_quoting(%struct.fileinfo* %192, i1 zeroext true, %struct.obstack* null, i64 %add247), !dbg !6683
  %195 = load i32, i32* @indicator_style, align 4, !dbg !6684, !tbaa !2497
  %cmp249 = icmp ne i32 %195, 0, !dbg !6686
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !6687

if.then251:                                       ; preds = %do.end241
  %196 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6688, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %196, i32 0, i32 5, !dbg !6689, !ctir !184
  %197 = load i32, i32* %linkmode, align 4, !dbg !6689, !tbaa !4193, !ctir !228
  %call252 = call zeroext i1 @print_type_indicator(i1 zeroext true, i32 %197, i32 0), !dbg !6690
  br label %if.end253, !dbg !6690

if.end253:                                        ; preds = %if.then251, %do.end241
  br label %if.end254, !dbg !6691

if.end254:                                        ; preds = %if.end253, %if.then235
  br label %if.end266, !dbg !6692

if.else255:                                       ; preds = %do.end226
  %198 = load i32, i32* @indicator_style, align 4, !dbg !6693, !tbaa !2497
  %cmp256 = icmp ne i32 %198, 0, !dbg !6695
  br i1 %cmp256, label %if.then258, label %if.end265, !dbg !6696

if.then258:                                       ; preds = %if.else255
  %199 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6697, !tbaa !2442
  %stat_ok259 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %199, i32 0, i32 7, !dbg !6698, !ctir !184
  %200 = load i8, i8* %stat_ok259, align 8, !dbg !6698, !tbaa !4023
  %tobool260 = trunc i8 %200 to i1, !dbg !6698, !ctir !141
  %201 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6699, !tbaa !2442
  %stat261 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %201, i32 0, i32 3, !dbg !6700, !ctir !184
  %st_mode262 = getelementptr inbounds %struct.stat, %struct.stat* %stat261, i32 0, i32 3, !dbg !6701, !ctir !191
  %202 = load i32, i32* %st_mode262, align 8, !dbg !6701, !tbaa !3982, !ctir !201
  %203 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6702, !tbaa !2442
  %filetype263 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %203, i32 0, i32 4, !dbg !6703, !ctir !184
  %204 = load i32, i32* %filetype263, align 8, !dbg !6703, !tbaa !3815, !ctir !36
  %call264 = call zeroext i1 @print_type_indicator(i1 zeroext %tobool260, i32 %202, i32 %204), !dbg !6704
  br label %if.end265, !dbg !6704

if.end265:                                        ; preds = %if.then258, %if.else255
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.end254
  ret void, !dbg !6705
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_inode(i8* %buf, i64 %buflen, %struct.fileinfo* %f) #0 !dbg !6706 !ctir !737 {
entry:
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i64, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i64 %buflen, i64* %buflen.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  %0 = load i64, i64* %buflen.addr, align 8, !dbg !6713, !tbaa !2579
  %cmp = icmp ule i64 21, %0, !dbg !6713
  br i1 %cmp, label %if.then, label %if.else, !dbg !6716

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6716

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 4012, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.format_inode, i64 0, i64 0)) #15, !dbg !6713
  unreachable, !dbg !6713

if.end:                                           ; preds = %if.then
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6717, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 7, !dbg !6718, !ctir !184
  %2 = load i8, i8* %stat_ok, align 8, !dbg !6718, !tbaa !4023
  %tobool = trunc i8 %2 to i1, !dbg !6718, !ctir !141
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6719

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6720, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 3, !dbg !6721, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !6722, !ctir !191
  %4 = load i64, i64* %st_ino, align 8, !dbg !6722, !tbaa !3808, !ctir !197
  %cmp1 = icmp ne i64 %4, 0, !dbg !6723
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6717

cond.true:                                        ; preds = %land.lhs.true
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6724, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 3, !dbg !6725, !ctir !184
  %st_ino3 = getelementptr inbounds %struct.stat, %struct.stat* %stat2, i32 0, i32 1, !dbg !6726, !ctir !191
  %6 = load i64, i64* %st_ino3, align 8, !dbg !6726, !tbaa !3808, !ctir !197
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6727, !tbaa !2442
  %call = call i8* @umaxtostr(i64 %6, i8* %7), !dbg !6728
  br label %cond.end, !dbg !6717

cond.false:                                       ; preds = %land.lhs.true, %if.end
  br label %cond.end, !dbg !6717

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.false ], !dbg !6717
  ret i8* %cond, !dbg !6729
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user(i32 %u, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6730 !ctir !776 {
entry:
  %u.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %u, i32* %u.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6737, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6737
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6738

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6738

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6739, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6739
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6739

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6739

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %u.addr, align 4, !dbg !6740, !tbaa !2436
  %call = call i8* @getuser(i32 %2), !dbg !6741
  br label %cond.end, !dbg !6739

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6739
  br label %cond.end4, !dbg !6738

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6738
  %3 = load i32, i32* %u.addr, align 4, !dbg !6742, !tbaa !2436
  %conv = zext i32 %3 to i64, !dbg !6742
  %4 = load i32, i32* %width.addr, align 4, !dbg !6743, !tbaa !2436
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6744
  ret void, !dbg !6745
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_group(i32 %g, i32 %width, i1 zeroext %stat_ok) #0 !dbg !6746 !ctir !778 {
entry:
  %g.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %stat_ok.addr = alloca i8, align 1
  store i32 %g, i32* %g.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6753, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6753
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6754

cond.true:                                        ; preds = %entry
  br label %cond.end4, !dbg !6754

cond.false:                                       ; preds = %entry
  %1 = load i8, i8* @numeric_ids, align 1, !dbg !6755, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6755
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !6755

cond.true2:                                       ; preds = %cond.false
  br label %cond.end, !dbg !6755

cond.false3:                                      ; preds = %cond.false
  %2 = load i32, i32* %g.addr, align 4, !dbg !6756, !tbaa !2436
  %call = call i8* @getgroup(i32 %2), !dbg !6757
  br label %cond.end, !dbg !6755

cond.end:                                         ; preds = %cond.false3, %cond.true2
  %cond = phi i8* [ null, %cond.true2 ], [ %call, %cond.false3 ], !dbg !6755
  br label %cond.end4, !dbg !6754

cond.end4:                                        ; preds = %cond.end, %cond.true
  %cond5 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true ], [ %cond, %cond.end ], !dbg !6754
  %3 = load i32, i32* %g.addr, align 4, !dbg !6758, !tbaa !2436
  %conv = zext i32 %3 to i64, !dbg !6758
  %4 = load i32, i32* %width.addr, align 4, !dbg !6759, !tbaa !2436
  call void @format_user_or_group(i8* %cond5, i64 %conv, i32 %4), !dbg !6760
  ret void, !dbg !6761
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @format_user_or_group(i8* %name, i64 %id, i32 %width) #0 !dbg !6762 !ctir !780 {
entry:
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %width.addr = alloca i32, align 4
  %len = alloca i64, align 8, !ctir !149
  %width_gap = alloca i32, align 4, !ctir !27
  %pad = alloca i32, align 4, !ctir !27
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  store i64 %id, i64* %id.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6769, metadata !DIExpression()), !dbg !6770
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6771, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !6771
  br i1 %tobool, label %if.then, label %if.else, !dbg !6773

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %width_gap, metadata !6774, metadata !DIExpression()), !dbg !6776
  %1 = load i32, i32* %width.addr, align 4, !dbg !6777, !tbaa !2436
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6778, !tbaa !2442
  %call = call i32 @gnu_mbswidth(i8* %2, i32 0), !dbg !6779
  %sub = sub nsw i32 %1, %call, !dbg !6780
  store i32 %sub, i32* %width_gap, align 4, !dbg !6776, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6781, metadata !DIExpression()), !dbg !6782
  %3 = load i32, i32* %width_gap, align 4, !dbg !6783, !tbaa !2436
  %cmp = icmp sgt i32 0, %3, !dbg !6783
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6783

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6783

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* %width_gap, align 4, !dbg !6783, !tbaa !2436
  br label %cond.end, !dbg !6783

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !6783
  store i32 %cond, i32* %pad, align 4, !dbg !6782, !tbaa !2436
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6784, !tbaa !2442
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6784, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %5, %struct._IO_FILE* %6), !dbg !6784
  %7 = load i8*, i8** %name.addr, align 8, !dbg !6785, !tbaa !2442
  %call2 = call i64 @strlen(i8* %7) #16, !dbg !6786
  %8 = load i32, i32* %pad, align 4, !dbg !6787, !tbaa !2436
  %conv = sext i32 %8 to i64, !dbg !6787
  %add = add i64 %call2, %conv, !dbg !6788
  store i64 %add, i64* %len, align 8, !dbg !6789, !tbaa !2579
  br label %do.body, !dbg !6790

do.body:                                          ; preds = %do.cond, %cond.end
  %call3 = call i32 @putchar_unlocked(i32 32), !dbg !6791
  br label %do.cond, !dbg !6791

do.cond:                                          ; preds = %do.body
  %9 = load i32, i32* %pad, align 4, !dbg !6792, !tbaa !2436
  %dec = add nsw i32 %9, -1, !dbg !6792
  store i32 %dec, i32* %pad, align 4, !dbg !6792, !tbaa !2436
  %tobool4 = icmp ne i32 %9, 0, !dbg !6791
  br i1 %tobool4, label %do.body, label %do.end, !dbg !6791, !llvm.loop !6793

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !6795

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %width.addr, align 4, !dbg !6796, !tbaa !2436
  %11 = load i64, i64* %id.addr, align 8, !dbg !6798, !tbaa !2579
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i64 0, i64 0), i32 %10, i64 %11), !dbg !6799
  %12 = load i32, i32* %width.addr, align 4, !dbg !6800, !tbaa !2436
  %conv6 = sext i32 %12 to i64, !dbg !6800
  store i64 %conv6, i64* %len, align 8, !dbg !6801, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %13 = load i64, i64* %len, align 8, !dbg !6802, !tbaa !2579
  %add7 = add i64 %13, 1, !dbg !6803
  %14 = load i64, i64* @dired_pos, align 8, !dbg !6804, !tbaa !2579
  %add8 = add i64 %14, %add7, !dbg !6804
  store i64 %add8, i64* @dired_pos, align 8, !dbg !6804, !tbaa !2579
  ret void, !dbg !6805
}

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_major(i64) #7

; Function Attrs: nounwind readnone
declare dso_local i32 @gnu_dev_minor(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @unsigned_file_size(i64 %size) #0 !dbg !6806 !ctir !698 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  %0 = load i64, i64* %size.addr, align 8, !dbg !6809, !tbaa !2579
  %1 = load i64, i64* %size.addr, align 8, !dbg !6810, !tbaa !2579
  %cmp = icmp slt i64 %1, 0, !dbg !6811
  %conv = zext i1 %cmp to i32, !dbg !6811
  %conv1 = sext i32 %conv to i64, !dbg !6812
  %mul = mul i64 %conv1, 0, !dbg !6813
  %add = add i64 %0, %mul, !dbg !6814
  ret i64 %add, !dbg !6815
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @align_nstrftime(i8* %buf, i64 %size, i1 zeroext %recent, %struct.tm* %tm, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !6816 !ctir !782 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %recent.addr = alloca i8, align 1
  %tm.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %nfmt = alloca i8*, align 8, !ctir !146
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6817, metadata !DIExpression()), !dbg !6818
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  %frombool = zext i1 %recent to i8
  store i8 %frombool, i8* %recent.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %recent.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !6829, metadata !DIExpression()), !dbg !6830
  %0 = load i8, i8* @use_abformat, align 1, !dbg !6831, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6831
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6831

cond.true:                                        ; preds = %entry
  %1 = load i8, i8* %recent.addr, align 1, !dbg !6832, !tbaa !2461
  %tobool1 = trunc i8 %1 to i1, !dbg !6832
  %idxprom = zext i1 %tobool1 to i64, !dbg !6833
  %arrayidx = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom, !dbg !6833, !ctir !577
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6834, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 4, !dbg !6835, !ctir !785
  %3 = load i32, i32* %tm_mon, align 8, !dbg !6835, !tbaa !6836, !ctir !27
  %idxprom2 = sext i32 %3 to i64, !dbg !6833
  %arrayidx3 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx, i64 0, i64 %idxprom2, !dbg !6833, !ctir !574
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx3, i64 0, i64 0, !dbg !6833
  br label %cond.end, !dbg !6831

cond.false:                                       ; preds = %entry
  %4 = load i8, i8* %recent.addr, align 1, !dbg !6838, !tbaa !2461
  %tobool4 = trunc i8 %4 to i1, !dbg !6838
  %idxprom5 = zext i1 %tobool4 to i64, !dbg !6839
  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom5, !dbg !6839, !ctir !561
  %5 = load i8*, i8** %arrayidx6, align 8, !dbg !6839, !tbaa !2442
  br label %cond.end, !dbg !6831

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %5, %cond.false ], !dbg !6831
  store i8* %cond, i8** %nfmt, align 8, !dbg !6830, !tbaa !2442
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6840, !tbaa !2442
  %7 = load i64, i64* %size.addr, align 8, !dbg !6841, !tbaa !2579
  %8 = load i8*, i8** %nfmt, align 8, !dbg !6842, !tbaa !2442
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !6843, !tbaa !2442
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !6844, !tbaa !2442
  %11 = load i32, i32* %ns.addr, align 4, !dbg !6845, !tbaa !2436
  %call = call i64 @nstrftime(i8* %6, i64 %7, i8* %8, %struct.tm* %9, %struct.tm_zone* %10, i32 %11), !dbg !6846
  ret i64 %call, !dbg !6847
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @long_time_expected_width() #0 !dbg !1035 !ctir !800 {
entry:
  %epoch = alloca i64, align 8, !ctir !162
  %tm = alloca %struct.tm, align 8, !ctir !786
  %buf = alloca [1001 x i8], align 16, !ctir !802
  %len = alloca i64, align 8, !ctir !149
  %0 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6848, !tbaa !2436
  %cmp = icmp slt i32 %0, 0, !dbg !6850
  br i1 %cmp, label %if.then, label %if.end11, !dbg !6851

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %epoch, metadata !6852, metadata !DIExpression()), !dbg !6854
  store i64 0, i64* %epoch, align 8, !dbg !6854, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata [1001 x i8]* %buf, metadata !6857, metadata !DIExpression()), !dbg !6858
  %1 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6859, !tbaa !2442
  %call = call %struct.tm* @localtime_rz(%struct.tm_zone* %1, i64* %epoch, %struct.tm* %tm), !dbg !6861
  %tobool = icmp ne %struct.tm* %call, null, !dbg !6861
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !6862

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6863, metadata !DIExpression()), !dbg !6865
  %arraydecay = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6866
  %2 = load %struct.tm_zone*, %struct.tm_zone** @localtz, align 8, !dbg !6867, !tbaa !2442
  %call2 = call i64 @align_nstrftime(i8* %arraydecay, i64 1001, i1 zeroext false, %struct.tm* %tm, %struct.tm_zone* %2, i32 0), !dbg !6868
  store i64 %call2, i64* %len, align 8, !dbg !6865, !tbaa !2579
  %3 = load i64, i64* %len, align 8, !dbg !6869, !tbaa !2579
  %cmp3 = icmp ne i64 %3, 0, !dbg !6871
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6872

if.then4:                                         ; preds = %if.then1
  %arraydecay5 = getelementptr inbounds [1001 x i8], [1001 x i8]* %buf, i64 0, i64 0, !dbg !6873
  %4 = load i64, i64* %len, align 8, !dbg !6874, !tbaa !2579
  %call6 = call i32 @mbsnwidth(i8* %arraydecay5, i64 %4, i32 0), !dbg !6875
  store i32 %call6, i32* @long_time_expected_width.width, align 4, !dbg !6876, !tbaa !2436
  br label %if.end, !dbg !6877

if.end:                                           ; preds = %if.then4, %if.then1
  br label %if.end7, !dbg !6878

if.end7:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6879, !tbaa !2436
  %cmp8 = icmp slt i32 %5, 0, !dbg !6881
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !6882

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* @long_time_expected_width.width, align 4, !dbg !6883, !tbaa !2436
  br label %if.end10, !dbg !6884

if.end10:                                         ; preds = %if.then9, %if.end7
  br label %if.end11, !dbg !6885

if.end11:                                         ; preds = %if.end10, %entry
  %6 = load i32, i32* @long_time_expected_width.width, align 4, !dbg !6886, !tbaa !2436
  ret i32 %6, !dbg !6887
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @timetostr(i64 %t, i8* %buf) #0 !dbg !6888 !ctir !805 {
entry:
  %t.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  store i64 %t, i64* %t.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  %0 = load i64, i64* %t.addr, align 8, !dbg !6893, !tbaa !2579
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6894, !tbaa !2442
  %call = call i8* @imaxtostr(i64 %0, i8* %1), !dbg !6895
  ret i8* %call, !dbg !6896
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @print_name_with_quoting(%struct.fileinfo* %f, i1 zeroext %symlink_target, %struct.obstack* %stack, i64 %start_col) #0 !dbg !6897 !ctir !739 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %stack.addr = alloca %struct.obstack*, align 8
  %start_col.addr = alloca i64, align 8
  %name = alloca i8*, align 8, !ctir !146
  %color = alloca %struct.bin_str*, align 8, !ctir !399
  %used_color_this_time = alloca i8, align 1, !ctir !141
  %len = alloca i64, align 8, !ctir !149
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store %struct.obstack* %stack, %struct.obstack** %stack.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %stack.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store i64 %start_col, i64* %start_col.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %start_col.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6906, metadata !DIExpression()), !dbg !6907
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !6908, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6908
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6908

cond.true:                                        ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6909, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !6910, !ctir !184
  %2 = load i8*, i8** %linkname, align 8, !dbg !6910, !tbaa !4155, !ctir !143
  br label %cond.end, !dbg !6908

cond.false:                                       ; preds = %entry
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6911, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !6912, !ctir !184
  %4 = load i8*, i8** %name1, align 8, !dbg !6912, !tbaa !4017, !ctir !143
  br label %cond.end, !dbg !6908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6908
  store i8* %cond, i8** %name, align 8, !dbg !6907, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.bin_str** %color, metadata !6913, metadata !DIExpression()), !dbg !6914
  %5 = load i8, i8* @print_with_color, align 1, !dbg !6915, !tbaa !2461
  %tobool2 = trunc i8 %5 to i1, !dbg !6915
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !6915

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6916, !tbaa !2442
  %7 = load i8, i8* %symlink_target.addr, align 1, !dbg !6917, !tbaa !2461
  %tobool4 = trunc i8 %7 to i1, !dbg !6917
  %call = call %struct.bin_str* @get_color_indicator(%struct.fileinfo* %6, i1 zeroext %tobool4), !dbg !6918
  br label %cond.end6, !dbg !6915

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !6915

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.bin_str* [ %call, %cond.true3 ], [ null, %cond.false5 ], !dbg !6915
  store %struct.bin_str* %cond7, %struct.bin_str** %color, align 8, !dbg !6914, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %used_color_this_time, metadata !6919, metadata !DIExpression()), !dbg !6920
  %8 = load i8, i8* @print_with_color, align 1, !dbg !6921, !tbaa !2461
  %tobool8 = trunc i8 %8 to i1, !dbg !6921
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6922

land.rhs:                                         ; preds = %cond.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6923, !tbaa !2442
  %tobool9 = icmp ne %struct.bin_str* %9, null, !dbg !6923
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !6924

lor.rhs:                                          ; preds = %land.rhs
  %call10 = call zeroext i1 @is_colored(i32 4), !dbg !6925
  br label %lor.end, !dbg !6924

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %call10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end6
  %11 = phi i1 [ false, %cond.end6 ], [ %10, %lor.end ], !dbg !6926
  %frombool11 = zext i1 %11 to i8, !dbg !6920
  store i8 %frombool11, i8* %used_color_this_time, align 1, !dbg !6920, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6927, metadata !DIExpression()), !dbg !6928
  %12 = load i8*, i8** %name, align 8, !dbg !6929, !tbaa !2442
  %13 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !6930, !tbaa !2442
  %14 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6931, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 11, !dbg !6932, !ctir !184
  %15 = load i32, i32* %quoted, align 4, !dbg !6932, !tbaa !3819, !ctir !27
  %16 = load %struct.bin_str*, %struct.bin_str** %color, align 8, !dbg !6933, !tbaa !2442
  %17 = load i8, i8* %symlink_target.addr, align 1, !dbg !6934, !tbaa !2461
  %tobool12 = trunc i8 %17 to i1, !dbg !6934
  %lnot = xor i1 %tobool12, true, !dbg !6935
  %18 = load %struct.obstack*, %struct.obstack** %stack.addr, align 8, !dbg !6936, !tbaa !2442
  %19 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !6937, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %19, i32 0, i32 2, !dbg !6938, !ctir !184
  %20 = load i8*, i8** %absolute_name, align 8, !dbg !6938, !tbaa !3940, !ctir !143
  %call13 = call i64 @quote_name(i8* %12, %struct.quoting_options* %13, i32 %15, %struct.bin_str* %16, i1 zeroext %lnot, %struct.obstack* %18, i8* %20), !dbg !6939
  store i64 %call13, i64* %len, align 8, !dbg !6928, !tbaa !2579
  call void @process_signals(), !dbg !6940
  %21 = load i8, i8* %used_color_this_time, align 1, !dbg !6941, !tbaa !2461
  %tobool14 = trunc i8 %21 to i1, !dbg !6941
  br i1 %tobool14, label %if.then, label %if.end18, !dbg !6943

if.then:                                          ; preds = %land.end
  call void @prep_non_filename_text(), !dbg !6944
  %22 = load i64, i64* @line_length, align 8, !dbg !6946, !tbaa !2579
  %tobool15 = icmp ne i64 %22, 0, !dbg !6946
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !6948

land.lhs.true:                                    ; preds = %if.then
  %23 = load i64, i64* %start_col.addr, align 8, !dbg !6949, !tbaa !2579
  %24 = load i64, i64* @line_length, align 8, !dbg !6950, !tbaa !2579
  %div = udiv i64 %23, %24, !dbg !6951
  %25 = load i64, i64* %start_col.addr, align 8, !dbg !6952, !tbaa !2579
  %26 = load i64, i64* %len, align 8, !dbg !6953, !tbaa !2579
  %add = add i64 %25, %26, !dbg !6954
  %sub = sub i64 %add, 1, !dbg !6955
  %27 = load i64, i64* @line_length, align 8, !dbg !6956, !tbaa !2579
  %div16 = udiv i64 %sub, %27, !dbg !6957
  %cmp = icmp ne i64 %div, %div16, !dbg !6958
  br i1 %cmp, label %if.then17, label %if.end, !dbg !6959

if.then17:                                        ; preds = %land.lhs.true
  call void @put_indicator(%struct.bin_str* getelementptr inbounds ([24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 23)), !dbg !6960
  br label %if.end, !dbg !6960

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.then
  br label %if.end18, !dbg !6961

if.end18:                                         ; preds = %if.end, %land.end
  %28 = load i64, i64* %len, align 8, !dbg !6962, !tbaa !2579
  ret i64 %28, !dbg !6963
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @print_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6964 !ctir !745 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6971, metadata !DIExpression()), !dbg !6972
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6973, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6973
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6974, !tbaa !2436
  %2 = load i32, i32* %type.addr, align 4, !dbg !6975, !tbaa !2497
  %call = call signext i8 @get_type_indicator(i1 zeroext %tobool, i32 %1, i32 %2), !dbg !6976
  store i8 %call, i8* %c, align 1, !dbg !6972, !tbaa !2497
  %3 = load i8, i8* %c, align 1, !dbg !6977, !tbaa !2497
  %tobool1 = icmp ne i8 %3, 0, !dbg !6977
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6979

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6980

do.body:                                          ; preds = %if.then
  %4 = load i8, i8* %c, align 1, !dbg !6981, !tbaa !2497
  %conv = sext i8 %4 to i32, !dbg !6981
  %call2 = call i32 @putchar_unlocked(i32 %conv), !dbg !6981
  %5 = load i64, i64* @dired_pos, align 8, !dbg !6981, !tbaa !2579
  %inc = add i64 %5, 1, !dbg !6981
  store i64 %inc, i64* @dired_pos, align 8, !dbg !6981, !tbaa !2579
  br label %do.end, !dbg !6981

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !6981

if.end:                                           ; preds = %do.end, %entry
  %6 = load i8, i8* %c, align 1, !dbg !6983, !tbaa !2497
  %tobool3 = icmp ne i8 %6, 0, !dbg !6984
  %lnot = xor i1 %tobool3, true, !dbg !6984
  %lnot4 = xor i1 %lnot, true, !dbg !6985
  ret i1 %lnot4, !dbg !6986
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @get_type_indicator(i1 zeroext %stat_ok, i32 %mode, i32 %type) #0 !dbg !6987 !ctir !747 {
entry:
  %stat_ok.addr = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %c = alloca i8, align 1, !ctir !144
  %frombool = zext i1 %stat_ok to i8
  store i8 %frombool, i8* %stat_ok.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %stat_ok.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i32 %type, i32* %type.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load i8, i8* %stat_ok.addr, align 1, !dbg !6996, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !6996
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6998

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6999, !tbaa !2436
  %and = and i32 %1, 61440, !dbg !6999
  %cmp = icmp eq i32 %and, 32768, !dbg !6999
  br i1 %cmp, label %if.then, label %if.else8, !dbg !6996

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !7000, !tbaa !2497
  %cmp1 = icmp eq i32 %2, 5, !dbg !7001
  br i1 %cmp1, label %if.then, label %if.else8, !dbg !6998

if.then:                                          ; preds = %cond.false, %cond.true
  %3 = load i8, i8* %stat_ok.addr, align 1, !dbg !7002, !tbaa !2461
  %tobool2 = trunc i8 %3 to i1, !dbg !7002
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !7005

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @indicator_style, align 4, !dbg !7006, !tbaa !2497
  %cmp3 = icmp eq i32 %4, 3, !dbg !7007
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !7008

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7009, !tbaa !2436
  %and5 = and i32 %5, 73, !dbg !7010
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7010
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7011

if.then7:                                         ; preds = %land.lhs.true4
  store i8 42, i8* %c, align 1, !dbg !7012, !tbaa !2497
  br label %if.end, !dbg !7013

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.then
  store i8 0, i8* %c, align 1, !dbg !7014, !tbaa !2497
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end55, !dbg !7015

if.else8:                                         ; preds = %cond.false, %cond.true
  %6 = load i8, i8* %stat_ok.addr, align 1, !dbg !7016, !tbaa !2461
  %tobool9 = trunc i8 %6 to i1, !dbg !7016
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !7019

cond.true10:                                      ; preds = %if.else8
  %7 = load i32, i32* %mode.addr, align 4, !dbg !7020, !tbaa !2436
  %and11 = and i32 %7, 61440, !dbg !7020
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !7020
  br i1 %cmp12, label %if.then16, label %if.else17, !dbg !7016

cond.false13:                                     ; preds = %if.else8
  %8 = load i32, i32* %type.addr, align 4, !dbg !7021, !tbaa !2497
  %cmp14 = icmp eq i32 %8, 3, !dbg !7022
  br i1 %cmp14, label %if.then16, label %lor.lhs.false, !dbg !7023

lor.lhs.false:                                    ; preds = %cond.false13
  %9 = load i32, i32* %type.addr, align 4, !dbg !7024, !tbaa !2497
  %cmp15 = icmp eq i32 %9, 9, !dbg !7025
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !7019

if.then16:                                        ; preds = %lor.lhs.false, %cond.false13, %cond.true10
  store i8 47, i8* %c, align 1, !dbg !7026, !tbaa !2497
  br label %if.end54, !dbg !7027

if.else17:                                        ; preds = %lor.lhs.false, %cond.true10
  %10 = load i32, i32* @indicator_style, align 4, !dbg !7028, !tbaa !2497
  %cmp18 = icmp eq i32 %10, 1, !dbg !7030
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !7031

if.then19:                                        ; preds = %if.else17
  store i8 0, i8* %c, align 1, !dbg !7032, !tbaa !2497
  br label %if.end53, !dbg !7033

if.else20:                                        ; preds = %if.else17
  %11 = load i8, i8* %stat_ok.addr, align 1, !dbg !7034, !tbaa !2461
  %tobool21 = trunc i8 %11 to i1, !dbg !7034
  br i1 %tobool21, label %cond.true22, label %cond.false25, !dbg !7036

cond.true22:                                      ; preds = %if.else20
  %12 = load i32, i32* %mode.addr, align 4, !dbg !7037, !tbaa !2436
  %and23 = and i32 %12, 61440, !dbg !7037
  %cmp24 = icmp eq i32 %and23, 40960, !dbg !7037
  br i1 %cmp24, label %if.then27, label %if.else28, !dbg !7034

cond.false25:                                     ; preds = %if.else20
  %13 = load i32, i32* %type.addr, align 4, !dbg !7038, !tbaa !2497
  %cmp26 = icmp eq i32 %13, 6, !dbg !7039
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !7036

if.then27:                                        ; preds = %cond.false25, %cond.true22
  store i8 64, i8* %c, align 1, !dbg !7040, !tbaa !2497
  br label %if.end52, !dbg !7041

if.else28:                                        ; preds = %cond.false25, %cond.true22
  %14 = load i8, i8* %stat_ok.addr, align 1, !dbg !7042, !tbaa !2461
  %tobool29 = trunc i8 %14 to i1, !dbg !7042
  br i1 %tobool29, label %cond.true30, label %cond.false33, !dbg !7044

cond.true30:                                      ; preds = %if.else28
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7045, !tbaa !2436
  %and31 = and i32 %15, 61440, !dbg !7045
  %cmp32 = icmp eq i32 %and31, 4096, !dbg !7045
  br i1 %cmp32, label %if.then35, label %if.else36, !dbg !7042

cond.false33:                                     ; preds = %if.else28
  %16 = load i32, i32* %type.addr, align 4, !dbg !7046, !tbaa !2497
  %cmp34 = icmp eq i32 %16, 1, !dbg !7047
  br i1 %cmp34, label %if.then35, label %if.else36, !dbg !7044

if.then35:                                        ; preds = %cond.false33, %cond.true30
  store i8 124, i8* %c, align 1, !dbg !7048, !tbaa !2497
  br label %if.end51, !dbg !7049

if.else36:                                        ; preds = %cond.false33, %cond.true30
  %17 = load i8, i8* %stat_ok.addr, align 1, !dbg !7050, !tbaa !2461
  %tobool37 = trunc i8 %17 to i1, !dbg !7050
  br i1 %tobool37, label %cond.true38, label %cond.false41, !dbg !7052

cond.true38:                                      ; preds = %if.else36
  %18 = load i32, i32* %mode.addr, align 4, !dbg !7053, !tbaa !2436
  %and39 = and i32 %18, 61440, !dbg !7053
  %cmp40 = icmp eq i32 %and39, 49152, !dbg !7053
  br i1 %cmp40, label %if.then43, label %if.else44, !dbg !7050

cond.false41:                                     ; preds = %if.else36
  %19 = load i32, i32* %type.addr, align 4, !dbg !7054, !tbaa !2497
  %cmp42 = icmp eq i32 %19, 7, !dbg !7055
  br i1 %cmp42, label %if.then43, label %if.else44, !dbg !7052

if.then43:                                        ; preds = %cond.false41, %cond.true38
  store i8 61, i8* %c, align 1, !dbg !7056, !tbaa !2497
  br label %if.end50, !dbg !7057

if.else44:                                        ; preds = %cond.false41, %cond.true38
  %20 = load i8, i8* %stat_ok.addr, align 1, !dbg !7058, !tbaa !2461
  %tobool45 = trunc i8 %20 to i1, !dbg !7058
  br i1 %tobool45, label %land.lhs.true46, label %if.else48, !dbg !7060

land.lhs.true46:                                  ; preds = %if.else44
  br i1 false, label %if.then47, label %if.else48, !dbg !7061

if.then47:                                        ; preds = %land.lhs.true46
  store i8 62, i8* %c, align 1, !dbg !7062, !tbaa !2497
  br label %if.end49, !dbg !7063

if.else48:                                        ; preds = %land.lhs.true46, %if.else44
  store i8 0, i8* %c, align 1, !dbg !7064, !tbaa !2497
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then35
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then27
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then19
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then16
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end
  %21 = load i8, i8* %c, align 1, !dbg !7065, !tbaa !2497
  ret i8 %21, !dbg !7066
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.bin_str* @get_color_indicator(%struct.fileinfo* %f, i1 zeroext %symlink_target) #0 !dbg !1025 !ctir !741 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %symlink_target.addr = alloca i8, align 1
  %type = alloca i32, align 4, !ctir !53
  %ext = alloca %struct.color_ext_type*, align 8, !ctir !593
  %len = alloca i64, align 8, !ctir !149
  %name = alloca i8*, align 8, !ctir !146
  %mode = alloca i32, align 4, !ctir !228
  %linkok = alloca i32, align 4, !ctir !27
  %s = alloca %struct.bin_str*, align 8, !ctir !744
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  %frombool = zext i1 %symlink_target to i8
  store i8 %frombool, i8* %symlink_target.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %symlink_target.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.color_ext_type** %ext, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata i32* %linkok, metadata !7081, metadata !DIExpression()), !dbg !7082
  %0 = load i8, i8* %symlink_target.addr, align 1, !dbg !7083, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !7083
  br i1 %tobool, label %if.then, label %if.else, !dbg !7085

if.then:                                          ; preds = %entry
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7086, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 1, !dbg !7088, !ctir !184
  %2 = load i8*, i8** %linkname, align 8, !dbg !7088, !tbaa !4155, !ctir !143
  store i8* %2, i8** %name, align 8, !dbg !7089, !tbaa !2442
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7090, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 5, !dbg !7091, !ctir !184
  %4 = load i32, i32* %linkmode, align 4, !dbg !7091, !tbaa !4193, !ctir !228
  store i32 %4, i32* %mode, align 4, !dbg !7092, !tbaa !2436
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7093, !tbaa !2442
  %linkok1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 8, !dbg !7094, !ctir !184
  %6 = load i8, i8* %linkok1, align 1, !dbg !7094, !tbaa !4187
  %tobool2 = trunc i8 %6 to i1, !dbg !7094, !ctir !141
  %7 = zext i1 %tobool2 to i64, !dbg !7093
  %cond = select i1 %tobool2, i32 0, i32 -1, !dbg !7093
  store i32 %cond, i32* %linkok, align 4, !dbg !7095, !tbaa !2436
  br label %if.end, !dbg !7096

if.else:                                          ; preds = %entry
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7097, !tbaa !2442
  %name3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 0, !dbg !7099, !ctir !184
  %9 = load i8*, i8** %name3, align 8, !dbg !7099, !tbaa !4017, !ctir !143
  store i8* %9, i8** %name, align 8, !dbg !7100, !tbaa !2442
  %10 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7101, !tbaa !2461
  %tobool4 = trunc i8 %10 to i1, !dbg !7101
  br i1 %tobool4, label %land.lhs.true, label %cond.false, !dbg !7101

land.lhs.true:                                    ; preds = %if.else
  %11 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %linkok5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 8, !dbg !7101, !ctir !184
  %12 = load i8, i8* %linkok5, align 1, !dbg !7101, !tbaa !4187
  %tobool6 = trunc i8 %12 to i1, !dbg !7101, !ctir !141
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !7101

cond.true:                                        ; preds = %land.lhs.true
  %13 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %linkmode7 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 5, !dbg !7101, !ctir !184
  %14 = load i32, i32* %linkmode7, align 4, !dbg !7101, !tbaa !4193, !ctir !228
  br label %cond.end, !dbg !7101

cond.false:                                       ; preds = %land.lhs.true, %if.else
  %15 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7101, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %15, i32 0, i32 3, !dbg !7101, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 3, !dbg !7101, !ctir !191
  %16 = load i32, i32* %st_mode, align 8, !dbg !7101, !tbaa !3982, !ctir !201
  br label %cond.end, !dbg !7101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %14, %cond.true ], [ %16, %cond.false ], !dbg !7101
  store i32 %cond8, i32* %mode, align 4, !dbg !7102, !tbaa !2436
  %17 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7103, !tbaa !2442
  %linkok9 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %17, i32 0, i32 8, !dbg !7104, !ctir !184
  %18 = load i8, i8* %linkok9, align 1, !dbg !7104, !tbaa !4187
  %tobool10 = trunc i8 %18 to i1, !dbg !7104, !ctir !141
  %conv = zext i1 %tobool10 to i32, !dbg !7103
  store i32 %conv, i32* %linkok, align 4, !dbg !7105, !tbaa !2436
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %19 = load i32, i32* %linkok, align 4, !dbg !7106, !tbaa !2436
  %cmp = icmp eq i32 %19, -1, !dbg !7108
  br i1 %cmp, label %land.lhs.true12, label %if.else15, !dbg !7109

land.lhs.true12:                                  ; preds = %if.end
  %call = call zeroext i1 @is_colored(i32 12), !dbg !7110
  br i1 %call, label %if.then14, label %if.else15, !dbg !7111

if.then14:                                        ; preds = %land.lhs.true12
  store i32 12, i32* %type, align 4, !dbg !7112, !tbaa !2497
  br label %if.end132, !dbg !7113

if.else15:                                        ; preds = %land.lhs.true12, %if.end
  %20 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7114, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %20, i32 0, i32 7, !dbg !7116, !ctir !184
  %21 = load i8, i8* %stat_ok, align 8, !dbg !7116, !tbaa !4023
  %tobool16 = trunc i8 %21 to i1, !dbg !7116, !ctir !141
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !7117

if.then17:                                        ; preds = %if.else15
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7118, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 4, !dbg !7120, !ctir !184
  %23 = load i32, i32* %filetype, align 8, !dbg !7120, !tbaa !3815, !ctir !36
  %idxprom = zext i32 %23 to i64, !dbg !7121
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @get_color_indicator.filetype_indicator, i64 0, i64 %idxprom, !dbg !7121, !ctir !743
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7121, !tbaa !2497
  store i32 %24, i32* %type, align 4, !dbg !7122, !tbaa !2497
  br label %if.end131, !dbg !7123

if.else18:                                        ; preds = %if.else15
  %25 = load i32, i32* %mode, align 4, !dbg !7124, !tbaa !2436
  %and = and i32 %25, 61440, !dbg !7124
  %cmp19 = icmp eq i32 %and, 32768, !dbg !7124
  br i1 %cmp19, label %if.then21, label %if.else65, !dbg !7127

if.then21:                                        ; preds = %if.else18
  store i32 5, i32* %type, align 4, !dbg !7128, !tbaa !2497
  %26 = load i32, i32* %mode, align 4, !dbg !7130, !tbaa !2436
  %and22 = and i32 %26, 2048, !dbg !7132
  %cmp23 = icmp ne i32 %and22, 0, !dbg !7133
  br i1 %cmp23, label %land.lhs.true25, label %if.else29, !dbg !7134

land.lhs.true25:                                  ; preds = %if.then21
  %call26 = call zeroext i1 @is_colored(i32 16), !dbg !7135
  br i1 %call26, label %if.then28, label %if.else29, !dbg !7136

if.then28:                                        ; preds = %land.lhs.true25
  store i32 16, i32* %type, align 4, !dbg !7137, !tbaa !2497
  br label %if.end64, !dbg !7138

if.else29:                                        ; preds = %land.lhs.true25, %if.then21
  %27 = load i32, i32* %mode, align 4, !dbg !7139, !tbaa !2436
  %and30 = and i32 %27, 1024, !dbg !7141
  %cmp31 = icmp ne i32 %and30, 0, !dbg !7142
  br i1 %cmp31, label %land.lhs.true33, label %if.else37, !dbg !7143

land.lhs.true33:                                  ; preds = %if.else29
  %call34 = call zeroext i1 @is_colored(i32 17), !dbg !7144
  br i1 %call34, label %if.then36, label %if.else37, !dbg !7145

if.then36:                                        ; preds = %land.lhs.true33
  store i32 17, i32* %type, align 4, !dbg !7146, !tbaa !2497
  br label %if.end63, !dbg !7147

if.else37:                                        ; preds = %land.lhs.true33, %if.else29
  %call38 = call zeroext i1 @is_colored(i32 21), !dbg !7148
  br i1 %call38, label %land.lhs.true40, label %if.else44, !dbg !7150

land.lhs.true40:                                  ; preds = %if.else37
  %28 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7151, !tbaa !2442
  %has_capability = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %28, i32 0, i32 10, !dbg !7152, !ctir !184
  %29 = load i8, i8* %has_capability, align 8, !dbg !7152, !tbaa !4040
  %tobool41 = trunc i8 %29 to i1, !dbg !7152, !ctir !141
  br i1 %tobool41, label %if.then43, label %if.else44, !dbg !7153

if.then43:                                        ; preds = %land.lhs.true40
  store i32 21, i32* %type, align 4, !dbg !7154, !tbaa !2497
  br label %if.end62, !dbg !7155

if.else44:                                        ; preds = %land.lhs.true40, %if.else37
  %30 = load i32, i32* %mode, align 4, !dbg !7156, !tbaa !2436
  %and45 = and i32 %30, 73, !dbg !7158
  %cmp46 = icmp ne i32 %and45, 0, !dbg !7159
  br i1 %cmp46, label %land.lhs.true48, label %if.else52, !dbg !7160

land.lhs.true48:                                  ; preds = %if.else44
  %call49 = call zeroext i1 @is_colored(i32 14), !dbg !7161
  br i1 %call49, label %if.then51, label %if.else52, !dbg !7162

if.then51:                                        ; preds = %land.lhs.true48
  store i32 14, i32* %type, align 4, !dbg !7163, !tbaa !2497
  br label %if.end61, !dbg !7164

if.else52:                                        ; preds = %land.lhs.true48, %if.else44
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7165, !tbaa !2442
  %stat53 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7167, !ctir !184
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stat53, i32 0, i32 2, !dbg !7168, !ctir !191
  %32 = load i64, i64* %st_nlink, align 8, !dbg !7168, !tbaa !4347, !ctir !199
  %cmp54 = icmp ult i64 1, %32, !dbg !7169
  br i1 %cmp54, label %land.lhs.true56, label %if.end60, !dbg !7170

land.lhs.true56:                                  ; preds = %if.else52
  %call57 = call zeroext i1 @is_colored(i32 22), !dbg !7171
  br i1 %call57, label %if.then59, label %if.end60, !dbg !7172

if.then59:                                        ; preds = %land.lhs.true56
  store i32 22, i32* %type, align 4, !dbg !7173, !tbaa !2497
  br label %if.end60, !dbg !7174

if.end60:                                         ; preds = %if.then59, %land.lhs.true56, %if.else52
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then51
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then43
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then28
  br label %if.end130, !dbg !7175

if.else65:                                        ; preds = %if.else18
  %33 = load i32, i32* %mode, align 4, !dbg !7176, !tbaa !2436
  %and66 = and i32 %33, 61440, !dbg !7176
  %cmp67 = icmp eq i32 %and66, 16384, !dbg !7176
  br i1 %cmp67, label %if.then69, label %if.else98, !dbg !7178

if.then69:                                        ; preds = %if.else65
  store i32 6, i32* %type, align 4, !dbg !7179, !tbaa !2497
  %34 = load i32, i32* %mode, align 4, !dbg !7181, !tbaa !2436
  %and70 = and i32 %34, 512, !dbg !7183
  %tobool71 = icmp ne i32 %and70, 0, !dbg !7183
  br i1 %tobool71, label %land.lhs.true72, label %if.else79, !dbg !7184

land.lhs.true72:                                  ; preds = %if.then69
  %35 = load i32, i32* %mode, align 4, !dbg !7185, !tbaa !2436
  %and73 = and i32 %35, 2, !dbg !7186
  %tobool74 = icmp ne i32 %and73, 0, !dbg !7186
  br i1 %tobool74, label %land.lhs.true75, label %if.else79, !dbg !7187

land.lhs.true75:                                  ; preds = %land.lhs.true72
  %call76 = call zeroext i1 @is_colored(i32 20), !dbg !7188
  br i1 %call76, label %if.then78, label %if.else79, !dbg !7189

if.then78:                                        ; preds = %land.lhs.true75
  store i32 20, i32* %type, align 4, !dbg !7190, !tbaa !2497
  br label %if.end97, !dbg !7191

if.else79:                                        ; preds = %land.lhs.true75, %land.lhs.true72, %if.then69
  %36 = load i32, i32* %mode, align 4, !dbg !7192, !tbaa !2436
  %and80 = and i32 %36, 2, !dbg !7194
  %cmp81 = icmp ne i32 %and80, 0, !dbg !7195
  br i1 %cmp81, label %land.lhs.true83, label %if.else87, !dbg !7196

land.lhs.true83:                                  ; preds = %if.else79
  %call84 = call zeroext i1 @is_colored(i32 19), !dbg !7197
  br i1 %call84, label %if.then86, label %if.else87, !dbg !7198

if.then86:                                        ; preds = %land.lhs.true83
  store i32 19, i32* %type, align 4, !dbg !7199, !tbaa !2497
  br label %if.end96, !dbg !7200

if.else87:                                        ; preds = %land.lhs.true83, %if.else79
  %37 = load i32, i32* %mode, align 4, !dbg !7201, !tbaa !2436
  %and88 = and i32 %37, 512, !dbg !7203
  %cmp89 = icmp ne i32 %and88, 0, !dbg !7204
  br i1 %cmp89, label %land.lhs.true91, label %if.end95, !dbg !7205

land.lhs.true91:                                  ; preds = %if.else87
  %call92 = call zeroext i1 @is_colored(i32 18), !dbg !7206
  br i1 %call92, label %if.then94, label %if.end95, !dbg !7207

if.then94:                                        ; preds = %land.lhs.true91
  store i32 18, i32* %type, align 4, !dbg !7208, !tbaa !2497
  br label %if.end95, !dbg !7209

if.end95:                                         ; preds = %if.then94, %land.lhs.true91, %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then86
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then78
  br label %if.end129, !dbg !7210

if.else98:                                        ; preds = %if.else65
  %38 = load i32, i32* %mode, align 4, !dbg !7211, !tbaa !2436
  %and99 = and i32 %38, 61440, !dbg !7211
  %cmp100 = icmp eq i32 %and99, 40960, !dbg !7211
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !7213

if.then102:                                       ; preds = %if.else98
  store i32 7, i32* %type, align 4, !dbg !7214, !tbaa !2497
  br label %if.end128, !dbg !7215

if.else103:                                       ; preds = %if.else98
  %39 = load i32, i32* %mode, align 4, !dbg !7216, !tbaa !2436
  %and104 = and i32 %39, 61440, !dbg !7216
  %cmp105 = icmp eq i32 %and104, 4096, !dbg !7216
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !7218

if.then107:                                       ; preds = %if.else103
  store i32 8, i32* %type, align 4, !dbg !7219, !tbaa !2497
  br label %if.end127, !dbg !7220

if.else108:                                       ; preds = %if.else103
  %40 = load i32, i32* %mode, align 4, !dbg !7221, !tbaa !2436
  %and109 = and i32 %40, 61440, !dbg !7221
  %cmp110 = icmp eq i32 %and109, 49152, !dbg !7221
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !7223

if.then112:                                       ; preds = %if.else108
  store i32 9, i32* %type, align 4, !dbg !7224, !tbaa !2497
  br label %if.end126, !dbg !7225

if.else113:                                       ; preds = %if.else108
  %41 = load i32, i32* %mode, align 4, !dbg !7226, !tbaa !2436
  %and114 = and i32 %41, 61440, !dbg !7226
  %cmp115 = icmp eq i32 %and114, 24576, !dbg !7226
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !7228

if.then117:                                       ; preds = %if.else113
  store i32 10, i32* %type, align 4, !dbg !7229, !tbaa !2497
  br label %if.end125, !dbg !7230

if.else118:                                       ; preds = %if.else113
  %42 = load i32, i32* %mode, align 4, !dbg !7231, !tbaa !2436
  %and119 = and i32 %42, 61440, !dbg !7231
  %cmp120 = icmp eq i32 %and119, 8192, !dbg !7231
  br i1 %cmp120, label %if.then122, label %if.else123, !dbg !7233

if.then122:                                       ; preds = %if.else118
  store i32 11, i32* %type, align 4, !dbg !7234, !tbaa !2497
  br label %if.end124, !dbg !7235

if.else123:                                       ; preds = %if.else118
  store i32 13, i32* %type, align 4, !dbg !7236, !tbaa !2497
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then117
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then112
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then107
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then102
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end97
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end64
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then17
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then14
  store %struct.color_ext_type* null, %struct.color_ext_type** %ext, align 8, !dbg !7239, !tbaa !2442
  %43 = load i32, i32* %type, align 4, !dbg !7240, !tbaa !2497
  %cmp133 = icmp eq i32 %43, 5, !dbg !7242
  br i1 %cmp133, label %if.then135, label %if.end155, !dbg !7243

if.then135:                                       ; preds = %if.end132
  %44 = load i8*, i8** %name, align 8, !dbg !7244, !tbaa !2442
  %call136 = call i64 @strlen(i8* %44) #16, !dbg !7246
  store i64 %call136, i64* %len, align 8, !dbg !7247, !tbaa !2579
  %45 = load i64, i64* %len, align 8, !dbg !7248, !tbaa !2579
  %46 = load i8*, i8** %name, align 8, !dbg !7249, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !7249
  store i8* %add.ptr, i8** %name, align 8, !dbg !7249, !tbaa !2442
  %47 = load %struct.color_ext_type*, %struct.color_ext_type** @color_ext_list, align 8, !dbg !7250, !tbaa !2442
  store %struct.color_ext_type* %47, %struct.color_ext_type** %ext, align 8, !dbg !7252, !tbaa !2442
  br label %for.cond, !dbg !7253

for.cond:                                         ; preds = %for.inc, %if.then135
  %48 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7254, !tbaa !2442
  %cmp137 = icmp ne %struct.color_ext_type* %48, null, !dbg !7256
  br i1 %cmp137, label %for.body, label %for.end, !dbg !7257

for.body:                                         ; preds = %for.cond
  %49 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7258, !tbaa !2442
  %ext139 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %49, i32 0, i32 0, !dbg !7261, !ctir !594
  %len140 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext139, i32 0, i32 0, !dbg !7262, !ctir !262
  %50 = load i64, i64* %len140, align 8, !dbg !7262, !tbaa !7263, !ctir !149
  %51 = load i64, i64* %len, align 8, !dbg !7264, !tbaa !2579
  %cmp141 = icmp ule i64 %50, %51, !dbg !7265
  br i1 %cmp141, label %land.lhs.true143, label %if.end154, !dbg !7266

land.lhs.true143:                                 ; preds = %for.body
  %52 = load i8*, i8** %name, align 8, !dbg !7267, !tbaa !2442
  %53 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7268, !tbaa !2442
  %ext144 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %53, i32 0, i32 0, !dbg !7269, !ctir !594
  %len145 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext144, i32 0, i32 0, !dbg !7270, !ctir !262
  %54 = load i64, i64* %len145, align 8, !dbg !7270, !tbaa !7263, !ctir !149
  %idx.neg = sub i64 0, %54, !dbg !7271
  %add.ptr146 = getelementptr inbounds i8, i8* %52, i64 %idx.neg, !dbg !7271
  %55 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7272, !tbaa !2442
  %ext147 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %55, i32 0, i32 0, !dbg !7273, !ctir !594
  %string = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext147, i32 0, i32 1, !dbg !7274, !ctir !262
  %56 = load i8*, i8** %string, align 8, !dbg !7274, !tbaa !3490, !ctir !146
  %57 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7275, !tbaa !2442
  %ext148 = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %57, i32 0, i32 0, !dbg !7276, !ctir !594
  %len149 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %ext148, i32 0, i32 0, !dbg !7277, !ctir !262
  %58 = load i64, i64* %len149, align 8, !dbg !7277, !tbaa !7263, !ctir !149
  %call150 = call i32 @c_strncasecmp(i8* %add.ptr146, i8* %56, i64 %58) #16, !dbg !7278
  %cmp151 = icmp eq i32 %call150, 0, !dbg !7279
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !7280

if.then153:                                       ; preds = %land.lhs.true143
  br label %for.end, !dbg !7281

if.end154:                                        ; preds = %land.lhs.true143, %for.body
  br label %for.inc, !dbg !7282

for.inc:                                          ; preds = %if.end154
  %59 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7283, !tbaa !2442
  %next = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %59, i32 0, i32 2, !dbg !7284, !ctir !594
  %60 = load %struct.color_ext_type*, %struct.color_ext_type** %next, align 8, !dbg !7284, !tbaa !3480, !ctir !593
  store %struct.color_ext_type* %60, %struct.color_ext_type** %ext, align 8, !dbg !7285, !tbaa !2442
  br label %for.cond, !dbg !7286, !llvm.loop !7287

for.end:                                          ; preds = %if.then153, %for.cond
  br label %if.end155, !dbg !7289

if.end155:                                        ; preds = %for.end, %if.end132
  %61 = load i32, i32* %type, align 4, !dbg !7290, !tbaa !2497
  %cmp156 = icmp eq i32 %61, 7, !dbg !7292
  br i1 %cmp156, label %land.lhs.true158, label %if.end167, !dbg !7293

land.lhs.true158:                                 ; preds = %if.end155
  %62 = load i32, i32* %linkok, align 4, !dbg !7294, !tbaa !2436
  %tobool159 = icmp ne i32 %62, 0, !dbg !7294
  br i1 %tobool159, label %if.end167, label %if.then160, !dbg !7295

if.then160:                                       ; preds = %land.lhs.true158
  %63 = load i8, i8* @color_symlink_as_referent, align 1, !dbg !7296, !tbaa !2461
  %tobool161 = trunc i8 %63 to i1, !dbg !7296
  br i1 %tobool161, label %if.then165, label %lor.lhs.false, !dbg !7299

lor.lhs.false:                                    ; preds = %if.then160
  %call163 = call zeroext i1 @is_colored(i32 13), !dbg !7300
  br i1 %call163, label %if.then165, label %if.end166, !dbg !7301

if.then165:                                       ; preds = %lor.lhs.false, %if.then160
  store i32 13, i32* %type, align 4, !dbg !7302, !tbaa !2497
  br label %if.end166, !dbg !7303

if.end166:                                        ; preds = %if.then165, %lor.lhs.false
  br label %if.end167, !dbg !7304

if.end167:                                        ; preds = %if.end166, %land.lhs.true158, %if.end155
  call void @llvm.dbg.declare(metadata %struct.bin_str** %s, metadata !7305, metadata !DIExpression()), !dbg !7306
  %64 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7307, !tbaa !2442
  %tobool168 = icmp ne %struct.color_ext_type* %64, null, !dbg !7307
  br i1 %tobool168, label %cond.true169, label %cond.false170, !dbg !7307

cond.true169:                                     ; preds = %if.end167
  %65 = load %struct.color_ext_type*, %struct.color_ext_type** %ext, align 8, !dbg !7308, !tbaa !2442
  %seq = getelementptr inbounds %struct.color_ext_type, %struct.color_ext_type* %65, i32 0, i32 1, !dbg !7309, !ctir !594
  br label %cond.end173, !dbg !7307

cond.false170:                                    ; preds = %if.end167
  %66 = load i32, i32* %type, align 4, !dbg !7310, !tbaa !2497
  %idxprom171 = zext i32 %66 to i64, !dbg !7311
  %arrayidx172 = getelementptr inbounds [24 x %struct.bin_str], [24 x %struct.bin_str]* @color_indicator, i64 0, i64 %idxprom171, !dbg !7311, !ctir !261
  br label %cond.end173, !dbg !7307

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi %struct.bin_str* [ %seq, %cond.true169 ], [ %arrayidx172, %cond.false170 ], !dbg !7307
  store %struct.bin_str* %cond174, %struct.bin_str** %s, align 8, !dbg !7306, !tbaa !2442
  %67 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7312, !tbaa !2442
  %string175 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %67, i32 0, i32 1, !dbg !7313, !ctir !400
  %68 = load i8*, i8** %string175, align 8, !dbg !7313, !tbaa !2711, !ctir !146
  %tobool176 = icmp ne i8* %68, null, !dbg !7312
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !7312

cond.true177:                                     ; preds = %cond.end173
  %69 = load %struct.bin_str*, %struct.bin_str** %s, align 8, !dbg !7314, !tbaa !2442
  br label %cond.end179, !dbg !7312

cond.false178:                                    ; preds = %cond.end173
  br label %cond.end179, !dbg !7312

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi %struct.bin_str* [ %69, %cond.true177 ], [ null, %cond.false178 ], !dbg !7312
  ret %struct.bin_str* %cond180, !dbg !7315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @calculate_columns(i1 zeroext %by_columns) #0 !dbg !7316 !ctir !763 {
entry:
  %by_columns.addr = alloca i8, align 1
  %filesno = alloca i64, align 8, !ctir !149
  %cols = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %f = alloca %struct.fileinfo*, align 8, !ctir !183
  %name_length = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %idx = alloca i64, align 8, !ctir !149
  %real_length = alloca i64, align 8, !ctir !149
  %frombool = zext i1 %by_columns to i8
  store i8 %frombool, i8* %by_columns.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %by_columns.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata i64* %filesno, metadata !7319, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.declare(metadata i64* %cols, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7323, metadata !DIExpression()), !dbg !7324
  %0 = load i64, i64* @max_idx, align 8, !dbg !7325, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7325, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7325
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7325

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7325, !tbaa !2579
  br label %cond.end, !dbg !7325

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7325, !tbaa !2579
  br label %cond.end, !dbg !7325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7325
  store i64 %cond, i64* %max_cols, align 8, !dbg !7324, !tbaa !2579
  call void @init_column_info(), !dbg !7326
  store i64 0, i64* %filesno, align 8, !dbg !7327, !tbaa !2579
  br label %for.cond, !dbg !7329

for.cond:                                         ; preds = %for.inc38, %cond.end
  %4 = load i64, i64* %filesno, align 8, !dbg !7330, !tbaa !2579
  %5 = load i64, i64* @cwd_n_used, align 8, !dbg !7332, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !7333
  br i1 %cmp1, label %for.body, label %for.end40, !dbg !7334

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f, metadata !7335, metadata !DIExpression()), !dbg !7337
  %6 = load i8**, i8*** @sorted_file, align 8, !dbg !7338, !tbaa !2442
  %7 = load i64, i64* %filesno, align 8, !dbg !7339, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !7338, !ctir !663
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !7338, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7338
  store %struct.fileinfo* %9, %struct.fileinfo** %f, align 8, !dbg !7337, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %name_length, metadata !7340, metadata !DIExpression()), !dbg !7341
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f, align 8, !dbg !7342, !tbaa !2442
  %call = call i64 @length_of_file_name_and_frills(%struct.fileinfo* %10), !dbg !7343
  store i64 %call, i64* %name_length, align 8, !dbg !7341, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7344, metadata !DIExpression()), !dbg !7346
  store i64 0, i64* %i, align 8, !dbg !7346, !tbaa !2579
  br label %for.cond2, !dbg !7347

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load i64, i64* %i, align 8, !dbg !7348, !tbaa !2579
  %12 = load i64, i64* %max_cols, align 8, !dbg !7350, !tbaa !2579
  %cmp3 = icmp ult i64 %11, %12, !dbg !7351
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !7352

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7353, !tbaa !2442
  %14 = load i64, i64* %i, align 8, !dbg !7356, !tbaa !2579
  %arrayidx5 = getelementptr inbounds %struct.column_info, %struct.column_info* %13, i64 %14, !dbg !7353, !ctir !762
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx5, i32 0, i32 0, !dbg !7357, !ctir !757
  %15 = load i8, i8* %valid_len, align 8, !dbg !7357, !tbaa !7358
  %tobool = trunc i8 %15 to i1, !dbg !7357, !ctir !141
  br i1 %tobool, label %if.then, label %if.end37, !dbg !7359

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata i64* %idx, metadata !7360, metadata !DIExpression()), !dbg !7362
  %16 = load i8, i8* %by_columns.addr, align 1, !dbg !7363, !tbaa !2461
  %tobool6 = trunc i8 %16 to i1, !dbg !7363
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !7363

cond.true7:                                       ; preds = %if.then
  %17 = load i64, i64* %filesno, align 8, !dbg !7364, !tbaa !2579
  %18 = load i64, i64* @cwd_n_used, align 8, !dbg !7365, !tbaa !2579
  %19 = load i64, i64* %i, align 8, !dbg !7366, !tbaa !2579
  %add = add i64 %18, %19, !dbg !7367
  %20 = load i64, i64* %i, align 8, !dbg !7368, !tbaa !2579
  %add8 = add i64 %20, 1, !dbg !7369
  %div = udiv i64 %add, %add8, !dbg !7370
  %div9 = udiv i64 %17, %div, !dbg !7371
  br label %cond.end12, !dbg !7363

cond.false10:                                     ; preds = %if.then
  %21 = load i64, i64* %filesno, align 8, !dbg !7372, !tbaa !2579
  %22 = load i64, i64* %i, align 8, !dbg !7373, !tbaa !2579
  %add11 = add i64 %22, 1, !dbg !7374
  %rem = urem i64 %21, %add11, !dbg !7375
  br label %cond.end12, !dbg !7363

cond.end12:                                       ; preds = %cond.false10, %cond.true7
  %cond13 = phi i64 [ %div9, %cond.true7 ], [ %rem, %cond.false10 ], !dbg !7363
  store i64 %cond13, i64* %idx, align 8, !dbg !7362, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %real_length, metadata !7376, metadata !DIExpression()), !dbg !7377
  %23 = load i64, i64* %name_length, align 8, !dbg !7378, !tbaa !2579
  %24 = load i64, i64* %idx, align 8, !dbg !7379, !tbaa !2579
  %25 = load i64, i64* %i, align 8, !dbg !7380, !tbaa !2579
  %cmp14 = icmp eq i64 %24, %25, !dbg !7381
  %26 = zext i1 %cmp14 to i64, !dbg !7379
  %cond15 = select i1 %cmp14, i32 0, i32 2, !dbg !7379
  %conv = sext i32 %cond15 to i64, !dbg !7382
  %add16 = add i64 %23, %conv, !dbg !7383
  store i64 %add16, i64* %real_length, align 8, !dbg !7377, !tbaa !2579
  %27 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7384, !tbaa !2442
  %28 = load i64, i64* %i, align 8, !dbg !7386, !tbaa !2579
  %arrayidx17 = getelementptr inbounds %struct.column_info, %struct.column_info* %27, i64 %28, !dbg !7384, !ctir !762
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx17, i32 0, i32 2, !dbg !7387, !ctir !757
  %29 = load i64*, i64** %col_arr, align 8, !dbg !7387, !tbaa !6165, !ctir !148
  %30 = load i64, i64* %idx, align 8, !dbg !7388, !tbaa !2579
  %arrayidx18 = getelementptr inbounds i64, i64* %29, i64 %30, !dbg !7384, !ctir !148
  %31 = load i64, i64* %arrayidx18, align 8, !dbg !7384, !tbaa !2579
  %32 = load i64, i64* %real_length, align 8, !dbg !7389, !tbaa !2579
  %cmp19 = icmp ult i64 %31, %32, !dbg !7390
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !7391

if.then21:                                        ; preds = %cond.end12
  %33 = load i64, i64* %real_length, align 8, !dbg !7392, !tbaa !2579
  %34 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7394, !tbaa !2442
  %35 = load i64, i64* %i, align 8, !dbg !7395, !tbaa !2579
  %arrayidx22 = getelementptr inbounds %struct.column_info, %struct.column_info* %34, i64 %35, !dbg !7394, !ctir !762
  %col_arr23 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx22, i32 0, i32 2, !dbg !7396, !ctir !757
  %36 = load i64*, i64** %col_arr23, align 8, !dbg !7396, !tbaa !6165, !ctir !148
  %37 = load i64, i64* %idx, align 8, !dbg !7397, !tbaa !2579
  %arrayidx24 = getelementptr inbounds i64, i64* %36, i64 %37, !dbg !7394, !ctir !148
  %38 = load i64, i64* %arrayidx24, align 8, !dbg !7394, !tbaa !2579
  %sub = sub i64 %33, %38, !dbg !7398
  %39 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7399, !tbaa !2442
  %40 = load i64, i64* %i, align 8, !dbg !7400, !tbaa !2579
  %arrayidx25 = getelementptr inbounds %struct.column_info, %struct.column_info* %39, i64 %40, !dbg !7399, !ctir !762
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx25, i32 0, i32 1, !dbg !7401, !ctir !757
  %41 = load i64, i64* %line_len, align 8, !dbg !7402, !tbaa !7403, !ctir !149
  %add26 = add i64 %41, %sub, !dbg !7402
  store i64 %add26, i64* %line_len, align 8, !dbg !7402, !tbaa !7403, !ctir !149
  %42 = load i64, i64* %real_length, align 8, !dbg !7404, !tbaa !2579
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7405, !tbaa !2442
  %44 = load i64, i64* %i, align 8, !dbg !7406, !tbaa !2579
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7405, !ctir !762
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7407, !ctir !757
  %45 = load i64*, i64** %col_arr28, align 8, !dbg !7407, !tbaa !6165, !ctir !148
  %46 = load i64, i64* %idx, align 8, !dbg !7408, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i64, i64* %45, i64 %46, !dbg !7405, !ctir !148
  store i64 %42, i64* %arrayidx29, align 8, !dbg !7409, !tbaa !2579
  %47 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7410, !tbaa !2442
  %48 = load i64, i64* %i, align 8, !dbg !7411, !tbaa !2579
  %arrayidx30 = getelementptr inbounds %struct.column_info, %struct.column_info* %47, i64 %48, !dbg !7410, !ctir !762
  %line_len31 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx30, i32 0, i32 1, !dbg !7412, !ctir !757
  %49 = load i64, i64* %line_len31, align 8, !dbg !7412, !tbaa !7403, !ctir !149
  %50 = load i64, i64* @line_length, align 8, !dbg !7413, !tbaa !2579
  %cmp32 = icmp ult i64 %49, %50, !dbg !7414
  %51 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7415, !tbaa !2442
  %52 = load i64, i64* %i, align 8, !dbg !7416, !tbaa !2579
  %arrayidx34 = getelementptr inbounds %struct.column_info, %struct.column_info* %51, i64 %52, !dbg !7415, !ctir !762
  %valid_len35 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx34, i32 0, i32 0, !dbg !7417, !ctir !757
  %frombool36 = zext i1 %cmp32 to i8, !dbg !7418
  store i8 %frombool36, i8* %valid_len35, align 8, !dbg !7418, !tbaa !7358, !ctir !141
  br label %if.end, !dbg !7419

if.end:                                           ; preds = %if.then21, %cond.end12
  br label %if.end37, !dbg !7420

if.end37:                                         ; preds = %if.end, %for.body4
  br label %for.inc, !dbg !7421

for.inc:                                          ; preds = %if.end37
  %53 = load i64, i64* %i, align 8, !dbg !7422, !tbaa !2579
  %inc = add i64 %53, 1, !dbg !7422
  store i64 %inc, i64* %i, align 8, !dbg !7422, !tbaa !2579
  br label %for.cond2, !dbg !7423, !llvm.loop !7424

for.end:                                          ; preds = %for.cond2
  br label %for.inc38, !dbg !7426

for.inc38:                                        ; preds = %for.end
  %54 = load i64, i64* %filesno, align 8, !dbg !7427, !tbaa !2579
  %inc39 = add i64 %54, 1, !dbg !7427
  store i64 %inc39, i64* %filesno, align 8, !dbg !7427, !tbaa !2579
  br label %for.cond, !dbg !7428, !llvm.loop !7429

for.end40:                                        ; preds = %for.cond
  %55 = load i64, i64* %max_cols, align 8, !dbg !7431, !tbaa !2579
  store i64 %55, i64* %cols, align 8, !dbg !7433, !tbaa !2579
  br label %for.cond41, !dbg !7434

for.cond41:                                       ; preds = %for.inc51, %for.end40
  %56 = load i64, i64* %cols, align 8, !dbg !7435, !tbaa !2579
  %cmp42 = icmp ult i64 1, %56, !dbg !7437
  br i1 %cmp42, label %for.body44, label %for.end52, !dbg !7438

for.body44:                                       ; preds = %for.cond41
  %57 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7439, !tbaa !2442
  %58 = load i64, i64* %cols, align 8, !dbg !7442, !tbaa !2579
  %sub45 = sub i64 %58, 1, !dbg !7443
  %arrayidx46 = getelementptr inbounds %struct.column_info, %struct.column_info* %57, i64 %sub45, !dbg !7439, !ctir !762
  %valid_len47 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx46, i32 0, i32 0, !dbg !7444, !ctir !757
  %59 = load i8, i8* %valid_len47, align 8, !dbg !7444, !tbaa !7358
  %tobool48 = trunc i8 %59 to i1, !dbg !7444, !ctir !141
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !7445

if.then49:                                        ; preds = %for.body44
  br label %for.end52, !dbg !7446

if.end50:                                         ; preds = %for.body44
  br label %for.inc51, !dbg !7447

for.inc51:                                        ; preds = %if.end50
  %60 = load i64, i64* %cols, align 8, !dbg !7448, !tbaa !2579
  %dec = add i64 %60, -1, !dbg !7448
  store i64 %dec, i64* %cols, align 8, !dbg !7448, !tbaa !2579
  br label %for.cond41, !dbg !7449, !llvm.loop !7450

for.end52:                                        ; preds = %if.then49, %for.cond41
  %61 = load i64, i64* %cols, align 8, !dbg !7452, !tbaa !2579
  ret i64 %61, !dbg !7453
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @length_of_file_name_and_frills(%struct.fileinfo* %f) #0 !dbg !7454 !ctir !751 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  %len = alloca i64, align 8, !ctir !149
  %buf = alloca [652 x i8], align 16, !ctir !622
  %c = alloca i8, align 1, !ctir !144
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7457, metadata !DIExpression()), !dbg !7458
  store i64 0, i64* %len, align 8, !dbg !7458, !tbaa !2579
  call void @llvm.dbg.declare(metadata [652 x i8]* %buf, metadata !7459, metadata !DIExpression()), !dbg !7460
  %0 = load i8, i8* @print_inode, align 1, !dbg !7461, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !7461
  br i1 %tobool, label %if.then, label %if.end, !dbg !7463

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @format, align 4, !dbg !7464, !tbaa !2497
  %cmp = icmp eq i32 %1, 4, !dbg !7465
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7464

cond.true:                                        ; preds = %if.then
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7466, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !7467, !ctir !184
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 1, !dbg !7468, !ctir !191
  %3 = load i64, i64* %st_ino, align 8, !dbg !7468, !tbaa !3808, !ctir !197
  %arraydecay = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7469
  %call = call i8* @umaxtostr(i64 %3, i8* %arraydecay), !dbg !7470
  %call1 = call i64 @strlen(i8* %call) #16, !dbg !7471
  br label %cond.end, !dbg !7464

cond.false:                                       ; preds = %if.then
  %4 = load i32, i32* @inode_number_width, align 4, !dbg !7472, !tbaa !2436
  %conv = sext i32 %4 to i64, !dbg !7472
  br label %cond.end, !dbg !7464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call1, %cond.true ], [ %conv, %cond.false ], !dbg !7464
  %add = add i64 1, %cond, !dbg !7473
  %5 = load i64, i64* %len, align 8, !dbg !7474, !tbaa !2579
  %add2 = add i64 %5, %add, !dbg !7474
  store i64 %add2, i64* %len, align 8, !dbg !7474, !tbaa !2579
  br label %if.end, !dbg !7475

if.end:                                           ; preds = %cond.end, %entry
  %6 = load i8, i8* @print_block_size, align 1, !dbg !7476, !tbaa !2461
  %tobool3 = trunc i8 %6 to i1, !dbg !7476
  br i1 %tobool3, label %if.then4, label %if.end23, !dbg !7478

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* @format, align 4, !dbg !7479, !tbaa !2497
  %cmp5 = icmp eq i32 %7, 4, !dbg !7480
  br i1 %cmp5, label %cond.true7, label %cond.false17, !dbg !7479

cond.true7:                                       ; preds = %if.then4
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7481, !tbaa !2442
  %stat_ok = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 7, !dbg !7482, !ctir !184
  %9 = load i8, i8* %stat_ok, align 8, !dbg !7482, !tbaa !4023
  %tobool8 = trunc i8 %9 to i1, !dbg !7482, !ctir !141
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !7483

cond.true9:                                       ; preds = %cond.true7
  br label %cond.end14, !dbg !7483

cond.false10:                                     ; preds = %cond.true7
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7484, !tbaa !2442
  %stat11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !7484, !ctir !184
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %stat11, i32 0, i32 10, !dbg !7484, !ctir !191
  %11 = load i64, i64* %st_blocks, align 8, !dbg !7484, !tbaa !4224, !ctir !212
  %arraydecay12 = getelementptr inbounds [652 x i8], [652 x i8]* %buf, i64 0, i64 0, !dbg !7485
  %12 = load i32, i32* @human_output_opts, align 4, !dbg !7486, !tbaa !2436
  %13 = load i64, i64* @output_block_size, align 8, !dbg !7487, !tbaa !2579
  %call13 = call i8* @human_readable(i64 %11, i8* %arraydecay12, i32 %12, i64 512, i64 %13), !dbg !7488
  br label %cond.end14, !dbg !7483

cond.end14:                                       ; preds = %cond.false10, %cond.true9
  %cond15 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i64 0, i64 0), %cond.true9 ], [ %call13, %cond.false10 ], !dbg !7483
  %call16 = call i64 @strlen(i8* %cond15) #16, !dbg !7489
  br label %cond.end19, !dbg !7479

cond.false17:                                     ; preds = %if.then4
  %14 = load i32, i32* @block_size_width, align 4, !dbg !7490, !tbaa !2436
  %conv18 = sext i32 %14 to i64, !dbg !7490
  br label %cond.end19, !dbg !7479

cond.end19:                                       ; preds = %cond.false17, %cond.end14
  %cond20 = phi i64 [ %call16, %cond.end14 ], [ %conv18, %cond.false17 ], !dbg !7479
  %add21 = add i64 1, %cond20, !dbg !7491
  %15 = load i64, i64* %len, align 8, !dbg !7492, !tbaa !2579
  %add22 = add i64 %15, %add21, !dbg !7492
  store i64 %add22, i64* %len, align 8, !dbg !7492, !tbaa !2579
  br label %if.end23, !dbg !7493

if.end23:                                         ; preds = %cond.end19, %if.end
  %16 = load i8, i8* @print_scontext, align 1, !dbg !7494, !tbaa !2461
  %tobool24 = trunc i8 %16 to i1, !dbg !7494
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !7496

if.then25:                                        ; preds = %if.end23
  %17 = load i32, i32* @format, align 4, !dbg !7497, !tbaa !2497
  %cmp26 = icmp eq i32 %17, 4, !dbg !7498
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !7497

cond.true28:                                      ; preds = %if.then25
  %18 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7499, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %18, i32 0, i32 6, !dbg !7500, !ctir !184
  %19 = load i8*, i8** %scontext, align 8, !dbg !7500, !tbaa !4070, !ctir !143
  %call29 = call i64 @strlen(i8* %19) #16, !dbg !7501
  br label %cond.end32, !dbg !7497

cond.false30:                                     ; preds = %if.then25
  %20 = load i32, i32* @scontext_width, align 4, !dbg !7502, !tbaa !2436
  %conv31 = sext i32 %20 to i64, !dbg !7502
  br label %cond.end32, !dbg !7497

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i64 [ %call29, %cond.true28 ], [ %conv31, %cond.false30 ], !dbg !7497
  %add34 = add i64 1, %cond33, !dbg !7503
  %21 = load i64, i64* %len, align 8, !dbg !7504, !tbaa !2579
  %add35 = add i64 %21, %add34, !dbg !7504
  store i64 %add35, i64* %len, align 8, !dbg !7504, !tbaa !2579
  br label %if.end36, !dbg !7505

if.end36:                                         ; preds = %cond.end32, %if.end23
  %22 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7506, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %22, i32 0, i32 0, !dbg !7507, !ctir !184
  %23 = load i8*, i8** %name, align 8, !dbg !7507, !tbaa !4017, !ctir !143
  %24 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !7508, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7509, !tbaa !2442
  %quoted = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 11, !dbg !7510, !ctir !184
  %26 = load i32, i32* %quoted, align 4, !dbg !7510, !tbaa !3819, !ctir !27
  %call37 = call i64 @quote_name_width(i8* %23, %struct.quoting_options* %24, i32 %26), !dbg !7511
  %27 = load i64, i64* %len, align 8, !dbg !7512, !tbaa !2579
  %add38 = add i64 %27, %call37, !dbg !7512
  store i64 %add38, i64* %len, align 8, !dbg !7512, !tbaa !2579
  %28 = load i32, i32* @indicator_style, align 4, !dbg !7513, !tbaa !2497
  %cmp39 = icmp ne i32 %28, 0, !dbg !7515
  br i1 %cmp39, label %if.then41, label %if.end51, !dbg !7516

if.then41:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7517, metadata !DIExpression()), !dbg !7519
  %29 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7520, !tbaa !2442
  %stat_ok42 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %29, i32 0, i32 7, !dbg !7521, !ctir !184
  %30 = load i8, i8* %stat_ok42, align 8, !dbg !7521, !tbaa !4023
  %tobool43 = trunc i8 %30 to i1, !dbg !7521, !ctir !141
  %31 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7522, !tbaa !2442
  %stat44 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %31, i32 0, i32 3, !dbg !7523, !ctir !184
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stat44, i32 0, i32 3, !dbg !7524, !ctir !191
  %32 = load i32, i32* %st_mode, align 8, !dbg !7524, !tbaa !3982, !ctir !201
  %33 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7525, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %33, i32 0, i32 4, !dbg !7526, !ctir !184
  %34 = load i32, i32* %filetype, align 8, !dbg !7526, !tbaa !3815, !ctir !36
  %call45 = call signext i8 @get_type_indicator(i1 zeroext %tobool43, i32 %32, i32 %34), !dbg !7527
  store i8 %call45, i8* %c, align 1, !dbg !7519, !tbaa !2497
  %35 = load i8, i8* %c, align 1, !dbg !7528, !tbaa !2497
  %conv46 = sext i8 %35 to i32, !dbg !7528
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !7529
  %conv48 = zext i1 %cmp47 to i32, !dbg !7529
  %conv49 = sext i32 %conv48 to i64, !dbg !7530
  %36 = load i64, i64* %len, align 8, !dbg !7531, !tbaa !2579
  %add50 = add i64 %36, %conv49, !dbg !7531
  store i64 %add50, i64* %len, align 8, !dbg !7531, !tbaa !2579
  br label %if.end51, !dbg !7532

if.end51:                                         ; preds = %if.then41, %if.end36
  %37 = load i64, i64* %len, align 8, !dbg !7533, !tbaa !2579
  ret i64 %37, !dbg !7534
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @indent(i64 %from, i64 %to) #0 !dbg !7535 !ctir !765 {
entry:
  %from.addr = alloca i64, align 8
  %to.addr = alloca i64, align 8
  store i64 %from, i64* %from.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %from.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i64 %to, i64* %to.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  br label %while.cond, !dbg !7540

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %from.addr, align 8, !dbg !7541, !tbaa !2579
  %1 = load i64, i64* %to.addr, align 8, !dbg !7542, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7543
  br i1 %cmp, label %while.body, label %while.end, !dbg !7540

while.body:                                       ; preds = %while.cond
  %2 = load i64, i64* @tabsize, align 8, !dbg !7544, !tbaa !2579
  %cmp1 = icmp ne i64 %2, 0, !dbg !7547
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !7548

land.lhs.true:                                    ; preds = %while.body
  %3 = load i64, i64* %to.addr, align 8, !dbg !7549, !tbaa !2579
  %4 = load i64, i64* @tabsize, align 8, !dbg !7550, !tbaa !2579
  %div = udiv i64 %3, %4, !dbg !7551
  %5 = load i64, i64* %from.addr, align 8, !dbg !7552, !tbaa !2579
  %add = add i64 %5, 1, !dbg !7553
  %6 = load i64, i64* @tabsize, align 8, !dbg !7554, !tbaa !2579
  %div2 = udiv i64 %add, %6, !dbg !7555
  %cmp3 = icmp ugt i64 %div, %div2, !dbg !7556
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7557

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @putchar_unlocked(i32 9), !dbg !7558
  %7 = load i64, i64* @tabsize, align 8, !dbg !7560, !tbaa !2579
  %8 = load i64, i64* %from.addr, align 8, !dbg !7561, !tbaa !2579
  %9 = load i64, i64* @tabsize, align 8, !dbg !7562, !tbaa !2579
  %rem = urem i64 %8, %9, !dbg !7563
  %sub = sub i64 %7, %rem, !dbg !7564
  %10 = load i64, i64* %from.addr, align 8, !dbg !7565, !tbaa !2579
  %add4 = add i64 %10, %sub, !dbg !7565
  store i64 %add4, i64* %from.addr, align 8, !dbg !7565, !tbaa !2579
  br label %if.end, !dbg !7566

if.else:                                          ; preds = %land.lhs.true, %while.body
  %call5 = call i32 @putchar_unlocked(i32 32), !dbg !7567
  %11 = load i64, i64* %from.addr, align 8, !dbg !7569, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !7569
  store i64 %inc, i64* %from.addr, align 8, !dbg !7569, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !7540, !llvm.loop !7570

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quote_name_width(i8* %name, %struct.quoting_options* %options, i32 %needs_general_quoting) #0 !dbg !7573 !ctir !753 {
entry:
  %name.addr = alloca i8*, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %needs_general_quoting.addr = alloca i32, align 4
  %smallbuf = alloca [8192 x i8], align 16, !ctir !635
  %buf = alloca i8*, align 8, !ctir !143
  %width = alloca i64, align 8, !ctir !149
  %pad = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i32 %needs_general_quoting, i32* %needs_general_quoting.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %needs_general_quoting.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata [8192 x i8]* %smallbuf, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7582, metadata !DIExpression()), !dbg !7583
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7584
  store i8* %arraydecay, i8** %buf, align 8, !dbg !7583, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %width, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.declare(metadata i8* %pad, metadata !7587, metadata !DIExpression()), !dbg !7588
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7589, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !7590, !tbaa !2442
  %2 = load i32, i32* %needs_general_quoting.addr, align 4, !dbg !7591, !tbaa !2436
  %call = call i64 @quote_name_buf(i8** %buf, i64 8192, i8* %0, %struct.quoting_options* %1, i32 %2, i64* %width, i8* %pad), !dbg !7592
  %3 = load i8*, i8** %buf, align 8, !dbg !7593, !tbaa !2442
  %arraydecay1 = getelementptr inbounds [8192 x i8], [8192 x i8]* %smallbuf, i64 0, i64 0, !dbg !7595
  %cmp = icmp ne i8* %3, %arraydecay1, !dbg !7596
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7597

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %buf, align 8, !dbg !7598, !tbaa !2442
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7599, !tbaa !2442
  %cmp2 = icmp ne i8* %4, %5, !dbg !7600
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7601

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %buf, align 8, !dbg !7602, !tbaa !2442
  call void @free(i8* %6) #13, !dbg !7603
  br label %if.end, !dbg !7603

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i8, i8* %pad, align 1, !dbg !7604, !tbaa !2461
  %tobool = trunc i8 %7 to i1, !dbg !7604
  %conv = zext i1 %tobool to i64, !dbg !7604
  %8 = load i64, i64* %width, align 8, !dbg !7605, !tbaa !2579
  %add = add i64 %8, %conv, !dbg !7605
  store i64 %add, i64* %width, align 8, !dbg !7605, !tbaa !2579
  %9 = load i64, i64* %width, align 8, !dbg !7606, !tbaa !2579
  ret i64 %9, !dbg !7607
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_column_info() #0 !dbg !1028 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  %max_cols = alloca i64, align 8, !ctir !149
  %new_column_info_alloc = alloca i64, align 8, !ctir !149
  %p = alloca i64*, align 8, !ctir !148
  %column_info_growth = alloca i64, align 8, !ctir !149
  %s = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata i64* %max_cols, metadata !7610, metadata !DIExpression()), !dbg !7611
  %0 = load i64, i64* @max_idx, align 8, !dbg !7612, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7612, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7612
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7612

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @max_idx, align 8, !dbg !7612, !tbaa !2579
  br label %cond.end, !dbg !7612

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* @cwd_n_used, align 8, !dbg !7612, !tbaa !2579
  br label %cond.end, !dbg !7612

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7612
  store i64 %cond, i64* %max_cols, align 8, !dbg !7611, !tbaa !2579
  %4 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7613, !tbaa !2579
  %5 = load i64, i64* %max_cols, align 8, !dbg !7615, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !7616
  br i1 %cmp1, label %if.then, label %if.end16, !dbg !7617

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %new_column_info_alloc, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata i64** %p, metadata !7621, metadata !DIExpression()), !dbg !7622
  %6 = load i64, i64* %max_cols, align 8, !dbg !7623, !tbaa !2579
  %7 = load i64, i64* @max_idx, align 8, !dbg !7625, !tbaa !2579
  %div = udiv i64 %7, 2, !dbg !7626
  %cmp2 = icmp ult i64 %6, %div, !dbg !7627
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7628

if.then3:                                         ; preds = %if.then
  %8 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7629, !tbaa !2442
  %9 = bitcast %struct.column_info* %8 to i8*, !dbg !7629
  %10 = load i64, i64* %max_cols, align 8, !dbg !7631, !tbaa !2579
  %call = call i8* @xnrealloc(i8* %9, i64 %10, i64 48), !dbg !7632
  %11 = bitcast i8* %call to %struct.column_info*, !dbg !7632
  store %struct.column_info* %11, %struct.column_info** @column_info, align 8, !dbg !7633, !tbaa !2442
  %12 = load i64, i64* %max_cols, align 8, !dbg !7634, !tbaa !2579
  %mul = mul i64 2, %12, !dbg !7635
  store i64 %mul, i64* %new_column_info_alloc, align 8, !dbg !7636, !tbaa !2579
  br label %if.end, !dbg !7637

if.else:                                          ; preds = %if.then
  %13 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7638, !tbaa !2442
  %14 = bitcast %struct.column_info* %13 to i8*, !dbg !7638
  %15 = load i64, i64* @max_idx, align 8, !dbg !7640, !tbaa !2579
  %call4 = call i8* @xnrealloc(i8* %14, i64 %15, i64 24), !dbg !7641
  %16 = bitcast i8* %call4 to %struct.column_info*, !dbg !7641
  store %struct.column_info* %16, %struct.column_info** @column_info, align 8, !dbg !7642, !tbaa !2442
  %17 = load i64, i64* @max_idx, align 8, !dbg !7643, !tbaa !2579
  store i64 %17, i64* %new_column_info_alloc, align 8, !dbg !7644, !tbaa !2579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  call void @llvm.dbg.declare(metadata i64* %column_info_growth, metadata !7645, metadata !DIExpression()), !dbg !7647
  %18 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7648, !tbaa !2579
  %19 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7649, !tbaa !2579
  %sub = sub i64 %18, %19, !dbg !7650
  store i64 %sub, i64* %column_info_growth, align 8, !dbg !7647, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s, metadata !7651, metadata !DIExpression()), !dbg !7652
  %20 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7653, !tbaa !2579
  %add = add i64 %20, 1, !dbg !7654
  %21 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7655, !tbaa !2579
  %add5 = add i64 %add, %21, !dbg !7656
  store i64 %add5, i64* %s, align 8, !dbg !7652, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %t, metadata !7657, metadata !DIExpression()), !dbg !7658
  %22 = load i64, i64* %s, align 8, !dbg !7659, !tbaa !2579
  %23 = load i64, i64* %column_info_growth, align 8, !dbg !7660, !tbaa !2579
  %mul6 = mul i64 %22, %23, !dbg !7661
  store i64 %mul6, i64* %t, align 8, !dbg !7658, !tbaa !2579
  %24 = load i64, i64* %s, align 8, !dbg !7662, !tbaa !2579
  %25 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7664, !tbaa !2579
  %cmp7 = icmp ult i64 %24, %25, !dbg !7665
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !7666

lor.lhs.false:                                    ; preds = %if.end
  %26 = load i64, i64* %t, align 8, !dbg !7667, !tbaa !2579
  %27 = load i64, i64* %column_info_growth, align 8, !dbg !7668, !tbaa !2579
  %div8 = udiv i64 %26, %27, !dbg !7669
  %28 = load i64, i64* %s, align 8, !dbg !7670, !tbaa !2579
  %cmp9 = icmp ne i64 %div8, %28, !dbg !7671
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7672

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  call void @xalloc_die() #14, !dbg !7673
  unreachable, !dbg !7673

if.end11:                                         ; preds = %lor.lhs.false
  %29 = load i64, i64* %t, align 8, !dbg !7674, !tbaa !2579
  %div12 = udiv i64 %29, 2, !dbg !7675
  %call13 = call noalias i8* @xnmalloc(i64 %div12, i64 8), !dbg !7676
  %30 = bitcast i8* %call13 to i64*, !dbg !7676
  store i64* %30, i64** %p, align 8, !dbg !7677, !tbaa !2442
  %31 = load i64, i64* @init_column_info.column_info_alloc, align 8, !dbg !7678, !tbaa !2579
  store i64 %31, i64* %i, align 8, !dbg !7680, !tbaa !2579
  br label %for.cond, !dbg !7681

for.cond:                                         ; preds = %for.inc, %if.end11
  %32 = load i64, i64* %i, align 8, !dbg !7682, !tbaa !2579
  %33 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7684, !tbaa !2579
  %cmp14 = icmp ult i64 %32, %33, !dbg !7685
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7686

for.body:                                         ; preds = %for.cond
  %34 = load i64*, i64** %p, align 8, !dbg !7687, !tbaa !2442
  %35 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7689, !tbaa !2442
  %36 = load i64, i64* %i, align 8, !dbg !7690, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.column_info, %struct.column_info* %35, i64 %36, !dbg !7689, !ctir !762
  %col_arr = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx, i32 0, i32 2, !dbg !7691, !ctir !757
  store i64* %34, i64** %col_arr, align 8, !dbg !7692, !tbaa !6165, !ctir !148
  %37 = load i64, i64* %i, align 8, !dbg !7693, !tbaa !2579
  %add15 = add i64 %37, 1, !dbg !7694
  %38 = load i64*, i64** %p, align 8, !dbg !7695, !tbaa !2442
  %add.ptr = getelementptr inbounds i64, i64* %38, i64 %add15, !dbg !7695
  store i64* %add.ptr, i64** %p, align 8, !dbg !7695, !tbaa !2442
  br label %for.inc, !dbg !7696

for.inc:                                          ; preds = %for.body
  %39 = load i64, i64* %i, align 8, !dbg !7697, !tbaa !2579
  %inc = add i64 %39, 1, !dbg !7697
  store i64 %inc, i64* %i, align 8, !dbg !7697, !tbaa !2579
  br label %for.cond, !dbg !7698, !llvm.loop !7699

for.end:                                          ; preds = %for.cond
  %40 = load i64, i64* %new_column_info_alloc, align 8, !dbg !7701, !tbaa !2579
  store i64 %40, i64* @init_column_info.column_info_alloc, align 8, !dbg !7702, !tbaa !2579
  br label %if.end16, !dbg !7703

if.end16:                                         ; preds = %for.end, %cond.end
  store i64 0, i64* %i, align 8, !dbg !7704, !tbaa !2579
  br label %for.cond17, !dbg !7706

for.cond17:                                       ; preds = %for.inc33, %if.end16
  %41 = load i64, i64* %i, align 8, !dbg !7707, !tbaa !2579
  %42 = load i64, i64* %max_cols, align 8, !dbg !7709, !tbaa !2579
  %cmp18 = icmp ult i64 %41, %42, !dbg !7710
  br i1 %cmp18, label %for.body19, label %for.end35, !dbg !7711

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7712, metadata !DIExpression()), !dbg !7714
  %43 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7715, !tbaa !2442
  %44 = load i64, i64* %i, align 8, !dbg !7716, !tbaa !2579
  %arrayidx20 = getelementptr inbounds %struct.column_info, %struct.column_info* %43, i64 %44, !dbg !7715, !ctir !762
  %valid_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx20, i32 0, i32 0, !dbg !7717, !ctir !757
  store i8 1, i8* %valid_len, align 8, !dbg !7718, !tbaa !7358, !ctir !141
  %45 = load i64, i64* %i, align 8, !dbg !7719, !tbaa !2579
  %add21 = add i64 %45, 1, !dbg !7720
  %mul22 = mul i64 %add21, 3, !dbg !7721
  %46 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7722, !tbaa !2442
  %47 = load i64, i64* %i, align 8, !dbg !7723, !tbaa !2579
  %arrayidx23 = getelementptr inbounds %struct.column_info, %struct.column_info* %46, i64 %47, !dbg !7722, !ctir !762
  %line_len = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx23, i32 0, i32 1, !dbg !7724, !ctir !757
  store i64 %mul22, i64* %line_len, align 8, !dbg !7725, !tbaa !7403, !ctir !149
  store i64 0, i64* %j, align 8, !dbg !7726, !tbaa !2579
  br label %for.cond24, !dbg !7728

for.cond24:                                       ; preds = %for.inc30, %for.body19
  %48 = load i64, i64* %j, align 8, !dbg !7729, !tbaa !2579
  %49 = load i64, i64* %i, align 8, !dbg !7731, !tbaa !2579
  %cmp25 = icmp ule i64 %48, %49, !dbg !7732
  br i1 %cmp25, label %for.body26, label %for.end32, !dbg !7733

for.body26:                                       ; preds = %for.cond24
  %50 = load %struct.column_info*, %struct.column_info** @column_info, align 8, !dbg !7734, !tbaa !2442
  %51 = load i64, i64* %i, align 8, !dbg !7735, !tbaa !2579
  %arrayidx27 = getelementptr inbounds %struct.column_info, %struct.column_info* %50, i64 %51, !dbg !7734, !ctir !762
  %col_arr28 = getelementptr inbounds %struct.column_info, %struct.column_info* %arrayidx27, i32 0, i32 2, !dbg !7736, !ctir !757
  %52 = load i64*, i64** %col_arr28, align 8, !dbg !7736, !tbaa !6165, !ctir !148
  %53 = load i64, i64* %j, align 8, !dbg !7737, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i64, i64* %52, i64 %53, !dbg !7734, !ctir !148
  store i64 3, i64* %arrayidx29, align 8, !dbg !7738, !tbaa !2579
  br label %for.inc30, !dbg !7734

for.inc30:                                        ; preds = %for.body26
  %54 = load i64, i64* %j, align 8, !dbg !7739, !tbaa !2579
  %inc31 = add i64 %54, 1, !dbg !7739
  store i64 %inc31, i64* %j, align 8, !dbg !7739, !tbaa !2579
  br label %for.cond24, !dbg !7740, !llvm.loop !7741

for.end32:                                        ; preds = %for.cond24
  br label %for.inc33, !dbg !7743

for.inc33:                                        ; preds = %for.end32
  %55 = load i64, i64* %i, align 8, !dbg !7744, !tbaa !2579
  %inc34 = add i64 %55, 1, !dbg !7744
  store i64 %inc34, i64* %i, align 8, !dbg !7744, !tbaa !2579
  br label %for.cond17, !dbg !7745, !llvm.loop !7746

for.end35:                                        ; preds = %for.cond17
  ret void, !dbg !7748
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_directory(%struct.fileinfo* %f) #0 !dbg !7749 !ctir !702 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7752, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !7753, !ctir !184
  %1 = load i32, i32* %filetype, align 8, !dbg !7753, !tbaa !3815, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !7754
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7755

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7756, !tbaa !2442
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !7757, !ctir !184
  %3 = load i32, i32* %filetype1, align 8, !dbg !7757, !tbaa !3815, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !7758
  br label %lor.end, !dbg !7755

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !7759
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @basename_is_dot_or_dotdot(i8* %name) #0 !dbg !7760 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7763, metadata !DIExpression()), !dbg !7764
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7765, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !7766
  store i8* %call, i8** %base, align 8, !dbg !7764, !tbaa !2442
  %1 = load i8*, i8** %base, align 8, !dbg !7767, !tbaa !2442
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %1), !dbg !7768
  ret i1 %call1, !dbg !7769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_ent(%struct.fileinfo* %f) #0 !dbg !7770 !ctir !664 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !7771, metadata !DIExpression()), !dbg !7772
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7773, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !7774, !ctir !185
  %1 = load i8*, i8** %name, align 8, !dbg !7774, !tbaa !4017, !ctir !143
  call void @free(i8* %1) #13, !dbg !7775
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7776, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 1, !dbg !7777, !ctir !185
  %3 = load i8*, i8** %linkname, align 8, !dbg !7777, !tbaa !4155, !ctir !143
  call void @free(i8* %3) #13, !dbg !7778
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7779, !tbaa !2442
  %absolute_name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 2, !dbg !7780, !ctir !185
  %5 = load i8*, i8** %absolute_name, align 8, !dbg !7780, !tbaa !3940, !ctir !143
  call void @free(i8* %5) #13, !dbg !7781
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7782, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 6, !dbg !7784, !ctir !185
  %7 = load i8*, i8** %scontext, align 8, !dbg !7784, !tbaa !4070, !ctir !143
  %cmp = icmp ne i8* %7, getelementptr inbounds ([2 x i8], [2 x i8]* @UNKNOWN_SECURITY_CONTEXT, i64 0, i64 0), !dbg !7785
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7786

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @is_smack_enabled(), !dbg !7787
  br i1 %call, label %if.then1, label %if.else, !dbg !7790

if.then1:                                         ; preds = %if.then
  %8 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7791, !tbaa !2442
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %8, i32 0, i32 6, !dbg !7792, !ctir !185
  %9 = load i8*, i8** %scontext2, align 8, !dbg !7792, !tbaa !4070, !ctir !143
  call void @free(i8* %9) #13, !dbg !7793
  br label %if.end, !dbg !7793

if.else:                                          ; preds = %if.then
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !7794, !tbaa !2442
  %scontext3 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 6, !dbg !7795, !ctir !185
  %11 = load i8*, i8** %scontext3, align 8, !dbg !7795, !tbaa !4070, !ctir !143
  call void @freecon(i8* %11), !dbg !7796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end4, !dbg !7797

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !7798
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_smack_enabled() #0 !dbg !7799 !ctir !602 {
entry:
  ret i1 false, !dbg !7801
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #0 !dbg !7802 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !144
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !7805, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7805, !ctir !146
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7805, !tbaa !2497
  %conv = sext i8 %1 to i32, !dbg !7805
  %cmp = icmp eq i32 %conv, 46, !dbg !7807
  br i1 %cmp, label %if.then, label %if.else, !dbg !7808

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !7809, metadata !DIExpression()), !dbg !7811
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !7812, !tbaa !2442
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !7813, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7813, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7813, !tbaa !2497
  %conv3 = sext i8 %4 to i32, !dbg !7813
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !7814
  %conv5 = zext i1 %cmp4 to i32, !dbg !7814
  %add = add nsw i32 %conv5, 1, !dbg !7815
  %idxprom = sext i32 %add to i64, !dbg !7812
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7812, !ctir !146
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !7812, !tbaa !2497
  store i8 %5, i8* %sep, align 1, !dbg !7811, !tbaa !2497
  %6 = load i8, i8* %sep, align 1, !dbg !7816, !tbaa !2497
  %tobool = icmp ne i8 %6, 0, !dbg !7816
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7817

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !7818, !tbaa !2497
  %conv7 = sext i8 %7 to i32, !dbg !7818
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !7818
  br label %lor.end, !dbg !7817

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !7819
  br label %return, !dbg !7819

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7820
  br label %return, !dbg !7820

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !7821
  ret i1 %9, !dbg !7821
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initialize_ordering_vector() #0 !dbg !7822 !ctir !341 {
entry:
  %i = alloca i64, align 8, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7823, metadata !DIExpression()), !dbg !7825
  store i64 0, i64* %i, align 8, !dbg !7825, !tbaa !2579
  br label %for.cond, !dbg !7826

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !7827, !tbaa !2579
  %1 = load i64, i64* @cwd_n_used, align 8, !dbg !7829, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !7830
  br i1 %cmp, label %for.body, label %for.end, !dbg !7831

for.body:                                         ; preds = %for.cond
  %2 = load %struct.fileinfo*, %struct.fileinfo** @cwd_file, align 8, !dbg !7832, !tbaa !2442
  %3 = load i64, i64* %i, align 8, !dbg !7833, !tbaa !2579
  %arrayidx = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i64 %3, !dbg !7832, !ctir !252
  %4 = bitcast %struct.fileinfo* %arrayidx to i8*, !dbg !7834
  %5 = load i8**, i8*** @sorted_file, align 8, !dbg !7835, !tbaa !2442
  %6 = load i64, i64* %i, align 8, !dbg !7836, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 %6, !dbg !7835, !ctir !663
  store i8* %4, i8** %arrayidx1, align 8, !dbg !7837, !tbaa !2442
  br label %for.inc, !dbg !7835

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !7838, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !7838
  store i64 %inc, i64* %i, align 8, !dbg !7838, !tbaa !2579
  br label %for.cond, !dbg !7839, !llvm.loop !7840

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7842
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%struct.__jmp_buf_tag*) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7843 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7846, metadata !DIExpression()), !dbg !7845
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7845, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7845
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7845, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7845
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7845
  ret i32 %call, !dbg !7845
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7847 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7850, metadata !DIExpression()), !dbg !7849
  br label %do.body, !dbg !7849

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7851, metadata !DIExpression()), !dbg !7853
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7853, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7853
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7853
  %frombool = zext i1 %call to i8, !dbg !7853
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7853, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7854, metadata !DIExpression()), !dbg !7853
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7853, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7853
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7853
  %frombool2 = zext i1 %call1 to i8, !dbg !7853
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7853, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7855, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7855
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7855

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7855, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7855
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7853

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7855
  br label %return, !dbg !7855

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7857, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7857
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7857

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7857, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7857
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7853

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7857
  br label %return, !dbg !7857

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7853

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7849, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7849
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7849, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7849
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7849
  store i32 %call9, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7849
  ret i32 %12, !dbg !7849
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_name(i8* %a, i8* %b) #0 !dbg !7859 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7862, metadata !DIExpression()), !dbg !7861
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7861, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7861
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7861, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7861
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7861
  ret i32 %call, !dbg !7861
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_name(i8* %a, i8* %b) #0 !dbg !7863 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7866, metadata !DIExpression()), !dbg !7865
  br label %do.body, !dbg !7865

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7867, metadata !DIExpression()), !dbg !7869
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7869, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7869
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7869
  %frombool = zext i1 %call to i8, !dbg !7869
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7869, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7870, metadata !DIExpression()), !dbg !7869
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7869, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7869
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7869
  %frombool2 = zext i1 %call1 to i8, !dbg !7869
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7869, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7871, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7871
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7871

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7871, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7871
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7869

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7871
  br label %return, !dbg !7871

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7873, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7873
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7873

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7873, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7873
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7869

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7873
  br label %return, !dbg !7873

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7869

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7865, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7865
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7865, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7865
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7865
  store i32 %call9, i32* %retval, align 4, !dbg !7865
  br label %return, !dbg !7865

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7865
  ret i32 %12, !dbg !7865
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_name(i8* %a, i8* %b) #9 !dbg !7875 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7878, metadata !DIExpression()), !dbg !7877
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7877, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7877
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7877, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7877
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7877
  ret i32 %call, !dbg !7877
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7879 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7882, metadata !DIExpression()), !dbg !7881
  br label %do.body, !dbg !7881

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7883, metadata !DIExpression()), !dbg !7885
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7885, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7885
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7885
  %frombool = zext i1 %call to i8, !dbg !7885
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7885, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7886, metadata !DIExpression()), !dbg !7885
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7885, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7885
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7885
  %frombool2 = zext i1 %call1 to i8, !dbg !7885
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7885, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7887, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7887
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7887

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7887, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7887
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7885

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7887
  br label %return, !dbg !7887

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7889, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7889
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7889

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7889, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7889
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7885

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7889
  br label %return, !dbg !7889

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7885

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7881, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7881
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7881, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7881
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7881
  store i32 %call9, i32* %retval, align 4, !dbg !7881
  br label %return, !dbg !7881

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7881
  ret i32 %12, !dbg !7881
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_name(i8* %a, i8* %b) #9 !dbg !7891 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7894, metadata !DIExpression()), !dbg !7893
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7893, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7893
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7893, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7893
  %call = call i32 @cmp_name(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7893
  ret i32 %call, !dbg !7893
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_name(i8* %a, i8* %b) #9 !dbg !7895 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7898, metadata !DIExpression()), !dbg !7897
  br label %do.body, !dbg !7897

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7899, metadata !DIExpression()), !dbg !7901
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7901, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7901
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7901
  %frombool = zext i1 %call to i8, !dbg !7901
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7901, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7902, metadata !DIExpression()), !dbg !7901
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7901, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7901
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7901
  %frombool2 = zext i1 %call1 to i8, !dbg !7901
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7901, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7903, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7903
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7903

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7903, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7903
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7901

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7903
  br label %return, !dbg !7903

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7905, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7905
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7905

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7905, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7905
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7901

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7905
  br label %return, !dbg !7905

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7901

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7897, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7897
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7897, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7897
  %call9 = call i32 @cmp_name(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7897
  store i32 %call9, i32* %retval, align 4, !dbg !7897
  br label %return, !dbg !7897

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7897
  ret i32 %12, !dbg !7897
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7907 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7908, metadata !DIExpression()), !dbg !7909
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7910, metadata !DIExpression()), !dbg !7909
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7909, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7909
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7909, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7909
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7909
  ret i32 %call, !dbg !7909
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7911 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7912, metadata !DIExpression()), !dbg !7913
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7914, metadata !DIExpression()), !dbg !7913
  br label %do.body, !dbg !7913

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7915, metadata !DIExpression()), !dbg !7917
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7917, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7917
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7917
  %frombool = zext i1 %call to i8, !dbg !7917
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7917, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7918, metadata !DIExpression()), !dbg !7917
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7917, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7917
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7917
  %frombool2 = zext i1 %call1 to i8, !dbg !7917
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7917, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7919, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7919
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7919

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7919, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7919
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7917

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7919
  br label %return, !dbg !7919

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7921, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7921
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7921

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7921, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7921
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7917

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7921
  br label %return, !dbg !7921

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7917

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7913, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7913
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7913, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7913
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7913
  store i32 %call9, i32* %retval, align 4, !dbg !7913
  br label %return, !dbg !7913

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7913
  ret i32 %12, !dbg !7913
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_extension(i8* %a, i8* %b) #0 !dbg !7923 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7926, metadata !DIExpression()), !dbg !7925
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7925, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7925
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7925, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7925
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7925
  ret i32 %call, !dbg !7925
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_extension(i8* %a, i8* %b) #0 !dbg !7927 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7930, metadata !DIExpression()), !dbg !7929
  br label %do.body, !dbg !7929

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7931, metadata !DIExpression()), !dbg !7933
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7933, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7933
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7933
  %frombool = zext i1 %call to i8, !dbg !7933
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7933, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7934, metadata !DIExpression()), !dbg !7933
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7933, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7933
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7933
  %frombool2 = zext i1 %call1 to i8, !dbg !7933
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7933, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7935, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7935
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7935

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7935, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7935
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7933

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7937, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7937
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7937

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7937, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7937
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7933

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7937
  br label %return, !dbg !7937

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7933

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7929, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7929
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7929, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7929
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7929
  store i32 %call9, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7929
  ret i32 %12, !dbg !7929
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_extension(i8* %a, i8* %b) #9 !dbg !7939 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7942, metadata !DIExpression()), !dbg !7941
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7941, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7941
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7941, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7941
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7941
  ret i32 %call, !dbg !7941
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7943 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7946, metadata !DIExpression()), !dbg !7945
  br label %do.body, !dbg !7945

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7947, metadata !DIExpression()), !dbg !7949
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7949, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7949
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7949
  %frombool = zext i1 %call to i8, !dbg !7949
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7949, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7950, metadata !DIExpression()), !dbg !7949
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7949, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7949
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7949
  %frombool2 = zext i1 %call1 to i8, !dbg !7949
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7949, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7951, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7951
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7951

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7951, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7951
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7949

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7951
  br label %return, !dbg !7951

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7953, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7953
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7953

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7953, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7953
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7949

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7949

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7945, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7945
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7945, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7945
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7945
  store i32 %call9, i32* %retval, align 4, !dbg !7945
  br label %return, !dbg !7945

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7945
  ret i32 %12, !dbg !7945
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_extension(i8* %a, i8* %b) #9 !dbg !7955 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7958, metadata !DIExpression()), !dbg !7957
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7957, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7957
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7957, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7957
  %call = call i32 @cmp_extension(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !7957
  ret i32 %call, !dbg !7957
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_extension(i8* %a, i8* %b) #9 !dbg !7959 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7962, metadata !DIExpression()), !dbg !7961
  br label %do.body, !dbg !7961

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7963, metadata !DIExpression()), !dbg !7965
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7965, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7965
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7965
  %frombool = zext i1 %call to i8, !dbg !7965
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7965, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7966, metadata !DIExpression()), !dbg !7965
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7965, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7965
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7965
  %frombool2 = zext i1 %call1 to i8, !dbg !7965
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7965, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7967, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7967
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7967

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7967, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7967
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7965

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7969, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7969
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7969

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7969, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7969
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7965

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7965

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7961, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7961
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7961, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7961
  %call9 = call i32 @cmp_extension(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !7961
  store i32 %call9, i32* %retval, align 4, !dbg !7961
  br label %return, !dbg !7961

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7961
  ret i32 %12, !dbg !7961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7971 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7974, metadata !DIExpression()), !dbg !7973
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7973, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7973
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7973, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7973
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7973
  ret i32 %call, !dbg !7973
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7975 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7978, metadata !DIExpression()), !dbg !7977
  br label %do.body, !dbg !7977

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7979, metadata !DIExpression()), !dbg !7981
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7981, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7981
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7981
  %frombool = zext i1 %call to i8, !dbg !7981
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7981, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7982, metadata !DIExpression()), !dbg !7981
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7981, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7981
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7981
  %frombool2 = zext i1 %call1 to i8, !dbg !7981
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7981, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7983, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7983
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7983

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7983, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7983
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7981

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !7985, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !7985
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !7985

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !7985, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !7985
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7981

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !7985
  br label %return, !dbg !7985

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7981

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !7977, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7977
  %10 = load i8*, i8** %b.addr, align 8, !dbg !7977, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7977
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7977
  store i32 %call9, i32* %retval, align 4, !dbg !7977
  br label %return, !dbg !7977

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7977
  ret i32 %12, !dbg !7977
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_size(i8* %a, i8* %b) #0 !dbg !7987 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7990, metadata !DIExpression()), !dbg !7989
  %0 = load i8*, i8** %b.addr, align 8, !dbg !7989, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7989
  %2 = load i8*, i8** %a.addr, align 8, !dbg !7989, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7989
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !7989
  ret i32 %call, !dbg !7989
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_size(i8* %a, i8* %b) #0 !dbg !7991 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7994, metadata !DIExpression()), !dbg !7993
  br label %do.body, !dbg !7993

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !7995, metadata !DIExpression()), !dbg !7997
  %0 = load i8*, i8** %a.addr, align 8, !dbg !7997, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !7997
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !7997
  %frombool = zext i1 %call to i8, !dbg !7997
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !7997, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !7998, metadata !DIExpression()), !dbg !7997
  %2 = load i8*, i8** %b.addr, align 8, !dbg !7997, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !7997
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !7997
  %frombool2 = zext i1 %call1 to i8, !dbg !7997
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !7997, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !7999, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !7999
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7999

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !7999, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !7999
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7997

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8001, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8001
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8001

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8001, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8001
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7997

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !7997

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !7993, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !7993
  %10 = load i8*, i8** %a.addr, align 8, !dbg !7993, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !7993
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !7993
  store i32 %call9, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7993
  ret i32 %12, !dbg !7993
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_size(i8* %a, i8* %b) #9 !dbg !8003 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8006, metadata !DIExpression()), !dbg !8005
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8005, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8005
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8005, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8005
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8005
  ret i32 %call, !dbg !8005
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8007 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8010, metadata !DIExpression()), !dbg !8009
  br label %do.body, !dbg !8009

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8011, metadata !DIExpression()), !dbg !8013
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8013, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8013
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8013
  %frombool = zext i1 %call to i8, !dbg !8013
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8013, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8014, metadata !DIExpression()), !dbg !8013
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8013, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8013
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8013
  %frombool2 = zext i1 %call1 to i8, !dbg !8013
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8013, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8015, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8015
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8015

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8015, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8015
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8013

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8017, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8017
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8017

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8017, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8017
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8013

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8017
  br label %return, !dbg !8017

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8013

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8009, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8009
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8009, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8009
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8009
  store i32 %call9, i32* %retval, align 4, !dbg !8009
  br label %return, !dbg !8009

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8009
  ret i32 %12, !dbg !8009
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_size(i8* %a, i8* %b) #9 !dbg !8019 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8022, metadata !DIExpression()), !dbg !8021
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8021, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8021
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8021, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8021
  %call = call i32 @cmp_size(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8021
  ret i32 %call, !dbg !8021
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_size(i8* %a, i8* %b) #9 !dbg !8023 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8026, metadata !DIExpression()), !dbg !8025
  br label %do.body, !dbg !8025

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8027, metadata !DIExpression()), !dbg !8029
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8029, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8029
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8029
  %frombool = zext i1 %call to i8, !dbg !8029
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8029, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8030, metadata !DIExpression()), !dbg !8029
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8029, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8029
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8029
  %frombool2 = zext i1 %call1 to i8, !dbg !8029
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8029, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8031, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8031
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8031

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8031, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8031
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8029

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8031
  br label %return, !dbg !8031

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8033, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8033
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8033

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8033, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8033
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8029

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8033
  br label %return, !dbg !8033

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8029

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8025, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8025
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8025, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8025
  %call9 = call i32 @cmp_size(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8025
  store i32 %call9, i32* %retval, align 4, !dbg !8025
  br label %return, !dbg !8025

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8025
  ret i32 %12, !dbg !8025
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8035 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8040, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8040
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8041, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8041
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8042
  ret i32 %call, !dbg !8043
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8044 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  br label %do.body, !dbg !8049

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8050, metadata !DIExpression()), !dbg !8052
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8052, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8052
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8052
  %frombool = zext i1 %call to i8, !dbg !8052
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8052, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8053, metadata !DIExpression()), !dbg !8052
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8052, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8052
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8052
  %frombool2 = zext i1 %call1 to i8, !dbg !8052
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8052, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8054, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8054
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8054

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8054, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8054
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8052

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8056, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8056
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8056

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8056, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8056
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8052

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8056
  br label %return, !dbg !8056

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8052

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8058, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8058
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8059, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8059
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8060
  store i32 %call9, i32* %retval, align 4, !dbg !8061
  br label %return, !dbg !8061

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8062
  ret i32 %12, !dbg !8062
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_version(i8* %a, i8* %b) #0 !dbg !8063 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8068, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8068
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8069, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8069
  %call = call i32 @cmp_version(%struct.fileinfo* %1, %struct.fileinfo* %3), !dbg !8070
  ret i32 %call, !dbg !8071
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_version(i8* %a, i8* %b) #0 !dbg !8072 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8073, metadata !DIExpression()), !dbg !8074
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8075, metadata !DIExpression()), !dbg !8076
  br label %do.body, !dbg !8077

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8078, metadata !DIExpression()), !dbg !8080
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8080, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8080
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8080
  %frombool = zext i1 %call to i8, !dbg !8080
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8080, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8081, metadata !DIExpression()), !dbg !8080
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8080, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8080
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8080
  %frombool2 = zext i1 %call1 to i8, !dbg !8080
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8080, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8082, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8082
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8082

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8082, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8082
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8080

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8082
  br label %return, !dbg !8082

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8084, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8084
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8084

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8084, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8084
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8080

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8084
  br label %return, !dbg !8084

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8080

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8086, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8086
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8087, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8087
  %call9 = call i32 @cmp_version(%struct.fileinfo* %9, %struct.fileinfo* %11), !dbg !8088
  store i32 %call9, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8090
  ret i32 %12, !dbg !8090
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8091 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8094, metadata !DIExpression()), !dbg !8093
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8093, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8093
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8093, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8093
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8093
  ret i32 %call, !dbg !8093
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8095 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8098, metadata !DIExpression()), !dbg !8097
  br label %do.body, !dbg !8097

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8099, metadata !DIExpression()), !dbg !8101
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8101, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8101
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8101
  %frombool = zext i1 %call to i8, !dbg !8101
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8101, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8102, metadata !DIExpression()), !dbg !8101
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8101, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8101
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8101
  %frombool2 = zext i1 %call1 to i8, !dbg !8101
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8101, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8103, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8103
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8103

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8103, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8103
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8101

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8103
  br label %return, !dbg !8103

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8105, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8105
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8105

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8105, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8105
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8101

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8105
  br label %return, !dbg !8105

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8101

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8097, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8097
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8097, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8097
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8097
  store i32 %call9, i32* %retval, align 4, !dbg !8097
  br label %return, !dbg !8097

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8097
  ret i32 %12, !dbg !8097
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_mtime(i8* %a, i8* %b) #0 !dbg !8107 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8110, metadata !DIExpression()), !dbg !8109
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8109, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8109
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8109, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8109
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8109
  ret i32 %call, !dbg !8109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_mtime(i8* %a, i8* %b) #0 !dbg !8111 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8112, metadata !DIExpression()), !dbg !8113
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8114, metadata !DIExpression()), !dbg !8113
  br label %do.body, !dbg !8113

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8115, metadata !DIExpression()), !dbg !8117
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8117, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8117
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8117
  %frombool = zext i1 %call to i8, !dbg !8117
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8117, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8118, metadata !DIExpression()), !dbg !8117
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8117, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8117
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8117
  %frombool2 = zext i1 %call1 to i8, !dbg !8117
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8117, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8119, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8119
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8119

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8119, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8119
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8117

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8119
  br label %return, !dbg !8119

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8121, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8121
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8121

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8121, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8121
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8117

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8121
  br label %return, !dbg !8121

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8117

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8113, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8113
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8113, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8113
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8113
  store i32 %call9, i32* %retval, align 4, !dbg !8113
  br label %return, !dbg !8113

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8113
  ret i32 %12, !dbg !8113
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8123 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8126, metadata !DIExpression()), !dbg !8125
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8125, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8125
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8125, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8125
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8125
  ret i32 %call, !dbg !8125
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8127 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8130, metadata !DIExpression()), !dbg !8129
  br label %do.body, !dbg !8129

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8131, metadata !DIExpression()), !dbg !8133
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8133, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8133
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8133
  %frombool = zext i1 %call to i8, !dbg !8133
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8133, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8134, metadata !DIExpression()), !dbg !8133
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8133, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8133
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8133
  %frombool2 = zext i1 %call1 to i8, !dbg !8133
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8133, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8135, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8135
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8135

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8135, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8135
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8133

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8135
  br label %return, !dbg !8135

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8137, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8137
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8137

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8137, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8137
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8133

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8137
  br label %return, !dbg !8137

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8133

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8129, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8129
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8129, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8129
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8129
  store i32 %call9, i32* %retval, align 4, !dbg !8129
  br label %return, !dbg !8129

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8129
  ret i32 %12, !dbg !8129
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_mtime(i8* %a, i8* %b) #9 !dbg !8139 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8142, metadata !DIExpression()), !dbg !8141
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8141, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8141
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8141, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8141
  %call = call i32 @cmp_mtime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8141
  ret i32 %call, !dbg !8141
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_mtime(i8* %a, i8* %b) #9 !dbg !8143 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8146, metadata !DIExpression()), !dbg !8145
  br label %do.body, !dbg !8145

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8147, metadata !DIExpression()), !dbg !8149
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8149, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8149
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8149
  %frombool = zext i1 %call to i8, !dbg !8149
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8149, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8150, metadata !DIExpression()), !dbg !8149
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8149, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8149
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8149
  %frombool2 = zext i1 %call1 to i8, !dbg !8149
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8149, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8151, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8151
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8151

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8151, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8151
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8149

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8151
  br label %return, !dbg !8151

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8153, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8153
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8153

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8153, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8153
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8149

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8149

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8145, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8145
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8145, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8145
  %call9 = call i32 @cmp_mtime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8145
  store i32 %call9, i32* %retval, align 4, !dbg !8145
  br label %return, !dbg !8145

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8145
  ret i32 %12, !dbg !8145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8155 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8158, metadata !DIExpression()), !dbg !8157
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8157, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8157
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8157, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8157
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8157
  ret i32 %call, !dbg !8157
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8159 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8162, metadata !DIExpression()), !dbg !8161
  br label %do.body, !dbg !8161

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8163, metadata !DIExpression()), !dbg !8165
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8165, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8165
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8165
  %frombool = zext i1 %call to i8, !dbg !8165
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8165, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8166, metadata !DIExpression()), !dbg !8165
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8165, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8165
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8165
  %frombool2 = zext i1 %call1 to i8, !dbg !8165
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8165, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8167, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8167
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8167

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8167, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8167
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8165

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8167
  br label %return, !dbg !8167

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8169, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8169
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8169

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8169, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8169
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8165

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8169
  br label %return, !dbg !8169

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8165

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8161, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8161
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8161, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8161
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8161
  store i32 %call9, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8161
  ret i32 %12, !dbg !8161
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_ctime(i8* %a, i8* %b) #0 !dbg !8171 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8174, metadata !DIExpression()), !dbg !8173
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8173, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8173
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8173, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8173
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8173
  ret i32 %call, !dbg !8173
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_ctime(i8* %a, i8* %b) #0 !dbg !8175 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8176, metadata !DIExpression()), !dbg !8177
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8178, metadata !DIExpression()), !dbg !8177
  br label %do.body, !dbg !8177

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8179, metadata !DIExpression()), !dbg !8181
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8181, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8181
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8181
  %frombool = zext i1 %call to i8, !dbg !8181
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8181, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8182, metadata !DIExpression()), !dbg !8181
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8181, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8181
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8181
  %frombool2 = zext i1 %call1 to i8, !dbg !8181
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8181, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8183, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8183
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8183

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8183, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8183
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8181

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8183
  br label %return, !dbg !8183

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8185, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8185
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8185

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8185, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8185
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8181

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8185
  br label %return, !dbg !8185

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8181

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8177, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8177
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8177, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8177
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8177
  store i32 %call9, i32* %retval, align 4, !dbg !8177
  br label %return, !dbg !8177

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8177
  ret i32 %12, !dbg !8177
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8187 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8190, metadata !DIExpression()), !dbg !8189
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8189, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8189
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8189, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8189
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8189
  ret i32 %call, !dbg !8189
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8191 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8194, metadata !DIExpression()), !dbg !8193
  br label %do.body, !dbg !8193

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8195, metadata !DIExpression()), !dbg !8197
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8197, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8197
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8197
  %frombool = zext i1 %call to i8, !dbg !8197
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8197, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8198, metadata !DIExpression()), !dbg !8197
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8197, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8197
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8197
  %frombool2 = zext i1 %call1 to i8, !dbg !8197
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8197, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8199, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8199
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8199

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8199, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8199
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8197

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8199
  br label %return, !dbg !8199

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8201, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8201
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8201

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8201, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8201
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8197

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8201
  br label %return, !dbg !8201

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8197

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8193, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8193
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8193, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8193
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8193
  store i32 %call9, i32* %retval, align 4, !dbg !8193
  br label %return, !dbg !8193

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8193
  ret i32 %12, !dbg !8193
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_ctime(i8* %a, i8* %b) #9 !dbg !8203 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8206, metadata !DIExpression()), !dbg !8205
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8205, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8205
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8205, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8205
  %call = call i32 @cmp_ctime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8205
  ret i32 %call, !dbg !8205
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_ctime(i8* %a, i8* %b) #9 !dbg !8207 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8210, metadata !DIExpression()), !dbg !8209
  br label %do.body, !dbg !8209

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8211, metadata !DIExpression()), !dbg !8213
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8213, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8213
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8213
  %frombool = zext i1 %call to i8, !dbg !8213
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8213, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8214, metadata !DIExpression()), !dbg !8213
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8213, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8213
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8213
  %frombool2 = zext i1 %call1 to i8, !dbg !8213
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8213, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8215, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8215
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8215

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8215, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8215
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8213

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8215
  br label %return, !dbg !8215

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8217, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8217
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8217

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8217, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8217
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8213

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8217
  br label %return, !dbg !8217

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8213

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8209, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8209
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8209, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8209
  %call9 = call i32 @cmp_ctime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8209
  store i32 %call9, i32* %retval, align 4, !dbg !8209
  br label %return, !dbg !8209

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8209
  ret i32 %12, !dbg !8209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8219 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8222, metadata !DIExpression()), !dbg !8221
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8221, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8221
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8221, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8221
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8221
  ret i32 %call, !dbg !8221
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8223 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8226, metadata !DIExpression()), !dbg !8225
  br label %do.body, !dbg !8225

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8227, metadata !DIExpression()), !dbg !8229
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8229, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8229
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8229
  %frombool = zext i1 %call to i8, !dbg !8229
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8229, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8230, metadata !DIExpression()), !dbg !8229
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8229, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8229
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8229
  %frombool2 = zext i1 %call1 to i8, !dbg !8229
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8229, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8231, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8231
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8231

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8231, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8231
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8229

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8231
  br label %return, !dbg !8231

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8233, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8233
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8233

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8233, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8233
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8229

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8229

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8225, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8225
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8225, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8225
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8225
  store i32 %call9, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8225
  ret i32 %12, !dbg !8225
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_atime(i8* %a, i8* %b) #0 !dbg !8235 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8238, metadata !DIExpression()), !dbg !8237
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8237, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8237
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8237, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8237
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @xstrcoll), !dbg !8237
  ret i32 %call, !dbg !8237
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rev_xstrcoll_df_atime(i8* %a, i8* %b) #0 !dbg !8239 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8242, metadata !DIExpression()), !dbg !8241
  br label %do.body, !dbg !8241

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8243, metadata !DIExpression()), !dbg !8245
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8245, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8245
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8245
  %frombool = zext i1 %call to i8, !dbg !8245
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8245, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8246, metadata !DIExpression()), !dbg !8245
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8245, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8245
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8245
  %frombool2 = zext i1 %call1 to i8, !dbg !8245
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8245, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8247, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8247
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8247

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8247, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8247
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8245

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8249, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8249
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8249

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8249, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8249
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8245

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8245

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8241, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8241
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8241, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8241
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @xstrcoll), !dbg !8241
  store i32 %call9, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8241
  ret i32 %12, !dbg !8241
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_atime(i8* %a, i8* %b) #9 !dbg !8251 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8254, metadata !DIExpression()), !dbg !8253
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8253, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8253
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8253, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8253
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8253
  ret i32 %call, !dbg !8253
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8255 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8256, metadata !DIExpression()), !dbg !8257
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8258, metadata !DIExpression()), !dbg !8257
  br label %do.body, !dbg !8257

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8259, metadata !DIExpression()), !dbg !8261
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8261, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8261
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8261
  %frombool = zext i1 %call to i8, !dbg !8261
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8261, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8262, metadata !DIExpression()), !dbg !8261
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8261, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8261
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8261
  %frombool2 = zext i1 %call1 to i8, !dbg !8261
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8261, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8263, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8263
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8263

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8263, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8263
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8261

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8263
  br label %return, !dbg !8263

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8265, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8265
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8265

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8265, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8265
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8261

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8261

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %a.addr, align 8, !dbg !8257, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8257
  %10 = load i8*, i8** %b.addr, align 8, !dbg !8257, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8257
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8257
  store i32 %call9, i32* %retval, align 4, !dbg !8257
  br label %return, !dbg !8257

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8257
  ret i32 %12, !dbg !8257
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_atime(i8* %a, i8* %b) #9 !dbg !8267 !ctir !719 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8270, metadata !DIExpression()), !dbg !8269
  %0 = load i8*, i8** %b.addr, align 8, !dbg !8269, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8269
  %2 = load i8*, i8** %a.addr, align 8, !dbg !8269, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8269
  %call = call i32 @cmp_atime(%struct.fileinfo* %1, %struct.fileinfo* %3, i32 (i8*, i8*)* @strcmp), !dbg !8269
  ret i32 %call, !dbg !8269
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @rev_strcmp_df_atime(i8* %a, i8* %b) #9 !dbg !8271 !ctir !719 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %a_is_dir = alloca i8, align 1, !ctir !141
  %b_is_dir = alloca i8, align 1, !ctir !141
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8274, metadata !DIExpression()), !dbg !8273
  br label %do.body, !dbg !8273

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a_is_dir, metadata !8275, metadata !DIExpression()), !dbg !8277
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8277, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.fileinfo*, !dbg !8277
  %call = call zeroext i1 @is_linked_directory(%struct.fileinfo* %1), !dbg !8277
  %frombool = zext i1 %call to i8, !dbg !8277
  store i8 %frombool, i8* %a_is_dir, align 1, !dbg !8277, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %b_is_dir, metadata !8278, metadata !DIExpression()), !dbg !8277
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8277, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.fileinfo*, !dbg !8277
  %call1 = call zeroext i1 @is_linked_directory(%struct.fileinfo* %3), !dbg !8277
  %frombool2 = zext i1 %call1 to i8, !dbg !8277
  store i8 %frombool2, i8* %b_is_dir, align 1, !dbg !8277, !tbaa !2461
  %4 = load i8, i8* %a_is_dir, align 1, !dbg !8279, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8279
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8279

land.lhs.true:                                    ; preds = %do.body
  %5 = load i8, i8* %b_is_dir, align 1, !dbg !8279, !tbaa !2461
  %tobool3 = trunc i8 %5 to i1, !dbg !8279
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8277

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8279
  br label %return, !dbg !8279

if.end:                                           ; preds = %land.lhs.true, %do.body
  %6 = load i8, i8* %a_is_dir, align 1, !dbg !8281, !tbaa !2461
  %tobool4 = trunc i8 %6 to i1, !dbg !8281
  br i1 %tobool4, label %if.end8, label %land.lhs.true5, !dbg !8281

land.lhs.true5:                                   ; preds = %if.end
  %7 = load i8, i8* %b_is_dir, align 1, !dbg !8281, !tbaa !2461
  %tobool6 = trunc i8 %7 to i1, !dbg !8281
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8277

if.then7:                                         ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !8281
  br label %return, !dbg !8281

if.end8:                                          ; preds = %land.lhs.true5, %if.end
  br label %do.end, !dbg !8277

do.end:                                           ; preds = %if.end8
  %8 = load i8*, i8** %b.addr, align 8, !dbg !8273, !tbaa !2442
  %9 = bitcast i8* %8 to %struct.fileinfo*, !dbg !8273
  %10 = load i8*, i8** %a.addr, align 8, !dbg !8273, !tbaa !2442
  %11 = bitcast i8* %10 to %struct.fileinfo*, !dbg !8273
  %call9 = call i32 @cmp_atime(%struct.fileinfo* %9, %struct.fileinfo* %11, i32 (i8*, i8*)* @strcmp), !dbg !8273
  store i32 %call9, i32* %retval, align 4, !dbg !8273
  br label %return, !dbg !8273

return:                                           ; preds = %do.end, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8273
  ret i32 %12, !dbg !8273
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_linked_directory(%struct.fileinfo* %f) #0 !dbg !8283 !ctir !702 {
entry:
  %f.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8286, !tbaa !2442
  %filetype = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 4, !dbg !8287, !ctir !184
  %1 = load i32, i32* %filetype, align 8, !dbg !8287, !tbaa !3815, !ctir !36
  %cmp = icmp eq i32 %1, 3, !dbg !8288
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8289

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8290, !tbaa !2442
  %filetype1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 4, !dbg !8291, !ctir !184
  %3 = load i32, i32* %filetype1, align 8, !dbg !8291, !tbaa !3815, !ctir !36
  %cmp2 = icmp eq i32 %3, 9, !dbg !8292
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !8293

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8294, !tbaa !2442
  %linkmode = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 5, !dbg !8294, !ctir !184
  %5 = load i32, i32* %linkmode, align 4, !dbg !8294, !tbaa !4193, !ctir !228
  %and = and i32 %5, 61440, !dbg !8294
  %cmp3 = icmp eq i32 %and, 16384, !dbg !8294
  br label %lor.end, !dbg !8293

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %6, !dbg !8295
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_atime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8296 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8303, metadata !DIExpression()), !dbg !8304
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8305, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8306, !ctir !184
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %stat) #16, !dbg !8307
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8307
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8307
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8307
  store i64 %3, i64* %2, align 8, !dbg !8307
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8307
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8307
  store i64 %5, i64* %4, align 8, !dbg !8307
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8308, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8309, !ctir !184
  %call3 = call { i64, i64 } @get_stat_atime(%struct.stat* %stat2) #16, !dbg !8310
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8310
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8310
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8310
  store i64 %9, i64* %8, align 8, !dbg !8310
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8310
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8310
  store i64 %11, i64* %10, align 8, !dbg !8310
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8311
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8311
  %14 = load i64, i64* %13, align 8, !dbg !8311
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8311
  %16 = load i64, i64* %15, align 8, !dbg !8311
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8311
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8311
  %19 = load i64, i64* %18, align 8, !dbg !8311
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8311
  %21 = load i64, i64* %20, align 8, !dbg !8311
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8311
  store i32 %call4, i32* %diff, align 4, !dbg !8304, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8312, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8312
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8312

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8313, !tbaa !2436
  br label %cond.end, !dbg !8312

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8314, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8315, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8316, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8316, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8317, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8318, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8318, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8314
  br label %cond.end, !dbg !8312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8312
  ret i32 %cond, !dbg !8319
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xstrcoll(i8* %a, i8* %b) #0 !dbg !8320 !ctir !731 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8325, metadata !DIExpression()), !dbg !8326
  %call = call i32* @__errno_location() #17, !dbg !8327
  store i32 0, i32* %call, align 4, !dbg !8328, !tbaa !2436, !ctir !27
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8329, !tbaa !2442
  %1 = load i8*, i8** %b.addr, align 8, !dbg !8330, !tbaa !2442
  %call1 = call i32 @strcoll(i8* %0, i8* %1) #16, !dbg !8331
  store i32 %call1, i32* %diff, align 4, !dbg !8332, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !8333
  %2 = load i32, i32* %call2, align 4, !dbg !8333, !tbaa !2436, !ctir !27
  %tobool = icmp ne i32 %2, 0, !dbg !8333
  br i1 %tobool, label %if.then, label %if.end, !dbg !8335

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #17, !dbg !8336
  %3 = load i32, i32* %call3, align 4, !dbg !8336, !tbaa !2436, !ctir !27
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.223, i64 0, i64 0)) #13, !dbg !8338
  %4 = load i8*, i8** %a.addr, align 8, !dbg !8339, !tbaa !2442
  %call5 = call i8* @quote_n(i32 0, i8* %4), !dbg !8340
  %5 = load i8*, i8** %b.addr, align 8, !dbg !8341, !tbaa !2442
  %call6 = call i8* @quote_n(i32 1, i8* %5), !dbg !8342
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call4, i8* %call5, i8* %call6), !dbg !8343
  call void @set_exit_status(i1 zeroext false), !dbg !8344
  call void @longjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @failed_strcoll, i64 0, i64 0), i32 1) #15, !dbg !8345
  unreachable, !dbg !8345

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %diff, align 4, !dbg !8346, !tbaa !2436
  ret i32 %6, !dbg !8347
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #5

; Function Attrs: noreturn nounwind
declare dso_local void @longjmp(%struct.__jmp_buf_tag*, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_ctime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8348 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8355, metadata !DIExpression()), !dbg !8356
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8357, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8358, !ctir !184
  %call = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat) #16, !dbg !8359
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8359
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8359
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8359
  store i64 %3, i64* %2, align 8, !dbg !8359
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8359
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8359
  store i64 %5, i64* %4, align 8, !dbg !8359
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8360, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8361, !ctir !184
  %call3 = call { i64, i64 } @get_stat_ctime(%struct.stat* %stat2) #16, !dbg !8362
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8362
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8362
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8362
  store i64 %9, i64* %8, align 8, !dbg !8362
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8362
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8362
  store i64 %11, i64* %10, align 8, !dbg !8362
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8363
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8363
  %14 = load i64, i64* %13, align 8, !dbg !8363
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8363
  %16 = load i64, i64* %15, align 8, !dbg !8363
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8363
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8363
  %19 = load i64, i64* %18, align 8, !dbg !8363
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8363
  %21 = load i64, i64* %20, align 8, !dbg !8363
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8363
  store i32 %call4, i32* %diff, align 4, !dbg !8356, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8364, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8364
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8364

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8365, !tbaa !2436
  br label %cond.end, !dbg !8364

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8366, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8367, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8368, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8368, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8369, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8370, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8370, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8366
  br label %cond.end, !dbg !8364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8364
  ret i32 %cond, !dbg !8371
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_mtime(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8372 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  %agg.tmp = alloca %struct.dev_ino, align 8
  %agg.tmp1 = alloca %struct.dev_ino, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8381, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8382, !ctir !184
  %call = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat) #16, !dbg !8383
  %1 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8383
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !8383
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !8383
  store i64 %3, i64* %2, align 8, !dbg !8383
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !8383
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !8383
  store i64 %5, i64* %4, align 8, !dbg !8383
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8384, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8385, !ctir !184
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %stat2) #16, !dbg !8386
  %7 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8386
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !8386
  %9 = extractvalue { i64, i64 } %call3, 0, !dbg !8386
  store i64 %9, i64* %8, align 8, !dbg !8386
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !8386
  %11 = extractvalue { i64, i64 } %call3, 1, !dbg !8386
  store i64 %11, i64* %10, align 8, !dbg !8386
  %12 = bitcast %struct.dev_ino* %agg.tmp to { i64, i64 }*, !dbg !8387
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8387
  %14 = load i64, i64* %13, align 8, !dbg !8387
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8387
  %16 = load i64, i64* %15, align 8, !dbg !8387
  %17 = bitcast %struct.dev_ino* %agg.tmp1 to { i64, i64 }*, !dbg !8387
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !8387
  %19 = load i64, i64* %18, align 8, !dbg !8387
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !8387
  %21 = load i64, i64* %20, align 8, !dbg !8387
  %call4 = call i32 @timespec_cmp(i64 %14, i64 %16, i64 %19, i64 %21) #16, !dbg !8387
  store i32 %call4, i32* %diff, align 4, !dbg !8380, !tbaa !2436
  %22 = load i32, i32* %diff, align 4, !dbg !8388, !tbaa !2436
  %tobool = icmp ne i32 %22, 0, !dbg !8388
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8388

cond.true:                                        ; preds = %entry
  %23 = load i32, i32* %diff, align 4, !dbg !8389, !tbaa !2436
  br label %cond.end, !dbg !8388

cond.false:                                       ; preds = %entry
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8390, !tbaa !2442
  %25 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8391, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %25, i32 0, i32 0, !dbg !8392, !ctir !184
  %26 = load i8*, i8** %name, align 8, !dbg !8392, !tbaa !4017, !ctir !143
  %27 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8393, !tbaa !2442
  %name5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %27, i32 0, i32 0, !dbg !8394, !ctir !184
  %28 = load i8*, i8** %name5, align 8, !dbg !8394, !tbaa !4017, !ctir !143
  %call6 = call i32 %24(i8* %26, i8* %28), !dbg !8390
  br label %cond.end, !dbg !8388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %call6, %cond.false ], !dbg !8388
  ret i32 %cond, !dbg !8395
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_version(%struct.fileinfo* %a, %struct.fileinfo* %b) #0 !dbg !8396 !ctir !733 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8401, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8402, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !8402, !tbaa !4017, !ctir !143
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8403, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8404, !ctir !184
  %3 = load i8*, i8** %name1, align 8, !dbg !8404, !tbaa !4017, !ctir !143
  %call = call i32 @filevercmp(i8* %1, i8* %3) #16, !dbg !8405
  ret i32 %call, !dbg !8406
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_size(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8407 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8408, metadata !DIExpression()), !dbg !8409
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8414, metadata !DIExpression()), !dbg !8415
  %0 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8416, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8416, !ctir !191
  %1 = load i64, i64* %st_size, align 8, !dbg !8416, !tbaa !4417, !ctir !179
  %2 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8416, !tbaa !2442
  %stat1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %stat1, i32 0, i32 8, !dbg !8416, !ctir !191
  %3 = load i64, i64* %st_size2, align 8, !dbg !8416, !tbaa !4417, !ctir !179
  %cmp3 = icmp slt i64 %1, %3, !dbg !8416
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8416

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8416

cond.false:                                       ; preds = %entry
  %4 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8416, !tbaa !2442
  %stat4 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size5 = getelementptr inbounds %struct.stat, %struct.stat* %stat4, i32 0, i32 8, !dbg !8416, !ctir !191
  %5 = load i64, i64* %st_size5, align 8, !dbg !8416, !tbaa !4417, !ctir !179
  %6 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8416, !tbaa !2442
  %stat6 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8416, !ctir !184
  %st_size7 = getelementptr inbounds %struct.stat, %struct.stat* %stat6, i32 0, i32 8, !dbg !8416, !ctir !191
  %7 = load i64, i64* %st_size7, align 8, !dbg !8416, !tbaa !4417, !ctir !179
  %cmp8 = icmp sgt i64 %5, %7, !dbg !8416
  %conv = zext i1 %cmp8 to i32, !dbg !8416
  br label %cond.end, !dbg !8416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !8416
  store i32 %cond, i32* %diff, align 4, !dbg !8415, !tbaa !2436
  %8 = load i32, i32* %diff, align 4, !dbg !8417, !tbaa !2436
  %tobool = icmp ne i32 %8, 0, !dbg !8417
  br i1 %tobool, label %cond.true9, label %cond.false10, !dbg !8417

cond.true9:                                       ; preds = %cond.end
  %9 = load i32, i32* %diff, align 4, !dbg !8418, !tbaa !2436
  br label %cond.end12, !dbg !8417

cond.false10:                                     ; preds = %cond.end
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8419, !tbaa !2442
  %11 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8420, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %11, i32 0, i32 0, !dbg !8421, !ctir !184
  %12 = load i8*, i8** %name, align 8, !dbg !8421, !tbaa !4017, !ctir !143
  %13 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8422, !tbaa !2442
  %name11 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %13, i32 0, i32 0, !dbg !8423, !ctir !184
  %14 = load i8*, i8** %name11, align 8, !dbg !8423, !tbaa !4017, !ctir !143
  %call = call i32 %10(i8* %12, i8* %14), !dbg !8419
  br label %cond.end12, !dbg !8417

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %9, %cond.true9 ], [ %call, %cond.false10 ], !dbg !8417
  ret i32 %cond13, !dbg !8424
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_extension(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8425 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %base1 = alloca i8*, align 8, !ctir !146
  %base2 = alloca i8*, align 8, !ctir !146
  %diff = alloca i32, align 4, !ctir !27
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8426, metadata !DIExpression()), !dbg !8427
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i8** %base1, metadata !8432, metadata !DIExpression()), !dbg !8433
  %0 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8434, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 0, !dbg !8435, !ctir !184
  %1 = load i8*, i8** %name, align 8, !dbg !8435, !tbaa !4017, !ctir !143
  %call = call i8* @strrchr(i8* %1, i32 46) #16, !dbg !8436
  store i8* %call, i8** %base1, align 8, !dbg !8433, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base2, metadata !8437, metadata !DIExpression()), !dbg !8438
  %2 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8439, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %2, i32 0, i32 0, !dbg !8440, !ctir !184
  %3 = load i8*, i8** %name1, align 8, !dbg !8440, !tbaa !4017, !ctir !143
  %call2 = call i8* @strrchr(i8* %3, i32 46) #16, !dbg !8441
  store i8* %call2, i8** %base2, align 8, !dbg !8438, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !8442, metadata !DIExpression()), !dbg !8443
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8444, !tbaa !2442
  %5 = load i8*, i8** %base1, align 8, !dbg !8445, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !8445
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8445

cond.true:                                        ; preds = %entry
  %6 = load i8*, i8** %base1, align 8, !dbg !8446, !tbaa !2442
  br label %cond.end, !dbg !8445

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !8445
  %7 = load i8*, i8** %base2, align 8, !dbg !8447, !tbaa !2442
  %tobool3 = icmp ne i8* %7, null, !dbg !8447
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !8447

cond.true4:                                       ; preds = %cond.end
  %8 = load i8*, i8** %base2, align 8, !dbg !8448, !tbaa !2442
  br label %cond.end6, !dbg !8447

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !8447

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i8* [ %8, %cond.true4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false5 ], !dbg !8447
  %call8 = call i32 %4(i8* %cond, i8* %cond7), !dbg !8444
  store i32 %call8, i32* %diff, align 4, !dbg !8443, !tbaa !2436
  %9 = load i32, i32* %diff, align 4, !dbg !8449, !tbaa !2436
  %tobool9 = icmp ne i32 %9, 0, !dbg !8449
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !8449

cond.true10:                                      ; preds = %cond.end6
  %10 = load i32, i32* %diff, align 4, !dbg !8450, !tbaa !2436
  br label %cond.end15, !dbg !8449

cond.false11:                                     ; preds = %cond.end6
  %11 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8451, !tbaa !2442
  %12 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8452, !tbaa !2442
  %name12 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %12, i32 0, i32 0, !dbg !8453, !ctir !184
  %13 = load i8*, i8** %name12, align 8, !dbg !8453, !tbaa !4017, !ctir !143
  %14 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8454, !tbaa !2442
  %name13 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %14, i32 0, i32 0, !dbg !8455, !ctir !184
  %15 = load i8*, i8** %name13, align 8, !dbg !8455, !tbaa !4017, !ctir !143
  %call14 = call i32 %11(i8* %13, i8* %15), !dbg !8451
  br label %cond.end15, !dbg !8449

cond.end15:                                       ; preds = %cond.false11, %cond.true10
  %cond16 = phi i32 [ %10, %cond.true10 ], [ %call14, %cond.false11 ], !dbg !8449
  ret i32 %cond16, !dbg !8456
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cmp_name(%struct.fileinfo* %a, %struct.fileinfo* %b, i32 (i8*, i8*)* %cmp) #0 !dbg !8457 !ctir !728 {
entry:
  %a.addr = alloca %struct.fileinfo*, align 8
  %b.addr = alloca %struct.fileinfo*, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store %struct.fileinfo* %a, %struct.fileinfo** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %a.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store %struct.fileinfo* %b, %struct.fileinfo** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %b.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  %0 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !8464, !tbaa !2442
  %1 = load %struct.fileinfo*, %struct.fileinfo** %a.addr, align 8, !dbg !8465, !tbaa !2442
  %name = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 0, !dbg !8466, !ctir !184
  %2 = load i8*, i8** %name, align 8, !dbg !8466, !tbaa !4017, !ctir !143
  %3 = load %struct.fileinfo*, %struct.fileinfo** %b.addr, align 8, !dbg !8467, !tbaa !2442
  %name1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 0, !dbg !8468, !ctir !184
  %4 = load i8*, i8** %name1, align 8, !dbg !8468, !tbaa !4017, !ctir !143
  %call = call i32 %0(i8* %2, i8* %4), !dbg !8464
  ret i32 %call, !dbg !8469
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @needs_quoting(i8* %name) #0 !dbg !8470 !ctir !568 {
entry:
  %name.addr = alloca i8*, align 8
  %test = alloca [2 x i8], align 1, !ctir !666
  %len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata [2 x i8]* %test, metadata !8473, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8475, metadata !DIExpression()), !dbg !8476
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8477
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8478, !tbaa !2442
  %1 = load %struct.quoting_options*, %struct.quoting_options** @filename_quoting_options, align 8, !dbg !8479, !tbaa !2442
  %call = call i64 @quotearg_buffer(i8* %arraydecay, i64 2, i8* %0, i64 -1, %struct.quoting_options* %1), !dbg !8480
  store i64 %call, i64* %len, align 8, !dbg !8476, !tbaa !2579
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8481, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !8482, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !8482
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %test, i64 0, i64 0, !dbg !8483
  %4 = load i8, i8* %arraydecay1, align 1, !dbg !8483, !tbaa !2497, !ctir !144
  %conv2 = sext i8 %4 to i32, !dbg !8483
  %cmp = icmp ne i32 %conv, %conv2, !dbg !8484
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8485

lor.rhs:                                          ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8486, !tbaa !2442
  %call4 = call i64 @strlen(i8* %5) #16, !dbg !8487
  %6 = load i64, i64* %len, align 8, !dbg !8488, !tbaa !2579
  %cmp5 = icmp ne i64 %call4, %6, !dbg !8489
  br label %lor.end, !dbg !8485

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  ret i1 %7, !dbg !8490
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @attach(i8* %dest, i8* %dirname, i8* %name) #0 !dbg !8491 !ctir !672 {
entry:
  %dest.addr = alloca i8*, align 8
  %dirname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %dirnamep = alloca i8*, align 8, !ctir !146
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i8* %dirname, i8** %dirname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i8** %dirnamep, metadata !8498, metadata !DIExpression()), !dbg !8499
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !8500, !tbaa !2442
  store i8* %0, i8** %dirnamep, align 8, !dbg !8499, !tbaa !2442
  %1 = load i8*, i8** %dirname.addr, align 8, !dbg !8501, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8501, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8501, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !8501
  %cmp = icmp ne i32 %conv, 46, !dbg !8503
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8504

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !8505, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8505, !ctir !146
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8505, !tbaa !2497
  %conv3 = sext i8 %4 to i32, !dbg !8505
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !8506
  br i1 %cmp4, label %if.then, label %if.end15, !dbg !8507

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %while.cond, !dbg !8508

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i8*, i8** %dirnamep, align 8, !dbg !8510, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !8511, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !8508
  br i1 %tobool, label %while.body, label %while.end, !dbg !8508

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %dirnamep, align 8, !dbg !8512, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8512
  store i8* %incdec.ptr, i8** %dirnamep, align 8, !dbg !8512, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !8513, !tbaa !2497, !ctir !147
  %9 = load i8*, i8** %dest.addr, align 8, !dbg !8514, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8514
  store i8* %incdec.ptr6, i8** %dest.addr, align 8, !dbg !8514, !tbaa !2442
  store i8 %8, i8* %9, align 1, !dbg !8515, !tbaa !2497, !ctir !144
  br label %while.cond, !dbg !8508, !llvm.loop !8516

while.end:                                        ; preds = %while.cond
  %10 = load i8*, i8** %dirnamep, align 8, !dbg !8517, !tbaa !2442
  %11 = load i8*, i8** %dirname.addr, align 8, !dbg !8519, !tbaa !2442
  %cmp7 = icmp ugt i8* %10, %11, !dbg !8520
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !8521

land.lhs.true:                                    ; preds = %while.end
  %12 = load i8*, i8** %dirnamep, align 8, !dbg !8522, !tbaa !2442
  %arrayidx9 = getelementptr inbounds i8, i8* %12, i64 -1, !dbg !8522, !ctir !146
  %13 = load i8, i8* %arrayidx9, align 1, !dbg !8522, !tbaa !2497
  %conv10 = sext i8 %13 to i32, !dbg !8522
  %cmp11 = icmp ne i32 %conv10, 47, !dbg !8523
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8524

if.then13:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %dest.addr, align 8, !dbg !8525, !tbaa !2442
  %incdec.ptr14 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8525
  store i8* %incdec.ptr14, i8** %dest.addr, align 8, !dbg !8525, !tbaa !2442
  store i8 47, i8* %14, align 1, !dbg !8526, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !8527

if.end:                                           ; preds = %if.then13, %land.lhs.true, %while.end
  br label %if.end15, !dbg !8528

if.end15:                                         ; preds = %if.end, %lor.lhs.false
  br label %while.cond16, !dbg !8529

while.cond16:                                     ; preds = %while.body18, %if.end15
  %15 = load i8*, i8** %name.addr, align 8, !dbg !8530, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !8531, !tbaa !2497, !ctir !147
  %tobool17 = icmp ne i8 %16, 0, !dbg !8529
  br i1 %tobool17, label %while.body18, label %while.end21, !dbg !8529

while.body18:                                     ; preds = %while.cond16
  %17 = load i8*, i8** %name.addr, align 8, !dbg !8532, !tbaa !2442
  %incdec.ptr19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8532
  store i8* %incdec.ptr19, i8** %name.addr, align 8, !dbg !8532, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !8533, !tbaa !2497, !ctir !147
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !8534, !tbaa !2442
  %incdec.ptr20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8534
  store i8* %incdec.ptr20, i8** %dest.addr, align 8, !dbg !8534, !tbaa !2442
  store i8 %18, i8* %19, align 1, !dbg !8535, !tbaa !2497, !ctir !144
  br label %while.cond16, !dbg !8529, !llvm.loop !8536

while.end21:                                      ; preds = %while.cond16
  %20 = load i8*, i8** %dest.addr, align 8, !dbg !8537, !tbaa !2442
  store i8 0, i8* %20, align 1, !dbg !8538, !tbaa !2497, !ctir !144
  ret void, !dbg !8539
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1010 !ctir !674 {
entry:
  %retval = alloca i1, align 1
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %b = alloca i8, align 1, !ctir !141
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8544, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8546, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8547, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8547, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8549, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8550
  br i1 %cmp, label %if.then, label %if.end, !dbg !8551

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8552
  store i32 95, i32* %call, align 4, !dbg !8554, !tbaa !2436, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !8555
  br label %return, !dbg !8555

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %b, metadata !8556, metadata !DIExpression()), !dbg !8557
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8558, !tbaa !2442
  %call1 = call zeroext i1 @has_capability(i8* %3), !dbg !8559
  %frombool = zext i1 %call1 to i8, !dbg !8557
  store i8 %frombool, i8* %b, align 1, !dbg !8557, !tbaa !2461
  %4 = load i8, i8* %b, align 1, !dbg !8560, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !8560
  br i1 %tobool, label %if.end7, label %land.lhs.true, !dbg !8562

land.lhs.true:                                    ; preds = %if.end
  %call2 = call i32* @__errno_location() #17, !dbg !8563
  %5 = load i32, i32* %call2, align 4, !dbg !8563, !tbaa !2436, !ctir !27
  %call3 = call zeroext i1 @errno_unsupported(i32 %5), !dbg !8564
  br i1 %call3, label %if.then4, label %if.end7, !dbg !8565

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8566, !tbaa !2442
  %stat5 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %6, i32 0, i32 3, !dbg !8567, !ctir !185
  %st_dev6 = getelementptr inbounds %struct.stat, %struct.stat* %stat5, i32 0, i32 0, !dbg !8568, !ctir !191
  %7 = load i64, i64* %st_dev6, align 8, !dbg !8568, !tbaa !8548, !ctir !195
  store i64 %7, i64* @has_capability_cache.unsupported_device, align 8, !dbg !8569, !tbaa !2579
  br label %if.end7, !dbg !8570

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %8 = load i8, i8* %b, align 1, !dbg !8571, !tbaa !2461
  %tobool8 = trunc i8 %8 to i1, !dbg !8571
  store i1 %tobool8, i1* %retval, align 1, !dbg !8572
  br label %return, !dbg !8572

return:                                           ; preds = %if.end7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8573
  ret i1 %9, !dbg !8573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getfilecon_cache(i8* %file, %struct.fileinfo* %f, i1 zeroext %deref) #0 !dbg !1013 !ctir !682 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %deref.addr = alloca i8, align 1
  %r = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  %frombool = zext i1 %deref to i8
  store i8 %frombool, i8* %deref.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %deref.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8580, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8582, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8583, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8583, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8584, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8585
  br i1 %cmp, label %if.then, label %if.end, !dbg !8586

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8587
  store i32 95, i32* %call, align 4, !dbg !8589, !tbaa !2436, !ctir !27
  store i32 -1, i32* %retval, align 4, !dbg !8590
  br label %return, !dbg !8590

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8591, metadata !DIExpression()), !dbg !8592
  store i32 0, i32* %r, align 4, !dbg !8592, !tbaa !2436
  %3 = load i8, i8* %deref.addr, align 1, !dbg !8593, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !8593
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8593

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %file.addr, align 8, !dbg !8594, !tbaa !2442
  %5 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8595, !tbaa !2442
  %scontext = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %5, i32 0, i32 6, !dbg !8596, !ctir !185
  %call1 = call i32 @getfilecon(i8* %4, i8** %scontext), !dbg !8597
  br label %cond.end, !dbg !8593

cond.false:                                       ; preds = %if.end
  %6 = load i8*, i8** %file.addr, align 8, !dbg !8598, !tbaa !2442
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8599, !tbaa !2442
  %scontext2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 6, !dbg !8600, !ctir !185
  %call3 = call i32 @lgetfilecon(i8* %6, i8** %scontext2), !dbg !8601
  br label %cond.end, !dbg !8593

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call3, %cond.false ], !dbg !8593
  store i32 %cond, i32* %r, align 4, !dbg !8602, !tbaa !2436
  %8 = load i32, i32* %r, align 4, !dbg !8603, !tbaa !2436
  %cmp4 = icmp slt i32 %8, 0, !dbg !8605
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8606

land.lhs.true:                                    ; preds = %cond.end
  %call5 = call i32* @__errno_location() #17, !dbg !8607
  %9 = load i32, i32* %call5, align 4, !dbg !8607, !tbaa !2436, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %9), !dbg !8608
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8609

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8610, !tbaa !2442
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %10, i32 0, i32 3, !dbg !8611, !ctir !185
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8612, !ctir !191
  %11 = load i64, i64* %st_dev9, align 8, !dbg !8612, !tbaa !8548, !ctir !195
  store i64 %11, i64* @getfilecon_cache.unsupported_device, align 8, !dbg !8613, !tbaa !2579
  br label %if.end10, !dbg !8614

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %cond.end
  %12 = load i32, i32* %r, align 4, !dbg !8615, !tbaa !2436
  store i32 %12, i32* %retval, align 4, !dbg !8616
  br label %return, !dbg !8616

return:                                           ; preds = %if.end10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8617
  ret i32 %13, !dbg !8617
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #0 !dbg !8618 !ctir !680 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8619, metadata !DIExpression()), !dbg !8620
  %0 = load i32, i32* %err.addr, align 4, !dbg !8621, !tbaa !2436
  %cmp = icmp eq i32 %0, 95, !dbg !8622
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8623

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8623

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8624
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @file_has_acl_cache(i8* %file, %struct.fileinfo* %f) #0 !dbg !1016 !ctir !684 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %n = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  %0 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8629, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %0, i32 0, i32 3, !dbg !8631, !ctir !185
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 0, !dbg !8632, !ctir !191
  %1 = load i64, i64* %st_dev, align 8, !dbg !8632, !tbaa !8548, !ctir !195
  %2 = load i64, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8633, !tbaa !2579
  %cmp = icmp eq i64 %1, %2, !dbg !8634
  br i1 %cmp, label %if.then, label %if.end, !dbg !8635

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !8636
  store i32 95, i32* %call, align 4, !dbg !8638, !tbaa !2436, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !8639
  br label %return, !dbg !8639

if.end:                                           ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !8640
  store i32 0, i32* %call1, align 4, !dbg !8641, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8642, metadata !DIExpression()), !dbg !8643
  %3 = load i8*, i8** %file.addr, align 8, !dbg !8644, !tbaa !2442
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8645, !tbaa !2442
  %stat2 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 3, !dbg !8646, !ctir !185
  %call3 = call i32 @file_has_acl(i8* %3, %struct.stat* %stat2), !dbg !8647
  store i32 %call3, i32* %n, align 4, !dbg !8643, !tbaa !2436
  %5 = load i32, i32* %n, align 4, !dbg !8648, !tbaa !2436
  %cmp4 = icmp sle i32 %5, 0, !dbg !8650
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !8651

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #17, !dbg !8652
  %6 = load i32, i32* %call5, align 4, !dbg !8652, !tbaa !2436, !ctir !27
  %call6 = call zeroext i1 @errno_unsupported(i32 %6), !dbg !8653
  br i1 %call6, label %if.then7, label %if.end10, !dbg !8654

if.then7:                                         ; preds = %land.lhs.true
  %7 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8655, !tbaa !2442
  %stat8 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %7, i32 0, i32 3, !dbg !8656, !ctir !185
  %st_dev9 = getelementptr inbounds %struct.stat, %struct.stat* %stat8, i32 0, i32 0, !dbg !8657, !ctir !191
  %8 = load i64, i64* %st_dev9, align 8, !dbg !8657, !tbaa !8548, !ctir !195
  store i64 %8, i64* @file_has_acl_cache.unsupported_device, align 8, !dbg !8658, !tbaa !2579
  br label %if.end10, !dbg !8659

if.end10:                                         ; preds = %if.then7, %land.lhs.true, %if.end
  %9 = load i32, i32* %n, align 4, !dbg !8660, !tbaa !2436
  store i32 %9, i32* %retval, align 4, !dbg !8661
  br label %return, !dbg !8661

return:                                           ; preds = %if.end10, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8662
  ret i32 %10, !dbg !8662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_link_name(i8* %filename, %struct.fileinfo* %f, i1 zeroext %command_line_arg) #0 !dbg !8663 !ctir !686 {
entry:
  %filename.addr = alloca i8*, align 8
  %f.addr = alloca %struct.fileinfo*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  store %struct.fileinfo* %f, %struct.fileinfo** %f.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.fileinfo** %f.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !8670, !tbaa !2442
  %1 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8671, !tbaa !2442
  %stat = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %1, i32 0, i32 3, !dbg !8672, !ctir !185
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stat, i32 0, i32 8, !dbg !8673, !ctir !191
  %2 = load i64, i64* %st_size, align 8, !dbg !8673, !tbaa !4417, !ctir !179
  %call = call i8* @areadlink_with_size(i8* %0, i64 %2), !dbg !8674
  %3 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8675, !tbaa !2442
  %linkname = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %3, i32 0, i32 1, !dbg !8676, !ctir !185
  store i8* %call, i8** %linkname, align 8, !dbg !8677, !tbaa !4155, !ctir !143
  %4 = load %struct.fileinfo*, %struct.fileinfo** %f.addr, align 8, !dbg !8678, !tbaa !2442
  %linkname1 = getelementptr inbounds %struct.fileinfo, %struct.fileinfo* %4, i32 0, i32 1, !dbg !8680, !ctir !185
  %5 = load i8*, i8** %linkname1, align 8, !dbg !8680, !tbaa !4155, !ctir !143
  %cmp = icmp eq i8* %5, null, !dbg !8681
  br i1 %cmp, label %if.then, label %if.end, !dbg !8682

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %command_line_arg.addr, align 1, !dbg !8683, !tbaa !2461
  %tobool = trunc i8 %6 to i1, !dbg !8683
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i64 0, i64 0)) #13, !dbg !8684
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !8685, !tbaa !2442
  call void @file_failure(i1 zeroext %tobool, i8* %call2, i8* %7), !dbg !8686
  br label %if.end, !dbg !8686

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8687
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @make_link_name(i8* %name, i8* %linkname) #0 !dbg !8688 !ctir !688 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %linkname.addr = alloca i8*, align 8
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  store i8* %linkname, i8** %linkname.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %linkname.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  %0 = load i8*, i8** %linkname.addr, align 8, !dbg !8693, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8693
  br i1 %tobool, label %if.end, label %if.then, !dbg !8695

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8696
  br label %return, !dbg !8696

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %linkname.addr, align 8, !dbg !8697, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8697, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8697, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !8697
  %cmp = icmp eq i32 %conv, 47, !dbg !8697
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8699

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %linkname.addr, align 8, !dbg !8700, !tbaa !2442
  %call = call noalias i8* @xstrdup(i8* %3), !dbg !8701
  store i8* %call, i8** %retval, align 8, !dbg !8702
  br label %return, !dbg !8702

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !8703, metadata !DIExpression()), !dbg !8704
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8705, !tbaa !2442
  %call4 = call i64 @dir_len(i8* %4) #16, !dbg !8706
  store i64 %call4, i64* %prefix_len, align 8, !dbg !8704, !tbaa !2579
  %5 = load i64, i64* %prefix_len, align 8, !dbg !8707, !tbaa !2579
  %cmp5 = icmp eq i64 %5, 0, !dbg !8709
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !8710

if.then7:                                         ; preds = %if.end3
  %6 = load i8*, i8** %linkname.addr, align 8, !dbg !8711, !tbaa !2442
  %call8 = call noalias i8* @xstrdup(i8* %6), !dbg !8712
  store i8* %call8, i8** %retval, align 8, !dbg !8713
  br label %return, !dbg !8713

if.end9:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8714, metadata !DIExpression()), !dbg !8715
  %7 = load i64, i64* %prefix_len, align 8, !dbg !8716, !tbaa !2579
  %add = add i64 %7, 1, !dbg !8717
  %8 = load i8*, i8** %linkname.addr, align 8, !dbg !8718, !tbaa !2442
  %call10 = call i64 @strlen(i8* %8) #16, !dbg !8719
  %add11 = add i64 %add, %call10, !dbg !8720
  %add12 = add i64 %add11, 1, !dbg !8721
  %call13 = call noalias i8* @xmalloc(i64 %add12), !dbg !8722
  store i8* %call13, i8** %p, align 8, !dbg !8715, !tbaa !2442
  %9 = load i8*, i8** %name.addr, align 8, !dbg !8723, !tbaa !2442
  %10 = load i64, i64* %prefix_len, align 8, !dbg !8723, !tbaa !2579
  %sub = sub i64 %10, 1, !dbg !8723
  %arrayidx14 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !8723, !ctir !146
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !8723, !tbaa !2497
  %conv15 = sext i8 %11 to i32, !dbg !8723
  %cmp16 = icmp eq i32 %conv15, 47, !dbg !8723
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !8725

if.then18:                                        ; preds = %if.end9
  %12 = load i64, i64* %prefix_len, align 8, !dbg !8726, !tbaa !2579
  %inc = add i64 %12, 1, !dbg !8726
  store i64 %inc, i64* %prefix_len, align 8, !dbg !8726, !tbaa !2579
  br label %if.end19, !dbg !8726

if.end19:                                         ; preds = %if.then18, %if.end9
  %13 = load i8*, i8** %p, align 8, !dbg !8727, !tbaa !2442
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8728, !tbaa !2442
  %15 = load i64, i64* %prefix_len, align 8, !dbg !8729, !tbaa !2579
  %call20 = call i8* @stpncpy(i8* %13, i8* %14, i64 %15) #13, !dbg !8730
  %16 = load i8*, i8** %linkname.addr, align 8, !dbg !8731, !tbaa !2442
  %call21 = call i8* @stpcpy(i8* %call20, i8* %16) #13, !dbg !8732
  %17 = load i8*, i8** %p, align 8, !dbg !8733, !tbaa !2442
  store i8* %17, i8** %retval, align 8, !dbg !8734
  br label %return, !dbg !8734

return:                                           ; preds = %if.end19, %if.then7, %if.then2, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !8735
  ret i8* %18, !dbg !8735
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_width(i32 %u) #0 !dbg !8736 !ctir !690 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8739, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !8739
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8739

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8739

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %u.addr, align 4, !dbg !8740, !tbaa !2436
  %call = call i8* @getuser(i32 %1), !dbg !8741
  br label %cond.end, !dbg !8739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8739
  %2 = load i32, i32* %u.addr, align 4, !dbg !8742, !tbaa !2436
  %conv = zext i32 %2 to i64, !dbg !8742
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8743
  ret i32 %call1, !dbg !8744
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_group_width(i32 %g) #0 !dbg !8745 !ctir !695 {
entry:
  %g.addr = alloca i32, align 4
  store i32 %g, i32* %g.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  %0 = load i8, i8* @numeric_ids, align 1, !dbg !8748, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !8748
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8748

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8748

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %g.addr, align 4, !dbg !8749, !tbaa !2436
  %call = call i8* @getgroup(i32 %1), !dbg !8750
  br label %cond.end, !dbg !8748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %call, %cond.false ], !dbg !8748
  %2 = load i32, i32* %g.addr, align 4, !dbg !8751, !tbaa !2436
  %conv = zext i32 %2 to i64, !dbg !8751
  %call1 = call i32 @format_user_or_group_width(i8* %cond, i64 %conv), !dbg !8752
  ret i32 %call1, !dbg !8753
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @format_user_or_group_width(i8* %name, i64 %id) #0 !dbg !8754 !ctir !693 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %len = alloca i32, align 4, !ctir !27
  %buf = alloca [21 x i8], align 16, !ctir !669
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i64 %id, i64* %id.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8759, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8759
  br i1 %tobool, label %if.then, label %if.else, !dbg !8761

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8762, metadata !DIExpression()), !dbg !8764
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8765, !tbaa !2442
  %call = call i32 @gnu_mbswidth(i8* %1, i32 0), !dbg !8766
  store i32 %call, i32* %len, align 4, !dbg !8764, !tbaa !2436
  %2 = load i32, i32* %len, align 4, !dbg !8767, !tbaa !2436
  %cmp = icmp sgt i32 0, %2, !dbg !8767
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8767

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8767

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %len, align 4, !dbg !8767, !tbaa !2436
  br label %cond.end, !dbg !8767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !8767
  store i32 %cond, i32* %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [21 x i8]* %buf, metadata !8769, metadata !DIExpression()), !dbg !8771
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8772
  %4 = load i64, i64* %id.addr, align 8, !dbg !8773, !tbaa !2579
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.221, i64 0, i64 0), i64 %4) #13, !dbg !8774
  %arraydecay2 = getelementptr inbounds [21 x i8], [21 x i8]* %buf, i64 0, i64 0, !dbg !8775
  %call3 = call i64 @strlen(i8* %arraydecay2) #16, !dbg !8776
  %conv = trunc i64 %call3 to i32, !dbg !8776
  store i32 %conv, i32* %retval, align 4, !dbg !8777
  br label %return, !dbg !8777

return:                                           ; preds = %if.else, %cond.end
  %5 = load i32, i32* %retval, align 4, !dbg !8778
  ret i32 %5, !dbg !8778
}

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #0 !dbg !8779 !ctir !680 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8780, metadata !DIExpression()), !dbg !8781
  %0 = load i32, i32* %err.addr, align 4, !dbg !8782, !tbaa !2436
  %cmp = icmp eq i32 %0, 22, !dbg !8783
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8784

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !8785, !tbaa !2436
  %cmp1 = icmp eq i32 %1, 38, !dbg !8786
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8787

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* %err.addr, align 4, !dbg !8788, !tbaa !2436
  %call = call zeroext i1 @is_ENOTSUP(i32 %2), !dbg !8789
  br label %lor.end, !dbg !8787

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %3, !dbg !8790
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_capability(i8* %name) #0 !dbg !8791 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !143
  %has_cap = alloca i8, align 1, !ctir !141
  %cap_d = alloca %struct._cap_struct*, align 8, !ctir !676
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata i8** %result, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.declare(metadata i8* %has_cap, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata %struct._cap_struct** %cap_d, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8800, !tbaa !2442
  %call = call %struct._cap_struct* @cap_get_file(i8* %0), !dbg !8801
  store %struct._cap_struct* %call, %struct._cap_struct** %cap_d, align 8, !dbg !8799, !tbaa !2442
  %1 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8802, !tbaa !2442
  %cmp = icmp eq %struct._cap_struct* %1, null, !dbg !8804
  br i1 %cmp, label %if.then, label %if.end, !dbg !8805

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8806
  br label %return, !dbg !8806

if.end:                                           ; preds = %entry
  %2 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8807, !tbaa !2442
  %call1 = call i8* @cap_to_text(%struct._cap_struct* %2, i64* null), !dbg !8808
  store i8* %call1, i8** %result, align 8, !dbg !8809, !tbaa !2442
  %3 = load %struct._cap_struct*, %struct._cap_struct** %cap_d, align 8, !dbg !8810, !tbaa !2442
  %4 = bitcast %struct._cap_struct* %3 to i8*, !dbg !8810
  %call2 = call i32 @cap_free(i8* %4), !dbg !8811
  %5 = load i8*, i8** %result, align 8, !dbg !8812, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !8812
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8814

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8815
  br label %return, !dbg !8815

if.end4:                                          ; preds = %if.end
  %6 = load i8*, i8** %result, align 8, !dbg !8816, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !8817, !tbaa !2497, !ctir !144
  %tobool5 = icmp ne i8 %7, 0, !dbg !8818
  %lnot = xor i1 %tobool5, true, !dbg !8818
  %lnot6 = xor i1 %lnot, true, !dbg !8819
  %frombool = zext i1 %lnot6 to i8, !dbg !8820
  store i8 %frombool, i8* %has_cap, align 1, !dbg !8820, !tbaa !2461
  %8 = load i8*, i8** %result, align 8, !dbg !8821, !tbaa !2442
  %call7 = call i32 @cap_free(i8* %8), !dbg !8822
  %9 = load i8, i8* %has_cap, align 1, !dbg !8823, !tbaa !2461
  %tobool8 = trunc i8 %9 to i1, !dbg !8823
  store i1 %tobool8, i1* %retval, align 1, !dbg !8824
  br label %return, !dbg !8824

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !8825
  ret i1 %10, !dbg !8825
}

declare dso_local %struct._cap_struct* @cap_get_file(i8*) #3

declare dso_local i8* @cap_to_text(%struct._cap_struct*, i64*) #3

declare dso_local i32 @cap_free(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @known_term_type() #0 !dbg !8826 !ctir !602 {
entry:
  %retval = alloca i1, align 1
  %term = alloca i8*, align 8, !ctir !146
  %line = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %term, metadata !8827, metadata !DIExpression()), !dbg !8828
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !8829
  store i8* %call, i8** %term, align 8, !dbg !8828, !tbaa !2442
  %0 = load i8*, i8** %term, align 8, !dbg !8830, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !8830
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8832

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %term, align 8, !dbg !8833, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !8834, !tbaa !2497, !ctir !147
  %tobool1 = icmp ne i8 %2, 0, !dbg !8834
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8835

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !8836
  br label %return, !dbg !8836

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %line, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i8* getelementptr inbounds ([4292 x i8], [4292 x i8]* @G_line, i64 0, i64 0), i8** %line, align 8, !dbg !8838, !tbaa !2442
  br label %while.cond, !dbg !8839

while.cond:                                       ; preds = %if.end9, %if.end
  %3 = load i8*, i8** %line, align 8, !dbg !8840, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !8841
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4292 x i8]* @G_line to i64), !dbg !8841
  %cmp = icmp ult i64 %sub.ptr.sub, 4292, !dbg !8842
  br i1 %cmp, label %while.body, label %while.end, !dbg !8839

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %line, align 8, !dbg !8843, !tbaa !2442
  %call2 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), i64 5) #16, !dbg !8843
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8846
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !8847

if.then4:                                         ; preds = %while.body
  %5 = load i8*, i8** %line, align 8, !dbg !8848, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 5, !dbg !8851
  %6 = load i8*, i8** %term, align 8, !dbg !8852, !tbaa !2442
  %call5 = call i32 @fnmatch(i8* %add.ptr, i8* %6, i32 0), !dbg !8853
  %cmp6 = icmp eq i32 %call5, 0, !dbg !8854
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8855

if.then7:                                         ; preds = %if.then4
  store i1 true, i1* %retval, align 1, !dbg !8856
  br label %return, !dbg !8856

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !8857

if.end9:                                          ; preds = %if.end8, %while.body
  %7 = load i8*, i8** %line, align 8, !dbg !8858, !tbaa !2442
  %call10 = call i64 @strlen(i8* %7) #16, !dbg !8859
  %add = add i64 %call10, 1, !dbg !8860
  %8 = load i8*, i8** %line, align 8, !dbg !8861, !tbaa !2442
  %add.ptr11 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8861
  store i8* %add.ptr11, i8** %line, align 8, !dbg !8861, !tbaa !2442
  br label %while.cond, !dbg !8839, !llvm.loop !8862

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !8864
  br label %return, !dbg !8864

return:                                           ; preds = %while.end, %if.then7, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8865
  ret i1 %9, !dbg !8865
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @get_funky_string(i8** %dest, i8** %src, i1 zeroext %equals_end, i64* %output_count) #0 !dbg !138 !ctir !139 {
entry:
  %dest.addr = alloca i8**, align 8
  %src.addr = alloca i8**, align 8
  %equals_end.addr = alloca i8, align 1
  %output_count.addr = alloca i64*, align 8
  %num = alloca i8, align 1, !ctir !144
  %count = alloca i64, align 8, !ctir !149
  %state = alloca i32, align 4, !ctir !137
  %p = alloca i8*, align 8, !ctir !146
  %q = alloca i8*, align 8, !ctir !143
  store i8** %dest, i8*** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store i8** %src, i8*** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  %frombool = zext i1 %equals_end to i8
  store i8 %frombool, i8* %equals_end.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %equals_end.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store i64* %output_count, i64** %output_count.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %output_count.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata i8* %num, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8878, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8882, metadata !DIExpression()), !dbg !8883
  %0 = load i8**, i8*** %src.addr, align 8, !dbg !8884, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !8885, !tbaa !2442, !ctir !146
  store i8* %1, i8** %p, align 8, !dbg !8886, !tbaa !2442
  %2 = load i8**, i8*** %dest.addr, align 8, !dbg !8887, !tbaa !2442
  %3 = load i8*, i8** %2, align 8, !dbg !8888, !tbaa !2442, !ctir !143
  store i8* %3, i8** %q, align 8, !dbg !8889, !tbaa !2442
  store i64 0, i64* %count, align 8, !dbg !8890, !tbaa !2579
  store i8 0, i8* %num, align 1, !dbg !8891, !tbaa !2497
  store i32 0, i32* %state, align 4, !dbg !8892, !tbaa !2497
  br label %while.cond, !dbg !8893

while.cond:                                       ; preds = %sw.epilog106, %entry
  %4 = load i32, i32* %state, align 4, !dbg !8894, !tbaa !2497
  %cmp = icmp ult i32 %4, 5, !dbg !8895
  br i1 %cmp, label %while.body, label %while.end, !dbg !8893

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %state, align 4, !dbg !8896, !tbaa !2497
  switch i32 %5, label %sw.default105 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb34
    i32 3, label %sw.bb50
    i32 4, label %sw.bb82
  ], !dbg !8898

sw.bb:                                            ; preds = %while.body
  %6 = load i8*, i8** %p, align 8, !dbg !8899, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !8901, !tbaa !2497, !ctir !147
  %conv = sext i8 %7 to i32, !dbg !8901
  switch i32 %conv, label %sw.default [
    i32 58, label %sw.bb1
    i32 0, label %sw.bb1
    i32 92, label %sw.bb2
    i32 94, label %sw.bb3
    i32 61, label %sw.bb5
  ], !dbg !8902

sw.bb1:                                           ; preds = %sw.bb, %sw.bb
  store i32 5, i32* %state, align 4, !dbg !8903, !tbaa !2497
  br label %sw.epilog, !dbg !8905

sw.bb2:                                           ; preds = %sw.bb
  store i32 1, i32* %state, align 4, !dbg !8906, !tbaa !2497
  %8 = load i8*, i8** %p, align 8, !dbg !8907, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8907
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8907, !tbaa !2442
  br label %sw.epilog, !dbg !8908

sw.bb3:                                           ; preds = %sw.bb
  store i32 4, i32* %state, align 4, !dbg !8909, !tbaa !2497
  %9 = load i8*, i8** %p, align 8, !dbg !8910, !tbaa !2442
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8910
  store i8* %incdec.ptr4, i8** %p, align 8, !dbg !8910, !tbaa !2442
  br label %sw.epilog, !dbg !8911

sw.bb5:                                           ; preds = %sw.bb
  %10 = load i8, i8* %equals_end.addr, align 1, !dbg !8912, !tbaa !2461
  %tobool = trunc i8 %10 to i1, !dbg !8912
  br i1 %tobool, label %if.then, label %if.end, !dbg !8914

if.then:                                          ; preds = %sw.bb5
  store i32 5, i32* %state, align 4, !dbg !8915, !tbaa !2497
  br label %sw.epilog, !dbg !8917

if.end:                                           ; preds = %sw.bb5
  br label %sw.default, !dbg !8918

sw.default:                                       ; preds = %sw.bb, %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !8919, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8919
  store i8* %incdec.ptr6, i8** %p, align 8, !dbg !8919, !tbaa !2442
  %12 = load i8, i8* %11, align 1, !dbg !8920, !tbaa !2497, !ctir !147
  %13 = load i8*, i8** %q, align 8, !dbg !8921, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8921
  store i8* %incdec.ptr7, i8** %q, align 8, !dbg !8921, !tbaa !2442
  store i8 %12, i8* %13, align 1, !dbg !8922, !tbaa !2497, !ctir !144
  %14 = load i64, i64* %count, align 8, !dbg !8923, !tbaa !2579
  %inc = add i64 %14, 1, !dbg !8923
  store i64 %inc, i64* %count, align 8, !dbg !8923, !tbaa !2579
  br label %sw.epilog, !dbg !8924

sw.epilog:                                        ; preds = %sw.default, %if.then, %sw.bb3, %sw.bb2, %sw.bb1
  br label %sw.epilog106, !dbg !8925

sw.bb8:                                           ; preds = %while.body
  %15 = load i8*, i8** %p, align 8, !dbg !8926, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !8927, !tbaa !2497, !ctir !147
  %conv9 = sext i8 %16 to i32, !dbg !8927
  switch i32 %conv9, label %sw.default25 [
    i32 48, label %sw.bb10
    i32 49, label %sw.bb10
    i32 50, label %sw.bb10
    i32 51, label %sw.bb10
    i32 52, label %sw.bb10
    i32 53, label %sw.bb10
    i32 54, label %sw.bb10
    i32 55, label %sw.bb10
    i32 120, label %sw.bb13
    i32 88, label %sw.bb13
    i32 97, label %sw.bb14
    i32 98, label %sw.bb15
    i32 101, label %sw.bb16
    i32 102, label %sw.bb17
    i32 110, label %sw.bb18
    i32 114, label %sw.bb19
    i32 116, label %sw.bb20
    i32 118, label %sw.bb21
    i32 63, label %sw.bb22
    i32 95, label %sw.bb23
    i32 0, label %sw.bb24
  ], !dbg !8928

sw.bb10:                                          ; preds = %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8, %sw.bb8
  store i32 2, i32* %state, align 4, !dbg !8929, !tbaa !2497
  %17 = load i8*, i8** %p, align 8, !dbg !8931, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !8932, !tbaa !2497, !ctir !147
  %conv11 = sext i8 %18 to i32, !dbg !8932
  %sub = sub nsw i32 %conv11, 48, !dbg !8933
  %conv12 = trunc i32 %sub to i8, !dbg !8932
  store i8 %conv12, i8* %num, align 1, !dbg !8934, !tbaa !2497
  br label %sw.epilog26, !dbg !8935

sw.bb13:                                          ; preds = %sw.bb8, %sw.bb8
  store i32 3, i32* %state, align 4, !dbg !8936, !tbaa !2497
  store i8 0, i8* %num, align 1, !dbg !8937, !tbaa !2497
  br label %sw.epilog26, !dbg !8938

sw.bb14:                                          ; preds = %sw.bb8
  store i8 7, i8* %num, align 1, !dbg !8939, !tbaa !2497
  br label %sw.epilog26, !dbg !8940

sw.bb15:                                          ; preds = %sw.bb8
  store i8 8, i8* %num, align 1, !dbg !8941, !tbaa !2497
  br label %sw.epilog26, !dbg !8942

sw.bb16:                                          ; preds = %sw.bb8
  store i8 27, i8* %num, align 1, !dbg !8943, !tbaa !2497
  br label %sw.epilog26, !dbg !8944

sw.bb17:                                          ; preds = %sw.bb8
  store i8 12, i8* %num, align 1, !dbg !8945, !tbaa !2497
  br label %sw.epilog26, !dbg !8946

sw.bb18:                                          ; preds = %sw.bb8
  store i8 10, i8* %num, align 1, !dbg !8947, !tbaa !2497
  br label %sw.epilog26, !dbg !8948

sw.bb19:                                          ; preds = %sw.bb8
  store i8 13, i8* %num, align 1, !dbg !8949, !tbaa !2497
  br label %sw.epilog26, !dbg !8950

sw.bb20:                                          ; preds = %sw.bb8
  store i8 9, i8* %num, align 1, !dbg !8951, !tbaa !2497
  br label %sw.epilog26, !dbg !8952

sw.bb21:                                          ; preds = %sw.bb8
  store i8 11, i8* %num, align 1, !dbg !8953, !tbaa !2497
  br label %sw.epilog26, !dbg !8954

sw.bb22:                                          ; preds = %sw.bb8
  store i8 127, i8* %num, align 1, !dbg !8955, !tbaa !2497
  br label %sw.epilog26, !dbg !8956

sw.bb23:                                          ; preds = %sw.bb8
  store i8 32, i8* %num, align 1, !dbg !8957, !tbaa !2497
  br label %sw.epilog26, !dbg !8958

sw.bb24:                                          ; preds = %sw.bb8
  store i32 6, i32* %state, align 4, !dbg !8959, !tbaa !2497
  br label %sw.epilog26, !dbg !8960

sw.default25:                                     ; preds = %sw.bb8
  %19 = load i8*, i8** %p, align 8, !dbg !8961, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !8962, !tbaa !2497, !ctir !147
  store i8 %20, i8* %num, align 1, !dbg !8963, !tbaa !2497
  br label %sw.epilog26, !dbg !8964

sw.epilog26:                                      ; preds = %sw.default25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb10
  %21 = load i32, i32* %state, align 4, !dbg !8965, !tbaa !2497
  %cmp27 = icmp eq i32 %21, 1, !dbg !8967
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !8968

if.then29:                                        ; preds = %sw.epilog26
  %22 = load i8, i8* %num, align 1, !dbg !8969, !tbaa !2497
  %23 = load i8*, i8** %q, align 8, !dbg !8971, !tbaa !2442
  %incdec.ptr30 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8971
  store i8* %incdec.ptr30, i8** %q, align 8, !dbg !8971, !tbaa !2442
  store i8 %22, i8* %23, align 1, !dbg !8972, !tbaa !2497, !ctir !144
  %24 = load i64, i64* %count, align 8, !dbg !8973, !tbaa !2579
  %inc31 = add i64 %24, 1, !dbg !8973
  store i64 %inc31, i64* %count, align 8, !dbg !8973, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !8974, !tbaa !2497
  br label %if.end32, !dbg !8975

if.end32:                                         ; preds = %if.then29, %sw.epilog26
  %25 = load i8*, i8** %p, align 8, !dbg !8976, !tbaa !2442
  %incdec.ptr33 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !8976
  store i8* %incdec.ptr33, i8** %p, align 8, !dbg !8976, !tbaa !2442
  br label %sw.epilog106, !dbg !8977

sw.bb34:                                          ; preds = %while.body
  %26 = load i8*, i8** %p, align 8, !dbg !8978, !tbaa !2442
  %27 = load i8, i8* %26, align 1, !dbg !8980, !tbaa !2497, !ctir !147
  %conv35 = sext i8 %27 to i32, !dbg !8980
  %cmp36 = icmp slt i32 %conv35, 48, !dbg !8981
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !8982

lor.lhs.false:                                    ; preds = %sw.bb34
  %28 = load i8*, i8** %p, align 8, !dbg !8983, !tbaa !2442
  %29 = load i8, i8* %28, align 1, !dbg !8984, !tbaa !2497, !ctir !147
  %conv38 = sext i8 %29 to i32, !dbg !8984
  %cmp39 = icmp sgt i32 %conv38, 55, !dbg !8985
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !8986

if.then41:                                        ; preds = %lor.lhs.false, %sw.bb34
  %30 = load i8, i8* %num, align 1, !dbg !8987, !tbaa !2497
  %31 = load i8*, i8** %q, align 8, !dbg !8989, !tbaa !2442
  %incdec.ptr42 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !8989
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !8989, !tbaa !2442
  store i8 %30, i8* %31, align 1, !dbg !8990, !tbaa !2497, !ctir !144
  %32 = load i64, i64* %count, align 8, !dbg !8991, !tbaa !2579
  %inc43 = add i64 %32, 1, !dbg !8991
  store i64 %inc43, i64* %count, align 8, !dbg !8991, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !8992, !tbaa !2497
  br label %if.end49, !dbg !8993

if.else:                                          ; preds = %lor.lhs.false
  %33 = load i8, i8* %num, align 1, !dbg !8994, !tbaa !2497
  %conv44 = sext i8 %33 to i32, !dbg !8994
  %shl = shl i32 %conv44, 3, !dbg !8995
  %34 = load i8*, i8** %p, align 8, !dbg !8996, !tbaa !2442
  %incdec.ptr45 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !8996
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !8996, !tbaa !2442
  %35 = load i8, i8* %34, align 1, !dbg !8997, !tbaa !2497, !ctir !147
  %conv46 = sext i8 %35 to i32, !dbg !8997
  %sub47 = sub nsw i32 %conv46, 48, !dbg !8998
  %add = add nsw i32 %shl, %sub47, !dbg !8999
  %conv48 = trunc i32 %add to i8, !dbg !9000
  store i8 %conv48, i8* %num, align 1, !dbg !9001, !tbaa !2497
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then41
  br label %sw.epilog106, !dbg !9002

sw.bb50:                                          ; preds = %while.body
  %36 = load i8*, i8** %p, align 8, !dbg !9003, !tbaa !2442
  %37 = load i8, i8* %36, align 1, !dbg !9004, !tbaa !2497, !ctir !147
  %conv51 = sext i8 %37 to i32, !dbg !9004
  switch i32 %conv51, label %sw.default78 [
    i32 48, label %sw.bb52
    i32 49, label %sw.bb52
    i32 50, label %sw.bb52
    i32 51, label %sw.bb52
    i32 52, label %sw.bb52
    i32 53, label %sw.bb52
    i32 54, label %sw.bb52
    i32 55, label %sw.bb52
    i32 56, label %sw.bb52
    i32 57, label %sw.bb52
    i32 97, label %sw.bb60
    i32 98, label %sw.bb60
    i32 99, label %sw.bb60
    i32 100, label %sw.bb60
    i32 101, label %sw.bb60
    i32 102, label %sw.bb60
    i32 65, label %sw.bb69
    i32 66, label %sw.bb69
    i32 67, label %sw.bb69
    i32 68, label %sw.bb69
    i32 69, label %sw.bb69
    i32 70, label %sw.bb69
  ], !dbg !9005

sw.bb52:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %38 = load i8, i8* %num, align 1, !dbg !9006, !tbaa !2497
  %conv53 = sext i8 %38 to i32, !dbg !9006
  %shl54 = shl i32 %conv53, 4, !dbg !9008
  %39 = load i8*, i8** %p, align 8, !dbg !9009, !tbaa !2442
  %incdec.ptr55 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !9009
  store i8* %incdec.ptr55, i8** %p, align 8, !dbg !9009, !tbaa !2442
  %40 = load i8, i8* %39, align 1, !dbg !9010, !tbaa !2497, !ctir !147
  %conv56 = sext i8 %40 to i32, !dbg !9010
  %sub57 = sub nsw i32 %conv56, 48, !dbg !9011
  %add58 = add nsw i32 %shl54, %sub57, !dbg !9012
  %conv59 = trunc i32 %add58 to i8, !dbg !9013
  store i8 %conv59, i8* %num, align 1, !dbg !9014, !tbaa !2497
  br label %sw.epilog81, !dbg !9015

sw.bb60:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %41 = load i8, i8* %num, align 1, !dbg !9016, !tbaa !2497
  %conv61 = sext i8 %41 to i32, !dbg !9016
  %shl62 = shl i32 %conv61, 4, !dbg !9017
  %42 = load i8*, i8** %p, align 8, !dbg !9018, !tbaa !2442
  %incdec.ptr63 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !9018
  store i8* %incdec.ptr63, i8** %p, align 8, !dbg !9018, !tbaa !2442
  %43 = load i8, i8* %42, align 1, !dbg !9019, !tbaa !2497, !ctir !147
  %conv64 = sext i8 %43 to i32, !dbg !9019
  %sub65 = sub nsw i32 %conv64, 97, !dbg !9020
  %add66 = add nsw i32 %shl62, %sub65, !dbg !9021
  %add67 = add nsw i32 %add66, 10, !dbg !9022
  %conv68 = trunc i32 %add67 to i8, !dbg !9023
  store i8 %conv68, i8* %num, align 1, !dbg !9024, !tbaa !2497
  br label %sw.epilog81, !dbg !9025

sw.bb69:                                          ; preds = %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50, %sw.bb50
  %44 = load i8, i8* %num, align 1, !dbg !9026, !tbaa !2497
  %conv70 = sext i8 %44 to i32, !dbg !9026
  %shl71 = shl i32 %conv70, 4, !dbg !9027
  %45 = load i8*, i8** %p, align 8, !dbg !9028, !tbaa !2442
  %incdec.ptr72 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !9028
  store i8* %incdec.ptr72, i8** %p, align 8, !dbg !9028, !tbaa !2442
  %46 = load i8, i8* %45, align 1, !dbg !9029, !tbaa !2497, !ctir !147
  %conv73 = sext i8 %46 to i32, !dbg !9029
  %sub74 = sub nsw i32 %conv73, 65, !dbg !9030
  %add75 = add nsw i32 %shl71, %sub74, !dbg !9031
  %add76 = add nsw i32 %add75, 10, !dbg !9032
  %conv77 = trunc i32 %add76 to i8, !dbg !9033
  store i8 %conv77, i8* %num, align 1, !dbg !9034, !tbaa !2497
  br label %sw.epilog81, !dbg !9035

sw.default78:                                     ; preds = %sw.bb50
  %47 = load i8, i8* %num, align 1, !dbg !9036, !tbaa !2497
  %48 = load i8*, i8** %q, align 8, !dbg !9037, !tbaa !2442
  %incdec.ptr79 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !9037
  store i8* %incdec.ptr79, i8** %q, align 8, !dbg !9037, !tbaa !2442
  store i8 %47, i8* %48, align 1, !dbg !9038, !tbaa !2497, !ctir !144
  %49 = load i64, i64* %count, align 8, !dbg !9039, !tbaa !2579
  %inc80 = add i64 %49, 1, !dbg !9039
  store i64 %inc80, i64* %count, align 8, !dbg !9039, !tbaa !2579
  store i32 0, i32* %state, align 4, !dbg !9040, !tbaa !2497
  br label %sw.epilog81, !dbg !9041

sw.epilog81:                                      ; preds = %sw.default78, %sw.bb69, %sw.bb60, %sw.bb52
  br label %sw.epilog106, !dbg !9042

sw.bb82:                                          ; preds = %while.body
  store i32 0, i32* %state, align 4, !dbg !9043, !tbaa !2497
  %50 = load i8*, i8** %p, align 8, !dbg !9044, !tbaa !2442
  %51 = load i8, i8* %50, align 1, !dbg !9046, !tbaa !2497, !ctir !147
  %conv83 = sext i8 %51 to i32, !dbg !9046
  %cmp84 = icmp sge i32 %conv83, 64, !dbg !9047
  br i1 %cmp84, label %land.lhs.true, label %if.else95, !dbg !9048

land.lhs.true:                                    ; preds = %sw.bb82
  %52 = load i8*, i8** %p, align 8, !dbg !9049, !tbaa !2442
  %53 = load i8, i8* %52, align 1, !dbg !9050, !tbaa !2497, !ctir !147
  %conv86 = sext i8 %53 to i32, !dbg !9050
  %cmp87 = icmp sle i32 %conv86, 126, !dbg !9051
  br i1 %cmp87, label %if.then89, label %if.else95, !dbg !9052

if.then89:                                        ; preds = %land.lhs.true
  %54 = load i8*, i8** %p, align 8, !dbg !9053, !tbaa !2442
  %incdec.ptr90 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !9053
  store i8* %incdec.ptr90, i8** %p, align 8, !dbg !9053, !tbaa !2442
  %55 = load i8, i8* %54, align 1, !dbg !9055, !tbaa !2497, !ctir !147
  %conv91 = sext i8 %55 to i32, !dbg !9055
  %and = and i32 %conv91, 31, !dbg !9056
  %conv92 = trunc i32 %and to i8, !dbg !9055
  %56 = load i8*, i8** %q, align 8, !dbg !9057, !tbaa !2442
  %incdec.ptr93 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !9057
  store i8* %incdec.ptr93, i8** %q, align 8, !dbg !9057, !tbaa !2442
  store i8 %conv92, i8* %56, align 1, !dbg !9058, !tbaa !2497, !ctir !144
  %57 = load i64, i64* %count, align 8, !dbg !9059, !tbaa !2579
  %inc94 = add i64 %57, 1, !dbg !9059
  store i64 %inc94, i64* %count, align 8, !dbg !9059, !tbaa !2579
  br label %if.end104, !dbg !9060

if.else95:                                        ; preds = %land.lhs.true, %sw.bb82
  %58 = load i8*, i8** %p, align 8, !dbg !9061, !tbaa !2442
  %59 = load i8, i8* %58, align 1, !dbg !9063, !tbaa !2497, !ctir !147
  %conv96 = sext i8 %59 to i32, !dbg !9063
  %cmp97 = icmp eq i32 %conv96, 63, !dbg !9064
  br i1 %cmp97, label %if.then99, label %if.else102, !dbg !9065

if.then99:                                        ; preds = %if.else95
  %60 = load i8*, i8** %q, align 8, !dbg !9066, !tbaa !2442
  %incdec.ptr100 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !9066
  store i8* %incdec.ptr100, i8** %q, align 8, !dbg !9066, !tbaa !2442
  store i8 127, i8* %60, align 1, !dbg !9068, !tbaa !2497, !ctir !144
  %61 = load i64, i64* %count, align 8, !dbg !9069, !tbaa !2579
  %inc101 = add i64 %61, 1, !dbg !9069
  store i64 %inc101, i64* %count, align 8, !dbg !9069, !tbaa !2579
  br label %if.end103, !dbg !9070

if.else102:                                       ; preds = %if.else95
  store i32 6, i32* %state, align 4, !dbg !9071, !tbaa !2497
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %sw.epilog106, !dbg !9072

sw.default105:                                    ; preds = %while.body
  call void @abort() #15, !dbg !9073
  unreachable, !dbg !9073

sw.epilog106:                                     ; preds = %if.end104, %sw.epilog81, %if.end49, %if.end32, %sw.epilog
  br label %while.cond, !dbg !8893, !llvm.loop !9074

while.end:                                        ; preds = %while.cond
  %62 = load i8*, i8** %q, align 8, !dbg !9076, !tbaa !2442
  %63 = load i8**, i8*** %dest.addr, align 8, !dbg !9077, !tbaa !2442
  store i8* %62, i8** %63, align 8, !dbg !9078, !tbaa !2442, !ctir !143
  %64 = load i8*, i8** %p, align 8, !dbg !9079, !tbaa !2442
  %65 = load i8**, i8*** %src.addr, align 8, !dbg !9080, !tbaa !2442
  store i8* %64, i8** %65, align 8, !dbg !9081, !tbaa !2442, !ctir !146
  %66 = load i64, i64* %count, align 8, !dbg !9082, !tbaa !2579
  %67 = load i64*, i64** %output_count.addr, align 8, !dbg !9083, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !9084, !tbaa !2579, !ctir !149
  %68 = load i32, i32* %state, align 4, !dbg !9085, !tbaa !2497
  %cmp107 = icmp ne i32 %68, 6, !dbg !9086
  ret i1 %cmp107, !dbg !9087
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @getenv_quoting_style() #0 !dbg !9088 !ctir !341 {
entry:
  %q_style = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q_style, metadata !9089, metadata !DIExpression()), !dbg !9090
  %call = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !9091
  store i8* %call, i8** %q_style, align 8, !dbg !9090, !tbaa !2442
  %0 = load i8*, i8** %q_style, align 8, !dbg !9092, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !9092
  br i1 %tobool, label %if.then, label %if.end6, !dbg !9094

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9095, metadata !DIExpression()), !dbg !9097
  %1 = load i8*, i8** %q_style, align 8, !dbg !9098, !tbaa !2442
  %call1 = call i64 @argmatch(i8* %1, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @quoting_style_args, i64 0, i64 0), i8* bitcast ([10 x i32]* @quoting_style_vals to i8*), i64 4) #16, !dbg !9098
  %conv = trunc i64 %call1 to i32, !dbg !9098
  store i32 %conv, i32* %i, align 4, !dbg !9097, !tbaa !2436
  %2 = load i32, i32* %i, align 4, !dbg !9099, !tbaa !2436
  %cmp = icmp sle i32 0, %2, !dbg !9101
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9102

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %i, align 4, !dbg !9103, !tbaa !2436
  %idxprom = sext i32 %3 to i64, !dbg !9104
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([10 x i32]* @quoting_style_vals to [0 x i32]*), i64 0, i64 %idxprom, !dbg !9104, !ctir !558
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9104, !tbaa !2497
  call void @set_quoting_style(%struct.quoting_options* null, i32 %4), !dbg !9105
  br label %if.end, !dbg !9105

if.else:                                          ; preds = %if.then
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !9106
  %5 = load i8*, i8** %q_style, align 8, !dbg !9107, !tbaa !2442
  %call5 = call i8* @quote(i8* %5), !dbg !9108
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call4, i8* %call5), !dbg !9109
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6, !dbg !9110

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !9111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_line_length(i8* %spec) #0 !dbg !9112 !ctir !568 {
entry:
  %retval = alloca i1, align 1
  %spec.addr = alloca i8*, align 8
  %val = alloca i64, align 8, !ctir !168
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i64* %val, metadata !9115, metadata !DIExpression()), !dbg !9116
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !9117, !tbaa !2442
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 0, i64* %val, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !9118
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !9119

sw.bb:                                            ; preds = %entry
  %1 = load i64, i64* %val, align 8, !dbg !9120, !tbaa !2579
  %cmp = icmp ult i64 %1, -1, !dbg !9120
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9120

cond.true:                                        ; preds = %sw.bb
  %2 = load i64, i64* %val, align 8, !dbg !9120, !tbaa !2579
  br label %cond.end, !dbg !9120

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !9120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !9120
  store i64 %cond, i64* @line_length, align 8, !dbg !9122, !tbaa !2579
  store i1 true, i1* %retval, align 1, !dbg !9123
  br label %return, !dbg !9123

sw.bb1:                                           ; preds = %entry
  store i64 -1, i64* @line_length, align 8, !dbg !9124, !tbaa !2579
  store i1 true, i1* %retval, align 1, !dbg !9125
  br label %return, !dbg !9125

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9126
  br label %return, !dbg !9126

return:                                           ; preds = %sw.default, %sw.bb1, %cond.end
  %3 = load i1, i1* %retval, align 1, !dbg !9127
  ret i1 %3, !dbg !9127
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_ignore_pattern(i8* %pattern) #0 !dbg !9128 !ctir !570 {
entry:
  %pattern.addr = alloca i8*, align 8
  %ignore = alloca %struct.ignore_pattern*, align 8, !ctir !511
  store i8* %pattern, i8** %pattern.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  call void @llvm.dbg.declare(metadata %struct.ignore_pattern** %ignore, metadata !9131, metadata !DIExpression()), !dbg !9132
  %call = call noalias i8* @xmalloc(i64 16), !dbg !9133
  %0 = bitcast i8* %call to %struct.ignore_pattern*, !dbg !9133
  store %struct.ignore_pattern* %0, %struct.ignore_pattern** %ignore, align 8, !dbg !9134, !tbaa !2442
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !9135, !tbaa !2442
  %2 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9136, !tbaa !2442
  %pattern1 = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %2, i32 0, i32 0, !dbg !9137, !ctir !512
  store i8* %1, i8** %pattern1, align 8, !dbg !9138, !tbaa !3052, !ctir !146
  %3 = load %struct.ignore_pattern*, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9139, !tbaa !2442
  %4 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9140, !tbaa !2442
  %next = getelementptr inbounds %struct.ignore_pattern, %struct.ignore_pattern* %4, i32 0, i32 1, !dbg !9141, !ctir !512
  store %struct.ignore_pattern* %3, %struct.ignore_pattern** %next, align 8, !dbg !9142, !tbaa !3058, !ctir !511
  %5 = load %struct.ignore_pattern*, %struct.ignore_pattern** %ignore, align 8, !dbg !9143, !tbaa !2442
  store %struct.ignore_pattern* %5, %struct.ignore_pattern** @ignore_patterns, align 8, !dbg !9144, !tbaa !2442
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bad_cast(i8* %s) #0 !dbg !9146 !ctir !572 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9149, !tbaa !2442
  ret i8* %0, !dbg !9150
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #10 !dbg !9151 !ctir !174 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load i32, i32* %status.addr, align 4, !dbg !9154, !tbaa !2436
  %cmp = icmp ne i32 %0, 0, !dbg !9156
  br i1 %cmp, label %if.then, label %if.else, !dbg !9157

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9158

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9159, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !9159
  %2 = load i8*, i8** @program_name, align 8, !dbg !9159, !tbaa !2442
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !9159
  br label %do.end, !dbg !9159

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !9159

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !9161
  %3 = load i8*, i8** @program_name, align 8, !dbg !9163, !tbaa !2442
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3), !dbg !9164
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !9165
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9165, !tbaa !2442
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %4), !dbg !9165
  call void @emit_mandatory_arg_note(), !dbg !9166
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !9167
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9167, !tbaa !2442
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %5), !dbg !9167
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !9168
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9168, !tbaa !2442
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %6), !dbg !9168
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([362 x i8], [362 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !9169
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9169, !tbaa !2442
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %7), !dbg !9169
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([367 x i8], [367 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !9170
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9170, !tbaa !2442
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %8), !dbg !9170
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([419 x i8], [419 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !9171
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9171, !tbaa !2442
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %9), !dbg !9171
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !9172
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9172, !tbaa !2442
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %10), !dbg !9172
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([245 x i8], [245 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !9173
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9173, !tbaa !2442
  %call19 = call i32 @fputs_unlocked(i8* %call18, %struct._IO_FILE* %11), !dbg !9173
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !9174
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9174, !tbaa !2442
  %call21 = call i32 @fputs_unlocked(i8* %call20, %struct._IO_FILE* %12), !dbg !9174
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !9175
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9175, !tbaa !2442
  %call23 = call i32 @fputs_unlocked(i8* %call22, %struct._IO_FILE* %13), !dbg !9175
  %call24 = call i8* @gettext(i8* getelementptr inbounds ([422 x i8], [422 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !9176
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9176, !tbaa !2442
  %call25 = call i32 @fputs_unlocked(i8* %call24, %struct._IO_FILE* %14), !dbg !9176
  %call26 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !9177
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9177, !tbaa !2442
  %call27 = call i32 @fputs_unlocked(i8* %call26, %struct._IO_FILE* %15), !dbg !9177
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([354 x i8], [354 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !9178
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9178, !tbaa !2442
  %call29 = call i32 @fputs_unlocked(i8* %call28, %struct._IO_FILE* %16), !dbg !9178
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !9179
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9179, !tbaa !2442
  %call31 = call i32 @fputs_unlocked(i8* %call30, %struct._IO_FILE* %17), !dbg !9179
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([359 x i8], [359 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !9180
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9180, !tbaa !2442
  %call33 = call i32 @fputs_unlocked(i8* %call32, %struct._IO_FILE* %18), !dbg !9180
  %call34 = call i8* @gettext(i8* getelementptr inbounds ([303 x i8], [303 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !9181
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9181, !tbaa !2442
  %call35 = call i32 @fputs_unlocked(i8* %call34, %struct._IO_FILE* %19), !dbg !9181
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([585 x i8], [585 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !9182
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9182, !tbaa !2442
  %call37 = call i32 @fputs_unlocked(i8* %call36, %struct._IO_FILE* %20), !dbg !9182
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([197 x i8], [197 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !9183
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9183, !tbaa !2442
  %call39 = call i32 @fputs_unlocked(i8* %call38, %struct._IO_FILE* %21), !dbg !9183
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([519 x i8], [519 x i8]* @.str.32, i64 0, i64 0)) #13, !dbg !9184
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9184, !tbaa !2442
  %call41 = call i32 @fputs_unlocked(i8* %call40, %struct._IO_FILE* %22), !dbg !9184
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.33, i64 0, i64 0)) #13, !dbg !9185
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9185, !tbaa !2442
  %call43 = call i32 @fputs_unlocked(i8* %call42, %struct._IO_FILE* %23), !dbg !9185
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !9186
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9186, !tbaa !2442
  %call45 = call i32 @fputs_unlocked(i8* %call44, %struct._IO_FILE* %24), !dbg !9186
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([372 x i8], [372 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !9187
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9187, !tbaa !2442
  %call47 = call i32 @fputs_unlocked(i8* %call46, %struct._IO_FILE* %25), !dbg !9187
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([363 x i8], [363 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !9188
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9188, !tbaa !2442
  %call49 = call i32 @fputs_unlocked(i8* %call48, %struct._IO_FILE* %26), !dbg !9188
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !9189
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9189, !tbaa !2442
  %call51 = call i32 @fputs_unlocked(i8* %call50, %struct._IO_FILE* %27), !dbg !9189
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !9190
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9190, !tbaa !2442
  %call53 = call i32 @fputs_unlocked(i8* %call52, %struct._IO_FILE* %28), !dbg !9190
  call void @emit_size_note(), !dbg !9191
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([376 x i8], [376 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !9192
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9192, !tbaa !2442
  %call55 = call i32 @fputs_unlocked(i8* %call54, %struct._IO_FILE* %29), !dbg !9192
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([286 x i8], [286 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !9193
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9193, !tbaa !2442
  %call57 = call i32 @fputs_unlocked(i8* %call56, %struct._IO_FILE* %30), !dbg !9193
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !9194
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9194, !tbaa !2442
  %call59 = call i32 @fputs_unlocked(i8* %call58, %struct._IO_FILE* %31), !dbg !9194
  %32 = load i32, i32* @ls_mode, align 4, !dbg !9195, !tbaa !2436
  %cmp60 = icmp eq i32 %32, 1, !dbg !9195
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !9195

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !9195

cond.false:                                       ; preds = %if.else
  %33 = load i32, i32* @ls_mode, align 4, !dbg !9195, !tbaa !2436
  %cmp61 = icmp eq i32 %33, 2, !dbg !9195
  %34 = zext i1 %cmp61 to i64, !dbg !9195
  %cond = select i1 %cmp61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), !dbg !9195
  br label %cond.end, !dbg !9195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond62 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), %cond.true ], [ %cond, %cond.false ], !dbg !9195
  call void @emit_ancillary_info(i8* %cond62), !dbg !9196
  br label %if.end

if.end:                                           ; preds = %cond.end, %do.end
  %35 = load i32, i32* %status.addr, align 4, !dbg !9197, !tbaa !2436
  call void @exit(i32 %35) #15, !dbg !9198
  unreachable, !dbg !9198
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i8* @dcgettext(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @abformat_init() #0 !dbg !9199 !ctir !341 {
entry:
  %pb = alloca [2 x i8*], align 16, !ctir !561
  %recent = alloca i32, align 4, !ctir !27
  %abmon = alloca [12 x [128 x i8]], align 16, !ctir !574
  %recent9 = alloca i32, align 4, !ctir !27
  %fmt = alloca i8*, align 8, !ctir !146
  %i = alloca i32, align 4, !ctir !27
  %nfmt = alloca i8*, align 8, !ctir !143
  %nbytes = alloca i32, align 4, !ctir !27
  %prefix_len = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata [2 x i8*]* %pb, metadata !9200, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !9202, metadata !DIExpression()), !dbg !9204
  store i32 0, i32* %recent, align 4, !dbg !9204, !tbaa !2436
  br label %for.cond, !dbg !9205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %recent, align 4, !dbg !9206, !tbaa !2436
  %cmp = icmp slt i32 %0, 2, !dbg !9208
  br i1 %cmp, label %for.body, label %for.end, !dbg !9209

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %recent, align 4, !dbg !9210, !tbaa !2436
  %idxprom = sext i32 %1 to i64, !dbg !9211
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom, !dbg !9211, !ctir !561
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9211, !tbaa !2442
  %call = call i8* @first_percent_b(i8* %2) #16, !dbg !9212
  %3 = load i32, i32* %recent, align 4, !dbg !9213, !tbaa !2436
  %idxprom1 = sext i32 %3 to i64, !dbg !9214
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom1, !dbg !9214, !ctir !561
  store i8* %call, i8** %arrayidx2, align 8, !dbg !9215, !tbaa !2442
  br label %for.inc, !dbg !9214

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %recent, align 4, !dbg !9216, !tbaa !2436
  %inc = add nsw i32 %4, 1, !dbg !9216
  store i32 %inc, i32* %recent, align 4, !dbg !9216, !tbaa !2436
  br label %for.cond, !dbg !9217, !llvm.loop !9218

for.end:                                          ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 0, !dbg !9220, !ctir !561
  %5 = load i8*, i8** %arrayidx3, align 16, !dbg !9220, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !9220
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !9222

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 1, !dbg !9223, !ctir !561
  %6 = load i8*, i8** %arrayidx4, align 8, !dbg !9223, !tbaa !2442
  %tobool5 = icmp ne i8* %6, null, !dbg !9223
  br i1 %tobool5, label %if.end, label %if.then, !dbg !9224

if.then:                                          ; preds = %lor.lhs.false
  br label %return, !dbg !9225

if.end:                                           ; preds = %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata [12 x [128 x i8]]* %abmon, metadata !9226, metadata !DIExpression()), !dbg !9227
  %arraydecay = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 0, !dbg !9228
  %call6 = call zeroext i1 @abmon_init([128 x i8]* %arraydecay), !dbg !9230
  br i1 %call6, label %if.end8, label %if.then7, !dbg !9231

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !9232

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %recent9, metadata !9233, metadata !DIExpression()), !dbg !9235
  store i32 0, i32* %recent9, align 4, !dbg !9235, !tbaa !2436
  br label %for.cond10, !dbg !9236

for.cond10:                                       ; preds = %for.inc54, %if.end8
  %7 = load i32, i32* %recent9, align 4, !dbg !9237, !tbaa !2436
  %cmp11 = icmp slt i32 %7, 2, !dbg !9239
  br i1 %cmp11, label %for.body12, label %for.end56, !dbg !9240

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9241, metadata !DIExpression()), !dbg !9243
  %8 = load i32, i32* %recent9, align 4, !dbg !9244, !tbaa !2436
  %idxprom13 = sext i32 %8 to i64, !dbg !9245
  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* @long_time_format, i64 0, i64 %idxprom13, !dbg !9245, !ctir !561
  %9 = load i8*, i8** %arrayidx14, align 8, !dbg !9245, !tbaa !2442
  store i8* %9, i8** %fmt, align 8, !dbg !9243, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9246, metadata !DIExpression()), !dbg !9248
  store i32 0, i32* %i, align 4, !dbg !9248, !tbaa !2436
  br label %for.cond15, !dbg !9249

for.cond15:                                       ; preds = %for.inc51, %for.body12
  %10 = load i32, i32* %i, align 4, !dbg !9250, !tbaa !2436
  %cmp16 = icmp slt i32 %10, 12, !dbg !9252
  br i1 %cmp16, label %for.body17, label %for.end53, !dbg !9253

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i8** %nfmt, metadata !9254, metadata !DIExpression()), !dbg !9256
  %11 = load i32, i32* %recent9, align 4, !dbg !9257, !tbaa !2436
  %idxprom18 = sext i32 %11 to i64, !dbg !9258
  %arrayidx19 = getelementptr inbounds [2 x [12 x [128 x i8]]], [2 x [12 x [128 x i8]]]* @abformat, i64 0, i64 %idxprom18, !dbg !9258, !ctir !577
  %12 = load i32, i32* %i, align 4, !dbg !9259, !tbaa !2436
  %idxprom20 = sext i32 %12 to i64, !dbg !9258
  %arrayidx21 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %arrayidx19, i64 0, i64 %idxprom20, !dbg !9258, !ctir !574
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx21, i64 0, i64 0, !dbg !9258
  store i8* %arraydecay22, i8** %nfmt, align 8, !dbg !9256, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !9260, metadata !DIExpression()), !dbg !9261
  %13 = load i32, i32* %recent9, align 4, !dbg !9262, !tbaa !2436
  %idxprom23 = sext i32 %13 to i64, !dbg !9264
  %arrayidx24 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom23, !dbg !9264, !ctir !561
  %14 = load i8*, i8** %arrayidx24, align 8, !dbg !9264, !tbaa !2442
  %tobool25 = icmp ne i8* %14, null, !dbg !9264
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !9265

if.then26:                                        ; preds = %for.body17
  %15 = load i8*, i8** %nfmt, align 8, !dbg !9266, !tbaa !2442
  %16 = load i8*, i8** %fmt, align 8, !dbg !9267, !tbaa !2442
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i64 0, i64 0), i8* %16) #13, !dbg !9268
  store i32 %call27, i32* %nbytes, align 4, !dbg !9269, !tbaa !2436
  br label %if.end44, !dbg !9270

if.else:                                          ; preds = %for.body17
  %17 = load i32, i32* %recent9, align 4, !dbg !9271, !tbaa !2436
  %idxprom28 = sext i32 %17 to i64, !dbg !9274
  %arrayidx29 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom28, !dbg !9274, !ctir !561
  %18 = load i8*, i8** %arrayidx29, align 8, !dbg !9274, !tbaa !2442
  %19 = load i8*, i8** %fmt, align 8, !dbg !9275, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9276
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !9276
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9276
  %cmp30 = icmp sle i64 %sub.ptr.sub, 128, !dbg !9277
  br i1 %cmp30, label %if.end32, label %if.then31, !dbg !9278

if.then31:                                        ; preds = %if.else
  br label %return, !dbg !9279

if.end32:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %prefix_len, metadata !9280, metadata !DIExpression()), !dbg !9281
  %20 = load i32, i32* %recent9, align 4, !dbg !9282, !tbaa !2436
  %idxprom33 = sext i32 %20 to i64, !dbg !9283
  %arrayidx34 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom33, !dbg !9283, !ctir !561
  %21 = load i8*, i8** %arrayidx34, align 8, !dbg !9283, !tbaa !2442
  %22 = load i8*, i8** %fmt, align 8, !dbg !9284, !tbaa !2442
  %sub.ptr.lhs.cast35 = ptrtoint i8* %21 to i64, !dbg !9285
  %sub.ptr.rhs.cast36 = ptrtoint i8* %22 to i64, !dbg !9285
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !9285
  %conv = trunc i64 %sub.ptr.sub37 to i32, !dbg !9283
  store i32 %conv, i32* %prefix_len, align 4, !dbg !9281, !tbaa !2436
  %23 = load i8*, i8** %nfmt, align 8, !dbg !9286, !tbaa !2442
  %24 = load i32, i32* %prefix_len, align 4, !dbg !9287, !tbaa !2436
  %25 = load i8*, i8** %fmt, align 8, !dbg !9288, !tbaa !2442
  %26 = load i32, i32* %i, align 4, !dbg !9289, !tbaa !2436
  %idxprom38 = sext i32 %26 to i64, !dbg !9290
  %arrayidx39 = getelementptr inbounds [12 x [128 x i8]], [12 x [128 x i8]]* %abmon, i64 0, i64 %idxprom38, !dbg !9290, !ctir !574
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx39, i64 0, i64 0, !dbg !9290
  %27 = load i32, i32* %recent9, align 4, !dbg !9291, !tbaa !2436
  %idxprom41 = sext i32 %27 to i64, !dbg !9292
  %arrayidx42 = getelementptr inbounds [2 x i8*], [2 x i8*]* %pb, i64 0, i64 %idxprom41, !dbg !9292, !ctir !561
  %28 = load i8*, i8** %arrayidx42, align 8, !dbg !9292, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 2, !dbg !9293
  %call43 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i64 0, i64 0), i32 %24, i8* %25, i8* %arraydecay40, i8* %add.ptr) #13, !dbg !9294
  store i32 %call43, i32* %nbytes, align 4, !dbg !9295, !tbaa !2436
  br label %if.end44

if.end44:                                         ; preds = %if.end32, %if.then26
  %29 = load i32, i32* %nbytes, align 4, !dbg !9296, !tbaa !2436
  %cmp45 = icmp sle i32 0, %29, !dbg !9298
  br i1 %cmp45, label %land.lhs.true, label %if.then49, !dbg !9299

land.lhs.true:                                    ; preds = %if.end44
  %30 = load i32, i32* %nbytes, align 4, !dbg !9300, !tbaa !2436
  %cmp47 = icmp slt i32 %30, 128, !dbg !9301
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !9302

if.then49:                                        ; preds = %land.lhs.true, %if.end44
  br label %return, !dbg !9303

if.end50:                                         ; preds = %land.lhs.true
  br label %for.inc51, !dbg !9304

for.inc51:                                        ; preds = %if.end50
  %31 = load i32, i32* %i, align 4, !dbg !9305, !tbaa !2436
  %inc52 = add nsw i32 %31, 1, !dbg !9305
  store i32 %inc52, i32* %i, align 4, !dbg !9305, !tbaa !2436
  br label %for.cond15, !dbg !9306, !llvm.loop !9307

for.end53:                                        ; preds = %for.cond15
  br label %for.inc54, !dbg !9309

for.inc54:                                        ; preds = %for.end53
  %32 = load i32, i32* %recent9, align 4, !dbg !9310, !tbaa !2436
  %inc55 = add nsw i32 %32, 1, !dbg !9310
  store i32 %inc55, i32* %recent9, align 4, !dbg !9310, !tbaa !2436
  br label %for.cond10, !dbg !9311, !llvm.loop !9312

for.end56:                                        ; preds = %for.cond10
  store i8 1, i8* @use_abformat, align 1, !dbg !9314, !tbaa !2461
  br label %return, !dbg !9315

return:                                           ; preds = %for.end56, %if.then49, %if.then31, %if.then7, %if.then
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i8* @first_percent_b(i8* %fmt) #9 !dbg !9316 !ctir !579 {
entry:
  %retval = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  br label %for.cond, !dbg !9319

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !9320, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !9323, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %1, 0, !dbg !9324
  br i1 %tobool, label %for.body, label %for.end, !dbg !9324

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !9325, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !9325, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9325, !tbaa !2497
  %conv = sext i8 %3 to i32, !dbg !9325
  %cmp = icmp eq i32 %conv, 37, !dbg !9327
  br i1 %cmp, label %if.then, label %if.end, !dbg !9328

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !9329, !tbaa !2442
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !9329, !ctir !146
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !9329, !tbaa !2497
  %conv3 = sext i8 %5 to i32, !dbg !9329
  switch i32 %conv3, label %sw.epilog [
    i32 98, label %sw.bb
    i32 37, label %sw.bb4
  ], !dbg !9330

sw.bb:                                            ; preds = %if.then
  %6 = load i8*, i8** %fmt.addr, align 8, !dbg !9331, !tbaa !2442
  store i8* %6, i8** %retval, align 8, !dbg !9333
  br label %return, !dbg !9333

sw.bb4:                                           ; preds = %if.then
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !9334, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9334
  store i8* %incdec.ptr, i8** %fmt.addr, align 8, !dbg !9334, !tbaa !2442
  br label %sw.epilog, !dbg !9335

sw.epilog:                                        ; preds = %if.then, %sw.bb4
  br label %if.end, !dbg !9336

if.end:                                           ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !9337

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %fmt.addr, align 8, !dbg !9338, !tbaa !2442
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9338
  store i8* %incdec.ptr5, i8** %fmt.addr, align 8, !dbg !9338, !tbaa !2442
  br label %for.cond, !dbg !9339, !llvm.loop !9340

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9342
  br label %return, !dbg !9342

return:                                           ; preds = %for.end, %sw.bb
  %9 = load i8*, i8** %retval, align 8, !dbg !9343
  ret i8* %9, !dbg !9343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abmon_init([128 x i8]* %abmon) #0 !dbg !9344 !ctir !581 {
entry:
  %retval = alloca i1, align 1
  %abmon.addr = alloca [128 x i8]*, align 8
  %required_mon_width = alloca i64, align 8, !ctir !149
  %curr_max_width = alloca i64, align 8, !ctir !149
  %i = alloca i32, align 4, !ctir !27
  %width = alloca i64, align 8, !ctir !149
  %abbr = alloca i8*, align 8, !ctir !146
  %alignment = alloca i32, align 4, !ctir !586
  %req = alloca i64, align 8, !ctir !149
  store [128 x i8]* %abmon, [128 x i8]** %abmon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata [128 x i8]** %abmon.addr, metadata !9345, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.declare(metadata i64* %required_mon_width, metadata !9347, metadata !DIExpression()), !dbg !9348
  store i64 12, i64* %required_mon_width, align 8, !dbg !9348, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %curr_max_width, metadata !9349, metadata !DIExpression()), !dbg !9350
  br label %do.body, !dbg !9351

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i64, i64* %required_mon_width, align 8, !dbg !9352, !tbaa !2579
  store i64 %0, i64* %curr_max_width, align 8, !dbg !9354, !tbaa !2579
  store i64 0, i64* %required_mon_width, align 8, !dbg !9355, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9356, metadata !DIExpression()), !dbg !9358
  store i32 0, i32* %i, align 4, !dbg !9358, !tbaa !2436
  br label %for.cond, !dbg !9359

for.cond:                                         ; preds = %for.inc, %do.body
  %1 = load i32, i32* %i, align 4, !dbg !9360, !tbaa !2436
  %cmp = icmp slt i32 %1, 12, !dbg !9362
  br i1 %cmp, label %for.body, label %for.end, !dbg !9363

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %width, metadata !9364, metadata !DIExpression()), !dbg !9366
  %2 = load i64, i64* %curr_max_width, align 8, !dbg !9367, !tbaa !2579
  store i64 %2, i64* %width, align 8, !dbg !9366, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %abbr, metadata !9368, metadata !DIExpression()), !dbg !9369
  %3 = load i32, i32* %i, align 4, !dbg !9370, !tbaa !2436
  %add = add nsw i32 131086, %3, !dbg !9371
  %call = call i8* @nl_langinfo(i32 %add) #13, !dbg !9372
  store i8* %call, i8** %abbr, align 8, !dbg !9369, !tbaa !2442
  %4 = load i8*, i8** %abbr, align 8, !dbg !9373, !tbaa !2442
  %call1 = call i8* @strchr(i8* %4, i32 37) #16, !dbg !9375
  %tobool = icmp ne i8* %call1, null, !dbg !9375
  br i1 %tobool, label %if.then, label %if.end, !dbg !9376

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !9377
  br label %return, !dbg !9377

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %alignment, metadata !9378, metadata !DIExpression()), !dbg !9379
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !9380
  %5 = load i16*, i16** %call2, align 8, !dbg !9380, !tbaa !2442, !ctir !587
  %6 = load i8*, i8** %abbr, align 8, !dbg !9380, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !9380, !tbaa !2497, !ctir !147
  %call3 = call zeroext i8 @to_uchar(i8 signext %7), !dbg !9380
  %conv = zext i8 %call3 to i32, !dbg !9380
  %idxprom = sext i32 %conv to i64, !dbg !9380
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !9380, !ctir !587
  %8 = load i16, i16* %arrayidx, align 2, !dbg !9380, !tbaa !5835
  %conv4 = zext i16 %8 to i32, !dbg !9380
  %and = and i32 %conv4, 2048, !dbg !9380
  %tobool5 = icmp ne i32 %and, 0, !dbg !9380
  %9 = zext i1 %tobool5 to i64, !dbg !9380
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !9380
  store i32 %cond, i32* %alignment, align 4, !dbg !9379, !tbaa !2497
  call void @llvm.dbg.declare(metadata i64* %req, metadata !9381, metadata !DIExpression()), !dbg !9382
  %10 = load i8*, i8** %abbr, align 8, !dbg !9383, !tbaa !2442
  %11 = load [128 x i8]*, [128 x i8]** %abmon.addr, align 8, !dbg !9384, !tbaa !2442
  %12 = load i32, i32* %i, align 4, !dbg !9385, !tbaa !2436
  %idxprom6 = sext i32 %12 to i64, !dbg !9384
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 %idxprom6, !dbg !9384, !ctir !583
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %arrayidx7, i64 0, i64 0, !dbg !9384
  %13 = load i32, i32* %alignment, align 4, !dbg !9386, !tbaa !2497
  %call8 = call i64 @mbsalign(i8* %10, i8* %arraydecay, i64 128, i64* %width, i32 %13, i32 0), !dbg !9387
  store i64 %call8, i64* %req, align 8, !dbg !9382, !tbaa !2579
  %14 = load i64, i64* %req, align 8, !dbg !9388, !tbaa !2579
  %cmp9 = icmp ult i64 %14, 128, !dbg !9390
  br i1 %cmp9, label %if.end12, label %if.then11, !dbg !9391

if.then11:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9392
  br label %return, !dbg !9392

if.end12:                                         ; preds = %if.end
  %15 = load i64, i64* %required_mon_width, align 8, !dbg !9393, !tbaa !2579
  %16 = load i64, i64* %width, align 8, !dbg !9393, !tbaa !2579
  %cmp13 = icmp ugt i64 %15, %16, !dbg !9393
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !9393

cond.true:                                        ; preds = %if.end12
  %17 = load i64, i64* %required_mon_width, align 8, !dbg !9393, !tbaa !2579
  br label %cond.end, !dbg !9393

cond.false:                                       ; preds = %if.end12
  %18 = load i64, i64* %width, align 8, !dbg !9393, !tbaa !2579
  br label %cond.end, !dbg !9393

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i64 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !9393
  store i64 %cond15, i64* %required_mon_width, align 8, !dbg !9394, !tbaa !2579
  br label %for.inc, !dbg !9395

for.inc:                                          ; preds = %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !9396, !tbaa !2436
  %inc = add nsw i32 %19, 1, !dbg !9396
  store i32 %inc, i32* %i, align 4, !dbg !9396, !tbaa !2436
  br label %for.cond, !dbg !9397, !llvm.loop !9398

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !9400

do.cond:                                          ; preds = %for.end
  %20 = load i64, i64* %curr_max_width, align 8, !dbg !9401, !tbaa !2579
  %21 = load i64, i64* %required_mon_width, align 8, !dbg !9402, !tbaa !2579
  %cmp16 = icmp ugt i64 %20, %21, !dbg !9403
  br i1 %cmp16, label %do.body, label %do.end, !dbg !9400, !llvm.loop !9404

do.end:                                           ; preds = %do.cond
  store i1 true, i1* %retval, align 1, !dbg !9406
  br label %return, !dbg !9406

return:                                           ; preds = %do.end, %if.then11, %if.then
  %22 = load i1, i1* %retval, align 1, !dbg !9407
  ret i1 %22, !dbg !9407
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #0 !dbg !9408 !ctir !341 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.231, i64 0, i64 0)) #13, !dbg !9409
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9409, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9409
  ret void, !dbg !9410
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_size_note() #0 !dbg !9411 !ctir !341 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.232, i64 0, i64 0)) #13, !dbg !9412
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9412, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9412
  ret void, !dbg !9413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #0 !dbg !811 !ctir !570 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !807
  %node = alloca i8*, align 8, !ctir !146
  %map_prog = alloca %struct.infomap*, align 8, !ctir !815
  %lc_messages = alloca i8*, align 8, !ctir !146
  store i8* %program, i8** %program.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !9416, metadata !DIExpression()), !dbg !9417
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !9417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !9417
  call void @llvm.dbg.declare(metadata i8** %node, metadata !9418, metadata !DIExpression()), !dbg !9419
  %1 = load i8*, i8** %program.addr, align 8, !dbg !9420, !tbaa !2442
  store i8* %1, i8** %node, align 8, !dbg !9419, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !9421, metadata !DIExpression()), !dbg !9422
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !9423
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !9422, !tbaa !2442
  br label %while.cond, !dbg !9424

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9425, !tbaa !2442
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !9426, !ctir !808
  %3 = load i8*, i8** %program1, align 8, !dbg !9426, !tbaa !9427, !ctir !146
  %tobool = icmp ne i8* %3, null, !dbg !9425
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9429

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !9430, !tbaa !2442
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9430, !tbaa !2442
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !9430, !ctir !808
  %6 = load i8*, i8** %program2, align 8, !dbg !9430, !tbaa !9427, !ctir !146
  %call = call i32 @strcmp(i8* %4, i8* %6) #16, !dbg !9430
  %cmp = icmp eq i32 %call, 0, !dbg !9430
  %lnot = xor i1 %cmp, true, !dbg !9431
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !9432
  br i1 %7, label %while.body, label %while.end, !dbg !9424

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9433, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !9433
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !9433, !tbaa !2442
  br label %while.cond, !dbg !9424, !llvm.loop !9434

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9435, !tbaa !2442
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !9437, !ctir !808
  %10 = load i8*, i8** %node3, align 8, !dbg !9437, !tbaa !9438, !ctir !146
  %tobool4 = icmp ne i8* %10, null, !dbg !9435
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9439

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !9440, !tbaa !2442
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !9441, !ctir !808
  %12 = load i8*, i8** %node5, align 8, !dbg !9441, !tbaa !9438, !ctir !146
  store i8* %12, i8** %node, align 8, !dbg !9442, !tbaa !2442
  br label %if.end, !dbg !9443

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i64 0, i64 0)) #13, !dbg !9444
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0)), !dbg !9445
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !9446, metadata !DIExpression()), !dbg !9447
  %call8 = call i8* @setlocale(i32 5, i8* null) #13, !dbg !9448
  store i8* %call8, i8** %lc_messages, align 8, !dbg !9447, !tbaa !2442
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !9449, !tbaa !2442
  %tobool9 = icmp ne i8* %13, null, !dbg !9449
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !9451

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !9452, !tbaa !2442
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.243, i64 0, i64 0), i64 3) #16, !dbg !9452
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9452
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !9453

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.244, i64 0, i64 0)) #13, !dbg !9454
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9454, !tbaa !2442
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !9454
  br label %if.end15, !dbg !9456

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)) #13, !dbg !9457
  %16 = load i8*, i8** %program.addr, align 8, !dbg !9458, !tbaa !2442
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.242, i64 0, i64 0), i8* %16), !dbg !9459
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.246, i64 0, i64 0)) #13, !dbg !9460
  %17 = load i8*, i8** %node, align 8, !dbg !9461, !tbaa !2442
  %18 = load i8*, i8** %node, align 8, !dbg !9462, !tbaa !2442
  %19 = load i8*, i8** %program.addr, align 8, !dbg !9463, !tbaa !2442
  %cmp19 = icmp eq i8* %18, %19, !dbg !9464
  %20 = zext i1 %cmp19 to i64, !dbg !9462
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !9462
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !9465
  ret void, !dbg !9466
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #0 !dbg !9467 !ctir !1483 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !149
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !149
  %initial_limit = alloca i64, align 8, !ctir !149
  %buf_size = alloca i64, align 8, !ctir !149
  %r = alloca i64, align 8, !ctir !1650
  %link_length = alloca i64, align 8, !ctir !149
  %buffer = alloca i8*, align 8, !ctir !143
  %saved_errno = alloca i32, align 4, !ctir !27
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9473, metadata !DIExpression()), !dbg !9474
  store i64 1024, i64* %symlink_max, align 8, !dbg !9474, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9475, metadata !DIExpression()), !dbg !9476
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9476, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9477, metadata !DIExpression()), !dbg !9478
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9479, !tbaa !2579
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9480, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !9481
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9479

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9482, !tbaa !2579
  %add = add i64 %2, 1, !dbg !9483
  br label %cond.end, !dbg !9479

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9484, !tbaa !2579
  br label %cond.end, !dbg !9479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9479
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9478, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9485, metadata !DIExpression()), !dbg !9486
  %4 = load i64, i64* %size.addr, align 8, !dbg !9487, !tbaa !2579
  %5 = load i64, i64* %initial_limit, align 8, !dbg !9488, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !9489
  br i1 %cmp1, label %cond.true2, label %cond.false4, !dbg !9487

cond.true2:                                       ; preds = %cond.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !9490, !tbaa !2579
  %add3 = add i64 %6, 1, !dbg !9491
  br label %cond.end5, !dbg !9487

cond.false4:                                      ; preds = %cond.end
  %7 = load i64, i64* %initial_limit, align 8, !dbg !9492, !tbaa !2579
  br label %cond.end5, !dbg !9487

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi i64 [ %add3, %cond.true2 ], [ %7, %cond.false4 ], !dbg !9487
  store i64 %cond6, i64* %buf_size, align 8, !dbg !9486, !tbaa !2579
  br label %while.body, !dbg !9493

while.body:                                       ; preds = %cond.end5, %if.end26
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9494, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9499, metadata !DIExpression()), !dbg !9500
  %8 = load i64, i64* %buf_size, align 8, !dbg !9501, !tbaa !2579
  %call = call noalias i8* @malloc(i64 %8) #13, !dbg !9502
  store i8* %call, i8** %buffer, align 8, !dbg !9500, !tbaa !2442
  %9 = load i8*, i8** %buffer, align 8, !dbg !9503, !tbaa !2442
  %cmp7 = icmp eq i8* %9, null, !dbg !9505
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9506

if.then:                                          ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !9507
  br label %return, !dbg !9507

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %file.addr, align 8, !dbg !9508, !tbaa !2442
  %11 = load i8*, i8** %buffer, align 8, !dbg !9509, !tbaa !2442
  %12 = load i64, i64* %buf_size, align 8, !dbg !9510, !tbaa !2579
  %call8 = call i64 @readlink(i8* %10, i8* %11, i64 %12) #13, !dbg !9511
  store i64 %call8, i64* %r, align 8, !dbg !9512, !tbaa !2579
  %13 = load i64, i64* %r, align 8, !dbg !9513, !tbaa !2579
  store i64 %13, i64* %link_length, align 8, !dbg !9514, !tbaa !2579
  %14 = load i64, i64* %r, align 8, !dbg !9515, !tbaa !2579
  %cmp9 = icmp slt i64 %14, 0, !dbg !9517
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !9518

land.lhs.true:                                    ; preds = %if.end
  %call10 = call i32* @__errno_location() #17, !dbg !9519
  %15 = load i32, i32* %call10, align 4, !dbg !9519, !tbaa !2436, !ctir !27
  %cmp11 = icmp ne i32 %15, 34, !dbg !9520
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !9521

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9522, metadata !DIExpression()), !dbg !9524
  %call13 = call i32* @__errno_location() #17, !dbg !9525
  %16 = load i32, i32* %call13, align 4, !dbg !9525, !tbaa !2436, !ctir !27
  store i32 %16, i32* %saved_errno, align 4, !dbg !9524, !tbaa !2436
  %17 = load i8*, i8** %buffer, align 8, !dbg !9526, !tbaa !2442
  call void @free(i8* %17) #13, !dbg !9527
  %18 = load i32, i32* %saved_errno, align 4, !dbg !9528, !tbaa !2436
  %call14 = call i32* @__errno_location() #17, !dbg !9529
  store i32 %18, i32* %call14, align 4, !dbg !9530, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9531
  br label %return, !dbg !9531

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %19 = load i64, i64* %link_length, align 8, !dbg !9532, !tbaa !2579
  %20 = load i64, i64* %buf_size, align 8, !dbg !9534, !tbaa !2579
  %cmp16 = icmp ult i64 %19, %20, !dbg !9535
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9536

if.then17:                                        ; preds = %if.end15
  %21 = load i8*, i8** %buffer, align 8, !dbg !9537, !tbaa !2442
  %22 = load i64, i64* %link_length, align 8, !dbg !9539, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !9537, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !9540, !tbaa !2497
  %23 = load i8*, i8** %buffer, align 8, !dbg !9541, !tbaa !2442
  store i8* %23, i8** %retval, align 8, !dbg !9542
  br label %return, !dbg !9542

if.end18:                                         ; preds = %if.end15
  %24 = load i8*, i8** %buffer, align 8, !dbg !9543, !tbaa !2442
  call void @free(i8* %24) #13, !dbg !9544
  %25 = load i64, i64* %buf_size, align 8, !dbg !9545, !tbaa !2579
  %cmp19 = icmp ule i64 %25, 4611686018427387903, !dbg !9547
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !9548

if.then20:                                        ; preds = %if.end18
  %26 = load i64, i64* %buf_size, align 8, !dbg !9549, !tbaa !2579
  %mul = mul i64 %26, 2, !dbg !9549
  store i64 %mul, i64* %buf_size, align 8, !dbg !9549, !tbaa !2579
  br label %if.end26, !dbg !9550

if.else:                                          ; preds = %if.end18
  %27 = load i64, i64* %buf_size, align 8, !dbg !9551, !tbaa !2579
  %cmp21 = icmp ult i64 %27, 9223372036854775807, !dbg !9553
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !9554

if.then22:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9555, !tbaa !2579
  br label %if.end25, !dbg !9556

if.else23:                                        ; preds = %if.else
  %call24 = call i32* @__errno_location() #17, !dbg !9557
  store i32 12, i32* %call24, align 4, !dbg !9559, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !9560
  br label %return, !dbg !9560

if.end25:                                         ; preds = %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then20
  br label %while.body, !dbg !9493, !llvm.loop !9561

return:                                           ; preds = %if.else23, %if.then17, %if.then12, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !9563
  ret i8* %28, !dbg !9563
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #0 !dbg !9564 !ctir !341 {
entry:
  call void @usage(i32 1), !dbg !9565
  ret void, !dbg !9566
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9567 !ctir !1052 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %arglen = alloca i64, align 8, !ctir !149
  %matchind = alloca i64, align 8, !ctir !564
  %ambiguous = alloca i8, align 1, !ctir !141
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9576, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !9580, metadata !DIExpression()), !dbg !9581
  store i64 -1, i64* %matchind, align 8, !dbg !9581, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !9582, metadata !DIExpression()), !dbg !9583
  store i8 0, i8* %ambiguous, align 1, !dbg !9583, !tbaa !2461
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9584, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !9585
  store i64 %call, i64* %arglen, align 8, !dbg !9586, !tbaa !2579
  store i64 0, i64* %i, align 8, !dbg !9587, !tbaa !2579
  br label %for.cond, !dbg !9589

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9590, !tbaa !2442
  %2 = load i64, i64* %i, align 8, !dbg !9592, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9590, !ctir !567
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9590, !tbaa !2442
  %tobool = icmp ne i8* %3, null, !dbg !9593
  br i1 %tobool, label %for.body, label %for.end, !dbg !9593

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !9594, !tbaa !2442
  %5 = load i64, i64* %i, align 8, !dbg !9597, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !9594, !ctir !567
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !9594, !tbaa !2442
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9598, !tbaa !2442
  %8 = load i64, i64* %arglen, align 8, !dbg !9599, !tbaa !2579
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #16, !dbg !9600
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9600
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !9601

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9602, !tbaa !2442
  %10 = load i64, i64* %i, align 8, !dbg !9605, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !9602, !ctir !567
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !9602, !tbaa !2442
  %call5 = call i64 @strlen(i8* %11) #16, !dbg !9606
  %12 = load i64, i64* %arglen, align 8, !dbg !9607, !tbaa !2579
  %cmp = icmp eq i64 %call5, %12, !dbg !9608
  br i1 %cmp, label %if.then6, label %if.else, !dbg !9609

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !9610, !tbaa !2579
  store i64 %13, i64* %retval, align 8, !dbg !9611
  br label %return, !dbg !9611

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !9612, !tbaa !2579
  %cmp7 = icmp eq i64 %14, -1, !dbg !9614
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9615

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !9616, !tbaa !2579
  store i64 %15, i64* %matchind, align 8, !dbg !9617, !tbaa !2579
  br label %if.end16, !dbg !9618

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !9619, !tbaa !2442
  %cmp10 = icmp eq i8* %16, null, !dbg !9622
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !9623

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !9624, !tbaa !2442
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !9625, !tbaa !2579
  %19 = load i64, i64* %matchind, align 8, !dbg !9626, !tbaa !2579
  %mul = mul i64 %18, %19, !dbg !9627
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !9628
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !9629, !tbaa !2442
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !9630, !tbaa !2579
  %22 = load i64, i64* %i, align 8, !dbg !9631, !tbaa !2579
  %mul11 = mul i64 %21, %22, !dbg !9632
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !9633
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !9634, !tbaa !2579
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #16, !dbg !9635
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9635
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !9636

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !9637, !tbaa !2461
  br label %if.end, !dbg !9639

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !9640

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !9641

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !9642, !tbaa !2579
  %inc = add i64 %24, 1, !dbg !9642
  store i64 %inc, i64* %i, align 8, !dbg !9642, !tbaa !2579
  br label %for.cond, !dbg !9643, !llvm.loop !9644

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !9646, !tbaa !2461
  %tobool19 = trunc i8 %25 to i1, !dbg !9646
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !9648

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !9649
  br label %return, !dbg !9649

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !9650, !tbaa !2579
  store i64 %26, i64* %retval, align 8, !dbg !9651
  br label %return, !dbg !9651

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !9652
  ret i64 %27, !dbg !9652
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #0 !dbg !9653 !ctir !1054 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !146
  store i8* %context, i8** %context.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9654, metadata !DIExpression()), !dbg !9655
  store i8* %value, i8** %value.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9656, metadata !DIExpression()), !dbg !9657
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.declare(metadata i8** %format, metadata !9660, metadata !DIExpression()), !dbg !9661
  %0 = load i64, i64* %problem.addr, align 8, !dbg !9662, !tbaa !2579
  %cmp = icmp eq i64 %0, -1, !dbg !9663
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9662

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.257, i64 0, i64 0)) #13, !dbg !9664
  br label %cond.end, !dbg !9662

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.258, i64 0, i64 0)) #13, !dbg !9665
  br label %cond.end, !dbg !9662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !9662
  store i8* %cond, i8** %format, align 8, !dbg !9661, !tbaa !2442
  %1 = load i8*, i8** %format, align 8, !dbg !9666, !tbaa !2442
  %2 = load i8*, i8** %value.addr, align 8, !dbg !9667, !tbaa !2442
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !9668
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9669, !tbaa !2442
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !9670
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !9671
  ret void, !dbg !9672
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #0 !dbg !9673 !ctir !1056 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  %last_val = alloca i8*, align 8, !ctir !146
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9674, metadata !DIExpression()), !dbg !9675
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9676, metadata !DIExpression()), !dbg !9677
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9678, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9680, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i8* null, i8** %last_val, align 8, !dbg !9683, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.259, i64 0, i64 0)) #13, !dbg !9684
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9684, !tbaa !2442
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !9684
  store i64 0, i64* %i, align 8, !dbg !9685, !tbaa !2579
  br label %for.cond, !dbg !9687

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9688, !tbaa !2442
  %2 = load i64, i64* %i, align 8, !dbg !9690, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !9688, !ctir !567
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !9688, !tbaa !2442
  %tobool = icmp ne i8* %3, null, !dbg !9691
  br i1 %tobool, label %for.body, label %for.end, !dbg !9691

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !9692, !tbaa !2579
  %cmp = icmp eq i64 %4, 0, !dbg !9694
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9695

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !9696, !tbaa !2442
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !9697, !tbaa !2442
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9698, !tbaa !2579
  %8 = load i64, i64* %i, align 8, !dbg !9699, !tbaa !2579
  %mul = mul i64 %7, %8, !dbg !9700
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !9701
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !9702, !tbaa !2579
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #16, !dbg !9703
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9703
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9704

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9705, !tbaa !2442
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !9707, !tbaa !2442
  %12 = load i64, i64* %i, align 8, !dbg !9708, !tbaa !2579
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !9707, !ctir !567
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !9707, !tbaa !2442
  %call5 = call i8* @quote(i8* %13), !dbg !9709
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.260, i64 0, i64 0), i8* %call5), !dbg !9710
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !9711, !tbaa !2442
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !9712, !tbaa !2579
  %16 = load i64, i64* %i, align 8, !dbg !9713, !tbaa !2579
  %mul7 = mul i64 %15, %16, !dbg !9714
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !9715
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !9716, !tbaa !2442
  br label %if.end, !dbg !9717

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9718, !tbaa !2442
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !9720, !tbaa !2442
  %19 = load i64, i64* %i, align 8, !dbg !9721, !tbaa !2579
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !9720, !ctir !567
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !9720, !tbaa !2442
  %call10 = call i8* @quote(i8* %20), !dbg !9722
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.261, i64 0, i64 0), i8* %call10), !dbg !9723
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9724

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !9725, !tbaa !2579
  %inc = add i64 %21, 1, !dbg !9725
  store i64 %inc, i64* %i, align 8, !dbg !9725, !tbaa !2579
  br label %for.cond, !dbg !9726, !llvm.loop !9727

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9729, !tbaa !2442
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !9729
  ret void, !dbg !9730
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #0 !dbg !9731 !ctir !1092 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !564
  store i8* %context, i8** %context.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9736, metadata !DIExpression()), !dbg !9737
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.declare(metadata i64* %res, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9746, !tbaa !2442
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !9747, !tbaa !2442
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !9748, !tbaa !2442
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !9749, !tbaa !2579
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #16, !dbg !9750
  store i64 %call, i64* %res, align 8, !dbg !9745, !tbaa !2579
  %4 = load i64, i64* %res, align 8, !dbg !9751, !tbaa !2579
  %cmp = icmp sge i64 %4, 0, !dbg !9753
  br i1 %cmp, label %if.then, label %if.end, !dbg !9754

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !9755, !tbaa !2579
  store i64 %5, i64* %retval, align 8, !dbg !9756
  br label %return, !dbg !9756

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !9757, !tbaa !2442
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !9758, !tbaa !2442
  %8 = load i64, i64* %res, align 8, !dbg !9759, !tbaa !2579
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !9760
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !9761, !tbaa !2442
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !9762, !tbaa !2442
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !9763, !tbaa !2579
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !9764
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !9765, !tbaa !2442
  call void %12(), !dbg !9766
  store i64 -1, i64* %retval, align 8, !dbg !9767
  br label %return, !dbg !9767

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !9768
  ret i64 %13, !dbg !9768
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !9769 !ctir !1094 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !149
  store i8* %value, i8** %value.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9770, metadata !DIExpression()), !dbg !9771
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !9772, metadata !DIExpression()), !dbg !9773
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9778, metadata !DIExpression()), !dbg !9779
  store i64 0, i64* %i, align 8, !dbg !9780, !tbaa !2579
  br label %for.cond, !dbg !9782

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !9783, !tbaa !2442
  %1 = load i64, i64* %i, align 8, !dbg !9785, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !9783, !ctir !567
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !9783, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !9786
  br i1 %tobool, label %for.body, label %for.end, !dbg !9786

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !9787, !tbaa !2442
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !9789, !tbaa !2442
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !9790, !tbaa !2579
  %6 = load i64, i64* %i, align 8, !dbg !9791, !tbaa !2579
  %mul = mul i64 %5, %6, !dbg !9792
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !9793
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !9794, !tbaa !2579
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #16, !dbg !9795
  %tobool1 = icmp ne i32 %call, 0, !dbg !9795
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9796

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !9797, !tbaa !2442
  %9 = load i64, i64* %i, align 8, !dbg !9798, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !9797, !ctir !567
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !9797, !tbaa !2442
  store i8* %10, i8** %retval, align 8, !dbg !9799
  br label %return, !dbg !9799

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9800

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !9801, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !9801
  store i64 %inc, i64* %i, align 8, !dbg !9801, !tbaa !2579
  br label %for.cond, !dbg !9802, !llvm.loop !9803

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9805
  br label %return, !dbg !9805

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !9806
  ret i8* %12, !dbg !9806
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #0 !dbg !9807 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  %0 = load i32, i32* %c.addr, align 4, !dbg !9811, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9812

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9813
  br label %return, !dbg !9813

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9815
  br label %return, !dbg !9815

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9816
  ret i1 %1, !dbg !9816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #0 !dbg !9817 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  %0 = load i32, i32* %c.addr, align 4, !dbg !9820, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9821

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9822
  br label %return, !dbg !9822

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9824
  br label %return, !dbg !9824

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9825
  ret i1 %1, !dbg !9825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #0 !dbg !9826 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  %0 = load i32, i32* %c.addr, align 4, !dbg !9829, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9830

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9831
  br label %return, !dbg !9831

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9833
  br label %return, !dbg !9833

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9834
  ret i1 %1, !dbg !9834
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #0 !dbg !9835 !ctir !680 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  %0 = load i32, i32* %c.addr, align 4, !dbg !9838, !tbaa !2436
  %cmp = icmp eq i32 %0, 32, !dbg !9839
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9840

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9841, !tbaa !2436
  %cmp1 = icmp eq i32 %1, 9, !dbg !9842
  br label %lor.end, !dbg !9840

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !9843
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #0 !dbg !9844 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9845, metadata !DIExpression()), !dbg !9846
  %0 = load i32, i32* %c.addr, align 4, !dbg !9847, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !9848

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9849
  br label %return, !dbg !9849

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9851
  br label %return, !dbg !9851

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9852
  ret i1 %1, !dbg !9852
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #0 !dbg !9853 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  %0 = load i32, i32* %c.addr, align 4, !dbg !9856, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !9857

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9858
  br label %return, !dbg !9858

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9860
  br label %return, !dbg !9860

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9861
  ret i1 %1, !dbg !9861
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #0 !dbg !9862 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  %0 = load i32, i32* %c.addr, align 4, !dbg !9865, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9866

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9867
  br label %return, !dbg !9867

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9869
  br label %return, !dbg !9869

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9870
  ret i1 %1, !dbg !9870
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #0 !dbg !9871 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  %0 = load i32, i32* %c.addr, align 4, !dbg !9874, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9875

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9876
  br label %return, !dbg !9876

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9878
  br label %return, !dbg !9878

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9879
  ret i1 %1, !dbg !9879
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #0 !dbg !9880 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  %0 = load i32, i32* %c.addr, align 4, !dbg !9883, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9884

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9885
  br label %return, !dbg !9885

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9887
  br label %return, !dbg !9887

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9888
  ret i1 %1, !dbg !9888
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #0 !dbg !9889 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  %0 = load i32, i32* %c.addr, align 4, !dbg !9892, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !9893

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9894
  br label %return, !dbg !9894

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9896
  br label %return, !dbg !9896

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9897
  ret i1 %1, !dbg !9897
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #0 !dbg !9898 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  %0 = load i32, i32* %c.addr, align 4, !dbg !9901, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !9902

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9903
  br label %return, !dbg !9903

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9905
  br label %return, !dbg !9905

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9906
  ret i1 %1, !dbg !9906
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #0 !dbg !9907 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  %0 = load i32, i32* %c.addr, align 4, !dbg !9910, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9911

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9912
  br label %return, !dbg !9912

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9914
  br label %return, !dbg !9914

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9915
  ret i1 %1, !dbg !9915
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #0 !dbg !9916 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  %0 = load i32, i32* %c.addr, align 4, !dbg !9919, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !9920

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !9921
  br label %return, !dbg !9921

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9923
  br label %return, !dbg !9923

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !9924
  ret i1 %1, !dbg !9924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #0 !dbg !9925 !ctir !1655 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  %0 = load i32, i32* %c.addr, align 4, !dbg !9928, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !9929

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9930, !tbaa !2436
  %sub = sub nsw i32 %1, 65, !dbg !9932
  %add = add nsw i32 %sub, 97, !dbg !9933
  store i32 %add, i32* %retval, align 4, !dbg !9934
  br label %return, !dbg !9934

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9935, !tbaa !2436
  store i32 %2, i32* %retval, align 4, !dbg !9936
  br label %return, !dbg !9936

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9937
  ret i32 %3, !dbg !9937
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #0 !dbg !9938 !ctir !1655 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9939, metadata !DIExpression()), !dbg !9940
  %0 = load i32, i32* %c.addr, align 4, !dbg !9941, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !9942

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !9943, !tbaa !2436
  %sub = sub nsw i32 %1, 97, !dbg !9945
  %add = add nsw i32 %sub, 65, !dbg !9946
  store i32 %add, i32* %retval, align 4, !dbg !9947
  br label %return, !dbg !9947

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !9948, !tbaa !2436
  store i32 %2, i32* %retval, align 4, !dbg !9949
  br label %return, !dbg !9949

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !9950
  ret i32 %3, !dbg !9950
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strncasecmp(i8* %s1, i8* %s2, i64 %n) #9 !dbg !9951 !ctir !1662 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %p1 = alloca i8*, align 8, !ctir !1660
  %p2 = alloca i8*, align 8, !ctir !1660
  %c1 = alloca i8, align 1, !ctir !591
  %c2 = alloca i8, align 1, !ctir !591
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !9953, metadata !DIExpression()), !dbg !9954
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !9959, metadata !DIExpression()), !dbg !9960
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !9961, !tbaa !2442
  store i8* %0, i8** %p1, align 8, !dbg !9960, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !9962, metadata !DIExpression()), !dbg !9963
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !9964, !tbaa !2442
  store i8* %1, i8** %p2, align 8, !dbg !9963, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !9967, metadata !DIExpression()), !dbg !9968
  %2 = load i8*, i8** %p1, align 8, !dbg !9969, !tbaa !2442
  %3 = load i8*, i8** %p2, align 8, !dbg !9971, !tbaa !2442
  %cmp = icmp eq i8* %2, %3, !dbg !9972
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9973

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %n.addr, align 8, !dbg !9974, !tbaa !2579
  %cmp1 = icmp eq i64 %4, 0, !dbg !9975
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9976

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9977
  br label %return, !dbg !9977

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !9978

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i8*, i8** %p1, align 8, !dbg !9979, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !9981, !tbaa !2497, !ctir !1661
  %conv = zext i8 %6 to i32, !dbg !9981
  %call = call i32 @c_tolower(i32 %conv), !dbg !9982
  %conv2 = trunc i32 %call to i8, !dbg !9982
  store i8 %conv2, i8* %c1, align 1, !dbg !9983, !tbaa !2497
  %7 = load i8*, i8** %p2, align 8, !dbg !9984, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !9985, !tbaa !2497, !ctir !1661
  %conv3 = zext i8 %8 to i32, !dbg !9985
  %call4 = call i32 @c_tolower(i32 %conv3), !dbg !9986
  %conv5 = trunc i32 %call4 to i8, !dbg !9986
  store i8 %conv5, i8* %c2, align 1, !dbg !9987, !tbaa !2497
  %9 = load i64, i64* %n.addr, align 8, !dbg !9988, !tbaa !2579
  %dec = add i64 %9, -1, !dbg !9988
  store i64 %dec, i64* %n.addr, align 8, !dbg !9988, !tbaa !2579
  %cmp6 = icmp eq i64 %dec, 0, !dbg !9990
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8, !dbg !9991

lor.lhs.false8:                                   ; preds = %do.body
  %10 = load i8, i8* %c1, align 1, !dbg !9992, !tbaa !2497
  %conv9 = zext i8 %10 to i32, !dbg !9992
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !9993
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9994

if.then12:                                        ; preds = %lor.lhs.false8, %do.body
  br label %do.end, !dbg !9995

if.end13:                                         ; preds = %lor.lhs.false8
  %11 = load i8*, i8** %p1, align 8, !dbg !9996, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !9996
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !9996, !tbaa !2442
  %12 = load i8*, i8** %p2, align 8, !dbg !9997, !tbaa !2442
  %incdec.ptr14 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !9997
  store i8* %incdec.ptr14, i8** %p2, align 8, !dbg !9997, !tbaa !2442
  br label %do.cond, !dbg !9998

do.cond:                                          ; preds = %if.end13
  %13 = load i8, i8* %c1, align 1, !dbg !9999, !tbaa !2497
  %conv15 = zext i8 %13 to i32, !dbg !9999
  %14 = load i8, i8* %c2, align 1, !dbg !10000, !tbaa !2497
  %conv16 = zext i8 %14 to i32, !dbg !10000
  %cmp17 = icmp eq i32 %conv15, %conv16, !dbg !10001
  br i1 %cmp17, label %do.body, label %do.end, !dbg !9998, !llvm.loop !10002

do.end:                                           ; preds = %do.cond, %if.then12
  %15 = load i8, i8* %c1, align 1, !dbg !10004, !tbaa !2497
  %conv19 = zext i8 %15 to i32, !dbg !10004
  %16 = load i8, i8* %c2, align 1, !dbg !10006, !tbaa !2497
  %conv20 = zext i8 %16 to i32, !dbg !10006
  %sub = sub nsw i32 %conv19, %conv20, !dbg !10007
  store i32 %sub, i32* %retval, align 4, !dbg !10008
  br label %return, !dbg !10008

return:                                           ; preds = %do.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10009
  ret i32 %17, !dbg !10009
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) #0 !dbg !10010 !ctir !1675 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %can_mode.addr = alloca i32, align 4
  %rname = alloca i8*, align 8, !ctir !143
  %dest = alloca i8*, align 8, !ctir !143
  %extra_buf = alloca i8*, align 8, !ctir !143
  %start = alloca i8*, align 8, !ctir !146
  %end = alloca i8*, align 8, !ctir !146
  %rname_limit = alloca i8*, align 8, !ctir !146
  %extra_len = alloca i64, align 8, !ctir !149
  %ht = alloca %struct.hash_table*, align 8, !ctir !244
  %saved_errno = alloca i32, align 4, !ctir !27
  %can_flags = alloca i32, align 4, !ctir !27
  %logical = alloca i8, align 1, !ctir !141
  %prefix_len = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %st = alloca %struct.stat, align 8, !ctir !1683
  %dest_offset = alloca i64, align 8, !ctir !564
  %new_size = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %n = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %pfxlen = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10012, metadata !DIExpression()), !dbg !10013
  store i32 %can_mode, i32* %can_mode.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %can_mode.addr, metadata !10014, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.declare(metadata i8** %rname, metadata !10016, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !10018, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.declare(metadata i8** %extra_buf, metadata !10020, metadata !DIExpression()), !dbg !10021
  store i8* null, i8** %extra_buf, align 8, !dbg !10021, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %start, metadata !10022, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.declare(metadata i8** %end, metadata !10024, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.declare(metadata i8** %rname_limit, metadata !10026, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.declare(metadata i64* %extra_len, metadata !10028, metadata !DIExpression()), !dbg !10029
  store i64 0, i64* %extra_len, align 8, !dbg !10029, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht, metadata !10030, metadata !DIExpression()), !dbg !10031
  store %struct.hash_table* null, %struct.hash_table** %ht, align 8, !dbg !10031, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10032, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.declare(metadata i32* %can_flags, metadata !10034, metadata !DIExpression()), !dbg !10035
  %0 = load i32, i32* %can_mode.addr, align 4, !dbg !10036, !tbaa !2497
  %and = and i32 %0, -4, !dbg !10037
  store i32 %and, i32* %can_flags, align 4, !dbg !10035, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8* %logical, metadata !10038, metadata !DIExpression()), !dbg !10039
  %1 = load i32, i32* %can_flags, align 4, !dbg !10040, !tbaa !2436
  %and1 = and i32 %1, 4, !dbg !10041
  %tobool = icmp ne i32 %and1, 0, !dbg !10040
  %frombool = zext i1 %tobool to i8, !dbg !10039
  store i8 %frombool, i8* %logical, align 1, !dbg !10039, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10042, metadata !DIExpression()), !dbg !10043
  %2 = load i32, i32* %can_mode.addr, align 4, !dbg !10044, !tbaa !2497
  %and2 = and i32 %2, 3, !dbg !10044
  store i32 %and2, i32* %can_mode.addr, align 4, !dbg !10044, !tbaa !2497
  %3 = load i32, i32* %can_mode.addr, align 4, !dbg !10045, !tbaa !2497
  %4 = load i32, i32* %can_mode.addr, align 4, !dbg !10045, !tbaa !2497
  %sub = sub i32 %4, 1, !dbg !10045
  %and3 = and i32 %3, %sub, !dbg !10045
  %cmp = icmp ne i32 %and3, 0, !dbg !10045
  br i1 %cmp, label %if.then, label %if.end, !dbg !10047

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #17, !dbg !10048
  store i32 22, i32* %call, align 4, !dbg !10050, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10051
  br label %return, !dbg !10051

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !10052, !tbaa !2442
  %cmp4 = icmp eq i8* %5, null, !dbg !10054
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !10055

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #17, !dbg !10056
  store i32 22, i32* %call6, align 4, !dbg !10058, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10059
  br label %return, !dbg !10059

if.end7:                                          ; preds = %if.end
  %6 = load i8*, i8** %name.addr, align 8, !dbg !10060, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !10060, !ctir !146
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10060, !tbaa !2497
  %conv = sext i8 %7 to i32, !dbg !10060
  %cmp8 = icmp eq i32 %conv, 0, !dbg !10062
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !10063

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #17, !dbg !10064
  store i32 2, i32* %call11, align 4, !dbg !10066, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10067
  br label %return, !dbg !10067

if.end12:                                         ; preds = %if.end7
  store i64 0, i64* %prefix_len, align 8, !dbg !10068, !tbaa !2579
  %8 = load i8*, i8** %name.addr, align 8, !dbg !10069, !tbaa !2442
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !10069, !ctir !146
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !10069, !tbaa !2497
  %conv14 = sext i8 %9 to i32, !dbg !10069
  %cmp15 = icmp eq i32 %conv14, 47, !dbg !10069
  br i1 %cmp15, label %if.else32, label %if.then17, !dbg !10071

if.then17:                                        ; preds = %if.end12
  %call18 = call i8* @xgetcwd(), !dbg !10072
  store i8* %call18, i8** %rname, align 8, !dbg !10074, !tbaa !2442
  %10 = load i8*, i8** %rname, align 8, !dbg !10075, !tbaa !2442
  %tobool19 = icmp ne i8* %10, null, !dbg !10075
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !10077

if.then20:                                        ; preds = %if.then17
  store i8* null, i8** %retval, align 8, !dbg !10078
  br label %return, !dbg !10078

if.end21:                                         ; preds = %if.then17
  %11 = load i8*, i8** %rname, align 8, !dbg !10079, !tbaa !2442
  %call22 = call i8* @strchr(i8* %11, i32 0) #16, !dbg !10080
  store i8* %call22, i8** %dest, align 8, !dbg !10081, !tbaa !2442
  %12 = load i8*, i8** %dest, align 8, !dbg !10082, !tbaa !2442
  %13 = load i8*, i8** %rname, align 8, !dbg !10084, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !10085
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !10085
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10085
  %cmp23 = icmp slt i64 %sub.ptr.sub, 4096, !dbg !10086
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !10087

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10088, metadata !DIExpression()), !dbg !10090
  %14 = load i8*, i8** %rname, align 8, !dbg !10091, !tbaa !2442
  %call26 = call i8* @xrealloc(i8* %14, i64 4096), !dbg !10092
  store i8* %call26, i8** %p, align 8, !dbg !10090, !tbaa !2442
  %15 = load i8*, i8** %p, align 8, !dbg !10093, !tbaa !2442
  %16 = load i8*, i8** %dest, align 8, !dbg !10094, !tbaa !2442
  %17 = load i8*, i8** %rname, align 8, !dbg !10095, !tbaa !2442
  %sub.ptr.lhs.cast27 = ptrtoint i8* %16 to i64, !dbg !10096
  %sub.ptr.rhs.cast28 = ptrtoint i8* %17 to i64, !dbg !10096
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !10096
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !10097
  store i8* %add.ptr, i8** %dest, align 8, !dbg !10098, !tbaa !2442
  %18 = load i8*, i8** %p, align 8, !dbg !10099, !tbaa !2442
  store i8* %18, i8** %rname, align 8, !dbg !10100, !tbaa !2442
  %19 = load i8*, i8** %rname, align 8, !dbg !10101, !tbaa !2442
  %add.ptr30 = getelementptr inbounds i8, i8* %19, i64 4096, !dbg !10102
  store i8* %add.ptr30, i8** %rname_limit, align 8, !dbg !10103, !tbaa !2442
  br label %if.end31, !dbg !10104

if.else:                                          ; preds = %if.end21
  %20 = load i8*, i8** %dest, align 8, !dbg !10105, !tbaa !2442
  store i8* %20, i8** %rname_limit, align 8, !dbg !10107, !tbaa !2442
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  %21 = load i8*, i8** %name.addr, align 8, !dbg !10108, !tbaa !2442
  store i8* %21, i8** %start, align 8, !dbg !10109, !tbaa !2442
  store i64 0, i64* %prefix_len, align 8, !dbg !10110, !tbaa !2579
  br label %if.end40, !dbg !10111

if.else32:                                        ; preds = %if.end12
  %call33 = call noalias i8* @xmalloc(i64 4096), !dbg !10112
  store i8* %call33, i8** %rname, align 8, !dbg !10114, !tbaa !2442
  %22 = load i8*, i8** %rname, align 8, !dbg !10115, !tbaa !2442
  %add.ptr34 = getelementptr inbounds i8, i8* %22, i64 4096, !dbg !10116
  store i8* %add.ptr34, i8** %rname_limit, align 8, !dbg !10117, !tbaa !2442
  %23 = load i8*, i8** %rname, align 8, !dbg !10118, !tbaa !2442
  store i8* %23, i8** %dest, align 8, !dbg !10119, !tbaa !2442
  %24 = load i64, i64* %prefix_len, align 8, !dbg !10120, !tbaa !2579
  %tobool35 = icmp ne i64 %24, 0, !dbg !10120
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10122

if.then36:                                        ; preds = %if.else32
  %25 = load i8*, i8** %rname, align 8, !dbg !10123, !tbaa !2442
  %26 = load i8*, i8** %name.addr, align 8, !dbg !10125, !tbaa !2442
  %27 = load i64, i64* %prefix_len, align 8, !dbg !10126, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false), !dbg !10127
  %28 = load i64, i64* %prefix_len, align 8, !dbg !10128, !tbaa !2579
  %29 = load i8*, i8** %dest, align 8, !dbg !10129, !tbaa !2442
  %add.ptr37 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !10129
  store i8* %add.ptr37, i8** %dest, align 8, !dbg !10129, !tbaa !2442
  br label %if.end38, !dbg !10130

if.end38:                                         ; preds = %if.then36, %if.else32
  %30 = load i8*, i8** %dest, align 8, !dbg !10131, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !10131
  store i8* %incdec.ptr, i8** %dest, align 8, !dbg !10131, !tbaa !2442
  store i8 47, i8* %30, align 1, !dbg !10132, !tbaa !2497, !ctir !144
  %31 = load i8*, i8** %name.addr, align 8, !dbg !10133, !tbaa !2442
  %32 = load i64, i64* %prefix_len, align 8, !dbg !10134, !tbaa !2579
  %add.ptr39 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !10135
  store i8* %add.ptr39, i8** %start, align 8, !dbg !10136, !tbaa !2442
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.end31
  br label %for.cond, !dbg !10137

for.cond:                                         ; preds = %for.inc292, %if.end40
  %33 = load i8*, i8** %start, align 8, !dbg !10138, !tbaa !2442
  %34 = load i8, i8* %33, align 1, !dbg !10141, !tbaa !2497, !ctir !147
  %tobool41 = icmp ne i8 %34, 0, !dbg !10142
  br i1 %tobool41, label %for.body, label %for.end293, !dbg !10142

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !10143

while.cond:                                       ; preds = %while.body, %for.body
  %35 = load i8*, i8** %start, align 8, !dbg !10145, !tbaa !2442
  %36 = load i8, i8* %35, align 1, !dbg !10145, !tbaa !2497, !ctir !147
  %conv42 = sext i8 %36 to i32, !dbg !10145
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !10145
  br i1 %cmp43, label %while.body, label %while.end, !dbg !10143

while.body:                                       ; preds = %while.cond
  %37 = load i8*, i8** %start, align 8, !dbg !10146, !tbaa !2442
  %incdec.ptr45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !10146
  store i8* %incdec.ptr45, i8** %start, align 8, !dbg !10146, !tbaa !2442
  br label %while.cond, !dbg !10143, !llvm.loop !10147

while.end:                                        ; preds = %while.cond
  %38 = load i8*, i8** %start, align 8, !dbg !10149, !tbaa !2442
  store i8* %38, i8** %end, align 8, !dbg !10151, !tbaa !2442
  br label %for.cond46, !dbg !10152

for.cond46:                                       ; preds = %for.inc, %while.end
  %39 = load i8*, i8** %end, align 8, !dbg !10153, !tbaa !2442
  %40 = load i8, i8* %39, align 1, !dbg !10155, !tbaa !2497, !ctir !147
  %conv47 = sext i8 %40 to i32, !dbg !10155
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !10155
  br i1 %tobool48, label %land.rhs, label %land.end, !dbg !10156

land.rhs:                                         ; preds = %for.cond46
  %41 = load i8*, i8** %end, align 8, !dbg !10157, !tbaa !2442
  %42 = load i8, i8* %41, align 1, !dbg !10157, !tbaa !2497, !ctir !147
  %conv49 = sext i8 %42 to i32, !dbg !10157
  %cmp50 = icmp eq i32 %conv49, 47, !dbg !10157
  %lnot = xor i1 %cmp50, true, !dbg !10158
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond46
  %43 = phi i1 [ false, %for.cond46 ], [ %lnot, %land.rhs ], !dbg !10159
  br i1 %43, label %for.body52, label %for.end, !dbg !10160

for.body52:                                       ; preds = %land.end
  br label %for.inc, !dbg !10160

for.inc:                                          ; preds = %for.body52
  %44 = load i8*, i8** %end, align 8, !dbg !10161, !tbaa !2442
  %incdec.ptr53 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !10161
  store i8* %incdec.ptr53, i8** %end, align 8, !dbg !10161, !tbaa !2442
  br label %for.cond46, !dbg !10162, !llvm.loop !10163

for.end:                                          ; preds = %land.end
  %45 = load i8*, i8** %end, align 8, !dbg !10165, !tbaa !2442
  %46 = load i8*, i8** %start, align 8, !dbg !10167, !tbaa !2442
  %sub.ptr.lhs.cast54 = ptrtoint i8* %45 to i64, !dbg !10168
  %sub.ptr.rhs.cast55 = ptrtoint i8* %46 to i64, !dbg !10168
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !10168
  %cmp57 = icmp eq i64 %sub.ptr.sub56, 0, !dbg !10169
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !10170

if.then59:                                        ; preds = %for.end
  br label %for.end293, !dbg !10171

if.else60:                                        ; preds = %for.end
  %47 = load i8*, i8** %end, align 8, !dbg !10172, !tbaa !2442
  %48 = load i8*, i8** %start, align 8, !dbg !10174, !tbaa !2442
  %sub.ptr.lhs.cast61 = ptrtoint i8* %47 to i64, !dbg !10175
  %sub.ptr.rhs.cast62 = ptrtoint i8* %48 to i64, !dbg !10175
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62, !dbg !10175
  %cmp64 = icmp eq i64 %sub.ptr.sub63, 1, !dbg !10176
  br i1 %cmp64, label %land.lhs.true, label %if.else71, !dbg !10177

land.lhs.true:                                    ; preds = %if.else60
  %49 = load i8*, i8** %start, align 8, !dbg !10178, !tbaa !2442
  %arrayidx66 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !10178, !ctir !146
  %50 = load i8, i8* %arrayidx66, align 1, !dbg !10178, !tbaa !2497
  %conv67 = sext i8 %50 to i32, !dbg !10178
  %cmp68 = icmp eq i32 %conv67, 46, !dbg !10179
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !10180

if.then70:                                        ; preds = %land.lhs.true
  br label %if.end290, !dbg !10180

if.else71:                                        ; preds = %land.lhs.true, %if.else60
  %51 = load i8*, i8** %end, align 8, !dbg !10181, !tbaa !2442
  %52 = load i8*, i8** %start, align 8, !dbg !10183, !tbaa !2442
  %sub.ptr.lhs.cast72 = ptrtoint i8* %51 to i64, !dbg !10184
  %sub.ptr.rhs.cast73 = ptrtoint i8* %52 to i64, !dbg !10184
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !10184
  %cmp75 = icmp eq i64 %sub.ptr.sub74, 2, !dbg !10185
  br i1 %cmp75, label %land.lhs.true77, label %if.else109, !dbg !10186

land.lhs.true77:                                  ; preds = %if.else71
  %53 = load i8*, i8** %start, align 8, !dbg !10187, !tbaa !2442
  %arrayidx78 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !10187, !ctir !146
  %54 = load i8, i8* %arrayidx78, align 1, !dbg !10187, !tbaa !2497
  %conv79 = sext i8 %54 to i32, !dbg !10187
  %cmp80 = icmp eq i32 %conv79, 46, !dbg !10188
  br i1 %cmp80, label %land.lhs.true82, label %if.else109, !dbg !10189

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %55 = load i8*, i8** %start, align 8, !dbg !10190, !tbaa !2442
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !10190, !ctir !146
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !10190, !tbaa !2497
  %conv84 = sext i8 %56 to i32, !dbg !10190
  %cmp85 = icmp eq i32 %conv84, 46, !dbg !10191
  br i1 %cmp85, label %if.then87, label %if.else109, !dbg !10192

if.then87:                                        ; preds = %land.lhs.true82
  %57 = load i8*, i8** %dest, align 8, !dbg !10193, !tbaa !2442
  %58 = load i8*, i8** %rname, align 8, !dbg !10196, !tbaa !2442
  %59 = load i64, i64* %prefix_len, align 8, !dbg !10197, !tbaa !2579
  %add.ptr88 = getelementptr inbounds i8, i8* %58, i64 %59, !dbg !10198
  %add.ptr89 = getelementptr inbounds i8, i8* %add.ptr88, i64 1, !dbg !10199
  %cmp90 = icmp ugt i8* %57, %add.ptr89, !dbg !10200
  br i1 %cmp90, label %if.then92, label %if.end108, !dbg !10201

if.then92:                                        ; preds = %if.then87
  %60 = load i8*, i8** %dest, align 8, !dbg !10202, !tbaa !2442
  %incdec.ptr93 = getelementptr inbounds i8, i8* %60, i32 -1, !dbg !10202
  store i8* %incdec.ptr93, i8** %dest, align 8, !dbg !10202, !tbaa !2442
  br label %for.cond94, !dbg !10202

for.cond94:                                       ; preds = %for.inc105, %if.then92
  %61 = load i8*, i8** %dest, align 8, !dbg !10204, !tbaa !2442
  %62 = load i8*, i8** %rname, align 8, !dbg !10206, !tbaa !2442
  %cmp95 = icmp ugt i8* %61, %62, !dbg !10207
  br i1 %cmp95, label %land.rhs97, label %land.end103, !dbg !10208

land.rhs97:                                       ; preds = %for.cond94
  %63 = load i8*, i8** %dest, align 8, !dbg !10209, !tbaa !2442
  %arrayidx98 = getelementptr inbounds i8, i8* %63, i64 -1, !dbg !10209, !ctir !143
  %64 = load i8, i8* %arrayidx98, align 1, !dbg !10209, !tbaa !2497
  %conv99 = sext i8 %64 to i32, !dbg !10209
  %cmp100 = icmp eq i32 %conv99, 47, !dbg !10209
  %lnot102 = xor i1 %cmp100, true, !dbg !10210
  br label %land.end103

land.end103:                                      ; preds = %land.rhs97, %for.cond94
  %65 = phi i1 [ false, %for.cond94 ], [ %lnot102, %land.rhs97 ], !dbg !10211
  br i1 %65, label %for.body104, label %for.end107, !dbg !10212

for.body104:                                      ; preds = %land.end103
  br label %for.inc105, !dbg !10213

for.inc105:                                       ; preds = %for.body104
  %66 = load i8*, i8** %dest, align 8, !dbg !10214, !tbaa !2442
  %incdec.ptr106 = getelementptr inbounds i8, i8* %66, i32 -1, !dbg !10214
  store i8* %incdec.ptr106, i8** %dest, align 8, !dbg !10214, !tbaa !2442
  br label %for.cond94, !dbg !10215, !llvm.loop !10216

for.end107:                                       ; preds = %land.end103
  br label %if.end108, !dbg !10217

if.end108:                                        ; preds = %for.end107, %if.then87
  br label %if.end289, !dbg !10218

if.else109:                                       ; preds = %land.lhs.true82, %land.lhs.true77, %if.else71
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !10219, metadata !DIExpression()), !dbg !10221
  %67 = load i8*, i8** %dest, align 8, !dbg !10222, !tbaa !2442
  %arrayidx110 = getelementptr inbounds i8, i8* %67, i64 -1, !dbg !10222, !ctir !143
  %68 = load i8, i8* %arrayidx110, align 1, !dbg !10222, !tbaa !2497
  %conv111 = sext i8 %68 to i32, !dbg !10222
  %cmp112 = icmp eq i32 %conv111, 47, !dbg !10222
  br i1 %cmp112, label %if.end116, label %if.then114, !dbg !10224

if.then114:                                       ; preds = %if.else109
  %69 = load i8*, i8** %dest, align 8, !dbg !10225, !tbaa !2442
  %incdec.ptr115 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !10225
  store i8* %incdec.ptr115, i8** %dest, align 8, !dbg !10225, !tbaa !2442
  store i8 47, i8* %69, align 1, !dbg !10226, !tbaa !2497, !ctir !144
  br label %if.end116, !dbg !10227

if.end116:                                        ; preds = %if.then114, %if.else109
  %70 = load i8*, i8** %dest, align 8, !dbg !10228, !tbaa !2442
  %71 = load i8*, i8** %end, align 8, !dbg !10230, !tbaa !2442
  %72 = load i8*, i8** %start, align 8, !dbg !10231, !tbaa !2442
  %sub.ptr.lhs.cast117 = ptrtoint i8* %71 to i64, !dbg !10232
  %sub.ptr.rhs.cast118 = ptrtoint i8* %72 to i64, !dbg !10232
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !10232
  %add.ptr120 = getelementptr inbounds i8, i8* %70, i64 %sub.ptr.sub119, !dbg !10233
  %73 = load i8*, i8** %rname_limit, align 8, !dbg !10234, !tbaa !2442
  %cmp121 = icmp uge i8* %add.ptr120, %73, !dbg !10235
  br i1 %cmp121, label %if.then123, label %if.end147, !dbg !10236

if.then123:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata i64* %dest_offset, metadata !10237, metadata !DIExpression()), !dbg !10239
  %74 = load i8*, i8** %dest, align 8, !dbg !10240, !tbaa !2442
  %75 = load i8*, i8** %rname, align 8, !dbg !10241, !tbaa !2442
  %sub.ptr.lhs.cast124 = ptrtoint i8* %74 to i64, !dbg !10242
  %sub.ptr.rhs.cast125 = ptrtoint i8* %75 to i64, !dbg !10242
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !10242
  store i64 %sub.ptr.sub126, i64* %dest_offset, align 8, !dbg !10239, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !10243, metadata !DIExpression()), !dbg !10244
  %76 = load i8*, i8** %rname_limit, align 8, !dbg !10245, !tbaa !2442
  %77 = load i8*, i8** %rname, align 8, !dbg !10246, !tbaa !2442
  %sub.ptr.lhs.cast127 = ptrtoint i8* %76 to i64, !dbg !10247
  %sub.ptr.rhs.cast128 = ptrtoint i8* %77 to i64, !dbg !10247
  %sub.ptr.sub129 = sub i64 %sub.ptr.lhs.cast127, %sub.ptr.rhs.cast128, !dbg !10247
  store i64 %sub.ptr.sub129, i64* %new_size, align 8, !dbg !10244, !tbaa !2579
  %78 = load i8*, i8** %end, align 8, !dbg !10248, !tbaa !2442
  %79 = load i8*, i8** %start, align 8, !dbg !10250, !tbaa !2442
  %sub.ptr.lhs.cast130 = ptrtoint i8* %78 to i64, !dbg !10251
  %sub.ptr.rhs.cast131 = ptrtoint i8* %79 to i64, !dbg !10251
  %sub.ptr.sub132 = sub i64 %sub.ptr.lhs.cast130, %sub.ptr.rhs.cast131, !dbg !10251
  %add = add nsw i64 %sub.ptr.sub132, 1, !dbg !10252
  %cmp133 = icmp sgt i64 %add, 4096, !dbg !10253
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !10254

if.then135:                                       ; preds = %if.then123
  %80 = load i8*, i8** %end, align 8, !dbg !10255, !tbaa !2442
  %81 = load i8*, i8** %start, align 8, !dbg !10256, !tbaa !2442
  %sub.ptr.lhs.cast136 = ptrtoint i8* %80 to i64, !dbg !10257
  %sub.ptr.rhs.cast137 = ptrtoint i8* %81 to i64, !dbg !10257
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137, !dbg !10257
  %add139 = add nsw i64 %sub.ptr.sub138, 1, !dbg !10258
  %82 = load i64, i64* %new_size, align 8, !dbg !10259, !tbaa !2579
  %add140 = add i64 %82, %add139, !dbg !10259
  store i64 %add140, i64* %new_size, align 8, !dbg !10259, !tbaa !2579
  br label %if.end143, !dbg !10260

if.else141:                                       ; preds = %if.then123
  %83 = load i64, i64* %new_size, align 8, !dbg !10261, !tbaa !2579
  %add142 = add i64 %83, 4096, !dbg !10261
  store i64 %add142, i64* %new_size, align 8, !dbg !10261, !tbaa !2579
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then135
  %84 = load i8*, i8** %rname, align 8, !dbg !10262, !tbaa !2442
  %85 = load i64, i64* %new_size, align 8, !dbg !10263, !tbaa !2579
  %call144 = call i8* @xrealloc(i8* %84, i64 %85), !dbg !10264
  store i8* %call144, i8** %rname, align 8, !dbg !10265, !tbaa !2442
  %86 = load i8*, i8** %rname, align 8, !dbg !10266, !tbaa !2442
  %87 = load i64, i64* %new_size, align 8, !dbg !10267, !tbaa !2579
  %add.ptr145 = getelementptr inbounds i8, i8* %86, i64 %87, !dbg !10268
  store i8* %add.ptr145, i8** %rname_limit, align 8, !dbg !10269, !tbaa !2442
  %88 = load i8*, i8** %rname, align 8, !dbg !10270, !tbaa !2442
  %89 = load i64, i64* %dest_offset, align 8, !dbg !10271, !tbaa !2579
  %add.ptr146 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !10272
  store i8* %add.ptr146, i8** %dest, align 8, !dbg !10273, !tbaa !2442
  br label %if.end147, !dbg !10274

if.end147:                                        ; preds = %if.end143, %if.end116
  %90 = load i8*, i8** %dest, align 8, !dbg !10275, !tbaa !2442
  %91 = load i8*, i8** %start, align 8, !dbg !10276, !tbaa !2442
  %92 = load i8*, i8** %end, align 8, !dbg !10277, !tbaa !2442
  %93 = load i8*, i8** %start, align 8, !dbg !10278, !tbaa !2442
  %sub.ptr.lhs.cast148 = ptrtoint i8* %92 to i64, !dbg !10279
  %sub.ptr.rhs.cast149 = ptrtoint i8* %93 to i64, !dbg !10279
  %sub.ptr.sub150 = sub i64 %sub.ptr.lhs.cast148, %sub.ptr.rhs.cast149, !dbg !10279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %91, i64 %sub.ptr.sub150, i1 false), !dbg !10280
  store i8* %90, i8** %dest, align 8, !dbg !10281, !tbaa !2442
  %94 = load i8*, i8** %end, align 8, !dbg !10282, !tbaa !2442
  %95 = load i8*, i8** %start, align 8, !dbg !10283, !tbaa !2442
  %sub.ptr.lhs.cast151 = ptrtoint i8* %94 to i64, !dbg !10284
  %sub.ptr.rhs.cast152 = ptrtoint i8* %95 to i64, !dbg !10284
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !10284
  %96 = load i8*, i8** %dest, align 8, !dbg !10285, !tbaa !2442
  %add.ptr154 = getelementptr inbounds i8, i8* %96, i64 %sub.ptr.sub153, !dbg !10285
  store i8* %add.ptr154, i8** %dest, align 8, !dbg !10285, !tbaa !2442
  %97 = load i8*, i8** %dest, align 8, !dbg !10286, !tbaa !2442
  store i8 0, i8* %97, align 1, !dbg !10287, !tbaa !2497, !ctir !144
  %98 = load i8, i8* %logical, align 1, !dbg !10288, !tbaa !2461
  %tobool155 = trunc i8 %98 to i1, !dbg !10288
  br i1 %tobool155, label %land.lhs.true157, label %if.else161, !dbg !10290

land.lhs.true157:                                 ; preds = %if.end147
  %99 = load i32, i32* %can_mode.addr, align 4, !dbg !10291, !tbaa !2497
  %cmp158 = icmp eq i32 %99, 2, !dbg !10292
  br i1 %cmp158, label %if.then160, label %if.else161, !dbg !10293

if.then160:                                       ; preds = %land.lhs.true157
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10294, !ctir !1683
  store i32 0, i32* %st_mode, align 8, !dbg !10296, !tbaa !4189, !ctir !201
  br label %if.end188, !dbg !10297

if.else161:                                       ; preds = %land.lhs.true157, %if.end147
  %100 = load i8, i8* %logical, align 1, !dbg !10298, !tbaa !2461
  %tobool162 = trunc i8 %100 to i1, !dbg !10298
  br i1 %tobool162, label %cond.true, label %cond.false, !dbg !10298

cond.true:                                        ; preds = %if.else161
  %101 = load i8*, i8** %rname, align 8, !dbg !10300, !tbaa !2442
  %call164 = call i32 @stat(i8* %101, %struct.stat* %st) #13, !dbg !10301
  br label %cond.end, !dbg !10298

cond.false:                                       ; preds = %if.else161
  %102 = load i8*, i8** %rname, align 8, !dbg !10302, !tbaa !2442
  %call165 = call i32 @lstat(i8* %102, %struct.stat* %st) #13, !dbg !10303
  br label %cond.end, !dbg !10298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call164, %cond.true ], [ %call165, %cond.false ], !dbg !10298
  %cmp166 = icmp ne i32 %cond, 0, !dbg !10304
  br i1 %cmp166, label %if.then168, label %if.end187, !dbg !10305

if.then168:                                       ; preds = %cond.end
  %call169 = call i32* @__errno_location() #17, !dbg !10306
  %103 = load i32, i32* %call169, align 4, !dbg !10306, !tbaa !2436, !ctir !27
  store i32 %103, i32* %saved_errno, align 4, !dbg !10308, !tbaa !2436
  %104 = load i32, i32* %can_mode.addr, align 4, !dbg !10309, !tbaa !2497
  %cmp170 = icmp eq i32 %104, 0, !dbg !10311
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10312

if.then172:                                       ; preds = %if.then168
  br label %error, !dbg !10313

if.end173:                                        ; preds = %if.then168
  %105 = load i32, i32* %can_mode.addr, align 4, !dbg !10314, !tbaa !2497
  %cmp174 = icmp eq i32 %105, 1, !dbg !10316
  br i1 %cmp174, label %if.then176, label %if.end185, !dbg !10317

if.then176:                                       ; preds = %if.end173
  %106 = load i8*, i8** %end, align 8, !dbg !10318, !tbaa !2442
  %107 = load i8*, i8** %end, align 8, !dbg !10321, !tbaa !2442
  %call177 = call i64 @strspn(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.270, i64 0, i64 0)) #16, !dbg !10322
  %arrayidx178 = getelementptr inbounds i8, i8* %106, i64 %call177, !dbg !10318, !ctir !146
  %108 = load i8, i8* %arrayidx178, align 1, !dbg !10318, !tbaa !2497
  %conv179 = sext i8 %108 to i32, !dbg !10318
  %tobool180 = icmp ne i32 %conv179, 0, !dbg !10318
  br i1 %tobool180, label %if.then183, label %lor.lhs.false, !dbg !10323

lor.lhs.false:                                    ; preds = %if.then176
  %109 = load i32, i32* %saved_errno, align 4, !dbg !10324, !tbaa !2436
  %cmp181 = icmp ne i32 %109, 2, !dbg !10325
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !10326

if.then183:                                       ; preds = %lor.lhs.false, %if.then176
  br label %error, !dbg !10327

if.end184:                                        ; preds = %lor.lhs.false
  br label %for.inc292, !dbg !10328

if.end185:                                        ; preds = %if.end173
  %st_mode186 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10329, !ctir !1683
  store i32 0, i32* %st_mode186, align 8, !dbg !10330, !tbaa !4189, !ctir !201
  br label %if.end187, !dbg !10331

if.end187:                                        ; preds = %if.end185, %cond.end
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then160
  %st_mode189 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10332, !ctir !1683
  %110 = load i32, i32* %st_mode189, align 8, !dbg !10332, !tbaa !4189, !ctir !201
  %and190 = and i32 %110, 61440, !dbg !10332
  %cmp191 = icmp eq i32 %and190, 40960, !dbg !10332
  br i1 %cmp191, label %if.then193, label %if.else275, !dbg !10334

if.then193:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10335, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10338, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10340, metadata !DIExpression()), !dbg !10341
  %111 = load i8*, i8** %name.addr, align 8, !dbg !10342, !tbaa !2442
  %call194 = call zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %111, %struct.stat* %st), !dbg !10344
  br i1 %call194, label %if.then195, label %if.end200, !dbg !10345

if.then195:                                       ; preds = %if.then193
  %112 = load i32, i32* %can_mode.addr, align 4, !dbg !10346, !tbaa !2497
  %cmp196 = icmp eq i32 %112, 2, !dbg !10349
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !10350

if.then198:                                       ; preds = %if.then195
  br label %for.inc292, !dbg !10351

if.end199:                                        ; preds = %if.then195
  store i32 40, i32* %saved_errno, align 4, !dbg !10352, !tbaa !2436
  br label %error, !dbg !10353

if.end200:                                        ; preds = %if.then193
  %113 = load i8*, i8** %rname, align 8, !dbg !10354, !tbaa !2442
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !10355, !ctir !1683
  %114 = load i64, i64* %st_size, align 8, !dbg !10355, !tbaa !10356, !ctir !179
  %call201 = call i8* @areadlink_with_size(i8* %113, i64 %114), !dbg !10357
  store i8* %call201, i8** %buf, align 8, !dbg !10358, !tbaa !2442
  %115 = load i8*, i8** %buf, align 8, !dbg !10359, !tbaa !2442
  %tobool202 = icmp ne i8* %115, null, !dbg !10359
  br i1 %tobool202, label %if.end213, label %if.then203, !dbg !10361

if.then203:                                       ; preds = %if.end200
  %116 = load i32, i32* %can_mode.addr, align 4, !dbg !10362, !tbaa !2497
  %cmp204 = icmp eq i32 %116, 2, !dbg !10365
  br i1 %cmp204, label %land.lhs.true206, label %if.end211, !dbg !10366

land.lhs.true206:                                 ; preds = %if.then203
  %call207 = call i32* @__errno_location() #17, !dbg !10367
  %117 = load i32, i32* %call207, align 4, !dbg !10367, !tbaa !2436, !ctir !27
  %cmp208 = icmp ne i32 %117, 12, !dbg !10368
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !10369

if.then210:                                       ; preds = %land.lhs.true206
  br label %for.inc292, !dbg !10370

if.end211:                                        ; preds = %land.lhs.true206, %if.then203
  %call212 = call i32* @__errno_location() #17, !dbg !10371
  %118 = load i32, i32* %call212, align 4, !dbg !10371, !tbaa !2436, !ctir !27
  store i32 %118, i32* %saved_errno, align 4, !dbg !10372, !tbaa !2436
  br label %error, !dbg !10373

if.end213:                                        ; preds = %if.end200
  %119 = load i8*, i8** %buf, align 8, !dbg !10374, !tbaa !2442
  %call214 = call i64 @strlen(i8* %119) #16, !dbg !10375
  store i64 %call214, i64* %n, align 8, !dbg !10376, !tbaa !2579
  %120 = load i8*, i8** %end, align 8, !dbg !10377, !tbaa !2442
  %call215 = call i64 @strlen(i8* %120) #16, !dbg !10378
  store i64 %call215, i64* %len, align 8, !dbg !10379, !tbaa !2579
  %121 = load i64, i64* %extra_len, align 8, !dbg !10380, !tbaa !2579
  %tobool216 = icmp ne i64 %121, 0, !dbg !10380
  br i1 %tobool216, label %if.else229, label %if.then217, !dbg !10382

if.then217:                                       ; preds = %if.end213
  %122 = load i64, i64* %n, align 8, !dbg !10383, !tbaa !2579
  %123 = load i64, i64* %len, align 8, !dbg !10385, !tbaa !2579
  %add218 = add i64 %122, %123, !dbg !10386
  %add219 = add i64 %add218, 1, !dbg !10387
  %cmp220 = icmp ugt i64 %add219, 4096, !dbg !10388
  br i1 %cmp220, label %cond.true222, label %cond.false225, !dbg !10389

cond.true222:                                     ; preds = %if.then217
  %124 = load i64, i64* %n, align 8, !dbg !10390, !tbaa !2579
  %125 = load i64, i64* %len, align 8, !dbg !10391, !tbaa !2579
  %add223 = add i64 %124, %125, !dbg !10392
  %add224 = add i64 %add223, 1, !dbg !10393
  br label %cond.end226, !dbg !10389

cond.false225:                                    ; preds = %if.then217
  br label %cond.end226, !dbg !10389

cond.end226:                                      ; preds = %cond.false225, %cond.true222
  %cond227 = phi i64 [ %add224, %cond.true222 ], [ 4096, %cond.false225 ], !dbg !10389
  store i64 %cond227, i64* %extra_len, align 8, !dbg !10394, !tbaa !2579
  %126 = load i64, i64* %extra_len, align 8, !dbg !10395, !tbaa !2579
  %call228 = call noalias i8* @xmalloc(i64 %126), !dbg !10396
  store i8* %call228, i8** %extra_buf, align 8, !dbg !10397, !tbaa !2442
  br label %if.end239, !dbg !10398

if.else229:                                       ; preds = %if.end213
  %127 = load i64, i64* %n, align 8, !dbg !10399, !tbaa !2579
  %128 = load i64, i64* %len, align 8, !dbg !10401, !tbaa !2579
  %add230 = add i64 %127, %128, !dbg !10402
  %add231 = add i64 %add230, 1, !dbg !10403
  %129 = load i64, i64* %extra_len, align 8, !dbg !10404, !tbaa !2579
  %cmp232 = icmp ugt i64 %add231, %129, !dbg !10405
  br i1 %cmp232, label %if.then234, label %if.end238, !dbg !10406

if.then234:                                       ; preds = %if.else229
  %130 = load i64, i64* %n, align 8, !dbg !10407, !tbaa !2579
  %131 = load i64, i64* %len, align 8, !dbg !10409, !tbaa !2579
  %add235 = add i64 %130, %131, !dbg !10410
  %add236 = add i64 %add235, 1, !dbg !10411
  store i64 %add236, i64* %extra_len, align 8, !dbg !10412, !tbaa !2579
  %132 = load i8*, i8** %extra_buf, align 8, !dbg !10413, !tbaa !2442
  %133 = load i64, i64* %extra_len, align 8, !dbg !10414, !tbaa !2579
  %call237 = call i8* @xrealloc(i8* %132, i64 %133), !dbg !10415
  store i8* %call237, i8** %extra_buf, align 8, !dbg !10416, !tbaa !2442
  br label %if.end238, !dbg !10417

if.end238:                                        ; preds = %if.then234, %if.else229
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %cond.end226
  %134 = load i8*, i8** %extra_buf, align 8, !dbg !10418, !tbaa !2442
  %135 = load i64, i64* %n, align 8, !dbg !10419, !tbaa !2579
  %arrayidx240 = getelementptr inbounds i8, i8* %134, i64 %135, !dbg !10418, !ctir !143
  %136 = load i8*, i8** %end, align 8, !dbg !10420, !tbaa !2442
  %137 = load i64, i64* %len, align 8, !dbg !10421, !tbaa !2579
  %add241 = add i64 %137, 1, !dbg !10422
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %arrayidx240, i8* align 1 %136, i64 %add241, i1 false), !dbg !10423
  %138 = load i8*, i8** %extra_buf, align 8, !dbg !10424, !tbaa !2442
  %139 = load i8*, i8** %buf, align 8, !dbg !10425, !tbaa !2442
  %140 = load i64, i64* %n, align 8, !dbg !10426, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %139, i64 %140, i1 false), !dbg !10427
  store i8* %138, i8** %end, align 8, !dbg !10428, !tbaa !2442
  store i8* %138, i8** %name.addr, align 8, !dbg !10429, !tbaa !2442
  %141 = load i8*, i8** %buf, align 8, !dbg !10430, !tbaa !2442
  %arrayidx242 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !10430, !ctir !143
  %142 = load i8, i8* %arrayidx242, align 1, !dbg !10430, !tbaa !2497
  %conv243 = sext i8 %142 to i32, !dbg !10430
  %cmp244 = icmp eq i32 %conv243, 47, !dbg !10430
  br i1 %cmp244, label %if.then246, label %if.else252, !dbg !10432

if.then246:                                       ; preds = %if.end239
  call void @llvm.dbg.declare(metadata i64* %pfxlen, metadata !10433, metadata !DIExpression()), !dbg !10435
  store i64 0, i64* %pfxlen, align 8, !dbg !10435, !tbaa !2579
  %143 = load i64, i64* %pfxlen, align 8, !dbg !10436, !tbaa !2579
  %tobool247 = icmp ne i64 %143, 0, !dbg !10436
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !10438

if.then248:                                       ; preds = %if.then246
  %144 = load i8*, i8** %rname, align 8, !dbg !10439, !tbaa !2442
  %145 = load i8*, i8** %buf, align 8, !dbg !10440, !tbaa !2442
  %146 = load i64, i64* %pfxlen, align 8, !dbg !10441, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %145, i64 %146, i1 false), !dbg !10442
  br label %if.end249, !dbg !10442

if.end249:                                        ; preds = %if.then248, %if.then246
  %147 = load i8*, i8** %rname, align 8, !dbg !10443, !tbaa !2442
  %148 = load i64, i64* %pfxlen, align 8, !dbg !10444, !tbaa !2579
  %add.ptr250 = getelementptr inbounds i8, i8* %147, i64 %148, !dbg !10445
  store i8* %add.ptr250, i8** %dest, align 8, !dbg !10446, !tbaa !2442
  %149 = load i8*, i8** %dest, align 8, !dbg !10447, !tbaa !2442
  %incdec.ptr251 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !10447
  store i8* %incdec.ptr251, i8** %dest, align 8, !dbg !10447, !tbaa !2442
  store i8 47, i8* %149, align 1, !dbg !10448, !tbaa !2497, !ctir !144
  %150 = load i64, i64* %pfxlen, align 8, !dbg !10449, !tbaa !2579
  store i64 %150, i64* %prefix_len, align 8, !dbg !10450, !tbaa !2579
  br label %if.end274, !dbg !10451

if.else252:                                       ; preds = %if.end239
  %151 = load i8*, i8** %dest, align 8, !dbg !10452, !tbaa !2442
  %152 = load i8*, i8** %rname, align 8, !dbg !10455, !tbaa !2442
  %153 = load i64, i64* %prefix_len, align 8, !dbg !10456, !tbaa !2579
  %add.ptr253 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !10457
  %add.ptr254 = getelementptr inbounds i8, i8* %add.ptr253, i64 1, !dbg !10458
  %cmp255 = icmp ugt i8* %151, %add.ptr254, !dbg !10459
  br i1 %cmp255, label %if.then257, label %if.end273, !dbg !10460

if.then257:                                       ; preds = %if.else252
  %154 = load i8*, i8** %dest, align 8, !dbg !10461, !tbaa !2442
  %incdec.ptr258 = getelementptr inbounds i8, i8* %154, i32 -1, !dbg !10461
  store i8* %incdec.ptr258, i8** %dest, align 8, !dbg !10461, !tbaa !2442
  br label %for.cond259, !dbg !10461

for.cond259:                                      ; preds = %for.inc270, %if.then257
  %155 = load i8*, i8** %dest, align 8, !dbg !10463, !tbaa !2442
  %156 = load i8*, i8** %rname, align 8, !dbg !10465, !tbaa !2442
  %cmp260 = icmp ugt i8* %155, %156, !dbg !10466
  br i1 %cmp260, label %land.rhs262, label %land.end268, !dbg !10467

land.rhs262:                                      ; preds = %for.cond259
  %157 = load i8*, i8** %dest, align 8, !dbg !10468, !tbaa !2442
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i64 -1, !dbg !10468, !ctir !143
  %158 = load i8, i8* %arrayidx263, align 1, !dbg !10468, !tbaa !2497
  %conv264 = sext i8 %158 to i32, !dbg !10468
  %cmp265 = icmp eq i32 %conv264, 47, !dbg !10468
  %lnot267 = xor i1 %cmp265, true, !dbg !10469
  br label %land.end268

land.end268:                                      ; preds = %land.rhs262, %for.cond259
  %159 = phi i1 [ false, %for.cond259 ], [ %lnot267, %land.rhs262 ], !dbg !10470
  br i1 %159, label %for.body269, label %for.end272, !dbg !10471

for.body269:                                      ; preds = %land.end268
  br label %for.inc270, !dbg !10472

for.inc270:                                       ; preds = %for.body269
  %160 = load i8*, i8** %dest, align 8, !dbg !10473, !tbaa !2442
  %incdec.ptr271 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !10473
  store i8* %incdec.ptr271, i8** %dest, align 8, !dbg !10473, !tbaa !2442
  br label %for.cond259, !dbg !10474, !llvm.loop !10475

for.end272:                                       ; preds = %land.end268
  br label %if.end273, !dbg !10476

if.end273:                                        ; preds = %for.end272, %if.else252
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.end249
  %161 = load i8*, i8** %buf, align 8, !dbg !10477, !tbaa !2442
  call void @free(i8* %161) #13, !dbg !10478
  br label %if.end288, !dbg !10479

if.else275:                                       ; preds = %if.end188
  %st_mode276 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !10480, !ctir !1683
  %162 = load i32, i32* %st_mode276, align 8, !dbg !10480, !tbaa !4189, !ctir !201
  %and277 = and i32 %162, 61440, !dbg !10480
  %cmp278 = icmp eq i32 %and277, 16384, !dbg !10480
  br i1 %cmp278, label %if.end287, label %land.lhs.true280, !dbg !10483

land.lhs.true280:                                 ; preds = %if.else275
  %163 = load i8*, i8** %end, align 8, !dbg !10484, !tbaa !2442
  %164 = load i8, i8* %163, align 1, !dbg !10485, !tbaa !2497, !ctir !147
  %conv281 = sext i8 %164 to i32, !dbg !10485
  %tobool282 = icmp ne i32 %conv281, 0, !dbg !10485
  br i1 %tobool282, label %land.lhs.true283, label %if.end287, !dbg !10486

land.lhs.true283:                                 ; preds = %land.lhs.true280
  %165 = load i32, i32* %can_mode.addr, align 4, !dbg !10487, !tbaa !2497
  %cmp284 = icmp ne i32 %165, 2, !dbg !10488
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !10489

if.then286:                                       ; preds = %land.lhs.true283
  store i32 20, i32* %saved_errno, align 4, !dbg !10490, !tbaa !2436
  br label %error, !dbg !10492

if.end287:                                        ; preds = %land.lhs.true283, %land.lhs.true280, %if.else275
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end274
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end108
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then70
  br label %if.end291

if.end291:                                        ; preds = %if.end290
  br label %for.inc292, !dbg !10493

for.inc292:                                       ; preds = %if.end291, %if.then210, %if.then198, %if.end184
  %166 = load i8*, i8** %end, align 8, !dbg !10494, !tbaa !2442
  store i8* %166, i8** %start, align 8, !dbg !10495, !tbaa !2442
  br label %for.cond, !dbg !10496, !llvm.loop !10497

for.end293:                                       ; preds = %if.then59, %for.cond
  %167 = load i8*, i8** %dest, align 8, !dbg !10499, !tbaa !2442
  %168 = load i8*, i8** %rname, align 8, !dbg !10501, !tbaa !2442
  %169 = load i64, i64* %prefix_len, align 8, !dbg !10502, !tbaa !2579
  %add.ptr294 = getelementptr inbounds i8, i8* %168, i64 %169, !dbg !10503
  %add.ptr295 = getelementptr inbounds i8, i8* %add.ptr294, i64 1, !dbg !10504
  %cmp296 = icmp ugt i8* %167, %add.ptr295, !dbg !10505
  br i1 %cmp296, label %land.lhs.true298, label %if.end305, !dbg !10506

land.lhs.true298:                                 ; preds = %for.end293
  %170 = load i8*, i8** %dest, align 8, !dbg !10507, !tbaa !2442
  %arrayidx299 = getelementptr inbounds i8, i8* %170, i64 -1, !dbg !10507, !ctir !143
  %171 = load i8, i8* %arrayidx299, align 1, !dbg !10507, !tbaa !2497
  %conv300 = sext i8 %171 to i32, !dbg !10507
  %cmp301 = icmp eq i32 %conv300, 47, !dbg !10507
  br i1 %cmp301, label %if.then303, label %if.end305, !dbg !10508

if.then303:                                       ; preds = %land.lhs.true298
  %172 = load i8*, i8** %dest, align 8, !dbg !10509, !tbaa !2442
  %incdec.ptr304 = getelementptr inbounds i8, i8* %172, i32 -1, !dbg !10509
  store i8* %incdec.ptr304, i8** %dest, align 8, !dbg !10509, !tbaa !2442
  br label %if.end305, !dbg !10509

if.end305:                                        ; preds = %if.then303, %land.lhs.true298, %for.end293
  %173 = load i8*, i8** %dest, align 8, !dbg !10510, !tbaa !2442
  store i8 0, i8* %173, align 1, !dbg !10511, !tbaa !2497, !ctir !144
  %174 = load i8*, i8** %rname_limit, align 8, !dbg !10512, !tbaa !2442
  %175 = load i8*, i8** %dest, align 8, !dbg !10514, !tbaa !2442
  %add.ptr306 = getelementptr inbounds i8, i8* %175, i64 1, !dbg !10515
  %cmp307 = icmp ne i8* %174, %add.ptr306, !dbg !10516
  br i1 %cmp307, label %if.then309, label %if.end315, !dbg !10517

if.then309:                                       ; preds = %if.end305
  %176 = load i8*, i8** %rname, align 8, !dbg !10518, !tbaa !2442
  %177 = load i8*, i8** %dest, align 8, !dbg !10519, !tbaa !2442
  %178 = load i8*, i8** %rname, align 8, !dbg !10520, !tbaa !2442
  %sub.ptr.lhs.cast310 = ptrtoint i8* %177 to i64, !dbg !10521
  %sub.ptr.rhs.cast311 = ptrtoint i8* %178 to i64, !dbg !10521
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311, !dbg !10521
  %add313 = add nsw i64 %sub.ptr.sub312, 1, !dbg !10522
  %call314 = call i8* @xrealloc(i8* %176, i64 %add313), !dbg !10523
  store i8* %call314, i8** %rname, align 8, !dbg !10524, !tbaa !2442
  br label %if.end315, !dbg !10525

if.end315:                                        ; preds = %if.then309, %if.end305
  %179 = load i8*, i8** %extra_buf, align 8, !dbg !10526, !tbaa !2442
  call void @free(i8* %179) #13, !dbg !10527
  %180 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10528, !tbaa !2442
  %tobool316 = icmp ne %struct.hash_table* %180, null, !dbg !10528
  br i1 %tobool316, label %if.then317, label %if.end318, !dbg !10530

if.then317:                                       ; preds = %if.end315
  %181 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10531, !tbaa !2442
  call void @hash_free(%struct.hash_table* %181), !dbg !10532
  br label %if.end318, !dbg !10532

if.end318:                                        ; preds = %if.then317, %if.end315
  %182 = load i8*, i8** %rname, align 8, !dbg !10533, !tbaa !2442
  store i8* %182, i8** %retval, align 8, !dbg !10534
  br label %return, !dbg !10534

error:                                            ; preds = %if.then286, %if.end211, %if.end199, %if.then183, %if.then172
  call void @llvm.dbg.label(metadata !10535), !dbg !10536
  %183 = load i8*, i8** %extra_buf, align 8, !dbg !10537, !tbaa !2442
  call void @free(i8* %183) #13, !dbg !10538
  %184 = load i8*, i8** %rname, align 8, !dbg !10539, !tbaa !2442
  call void @free(i8* %184) #13, !dbg !10540
  %185 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10541, !tbaa !2442
  %tobool319 = icmp ne %struct.hash_table* %185, null, !dbg !10541
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !10543

if.then320:                                       ; preds = %error
  %186 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !10544, !tbaa !2442
  call void @hash_free(%struct.hash_table* %186), !dbg !10545
  br label %if.end321, !dbg !10545

if.end321:                                        ; preds = %if.then320, %error
  %187 = load i32, i32* %saved_errno, align 4, !dbg !10546, !tbaa !2436
  %call322 = call i32* @__errno_location() #17, !dbg !10547
  store i32 %187, i32* %call322, align 4, !dbg !10548, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !10549
  br label %return, !dbg !10549

return:                                           ; preds = %if.end321, %if.end318, %if.then20, %if.then10, %if.then5, %if.then
  %188 = load i8*, i8** %retval, align 8, !dbg !10550
  ret i8* %188, !dbg !10550
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @seen_triple(%struct.hash_table** %ht, i8* %filename, %struct.stat* %st) #0 !dbg !10551 !ctir !1678 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table**, align 8
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %initial_capacity = alloca i64, align 8, !ctir !149
  store %struct.hash_table** %ht, %struct.hash_table*** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table*** %ht.addr, metadata !10552, metadata !DIExpression()), !dbg !10553
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10554, metadata !DIExpression()), !dbg !10555
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10556, metadata !DIExpression()), !dbg !10557
  %0 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10558, !tbaa !2442
  %1 = load %struct.hash_table*, %struct.hash_table** %0, align 8, !dbg !10560, !tbaa !2442, !ctir !244
  %cmp = icmp eq %struct.hash_table* %1, null, !dbg !10561
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10562

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %initial_capacity, metadata !10563, metadata !DIExpression()), !dbg !10565
  store i64 7, i64* %initial_capacity, align 8, !dbg !10565, !tbaa !2579
  %2 = load i64, i64* %initial_capacity, align 8, !dbg !10566, !tbaa !2579
  %call = call %struct.hash_table* @hash_initialize(i64 %2, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free), !dbg !10567
  %3 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10568, !tbaa !2442
  store %struct.hash_table* %call, %struct.hash_table** %3, align 8, !dbg !10569, !tbaa !2442, !ctir !244
  %4 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10570, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %4, align 8, !dbg !10572, !tbaa !2442, !ctir !244
  %cmp1 = icmp eq %struct.hash_table* %5, null, !dbg !10573
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10574

if.then2:                                         ; preds = %if.then
  call void @xalloc_die() #14, !dbg !10575
  unreachable, !dbg !10575

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10576

if.end3:                                          ; preds = %if.end, %entry
  %6 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10577, !tbaa !2442
  %7 = load %struct.hash_table*, %struct.hash_table** %6, align 8, !dbg !10579, !tbaa !2442, !ctir !244
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !10580, !tbaa !2442
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10581, !tbaa !2442
  %call4 = call zeroext i1 @seen_file(%struct.hash_table* %7, i8* %8, %struct.stat* %9), !dbg !10582
  br i1 %call4, label %if.then5, label %if.end6, !dbg !10583

if.then5:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !10584
  br label %return, !dbg !10584

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.hash_table**, %struct.hash_table*** %ht.addr, align 8, !dbg !10585, !tbaa !2442
  %11 = load %struct.hash_table*, %struct.hash_table** %10, align 8, !dbg !10586, !tbaa !2442, !ctir !244
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !10587, !tbaa !2442
  %13 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10588, !tbaa !2442
  call void @record_file(%struct.hash_table* %11, i8* %12, %struct.stat* %13), !dbg !10589
  store i1 false, i1* %retval, align 1, !dbg !10590
  br label %return, !dbg !10590

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i1, i1* %retval, align 1, !dbg !10591
  ret i1 %14, !dbg !10591
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #0 !dbg !10592 !ctir !570 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10595, !tbaa !2442
  store i8* %0, i8** @file_name, align 8, !dbg !10596, !tbaa !2442
  ret void, !dbg !10597
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #0 !dbg !10598 !ctir !401 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10601, !tbaa !2461
  %tobool = trunc i8 %0 to i1, !dbg !10601
  %frombool1 = zext i1 %tobool to i8, !dbg !10602
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10602, !tbaa !2461
  ret void, !dbg !10603
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #0 !dbg !10604 !ctir !341 {
entry:
  %write_error = alloca i8*, align 8, !ctir !146
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10605, !tbaa !2442
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10607
  %cmp = icmp ne i32 %call, 0, !dbg !10608
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10609

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10610, !tbaa !2461
  %tobool = trunc i8 %1 to i1, !dbg !10610
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10611

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #17, !dbg !10612
  %2 = load i32, i32* %call2, align 4, !dbg !10612, !tbaa !2436, !ctir !27
  %cmp3 = icmp eq i32 %2, 32, !dbg !10613
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10614

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10615, metadata !DIExpression()), !dbg !10617
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0)) #13, !dbg !10618
  store i8* %call4, i8** %write_error, align 8, !dbg !10617, !tbaa !2442
  %3 = load i8*, i8** @file_name, align 8, !dbg !10619, !tbaa !2442
  %tobool5 = icmp ne i8* %3, null, !dbg !10619
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10621

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #17, !dbg !10622
  %4 = load i32, i32* %call7, align 4, !dbg !10622, !tbaa !2436, !ctir !27
  %5 = load i8*, i8** @file_name, align 8, !dbg !10623, !tbaa !2442
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10624
  %6 = load i8*, i8** %write_error, align 8, !dbg !10625, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.274, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10626
  br label %if.end, !dbg !10626

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #17, !dbg !10627
  %7 = load i32, i32* %call9, align 4, !dbg !10627, !tbaa !2436, !ctir !27
  %8 = load i8*, i8** %write_error, align 8, !dbg !10628, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.275, i64 0, i64 0), i8* %8), !dbg !10629
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10630, !tbaa !2436
  call void @_exit(i32 %9) #14, !dbg !10631
  unreachable, !dbg !10631

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10632, !tbaa !2442
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10634
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10635
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10636

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10637, !tbaa !2436
  call void @_exit(i32 %11) #14, !dbg !10638
  unreachable, !dbg !10638

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10639
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10640 !ctir !1707 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !149
  %length = alloca i64, align 8, !ctir !149
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i64 0, i64* %prefix_length, align 8, !dbg !10645, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10646, metadata !DIExpression()), !dbg !10647
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10648, !tbaa !2579
  %cmp = icmp ne i64 %0, 0, !dbg !10649
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10648

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10648

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10650, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10650, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10650, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !10650
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10650
  %3 = zext i1 %cmp1 to i64, !dbg !10650
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10650
  br label %cond.end, !dbg !10648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10648
  %conv4 = sext i32 %cond3 to i64, !dbg !10651
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10652, !tbaa !2579
  %add = add i64 %4, %conv4, !dbg !10652
  store i64 %add, i64* %prefix_length, align 8, !dbg !10652, !tbaa !2579
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10653, !tbaa !2442
  %call = call i8* @last_component(i8* %5) #16, !dbg !10655
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10656, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10657
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10657
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10657
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10658, !tbaa !2579
  br label %for.cond, !dbg !10659

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10660, !tbaa !2579
  %8 = load i64, i64* %length, align 8, !dbg !10662, !tbaa !2579
  %cmp5 = icmp ult i64 %7, %8, !dbg !10663
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10664

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10665, !tbaa !2442
  %10 = load i64, i64* %length, align 8, !dbg !10665, !tbaa !2579
  %sub = sub i64 %10, 1, !dbg !10665
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10665, !ctir !146
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10665, !tbaa !2497
  %conv8 = sext i8 %11 to i32, !dbg !10665
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10665
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10667

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10668

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10665

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10669, !tbaa !2579
  %dec = add i64 %12, -1, !dbg !10669
  store i64 %dec, i64* %length, align 8, !dbg !10669, !tbaa !2579
  br label %for.cond, !dbg !10670, !llvm.loop !10671

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10673, !tbaa !2579
  ret i64 %13, !dbg !10674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #0 !dbg !10675 !ctir !572 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !149
  %append_dot = alloca i8, align 1, !ctir !141
  %dir = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10676, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10678, metadata !DIExpression()), !dbg !10679
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10680, !tbaa !2442
  %call = call i64 @dir_len(i8* %0) #16, !dbg !10681
  store i64 %call, i64* %length, align 8, !dbg !10679, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10682, metadata !DIExpression()), !dbg !10683
  %1 = load i64, i64* %length, align 8, !dbg !10684, !tbaa !2579
  %cmp = icmp eq i64 %1, 0, !dbg !10685
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10686

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10686

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10683
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10683, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10687, metadata !DIExpression()), !dbg !10688
  %3 = load i64, i64* %length, align 8, !dbg !10689, !tbaa !2579
  %4 = load i8, i8* %append_dot, align 1, !dbg !10690, !tbaa !2461
  %tobool = trunc i8 %4 to i1, !dbg !10690
  %conv = zext i1 %tobool to i64, !dbg !10690
  %add = add i64 %3, %conv, !dbg !10691
  %add1 = add i64 %add, 1, !dbg !10692
  %call2 = call noalias i8* @malloc(i64 %add1) #13, !dbg !10693
  store i8* %call2, i8** %dir, align 8, !dbg !10688, !tbaa !2442
  %5 = load i8*, i8** %dir, align 8, !dbg !10694, !tbaa !2442
  %tobool3 = icmp ne i8* %5, null, !dbg !10694
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10696

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10697
  br label %return, !dbg !10697

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10698, !tbaa !2442
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10699, !tbaa !2442
  %8 = load i64, i64* %length, align 8, !dbg !10700, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10701
  %9 = load i8, i8* %append_dot, align 1, !dbg !10702, !tbaa !2461
  %tobool4 = trunc i8 %9 to i1, !dbg !10702
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10704

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10705, !tbaa !2442
  %11 = load i64, i64* %length, align 8, !dbg !10706, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !10706
  store i64 %inc, i64* %length, align 8, !dbg !10706, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10705, !ctir !143
  store i8 46, i8* %arrayidx, align 1, !dbg !10707, !tbaa !2497
  br label %if.end6, !dbg !10705

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10708, !tbaa !2442
  %13 = load i64, i64* %length, align 8, !dbg !10709, !tbaa !2579
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10708, !ctir !143
  store i8 0, i8* %arrayidx7, align 1, !dbg !10710, !tbaa !2497
  %14 = load i8*, i8** %dir, align 8, !dbg !10711, !tbaa !2442
  store i8* %14, i8** %retval, align 8, !dbg !10712
  br label %return, !dbg !10712

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10713
  ret i8* %15, !dbg !10713
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10714 !ctir !572 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !146
  %p = alloca i8*, align 8, !ctir !146
  %saw_slash = alloca i8, align 1, !ctir !141
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10720, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10721
  store i8* %add.ptr, i8** %base, align 8, !dbg !10719, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10722, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10724, metadata !DIExpression()), !dbg !10725
  store i8 0, i8* %saw_slash, align 1, !dbg !10725, !tbaa !2461
  br label %while.cond, !dbg !10726

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10727, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !10727, !tbaa !2497, !ctir !147
  %conv = sext i8 %2 to i32, !dbg !10727
  %cmp = icmp eq i32 %conv, 47, !dbg !10727
  br i1 %cmp, label %while.body, label %while.end, !dbg !10726

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10728, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10728
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10728, !tbaa !2442
  br label %while.cond, !dbg !10726, !llvm.loop !10729

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10730, !tbaa !2442
  store i8* %4, i8** %p, align 8, !dbg !10732, !tbaa !2442
  br label %for.cond, !dbg !10733

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10734, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !10736, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %6, 0, !dbg !10737
  br i1 %tobool, label %for.body, label %for.end, !dbg !10737

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10738, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !10738, !tbaa !2497, !ctir !147
  %conv2 = sext i8 %8 to i32, !dbg !10738
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10738
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10741

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10742, !tbaa !2461
  br label %if.end7, !dbg !10743

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10744, !tbaa !2461
  %tobool5 = trunc i8 %9 to i1, !dbg !10744
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10746

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10747, !tbaa !2442
  store i8* %10, i8** %base, align 8, !dbg !10749, !tbaa !2442
  store i8 0, i8* %saw_slash, align 1, !dbg !10750, !tbaa !2461
  br label %if.end, !dbg !10751

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10752

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10753, !tbaa !2442
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10753
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10753, !tbaa !2442
  br label %for.cond, !dbg !10754, !llvm.loop !10755

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10757, !tbaa !2442
  ret i8* %12, !dbg !10758
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10759 !ctir !1707 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !149
  %prefix_len = alloca i64, align 8, !ctir !149
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10762, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10764, metadata !DIExpression()), !dbg !10765
  store i64 0, i64* %prefix_len, align 8, !dbg !10765, !tbaa !2579
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10766, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !10768
  store i64 %call, i64* %len, align 8, !dbg !10769, !tbaa !2579
  br label %for.cond, !dbg !10770

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10771, !tbaa !2579
  %cmp = icmp ult i64 1, %1, !dbg !10773
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10774

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10775, !tbaa !2442
  %3 = load i64, i64* %len, align 8, !dbg !10775, !tbaa !2579
  %sub = sub i64 %3, 1, !dbg !10775
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10775, !ctir !146
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10775, !tbaa !2497
  %conv = sext i8 %4 to i32, !dbg !10775
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10775
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10776
  br i1 %5, label %for.body, label %for.end, !dbg !10777

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10778

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10779, !tbaa !2579
  %dec = add i64 %6, -1, !dbg !10779
  store i64 %dec, i64* %len, align 8, !dbg !10779, !tbaa !2579
  br label %for.cond, !dbg !10780, !llvm.loop !10781

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10783, !tbaa !2579
  ret i64 %7, !dbg !10784
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @file_has_acl(i8* %name, %struct.stat* %sb) #0 !dbg !10785 !ctir !1715 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  %ret = alloca i64, align 8, !ctir !1650
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !10791, !tbaa !2442
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10791, !ctir !1718
  %1 = load i32, i32* %st_mode, align 8, !dbg !10791, !tbaa !4189, !ctir !201
  %and = and i32 %1, 61440, !dbg !10791
  %cmp = icmp eq i32 %and, 40960, !dbg !10791
  br i1 %cmp, label %if.end32, label %if.then, !dbg !10793

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10794, metadata !DIExpression()), !dbg !10796
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10797, !tbaa !2442
  %call = call i64 @getxattr(i8* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.284, i64 0, i64 0), i8* null, i64 0) #13, !dbg !10798
  store i64 %call, i64* %ret, align 8, !dbg !10799, !tbaa !2579
  %3 = load i64, i64* %ret, align 8, !dbg !10800, !tbaa !2579
  %cmp1 = icmp slt i64 %3, 0, !dbg !10802
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !10803

land.lhs.true:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #17, !dbg !10804
  %4 = load i32, i32* %call2, align 4, !dbg !10804, !tbaa !2436, !ctir !27
  %cmp3 = icmp eq i32 %4, 61, !dbg !10805
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !10806

if.then4:                                         ; preds = %land.lhs.true
  store i64 0, i64* %ret, align 8, !dbg !10807, !tbaa !2579
  br label %if.end7, !dbg !10808

if.else:                                          ; preds = %land.lhs.true, %if.then
  %5 = load i64, i64* %ret, align 8, !dbg !10809, !tbaa !2579
  %cmp5 = icmp sgt i64 %5, 0, !dbg !10811
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10812

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !10813
  br label %return, !dbg !10813

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then4
  %6 = load i64, i64* %ret, align 8, !dbg !10814, !tbaa !2579
  %cmp8 = icmp eq i64 %6, 0, !dbg !10816
  br i1 %cmp8, label %land.lhs.true9, label %if.end25, !dbg !10817

land.lhs.true9:                                   ; preds = %if.end7
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !10818, !tbaa !2442
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 3, !dbg !10818, !ctir !1718
  %8 = load i32, i32* %st_mode10, align 8, !dbg !10818, !tbaa !4189, !ctir !201
  %and11 = and i32 %8, 61440, !dbg !10818
  %cmp12 = icmp eq i32 %and11, 16384, !dbg !10818
  br i1 %cmp12, label %if.then13, label %if.end25, !dbg !10819

if.then13:                                        ; preds = %land.lhs.true9
  %9 = load i8*, i8** %name.addr, align 8, !dbg !10820, !tbaa !2442
  %call14 = call i64 @getxattr(i8* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.285, i64 0, i64 0), i8* null, i64 0) #13, !dbg !10822
  store i64 %call14, i64* %ret, align 8, !dbg !10823, !tbaa !2579
  %10 = load i64, i64* %ret, align 8, !dbg !10824, !tbaa !2579
  %cmp15 = icmp slt i64 %10, 0, !dbg !10826
  br i1 %cmp15, label %land.lhs.true16, label %if.else20, !dbg !10827

land.lhs.true16:                                  ; preds = %if.then13
  %call17 = call i32* @__errno_location() #17, !dbg !10828
  %11 = load i32, i32* %call17, align 4, !dbg !10828, !tbaa !2436, !ctir !27
  %cmp18 = icmp eq i32 %11, 61, !dbg !10829
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !10830

if.then19:                                        ; preds = %land.lhs.true16
  store i64 0, i64* %ret, align 8, !dbg !10831, !tbaa !2579
  br label %if.end24, !dbg !10832

if.else20:                                        ; preds = %land.lhs.true16, %if.then13
  %12 = load i64, i64* %ret, align 8, !dbg !10833, !tbaa !2579
  %cmp21 = icmp sgt i64 %12, 0, !dbg !10835
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10836

if.then22:                                        ; preds = %if.else20
  store i32 1, i32* %retval, align 4, !dbg !10837
  br label %return, !dbg !10837

if.end23:                                         ; preds = %if.else20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then19
  br label %if.end25, !dbg !10838

if.end25:                                         ; preds = %if.end24, %land.lhs.true9, %if.end7
  %13 = load i64, i64* %ret, align 8, !dbg !10839, !tbaa !2579
  %cmp26 = icmp slt i64 %13, 0, !dbg !10841
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !10842

if.then27:                                        ; preds = %if.end25
  %call28 = call i32* @__errno_location() #17, !dbg !10843
  %14 = load i32, i32* %call28, align 4, !dbg !10843, !tbaa !2436, !ctir !27
  %call29 = call zeroext i1 @acl_errno_valid(i32 %14) #17, !dbg !10844
  %conv = zext i1 %call29 to i32, !dbg !10844
  %sub = sub nsw i32 0, %conv, !dbg !10845
  store i32 %sub, i32* %retval, align 4, !dbg !10846
  br label %return, !dbg !10846

if.end30:                                         ; preds = %if.end25
  %15 = load i64, i64* %ret, align 8, !dbg !10847, !tbaa !2579
  %conv31 = trunc i64 %15 to i32, !dbg !10847
  store i32 %conv31, i32* %retval, align 4, !dbg !10848
  br label %return, !dbg !10848

if.end32:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10849
  br label %return, !dbg !10849

return:                                           ; preds = %if.end32, %if.end30, %if.then27, %if.then22, %if.then6
  %16 = load i32, i32* %retval, align 4, !dbg !10850
  ret i32 %16, !dbg !10850
}

; Function Attrs: nounwind
declare dso_local i64 @getxattr(i8*, i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #0 !dbg !10851 !ctir !1743 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1768
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1768
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10853, metadata !DIExpression()), !dbg !10854
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10859, metadata !DIExpression()), !dbg !10860
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10861, !tbaa !2442
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10863
  br i1 %cmp, label %if.then, label %if.end, !dbg !10864

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10865

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10866
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10866
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10867, !tbaa !2442
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10868, !tbaa !2442
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10869
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10870, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10871, !ctir !1769
  store i8* %call1, i8** %name, align 8, !dbg !10872, !tbaa !10873, !ctir !143
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10875, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10876, !ctir !1746
  %5 = load i64, i64* %st_ino, align 8, !dbg !10876, !tbaa !4827, !ctir !197
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10877, !tbaa !2442
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10878, !ctir !1769
  store i64 %5, i64* %st_ino2, align 8, !dbg !10879, !tbaa !10880, !ctir !258
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10881, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10882, !ctir !1746
  %8 = load i64, i64* %st_dev, align 8, !dbg !10882, !tbaa !4825, !ctir !195
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10883, !tbaa !2442
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10884, !ctir !1769
  store i64 %8, i64* %st_dev3, align 8, !dbg !10885, !tbaa !10886, !ctir !260
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10887, metadata !DIExpression()), !dbg !10889
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10890, !tbaa !2442
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10891, !tbaa !2442
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10891
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10892
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10892
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10889, !tbaa !2442
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10893, !tbaa !2442
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10895
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10896

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !10897
  unreachable, !dbg !10897

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10899, !tbaa !2442
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10901, !tbaa !2442
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10902
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10903

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10904, !tbaa !2442
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10904
  call void @triple_free(i8* %18), !dbg !10906
  br label %if.end10, !dbg !10907

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #0 !dbg !10909 !ctir !1775 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1769
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10916, metadata !DIExpression()), !dbg !10917
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10918, !tbaa !2442
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10920
  br i1 %cmp, label %if.then, label %if.end, !dbg !10921

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10922
  br label %return, !dbg !10922

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10923, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10924, !ctir !1769
  store i8* %1, i8** %name, align 8, !dbg !10925, !tbaa !10873, !ctir !143
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10926, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10927, !ctir !1746
  %3 = load i64, i64* %st_ino, align 8, !dbg !10927, !tbaa !4827, !ctir !197
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10928, !ctir !1769
  store i64 %3, i64* %st_ino1, align 8, !dbg !10929, !tbaa !10880, !ctir !258
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10930, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10931, !ctir !1746
  %5 = load i64, i64* %st_dev, align 8, !dbg !10931, !tbaa !4825, !ctir !195
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10932, !ctir !1769
  store i64 %5, i64* %st_dev2, align 8, !dbg !10933, !tbaa !10886, !ctir !260
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10934, !tbaa !2442
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10935
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10936
  %tobool = icmp ne i8* %call, null, !dbg !10937
  %lnot = xor i1 %tobool, true, !dbg !10937
  %lnot3 = xor i1 %lnot, true, !dbg !10938
  store i1 %lnot3, i1* %retval, align 1, !dbg !10939
  br label %return, !dbg !10939

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10940
  ret i1 %8, !dbg !10940
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #0 !dbg !10941 !ctir !1782 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10943, metadata !DIExpression()), !dbg !10944
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10945, metadata !DIExpression()), !dbg !10946
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10947, !tbaa !2436
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10948
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10949, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10949, !ctir !143
  store i8 %call, i8* %arrayidx, align 1, !dbg !10950, !tbaa !2497
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10951, !tbaa !2436
  %and = and i32 %2, 256, !dbg !10952
  %tobool = icmp ne i32 %and, 0, !dbg !10951
  %3 = zext i1 %tobool to i64, !dbg !10951
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10951
  %conv = trunc i32 %cond to i8, !dbg !10951
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10953, !tbaa !2442
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10953, !ctir !143
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10954, !tbaa !2497
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10955, !tbaa !2436
  %and2 = and i32 %5, 128, !dbg !10956
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10955
  %6 = zext i1 %tobool3 to i64, !dbg !10955
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10955
  %conv5 = trunc i32 %cond4 to i8, !dbg !10955
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10957, !tbaa !2442
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10957, !ctir !143
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10958, !tbaa !2497
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10959, !tbaa !2436
  %and7 = and i32 %8, 2048, !dbg !10960
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10960
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10959

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10961, !tbaa !2436
  %and9 = and i32 %9, 64, !dbg !10962
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10961
  %10 = zext i1 %tobool10 to i64, !dbg !10961
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10961
  br label %cond.end, !dbg !10959

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10963, !tbaa !2436
  %and12 = and i32 %11, 64, !dbg !10964
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10963
  %12 = zext i1 %tobool13 to i64, !dbg !10963
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10963
  br label %cond.end, !dbg !10959

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10959
  %conv16 = trunc i32 %cond15 to i8, !dbg !10965
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10966, !tbaa !2442
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10966, !ctir !143
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10967, !tbaa !2497
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10968, !tbaa !2436
  %and18 = and i32 %14, 32, !dbg !10969
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10968
  %15 = zext i1 %tobool19 to i64, !dbg !10968
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10968
  %conv21 = trunc i32 %cond20 to i8, !dbg !10968
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10970, !tbaa !2442
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10970, !ctir !143
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10971, !tbaa !2497
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10972, !tbaa !2436
  %and23 = and i32 %17, 16, !dbg !10973
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10972
  %18 = zext i1 %tobool24 to i64, !dbg !10972
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10972
  %conv26 = trunc i32 %cond25 to i8, !dbg !10972
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10974, !tbaa !2442
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10974, !ctir !143
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10975, !tbaa !2497
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10976, !tbaa !2436
  %and28 = and i32 %20, 1024, !dbg !10977
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10977
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10976

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10978, !tbaa !2436
  %and31 = and i32 %21, 8, !dbg !10979
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10978
  %22 = zext i1 %tobool32 to i64, !dbg !10978
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10978
  br label %cond.end38, !dbg !10976

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10980, !tbaa !2436
  %and35 = and i32 %23, 8, !dbg !10981
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10980
  %24 = zext i1 %tobool36 to i64, !dbg !10980
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10980
  br label %cond.end38, !dbg !10976

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10976
  %conv40 = trunc i32 %cond39 to i8, !dbg !10982
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10983, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10983, !ctir !143
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10984, !tbaa !2497
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10985, !tbaa !2436
  %and42 = and i32 %26, 4, !dbg !10986
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10985
  %27 = zext i1 %tobool43 to i64, !dbg !10985
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10985
  %conv45 = trunc i32 %cond44 to i8, !dbg !10985
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10987, !tbaa !2442
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10987, !ctir !143
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10988, !tbaa !2497
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10989, !tbaa !2436
  %and47 = and i32 %29, 2, !dbg !10990
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10989
  %30 = zext i1 %tobool48 to i64, !dbg !10989
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10989
  %conv50 = trunc i32 %cond49 to i8, !dbg !10989
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10991, !tbaa !2442
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10991, !ctir !143
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10992, !tbaa !2497
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10993, !tbaa !2436
  %and52 = and i32 %32, 512, !dbg !10994
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10994
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10993

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10995, !tbaa !2436
  %and55 = and i32 %33, 1, !dbg !10996
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10995
  %34 = zext i1 %tobool56 to i64, !dbg !10995
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10995
  br label %cond.end62, !dbg !10993

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10997, !tbaa !2436
  %and59 = and i32 %35, 1, !dbg !10998
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10997
  %36 = zext i1 %tobool60 to i64, !dbg !10997
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10997
  br label %cond.end62, !dbg !10993

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10993
  %conv64 = trunc i32 %cond63 to i8, !dbg !10999
  %37 = load i8*, i8** %str.addr, align 8, !dbg !11000, !tbaa !2442
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !11000, !ctir !143
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !11001, !tbaa !2497
  %38 = load i8*, i8** %str.addr, align 8, !dbg !11002, !tbaa !2442
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !11002, !ctir !143
  store i8 32, i8* %arrayidx66, align 1, !dbg !11003, !tbaa !2497
  %39 = load i8*, i8** %str.addr, align 8, !dbg !11004, !tbaa !2442
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !11004, !ctir !143
  store i8 0, i8* %arrayidx67, align 1, !dbg !11005, !tbaa !2497
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #0 !dbg !11007 !ctir !1809 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11010, !tbaa !2436
  %and = and i32 %0, 61440, !dbg !11010
  %cmp = icmp eq i32 %and, 32768, !dbg !11010
  br i1 %cmp, label %if.then, label %if.end, !dbg !11012

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !11013
  br label %return, !dbg !11013

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !11014, !tbaa !2436
  %and1 = and i32 %1, 61440, !dbg !11014
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !11014
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11016

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !11017
  br label %return, !dbg !11017

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11018, !tbaa !2436
  %and5 = and i32 %2, 61440, !dbg !11018
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11018
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11020

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11021
  br label %return, !dbg !11021

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11022, !tbaa !2436
  %and9 = and i32 %3, 61440, !dbg !11022
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11022
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11024

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11025
  br label %return, !dbg !11025

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11026, !tbaa !2436
  %and13 = and i32 %4, 61440, !dbg !11026
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11026
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11028

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11029
  br label %return, !dbg !11029

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11030, !tbaa !2436
  %and17 = and i32 %5, 61440, !dbg !11030
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11030
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11032

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11033
  br label %return, !dbg !11033

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11034, !tbaa !2436
  %and21 = and i32 %6, 61440, !dbg !11034
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11034
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11036

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11037
  br label %return, !dbg !11037

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11038
  br label %return, !dbg !11038

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11039
  ret i8 %7, !dbg !11039
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #0 !dbg !11040 !ctir !1784 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  store i8* %str, i8** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11045, !tbaa !2442
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11046, !ctir !1787
  %1 = load i32, i32* %st_mode, align 8, !dbg !11046, !tbaa !4189, !ctir !201
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11047, !tbaa !2442
  call void @strmode(i32 %1, i8* %2), !dbg !11048
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11049, !tbaa !2442
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11049, !ctir !1787
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11049, !tbaa !4189, !ctir !201
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11049, !tbaa !2442
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11049, !ctir !1787
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11049, !tbaa !4189, !ctir !201
  %sub = sub i32 %4, %6, !dbg !11049
  %tobool = icmp ne i32 %sub, 0, !dbg !11049
  br i1 %tobool, label %if.then, label %if.else, !dbg !11051

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11052, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11052, !ctir !143
  store i8 70, i8* %arrayidx, align 1, !dbg !11053, !tbaa !2497
  br label %if.end18, !dbg !11052

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11054, !tbaa !2442
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11054, !ctir !1787
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11054, !tbaa !4189, !ctir !201
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11054, !tbaa !2442
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11054, !ctir !1787
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11054, !tbaa !4189, !ctir !201
  %sub5 = sub i32 %9, %11, !dbg !11054
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11054
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11057

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11058, !tbaa !2442
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11058, !ctir !143
  store i8 81, i8* %arrayidx8, align 1, !dbg !11059, !tbaa !2497
  br label %if.end17, !dbg !11058

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11060, !tbaa !2442
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11060, !ctir !1787
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11060, !tbaa !4189, !ctir !201
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11060, !tbaa !2442
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11060, !ctir !1787
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11060, !tbaa !4189, !ctir !201
  %sub12 = sub i32 %14, %16, !dbg !11060
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11060
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11062

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11063, !tbaa !2442
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11063, !ctir !143
  store i8 83, i8* %arrayidx15, align 1, !dbg !11064, !tbaa !2497
  br label %if.end, !dbg !11063

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11066 !ctir !1814 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11068, metadata !DIExpression()), !dbg !11069
  store i8* %base, i8** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11074, metadata !DIExpression()), !dbg !11075
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11076, !tbaa !2442
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11077, !tbaa !2442
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11078, !tbaa !2442
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11079
  store i8* %call, i8** %p, align 8, !dbg !11075, !tbaa !2442
  %3 = load i8*, i8** %p, align 8, !dbg !11080, !tbaa !2442
  %cmp = icmp eq i8* %3, null, !dbg !11082
  br i1 %cmp, label %if.then, label %if.end, !dbg !11083

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !11084
  unreachable, !dbg !11084

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11085, !tbaa !2442
  ret i8* %4, !dbg !11086
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #0 !dbg !11087 !ctir !1814 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !146
  %dirbaselen = alloca i64, align 8, !ctir !149
  %dirlen = alloca i64, align 8, !ctir !149
  %baselen = alloca i64, align 8, !ctir !149
  %sep = alloca i8, align 1, !ctir !144
  %p_concat = alloca i8*, align 8, !ctir !143
  %p = alloca i8*, align 8, !ctir !143
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i8* %base, i8** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11095, metadata !DIExpression()), !dbg !11096
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11097, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !11098
  store i8* %call, i8** %dirbase, align 8, !dbg !11096, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11099, metadata !DIExpression()), !dbg !11100
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11101, !tbaa !2442
  %call1 = call i64 @base_len(i8* %1) #16, !dbg !11102
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11100, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11103, metadata !DIExpression()), !dbg !11104
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11105, !tbaa !2442
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11106, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11107
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11107
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11107
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11108, !tbaa !2579
  %add = add i64 %sub.ptr.sub, %4, !dbg !11109
  store i64 %add, i64* %dirlen, align 8, !dbg !11104, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11110, metadata !DIExpression()), !dbg !11111
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11112, !tbaa !2442
  %call2 = call i64 @strlen(i8* %5) #16, !dbg !11113
  store i64 %call2, i64* %baselen, align 8, !dbg !11111, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i8 0, i8* %sep, align 1, !dbg !11115, !tbaa !2497
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11116, !tbaa !2579
  %tobool = icmp ne i64 %6, 0, !dbg !11116
  br i1 %tobool, label %if.then, label %if.else, !dbg !11118

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11119, !tbaa !2442
  %8 = load i64, i64* %dirlen, align 8, !dbg !11119, !tbaa !2579
  %sub = sub i64 %8, 1, !dbg !11119
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11119, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11119, !tbaa !2497
  %conv = sext i8 %9 to i32, !dbg !11119
  %cmp = icmp eq i32 %conv, 47, !dbg !11119
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11122

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11123, !tbaa !2442
  %11 = load i8, i8* %10, align 1, !dbg !11123, !tbaa !2497, !ctir !147
  %conv4 = sext i8 %11 to i32, !dbg !11123
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11123
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11124

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11125, !tbaa !2497
  br label %if.end, !dbg !11126

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11127

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11128, !tbaa !2442
  %13 = load i8, i8* %12, align 1, !dbg !11128, !tbaa !2497, !ctir !147
  %conv8 = sext i8 %13 to i32, !dbg !11128
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11128
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11130

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11131, !tbaa !2497
  br label %if.end12, !dbg !11133

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11134, metadata !DIExpression()), !dbg !11135
  %14 = load i64, i64* %dirlen, align 8, !dbg !11136, !tbaa !2579
  %15 = load i8, i8* %sep, align 1, !dbg !11137, !tbaa !2497
  %conv14 = sext i8 %15 to i32, !dbg !11137
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11138
  %conv16 = zext i1 %cmp15 to i32, !dbg !11138
  %conv17 = sext i32 %conv16 to i64, !dbg !11139
  %add18 = add i64 %14, %conv17, !dbg !11140
  %16 = load i64, i64* %baselen, align 8, !dbg !11141, !tbaa !2579
  %add19 = add i64 %add18, %16, !dbg !11142
  %add20 = add i64 %add19, 1, !dbg !11143
  %call21 = call noalias i8* @malloc(i64 %add20) #13, !dbg !11144
  store i8* %call21, i8** %p_concat, align 8, !dbg !11135, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11145, metadata !DIExpression()), !dbg !11146
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11147, !tbaa !2442
  %cmp22 = icmp eq i8* %17, null, !dbg !11149
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11150

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11151
  br label %return, !dbg !11151

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11152, !tbaa !2442
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11153, !tbaa !2442
  %20 = load i64, i64* %dirlen, align 8, !dbg !11154, !tbaa !2579
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #13, !dbg !11155
  store i8* %call26, i8** %p, align 8, !dbg !11156, !tbaa !2442
  %21 = load i8, i8* %sep, align 1, !dbg !11157, !tbaa !2497
  %22 = load i8*, i8** %p, align 8, !dbg !11158, !tbaa !2442
  store i8 %21, i8* %22, align 1, !dbg !11159, !tbaa !2497, !ctir !144
  %23 = load i8, i8* %sep, align 1, !dbg !11160, !tbaa !2497
  %conv27 = sext i8 %23 to i32, !dbg !11160
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11161
  %conv29 = zext i1 %cmp28 to i32, !dbg !11161
  %24 = load i8*, i8** %p, align 8, !dbg !11162, !tbaa !2442
  %idx.ext = sext i32 %conv29 to i64, !dbg !11162
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11162
  store i8* %add.ptr, i8** %p, align 8, !dbg !11162, !tbaa !2442
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11163, !tbaa !2442
  %tobool30 = icmp ne i8** %25, null, !dbg !11163
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11165

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11166, !tbaa !2442
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11167, !tbaa !2442
  store i8* %26, i8** %27, align 8, !dbg !11168, !tbaa !2442, !ctir !143
  br label %if.end32, !dbg !11169

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11170, !tbaa !2442
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11171, !tbaa !2442
  %30 = load i64, i64* %baselen, align 8, !dbg !11172, !tbaa !2579
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #13, !dbg !11173
  store i8* %call33, i8** %p, align 8, !dbg !11174, !tbaa !2442
  %31 = load i8*, i8** %p, align 8, !dbg !11175, !tbaa !2442
  store i8 0, i8* %31, align 1, !dbg !11176, !tbaa !2497, !ctir !144
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11177, !tbaa !2442
  store i8* %32, i8** %retval, align 8, !dbg !11178
  br label %return, !dbg !11178

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11179
  ret i8* %33, !dbg !11179
}

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @filevercmp(i8* %s1, i8* %s2) #9 !dbg !11180 !ctir !731 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %s1_pos = alloca i8*, align 8, !ctir !146
  %s2_pos = alloca i8*, align 8, !ctir !146
  %s1_suffix = alloca i8*, align 8, !ctir !146
  %s2_suffix = alloca i8*, align 8, !ctir !146
  %s1_len = alloca i64, align 8, !ctir !149
  %s2_len = alloca i64, align 8, !ctir !149
  %result = alloca i32, align 4, !ctir !27
  %simple_cmp = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11182, metadata !DIExpression()), !dbg !11183
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11184, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.declare(metadata i8** %s1_pos, metadata !11186, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.declare(metadata i8** %s2_pos, metadata !11188, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.declare(metadata i8** %s1_suffix, metadata !11190, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.declare(metadata i8** %s2_suffix, metadata !11192, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.declare(metadata i64* %s1_len, metadata !11194, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.declare(metadata i64* %s2_len, metadata !11196, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11198, metadata !DIExpression()), !dbg !11199
  call void @llvm.dbg.declare(metadata i32* %simple_cmp, metadata !11200, metadata !DIExpression()), !dbg !11201
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !11202, !tbaa !2442
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !11203, !tbaa !2442
  %call = call i32 @strcmp(i8* %0, i8* %1) #16, !dbg !11204
  store i32 %call, i32* %simple_cmp, align 4, !dbg !11201, !tbaa !2436
  %2 = load i32, i32* %simple_cmp, align 4, !dbg !11205, !tbaa !2436
  %cmp = icmp eq i32 %2, 0, !dbg !11207
  br i1 %cmp, label %if.then, label %if.end, !dbg !11208

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11209
  br label %return, !dbg !11209

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s1.addr, align 8, !dbg !11210, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !11212, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %4, 0, !dbg !11212
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11213

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11214
  br label %return, !dbg !11214

if.end2:                                          ; preds = %if.end
  %5 = load i8*, i8** %s2.addr, align 8, !dbg !11215, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !11217, !tbaa !2497, !ctir !147
  %tobool3 = icmp ne i8 %6, 0, !dbg !11217
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11218

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !11219
  br label %return, !dbg !11219

if.end5:                                          ; preds = %if.end2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11220, !tbaa !2442
  %call6 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.298, i64 0, i64 0), i8* %7) #16, !dbg !11222
  %cmp7 = icmp eq i32 0, %call6, !dbg !11223
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11224

if.then8:                                         ; preds = %if.end5
  store i32 -1, i32* %retval, align 4, !dbg !11225
  br label %return, !dbg !11225

if.end9:                                          ; preds = %if.end5
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !11226, !tbaa !2442
  %call10 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.298, i64 0, i64 0), i8* %8) #16, !dbg !11228
  %cmp11 = icmp eq i32 0, %call10, !dbg !11229
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11230

if.then12:                                        ; preds = %if.end9
  store i32 1, i32* %retval, align 4, !dbg !11231
  br label %return, !dbg !11231

if.end13:                                         ; preds = %if.end9
  %9 = load i8*, i8** %s1.addr, align 8, !dbg !11232, !tbaa !2442
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.299, i64 0, i64 0), i8* %9) #16, !dbg !11234
  %cmp15 = icmp eq i32 0, %call14, !dbg !11235
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11236

if.then16:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !11237
  br label %return, !dbg !11237

if.end17:                                         ; preds = %if.end13
  %10 = load i8*, i8** %s2.addr, align 8, !dbg !11238, !tbaa !2442
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.299, i64 0, i64 0), i8* %10) #16, !dbg !11240
  %cmp19 = icmp eq i32 0, %call18, !dbg !11241
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11242

if.then20:                                        ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !11243
  br label %return, !dbg !11243

if.end21:                                         ; preds = %if.end17
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !11244, !tbaa !2442
  %12 = load i8, i8* %11, align 1, !dbg !11246, !tbaa !2497, !ctir !147
  %conv = sext i8 %12 to i32, !dbg !11246
  %cmp22 = icmp eq i32 %conv, 46, !dbg !11247
  br i1 %cmp22, label %land.lhs.true, label %if.end28, !dbg !11248

land.lhs.true:                                    ; preds = %if.end21
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !11249, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !11250, !tbaa !2497, !ctir !147
  %conv24 = sext i8 %14 to i32, !dbg !11250
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !11251
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11252

if.then27:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !11253
  br label %return, !dbg !11253

if.end28:                                         ; preds = %land.lhs.true, %if.end21
  %15 = load i8*, i8** %s1.addr, align 8, !dbg !11254, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !11256, !tbaa !2497, !ctir !147
  %conv29 = sext i8 %16 to i32, !dbg !11256
  %cmp30 = icmp ne i32 %conv29, 46, !dbg !11257
  br i1 %cmp30, label %land.lhs.true32, label %if.end37, !dbg !11258

land.lhs.true32:                                  ; preds = %if.end28
  %17 = load i8*, i8** %s2.addr, align 8, !dbg !11259, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !11260, !tbaa !2497, !ctir !147
  %conv33 = sext i8 %18 to i32, !dbg !11260
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !11261
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11262

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %retval, align 4, !dbg !11263
  br label %return, !dbg !11263

if.end37:                                         ; preds = %land.lhs.true32, %if.end28
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11264, !tbaa !2442
  %20 = load i8, i8* %19, align 1, !dbg !11266, !tbaa !2497, !ctir !147
  %conv38 = sext i8 %20 to i32, !dbg !11266
  %cmp39 = icmp eq i32 %conv38, 46, !dbg !11267
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !11268

land.lhs.true41:                                  ; preds = %if.end37
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !11269, !tbaa !2442
  %22 = load i8, i8* %21, align 1, !dbg !11270, !tbaa !2497, !ctir !147
  %conv42 = sext i8 %22 to i32, !dbg !11270
  %cmp43 = icmp eq i32 %conv42, 46, !dbg !11271
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !11272

if.then45:                                        ; preds = %land.lhs.true41
  %23 = load i8*, i8** %s1.addr, align 8, !dbg !11273, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11273
  store i8* %incdec.ptr, i8** %s1.addr, align 8, !dbg !11273, !tbaa !2442
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11275, !tbaa !2442
  %incdec.ptr46 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11275
  store i8* %incdec.ptr46, i8** %s2.addr, align 8, !dbg !11275, !tbaa !2442
  br label %if.end47, !dbg !11276

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.end37
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !11277, !tbaa !2442
  store i8* %25, i8** %s1_pos, align 8, !dbg !11278, !tbaa !2442
  %26 = load i8*, i8** %s2.addr, align 8, !dbg !11279, !tbaa !2442
  store i8* %26, i8** %s2_pos, align 8, !dbg !11280, !tbaa !2442
  %call48 = call i8* @match_suffix(i8** %s1_pos), !dbg !11281
  store i8* %call48, i8** %s1_suffix, align 8, !dbg !11282, !tbaa !2442
  %call49 = call i8* @match_suffix(i8** %s2_pos), !dbg !11283
  store i8* %call49, i8** %s2_suffix, align 8, !dbg !11284, !tbaa !2442
  %27 = load i8*, i8** %s1_suffix, align 8, !dbg !11285, !tbaa !2442
  %tobool50 = icmp ne i8* %27, null, !dbg !11285
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !11285

cond.true:                                        ; preds = %if.end47
  %28 = load i8*, i8** %s1_suffix, align 8, !dbg !11286, !tbaa !2442
  br label %cond.end, !dbg !11285

cond.false:                                       ; preds = %if.end47
  %29 = load i8*, i8** %s1_pos, align 8, !dbg !11287, !tbaa !2442
  br label %cond.end, !dbg !11285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11285
  %30 = load i8*, i8** %s1.addr, align 8, !dbg !11288, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64, !dbg !11289
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !11289
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11289
  store i64 %sub.ptr.sub, i64* %s1_len, align 8, !dbg !11290, !tbaa !2579
  %31 = load i8*, i8** %s2_suffix, align 8, !dbg !11291, !tbaa !2442
  %tobool51 = icmp ne i8* %31, null, !dbg !11291
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !11291

cond.true52:                                      ; preds = %cond.end
  %32 = load i8*, i8** %s2_suffix, align 8, !dbg !11292, !tbaa !2442
  br label %cond.end54, !dbg !11291

cond.false53:                                     ; preds = %cond.end
  %33 = load i8*, i8** %s2_pos, align 8, !dbg !11293, !tbaa !2442
  br label %cond.end54, !dbg !11291

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %32, %cond.true52 ], [ %33, %cond.false53 ], !dbg !11291
  %34 = load i8*, i8** %s2.addr, align 8, !dbg !11294, !tbaa !2442
  %sub.ptr.lhs.cast56 = ptrtoint i8* %cond55 to i64, !dbg !11295
  %sub.ptr.rhs.cast57 = ptrtoint i8* %34 to i64, !dbg !11295
  %sub.ptr.sub58 = sub i64 %sub.ptr.lhs.cast56, %sub.ptr.rhs.cast57, !dbg !11295
  store i64 %sub.ptr.sub58, i64* %s2_len, align 8, !dbg !11296, !tbaa !2579
  %35 = load i8*, i8** %s1_suffix, align 8, !dbg !11297, !tbaa !2442
  %tobool59 = icmp ne i8* %35, null, !dbg !11297
  br i1 %tobool59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11299

lor.lhs.false:                                    ; preds = %cond.end54
  %36 = load i8*, i8** %s2_suffix, align 8, !dbg !11300, !tbaa !2442
  %tobool60 = icmp ne i8* %36, null, !dbg !11300
  br i1 %tobool60, label %land.lhs.true61, label %if.end75, !dbg !11301

land.lhs.true61:                                  ; preds = %lor.lhs.false, %cond.end54
  %37 = load i64, i64* %s1_len, align 8, !dbg !11302, !tbaa !2579
  %38 = load i64, i64* %s2_len, align 8, !dbg !11303, !tbaa !2579
  %cmp62 = icmp eq i64 %37, %38, !dbg !11304
  br i1 %cmp62, label %land.lhs.true64, label %if.end75, !dbg !11305

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !11306, !tbaa !2442
  %40 = load i8*, i8** %s2.addr, align 8, !dbg !11307, !tbaa !2442
  %41 = load i64, i64* %s1_len, align 8, !dbg !11308, !tbaa !2579
  %call65 = call i32 @strncmp(i8* %39, i8* %40, i64 %41) #16, !dbg !11309
  %cmp66 = icmp eq i32 0, %call65, !dbg !11310
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !11311

if.then68:                                        ; preds = %land.lhs.true64
  %42 = load i8*, i8** %s1_pos, align 8, !dbg !11312, !tbaa !2442
  %43 = load i8*, i8** %s1.addr, align 8, !dbg !11314, !tbaa !2442
  %sub.ptr.lhs.cast69 = ptrtoint i8* %42 to i64, !dbg !11315
  %sub.ptr.rhs.cast70 = ptrtoint i8* %43 to i64, !dbg !11315
  %sub.ptr.sub71 = sub i64 %sub.ptr.lhs.cast69, %sub.ptr.rhs.cast70, !dbg !11315
  store i64 %sub.ptr.sub71, i64* %s1_len, align 8, !dbg !11316, !tbaa !2579
  %44 = load i8*, i8** %s2_pos, align 8, !dbg !11317, !tbaa !2442
  %45 = load i8*, i8** %s2.addr, align 8, !dbg !11318, !tbaa !2442
  %sub.ptr.lhs.cast72 = ptrtoint i8* %44 to i64, !dbg !11319
  %sub.ptr.rhs.cast73 = ptrtoint i8* %45 to i64, !dbg !11319
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73, !dbg !11319
  store i64 %sub.ptr.sub74, i64* %s2_len, align 8, !dbg !11320, !tbaa !2579
  br label %if.end75, !dbg !11321

if.end75:                                         ; preds = %if.then68, %land.lhs.true64, %land.lhs.true61, %lor.lhs.false
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !11322, !tbaa !2442
  %47 = load i64, i64* %s1_len, align 8, !dbg !11323, !tbaa !2579
  %48 = load i8*, i8** %s2.addr, align 8, !dbg !11324, !tbaa !2442
  %49 = load i64, i64* %s2_len, align 8, !dbg !11325, !tbaa !2579
  %call76 = call i32 @verrevcmp(i8* %46, i64 %47, i8* %48, i64 %49) #16, !dbg !11326
  store i32 %call76, i32* %result, align 4, !dbg !11327, !tbaa !2436
  %50 = load i32, i32* %result, align 4, !dbg !11328, !tbaa !2436
  %cmp77 = icmp eq i32 %50, 0, !dbg !11329
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !11328

cond.true79:                                      ; preds = %if.end75
  %51 = load i32, i32* %simple_cmp, align 4, !dbg !11330, !tbaa !2436
  br label %cond.end81, !dbg !11328

cond.false80:                                     ; preds = %if.end75
  %52 = load i32, i32* %result, align 4, !dbg !11331, !tbaa !2436
  br label %cond.end81, !dbg !11328

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ %51, %cond.true79 ], [ %52, %cond.false80 ], !dbg !11328
  store i32 %cond82, i32* %retval, align 4, !dbg !11332
  br label %return, !dbg !11332

return:                                           ; preds = %cond.end81, %if.then36, %if.then27, %if.then20, %if.then16, %if.then12, %if.then8, %if.then4, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !11333
  ret i32 %53, !dbg !11333
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @match_suffix(i8** %str) #0 !dbg !11334 !ctir !1822 {
entry:
  %str.addr = alloca i8**, align 8
  %match = alloca i8*, align 8, !ctir !146
  %read_alpha = alloca i8, align 1, !ctir !141
  store i8** %str, i8*** %str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata i8** %match, metadata !11337, metadata !DIExpression()), !dbg !11338
  store i8* null, i8** %match, align 8, !dbg !11338, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %read_alpha, metadata !11339, metadata !DIExpression()), !dbg !11340
  store i8 0, i8* %read_alpha, align 1, !dbg !11340, !tbaa !2461
  br label %while.cond, !dbg !11341

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !11342, !tbaa !2442
  %1 = load i8*, i8** %0, align 8, !dbg !11343, !tbaa !2442, !ctir !146
  %2 = load i8, i8* %1, align 1, !dbg !11344, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !11341
  br i1 %tobool, label %while.body, label %while.end, !dbg !11341

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %read_alpha, align 1, !dbg !11345, !tbaa !2461
  %tobool1 = trunc i8 %3 to i1, !dbg !11345
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11348

if.then:                                          ; preds = %while.body
  store i8 0, i8* %read_alpha, align 1, !dbg !11349, !tbaa !2461
  %4 = load i8**, i8*** %str.addr, align 8, !dbg !11351, !tbaa !2442
  %5 = load i8*, i8** %4, align 8, !dbg !11353, !tbaa !2442, !ctir !146
  %6 = load i8, i8* %5, align 1, !dbg !11354, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !11354
  %call = call zeroext i1 @c_isalpha(i32 %conv), !dbg !11355
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !11356

land.lhs.true:                                    ; preds = %if.then
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !11357, !tbaa !2442
  %8 = load i8*, i8** %7, align 8, !dbg !11358, !tbaa !2442, !ctir !146
  %9 = load i8, i8* %8, align 1, !dbg !11359, !tbaa !2497, !ctir !147
  %conv2 = sext i8 %9 to i32, !dbg !11359
  %cmp = icmp ne i32 126, %conv2, !dbg !11360
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11361

if.then4:                                         ; preds = %land.lhs.true
  store i8* null, i8** %match, align 8, !dbg !11362, !tbaa !2442
  br label %if.end, !dbg !11363

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end22, !dbg !11364

if.else:                                          ; preds = %while.body
  %10 = load i8**, i8*** %str.addr, align 8, !dbg !11365, !tbaa !2442
  %11 = load i8*, i8** %10, align 8, !dbg !11367, !tbaa !2442, !ctir !146
  %12 = load i8, i8* %11, align 1, !dbg !11368, !tbaa !2497, !ctir !147
  %conv5 = sext i8 %12 to i32, !dbg !11368
  %cmp6 = icmp eq i32 46, %conv5, !dbg !11369
  br i1 %cmp6, label %if.then8, label %if.else12, !dbg !11370

if.then8:                                         ; preds = %if.else
  store i8 1, i8* %read_alpha, align 1, !dbg !11371, !tbaa !2461
  %13 = load i8*, i8** %match, align 8, !dbg !11373, !tbaa !2442
  %tobool9 = icmp ne i8* %13, null, !dbg !11373
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11375

if.then10:                                        ; preds = %if.then8
  %14 = load i8**, i8*** %str.addr, align 8, !dbg !11376, !tbaa !2442
  %15 = load i8*, i8** %14, align 8, !dbg !11377, !tbaa !2442, !ctir !146
  store i8* %15, i8** %match, align 8, !dbg !11378, !tbaa !2442
  br label %if.end11, !dbg !11379

if.end11:                                         ; preds = %if.then10, %if.then8
  br label %if.end21, !dbg !11380

if.else12:                                        ; preds = %if.else
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !11381, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !11383, !tbaa !2442, !ctir !146
  %18 = load i8, i8* %17, align 1, !dbg !11384, !tbaa !2497, !ctir !147
  %conv13 = sext i8 %18 to i32, !dbg !11384
  %call14 = call zeroext i1 @c_isalnum(i32 %conv13), !dbg !11385
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !11386

land.lhs.true15:                                  ; preds = %if.else12
  %19 = load i8**, i8*** %str.addr, align 8, !dbg !11387, !tbaa !2442
  %20 = load i8*, i8** %19, align 8, !dbg !11388, !tbaa !2442, !ctir !146
  %21 = load i8, i8* %20, align 1, !dbg !11389, !tbaa !2497, !ctir !147
  %conv16 = sext i8 %21 to i32, !dbg !11389
  %cmp17 = icmp ne i32 126, %conv16, !dbg !11390
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11391

if.then19:                                        ; preds = %land.lhs.true15
  store i8* null, i8** %match, align 8, !dbg !11392, !tbaa !2442
  br label %if.end20, !dbg !11393

if.end20:                                         ; preds = %if.then19, %land.lhs.true15, %if.else12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end
  %22 = load i8**, i8*** %str.addr, align 8, !dbg !11394, !tbaa !2442
  %23 = load i8*, i8** %22, align 8, !dbg !11395, !tbaa !2442, !ctir !146
  %incdec.ptr = getelementptr inbounds i8, i8* %23, i32 1, !dbg !11395
  store i8* %incdec.ptr, i8** %22, align 8, !dbg !11395, !tbaa !2442, !ctir !146
  br label %while.cond, !dbg !11341, !llvm.loop !11396

while.end:                                        ; preds = %while.cond
  %24 = load i8*, i8** %match, align 8, !dbg !11398, !tbaa !2442
  ret i8* %24, !dbg !11399
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @verrevcmp(i8* %s1, i64 %s1_len, i8* %s2, i64 %s2_len) #9 !dbg !11400 !ctir !1824 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s1_len.addr = alloca i64, align 8
  %s2.addr = alloca i8*, align 8
  %s2_len.addr = alloca i64, align 8
  %s1_pos = alloca i64, align 8, !ctir !149
  %s2_pos = alloca i64, align 8, !ctir !149
  %first_diff = alloca i32, align 4, !ctir !27
  %s1_c = alloca i32, align 4, !ctir !27
  %s2_c = alloca i32, align 4, !ctir !27
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !11401, metadata !DIExpression()), !dbg !11402
  store i64 %s1_len, i64* %s1_len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s1_len.addr, metadata !11403, metadata !DIExpression()), !dbg !11404
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !11405, metadata !DIExpression()), !dbg !11406
  store i64 %s2_len, i64* %s2_len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s2_len.addr, metadata !11407, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.declare(metadata i64* %s1_pos, metadata !11409, metadata !DIExpression()), !dbg !11410
  store i64 0, i64* %s1_pos, align 8, !dbg !11410, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s2_pos, metadata !11411, metadata !DIExpression()), !dbg !11412
  store i64 0, i64* %s2_pos, align 8, !dbg !11412, !tbaa !2579
  br label %while.cond, !dbg !11413

while.cond:                                       ; preds = %if.end77, %entry
  %0 = load i64, i64* %s1_pos, align 8, !dbg !11414, !tbaa !2579
  %1 = load i64, i64* %s1_len.addr, align 8, !dbg !11415, !tbaa !2579
  %cmp = icmp ult i64 %0, %1, !dbg !11416
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11417

lor.rhs:                                          ; preds = %while.cond
  %2 = load i64, i64* %s2_pos, align 8, !dbg !11418, !tbaa !2579
  %3 = load i64, i64* %s2_len.addr, align 8, !dbg !11419, !tbaa !2579
  %cmp1 = icmp ult i64 %2, %3, !dbg !11420
  br label %lor.end, !dbg !11417

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end78, !dbg !11413

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %first_diff, metadata !11421, metadata !DIExpression()), !dbg !11423
  store i32 0, i32* %first_diff, align 4, !dbg !11423, !tbaa !2436
  br label %while.cond2, !dbg !11424

while.cond2:                                      ; preds = %if.end, %while.body
  %5 = load i64, i64* %s1_pos, align 8, !dbg !11425, !tbaa !2579
  %6 = load i64, i64* %s1_len.addr, align 8, !dbg !11426, !tbaa !2579
  %cmp3 = icmp ult i64 %5, %6, !dbg !11427
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs4, !dbg !11428

land.lhs.true:                                    ; preds = %while.cond2
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !11429, !tbaa !2442
  %8 = load i64, i64* %s1_pos, align 8, !dbg !11430, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11429, !ctir !146
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11429, !tbaa !2497
  %conv = sext i8 %9 to i32, !dbg !11429
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11431
  br i1 %call, label %lor.rhs4, label %lor.end10, !dbg !11432

lor.rhs4:                                         ; preds = %land.lhs.true, %while.cond2
  %10 = load i64, i64* %s2_pos, align 8, !dbg !11433, !tbaa !2579
  %11 = load i64, i64* %s2_len.addr, align 8, !dbg !11434, !tbaa !2579
  %cmp5 = icmp ult i64 %10, %11, !dbg !11435
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !11436

land.rhs:                                         ; preds = %lor.rhs4
  %12 = load i8*, i8** %s2.addr, align 8, !dbg !11437, !tbaa !2442
  %13 = load i64, i64* %s2_pos, align 8, !dbg !11438, !tbaa !2579
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11437, !ctir !146
  %14 = load i8, i8* %arrayidx7, align 1, !dbg !11437, !tbaa !2497
  %conv8 = sext i8 %14 to i32, !dbg !11437
  %call9 = call zeroext i1 @c_isdigit(i32 %conv8), !dbg !11439
  %lnot = xor i1 %call9, true, !dbg !11440
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs4
  %15 = phi i1 [ false, %lor.rhs4 ], [ %lnot, %land.rhs ], !dbg !11441
  br label %lor.end10, !dbg !11432

lor.end10:                                        ; preds = %land.end, %land.lhs.true
  %16 = phi i1 [ true, %land.lhs.true ], [ %15, %land.end ]
  br i1 %16, label %while.body11, label %while.end, !dbg !11424

while.body11:                                     ; preds = %lor.end10
  call void @llvm.dbg.declare(metadata i32* %s1_c, metadata !11442, metadata !DIExpression()), !dbg !11444
  %17 = load i64, i64* %s1_pos, align 8, !dbg !11445, !tbaa !2579
  %18 = load i64, i64* %s1_len.addr, align 8, !dbg !11446, !tbaa !2579
  %cmp12 = icmp eq i64 %17, %18, !dbg !11447
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11448

cond.true:                                        ; preds = %while.body11
  br label %cond.end, !dbg !11448

cond.false:                                       ; preds = %while.body11
  %19 = load i8*, i8** %s1.addr, align 8, !dbg !11449, !tbaa !2442
  %20 = load i64, i64* %s1_pos, align 8, !dbg !11450, !tbaa !2579
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11449, !ctir !146
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11449, !tbaa !2497
  %call15 = call i32 @order(i8 zeroext %21), !dbg !11451
  br label %cond.end, !dbg !11448

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call15, %cond.false ], !dbg !11448
  store i32 %cond, i32* %s1_c, align 4, !dbg !11444, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %s2_c, metadata !11452, metadata !DIExpression()), !dbg !11453
  %22 = load i64, i64* %s2_pos, align 8, !dbg !11454, !tbaa !2579
  %23 = load i64, i64* %s2_len.addr, align 8, !dbg !11455, !tbaa !2579
  %cmp16 = icmp eq i64 %22, %23, !dbg !11456
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !11457

cond.true18:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !11457

cond.false19:                                     ; preds = %cond.end
  %24 = load i8*, i8** %s2.addr, align 8, !dbg !11458, !tbaa !2442
  %25 = load i64, i64* %s2_pos, align 8, !dbg !11459, !tbaa !2579
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !11458, !ctir !146
  %26 = load i8, i8* %arrayidx20, align 1, !dbg !11458, !tbaa !2497
  %call21 = call i32 @order(i8 zeroext %26), !dbg !11460
  br label %cond.end22, !dbg !11457

cond.end22:                                       ; preds = %cond.false19, %cond.true18
  %cond23 = phi i32 [ 0, %cond.true18 ], [ %call21, %cond.false19 ], !dbg !11457
  store i32 %cond23, i32* %s2_c, align 4, !dbg !11453, !tbaa !2436
  %27 = load i32, i32* %s1_c, align 4, !dbg !11461, !tbaa !2436
  %28 = load i32, i32* %s2_c, align 4, !dbg !11463, !tbaa !2436
  %cmp24 = icmp ne i32 %27, %28, !dbg !11464
  br i1 %cmp24, label %if.then, label %if.end, !dbg !11465

if.then:                                          ; preds = %cond.end22
  %29 = load i32, i32* %s1_c, align 4, !dbg !11466, !tbaa !2436
  %30 = load i32, i32* %s2_c, align 4, !dbg !11467, !tbaa !2436
  %sub = sub nsw i32 %29, %30, !dbg !11468
  store i32 %sub, i32* %retval, align 4, !dbg !11469
  br label %return, !dbg !11469

if.end:                                           ; preds = %cond.end22
  %31 = load i64, i64* %s1_pos, align 8, !dbg !11470, !tbaa !2579
  %inc = add i64 %31, 1, !dbg !11470
  store i64 %inc, i64* %s1_pos, align 8, !dbg !11470, !tbaa !2579
  %32 = load i64, i64* %s2_pos, align 8, !dbg !11471, !tbaa !2579
  %inc26 = add i64 %32, 1, !dbg !11471
  store i64 %inc26, i64* %s2_pos, align 8, !dbg !11471, !tbaa !2579
  br label %while.cond2, !dbg !11424, !llvm.loop !11472

while.end:                                        ; preds = %lor.end10
  br label %while.cond27, !dbg !11474

while.cond27:                                     ; preds = %while.body32, %while.end
  %33 = load i8*, i8** %s1.addr, align 8, !dbg !11475, !tbaa !2442
  %34 = load i64, i64* %s1_pos, align 8, !dbg !11476, !tbaa !2579
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !11475, !ctir !146
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !11475, !tbaa !2497
  %conv29 = sext i8 %35 to i32, !dbg !11475
  %cmp30 = icmp eq i32 %conv29, 48, !dbg !11477
  br i1 %cmp30, label %while.body32, label %while.end34, !dbg !11474

while.body32:                                     ; preds = %while.cond27
  %36 = load i64, i64* %s1_pos, align 8, !dbg !11478, !tbaa !2579
  %inc33 = add i64 %36, 1, !dbg !11478
  store i64 %inc33, i64* %s1_pos, align 8, !dbg !11478, !tbaa !2579
  br label %while.cond27, !dbg !11474, !llvm.loop !11479

while.end34:                                      ; preds = %while.cond27
  br label %while.cond35, !dbg !11480

while.cond35:                                     ; preds = %while.body40, %while.end34
  %37 = load i8*, i8** %s2.addr, align 8, !dbg !11481, !tbaa !2442
  %38 = load i64, i64* %s2_pos, align 8, !dbg !11482, !tbaa !2579
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !11481, !ctir !146
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !11481, !tbaa !2497
  %conv37 = sext i8 %39 to i32, !dbg !11481
  %cmp38 = icmp eq i32 %conv37, 48, !dbg !11483
  br i1 %cmp38, label %while.body40, label %while.end42, !dbg !11480

while.body40:                                     ; preds = %while.cond35
  %40 = load i64, i64* %s2_pos, align 8, !dbg !11484, !tbaa !2579
  %inc41 = add i64 %40, 1, !dbg !11484
  store i64 %inc41, i64* %s2_pos, align 8, !dbg !11484, !tbaa !2579
  br label %while.cond35, !dbg !11480, !llvm.loop !11485

while.end42:                                      ; preds = %while.cond35
  br label %while.cond43, !dbg !11486

while.cond43:                                     ; preds = %if.end61, %while.end42
  %41 = load i8*, i8** %s1.addr, align 8, !dbg !11487, !tbaa !2442
  %42 = load i64, i64* %s1_pos, align 8, !dbg !11488, !tbaa !2579
  %arrayidx44 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !11487, !ctir !146
  %43 = load i8, i8* %arrayidx44, align 1, !dbg !11487, !tbaa !2497
  %conv45 = sext i8 %43 to i32, !dbg !11487
  %call46 = call zeroext i1 @c_isdigit(i32 %conv45), !dbg !11489
  br i1 %call46, label %land.rhs48, label %land.end53, !dbg !11490

land.rhs48:                                       ; preds = %while.cond43
  %44 = load i8*, i8** %s2.addr, align 8, !dbg !11491, !tbaa !2442
  %45 = load i64, i64* %s2_pos, align 8, !dbg !11492, !tbaa !2579
  %arrayidx49 = getelementptr inbounds i8, i8* %44, i64 %45, !dbg !11491, !ctir !146
  %46 = load i8, i8* %arrayidx49, align 1, !dbg !11491, !tbaa !2497
  %conv50 = sext i8 %46 to i32, !dbg !11491
  %call51 = call zeroext i1 @c_isdigit(i32 %conv50), !dbg !11493
  br label %land.end53

land.end53:                                       ; preds = %land.rhs48, %while.cond43
  %47 = phi i1 [ false, %while.cond43 ], [ %call51, %land.rhs48 ], !dbg !11441
  br i1 %47, label %while.body54, label %while.end64, !dbg !11486

while.body54:                                     ; preds = %land.end53
  %48 = load i32, i32* %first_diff, align 4, !dbg !11494, !tbaa !2436
  %tobool = icmp ne i32 %48, 0, !dbg !11494
  br i1 %tobool, label %if.end61, label %if.then55, !dbg !11497

if.then55:                                        ; preds = %while.body54
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !11498, !tbaa !2442
  %50 = load i64, i64* %s1_pos, align 8, !dbg !11499, !tbaa !2579
  %arrayidx56 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !11498, !ctir !146
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !11498, !tbaa !2497
  %conv57 = sext i8 %51 to i32, !dbg !11498
  %52 = load i8*, i8** %s2.addr, align 8, !dbg !11500, !tbaa !2442
  %53 = load i64, i64* %s2_pos, align 8, !dbg !11501, !tbaa !2579
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !11500, !ctir !146
  %54 = load i8, i8* %arrayidx58, align 1, !dbg !11500, !tbaa !2497
  %conv59 = sext i8 %54 to i32, !dbg !11500
  %sub60 = sub nsw i32 %conv57, %conv59, !dbg !11502
  store i32 %sub60, i32* %first_diff, align 4, !dbg !11503, !tbaa !2436
  br label %if.end61, !dbg !11504

if.end61:                                         ; preds = %if.then55, %while.body54
  %55 = load i64, i64* %s1_pos, align 8, !dbg !11505, !tbaa !2579
  %inc62 = add i64 %55, 1, !dbg !11505
  store i64 %inc62, i64* %s1_pos, align 8, !dbg !11505, !tbaa !2579
  %56 = load i64, i64* %s2_pos, align 8, !dbg !11506, !tbaa !2579
  %inc63 = add i64 %56, 1, !dbg !11506
  store i64 %inc63, i64* %s2_pos, align 8, !dbg !11506, !tbaa !2579
  br label %while.cond43, !dbg !11486, !llvm.loop !11507

while.end64:                                      ; preds = %land.end53
  %57 = load i8*, i8** %s1.addr, align 8, !dbg !11509, !tbaa !2442
  %58 = load i64, i64* %s1_pos, align 8, !dbg !11511, !tbaa !2579
  %arrayidx65 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !11509, !ctir !146
  %59 = load i8, i8* %arrayidx65, align 1, !dbg !11509, !tbaa !2497
  %conv66 = sext i8 %59 to i32, !dbg !11509
  %call67 = call zeroext i1 @c_isdigit(i32 %conv66), !dbg !11512
  br i1 %call67, label %if.then68, label %if.end69, !dbg !11513

if.then68:                                        ; preds = %while.end64
  store i32 1, i32* %retval, align 4, !dbg !11514
  br label %return, !dbg !11514

if.end69:                                         ; preds = %while.end64
  %60 = load i8*, i8** %s2.addr, align 8, !dbg !11515, !tbaa !2442
  %61 = load i64, i64* %s2_pos, align 8, !dbg !11517, !tbaa !2579
  %arrayidx70 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !11515, !ctir !146
  %62 = load i8, i8* %arrayidx70, align 1, !dbg !11515, !tbaa !2497
  %conv71 = sext i8 %62 to i32, !dbg !11515
  %call72 = call zeroext i1 @c_isdigit(i32 %conv71), !dbg !11518
  br i1 %call72, label %if.then73, label %if.end74, !dbg !11519

if.then73:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !11520
  br label %return, !dbg !11520

if.end74:                                         ; preds = %if.end69
  %63 = load i32, i32* %first_diff, align 4, !dbg !11521, !tbaa !2436
  %tobool75 = icmp ne i32 %63, 0, !dbg !11521
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11523

if.then76:                                        ; preds = %if.end74
  %64 = load i32, i32* %first_diff, align 4, !dbg !11524, !tbaa !2436
  store i32 %64, i32* %retval, align 4, !dbg !11525
  br label %return, !dbg !11525

if.end77:                                         ; preds = %if.end74
  br label %while.cond, !dbg !11413, !llvm.loop !11526

while.end78:                                      ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !11528
  br label %return, !dbg !11528

return:                                           ; preds = %while.end78, %if.then76, %if.then73, %if.then68, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11529
  ret i32 %65, !dbg !11529
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @order(i8 zeroext %c) #0 !dbg !11530 !ctir !1826 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !11531, metadata !DIExpression()), !dbg !11532
  %0 = load i8, i8* %c.addr, align 1, !dbg !11533, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !11533
  %call = call zeroext i1 @c_isdigit(i32 %conv), !dbg !11535
  br i1 %call, label %if.then, label %if.else, !dbg !11536

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11537
  br label %return, !dbg !11537

if.else:                                          ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !11538, !tbaa !2497
  %conv1 = zext i8 %1 to i32, !dbg !11538
  %call2 = call zeroext i1 @c_isalpha(i32 %conv1), !dbg !11540
  br i1 %call2, label %if.then3, label %if.else5, !dbg !11541

if.then3:                                         ; preds = %if.else
  %2 = load i8, i8* %c.addr, align 1, !dbg !11542, !tbaa !2497
  %conv4 = zext i8 %2 to i32, !dbg !11542
  store i32 %conv4, i32* %retval, align 4, !dbg !11543
  br label %return, !dbg !11543

if.else5:                                         ; preds = %if.else
  %3 = load i8, i8* %c.addr, align 1, !dbg !11544, !tbaa !2497
  %conv6 = zext i8 %3 to i32, !dbg !11544
  %cmp = icmp eq i32 %conv6, 126, !dbg !11546
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !11547

if.then8:                                         ; preds = %if.else5
  store i32 -1, i32* %retval, align 4, !dbg !11548
  br label %return, !dbg !11548

if.else9:                                         ; preds = %if.else5
  %4 = load i8, i8* %c.addr, align 1, !dbg !11549, !tbaa !2497
  %conv10 = zext i8 %4 to i32, !dbg !11550
  %add = add nsw i32 %conv10, 255, !dbg !11551
  %add11 = add nsw i32 %add, 1, !dbg !11552
  store i32 %add11, i32* %retval, align 4, !dbg !11553
  br label %return, !dbg !11553

return:                                           ; preds = %if.else9, %if.then8, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11554
  ret i32 %5, !dbg !11554
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.dev_ino* nonnull %ts) #0 !dbg !11555 !ctir !1831 {
entry:
  %ts.addr = alloca %struct.dev_ino*, align 8
  store %struct.dev_ino* %ts, %struct.dev_ino** %ts.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.dev_ino** %ts.addr, metadata !11557, metadata !DIExpression()), !dbg !11558
  %0 = load %struct.dev_ino*, %struct.dev_ino** %ts.addr, align 8, !dbg !11559, !tbaa !2442
  %call = call i32 @clock_gettime(i32 0, %struct.dev_ino* %0) #13, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.dev_ino*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #0 !dbg !11562 !ctir !1838 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @gettime(%struct.dev_ino* %retval), !dbg !11565
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !11566
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !11566
  ret { i64, i64 } %1, !dbg !11566
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #0 !dbg !11567 !ctir !680 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !141
  %p = alloca i8*, align 8, !ctir !146
  store i32 %category, i32* %category.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !11569, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !11571, metadata !DIExpression()), !dbg !11572
  store i8 1, i8* %hard, align 1, !dbg !11572, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11573, metadata !DIExpression()), !dbg !11574
  %0 = load i32, i32* %category.addr, align 4, !dbg !11575, !tbaa !2436
  %call = call i8* @setlocale(i32 %0, i8* null) #13, !dbg !11576
  store i8* %call, i8** %p, align 8, !dbg !11574, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !11577, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !11577
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11579

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !11580, !tbaa !2442
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.304, i64 0, i64 0)) #16, !dbg !11585
  %cmp = icmp eq i32 %call1, 0, !dbg !11586
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !11587

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !11588, !tbaa !2442
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.305, i64 0, i64 0)) #16, !dbg !11589
  %cmp3 = icmp eq i32 %call2, 0, !dbg !11590
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11591

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !11592, !tbaa !2461
  br label %if.end, !dbg !11593

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !11594

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !11595, !tbaa !2461
  %tobool6 = trunc i8 %4 to i1, !dbg !11595
  ret i1 %tobool6, !dbg !11596
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11597 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11598, metadata !DIExpression()), !dbg !11599
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11600, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11601, !ctir !1156
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11601, !tbaa !11602, !ctir !149
  ret i64 %1, !dbg !11604
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11605 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11608, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11609, !ctir !1156
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11609, !tbaa !11610, !ctir !149
  ret i64 %1, !dbg !11611
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11612 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11613, metadata !DIExpression()), !dbg !11614
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11615, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11616, !ctir !1156
  %1 = load i64, i64* %n_entries, align 8, !dbg !11616, !tbaa !11617, !ctir !149
  ret i64 %1, !dbg !11618
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11619 !ctir !1153 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %max_bucket_length = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  %bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11620, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11622, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11624, metadata !DIExpression()), !dbg !11625
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11625, !tbaa !2579
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11626, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11628, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11628, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11630, !tbaa !2442
  br label %for.cond, !dbg !11631

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11632, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11634, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11635, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11635, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11637
  br i1 %cmp, label %for.body, label %for.end, !dbg !11638

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11639, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11642, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !11642, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11639
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11645

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11646, metadata !DIExpression()), !dbg !11648
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11649, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11648, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i64 1, i64* %bucket_length, align 8, !dbg !11651, !tbaa !2579
  br label %while.cond, !dbg !11652

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11653, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11654, !ctir !1169
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11654, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11656, !tbaa !2442
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11657, !tbaa !2442
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11652
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11652

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11658, !tbaa !2579
  %inc = add i64 %11, 1, !dbg !11658
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11658, !tbaa !2579
  br label %while.cond, !dbg !11652, !llvm.loop !11659

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11660, !tbaa !2579
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11662, !tbaa !2579
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11663
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11664

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11665, !tbaa !2579
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11666, !tbaa !2579
  br label %if.end, !dbg !11667

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11668

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11669

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11670, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11670
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11670, !tbaa !2442
  br label %for.cond, !dbg !11671, !llvm.loop !11672

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11674, !tbaa !2579
  ret i64 %16, !dbg !11675
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11676 !ctir !1194 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %n_entries = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11677, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11679, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11681, metadata !DIExpression()), !dbg !11682
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11682, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i64 0, i64* %n_entries, align 8, !dbg !11684, !tbaa !2579
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11685, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11687, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11687, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11688, !tbaa !2442
  br label %for.cond, !dbg !11689

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11690, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11692, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11693, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11693, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11694
  br i1 %cmp, label %for.body, label %for.end, !dbg !11695

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11696, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11699, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !11699, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11696
  br i1 %tobool, label %if.then, label %if.end, !dbg !11700

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11701, metadata !DIExpression()), !dbg !11703
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11704, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11703, !tbaa !2442
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11705, !tbaa !2579
  %inc = add i64 %8, 1, !dbg !11705
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11705, !tbaa !2579
  %9 = load i64, i64* %n_entries, align 8, !dbg !11706, !tbaa !2579
  %inc2 = add i64 %9, 1, !dbg !11706
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11706, !tbaa !2579
  br label %while.cond, !dbg !11707

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11708, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11709, !ctir !1169
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11709, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11710, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11711, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11707
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11707

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11712, !tbaa !2579
  %inc4 = add i64 %13, 1, !dbg !11712
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11712, !tbaa !2579
  br label %while.cond, !dbg !11707, !llvm.loop !11713

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11714

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11715

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11716, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11716
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11716, !tbaa !2442
  br label %for.cond, !dbg !11717, !llvm.loop !11718

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11720, !tbaa !2579
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11722, !tbaa !2442
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11723, !ctir !1156
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11723, !tbaa !11610, !ctir !149
  %cmp6 = icmp eq i64 %15, %17, !dbg !11724
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11725

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11726, !tbaa !2579
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11727, !tbaa !2442
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11728, !ctir !1156
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11728, !tbaa !11617, !ctir !149
  %cmp8 = icmp eq i64 %18, %20, !dbg !11729
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11730

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11731
  br label %return, !dbg !11731

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11732
  br label %return, !dbg !11732

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11733
  ret i1 %21, !dbg !11733
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #0 !dbg !11734 !ctir !1196 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !149
  %n_buckets = alloca i64, align 8, !ctir !149
  %n_buckets_used = alloca i64, align 8, !ctir !149
  %max_bucket_length = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11735, metadata !DIExpression()), !dbg !11736
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11737, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11739, metadata !DIExpression()), !dbg !11740
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11741, !tbaa !2442
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #16, !dbg !11742
  store i64 %call, i64* %n_entries, align 8, !dbg !11740, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11743, metadata !DIExpression()), !dbg !11744
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11745, !tbaa !2442
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #16, !dbg !11746
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11744, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11747, metadata !DIExpression()), !dbg !11748
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11749, !tbaa !2442
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #16, !dbg !11750
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11748, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11751, metadata !DIExpression()), !dbg !11752
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11753, !tbaa !2442
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #16, !dbg !11754
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11752, !tbaa !2579
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11755, !tbaa !2442
  %5 = load i64, i64* %n_entries, align 8, !dbg !11756, !tbaa !2579
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.308, i64 0, i64 0), i64 %5), !dbg !11757
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11758, !tbaa !2442
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11759, !tbaa !2579
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.309, i64 0, i64 0), i64 %7), !dbg !11760
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11761, !tbaa !2442
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11762, !tbaa !2579
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11763, !tbaa !2579
  %conv = uitofp i64 %10 to double, !dbg !11763
  %mul = fmul double 1.000000e+02, %conv, !dbg !11764
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11765, !tbaa !2579
  %conv6 = uitofp i64 %11 to double, !dbg !11765
  %div = fdiv double %mul, %conv6, !dbg !11766
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.310, i64 0, i64 0), i64 %9, double %div), !dbg !11767
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11768, !tbaa !2442
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11769, !tbaa !2579
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.311, i64 0, i64 0), i64 %13), !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11772 !ctir !1232 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11775, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11777, metadata !DIExpression()), !dbg !11778
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11779, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11780, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11781
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11778, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11782, metadata !DIExpression()), !dbg !11783
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11784, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11786, !ctir !1169
  %3 = load i8*, i8** %data, align 8, !dbg !11786, !tbaa !11643, !ctir !167
  %cmp = icmp eq i8* %3, null, !dbg !11787
  br i1 %cmp, label %if.then, label %if.end, !dbg !11788

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11789
  br label %return, !dbg !11789

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11790, !tbaa !2442
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11792, !tbaa !2442
  br label %for.cond, !dbg !11793

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11794, !tbaa !2442
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11796
  br i1 %tobool, label %for.body, label %for.end, !dbg !11796

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11797, !tbaa !2442
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11799, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11800, !ctir !1169
  %8 = load i8*, i8** %data2, align 8, !dbg !11800, !tbaa !11643, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !11801
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11802

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11803, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11804, !ctir !1156
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11804, !tbaa !11805, !ctir !1189
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11806, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11807, !tbaa !2442
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11808, !ctir !1169
  %13 = load i8*, i8** %data4, align 8, !dbg !11808, !tbaa !11643, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11803
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11809

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11810, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11811, !ctir !1169
  %15 = load i8*, i8** %data7, align 8, !dbg !11811, !tbaa !11643, !ctir !167
  store i8* %15, i8** %retval, align 8, !dbg !11812
  br label %return, !dbg !11812

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11813

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11814, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11815, !ctir !1169
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11815, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11816, !tbaa !2442
  br label %for.cond, !dbg !11817, !llvm.loop !11818

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11820
  br label %return, !dbg !11820

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11821
  ret i8* %18, !dbg !11821
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #0 !dbg !11822 !ctir !1260 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store i8* %key, i8** %key.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11829, !tbaa !2442
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11830, !ctir !1156
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11830, !tbaa !11831, !ctir !1186
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11832, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11833, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11834, !ctir !1156
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11834, !tbaa !11602, !ctir !149
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11829
  store i64 %call, i64* %n, align 8, !dbg !11828, !tbaa !2579
  %5 = load i64, i64* %n, align 8, !dbg !11835, !tbaa !2579
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11837, !tbaa !2442
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11838, !ctir !1156
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11838, !tbaa !11602, !ctir !149
  %cmp = icmp ult i64 %5, %7, !dbg !11839
  br i1 %cmp, label %if.end, label %if.then, !dbg !11840

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !11841
  unreachable, !dbg !11841

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11842, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11843, !ctir !1156
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11843, !tbaa !11629, !ctir !1162
  %10 = load i64, i64* %n, align 8, !dbg !11844, !tbaa !2579
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11845
  ret %struct.hash_entry* %add.ptr, !dbg !11846
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11847 !ctir !1234 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11848, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11850, metadata !DIExpression()), !dbg !11851
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11852, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11854, !ctir !1156
  %1 = load i64, i64* %n_entries, align 8, !dbg !11854, !tbaa !11617, !ctir !149
  %cmp = icmp eq i64 %1, 0, !dbg !11855
  br i1 %cmp, label %if.then, label %if.end, !dbg !11856

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11857
  br label %return, !dbg !11857

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11858, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11860, !ctir !1156
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11860, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11861, !tbaa !2442
  br label %for.cond, !dbg !11862

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11863, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11866, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11867, !ctir !1156
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11867, !tbaa !11636, !ctir !1168
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11868
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11869

if.then3:                                         ; preds = %for.cond
  call void @abort() #15, !dbg !11870
  unreachable, !dbg !11870

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11871, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11873, !ctir !1169
  %8 = load i8*, i8** %data, align 8, !dbg !11873, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %8, null, !dbg !11871
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11874

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11875, !tbaa !2442
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11876, !ctir !1169
  %10 = load i8*, i8** %data5, align 8, !dbg !11876, !tbaa !11643, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11877
  br label %return, !dbg !11877

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11878

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11879, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11879
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11879, !tbaa !2442
  br label %for.cond, !dbg !11880, !llvm.loop !11881

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11884
  ret i8* %12, !dbg !11884
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #0 !dbg !11885 !ctir !1232 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11890, metadata !DIExpression()), !dbg !11891
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11892, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11893, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11894
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11891, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11895, metadata !DIExpression()), !dbg !11896
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11897, !tbaa !2442
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11898, !tbaa !2442
  br label %do.body, !dbg !11899

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11900, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11903, !ctir !1169
  %4 = load i8*, i8** %data, align 8, !dbg !11903, !tbaa !11643, !ctir !167
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11904, !tbaa !2442
  %cmp = icmp eq i8* %4, %5, !dbg !11905
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11906

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11907, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11908, !ctir !1169
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11908, !tbaa !11655, !ctir !1162
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11907
  br i1 %tobool, label %if.then, label %if.end, !dbg !11909

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11910, !tbaa !2442
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11911, !ctir !1169
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11911, !tbaa !11655, !ctir !1162
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11912, !ctir !1163
  %10 = load i8*, i8** %data3, align 8, !dbg !11912, !tbaa !11643, !ctir !167
  store i8* %10, i8** %retval, align 8, !dbg !11913
  br label %return, !dbg !11913

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11914, !tbaa !2442
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11915, !ctir !1169
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11915, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11916, !tbaa !2442
  br label %do.cond, !dbg !11917

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11918, !tbaa !2442
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11919
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11917, !llvm.loop !11920

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11922

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11923, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11923
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11923, !tbaa !2442
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11924, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11925, !ctir !1156
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11925, !tbaa !11636, !ctir !1168
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11926
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11922

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11927, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11929, !ctir !1169
  %18 = load i8*, i8** %data7, align 8, !dbg !11929, !tbaa !11643, !ctir !167
  %tobool8 = icmp ne i8* %18, null, !dbg !11927
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11930

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11931, !tbaa !2442
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11932, !ctir !1169
  %20 = load i8*, i8** %data10, align 8, !dbg !11932, !tbaa !11643, !ctir !167
  store i8* %20, i8** %retval, align 8, !dbg !11933
  br label %return, !dbg !11933

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11922, !llvm.loop !11934

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11936
  br label %return, !dbg !11936

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11937
  ret i8* %21, !dbg !11937
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #0 !dbg !11938 !ctir !1236 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11941, metadata !DIExpression()), !dbg !11942
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11943, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11945, metadata !DIExpression()), !dbg !11946
  store i64 0, i64* %counter, align 8, !dbg !11946, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11947, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11949, metadata !DIExpression()), !dbg !11950
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11951, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11953, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11953, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11954, !tbaa !2442
  br label %for.cond, !dbg !11955

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11956, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11958, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11959, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11959, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11960
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11961

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11962, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11965, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !11965, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !11962
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11966

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11967, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11970, !tbaa !2442
  br label %for.cond2, !dbg !11971

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11972, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11974
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11974

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11975, !tbaa !2579
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11978, !tbaa !2579
  %cmp5 = icmp uge i64 %9, %10, !dbg !11979
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11980

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11981, !tbaa !2579
  store i64 %11, i64* %retval, align 8, !dbg !11982
  br label %return, !dbg !11982

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11983, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11984, !ctir !1169
  %13 = load i8*, i8** %data7, align 8, !dbg !11984, !tbaa !11643, !ctir !167
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11985, !tbaa !2442
  %15 = load i64, i64* %counter, align 8, !dbg !11986, !tbaa !2579
  %inc = add i64 %15, 1, !dbg !11986
  store i64 %inc, i64* %counter, align 8, !dbg !11986, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11985, !ctir !663
  store i8* %13, i8** %arrayidx, align 8, !dbg !11987, !tbaa !2442
  br label %for.inc, !dbg !11988

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11989, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11990, !ctir !1169
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11990, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11991, !tbaa !2442
  br label %for.cond2, !dbg !11992, !llvm.loop !11993

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11995

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11996

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11997, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11997
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11997, !tbaa !2442
  br label %for.cond, !dbg !11998, !llvm.loop !11999

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !12001, !tbaa !2579
  store i64 %19, i64* %retval, align 8, !dbg !12002
  br label %return, !dbg !12002

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !12003
  ret i64 %20, !dbg !12003
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #0 !dbg !12004 !ctir !1238 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !149
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1168
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1168
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12005, metadata !DIExpression()), !dbg !12006
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !12007, metadata !DIExpression()), !dbg !12008
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12011, metadata !DIExpression()), !dbg !12012
  store i64 0, i64* %counter, align 8, !dbg !12012, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12013, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12015, metadata !DIExpression()), !dbg !12016
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12017, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12019, !ctir !1156
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12019, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12020, !tbaa !2442
  br label %for.cond, !dbg !12021

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12022, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12024, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12025, !ctir !1156
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12025, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12026
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12027

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12028, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12031, !ctir !1169
  %6 = load i8*, i8** %data, align 8, !dbg !12031, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12028
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12032

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12033, !tbaa !2442
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12036, !tbaa !2442
  br label %for.cond2, !dbg !12037

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12038, !tbaa !2442
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12040
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12040

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12041, !tbaa !2442
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12044, !tbaa !2442
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12045, !ctir !1169
  %11 = load i8*, i8** %data5, align 8, !dbg !12045, !tbaa !11643, !ctir !167
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12046, !tbaa !2442
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12041
  br i1 %call, label %if.end, label %if.then6, !dbg !12047

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12048, !tbaa !2579
  store i64 %13, i64* %retval, align 8, !dbg !12049
  br label %return, !dbg !12049

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12050, !tbaa !2579
  %inc = add i64 %14, 1, !dbg !12050
  store i64 %inc, i64* %counter, align 8, !dbg !12050, !tbaa !2579
  br label %for.inc, !dbg !12051

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12052, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12053, !ctir !1169
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12053, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12054, !tbaa !2442
  br label %for.cond2, !dbg !12055, !llvm.loop !12056

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12058

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12059

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12060, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12060
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12060, !tbaa !2442
  br label %for.cond, !dbg !12061, !llvm.loop !12062

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12064, !tbaa !2579
  store i64 %18, i64* %retval, align 8, !dbg !12065
  br label %return, !dbg !12065

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12066
  ret i64 %19, !dbg !12066
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12067 !ctir !1244 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !149
  %ch = alloca i8, align 1, !ctir !591
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12068, metadata !DIExpression()), !dbg !12069
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12070, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12072, metadata !DIExpression()), !dbg !12073
  store i64 0, i64* %value, align 8, !dbg !12073, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12074, metadata !DIExpression()), !dbg !12075
  br label %for.cond, !dbg !12076

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12077, !tbaa !2442
  %1 = load i8, i8* %0, align 1, !dbg !12080, !tbaa !2497, !ctir !147
  store i8 %1, i8* %ch, align 1, !dbg !12081, !tbaa !2497
  %tobool = icmp ne i8 %1, 0, !dbg !12082
  br i1 %tobool, label %for.body, label %for.end, !dbg !12082

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12083, !tbaa !2579
  %mul = mul i64 %2, 31, !dbg !12084
  %3 = load i8, i8* %ch, align 1, !dbg !12085, !tbaa !2497
  %conv = zext i8 %3 to i64, !dbg !12085
  %add = add i64 %mul, %conv, !dbg !12086
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12087, !tbaa !2579
  %rem = urem i64 %add, %4, !dbg !12088
  store i64 %rem, i64* %value, align 8, !dbg !12089, !tbaa !2579
  br label %for.inc, !dbg !12090

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12091, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12091
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12091, !tbaa !2442
  br label %for.cond, !dbg !12092, !llvm.loop !12093

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12095, !tbaa !2579
  ret i64 %6, !dbg !12096
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #0 !dbg !12097 !ctir !1246 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12098, metadata !DIExpression()), !dbg !12099
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12100, !tbaa !2442
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12101, !tbaa.struct !12102
  ret void, !dbg !12105
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #0 !dbg !12106 !ctir !1249 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !1251
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12109, metadata !DIExpression()), !dbg !12110
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12117, metadata !DIExpression()), !dbg !12118
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12119, !tbaa !2442
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12121
  br i1 %cmp, label %if.then, label %if.end, !dbg !12122

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12123, !tbaa !2442
  br label %if.end, !dbg !12124

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12125, !tbaa !2442
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12127
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12128

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12129, !tbaa !2442
  br label %if.end3, !dbg !12130

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #13, !dbg !12131
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12131
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12132, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12133, !tbaa !2442
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12135
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12136

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12137
  br label %return, !dbg !12137

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12138, !tbaa !2442
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12138
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12140

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12141, !tbaa !2442
  br label %if.end8, !dbg !12142

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12143, !tbaa !2442
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12144, !tbaa !2442
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12145, !ctir !1157
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12146, !tbaa !12147, !ctir !1174
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12148, !tbaa !2442
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12150
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12151

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12152

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12154, !tbaa !2579
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12155, !tbaa !2442
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #16, !dbg !12156
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12157, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12158, !ctir !1157
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12159, !tbaa !11602, !ctir !149
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12160, !tbaa !2442
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12162, !ctir !1157
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12162, !tbaa !11602, !ctir !149
  %tobool15 = icmp ne i64 %12, 0, !dbg !12160
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12163

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12164

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12165, !tbaa !2442
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12166, !ctir !1157
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12166, !tbaa !11602, !ctir !149
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #13, !dbg !12167
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12167
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12168, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12169, !ctir !1157
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12170, !tbaa !11629, !ctir !1162
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12171, !tbaa !2442
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12173, !ctir !1157
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12173, !tbaa !11629, !ctir !1162
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12174
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12175

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12176

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12177, !tbaa !2442
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12178, !ctir !1157
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12178, !tbaa !11629, !ctir !1162
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12179, !tbaa !2442
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12180, !ctir !1157
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12180, !tbaa !11602, !ctir !149
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12181
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12182, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12183, !ctir !1157
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12184, !tbaa !11636, !ctir !1168
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12185, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12186, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12187, !tbaa !11610, !ctir !149
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12188, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12189, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12190, !tbaa !11617, !ctir !149
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12191, !tbaa !2442
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12192, !tbaa !2442
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12193, !ctir !1157
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12194, !tbaa !11831, !ctir !1186
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12195, !tbaa !2442
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12196, !tbaa !2442
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12197, !ctir !1157
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12198, !tbaa !11805, !ctir !1189
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12199, !tbaa !2442
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12200, !tbaa !2442
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12201, !ctir !1157
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12202, !tbaa !12203, !ctir !1192
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12204, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12205, !ctir !1157
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12206, !tbaa !12207, !ctir !1162
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12208, !tbaa !2442
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12209
  br label %return, !dbg !12209

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12210), !dbg !12211
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12212, !tbaa !2442
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12212
  call void @free(i8* %35) #13, !dbg !12213
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12214
  br label %return, !dbg !12214

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12215
  ret %struct.hash_table* %36, !dbg !12215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #0 !dbg !12216 !ctir !333 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !149
  store i8* %data, i8** %data.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12217, metadata !DIExpression()), !dbg !12218
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12221, metadata !DIExpression()), !dbg !12222
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12223, !tbaa !2442
  %1 = ptrtoint i8* %0 to i64, !dbg !12224
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12225
  store i64 %call, i64* %val, align 8, !dbg !12222, !tbaa !2579
  %2 = load i64, i64* %val, align 8, !dbg !12226, !tbaa !2579
  %3 = load i64, i64* %n.addr, align 8, !dbg !12227, !tbaa !2579
  %rem = urem i64 %2, %3, !dbg !12228
  ret i64 %rem, !dbg !12229
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #0 !dbg !12230 !ctir !337 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12231, metadata !DIExpression()), !dbg !12232
  store i8* %b, i8** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12233, metadata !DIExpression()), !dbg !12234
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12235, !tbaa !2442
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12236, !tbaa !2442
  %cmp = icmp eq i8* %0, %1, !dbg !12237
  ret i1 %cmp, !dbg !12238
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #0 !dbg !12239 !ctir !1262 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %epsilon = alloca float, align 4, !ctir !1180
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12242, metadata !DIExpression()), !dbg !12243
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12244, !tbaa !2442
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12245, !ctir !1157
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12245, !tbaa !12147, !ctir !1174
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12243, !tbaa !2442
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12246, metadata !DIExpression()), !dbg !12247
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12248, !tbaa !2442
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12250
  br i1 %cmp, label %if.then, label %if.end, !dbg !12251

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12252
  br label %return, !dbg !12252

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12253, !tbaa !12103
  %3 = load float, float* %epsilon, align 4, !dbg !12254, !tbaa !12103
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12256, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12257, !ctir !1175
  %5 = load float, float* %growth_threshold, align 4, !dbg !12257, !tbaa !12258, !ctir !1180
  %cmp2 = fcmp olt float %3, %5, !dbg !12260
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12261

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12262, !tbaa !2442
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12263, !ctir !1175
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12263, !tbaa !12258, !ctir !1180
  %8 = load float, float* %epsilon, align 4, !dbg !12264, !tbaa !12103
  %sub = fsub float 1.000000e+00, %8, !dbg !12265
  %cmp4 = fcmp olt float %7, %sub, !dbg !12266
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12267

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12268, !tbaa !12103
  %add = fadd float 1.000000e+00, %9, !dbg !12269
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12270, !tbaa !2442
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12271, !ctir !1175
  %11 = load float, float* %growth_factor, align 4, !dbg !12271, !tbaa !12272, !ctir !1180
  %cmp6 = fcmp olt float %add, %11, !dbg !12273
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12274

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12275, !tbaa !2442
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12276, !ctir !1175
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12276, !tbaa !12277, !ctir !1180
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12278
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12279

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12280, !tbaa !2442
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12281, !ctir !1175
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12281, !tbaa !12277, !ctir !1180
  %16 = load float, float* %epsilon, align 4, !dbg !12282, !tbaa !12103
  %add11 = fadd float %15, %16, !dbg !12283
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12284, !tbaa !2442
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12285, !ctir !1175
  %18 = load float, float* %shrink_factor, align 4, !dbg !12285, !tbaa !12286, !ctir !1180
  %cmp12 = fcmp olt float %add11, %18, !dbg !12287
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12288

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12289, !tbaa !2442
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12290, !ctir !1175
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12290, !tbaa !12286, !ctir !1180
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12291
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12292

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12293, !tbaa !2442
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12294, !ctir !1175
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12294, !tbaa !12277, !ctir !1180
  %23 = load float, float* %epsilon, align 4, !dbg !12295, !tbaa !12103
  %add18 = fadd float %22, %23, !dbg !12296
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12297, !tbaa !2442
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12298, !ctir !1175
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12298, !tbaa !12258, !ctir !1180
  %cmp20 = fcmp olt float %add18, %25, !dbg !12299
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12300

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12301
  br label %return, !dbg !12301

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12302, !tbaa !2442
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12303, !ctir !1157
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12304, !tbaa !12147, !ctir !1174
  store i1 false, i1* %retval, align 1, !dbg !12305
  br label %return, !dbg !12305

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12306
  ret i1 %27, !dbg !12306
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12307 !ctir !1264 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !1180
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12308, metadata !DIExpression()), !dbg !12309
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12310, metadata !DIExpression()), !dbg !12311
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12312, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12314, !ctir !1175
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12314, !tbaa !12315
  %tobool = trunc i8 %1 to i1, !dbg !12314, !ctir !141
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12316

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12317, metadata !DIExpression()), !dbg !12319
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12320, !tbaa !2579
  %conv = uitofp i64 %2 to float, !dbg !12320
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12321, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12322, !ctir !1175
  %4 = load float, float* %growth_threshold, align 4, !dbg !12322, !tbaa !12258, !ctir !1180
  %div = fdiv float %conv, %4, !dbg !12323
  store float %div, float* %new_candidate, align 4, !dbg !12319, !tbaa !12103
  %5 = load float, float* %new_candidate, align 4, !dbg !12324, !tbaa !12103
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12326
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12327

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12328
  br label %return, !dbg !12328

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12329, !tbaa !12103
  %conv3 = fptoui float %6 to i64, !dbg !12329
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12330, !tbaa !2579
  br label %if.end4, !dbg !12331

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12332, !tbaa !2579
  %call = call i64 @next_prime(i64 %7) #17, !dbg !12333
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12334, !tbaa !2579
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12335, !tbaa !2579
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12335
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12337

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12338
  br label %return, !dbg !12338

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12339, !tbaa !2579
  store i64 %9, i64* %retval, align 8, !dbg !12340
  br label %return, !dbg !12340

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12341
  ret i64 %10, !dbg !12341
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #12 !dbg !12342 !ctir !1266 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12343, metadata !DIExpression()), !dbg !12344
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12345, !tbaa !2579
  %cmp = icmp ult i64 %0, 10, !dbg !12347
  br i1 %cmp, label %if.then, label %if.end, !dbg !12348

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12349, !tbaa !2579
  br label %if.end, !dbg !12350

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12351, !tbaa !2579
  %or = or i64 %1, 1, !dbg !12351
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12351, !tbaa !2579
  br label %while.cond, !dbg !12352

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12353, !tbaa !2579
  %cmp1 = icmp ne i64 -1, %2, !dbg !12354
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12355

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12356, !tbaa !2579
  %call = call zeroext i1 @is_prime(i64 %3) #17, !dbg !12357
  %lnot = xor i1 %call, true, !dbg !12358
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12359
  br i1 %4, label %while.body, label %while.end, !dbg !12352

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12360, !tbaa !2579
  %add = add i64 %5, 2, !dbg !12360
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12360, !tbaa !2579
  br label %while.cond, !dbg !12352, !llvm.loop !12361

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12363, !tbaa !2579
  ret i64 %6, !dbg !12364
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #12 !dbg !12365 !ctir !1268 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !149
  %square = alloca i64, align 8, !ctir !149
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12366, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12368, metadata !DIExpression()), !dbg !12369
  store i64 3, i64* %divisor, align 8, !dbg !12369, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12370, metadata !DIExpression()), !dbg !12371
  %0 = load i64, i64* %divisor, align 8, !dbg !12372, !tbaa !2579
  %1 = load i64, i64* %divisor, align 8, !dbg !12373, !tbaa !2579
  %mul = mul i64 %0, %1, !dbg !12374
  store i64 %mul, i64* %square, align 8, !dbg !12371, !tbaa !2579
  br label %while.cond, !dbg !12375

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12376, !tbaa !2579
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12377, !tbaa !2579
  %cmp = icmp ult i64 %2, %3, !dbg !12378
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12379

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12380, !tbaa !2579
  %5 = load i64, i64* %divisor, align 8, !dbg !12381, !tbaa !2579
  %rem = urem i64 %4, %5, !dbg !12382
  %tobool = icmp ne i64 %rem, 0, !dbg !12379
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12383
  br i1 %6, label %while.body, label %while.end, !dbg !12375

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12384, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !12384
  store i64 %inc, i64* %divisor, align 8, !dbg !12384, !tbaa !2579
  %8 = load i64, i64* %divisor, align 8, !dbg !12386, !tbaa !2579
  %mul1 = mul i64 4, %8, !dbg !12387
  %9 = load i64, i64* %square, align 8, !dbg !12388, !tbaa !2579
  %add = add i64 %9, %mul1, !dbg !12388
  store i64 %add, i64* %square, align 8, !dbg !12388, !tbaa !2579
  %10 = load i64, i64* %divisor, align 8, !dbg !12389, !tbaa !2579
  %inc2 = add i64 %10, 1, !dbg !12389
  store i64 %inc2, i64* %divisor, align 8, !dbg !12389, !tbaa !2579
  br label %while.cond, !dbg !12375, !llvm.loop !12390

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12392, !tbaa !2579
  %12 = load i64, i64* %divisor, align 8, !dbg !12393, !tbaa !2579
  %rem3 = urem i64 %11, %12, !dbg !12394
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12392
  %13 = zext i1 %tobool4 to i64, !dbg !12392
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12392
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12395
  ret i1 %tobool5, !dbg !12396
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #0 !dbg !12397 !ctir !1252 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12400, metadata !DIExpression()), !dbg !12401
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12402, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12404, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12404, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12405, !tbaa !2442
  br label %for.cond, !dbg !12406

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12407, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12409, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12410, !ctir !1157
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12410, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12411
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12412

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12413, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12416, !ctir !1163
  %6 = load i8*, i8** %data, align 8, !dbg !12416, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12413
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12417

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12418, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12421, metadata !DIExpression()), !dbg !12422
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12423, !tbaa !2442
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12425, !ctir !1163
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12425, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12426, !tbaa !2442
  br label %for.cond3, !dbg !12427

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12428, !tbaa !2442
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12430
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12430

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12431, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12434, !ctir !1157
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12434, !tbaa !12203, !ctir !1192
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12431
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12435

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12436, !tbaa !2442
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12437, !ctir !1157
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12437, !tbaa !12203, !ctir !1192
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12438, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12439, !ctir !1163
  %15 = load i8*, i8** %data9, align 8, !dbg !12439, !tbaa !11643, !ctir !167
  call void %13(i8* %15), !dbg !12436
  br label %if.end, !dbg !12436

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12440, !tbaa !2442
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12441, !ctir !1163
  store i8* null, i8** %data10, align 8, !dbg !12442, !tbaa !11643, !ctir !167
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12443, !tbaa !2442
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12444, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12444, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12445, !tbaa !2442
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12446, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12447, !ctir !1157
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12447, !tbaa !12207, !ctir !1162
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12448, !tbaa !2442
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12449, !ctir !1163
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12450, !tbaa !11655, !ctir !1162
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12451, !tbaa !2442
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12452, !tbaa !2442
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12453, !ctir !1157
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12454, !tbaa !12207, !ctir !1162
  br label %for.inc, !dbg !12455

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12456, !tbaa !2442
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12457, !tbaa !2442
  br label %for.cond3, !dbg !12458, !llvm.loop !12459

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12461, !tbaa !2442
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12463, !ctir !1157
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12463, !tbaa !12203, !ctir !1192
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12461
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12464

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12465, !tbaa !2442
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12466, !ctir !1157
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12466, !tbaa !12203, !ctir !1192
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12467, !tbaa !2442
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12468, !ctir !1163
  %30 = load i8*, i8** %data18, align 8, !dbg !12468, !tbaa !11643, !ctir !167
  call void %28(i8* %30), !dbg !12465
  br label %if.end19, !dbg !12465

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12469, !tbaa !2442
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12470, !ctir !1163
  store i8* null, i8** %data20, align 8, !dbg !12471, !tbaa !11643, !ctir !167
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12472, !tbaa !2442
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12473, !ctir !1163
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12474, !tbaa !11655, !ctir !1162
  br label %if.end22, !dbg !12475

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12476

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12477, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12477
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12477, !tbaa !2442
  br label %for.cond, !dbg !12478, !llvm.loop !12479

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12481, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12482, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12483, !tbaa !11610, !ctir !149
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12484, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12485, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12486, !tbaa !11617, !ctir !149
  ret void, !dbg !12487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #0 !dbg !12488 !ctir !1252 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12489, metadata !DIExpression()), !dbg !12490
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12491, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12493, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12495, metadata !DIExpression()), !dbg !12496
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12497, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12499, !ctir !1157
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12499, !tbaa !12203, !ctir !1192
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12497
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12500

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12501, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12502, !ctir !1157
  %3 = load i64, i64* %n_entries, align 8, !dbg !12502, !tbaa !11617, !ctir !149
  %tobool1 = icmp ne i64 %3, 0, !dbg !12501
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12503

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12504, !tbaa !2442
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12507, !ctir !1157
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12507, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12508, !tbaa !2442
  br label %for.cond, !dbg !12509

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12510, !tbaa !2442
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12512, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12513, !ctir !1157
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12513, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12514
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12515

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12516, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12519, !ctir !1163
  %10 = load i8*, i8** %data, align 8, !dbg !12519, !tbaa !11643, !ctir !167
  %tobool3 = icmp ne i8* %10, null, !dbg !12516
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12520

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12521, !tbaa !2442
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12524, !tbaa !2442
  br label %for.cond5, !dbg !12525

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12526, !tbaa !2442
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12528
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12528

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12529, !tbaa !2442
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12530, !ctir !1157
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12530, !tbaa !12203, !ctir !1192
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12531, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12532, !ctir !1163
  %16 = load i8*, i8** %data9, align 8, !dbg !12532, !tbaa !11643, !ctir !167
  call void %14(i8* %16), !dbg !12529
  br label %for.inc, !dbg !12529

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12533, !tbaa !2442
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12534, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12534, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12535, !tbaa !2442
  br label %for.cond5, !dbg !12536, !llvm.loop !12537

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12539

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12540

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12541, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12541
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12541, !tbaa !2442
  br label %for.cond, !dbg !12542, !llvm.loop !12543

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12545

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12546, !tbaa !2442
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12548, !ctir !1157
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12548, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12549, !tbaa !2442
  br label %for.cond15, !dbg !12550

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12551, !tbaa !2442
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12553, !tbaa !2442
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12554, !ctir !1157
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12554, !tbaa !11636, !ctir !1168
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12555
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12556

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12557, !tbaa !2442
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12560, !ctir !1163
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12560, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12561, !tbaa !2442
  br label %for.cond20, !dbg !12562

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12563, !tbaa !2442
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12565
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12565

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12566, !tbaa !2442
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12568, !ctir !1163
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12568, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12569, !tbaa !2442
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12570, !tbaa !2442
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12570
  call void @free(i8* %31) #13, !dbg !12571
  br label %for.inc24, !dbg !12572

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12573, !tbaa !2442
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12574, !tbaa !2442
  br label %for.cond20, !dbg !12575, !llvm.loop !12576

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12578

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12579, !tbaa !2442
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12579
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12579, !tbaa !2442
  br label %for.cond15, !dbg !12580, !llvm.loop !12581

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12583, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12585, !ctir !1157
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12585, !tbaa !12207, !ctir !1162
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12586, !tbaa !2442
  br label %for.cond29, !dbg !12587

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12588, !tbaa !2442
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12590
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12590

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12591, !tbaa !2442
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12593, !ctir !1163
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12593, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12594, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12595, !tbaa !2442
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12595
  call void @free(i8* %40) #13, !dbg !12596
  br label %for.inc33, !dbg !12597

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12598, !tbaa !2442
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12599, !tbaa !2442
  br label %for.cond29, !dbg !12600, !llvm.loop !12601

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12603, !tbaa !2442
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12604, !ctir !1157
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12604, !tbaa !11629, !ctir !1162
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12603
  call void @free(i8* %44) #13, !dbg !12605
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12606, !tbaa !2442
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12606
  call void @free(i8* %46) #13, !dbg !12607
  ret void, !dbg !12608
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #0 !dbg !12609 !ctir !1254 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !1157
  %new_table = alloca %struct.hash_table*, align 8, !ctir !1251
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12610, metadata !DIExpression()), !dbg !12611
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12612, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12614, metadata !DIExpression()), !dbg !12615
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12616, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12618, metadata !DIExpression()), !dbg !12619
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12620, !tbaa !2579
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12621, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12622, !ctir !1157
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12622, !tbaa !12147, !ctir !1174
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #16, !dbg !12623
  store i64 %call, i64* %new_size, align 8, !dbg !12619, !tbaa !2579
  %3 = load i64, i64* %new_size, align 8, !dbg !12624, !tbaa !2579
  %tobool = icmp ne i64 %3, 0, !dbg !12624
  br i1 %tobool, label %if.end, label %if.then, !dbg !12626

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12627
  br label %return, !dbg !12627

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12628, !tbaa !2579
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12630, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12631, !ctir !1157
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12631, !tbaa !11602, !ctir !149
  %cmp = icmp eq i64 %4, %6, !dbg !12632
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12633

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12634
  br label %return, !dbg !12634

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12635, !tbaa !2442
  %7 = load i64, i64* %new_size, align 8, !dbg !12636, !tbaa !2579
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #13, !dbg !12637
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12637
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12638, !tbaa !2442
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12639, !ctir !1157
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12640, !tbaa !11629, !ctir !1162
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12641, !tbaa !2442
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12643, !ctir !1157
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12643, !tbaa !11629, !ctir !1162
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12644
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12645

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12646
  br label %return, !dbg !12646

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12647, !tbaa !2579
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12648, !tbaa !2442
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12649, !ctir !1157
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12650, !tbaa !11602, !ctir !149
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12651, !tbaa !2442
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12652, !ctir !1157
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12652, !tbaa !11629, !ctir !1162
  %16 = load i64, i64* %new_size, align 8, !dbg !12653, !tbaa !2579
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12654
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12655, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12656, !ctir !1157
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12657, !tbaa !11636, !ctir !1168
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12658, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12659, !ctir !1157
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12660, !tbaa !11610, !ctir !149
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12661, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12662, !ctir !1157
  store i64 0, i64* %n_entries, align 8, !dbg !12663, !tbaa !11617, !ctir !149
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12664, !tbaa !2442
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12665, !ctir !1157
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12665, !tbaa !12147, !ctir !1174
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12666, !tbaa !2442
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12667, !ctir !1157
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12668, !tbaa !12147, !ctir !1174
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12669, !tbaa !2442
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12670, !ctir !1157
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12670, !tbaa !11831, !ctir !1186
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12671, !tbaa !2442
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12672, !ctir !1157
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12673, !tbaa !11831, !ctir !1186
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12674, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12675, !ctir !1157
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12675, !tbaa !11805, !ctir !1189
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12676, !tbaa !2442
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12677, !ctir !1157
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12678, !tbaa !11805, !ctir !1189
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12679, !tbaa !2442
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12680, !ctir !1157
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12680, !tbaa !12203, !ctir !1192
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12681, !tbaa !2442
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12682, !ctir !1157
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12683, !tbaa !12203, !ctir !1192
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12684, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12685, !ctir !1157
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12685, !tbaa !12207, !ctir !1162
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12686, !tbaa !2442
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12687, !ctir !1157
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12688, !tbaa !12207, !ctir !1162
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12689, !tbaa !2442
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12691, !tbaa !2442
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12692
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12693

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12694, !tbaa !2442
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12696, !ctir !1157
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12696, !tbaa !11629, !ctir !1162
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12694
  call void @free(i8* %39) #13, !dbg !12697
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12698, !tbaa !2442
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12699, !ctir !1157
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12699, !tbaa !11629, !ctir !1162
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12700, !tbaa !2442
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12701, !ctir !1157
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12702, !tbaa !11629, !ctir !1162
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12703, !tbaa !2442
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12704, !ctir !1157
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12704, !tbaa !11636, !ctir !1168
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12705, !tbaa !2442
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12706, !ctir !1157
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12707, !tbaa !11636, !ctir !1168
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12708, !tbaa !2442
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12709, !ctir !1157
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12709, !tbaa !11602, !ctir !149
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12710, !tbaa !2442
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12711, !ctir !1157
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12712, !tbaa !11602, !ctir !149
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12713, !tbaa !2442
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12714, !ctir !1157
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12714, !tbaa !11610, !ctir !149
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12715, !tbaa !2442
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12716, !ctir !1157
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12717, !tbaa !11610, !ctir !149
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12718, !tbaa !2442
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12719, !ctir !1157
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12719, !tbaa !12207, !ctir !1162
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12720, !tbaa !2442
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12721, !ctir !1157
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12722, !tbaa !12207, !ctir !1162
  store i1 true, i1* %retval, align 1, !dbg !12723
  br label %return, !dbg !12723

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12724, !tbaa !2442
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12725, !ctir !1157
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12725, !tbaa !12207, !ctir !1162
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12726, !tbaa !2442
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12727, !ctir !1157
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12728, !tbaa !12207, !ctir !1162
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12729, !tbaa !2442
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12731, !tbaa !2442
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12732
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12733

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12734, !tbaa !2442
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12735, !tbaa !2442
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12736
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12737

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #15, !dbg !12738
  unreachable, !dbg !12738

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12739, !tbaa !2442
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12740, !ctir !1157
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12740, !tbaa !11629, !ctir !1162
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12739
  call void @free(i8* %64) #13, !dbg !12741
  store i1 false, i1* %retval, align 1, !dbg !12742
  br label %return, !dbg !12742

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12743
  ret i1 %65, !dbg !12743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #0 !dbg !12744 !ctir !1270 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data2 = alloca i8*, align 8, !ctir !167
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12745, metadata !DIExpression()), !dbg !12746
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12749, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12753, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12755, metadata !DIExpression()), !dbg !12756
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12757, !tbaa !2442
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12759, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12759, !tbaa !11629, !ctir !1162
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12760, !tbaa !2442
  br label %for.cond, !dbg !12761

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12762, !tbaa !2442
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12764, !tbaa !2442
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12765, !ctir !1157
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12765, !tbaa !11636, !ctir !1168
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12766
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12767

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12768, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12770, !ctir !1163
  %6 = load i8*, i8** %data, align 8, !dbg !12770, !tbaa !11643, !ctir !167
  %tobool = icmp ne i8* %6, null, !dbg !12768
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12771

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12772, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12775, metadata !DIExpression()), !dbg !12776
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12777, !tbaa !2442
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12779, !ctir !1163
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12779, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12780, !tbaa !2442
  br label %for.cond4, !dbg !12781

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12782, !tbaa !2442
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12784
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12784

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12785, !tbaa !2442
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12787, !ctir !1163
  %11 = load i8*, i8** %data7, align 8, !dbg !12787, !tbaa !11643, !ctir !167
  store i8* %11, i8** %data2, align 8, !dbg !12788, !tbaa !2442
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12789, !tbaa !2442
  %13 = load i8*, i8** %data2, align 8, !dbg !12790, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12791
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12792, !tbaa !2442
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12793, !tbaa !2442
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12794, !ctir !1163
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12794, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12795, !tbaa !2442
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12796, !tbaa !2442
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12798, !ctir !1163
  %17 = load i8*, i8** %data9, align 8, !dbg !12798, !tbaa !11643, !ctir !167
  %tobool10 = icmp ne i8* %17, null, !dbg !12796
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12799

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12800, !tbaa !2442
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12802, !ctir !1163
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12802, !tbaa !11655, !ctir !1162
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12803, !tbaa !2442
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12804, !ctir !1163
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12805, !tbaa !11655, !ctir !1162
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12806, !tbaa !2442
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12807, !tbaa !2442
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12808, !ctir !1163
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12809, !tbaa !11655, !ctir !1162
  br label %if.end, !dbg !12810

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12811, !tbaa !2442
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12813, !tbaa !2442
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12814, !ctir !1163
  store i8* %23, i8** %data15, align 8, !dbg !12815, !tbaa !11643, !ctir !167
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12816, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12817, !ctir !1157
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12818, !tbaa !11610, !ctir !149
  %inc = add i64 %26, 1, !dbg !12818
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12818, !tbaa !11610, !ctir !149
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12819, !tbaa !2442
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12820, !tbaa !2442
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12821
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12822

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12823, !tbaa !2442
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12824, !tbaa !2442
  br label %for.cond4, !dbg !12825, !llvm.loop !12826

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12828, !tbaa !2442
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12829, !ctir !1163
  %31 = load i8*, i8** %data16, align 8, !dbg !12829, !tbaa !11643, !ctir !167
  store i8* %31, i8** %data2, align 8, !dbg !12830, !tbaa !2442
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12831, !tbaa !2442
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12832, !ctir !1163
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12833, !tbaa !11655, !ctir !1162
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12834, !tbaa !2461
  %tobool18 = trunc i8 %33 to i1, !dbg !12834
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12836

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12837

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12838, !tbaa !2442
  %35 = load i8*, i8** %data2, align 8, !dbg !12839, !tbaa !2442
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12840
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12841, !tbaa !2442
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12842, !tbaa !2442
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12844, !ctir !1163
  %37 = load i8*, i8** %data22, align 8, !dbg !12844, !tbaa !11643, !ctir !167
  %tobool23 = icmp ne i8* %37, null, !dbg !12842
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12845

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12846, metadata !DIExpression()), !dbg !12848
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12849, !tbaa !2442
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12850
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12848, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12851, !tbaa !2442
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12853
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12854

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12855
  br label %return, !dbg !12855

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12856, !tbaa !2442
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12857, !tbaa !2442
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12858, !ctir !1163
  store i8* %40, i8** %data29, align 8, !dbg !12859, !tbaa !11643, !ctir !167
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12860, !tbaa !2442
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12861, !ctir !1163
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12861, !tbaa !11655, !ctir !1162
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12862, !tbaa !2442
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12863, !ctir !1163
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12864, !tbaa !11655, !ctir !1162
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12865, !tbaa !2442
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12866, !tbaa !2442
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12867, !ctir !1163
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12868, !tbaa !11655, !ctir !1162
  br label %if.end37, !dbg !12869

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12870, !tbaa !2442
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12872, !tbaa !2442
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12873, !ctir !1163
  store i8* %47, i8** %data34, align 8, !dbg !12874, !tbaa !11643, !ctir !167
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12875, !tbaa !2442
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12876, !ctir !1157
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12877, !tbaa !11610, !ctir !149
  %inc36 = add i64 %50, 1, !dbg !12877
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12877, !tbaa !11610, !ctir !149
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12878, !tbaa !2442
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12879, !ctir !1163
  store i8* null, i8** %data38, align 8, !dbg !12880, !tbaa !11643, !ctir !167
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12881, !tbaa !2442
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12882, !ctir !1157
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12883, !tbaa !11610, !ctir !149
  %dec = add i64 %53, -1, !dbg !12883
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12883, !tbaa !11610, !ctir !149
  br label %if.end40, !dbg !12884

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12770

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12885, !tbaa !2442
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12885
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12885, !tbaa !2442
  br label %for.cond, !dbg !12886, !llvm.loop !12887

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12889
  br label %return, !dbg !12889

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12890
  ret i1 %55, !dbg !12890
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #0 !dbg !12891 !ctir !1272 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12894, metadata !DIExpression()), !dbg !12895
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12896, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12897, !ctir !1163
  store i8* null, i8** %data, align 8, !dbg !12898, !tbaa !11643, !ctir !167
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12899, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12900, !ctir !1157
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12900, !tbaa !12207, !ctir !1162
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12901, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12902, !ctir !1163
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12903, !tbaa !11655, !ctir !1162
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12904, !tbaa !2442
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12905, !tbaa !2442
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12906, !ctir !1157
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12907, !tbaa !12207, !ctir !1162
  ret void, !dbg !12908
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #0 !dbg !12909 !ctir !1277 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12912, metadata !DIExpression()), !dbg !12913
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12914, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12916, !ctir !1157
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12916, !tbaa !12207, !ctir !1162
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12914
  br i1 %tobool, label %if.then, label %if.else, !dbg !12917

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12918, !tbaa !2442
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12920, !ctir !1157
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12920, !tbaa !12207, !ctir !1162
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12921, !tbaa !2442
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12922, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12923, !ctir !1163
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12923, !tbaa !11655, !ctir !1162
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12924, !tbaa !2442
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12925, !ctir !1157
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12926, !tbaa !12207, !ctir !1162
  br label %if.end, !dbg !12927

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #13, !dbg !12928
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12928
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12930, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12931, !tbaa !2442
  ret %struct.hash_entry* %8, !dbg !12932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #0 !dbg !12933 !ctir !1256 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %candidate = alloca float, align 4, !ctir !1180
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12934, metadata !DIExpression()), !dbg !12935
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12940, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12942, metadata !DIExpression()), !dbg !12943
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12944, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !12944
  br i1 %tobool, label %if.end, label %if.then, !dbg !12946

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !12947
  unreachable, !dbg !12947

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12948, !tbaa !2442
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12950, !tbaa !2442
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12951
  store i8* %call, i8** %data, align 8, !dbg !12952, !tbaa !2442
  %cmp = icmp ne i8* %call, null, !dbg !12953
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12954

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12955, !tbaa !2442
  %tobool3 = icmp ne i8** %3, null, !dbg !12955
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12958

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12959, !tbaa !2442
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12960, !tbaa !2442
  store i8* %4, i8** %5, align 8, !dbg !12961, !tbaa !2442, !ctir !181
  br label %if.end5, !dbg !12962

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12963
  br label %return, !dbg !12963

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12964, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12966, !ctir !1157
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12966, !tbaa !11610, !ctir !149
  %conv = uitofp i64 %7 to float, !dbg !12964
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12967, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12968, !ctir !1157
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12968, !tbaa !12147, !ctir !1174
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12969, !ctir !1175
  %10 = load float, float* %growth_threshold, align 4, !dbg !12969, !tbaa !12258, !ctir !1180
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12970, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12971, !ctir !1157
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12971, !tbaa !11602, !ctir !149
  %conv7 = uitofp i64 %12 to float, !dbg !12970
  %mul = fmul float %10, %conv7, !dbg !12972
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12973
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12974

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12975, !tbaa !2442
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12977
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12978, !tbaa !2442
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12980, !ctir !1157
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12980, !tbaa !11610, !ctir !149
  %conv13 = uitofp i64 %15 to float, !dbg !12978
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12981, !tbaa !2442
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12982, !ctir !1157
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12982, !tbaa !12147, !ctir !1174
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12983, !ctir !1175
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12983, !tbaa !12258, !ctir !1180
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12984, !tbaa !2442
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12985, !ctir !1157
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12985, !tbaa !11602, !ctir !149
  %conv17 = uitofp i64 %20 to float, !dbg !12984
  %mul18 = fmul float %18, %conv17, !dbg !12986
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12987
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12988

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12989, metadata !DIExpression()), !dbg !12991
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12992, !tbaa !2442
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12993, !ctir !1157
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12993, !tbaa !12147, !ctir !1174
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12991, !tbaa !2442
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12994, metadata !DIExpression()), !dbg !12995
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12996, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12997, !ctir !1175
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12997, !tbaa !12315
  %tobool24 = trunc i8 %24 to i1, !dbg !12997, !ctir !141
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12996

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12998, !tbaa !2442
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12999, !ctir !1157
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12999, !tbaa !11602, !ctir !149
  %conv27 = uitofp i64 %26 to float, !dbg !12998
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13000, !tbaa !2442
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !13001, !ctir !1175
  %28 = load float, float* %growth_factor, align 4, !dbg !13001, !tbaa !12272, !ctir !1180
  %mul28 = fmul float %conv27, %28, !dbg !13002
  br label %cond.end, !dbg !12996

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13003, !tbaa !2442
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !13004, !ctir !1157
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !13004, !tbaa !11602, !ctir !149
  %conv30 = uitofp i64 %30 to float, !dbg !13003
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13005, !tbaa !2442
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !13006, !ctir !1175
  %32 = load float, float* %growth_factor31, align 4, !dbg !13006, !tbaa !12272, !ctir !1180
  %mul32 = fmul float %conv30, %32, !dbg !13007
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13008, !tbaa !2442
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !13009, !ctir !1175
  %34 = load float, float* %growth_threshold33, align 4, !dbg !13009, !tbaa !12258, !ctir !1180
  %mul34 = fmul float %mul32, %34, !dbg !13010
  br label %cond.end, !dbg !12996

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12996
  store float %cond, float* %candidate, align 4, !dbg !12995, !tbaa !12103
  %35 = load float, float* %candidate, align 4, !dbg !13011, !tbaa !12103
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !13013
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13014

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !13015
  br label %return, !dbg !13015

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13016, !tbaa !2442
  %37 = load float, float* %candidate, align 4, !dbg !13018, !tbaa !12103
  %conv39 = fptoui float %37 to i64, !dbg !13018
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13019
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13020

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13021
  br label %return, !dbg !13021

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13022, !tbaa !2442
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13024, !tbaa !2442
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13025
  %cmp44 = icmp ne i8* %call43, null, !dbg !13026
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13027

if.then46:                                        ; preds = %if.end42
  call void @abort() #15, !dbg !13028
  unreachable, !dbg !13028

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13029

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13030

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13031, !tbaa !2442
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13033, !ctir !1163
  %41 = load i8*, i8** %data50, align 8, !dbg !13033, !tbaa !11643, !ctir !167
  %tobool51 = icmp ne i8* %41, null, !dbg !13031
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13034

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13035, metadata !DIExpression()), !dbg !13037
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13038, !tbaa !2442
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13039
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13037, !tbaa !2442
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13040, !tbaa !2442
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13042
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13043

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13044
  br label %return, !dbg !13044

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13045, !tbaa !2442
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13046, !tbaa !2442
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13047, !ctir !1163
  store i8* %44, i8** %data58, align 8, !dbg !13048, !tbaa !11643, !ctir !167
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13049, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13050, !ctir !1163
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13050, !tbaa !11655, !ctir !1162
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13051, !tbaa !2442
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13052, !ctir !1163
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13053, !tbaa !11655, !ctir !1162
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13054, !tbaa !2442
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13055, !tbaa !2442
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13056, !ctir !1163
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13057, !tbaa !11655, !ctir !1162
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13058, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13059, !ctir !1157
  %52 = load i64, i64* %n_entries, align 8, !dbg !13060, !tbaa !11617, !ctir !149
  %inc = add i64 %52, 1, !dbg !13060
  store i64 %inc, i64* %n_entries, align 8, !dbg !13060, !tbaa !11617, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13061
  br label %return, !dbg !13061

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13062, !tbaa !2442
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13063, !tbaa !2442
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13064, !ctir !1163
  store i8* %53, i8** %data62, align 8, !dbg !13065, !tbaa !11643, !ctir !167
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13066, !tbaa !2442
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13067, !ctir !1157
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13068, !tbaa !11617, !ctir !149
  %inc64 = add i64 %56, 1, !dbg !13068
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13068, !tbaa !11617, !ctir !149
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13069, !tbaa !2442
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13070, !ctir !1157
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13071, !tbaa !11610, !ctir !149
  %inc66 = add i64 %58, 1, !dbg !13071
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13071, !tbaa !11610, !ctir !149
  store i32 1, i32* %retval, align 4, !dbg !13072
  br label %return, !dbg !13072

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13073
  ret i32 %59, !dbg !13073
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #0 !dbg !13074 !ctir !1274 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data7 = alloca i8*, align 8, !ctir !167
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !1162
  %data29 = alloca i8*, align 8, !ctir !167
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13075, metadata !DIExpression()), !dbg !13076
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13077, metadata !DIExpression()), !dbg !13078
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13079, metadata !DIExpression()), !dbg !13080
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13081, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13083, metadata !DIExpression()), !dbg !13084
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13085, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13086, !tbaa !2442
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13087
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13084, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13088, metadata !DIExpression()), !dbg !13089
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13090, !tbaa !2442
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13091, !tbaa !2442
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13092, !tbaa !2442, !ctir !1162
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13093, !tbaa !2442
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13095, !ctir !1163
  %5 = load i8*, i8** %data, align 8, !dbg !13095, !tbaa !11643, !ctir !167
  %cmp = icmp eq i8* %5, null, !dbg !13096
  br i1 %cmp, label %if.then, label %if.end, !dbg !13097

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13098
  br label %return, !dbg !13098

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13099, !tbaa !2442
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13101, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13102, !ctir !1163
  %8 = load i8*, i8** %data2, align 8, !dbg !13102, !tbaa !11643, !ctir !167
  %cmp3 = icmp eq i8* %6, %8, !dbg !13103
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13104

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13105, !tbaa !2442
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13106, !ctir !1157
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13106, !tbaa !11805, !ctir !1189
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13107, !tbaa !2442
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13108, !tbaa !2442
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13109, !ctir !1163
  %13 = load i8*, i8** %data4, align 8, !dbg !13109, !tbaa !11643, !ctir !167
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13105
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13110

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13111, metadata !DIExpression()), !dbg !13113
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13114, !tbaa !2442
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13115, !ctir !1163
  %15 = load i8*, i8** %data8, align 8, !dbg !13115, !tbaa !11643, !ctir !167
  store i8* %15, i8** %data7, align 8, !dbg !13113, !tbaa !2442
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13116, !tbaa !2461
  %tobool = trunc i8 %16 to i1, !dbg !13116
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13118

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13119, !tbaa !2442
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13122, !ctir !1163
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13122, !tbaa !11655, !ctir !1162
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13119
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13123

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13124, metadata !DIExpression()), !dbg !13126
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13127, !tbaa !2442
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13128, !ctir !1163
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13128, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13126, !tbaa !2442
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13129, !tbaa !2442
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13130, !tbaa !2442
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13131
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13131, !tbaa.struct !13132
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13133, !tbaa !2442
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13134, !tbaa !2442
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13135
  br label %if.end15, !dbg !13136

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13137, !tbaa !2442
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13139, !ctir !1163
  store i8* null, i8** %data14, align 8, !dbg !13140, !tbaa !11643, !ctir !167
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13141

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13142, !tbaa !2442
  store i8* %28, i8** %retval, align 8, !dbg !13143
  br label %return, !dbg !13143

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13144, !tbaa !2442
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13146, !tbaa !2442
  br label %for.cond, !dbg !13147

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13148, !tbaa !2442
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13150, !ctir !1163
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13150, !tbaa !11655, !ctir !1162
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13151
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13151

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13152, !tbaa !2442
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13155, !tbaa !2442
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13156, !ctir !1163
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13156, !tbaa !11655, !ctir !1162
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13157, !ctir !1163
  %35 = load i8*, i8** %data21, align 8, !dbg !13157, !tbaa !11643, !ctir !167
  %cmp22 = icmp eq i8* %32, %35, !dbg !13158
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13159

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13160, !tbaa !2442
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13161, !ctir !1157
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13161, !tbaa !11805, !ctir !1189
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13162, !tbaa !2442
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13163, !tbaa !2442
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13164, !ctir !1163
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13164, !tbaa !11655, !ctir !1162
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13165, !ctir !1163
  %41 = load i8*, i8** %data26, align 8, !dbg !13165, !tbaa !11643, !ctir !167
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13160
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13166

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13167, metadata !DIExpression()), !dbg !13169
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13170, !tbaa !2442
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13171, !ctir !1163
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13171, !tbaa !11655, !ctir !1162
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13172, !ctir !1163
  %44 = load i8*, i8** %data31, align 8, !dbg !13172, !tbaa !11643, !ctir !167
  store i8* %44, i8** %data29, align 8, !dbg !13169, !tbaa !2442
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13173, !tbaa !2461
  %tobool32 = trunc i8 %45 to i1, !dbg !13173
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13175

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13176, metadata !DIExpression()), !dbg !13178
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13179, !tbaa !2442
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13180, !ctir !1163
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13180, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13178, !tbaa !2442
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13181, !tbaa !2442
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13182, !ctir !1163
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13182, !tbaa !11655, !ctir !1162
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13183, !tbaa !2442
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13184, !ctir !1163
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13185, !tbaa !11655, !ctir !1162
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13186, !tbaa !2442
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13187, !tbaa !2442
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13188
  br label %if.end38, !dbg !13189

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13190, !tbaa !2442
  store i8* %53, i8** %retval, align 8, !dbg !13191
  br label %return, !dbg !13191

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13192

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13193, !tbaa !2442
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13194, !ctir !1163
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13194, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13195, !tbaa !2442
  br label %for.cond, !dbg !13196, !llvm.loop !13197

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13199
  br label %return, !dbg !13199

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13200
  ret i8* %56, !dbg !13200
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13201 !ctir !1258 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !181
  %err = alloca i32, align 4, !ctir !27
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13202, metadata !DIExpression()), !dbg !13203
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13206, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13208, metadata !DIExpression()), !dbg !13209
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13210, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13211, !tbaa !2442
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13212
  store i32 %call, i32* %err, align 4, !dbg !13209, !tbaa !2436
  %2 = load i32, i32* %err, align 4, !dbg !13213, !tbaa !2436
  %cmp = icmp eq i32 %2, -1, !dbg !13214
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13213

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13213

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13215, !tbaa !2436
  %cmp2 = icmp eq i32 %3, 0, !dbg !13216
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13215

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13217, !tbaa !2442
  br label %cond.end, !dbg !13215

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13218, !tbaa !2442
  br label %cond.end, !dbg !13215

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13215
  br label %cond.end5, !dbg !13213

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13213
  ret i8* %cond6, !dbg !13219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #0 !dbg !13220 !ctir !1258 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !167
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !1162
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !1174
  %candidate = alloca i64, align 8, !ctir !149
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !1162
  %next = alloca %struct.hash_entry*, align 8, !ctir !1162
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13221, metadata !DIExpression()), !dbg !13222
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13223, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13225, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13227, metadata !DIExpression()), !dbg !13228
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13229, !tbaa !2442
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13230, !tbaa !2442
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13231
  store i8* %call, i8** %data, align 8, !dbg !13232, !tbaa !2442
  %2 = load i8*, i8** %data, align 8, !dbg !13233, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !13233
  br i1 %tobool, label %if.end, label %if.then, !dbg !13235

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13236
  br label %return, !dbg !13236

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13237, !tbaa !2442
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13238, !ctir !1157
  %4 = load i64, i64* %n_entries, align 8, !dbg !13239, !tbaa !11617, !ctir !149
  %dec = add i64 %4, -1, !dbg !13239
  store i64 %dec, i64* %n_entries, align 8, !dbg !13239, !tbaa !11617, !ctir !149
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13240, !tbaa !2442
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13242, !ctir !1163
  %6 = load i8*, i8** %data2, align 8, !dbg !13242, !tbaa !11643, !ctir !167
  %tobool3 = icmp ne i8* %6, null, !dbg !13240
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13243

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13244, !tbaa !2442
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13246, !ctir !1157
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13247, !tbaa !11610, !ctir !149
  %dec5 = add i64 %8, -1, !dbg !13247
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13247, !tbaa !11610, !ctir !149
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13248, !tbaa !2442
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13250, !ctir !1157
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13250, !tbaa !11610, !ctir !149
  %conv = uitofp i64 %10 to float, !dbg !13248
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13251, !tbaa !2442
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13252, !ctir !1157
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13252, !tbaa !12147, !ctir !1174
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13253, !ctir !1175
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13253, !tbaa !12277, !ctir !1180
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13254, !tbaa !2442
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13255, !ctir !1157
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13255, !tbaa !11602, !ctir !149
  %conv7 = uitofp i64 %15 to float, !dbg !13254
  %mul = fmul float %13, %conv7, !dbg !13256
  %cmp = fcmp olt float %conv, %mul, !dbg !13257
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13258

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13259, !tbaa !2442
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13261
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13262, !tbaa !2442
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13264, !ctir !1157
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13264, !tbaa !11610, !ctir !149
  %conv12 = uitofp i64 %18 to float, !dbg !13262
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13265, !tbaa !2442
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13266, !ctir !1157
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13266, !tbaa !12147, !ctir !1174
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13267, !ctir !1175
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13267, !tbaa !12277, !ctir !1180
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13268, !tbaa !2442
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13269, !ctir !1157
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13269, !tbaa !11602, !ctir !149
  %conv16 = uitofp i64 %23 to float, !dbg !13268
  %mul17 = fmul float %21, %conv16, !dbg !13270
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13271
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13272

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13273, metadata !DIExpression()), !dbg !13275
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13276, !tbaa !2442
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13277, !ctir !1157
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13277, !tbaa !12147, !ctir !1174
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13275, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13278, metadata !DIExpression()), !dbg !13279
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13280, !tbaa !2442
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13281, !ctir !1175
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13281, !tbaa !12315
  %tobool23 = trunc i8 %27 to i1, !dbg !13281, !ctir !141
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13280

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13282, !tbaa !2442
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13283, !ctir !1157
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13283, !tbaa !11602, !ctir !149
  %conv26 = uitofp i64 %29 to float, !dbg !13282
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13284, !tbaa !2442
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13285, !ctir !1175
  %31 = load float, float* %shrink_factor, align 4, !dbg !13285, !tbaa !12286, !ctir !1180
  %mul27 = fmul float %conv26, %31, !dbg !13286
  br label %cond.end, !dbg !13280

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13287, !tbaa !2442
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13288, !ctir !1157
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13288, !tbaa !11602, !ctir !149
  %conv29 = uitofp i64 %33 to float, !dbg !13287
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13289, !tbaa !2442
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13290, !ctir !1175
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13290, !tbaa !12286, !ctir !1180
  %mul31 = fmul float %conv29, %35, !dbg !13291
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13292, !tbaa !2442
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13293, !ctir !1175
  %37 = load float, float* %growth_threshold, align 4, !dbg !13293, !tbaa !12258, !ctir !1180
  %mul32 = fmul float %mul31, %37, !dbg !13294
  br label %cond.end, !dbg !13280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13280
  %conv33 = fptoui float %cond to i64, !dbg !13295
  store i64 %conv33, i64* %candidate, align 8, !dbg !13279, !tbaa !2579
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13296, !tbaa !2442
  %39 = load i64, i64* %candidate, align 8, !dbg !13298, !tbaa !2579
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13299
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13300

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13301, metadata !DIExpression()), !dbg !13303
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13304, !tbaa !2442
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13305, !ctir !1157
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13305, !tbaa !12207, !ctir !1162
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13303, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13306, metadata !DIExpression()), !dbg !13307
  br label %while.cond, !dbg !13308

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13309, !tbaa !2442
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13308
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13308

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13310, !tbaa !2442
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13312, !ctir !1163
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13312, !tbaa !11655, !ctir !1162
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13313, !tbaa !2442
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13314, !tbaa !2442
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13314
  call void @free(i8* %46) #13, !dbg !13315
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13316, !tbaa !2442
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13317, !tbaa !2442
  br label %while.cond, !dbg !13308, !llvm.loop !13318

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13320, !tbaa !2442
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13321, !ctir !1157
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13322, !tbaa !12207, !ctir !1162
  br label %if.end39, !dbg !13323

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13324

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13325

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13326

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13327, !tbaa !2442
  store i8* %49, i8** %retval, align 8, !dbg !13328
  br label %return, !dbg !13328

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13329
  ret i8* %50, !dbg !13329
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13330 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1846
  %tmp = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13332, metadata !DIExpression()), !dbg !13333
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13334, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13336, metadata !DIExpression()), !dbg !13337
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13338, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13338
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13337, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13339, metadata !DIExpression()), !dbg !13340
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13341, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13342, !ctir !1847
  %3 = load i8*, i8** %name, align 8, !dbg !13342, !tbaa !10873, !ctir !143
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13343, !tbaa !2579
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #16, !dbg !13344
  store i64 %call, i64* %tmp, align 8, !dbg !13340, !tbaa !2579
  %5 = load i64, i64* %tmp, align 8, !dbg !13345, !tbaa !2579
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13346, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13347, !ctir !1847
  %7 = load i64, i64* %st_ino, align 8, !dbg !13347, !tbaa !10880, !ctir !258
  %xor = xor i64 %5, %7, !dbg !13348
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13349, !tbaa !2579
  %rem = urem i64 %xor, %8, !dbg !13350
  ret i64 %rem, !dbg !13351
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13352 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13353, metadata !DIExpression()), !dbg !13354
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13355, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13357, metadata !DIExpression()), !dbg !13358
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13359, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13359
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13358, !tbaa !2442
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13360, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13361, !ctir !1847
  %3 = load i64, i64* %st_ino, align 8, !dbg !13361, !tbaa !10880, !ctir !258
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13362, !tbaa !2579
  %rem = urem i64 %3, %4, !dbg !13363
  ret i64 %rem, !dbg !13364
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #0 !dbg !13365 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1846
  %b = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13370, metadata !DIExpression()), !dbg !13371
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13372, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13372
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13371, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13373, metadata !DIExpression()), !dbg !13374
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13375, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13375
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13374, !tbaa !2442
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13376, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13376, !ctir !1847
  %5 = load i64, i64* %st_ino, align 8, !dbg !13376, !tbaa !10880, !ctir !258
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13376, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13376, !ctir !1847
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13376, !tbaa !10880, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !13376
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13376

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13376, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13376, !ctir !1847
  %9 = load i64, i64* %st_dev, align 8, !dbg !13376, !tbaa !10886, !ctir !260
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13376, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13376, !ctir !1847
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13376, !tbaa !10886, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !13376
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13377

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13378, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13379, !ctir !1847
  %13 = load i8*, i8** %name, align 8, !dbg !13379, !tbaa !10873, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13380, !tbaa !2442
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13381, !ctir !1847
  %15 = load i8*, i8** %name4, align 8, !dbg !13381, !tbaa !10873, !ctir !143
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13382
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13383
  %17 = zext i1 %16 to i64, !dbg !13384
  %cond = select i1 %16, i32 1, i32 0, !dbg !13384
  %tobool = icmp ne i32 %cond, 0, !dbg !13384
  ret i1 %tobool, !dbg !13385
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13386 !ctir !337 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1846
  %b = alloca %struct.F_triple*, align 8, !ctir !1846
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  store i8* %y, i8** %y.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13389, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13391, metadata !DIExpression()), !dbg !13392
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13393, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13393
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13392, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13394, metadata !DIExpression()), !dbg !13395
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13396, !tbaa !2442
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13396
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13395, !tbaa !2442
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13397, !tbaa !2442
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13397, !ctir !1847
  %5 = load i64, i64* %st_ino, align 8, !dbg !13397, !tbaa !10880, !ctir !258
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13397, !tbaa !2442
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13397, !ctir !1847
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13397, !tbaa !10880, !ctir !258
  %cmp = icmp eq i64 %5, %7, !dbg !13397
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13397

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13397, !tbaa !2442
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13397, !ctir !1847
  %9 = load i64, i64* %st_dev, align 8, !dbg !13397, !tbaa !10886, !ctir !260
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13397, !tbaa !2442
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13397, !ctir !1847
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13397, !tbaa !10886, !ctir !260
  %cmp3 = icmp eq i64 %9, %11, !dbg !13397
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13398

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13399, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13399, !ctir !1847
  %13 = load i8*, i8** %name, align 8, !dbg !13399, !tbaa !10873, !ctir !143
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13399, !tbaa !2442
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13399, !ctir !1847
  %15 = load i8*, i8** %name4, align 8, !dbg !13399, !tbaa !10873, !ctir !143
  %call = call i32 @strcmp(i8* %13, i8* %15) #16, !dbg !13399
  %cmp5 = icmp eq i32 %call, 0, !dbg !13399
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13400
  %17 = zext i1 %16 to i64, !dbg !13401
  %cond = select i1 %16, i32 1, i32 0, !dbg !13401
  %tobool = icmp ne i32 %cond, 0, !dbg !13401
  ret i1 %tobool, !dbg !13402
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #0 !dbg !13403 !ctir !339 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1853
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13406, metadata !DIExpression()), !dbg !13407
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13408, !tbaa !2442
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13408
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13407, !tbaa !2442
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13409, !tbaa !2442
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13410, !ctir !1848
  %3 = load i8*, i8** %name, align 8, !dbg !13410, !tbaa !10873, !ctir !143
  call void @free(i8* %3) #13, !dbg !13411
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13412, !tbaa !2442
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13412
  call void @free(i8* %5) #13, !dbg !13413
  ret void, !dbg !13414
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) #0 !dbg !13415 !ctir !1286 {
entry:
  %n.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %opts.addr = alloca i32, align 4
  %from_block_size.addr = alloca i64, align 8
  %to_block_size.addr = alloca i64, align 8
  %inexact_style = alloca i32, align 4, !ctir !27
  %base = alloca i32, align 4, !ctir !6
  %amt = alloca i64, align 8, !ctir !168
  %tenths = alloca i32, align 4, !ctir !27
  %exponent = alloca i32, align 4, !ctir !27
  %exponent_max = alloca i32, align 4, !ctir !27
  %p = alloca i8*, align 8, !ctir !143
  %psuffix = alloca i8*, align 8, !ctir !143
  %integerlim = alloca i8*, align 8, !ctir !146
  %rounding = alloca i32, align 4, !ctir !27
  %decimal_point = alloca i8*, align 8, !ctir !146
  %decimal_pointlen = alloca i64, align 8, !ctir !149
  %grouping = alloca i8*, align 8, !ctir !146
  %thousands_sep = alloca i8*, align 8, !ctir !146
  %l = alloca %struct.lconv*, align 8, !ctir !1288
  %pointlen = alloca i64, align 8, !ctir !149
  %multiplier = alloca i64, align 8, !ctir !168
  %divisor = alloca i64, align 8, !ctir !168
  %r10 = alloca i64, align 8, !ctir !168
  %r2 = alloca i64, align 8, !ctir !168
  %dto_block_size = alloca x86_fp80, align 16, !ctir !1317
  %damt = alloca x86_fp80, align 16, !ctir !1317
  %buflen = alloca i64, align 8, !ctir !149
  %nonintegerlen = alloca i64, align 8, !ctir !149
  %e = alloca x86_fp80, align 16, !ctir !1317
  %r10103 = alloca i32, align 4, !ctir !6
  %r2110 = alloca i32, align 4, !ctir !6
  %digit = alloca i32, align 4, !ctir !27
  %power = alloca i64, align 8, !ctir !168
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13416, metadata !DIExpression()), !dbg !13417
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  store i32 %opts, i32* %opts.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opts.addr, metadata !13420, metadata !DIExpression()), !dbg !13421
  store i64 %from_block_size, i64* %from_block_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %from_block_size.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  store i64 %to_block_size, i64* %to_block_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %to_block_size.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.declare(metadata i32* %inexact_style, metadata !13426, metadata !DIExpression()), !dbg !13427
  %0 = load i32, i32* %opts.addr, align 4, !dbg !13428, !tbaa !2436
  %and = and i32 %0, 3, !dbg !13429
  store i32 %and, i32* %inexact_style, align 4, !dbg !13427, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base, metadata !13430, metadata !DIExpression()), !dbg !13431
  %1 = load i32, i32* %opts.addr, align 4, !dbg !13432, !tbaa !2436
  %and1 = and i32 %1, 32, !dbg !13433
  %tobool = icmp ne i32 %and1, 0, !dbg !13432
  %2 = zext i1 %tobool to i64, !dbg !13432
  %cond = select i1 %tobool, i32 1024, i32 1000, !dbg !13432
  store i32 %cond, i32* %base, align 4, !dbg !13431, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %amt, metadata !13434, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.declare(metadata i32* %tenths, metadata !13436, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i32 -1, i32* %exponent, align 4, !dbg !13439, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %exponent_max, metadata !13440, metadata !DIExpression()), !dbg !13441
  store i32 8, i32* %exponent_max, align 4, !dbg !13441, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13442, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.declare(metadata i8** %psuffix, metadata !13444, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.declare(metadata i8** %integerlim, metadata !13446, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.declare(metadata i32* %rounding, metadata !13448, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.declare(metadata i8** %decimal_point, metadata !13450, metadata !DIExpression()), !dbg !13451
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.330, i64 0, i64 0), i8** %decimal_point, align 8, !dbg !13451, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %decimal_pointlen, metadata !13452, metadata !DIExpression()), !dbg !13453
  store i64 1, i64* %decimal_pointlen, align 8, !dbg !13453, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %grouping, metadata !13454, metadata !DIExpression()), !dbg !13455
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.331, i64 0, i64 0), i8** %grouping, align 8, !dbg !13455, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %thousands_sep, metadata !13456, metadata !DIExpression()), !dbg !13457
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.331, i64 0, i64 0), i8** %thousands_sep, align 8, !dbg !13457, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.lconv** %l, metadata !13458, metadata !DIExpression()), !dbg !13459
  %call = call %struct.lconv* @localeconv() #13, !dbg !13460
  store %struct.lconv* %call, %struct.lconv** %l, align 8, !dbg !13459, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %pointlen, metadata !13461, metadata !DIExpression()), !dbg !13462
  %3 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13463, !tbaa !2442
  %decimal_point2 = getelementptr inbounds %struct.lconv, %struct.lconv* %3, i32 0, i32 0, !dbg !13464, !ctir !1289
  %4 = load i8*, i8** %decimal_point2, align 8, !dbg !13464, !tbaa !13465, !ctir !143
  %call3 = call i64 @strlen(i8* %4) #16, !dbg !13467
  store i64 %call3, i64* %pointlen, align 8, !dbg !13462, !tbaa !2579
  %5 = load i64, i64* %pointlen, align 8, !dbg !13468, !tbaa !2579
  %cmp = icmp ult i64 0, %5, !dbg !13470
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13471

land.lhs.true:                                    ; preds = %entry
  %6 = load i64, i64* %pointlen, align 8, !dbg !13472, !tbaa !2579
  %cmp4 = icmp ule i64 %6, 16, !dbg !13473
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13474

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13475, !tbaa !2442
  %decimal_point5 = getelementptr inbounds %struct.lconv, %struct.lconv* %7, i32 0, i32 0, !dbg !13477, !ctir !1289
  %8 = load i8*, i8** %decimal_point5, align 8, !dbg !13477, !tbaa !13465, !ctir !143
  store i8* %8, i8** %decimal_point, align 8, !dbg !13478, !tbaa !2442
  %9 = load i64, i64* %pointlen, align 8, !dbg !13479, !tbaa !2579
  store i64 %9, i64* %decimal_pointlen, align 8, !dbg !13480, !tbaa !2579
  br label %if.end, !dbg !13481

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13482, !tbaa !2442
  %grouping6 = getelementptr inbounds %struct.lconv, %struct.lconv* %10, i32 0, i32 2, !dbg !13483, !ctir !1289
  %11 = load i8*, i8** %grouping6, align 8, !dbg !13483, !tbaa !13484, !ctir !143
  store i8* %11, i8** %grouping, align 8, !dbg !13485, !tbaa !2442
  %12 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13486, !tbaa !2442
  %thousands_sep7 = getelementptr inbounds %struct.lconv, %struct.lconv* %12, i32 0, i32 1, !dbg !13488, !ctir !1289
  %13 = load i8*, i8** %thousands_sep7, align 8, !dbg !13488, !tbaa !13489, !ctir !143
  %call8 = call i64 @strlen(i8* %13) #16, !dbg !13490
  %cmp9 = icmp ule i64 %call8, 16, !dbg !13491
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13492

if.then10:                                        ; preds = %if.end
  %14 = load %struct.lconv*, %struct.lconv** %l, align 8, !dbg !13493, !tbaa !2442
  %thousands_sep11 = getelementptr inbounds %struct.lconv, %struct.lconv* %14, i32 0, i32 1, !dbg !13494, !ctir !1289
  %15 = load i8*, i8** %thousands_sep11, align 8, !dbg !13494, !tbaa !13489, !ctir !143
  store i8* %15, i8** %thousands_sep, align 8, !dbg !13495, !tbaa !2442
  br label %if.end12, !dbg !13496

if.end12:                                         ; preds = %if.then10, %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !13497, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 651, !dbg !13498
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !13499
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr13, i64 -3, !dbg !13500
  store i8* %add.ptr14, i8** %psuffix, align 8, !dbg !13501, !tbaa !2442
  %17 = load i8*, i8** %psuffix, align 8, !dbg !13502, !tbaa !2442
  store i8* %17, i8** %p, align 8, !dbg !13503, !tbaa !2442
  %18 = load i64, i64* %to_block_size.addr, align 8, !dbg !13504, !tbaa !2579
  %19 = load i64, i64* %from_block_size.addr, align 8, !dbg !13506, !tbaa !2579
  %cmp15 = icmp ule i64 %18, %19, !dbg !13507
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !13508

if.then16:                                        ; preds = %if.end12
  %20 = load i64, i64* %from_block_size.addr, align 8, !dbg !13509, !tbaa !2579
  %21 = load i64, i64* %to_block_size.addr, align 8, !dbg !13512, !tbaa !2579
  %rem = urem i64 %20, %21, !dbg !13513
  %cmp17 = icmp eq i64 %rem, 0, !dbg !13514
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !13515

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i64* %multiplier, metadata !13516, metadata !DIExpression()), !dbg !13518
  %22 = load i64, i64* %from_block_size.addr, align 8, !dbg !13519, !tbaa !2579
  %23 = load i64, i64* %to_block_size.addr, align 8, !dbg !13520, !tbaa !2579
  %div = udiv i64 %22, %23, !dbg !13521
  store i64 %div, i64* %multiplier, align 8, !dbg !13518, !tbaa !2579
  %24 = load i64, i64* %n.addr, align 8, !dbg !13522, !tbaa !2579
  %25 = load i64, i64* %multiplier, align 8, !dbg !13523, !tbaa !2579
  %mul = mul i64 %24, %25, !dbg !13524
  store i64 %mul, i64* %amt, align 8, !dbg !13525, !tbaa !2579
  %26 = load i64, i64* %amt, align 8, !dbg !13526, !tbaa !2579
  %27 = load i64, i64* %multiplier, align 8, !dbg !13528, !tbaa !2579
  %div19 = udiv i64 %26, %27, !dbg !13529
  %28 = load i64, i64* %n.addr, align 8, !dbg !13530, !tbaa !2579
  %cmp20 = icmp eq i64 %div19, %28, !dbg !13531
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !13532

if.then21:                                        ; preds = %if.then18
  store i32 0, i32* %tenths, align 4, !dbg !13533, !tbaa !2436
  store i32 0, i32* %rounding, align 4, !dbg !13535, !tbaa !2436
  br label %use_integer_arithmetic, !dbg !13536

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !13537

if.end23:                                         ; preds = %if.end22, %if.then16
  br label %if.end44, !dbg !13538

if.else:                                          ; preds = %if.end12
  %29 = load i64, i64* %from_block_size.addr, align 8, !dbg !13539, !tbaa !2579
  %cmp24 = icmp ne i64 %29, 0, !dbg !13541
  br i1 %cmp24, label %land.lhs.true25, label %if.end43, !dbg !13542

land.lhs.true25:                                  ; preds = %if.else
  %30 = load i64, i64* %to_block_size.addr, align 8, !dbg !13543, !tbaa !2579
  %31 = load i64, i64* %from_block_size.addr, align 8, !dbg !13544, !tbaa !2579
  %rem26 = urem i64 %30, %31, !dbg !13545
  %cmp27 = icmp eq i64 %rem26, 0, !dbg !13546
  br i1 %cmp27, label %if.then28, label %if.end43, !dbg !13547

if.then28:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !13548, metadata !DIExpression()), !dbg !13550
  %32 = load i64, i64* %to_block_size.addr, align 8, !dbg !13551, !tbaa !2579
  %33 = load i64, i64* %from_block_size.addr, align 8, !dbg !13552, !tbaa !2579
  %div29 = udiv i64 %32, %33, !dbg !13553
  store i64 %div29, i64* %divisor, align 8, !dbg !13550, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %r10, metadata !13554, metadata !DIExpression()), !dbg !13555
  %34 = load i64, i64* %n.addr, align 8, !dbg !13556, !tbaa !2579
  %35 = load i64, i64* %divisor, align 8, !dbg !13557, !tbaa !2579
  %rem30 = urem i64 %34, %35, !dbg !13558
  %mul31 = mul i64 %rem30, 10, !dbg !13559
  store i64 %mul31, i64* %r10, align 8, !dbg !13555, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %r2, metadata !13560, metadata !DIExpression()), !dbg !13561
  %36 = load i64, i64* %r10, align 8, !dbg !13562, !tbaa !2579
  %37 = load i64, i64* %divisor, align 8, !dbg !13563, !tbaa !2579
  %rem32 = urem i64 %36, %37, !dbg !13564
  %mul33 = mul i64 %rem32, 2, !dbg !13565
  store i64 %mul33, i64* %r2, align 8, !dbg !13561, !tbaa !2579
  %38 = load i64, i64* %n.addr, align 8, !dbg !13566, !tbaa !2579
  %39 = load i64, i64* %divisor, align 8, !dbg !13567, !tbaa !2579
  %div34 = udiv i64 %38, %39, !dbg !13568
  store i64 %div34, i64* %amt, align 8, !dbg !13569, !tbaa !2579
  %40 = load i64, i64* %r10, align 8, !dbg !13570, !tbaa !2579
  %41 = load i64, i64* %divisor, align 8, !dbg !13571, !tbaa !2579
  %div35 = udiv i64 %40, %41, !dbg !13572
  %conv = trunc i64 %div35 to i32, !dbg !13570
  store i32 %conv, i32* %tenths, align 4, !dbg !13573, !tbaa !2436
  %42 = load i64, i64* %r2, align 8, !dbg !13574, !tbaa !2579
  %43 = load i64, i64* %divisor, align 8, !dbg !13575, !tbaa !2579
  %cmp36 = icmp ult i64 %42, %43, !dbg !13576
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !13574

cond.true:                                        ; preds = %if.then28
  %44 = load i64, i64* %r2, align 8, !dbg !13577, !tbaa !2579
  %cmp38 = icmp ult i64 0, %44, !dbg !13578
  %conv39 = zext i1 %cmp38 to i32, !dbg !13578
  br label %cond.end, !dbg !13574

cond.false:                                       ; preds = %if.then28
  %45 = load i64, i64* %divisor, align 8, !dbg !13579, !tbaa !2579
  %46 = load i64, i64* %r2, align 8, !dbg !13580, !tbaa !2579
  %cmp40 = icmp ult i64 %45, %46, !dbg !13581
  %conv41 = zext i1 %cmp40 to i32, !dbg !13581
  %add = add nsw i32 2, %conv41, !dbg !13582
  br label %cond.end, !dbg !13574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond42 = phi i32 [ %conv39, %cond.true ], [ %add, %cond.false ], !dbg !13574
  store i32 %cond42, i32* %rounding, align 4, !dbg !13583, !tbaa !2436
  br label %use_integer_arithmetic, !dbg !13584

if.end43:                                         ; preds = %land.lhs.true25, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end23
  call void @llvm.dbg.declare(metadata x86_fp80* %dto_block_size, metadata !13585, metadata !DIExpression()), !dbg !13587
  %47 = load i64, i64* %to_block_size.addr, align 8, !dbg !13588, !tbaa !2579
  %conv45 = uitofp i64 %47 to x86_fp80, !dbg !13588
  store x86_fp80 %conv45, x86_fp80* %dto_block_size, align 16, !dbg !13587, !tbaa !13589
  call void @llvm.dbg.declare(metadata x86_fp80* %damt, metadata !13591, metadata !DIExpression()), !dbg !13592
  %48 = load i64, i64* %n.addr, align 8, !dbg !13593, !tbaa !2579
  %conv46 = uitofp i64 %48 to x86_fp80, !dbg !13593
  %49 = load i64, i64* %from_block_size.addr, align 8, !dbg !13594, !tbaa !2579
  %conv47 = uitofp i64 %49 to x86_fp80, !dbg !13594
  %50 = load x86_fp80, x86_fp80* %dto_block_size, align 16, !dbg !13595, !tbaa !13589
  %div48 = fdiv x86_fp80 %conv47, %50, !dbg !13596
  %mul49 = fmul x86_fp80 %conv46, %div48, !dbg !13597
  store x86_fp80 %mul49, x86_fp80* %damt, align 16, !dbg !13592, !tbaa !13589
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !13598, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.declare(metadata i64* %nonintegerlen, metadata !13600, metadata !DIExpression()), !dbg !13601
  %51 = load i32, i32* %opts.addr, align 4, !dbg !13602, !tbaa !2436
  %and50 = and i32 %51, 16, !dbg !13604
  %tobool51 = icmp ne i32 %and50, 0, !dbg !13604
  br i1 %tobool51, label %if.else56, label %if.then52, !dbg !13605

if.then52:                                        ; preds = %if.end44
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !13606, !tbaa !2442
  %53 = load i32, i32* %inexact_style, align 4, !dbg !13608, !tbaa !2436
  %54 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13609, !tbaa !13589
  %call53 = call x86_fp80 @adjust_value(i32 %53, x86_fp80 %54), !dbg !13610
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.332, i64 0, i64 0), x86_fp80 %call53) #13, !dbg !13611
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !13612, !tbaa !2442
  %call55 = call i64 @strlen(i8* %55) #16, !dbg !13613
  store i64 %call55, i64* %buflen, align 8, !dbg !13614, !tbaa !2579
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13615, !tbaa !2579
  br label %if.end90, !dbg !13616

if.else56:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata x86_fp80* %e, metadata !13617, metadata !DIExpression()), !dbg !13619
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16, !dbg !13619, !tbaa !13589
  store i32 0, i32* %exponent, align 4, !dbg !13620, !tbaa !2436
  br label %do.body, !dbg !13621

do.body:                                          ; preds = %land.end, %if.else56
  %56 = load i32, i32* %base, align 4, !dbg !13622, !tbaa !2436
  %conv57 = uitofp i32 %56 to x86_fp80, !dbg !13622
  %57 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13624, !tbaa !13589
  %mul58 = fmul x86_fp80 %57, %conv57, !dbg !13624
  store x86_fp80 %mul58, x86_fp80* %e, align 16, !dbg !13624, !tbaa !13589
  %58 = load i32, i32* %exponent, align 4, !dbg !13625, !tbaa !2436
  %inc = add nsw i32 %58, 1, !dbg !13625
  store i32 %inc, i32* %exponent, align 4, !dbg !13625, !tbaa !2436
  br label %do.cond, !dbg !13626

do.cond:                                          ; preds = %do.body
  %59 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13627, !tbaa !13589
  %60 = load i32, i32* %base, align 4, !dbg !13628, !tbaa !2436
  %conv59 = uitofp i32 %60 to x86_fp80, !dbg !13628
  %mul60 = fmul x86_fp80 %59, %conv59, !dbg !13629
  %61 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13630, !tbaa !13589
  %cmp61 = fcmp ole x86_fp80 %mul60, %61, !dbg !13631
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !13632

land.rhs:                                         ; preds = %do.cond
  %62 = load i32, i32* %exponent, align 4, !dbg !13633, !tbaa !2436
  %63 = load i32, i32* %exponent_max, align 4, !dbg !13634, !tbaa !2436
  %cmp63 = icmp slt i32 %62, %63, !dbg !13635
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %64 = phi i1 [ false, %do.cond ], [ %cmp63, %land.rhs ], !dbg !13636
  br i1 %64, label %do.body, label %do.end, !dbg !13626, !llvm.loop !13637

do.end:                                           ; preds = %land.end
  %65 = load x86_fp80, x86_fp80* %e, align 16, !dbg !13639, !tbaa !13589
  %66 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13640, !tbaa !13589
  %div65 = fdiv x86_fp80 %66, %65, !dbg !13640
  store x86_fp80 %div65, x86_fp80* %damt, align 16, !dbg !13640, !tbaa !13589
  %67 = load i8*, i8** %buf.addr, align 8, !dbg !13641, !tbaa !2442
  %68 = load i32, i32* %inexact_style, align 4, !dbg !13642, !tbaa !2436
  %69 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13643, !tbaa !13589
  %call66 = call x86_fp80 @adjust_value(i32 %68, x86_fp80 %69), !dbg !13644
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.333, i64 0, i64 0), x86_fp80 %call66) #13, !dbg !13645
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !13646, !tbaa !2442
  %call68 = call i64 @strlen(i8* %70) #16, !dbg !13647
  store i64 %call68, i64* %buflen, align 8, !dbg !13648, !tbaa !2579
  %71 = load i64, i64* %decimal_pointlen, align 8, !dbg !13649, !tbaa !2579
  %add69 = add i64 %71, 1, !dbg !13650
  store i64 %add69, i64* %nonintegerlen, align 8, !dbg !13651, !tbaa !2579
  %72 = load i64, i64* %nonintegerlen, align 8, !dbg !13652, !tbaa !2579
  %add70 = add i64 1, %72, !dbg !13654
  %73 = load i32, i32* %opts.addr, align 4, !dbg !13655, !tbaa !2436
  %and71 = and i32 %73, 32, !dbg !13656
  %tobool72 = icmp ne i32 %and71, 0, !dbg !13657
  %lnot = xor i1 %tobool72, true, !dbg !13657
  %lnot.ext = zext i1 %lnot to i32, !dbg !13657
  %conv73 = sext i32 %lnot.ext to i64, !dbg !13657
  %add74 = add i64 %add70, %conv73, !dbg !13658
  %74 = load i64, i64* %buflen, align 8, !dbg !13659, !tbaa !2579
  %cmp75 = icmp ult i64 %add74, %74, !dbg !13660
  br i1 %cmp75, label %if.then83, label %lor.lhs.false, !dbg !13661

lor.lhs.false:                                    ; preds = %do.end
  %75 = load i32, i32* %opts.addr, align 4, !dbg !13662, !tbaa !2436
  %and77 = and i32 %75, 8, !dbg !13663
  %tobool78 = icmp ne i32 %and77, 0, !dbg !13663
  br i1 %tobool78, label %land.lhs.true79, label %if.end89, !dbg !13664

land.lhs.true79:                                  ; preds = %lor.lhs.false
  %76 = load i8*, i8** %buf.addr, align 8, !dbg !13665, !tbaa !2442
  %77 = load i64, i64* %buflen, align 8, !dbg !13666, !tbaa !2579
  %sub = sub i64 %77, 1, !dbg !13667
  %arrayidx = getelementptr inbounds i8, i8* %76, i64 %sub, !dbg !13665, !ctir !143
  %78 = load i8, i8* %arrayidx, align 1, !dbg !13665, !tbaa !2497
  %conv80 = sext i8 %78 to i32, !dbg !13665
  %cmp81 = icmp eq i32 %conv80, 48, !dbg !13668
  br i1 %cmp81, label %if.then83, label %if.end89, !dbg !13669

if.then83:                                        ; preds = %land.lhs.true79, %do.end
  %79 = load i8*, i8** %buf.addr, align 8, !dbg !13670, !tbaa !2442
  %80 = load i32, i32* %inexact_style, align 4, !dbg !13672, !tbaa !2436
  %81 = load x86_fp80, x86_fp80* %damt, align 16, !dbg !13673, !tbaa !13589
  %mul84 = fmul x86_fp80 %81, 0xK4002A000000000000000, !dbg !13674
  %call85 = call x86_fp80 @adjust_value(i32 %80, x86_fp80 %mul84), !dbg !13675
  %div86 = fdiv x86_fp80 %call85, 0xK4002A000000000000000, !dbg !13676
  %call87 = call i32 (i8*, i8*, ...) @sprintf(i8* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.332, i64 0, i64 0), x86_fp80 %div86) #13, !dbg !13677
  %82 = load i8*, i8** %buf.addr, align 8, !dbg !13678, !tbaa !2442
  %call88 = call i64 @strlen(i8* %82) #16, !dbg !13679
  store i64 %call88, i64* %buflen, align 8, !dbg !13680, !tbaa !2579
  store i64 0, i64* %nonintegerlen, align 8, !dbg !13681, !tbaa !2579
  br label %if.end89, !dbg !13682

if.end89:                                         ; preds = %if.then83, %land.lhs.true79, %lor.lhs.false
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then52
  %83 = load i8*, i8** %psuffix, align 8, !dbg !13683, !tbaa !2442
  %84 = load i64, i64* %buflen, align 8, !dbg !13684, !tbaa !2579
  %idx.neg = sub i64 0, %84, !dbg !13685
  %add.ptr91 = getelementptr inbounds i8, i8* %83, i64 %idx.neg, !dbg !13685
  store i8* %add.ptr91, i8** %p, align 8, !dbg !13686, !tbaa !2442
  %85 = load i8*, i8** %p, align 8, !dbg !13687, !tbaa !2442
  %86 = load i8*, i8** %buf.addr, align 8, !dbg !13688, !tbaa !2442
  %87 = load i64, i64* %buflen, align 8, !dbg !13689, !tbaa !2579
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %87, i1 false), !dbg !13690
  %88 = load i8*, i8** %p, align 8, !dbg !13691, !tbaa !2442
  %89 = load i64, i64* %buflen, align 8, !dbg !13692, !tbaa !2579
  %add.ptr92 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !13693
  %90 = load i64, i64* %nonintegerlen, align 8, !dbg !13694, !tbaa !2579
  %idx.neg93 = sub i64 0, %90, !dbg !13695
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr92, i64 %idx.neg93, !dbg !13695
  store i8* %add.ptr94, i8** %integerlim, align 8, !dbg !13696, !tbaa !2442
  br label %do_grouping, !dbg !13697

use_integer_arithmetic:                           ; preds = %cond.end, %if.then21
  call void @llvm.dbg.label(metadata !13698), !dbg !13699
  %91 = load i32, i32* %opts.addr, align 4, !dbg !13700, !tbaa !2436
  %and95 = and i32 %91, 16, !dbg !13703
  %tobool96 = icmp ne i32 %and95, 0, !dbg !13703
  br i1 %tobool96, label %if.then97, label %if.end179, !dbg !13704

if.then97:                                        ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4, !dbg !13705, !tbaa !2436
  %92 = load i32, i32* %base, align 4, !dbg !13707, !tbaa !2436
  %conv98 = zext i32 %92 to i64, !dbg !13707
  %93 = load i64, i64* %amt, align 8, !dbg !13709, !tbaa !2579
  %cmp99 = icmp ule i64 %conv98, %93, !dbg !13710
  br i1 %cmp99, label %if.then101, label %if.end178, !dbg !13711

if.then101:                                       ; preds = %if.then97
  br label %do.body102, !dbg !13712

do.body102:                                       ; preds = %land.end138, %if.then101
  call void @llvm.dbg.declare(metadata i32* %r10103, metadata !13714, metadata !DIExpression()), !dbg !13716
  %94 = load i64, i64* %amt, align 8, !dbg !13717, !tbaa !2579
  %95 = load i32, i32* %base, align 4, !dbg !13718, !tbaa !2436
  %conv104 = zext i32 %95 to i64, !dbg !13718
  %rem105 = urem i64 %94, %conv104, !dbg !13719
  %mul106 = mul i64 %rem105, 10, !dbg !13720
  %96 = load i32, i32* %tenths, align 4, !dbg !13721, !tbaa !2436
  %conv107 = sext i32 %96 to i64, !dbg !13721
  %add108 = add i64 %mul106, %conv107, !dbg !13722
  %conv109 = trunc i64 %add108 to i32, !dbg !13723
  store i32 %conv109, i32* %r10103, align 4, !dbg !13716, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %r2110, metadata !13724, metadata !DIExpression()), !dbg !13725
  %97 = load i32, i32* %r10103, align 4, !dbg !13726, !tbaa !2436
  %98 = load i32, i32* %base, align 4, !dbg !13727, !tbaa !2436
  %rem111 = urem i32 %97, %98, !dbg !13728
  %mul112 = mul i32 %rem111, 2, !dbg !13729
  %99 = load i32, i32* %rounding, align 4, !dbg !13730, !tbaa !2436
  %shr = ashr i32 %99, 1, !dbg !13731
  %add113 = add i32 %mul112, %shr, !dbg !13732
  store i32 %add113, i32* %r2110, align 4, !dbg !13725, !tbaa !2436
  %100 = load i32, i32* %base, align 4, !dbg !13733, !tbaa !2436
  %conv114 = zext i32 %100 to i64, !dbg !13733
  %101 = load i64, i64* %amt, align 8, !dbg !13734, !tbaa !2579
  %div115 = udiv i64 %101, %conv114, !dbg !13734
  store i64 %div115, i64* %amt, align 8, !dbg !13734, !tbaa !2579
  %102 = load i32, i32* %r10103, align 4, !dbg !13735, !tbaa !2436
  %103 = load i32, i32* %base, align 4, !dbg !13736, !tbaa !2436
  %div116 = udiv i32 %102, %103, !dbg !13737
  store i32 %div116, i32* %tenths, align 4, !dbg !13738, !tbaa !2436
  %104 = load i32, i32* %r2110, align 4, !dbg !13739, !tbaa !2436
  %105 = load i32, i32* %base, align 4, !dbg !13740, !tbaa !2436
  %cmp117 = icmp ult i32 %104, %105, !dbg !13741
  br i1 %cmp117, label %cond.true119, label %cond.false123, !dbg !13739

cond.true119:                                     ; preds = %do.body102
  %106 = load i32, i32* %r2110, align 4, !dbg !13742, !tbaa !2436
  %107 = load i32, i32* %rounding, align 4, !dbg !13743, !tbaa !2436
  %add120 = add i32 %106, %107, !dbg !13744
  %cmp121 = icmp ne i32 %add120, 0, !dbg !13745
  %conv122 = zext i1 %cmp121 to i32, !dbg !13745
  br label %cond.end128, !dbg !13739

cond.false123:                                    ; preds = %do.body102
  %108 = load i32, i32* %base, align 4, !dbg !13746, !tbaa !2436
  %109 = load i32, i32* %r2110, align 4, !dbg !13747, !tbaa !2436
  %110 = load i32, i32* %rounding, align 4, !dbg !13748, !tbaa !2436
  %add124 = add i32 %109, %110, !dbg !13749
  %cmp125 = icmp ult i32 %108, %add124, !dbg !13750
  %conv126 = zext i1 %cmp125 to i32, !dbg !13750
  %add127 = add nsw i32 2, %conv126, !dbg !13751
  br label %cond.end128, !dbg !13739

cond.end128:                                      ; preds = %cond.false123, %cond.true119
  %cond129 = phi i32 [ %conv122, %cond.true119 ], [ %add127, %cond.false123 ], !dbg !13739
  store i32 %cond129, i32* %rounding, align 4, !dbg !13752, !tbaa !2436
  %111 = load i32, i32* %exponent, align 4, !dbg !13753, !tbaa !2436
  %inc130 = add nsw i32 %111, 1, !dbg !13753
  store i32 %inc130, i32* %exponent, align 4, !dbg !13753, !tbaa !2436
  br label %do.cond131, !dbg !13754

do.cond131:                                       ; preds = %cond.end128
  %112 = load i32, i32* %base, align 4, !dbg !13755, !tbaa !2436
  %conv132 = zext i32 %112 to i64, !dbg !13755
  %113 = load i64, i64* %amt, align 8, !dbg !13756, !tbaa !2579
  %cmp133 = icmp ule i64 %conv132, %113, !dbg !13757
  br i1 %cmp133, label %land.rhs135, label %land.end138, !dbg !13758

land.rhs135:                                      ; preds = %do.cond131
  %114 = load i32, i32* %exponent, align 4, !dbg !13759, !tbaa !2436
  %115 = load i32, i32* %exponent_max, align 4, !dbg !13760, !tbaa !2436
  %cmp136 = icmp slt i32 %114, %115, !dbg !13761
  br label %land.end138

land.end138:                                      ; preds = %land.rhs135, %do.cond131
  %116 = phi i1 [ false, %do.cond131 ], [ %cmp136, %land.rhs135 ], !dbg !13762
  br i1 %116, label %do.body102, label %do.end139, !dbg !13754, !llvm.loop !13763

do.end139:                                        ; preds = %land.end138
  %117 = load i64, i64* %amt, align 8, !dbg !13765, !tbaa !2579
  %cmp140 = icmp ult i64 %117, 10, !dbg !13767
  br i1 %cmp140, label %if.then142, label %if.end177, !dbg !13768

if.then142:                                       ; preds = %do.end139
  %118 = load i32, i32* %inexact_style, align 4, !dbg !13769, !tbaa !2436
  %cmp143 = icmp eq i32 %118, 1, !dbg !13772
  br i1 %cmp143, label %cond.true145, label %cond.false150, !dbg !13773

cond.true145:                                     ; preds = %if.then142
  %119 = load i32, i32* %rounding, align 4, !dbg !13774, !tbaa !2436
  %120 = load i32, i32* %tenths, align 4, !dbg !13775, !tbaa !2436
  %and146 = and i32 %120, 1, !dbg !13776
  %add147 = add nsw i32 %119, %and146, !dbg !13777
  %cmp148 = icmp slt i32 2, %add147, !dbg !13778
  br i1 %cmp148, label %if.then156, label %if.end163, !dbg !13769

cond.false150:                                    ; preds = %if.then142
  %121 = load i32, i32* %inexact_style, align 4, !dbg !13779, !tbaa !2436
  %cmp151 = icmp eq i32 %121, 0, !dbg !13780
  br i1 %cmp151, label %land.lhs.true153, label %if.end163, !dbg !13781

land.lhs.true153:                                 ; preds = %cond.false150
  %122 = load i32, i32* %rounding, align 4, !dbg !13782, !tbaa !2436
  %cmp154 = icmp slt i32 0, %122, !dbg !13783
  br i1 %cmp154, label %if.then156, label %if.end163, !dbg !13773

if.then156:                                       ; preds = %land.lhs.true153, %cond.true145
  %123 = load i32, i32* %tenths, align 4, !dbg !13784, !tbaa !2436
  %inc157 = add nsw i32 %123, 1, !dbg !13784
  store i32 %inc157, i32* %tenths, align 4, !dbg !13784, !tbaa !2436
  store i32 0, i32* %rounding, align 4, !dbg !13786, !tbaa !2436
  %124 = load i32, i32* %tenths, align 4, !dbg !13787, !tbaa !2436
  %cmp158 = icmp eq i32 %124, 10, !dbg !13789
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !13790

if.then160:                                       ; preds = %if.then156
  %125 = load i64, i64* %amt, align 8, !dbg !13791, !tbaa !2579
  %inc161 = add i64 %125, 1, !dbg !13791
  store i64 %inc161, i64* %amt, align 8, !dbg !13791, !tbaa !2579
  store i32 0, i32* %tenths, align 4, !dbg !13793, !tbaa !2436
  br label %if.end162, !dbg !13794

if.end162:                                        ; preds = %if.then160, %if.then156
  br label %if.end163, !dbg !13795

if.end163:                                        ; preds = %if.end162, %land.lhs.true153, %cond.false150, %cond.true145
  %126 = load i64, i64* %amt, align 8, !dbg !13796, !tbaa !2579
  %cmp164 = icmp ult i64 %126, 10, !dbg !13798
  br i1 %cmp164, label %land.lhs.true166, label %if.end176, !dbg !13799

land.lhs.true166:                                 ; preds = %if.end163
  %127 = load i32, i32* %tenths, align 4, !dbg !13800, !tbaa !2436
  %tobool167 = icmp ne i32 %127, 0, !dbg !13800
  br i1 %tobool167, label %if.then171, label %lor.lhs.false168, !dbg !13801

lor.lhs.false168:                                 ; preds = %land.lhs.true166
  %128 = load i32, i32* %opts.addr, align 4, !dbg !13802, !tbaa !2436
  %and169 = and i32 %128, 8, !dbg !13803
  %tobool170 = icmp ne i32 %and169, 0, !dbg !13803
  br i1 %tobool170, label %if.end176, label %if.then171, !dbg !13804

if.then171:                                       ; preds = %lor.lhs.false168, %land.lhs.true166
  %129 = load i32, i32* %tenths, align 4, !dbg !13805, !tbaa !2436
  %add172 = add nsw i32 48, %129, !dbg !13807
  %conv173 = trunc i32 %add172 to i8, !dbg !13808
  %130 = load i8*, i8** %p, align 8, !dbg !13809, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %130, i32 -1, !dbg !13809
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13809, !tbaa !2442
  store i8 %conv173, i8* %incdec.ptr, align 1, !dbg !13810, !tbaa !2497, !ctir !144
  %131 = load i64, i64* %decimal_pointlen, align 8, !dbg !13811, !tbaa !2579
  %132 = load i8*, i8** %p, align 8, !dbg !13812, !tbaa !2442
  %idx.neg174 = sub i64 0, %131, !dbg !13812
  %add.ptr175 = getelementptr inbounds i8, i8* %132, i64 %idx.neg174, !dbg !13812
  store i8* %add.ptr175, i8** %p, align 8, !dbg !13812, !tbaa !2442
  %133 = load i8*, i8** %p, align 8, !dbg !13813, !tbaa !2442
  %134 = load i8*, i8** %decimal_point, align 8, !dbg !13814, !tbaa !2442
  %135 = load i64, i64* %decimal_pointlen, align 8, !dbg !13815, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 1 %134, i64 %135, i1 false), !dbg !13816
  store i32 0, i32* %rounding, align 4, !dbg !13817, !tbaa !2436
  store i32 0, i32* %tenths, align 4, !dbg !13818, !tbaa !2436
  br label %if.end176, !dbg !13819

if.end176:                                        ; preds = %if.then171, %lor.lhs.false168, %if.end163
  br label %if.end177, !dbg !13820

if.end177:                                        ; preds = %if.end176, %do.end139
  br label %if.end178, !dbg !13821

if.end178:                                        ; preds = %if.end177, %if.then97
  br label %if.end179, !dbg !13822

if.end179:                                        ; preds = %if.end178, %use_integer_arithmetic
  %136 = load i32, i32* %inexact_style, align 4, !dbg !13823, !tbaa !2436
  %cmp180 = icmp eq i32 %136, 1, !dbg !13825
  br i1 %cmp180, label %cond.true182, label %cond.false191, !dbg !13826

cond.true182:                                     ; preds = %if.end179
  %137 = load i32, i32* %tenths, align 4, !dbg !13827, !tbaa !2436
  %138 = load i32, i32* %rounding, align 4, !dbg !13828, !tbaa !2436
  %conv183 = sext i32 %138 to i64, !dbg !13828
  %139 = load i64, i64* %amt, align 8, !dbg !13829, !tbaa !2579
  %and184 = and i64 %139, 1, !dbg !13830
  %add185 = add i64 %conv183, %and184, !dbg !13831
  %cmp186 = icmp ult i64 0, %add185, !dbg !13832
  %conv187 = zext i1 %cmp186 to i32, !dbg !13832
  %add188 = add nsw i32 %137, %conv187, !dbg !13833
  %cmp189 = icmp slt i32 5, %add188, !dbg !13834
  br i1 %cmp189, label %if.then198, label %if.end219, !dbg !13823

cond.false191:                                    ; preds = %if.end179
  %140 = load i32, i32* %inexact_style, align 4, !dbg !13835, !tbaa !2436
  %cmp192 = icmp eq i32 %140, 0, !dbg !13836
  br i1 %cmp192, label %land.lhs.true194, label %if.end219, !dbg !13837

land.lhs.true194:                                 ; preds = %cond.false191
  %141 = load i32, i32* %tenths, align 4, !dbg !13838, !tbaa !2436
  %142 = load i32, i32* %rounding, align 4, !dbg !13839, !tbaa !2436
  %add195 = add nsw i32 %141, %142, !dbg !13840
  %cmp196 = icmp slt i32 0, %add195, !dbg !13841
  br i1 %cmp196, label %if.then198, label %if.end219, !dbg !13826

if.then198:                                       ; preds = %land.lhs.true194, %cond.true182
  %143 = load i64, i64* %amt, align 8, !dbg !13842, !tbaa !2579
  %inc199 = add i64 %143, 1, !dbg !13842
  store i64 %inc199, i64* %amt, align 8, !dbg !13842, !tbaa !2579
  %144 = load i32, i32* %opts.addr, align 4, !dbg !13844, !tbaa !2436
  %and200 = and i32 %144, 16, !dbg !13846
  %tobool201 = icmp ne i32 %and200, 0, !dbg !13846
  br i1 %tobool201, label %land.lhs.true202, label %if.end218, !dbg !13847

land.lhs.true202:                                 ; preds = %if.then198
  %145 = load i64, i64* %amt, align 8, !dbg !13848, !tbaa !2579
  %146 = load i32, i32* %base, align 4, !dbg !13849, !tbaa !2436
  %conv203 = zext i32 %146 to i64, !dbg !13849
  %cmp204 = icmp eq i64 %145, %conv203, !dbg !13850
  br i1 %cmp204, label %land.lhs.true206, label %if.end218, !dbg !13851

land.lhs.true206:                                 ; preds = %land.lhs.true202
  %147 = load i32, i32* %exponent, align 4, !dbg !13852, !tbaa !2436
  %148 = load i32, i32* %exponent_max, align 4, !dbg !13853, !tbaa !2436
  %cmp207 = icmp slt i32 %147, %148, !dbg !13854
  br i1 %cmp207, label %if.then209, label %if.end218, !dbg !13855

if.then209:                                       ; preds = %land.lhs.true206
  %149 = load i32, i32* %exponent, align 4, !dbg !13856, !tbaa !2436
  %inc210 = add nsw i32 %149, 1, !dbg !13856
  store i32 %inc210, i32* %exponent, align 4, !dbg !13856, !tbaa !2436
  %150 = load i32, i32* %opts.addr, align 4, !dbg !13858, !tbaa !2436
  %and211 = and i32 %150, 8, !dbg !13860
  %tobool212 = icmp ne i32 %and211, 0, !dbg !13860
  br i1 %tobool212, label %if.end217, label %if.then213, !dbg !13861

if.then213:                                       ; preds = %if.then209
  %151 = load i8*, i8** %p, align 8, !dbg !13862, !tbaa !2442
  %incdec.ptr214 = getelementptr inbounds i8, i8* %151, i32 -1, !dbg !13862
  store i8* %incdec.ptr214, i8** %p, align 8, !dbg !13862, !tbaa !2442
  store i8 48, i8* %incdec.ptr214, align 1, !dbg !13864, !tbaa !2497, !ctir !144
  %152 = load i64, i64* %decimal_pointlen, align 8, !dbg !13865, !tbaa !2579
  %153 = load i8*, i8** %p, align 8, !dbg !13866, !tbaa !2442
  %idx.neg215 = sub i64 0, %152, !dbg !13866
  %add.ptr216 = getelementptr inbounds i8, i8* %153, i64 %idx.neg215, !dbg !13866
  store i8* %add.ptr216, i8** %p, align 8, !dbg !13866, !tbaa !2442
  %154 = load i8*, i8** %p, align 8, !dbg !13867, !tbaa !2442
  %155 = load i8*, i8** %decimal_point, align 8, !dbg !13868, !tbaa !2442
  %156 = load i64, i64* %decimal_pointlen, align 8, !dbg !13869, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %155, i64 %156, i1 false), !dbg !13870
  br label %if.end217, !dbg !13871

if.end217:                                        ; preds = %if.then213, %if.then209
  store i64 1, i64* %amt, align 8, !dbg !13872, !tbaa !2579
  br label %if.end218, !dbg !13873

if.end218:                                        ; preds = %if.end217, %land.lhs.true206, %land.lhs.true202, %if.then198
  br label %if.end219, !dbg !13874

if.end219:                                        ; preds = %if.end218, %land.lhs.true194, %cond.false191, %cond.true182
  %157 = load i8*, i8** %p, align 8, !dbg !13875, !tbaa !2442
  store i8* %157, i8** %integerlim, align 8, !dbg !13876, !tbaa !2442
  br label %do.body220, !dbg !13877

do.body220:                                       ; preds = %do.cond226, %if.end219
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !13878, metadata !DIExpression()), !dbg !13880
  %158 = load i64, i64* %amt, align 8, !dbg !13881, !tbaa !2579
  %rem221 = urem i64 %158, 10, !dbg !13882
  %conv222 = trunc i64 %rem221 to i32, !dbg !13881
  store i32 %conv222, i32* %digit, align 4, !dbg !13880, !tbaa !2436
  %159 = load i32, i32* %digit, align 4, !dbg !13883, !tbaa !2436
  %add223 = add nsw i32 %159, 48, !dbg !13884
  %conv224 = trunc i32 %add223 to i8, !dbg !13883
  %160 = load i8*, i8** %p, align 8, !dbg !13885, !tbaa !2442
  %incdec.ptr225 = getelementptr inbounds i8, i8* %160, i32 -1, !dbg !13885
  store i8* %incdec.ptr225, i8** %p, align 8, !dbg !13885, !tbaa !2442
  store i8 %conv224, i8* %incdec.ptr225, align 1, !dbg !13886, !tbaa !2497, !ctir !144
  br label %do.cond226, !dbg !13887

do.cond226:                                       ; preds = %do.body220
  %161 = load i64, i64* %amt, align 8, !dbg !13888, !tbaa !2579
  %div227 = udiv i64 %161, 10, !dbg !13888
  store i64 %div227, i64* %amt, align 8, !dbg !13888, !tbaa !2579
  %cmp228 = icmp ne i64 %div227, 0, !dbg !13889
  br i1 %cmp228, label %do.body220, label %do.end230, !dbg !13887, !llvm.loop !13890

do.end230:                                        ; preds = %do.cond226
  br label %do_grouping, !dbg !13892

do_grouping:                                      ; preds = %do.end230, %if.end90
  call void @llvm.dbg.label(metadata !13893), !dbg !13894
  %162 = load i32, i32* %opts.addr, align 4, !dbg !13895, !tbaa !2436
  %and231 = and i32 %162, 4, !dbg !13897
  %tobool232 = icmp ne i32 %and231, 0, !dbg !13897
  br i1 %tobool232, label %if.then233, label %if.end235, !dbg !13898

if.then233:                                       ; preds = %do_grouping
  %163 = load i8*, i8** %p, align 8, !dbg !13899, !tbaa !2442
  %164 = load i8*, i8** %integerlim, align 8, !dbg !13900, !tbaa !2442
  %165 = load i8*, i8** %p, align 8, !dbg !13901, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %164 to i64, !dbg !13902
  %sub.ptr.rhs.cast = ptrtoint i8* %165 to i64, !dbg !13902
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13902
  %166 = load i8*, i8** %grouping, align 8, !dbg !13903, !tbaa !2442
  %167 = load i8*, i8** %thousands_sep, align 8, !dbg !13904, !tbaa !2442
  %call234 = call i8* @group_number(i8* %163, i64 %sub.ptr.sub, i8* %166, i8* %167), !dbg !13905
  store i8* %call234, i8** %p, align 8, !dbg !13906, !tbaa !2442
  br label %if.end235, !dbg !13907

if.end235:                                        ; preds = %if.then233, %do_grouping
  %168 = load i32, i32* %opts.addr, align 4, !dbg !13908, !tbaa !2436
  %and236 = and i32 %168, 128, !dbg !13910
  %tobool237 = icmp ne i32 %and236, 0, !dbg !13910
  br i1 %tobool237, label %if.then238, label %if.end288, !dbg !13911

if.then238:                                       ; preds = %if.end235
  %169 = load i32, i32* %exponent, align 4, !dbg !13912, !tbaa !2436
  %cmp239 = icmp slt i32 %169, 0, !dbg !13915
  br i1 %cmp239, label %if.then241, label %if.end251, !dbg !13916

if.then241:                                       ; preds = %if.then238
  call void @llvm.dbg.declare(metadata i64* %power, metadata !13917, metadata !DIExpression()), !dbg !13919
  store i32 0, i32* %exponent, align 4, !dbg !13920, !tbaa !2436
  store i64 1, i64* %power, align 8, !dbg !13921, !tbaa !2579
  br label %for.cond, !dbg !13923

for.cond:                                         ; preds = %for.inc, %if.then241
  %170 = load i64, i64* %power, align 8, !dbg !13924, !tbaa !2579
  %171 = load i64, i64* %to_block_size.addr, align 8, !dbg !13926, !tbaa !2579
  %cmp242 = icmp ult i64 %170, %171, !dbg !13927
  br i1 %cmp242, label %for.body, label %for.end, !dbg !13928

for.body:                                         ; preds = %for.cond
  %172 = load i32, i32* %exponent, align 4, !dbg !13929, !tbaa !2436
  %inc244 = add nsw i32 %172, 1, !dbg !13929
  store i32 %inc244, i32* %exponent, align 4, !dbg !13929, !tbaa !2436
  %173 = load i32, i32* %exponent_max, align 4, !dbg !13931, !tbaa !2436
  %cmp245 = icmp eq i32 %inc244, %173, !dbg !13932
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !13933

if.then247:                                       ; preds = %for.body
  br label %for.end, !dbg !13934

if.end248:                                        ; preds = %for.body
  br label %for.inc, !dbg !13931

for.inc:                                          ; preds = %if.end248
  %174 = load i32, i32* %base, align 4, !dbg !13935, !tbaa !2436
  %conv249 = zext i32 %174 to i64, !dbg !13935
  %175 = load i64, i64* %power, align 8, !dbg !13936, !tbaa !2579
  %mul250 = mul i64 %175, %conv249, !dbg !13936
  store i64 %mul250, i64* %power, align 8, !dbg !13936, !tbaa !2579
  br label %for.cond, !dbg !13937, !llvm.loop !13938

for.end:                                          ; preds = %if.then247, %for.cond
  br label %if.end251, !dbg !13940

if.end251:                                        ; preds = %for.end, %if.then238
  %176 = load i32, i32* %exponent, align 4, !dbg !13941, !tbaa !2436
  %177 = load i32, i32* %opts.addr, align 4, !dbg !13943, !tbaa !2436
  %and252 = and i32 %177, 256, !dbg !13944
  %or = or i32 %176, %and252, !dbg !13945
  %tobool253 = icmp ne i32 %or, 0, !dbg !13945
  br i1 %tobool253, label %land.lhs.true254, label %if.end259, !dbg !13946

land.lhs.true254:                                 ; preds = %if.end251
  %178 = load i32, i32* %opts.addr, align 4, !dbg !13947, !tbaa !2436
  %and255 = and i32 %178, 64, !dbg !13948
  %tobool256 = icmp ne i32 %and255, 0, !dbg !13948
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !13949

if.then257:                                       ; preds = %land.lhs.true254
  %179 = load i8*, i8** %psuffix, align 8, !dbg !13950, !tbaa !2442
  %incdec.ptr258 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !13950
  store i8* %incdec.ptr258, i8** %psuffix, align 8, !dbg !13950, !tbaa !2442
  store i8 32, i8* %179, align 1, !dbg !13951, !tbaa !2497, !ctir !144
  br label %if.end259, !dbg !13952

if.end259:                                        ; preds = %if.then257, %land.lhs.true254, %if.end251
  %180 = load i32, i32* %exponent, align 4, !dbg !13953, !tbaa !2436
  %tobool260 = icmp ne i32 %180, 0, !dbg !13953
  br i1 %tobool260, label %if.then261, label %if.end275, !dbg !13955

if.then261:                                       ; preds = %if.end259
  %181 = load i32, i32* %opts.addr, align 4, !dbg !13956, !tbaa !2436
  %and262 = and i32 %181, 32, !dbg !13957
  %tobool263 = icmp ne i32 %and262, 0, !dbg !13957
  br i1 %tobool263, label %cond.false268, label %land.lhs.true264, !dbg !13958

land.lhs.true264:                                 ; preds = %if.then261
  %182 = load i32, i32* %exponent, align 4, !dbg !13959, !tbaa !2436
  %cmp265 = icmp eq i32 %182, 1, !dbg !13960
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !13961

cond.true267:                                     ; preds = %land.lhs.true264
  br label %cond.end271, !dbg !13961

cond.false268:                                    ; preds = %land.lhs.true264, %if.then261
  %183 = load i32, i32* %exponent, align 4, !dbg !13962, !tbaa !2436
  %idxprom = sext i32 %183 to i64, !dbg !13963
  %arrayidx269 = getelementptr inbounds [9 x i8], [9 x i8]* @power_letter, i64 0, i64 %idxprom, !dbg !13963, !ctir !1318
  %184 = load i8, i8* %arrayidx269, align 1, !dbg !13963, !tbaa !2497
  %conv270 = sext i8 %184 to i32, !dbg !13963
  br label %cond.end271, !dbg !13961

cond.end271:                                      ; preds = %cond.false268, %cond.true267
  %cond272 = phi i32 [ 107, %cond.true267 ], [ %conv270, %cond.false268 ], !dbg !13961
  %conv273 = trunc i32 %cond272 to i8, !dbg !13964
  %185 = load i8*, i8** %psuffix, align 8, !dbg !13965, !tbaa !2442
  %incdec.ptr274 = getelementptr inbounds i8, i8* %185, i32 1, !dbg !13965
  store i8* %incdec.ptr274, i8** %psuffix, align 8, !dbg !13965, !tbaa !2442
  store i8 %conv273, i8* %185, align 1, !dbg !13966, !tbaa !2497, !ctir !144
  br label %if.end275, !dbg !13967

if.end275:                                        ; preds = %cond.end271, %if.end259
  %186 = load i32, i32* %opts.addr, align 4, !dbg !13968, !tbaa !2436
  %and276 = and i32 %186, 256, !dbg !13970
  %tobool277 = icmp ne i32 %and276, 0, !dbg !13970
  br i1 %tobool277, label %if.then278, label %if.end287, !dbg !13971

if.then278:                                       ; preds = %if.end275
  %187 = load i32, i32* %opts.addr, align 4, !dbg !13972, !tbaa !2436
  %and279 = and i32 %187, 32, !dbg !13975
  %tobool280 = icmp ne i32 %and279, 0, !dbg !13975
  br i1 %tobool280, label %land.lhs.true281, label %if.end285, !dbg !13976

land.lhs.true281:                                 ; preds = %if.then278
  %188 = load i32, i32* %exponent, align 4, !dbg !13977, !tbaa !2436
  %tobool282 = icmp ne i32 %188, 0, !dbg !13977
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !13978

if.then283:                                       ; preds = %land.lhs.true281
  %189 = load i8*, i8** %psuffix, align 8, !dbg !13979, !tbaa !2442
  %incdec.ptr284 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !13979
  store i8* %incdec.ptr284, i8** %psuffix, align 8, !dbg !13979, !tbaa !2442
  store i8 105, i8* %189, align 1, !dbg !13980, !tbaa !2497, !ctir !144
  br label %if.end285, !dbg !13981

if.end285:                                        ; preds = %if.then283, %land.lhs.true281, %if.then278
  %190 = load i8*, i8** %psuffix, align 8, !dbg !13982, !tbaa !2442
  %incdec.ptr286 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !13982
  store i8* %incdec.ptr286, i8** %psuffix, align 8, !dbg !13982, !tbaa !2442
  store i8 66, i8* %190, align 1, !dbg !13983, !tbaa !2497, !ctir !144
  br label %if.end287, !dbg !13984

if.end287:                                        ; preds = %if.end285, %if.end275
  br label %if.end288, !dbg !13985

if.end288:                                        ; preds = %if.end287, %if.end235
  %191 = load i8*, i8** %psuffix, align 8, !dbg !13986, !tbaa !2442
  store i8 0, i8* %191, align 1, !dbg !13987, !tbaa !2497, !ctir !144
  %192 = load i8*, i8** %p, align 8, !dbg !13988, !tbaa !2442
  ret i8* %192, !dbg !13989
}

; Function Attrs: nounwind
declare dso_local %struct.lconv* @localeconv() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) #0 !dbg !13990 !ctir !1323 {
entry:
  %inexact_style.addr = alloca i32, align 4
  %value.addr = alloca x86_fp80, align 16
  %u = alloca i64, align 8, !ctir !168
  store i32 %inexact_style, i32* %inexact_style.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %inexact_style.addr, metadata !13991, metadata !DIExpression()), !dbg !13992
  store x86_fp80 %value, x86_fp80* %value.addr, align 16, !tbaa !13589
  call void @llvm.dbg.declare(metadata x86_fp80* %value.addr, metadata !13993, metadata !DIExpression()), !dbg !13994
  %0 = load i32, i32* %inexact_style.addr, align 4, !dbg !13995, !tbaa !2436
  %cmp = icmp ne i32 %0, 1, !dbg !13997
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13998

land.lhs.true:                                    ; preds = %entry
  %1 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !13999, !tbaa !13589
  %cmp1 = fcmp olt x86_fp80 %1, 0xK403EFFFFFFFFFFFFFFFF, !dbg !14000
  br i1 %cmp1, label %if.then, label %if.end, !dbg !14001

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %u, metadata !14002, metadata !DIExpression()), !dbg !14004
  %2 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14005, !tbaa !13589
  %conv = fptoui x86_fp80 %2 to i64, !dbg !14005
  store i64 %conv, i64* %u, align 8, !dbg !14004, !tbaa !2579
  %3 = load i64, i64* %u, align 8, !dbg !14006, !tbaa !2579
  %4 = load i32, i32* %inexact_style.addr, align 4, !dbg !14007, !tbaa !2436
  %cmp2 = icmp eq i32 %4, 0, !dbg !14008
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !14009

land.rhs:                                         ; preds = %if.then
  %5 = load i64, i64* %u, align 8, !dbg !14010, !tbaa !2579
  %conv4 = uitofp i64 %5 to x86_fp80, !dbg !14010
  %6 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14011, !tbaa !13589
  %cmp5 = fcmp une x86_fp80 %conv4, %6, !dbg !14012
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp5, %land.rhs ], !dbg !14013
  %land.ext = zext i1 %7 to i32, !dbg !14009
  %conv7 = sext i32 %land.ext to i64, !dbg !14014
  %add = add i64 %3, %conv7, !dbg !14015
  %conv8 = uitofp i64 %add to x86_fp80, !dbg !14006
  store x86_fp80 %conv8, x86_fp80* %value.addr, align 16, !dbg !14016, !tbaa !13589
  br label %if.end, !dbg !14017

if.end:                                           ; preds = %land.end, %land.lhs.true, %entry
  %8 = load x86_fp80, x86_fp80* %value.addr, align 16, !dbg !14018, !tbaa !13589
  ret x86_fp80 %8, !dbg !14019
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) #0 !dbg !14020 !ctir !1325 {
entry:
  %number.addr = alloca i8*, align 8
  %numberlen.addr = alloca i64, align 8
  %grouping.addr = alloca i8*, align 8
  %thousands_sep.addr = alloca i8*, align 8
  %d = alloca i8*, align 8, !ctir !143
  %grouplen = alloca i64, align 8, !ctir !149
  %thousands_seplen = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %buf = alloca [41 x i8], align 16, !ctir !1327
  %g = alloca i8, align 1, !ctir !591
  store i8* %number, i8** %number.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %number.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  store i64 %numberlen, i64* %numberlen.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %numberlen.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  store i8* %grouping, i8** %grouping.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %grouping.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store i8* %thousands_sep, i8** %thousands_sep.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %thousands_sep.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata i8** %d, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata i64* %grouplen, metadata !14031, metadata !DIExpression()), !dbg !14032
  store i64 -1, i64* %grouplen, align 8, !dbg !14032, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %thousands_seplen, metadata !14033, metadata !DIExpression()), !dbg !14034
  %0 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14035, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !14036
  store i64 %call, i64* %thousands_seplen, align 8, !dbg !14034, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14037, metadata !DIExpression()), !dbg !14038
  %1 = load i64, i64* %numberlen.addr, align 8, !dbg !14039, !tbaa !2579
  store i64 %1, i64* %i, align 8, !dbg !14038, !tbaa !2579
  call void @llvm.dbg.declare(metadata [41 x i8]* %buf, metadata !14040, metadata !DIExpression()), !dbg !14041
  %arraydecay = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14042
  %2 = load i8*, i8** %number.addr, align 8, !dbg !14043, !tbaa !2442
  %3 = load i64, i64* %numberlen.addr, align 8, !dbg !14044, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %2, i64 %3, i1 false), !dbg !14042
  %4 = load i8*, i8** %number.addr, align 8, !dbg !14045, !tbaa !2442
  %5 = load i64, i64* %numberlen.addr, align 8, !dbg !14046, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !14047
  store i8* %add.ptr, i8** %d, align 8, !dbg !14048, !tbaa !2442
  br label %for.cond, !dbg !14049

for.cond:                                         ; preds = %if.end13, %entry
  call void @llvm.dbg.declare(metadata i8* %g, metadata !14050, metadata !DIExpression()), !dbg !14054
  %6 = load i8*, i8** %grouping.addr, align 8, !dbg !14055, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !14056, !tbaa !2497, !ctir !147
  store i8 %7, i8* %g, align 1, !dbg !14054, !tbaa !2497
  %8 = load i8, i8* %g, align 1, !dbg !14057, !tbaa !2497
  %tobool = icmp ne i8 %8, 0, !dbg !14057
  br i1 %tobool, label %if.then, label %if.end, !dbg !14059

if.then:                                          ; preds = %for.cond
  %9 = load i8, i8* %g, align 1, !dbg !14060, !tbaa !2497
  %conv = zext i8 %9 to i32, !dbg !14060
  %cmp = icmp slt i32 %conv, 127, !dbg !14062
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14060

cond.true:                                        ; preds = %if.then
  %10 = load i8, i8* %g, align 1, !dbg !14063, !tbaa !2497
  %conv2 = zext i8 %10 to i64, !dbg !14063
  br label %cond.end, !dbg !14060

cond.false:                                       ; preds = %if.then
  %11 = load i64, i64* %i, align 8, !dbg !14064, !tbaa !2579
  br label %cond.end, !dbg !14060

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv2, %cond.true ], [ %11, %cond.false ], !dbg !14060
  store i64 %cond, i64* %grouplen, align 8, !dbg !14065, !tbaa !2579
  %12 = load i8*, i8** %grouping.addr, align 8, !dbg !14066, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !14066
  store i8* %incdec.ptr, i8** %grouping.addr, align 8, !dbg !14066, !tbaa !2442
  br label %if.end, !dbg !14067

if.end:                                           ; preds = %cond.end, %for.cond
  %13 = load i64, i64* %i, align 8, !dbg !14068, !tbaa !2579
  %14 = load i64, i64* %grouplen, align 8, !dbg !14070, !tbaa !2579
  %cmp3 = icmp ult i64 %13, %14, !dbg !14071
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !14072

if.then5:                                         ; preds = %if.end
  %15 = load i64, i64* %i, align 8, !dbg !14073, !tbaa !2579
  store i64 %15, i64* %grouplen, align 8, !dbg !14074, !tbaa !2579
  br label %if.end6, !dbg !14075

if.end6:                                          ; preds = %if.then5, %if.end
  %16 = load i64, i64* %grouplen, align 8, !dbg !14076, !tbaa !2579
  %17 = load i8*, i8** %d, align 8, !dbg !14077, !tbaa !2442
  %idx.neg = sub i64 0, %16, !dbg !14077
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %idx.neg, !dbg !14077
  store i8* %add.ptr7, i8** %d, align 8, !dbg !14077, !tbaa !2442
  %18 = load i64, i64* %grouplen, align 8, !dbg !14078, !tbaa !2579
  %19 = load i64, i64* %i, align 8, !dbg !14079, !tbaa !2579
  %sub = sub i64 %19, %18, !dbg !14079
  store i64 %sub, i64* %i, align 8, !dbg !14079, !tbaa !2579
  %20 = load i8*, i8** %d, align 8, !dbg !14080, !tbaa !2442
  %arraydecay8 = getelementptr inbounds [41 x i8], [41 x i8]* %buf, i64 0, i64 0, !dbg !14081
  %21 = load i64, i64* %i, align 8, !dbg !14082, !tbaa !2579
  %add.ptr9 = getelementptr inbounds i8, i8* %arraydecay8, i64 %21, !dbg !14083
  %22 = load i64, i64* %grouplen, align 8, !dbg !14084, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %add.ptr9, i64 %22, i1 false), !dbg !14085
  %23 = load i64, i64* %i, align 8, !dbg !14086, !tbaa !2579
  %cmp10 = icmp eq i64 %23, 0, !dbg !14088
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14089

if.then12:                                        ; preds = %if.end6
  %24 = load i8*, i8** %d, align 8, !dbg !14090, !tbaa !2442
  ret i8* %24, !dbg !14091

if.end13:                                         ; preds = %if.end6
  %25 = load i64, i64* %thousands_seplen, align 8, !dbg !14092, !tbaa !2579
  %26 = load i8*, i8** %d, align 8, !dbg !14093, !tbaa !2442
  %idx.neg14 = sub i64 0, %25, !dbg !14093
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 %idx.neg14, !dbg !14093
  store i8* %add.ptr15, i8** %d, align 8, !dbg !14093, !tbaa !2442
  %27 = load i8*, i8** %d, align 8, !dbg !14094, !tbaa !2442
  %28 = load i8*, i8** %thousands_sep.addr, align 8, !dbg !14095, !tbaa !2442
  %29 = load i64, i64* %thousands_seplen, align 8, !dbg !14096, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 %29, i1 false), !dbg !14097
  br label %for.cond, !dbg !14098, !llvm.loop !14099
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) #0 !dbg !14102 !ctir !1319 {
entry:
  %spec.addr = alloca i8*, align 8
  %opts.addr = alloca i32*, align 8
  %block_size.addr = alloca i64*, align 8
  %e = alloca i32, align 4, !ctir !1322
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14103, metadata !DIExpression()), !dbg !14104
  store i32* %opts, i32** %opts.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %opts.addr, metadata !14105, metadata !DIExpression()), !dbg !14106
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14107, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14109, metadata !DIExpression()), !dbg !14110
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14111, !tbaa !2442
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14112, !tbaa !2442
  %2 = load i32*, i32** %opts.addr, align 8, !dbg !14113, !tbaa !2442
  %call = call i32 @humblock(i8* %0, i64* %1, i32* %2), !dbg !14114
  store i32 %call, i32* %e, align 4, !dbg !14110, !tbaa !2497
  %3 = load i64*, i64** %block_size.addr, align 8, !dbg !14115, !tbaa !2442
  %4 = load i64, i64* %3, align 8, !dbg !14117, !tbaa !2579, !ctir !168
  %cmp = icmp eq i64 %4, 0, !dbg !14118
  br i1 %cmp, label %if.then, label %if.end, !dbg !14119

if.then:                                          ; preds = %entry
  %call1 = call i64 @default_block_size(), !dbg !14120
  %5 = load i64*, i64** %block_size.addr, align 8, !dbg !14122, !tbaa !2442
  store i64 %call1, i64* %5, align 8, !dbg !14123, !tbaa !2579, !ctir !168
  store i32 4, i32* %e, align 4, !dbg !14124, !tbaa !2497
  br label %if.end, !dbg !14125

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %e, align 4, !dbg !14126, !tbaa !2497
  ret i32 %6, !dbg !14127
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) #0 !dbg !14128 !ctir !1330 {
entry:
  %retval = alloca i32, align 4
  %spec.addr = alloca i8*, align 8
  %block_size.addr = alloca i64*, align 8
  %options.addr = alloca i32*, align 8
  %i = alloca i32, align 4, !ctir !27
  %opts = alloca i32, align 4, !ctir !27
  %ptr = alloca i8*, align 8, !ctir !143
  %e = alloca i32, align 4, !ctir !1322
  store i8* %spec, i8** %spec.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %spec.addr, metadata !14129, metadata !DIExpression()), !dbg !14130
  store i64* %block_size, i64** %block_size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %block_size.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  store i32* %options, i32** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %options.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14135, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %opts, metadata !14137, metadata !DIExpression()), !dbg !14138
  store i32 0, i32* %opts, align 4, !dbg !14138, !tbaa !2436
  %0 = load i8*, i8** %spec.addr, align 8, !dbg !14139, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !14139
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14141

land.lhs.true:                                    ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.337, i64 0, i64 0)) #13, !dbg !14142
  store i8* %call, i8** %spec.addr, align 8, !dbg !14143, !tbaa !2442
  %tobool1 = icmp ne i8* %call, null, !dbg !14143
  br i1 %tobool1, label %if.else, label %land.lhs.true2, !dbg !14144

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.338, i64 0, i64 0)) #13, !dbg !14145
  store i8* %call3, i8** %spec.addr, align 8, !dbg !14146, !tbaa !2442
  %tobool4 = icmp ne i8* %call3, null, !dbg !14146
  br i1 %tobool4, label %if.else, label %if.then, !dbg !14147

if.then:                                          ; preds = %land.lhs.true2
  %call5 = call i64 @default_block_size(), !dbg !14148
  %1 = load i64*, i64** %block_size.addr, align 8, !dbg !14149, !tbaa !2442
  store i64 %call5, i64* %1, align 8, !dbg !14150, !tbaa !2579, !ctir !168
  br label %if.end51, !dbg !14151

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %2 = load i8*, i8** %spec.addr, align 8, !dbg !14152, !tbaa !2442
  %3 = load i8, i8* %2, align 1, !dbg !14155, !tbaa !2497, !ctir !147
  %conv = sext i8 %3 to i32, !dbg !14155
  %cmp = icmp eq i32 %conv, 39, !dbg !14156
  br i1 %cmp, label %if.then7, label %if.end, !dbg !14157

if.then7:                                         ; preds = %if.else
  %4 = load i32, i32* %opts, align 4, !dbg !14158, !tbaa !2436
  %or = or i32 %4, 4, !dbg !14158
  store i32 %or, i32* %opts, align 4, !dbg !14158, !tbaa !2436
  %5 = load i8*, i8** %spec.addr, align 8, !dbg !14160, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !14160
  store i8* %incdec.ptr, i8** %spec.addr, align 8, !dbg !14160, !tbaa !2442
  br label %if.end, !dbg !14161

if.end:                                           ; preds = %if.then7, %if.else
  %6 = load i8*, i8** %spec.addr, align 8, !dbg !14162, !tbaa !2442
  %call8 = call i64 @argmatch(i8* %6, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) #16, !dbg !14162
  %conv9 = trunc i64 %call8 to i32, !dbg !14162
  store i32 %conv9, i32* %i, align 4, !dbg !14164, !tbaa !2436
  %cmp10 = icmp sle i32 0, %conv9, !dbg !14165
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !14166

if.then12:                                        ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !14167, !tbaa !2436
  %idxprom = sext i32 %7 to i64, !dbg !14169
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @block_size_opts, i64 0, i64 %idxprom, !dbg !14169, !ctir !1333
  %8 = load i32, i32* %arrayidx, align 4, !dbg !14169, !tbaa !2436
  %9 = load i32, i32* %opts, align 4, !dbg !14170, !tbaa !2436
  %or13 = or i32 %9, %8, !dbg !14170
  store i32 %or13, i32* %opts, align 4, !dbg !14170, !tbaa !2436
  %10 = load i64*, i64** %block_size.addr, align 8, !dbg !14171, !tbaa !2442
  store i64 1, i64* %10, align 8, !dbg !14172, !tbaa !2579, !ctir !168
  br label %if.end50, !dbg !14173

if.else14:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !14174, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14177, metadata !DIExpression()), !dbg !14178
  %11 = load i8*, i8** %spec.addr, align 8, !dbg !14179, !tbaa !2442
  %12 = load i64*, i64** %block_size.addr, align 8, !dbg !14180, !tbaa !2442
  %call15 = call i32 @xstrtoumax(i8* %11, i8** %ptr, i32 0, i64* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.339, i64 0, i64 0)), !dbg !14181
  store i32 %call15, i32* %e, align 4, !dbg !14178, !tbaa !2497
  %13 = load i32, i32* %e, align 4, !dbg !14182, !tbaa !2497
  %cmp16 = icmp ne i32 %13, 0, !dbg !14184
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !14185

if.then18:                                        ; preds = %if.else14
  %14 = load i32*, i32** %options.addr, align 8, !dbg !14186, !tbaa !2442
  store i32 0, i32* %14, align 4, !dbg !14188, !tbaa !2436, !ctir !27
  %15 = load i32, i32* %e, align 4, !dbg !14189, !tbaa !2497
  store i32 %15, i32* %retval, align 4, !dbg !14190
  br label %return, !dbg !14190

if.end19:                                         ; preds = %if.else14
  br label %for.cond, !dbg !14191

for.cond:                                         ; preds = %for.inc, %if.end19
  %16 = load i8*, i8** %spec.addr, align 8, !dbg !14192, !tbaa !2442
  %17 = load i8, i8* %16, align 1, !dbg !14195, !tbaa !2497, !ctir !147
  %conv20 = sext i8 %17 to i32, !dbg !14195
  %cmp21 = icmp sle i32 48, %conv20, !dbg !14196
  br i1 %cmp21, label %land.rhs, label %land.end, !dbg !14197

land.rhs:                                         ; preds = %for.cond
  %18 = load i8*, i8** %spec.addr, align 8, !dbg !14198, !tbaa !2442
  %19 = load i8, i8* %18, align 1, !dbg !14199, !tbaa !2497, !ctir !147
  %conv23 = sext i8 %19 to i32, !dbg !14199
  %cmp24 = icmp sle i32 %conv23, 57, !dbg !14200
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp24, %land.rhs ], !dbg !14201
  %lnot = xor i1 %20, true, !dbg !14202
  br i1 %lnot, label %for.body, label %for.end, !dbg !14203

for.body:                                         ; preds = %land.end
  %21 = load i8*, i8** %spec.addr, align 8, !dbg !14204, !tbaa !2442
  %22 = load i8*, i8** %ptr, align 8, !dbg !14206, !tbaa !2442
  %cmp26 = icmp eq i8* %21, %22, !dbg !14207
  br i1 %cmp26, label %if.then28, label %if.end48, !dbg !14208

if.then28:                                        ; preds = %for.body
  %23 = load i32, i32* %opts, align 4, !dbg !14209, !tbaa !2436
  %or29 = or i32 %23, 128, !dbg !14209
  store i32 %or29, i32* %opts, align 4, !dbg !14209, !tbaa !2436
  %24 = load i8*, i8** %ptr, align 8, !dbg !14211, !tbaa !2442
  %arrayidx30 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !14211, !ctir !143
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !14211, !tbaa !2497
  %conv31 = sext i8 %25 to i32, !dbg !14211
  %cmp32 = icmp eq i32 %conv31, 66, !dbg !14213
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !14214

if.then34:                                        ; preds = %if.then28
  %26 = load i32, i32* %opts, align 4, !dbg !14215, !tbaa !2436
  %or35 = or i32 %26, 256, !dbg !14215
  store i32 %or35, i32* %opts, align 4, !dbg !14215, !tbaa !2436
  br label %if.end36, !dbg !14216

if.end36:                                         ; preds = %if.then34, %if.then28
  %27 = load i8*, i8** %ptr, align 8, !dbg !14217, !tbaa !2442
  %arrayidx37 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !14217, !ctir !143
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !14217, !tbaa !2497
  %conv38 = sext i8 %28 to i32, !dbg !14217
  %cmp39 = icmp ne i32 %conv38, 66, !dbg !14219
  br i1 %cmp39, label %if.then45, label %lor.lhs.false, !dbg !14220

lor.lhs.false:                                    ; preds = %if.end36
  %29 = load i8*, i8** %ptr, align 8, !dbg !14221, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 -2, !dbg !14221, !ctir !143
  %30 = load i8, i8* %arrayidx41, align 1, !dbg !14221, !tbaa !2497
  %conv42 = sext i8 %30 to i32, !dbg !14221
  %cmp43 = icmp eq i32 %conv42, 105, !dbg !14222
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !14223

if.then45:                                        ; preds = %lor.lhs.false, %if.end36
  %31 = load i32, i32* %opts, align 4, !dbg !14224, !tbaa !2436
  %or46 = or i32 %31, 32, !dbg !14224
  store i32 %or46, i32* %opts, align 4, !dbg !14224, !tbaa !2436
  br label %if.end47, !dbg !14225

if.end47:                                         ; preds = %if.then45, %lor.lhs.false
  br label %for.end, !dbg !14226

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !14206

for.inc:                                          ; preds = %if.end48
  %32 = load i8*, i8** %spec.addr, align 8, !dbg !14227, !tbaa !2442
  %incdec.ptr49 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !14227
  store i8* %incdec.ptr49, i8** %spec.addr, align 8, !dbg !14227, !tbaa !2442
  br label %for.cond, !dbg !14228, !llvm.loop !14229

for.end:                                          ; preds = %if.end47, %land.end
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.then12
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %33 = load i32, i32* %opts, align 4, !dbg !14231, !tbaa !2436
  %34 = load i32*, i32** %options.addr, align 8, !dbg !14232, !tbaa !2442
  store i32 %33, i32* %34, align 4, !dbg !14233, !tbaa !2436, !ctir !27
  store i32 0, i32* %retval, align 4, !dbg !14234
  br label %return, !dbg !14234

return:                                           ; preds = %if.end51, %if.then18
  %35 = load i32, i32* %retval, align 4, !dbg !14235
  ret i32 %35, !dbg !14235
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @default_block_size() #0 !dbg !14236 !ctir !1334 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.336, i64 0, i64 0)) #13, !dbg !14237
  %tobool = icmp ne i8* %call, null, !dbg !14237
  %0 = zext i1 %tobool to i64, !dbg !14237
  %cond = select i1 %tobool, i32 512, i32 1024, !dbg !14237
  %conv = sext i32 %cond to i64, !dbg !14237
  ret i64 %conv, !dbg !14238
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getuser(i32 %uid) #0 !dbg !14239 !ctir !1347 {
entry:
  %uid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %match = alloca %struct.userid*, align 8, !ctir !1349
  %pwent = alloca %struct.passwd*, align 8, !ctir !1360
  %name = alloca i8*, align 8, !ctir !146
  store i32 %uid, i32* %uid.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14242, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14244, metadata !DIExpression()), !dbg !14245
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14245, !tbaa !2442
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14246, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14248, !tbaa !2442
  br label %for.cond, !dbg !14249

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14250, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14252
  br i1 %tobool, label %for.body, label %for.end, !dbg !14252

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14253, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14256, !ctir !1350
  %u = bitcast %union.anon.12* %id to i32*, !dbg !14257
  %3 = load i32, i32* %u, align 8, !dbg !14257, !tbaa !2497, !ctir !1354
  %4 = load i32, i32* %uid.addr, align 4, !dbg !14258, !tbaa !2436
  %cmp = icmp eq i32 %3, %4, !dbg !14259
  br i1 %cmp, label %if.then, label %if.end, !dbg !14260

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14261, !tbaa !2442
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14263, !tbaa !2442
  br label %for.end, !dbg !14264

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14265

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14266, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14267, !ctir !1350
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14267, !tbaa !2442, !ctir !1349
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14268, !tbaa !2442
  br label %for.cond, !dbg !14269, !llvm.loop !14270

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14272, !tbaa !2442
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14274
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14275

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14276, metadata !DIExpression()), !dbg !14278
  %9 = load i32, i32* %uid.addr, align 4, !dbg !14279, !tbaa !2436
  %call = call %struct.passwd* @getpwuid(i32 %9), !dbg !14280
  store %struct.passwd* %call, %struct.passwd** %pwent, align 8, !dbg !14278, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14281, metadata !DIExpression()), !dbg !14282
  %10 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14283, !tbaa !2442
  %tobool3 = icmp ne %struct.passwd* %10, null, !dbg !14283
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14283

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14284, !tbaa !2442
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %11, i32 0, i32 0, !dbg !14285, !ctir !1361
  %12 = load i8*, i8** %pw_name, align 8, !dbg !14285, !tbaa !14286, !ctir !143
  br label %cond.end, !dbg !14283

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.344, i64 0, i64 0), %cond.false ], !dbg !14283
  store i8* %cond, i8** %name, align 8, !dbg !14282, !tbaa !2442
  %13 = load i8*, i8** %name, align 8, !dbg !14288, !tbaa !2442
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14288
  %add = add i64 %call4, 1, !dbg !14288
  %add5 = add i64 23, %add, !dbg !14288
  %and = and i64 %add5, -8, !dbg !14288
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14289
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14289
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14290, !tbaa !2442
  %15 = load i32, i32* %uid.addr, align 4, !dbg !14291, !tbaa !2436
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14292, !tbaa !2442
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14293, !ctir !1350
  %u8 = bitcast %union.anon.12* %id7 to i32*, !dbg !14294
  store i32 %15, i32* %u8, align 8, !dbg !14295, !tbaa !2497, !ctir !1354
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14296, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14297, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14296
  %18 = load i8*, i8** %name, align 8, !dbg !14298, !tbaa !2442
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14299
  %19 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14300, !tbaa !2442
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14301, !tbaa !2442
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14302, !ctir !1350
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14303, !tbaa !2442, !ctir !1349
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14304, !tbaa !2442
  store %struct.userid* %21, %struct.userid** @user_alist, align 8, !dbg !14305, !tbaa !2442
  br label %if.end12, !dbg !14306

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14307, !tbaa !2442
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14308, !ctir !1350
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14307, !ctir !361
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14307, !tbaa !2497
  %conv = sext i8 %23 to i32, !dbg !14307
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14307
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14307

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14309, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14310, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14309
  br label %cond.end19, !dbg !14307

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14307

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14307
  ret i8* %cond20, !dbg !14311
}

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getuidbyname(i8* %user) #0 !dbg !14312 !ctir !1371 {
entry:
  %retval = alloca i32*, align 8
  %user.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %pwent = alloca %struct.passwd*, align 8, !ctir !1360
  store i8* %user, i8** %user.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !14313, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14315, metadata !DIExpression()), !dbg !14316
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwent, metadata !14317, metadata !DIExpression()), !dbg !14318
  %0 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14319, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14321, !tbaa !2442
  br label %for.cond, !dbg !14322

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14323, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14325
  br i1 %tobool, label %for.body, label %for.end, !dbg !14325

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14326, !tbaa !2442
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14328, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14329
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14329, !tbaa !2497, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14329
  %4 = load i8*, i8** %user.addr, align 8, !dbg !14330, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !14331, !tbaa !2497, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14331
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14332
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14333

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14334, !tbaa !2442
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14335, !ctir !1350
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14334
  %7 = load i8*, i8** %user.addr, align 8, !dbg !14336, !tbaa !2442
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14337
  %tobool5 = icmp ne i32 %call, 0, !dbg !14337
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14338

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14339, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14340, !ctir !1350
  %u = bitcast %union.anon.12* %id to i32*, !dbg !14341
  store i32* %u, i32** %retval, align 8, !dbg !14342
  br label %return, !dbg !14342

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14343

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14344, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14345, !ctir !1350
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14345, !tbaa !2442, !ctir !1349
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14346, !tbaa !2442
  br label %for.cond, !dbg !14347, !llvm.loop !14348

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14350, !tbaa !2442
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14352, !tbaa !2442
  br label %for.cond6, !dbg !14353

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14354, !tbaa !2442
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14356
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14356

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14357, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14359, !ctir !1350
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14360
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14360, !tbaa !2497, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14360
  %15 = load i8*, i8** %user.addr, align 8, !dbg !14361, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !14362, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14362
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14363
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14364

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14365, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14366, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14365
  %18 = load i8*, i8** %user.addr, align 8, !dbg !14367, !tbaa !2442
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14368
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14368
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14369

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14370
  br label %return, !dbg !14370

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14371

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14372, !tbaa !2442
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14373, !ctir !1350
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14373, !tbaa !2442, !ctir !1349
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14374, !tbaa !2442
  br label %for.cond6, !dbg !14375, !llvm.loop !14376

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %user.addr, align 8, !dbg !14378, !tbaa !2442
  %call25 = call %struct.passwd* @getpwnam(i8* %21), !dbg !14379
  store %struct.passwd* %call25, %struct.passwd** %pwent, align 8, !dbg !14380, !tbaa !2442
  %22 = load i8*, i8** %user.addr, align 8, !dbg !14381, !tbaa !2442
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14381
  %add = add i64 %call26, 1, !dbg !14381
  %add27 = add i64 23, %add, !dbg !14381
  %and = and i64 %add27, -8, !dbg !14381
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14382
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14382
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14383, !tbaa !2442
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14384, !tbaa !2442
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14385, !ctir !1350
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14384
  %25 = load i8*, i8** %user.addr, align 8, !dbg !14386, !tbaa !2442
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14387
  %26 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14388, !tbaa !2442
  %tobool32 = icmp ne %struct.passwd* %26, null, !dbg !14388
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14390

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.passwd*, %struct.passwd** %pwent, align 8, !dbg !14391, !tbaa !2442
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %27, i32 0, i32 2, !dbg !14393, !ctir !1361
  %28 = load i32, i32* %pw_uid, align 8, !dbg !14393, !tbaa !14394, !ctir !203
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14395, !tbaa !2442
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14396, !ctir !1350
  %u35 = bitcast %union.anon.12* %id34 to i32*, !dbg !14397
  store i32 %28, i32* %u35, align 8, !dbg !14398, !tbaa !2497, !ctir !1354
  %30 = load %struct.userid*, %struct.userid** @user_alist, align 8, !dbg !14399, !tbaa !2442
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14400, !tbaa !2442
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14401, !ctir !1350
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14402, !tbaa !2442, !ctir !1349
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14403, !tbaa !2442
  store %struct.userid* %32, %struct.userid** @user_alist, align 8, !dbg !14404, !tbaa !2442
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14405, !tbaa !2442
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14406, !ctir !1350
  %u38 = bitcast %union.anon.12* %id37 to i32*, !dbg !14407
  store i32* %u38, i32** %retval, align 8, !dbg !14408
  br label %return, !dbg !14408

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nouser_alist, align 8, !dbg !14409, !tbaa !2442
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14410, !tbaa !2442
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14411, !ctir !1350
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14412, !tbaa !2442, !ctir !1349
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14413, !tbaa !2442
  store %struct.userid* %36, %struct.userid** @nouser_alist, align 8, !dbg !14414, !tbaa !2442
  store i32* null, i32** %retval, align 8, !dbg !14415
  br label %return, !dbg !14415

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14416
  ret i32* %37, !dbg !14416
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getgroup(i32 %gid) #0 !dbg !14417 !ctir !1374 {
entry:
  %gid.addr = alloca i32, align 4
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %match = alloca %struct.userid*, align 8, !ctir !1349
  %grent = alloca %struct.group*, align 8, !ctir !1376
  %name = alloca i8*, align 8, !ctir !146
  store i32 %gid, i32* %gid.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !14418, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14420, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.declare(metadata %struct.userid** %match, metadata !14422, metadata !DIExpression()), !dbg !14423
  store %struct.userid* null, %struct.userid** %match, align 8, !dbg !14423, !tbaa !2442
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14424, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14426, !tbaa !2442
  br label %for.cond, !dbg !14427

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14428, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14430
  br i1 %tobool, label %for.body, label %for.end, !dbg !14430

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14431, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 0, !dbg !14434, !ctir !1350
  %g = bitcast %union.anon.12* %id to i32*, !dbg !14435
  %3 = load i32, i32* %g, align 8, !dbg !14435, !tbaa !2497, !ctir !1354
  %4 = load i32, i32* %gid.addr, align 4, !dbg !14436, !tbaa !2436
  %cmp = icmp eq i32 %3, %4, !dbg !14437
  br i1 %cmp, label %if.then, label %if.end, !dbg !14438

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14439, !tbaa !2442
  store %struct.userid* %5, %struct.userid** %match, align 8, !dbg !14441, !tbaa !2442
  br label %for.end, !dbg !14442

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14443

for.inc:                                          ; preds = %if.end
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14444, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 1, !dbg !14445, !ctir !1350
  %7 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14445, !tbaa !2442, !ctir !1349
  store %struct.userid* %7, %struct.userid** %tail, align 8, !dbg !14446, !tbaa !2442
  br label %for.cond, !dbg !14447, !llvm.loop !14448

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14450, !tbaa !2442
  %cmp1 = icmp eq %struct.userid* %8, null, !dbg !14452
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !14453

if.then2:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14454, metadata !DIExpression()), !dbg !14456
  %9 = load i32, i32* %gid.addr, align 4, !dbg !14457, !tbaa !2436
  %call = call %struct.group* @getgrgid(i32 %9), !dbg !14458
  store %struct.group* %call, %struct.group** %grent, align 8, !dbg !14456, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name, metadata !14459, metadata !DIExpression()), !dbg !14460
  %10 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14461, !tbaa !2442
  %tobool3 = icmp ne %struct.group* %10, null, !dbg !14461
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !14461

cond.true:                                        ; preds = %if.then2
  %11 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14462, !tbaa !2442
  %gr_name = getelementptr inbounds %struct.group, %struct.group* %11, i32 0, i32 0, !dbg !14463, !ctir !1377
  %12 = load i8*, i8** %gr_name, align 8, !dbg !14463, !tbaa !14464, !ctir !143
  br label %cond.end, !dbg !14461

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !14461

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.344, i64 0, i64 0), %cond.false ], !dbg !14461
  store i8* %cond, i8** %name, align 8, !dbg !14460, !tbaa !2442
  %13 = load i8*, i8** %name, align 8, !dbg !14466, !tbaa !2442
  %call4 = call i64 @strlen(i8* %13) #16, !dbg !14466
  %add = add i64 %call4, 1, !dbg !14466
  %add5 = add i64 23, %add, !dbg !14466
  %and = and i64 %add5, -8, !dbg !14466
  %call6 = call noalias i8* @xmalloc(i64 %and), !dbg !14467
  %14 = bitcast i8* %call6 to %struct.userid*, !dbg !14467
  store %struct.userid* %14, %struct.userid** %match, align 8, !dbg !14468, !tbaa !2442
  %15 = load i32, i32* %gid.addr, align 4, !dbg !14469, !tbaa !2436
  %16 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14470, !tbaa !2442
  %id7 = getelementptr inbounds %struct.userid, %struct.userid* %16, i32 0, i32 0, !dbg !14471, !ctir !1350
  %g8 = bitcast %union.anon.12* %id7 to i32*, !dbg !14472
  store i32 %15, i32* %g8, align 8, !dbg !14473, !tbaa !2497, !ctir !1354
  %17 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14474, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14475, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14474
  %18 = load i8*, i8** %name, align 8, !dbg !14476, !tbaa !2442
  %call10 = call i8* @strcpy(i8* %arraydecay, i8* %18) #13, !dbg !14477
  %19 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14478, !tbaa !2442
  %20 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14479, !tbaa !2442
  %next11 = getelementptr inbounds %struct.userid, %struct.userid* %20, i32 0, i32 1, !dbg !14480, !ctir !1350
  store %struct.userid* %19, %struct.userid** %next11, align 8, !dbg !14481, !tbaa !2442, !ctir !1349
  %21 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14482, !tbaa !2442
  store %struct.userid* %21, %struct.userid** @group_alist, align 8, !dbg !14483, !tbaa !2442
  br label %if.end12, !dbg !14484

if.end12:                                         ; preds = %cond.end, %for.end
  %22 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14485, !tbaa !2442
  %name13 = getelementptr inbounds %struct.userid, %struct.userid* %22, i32 0, i32 2, !dbg !14486, !ctir !1350
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %name13, i64 0, i64 0, !dbg !14485, !ctir !361
  %23 = load i8, i8* %arrayidx, align 8, !dbg !14485, !tbaa !2497
  %conv = sext i8 %23 to i32, !dbg !14485
  %tobool14 = icmp ne i32 %conv, 0, !dbg !14485
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !14485

cond.true15:                                      ; preds = %if.end12
  %24 = load %struct.userid*, %struct.userid** %match, align 8, !dbg !14487, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14488, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14487
  br label %cond.end19, !dbg !14485

cond.false18:                                     ; preds = %if.end12
  br label %cond.end19, !dbg !14485

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i8* [ %arraydecay17, %cond.true15 ], [ null, %cond.false18 ], !dbg !14485
  ret i8* %cond20, !dbg !14489
}

declare dso_local %struct.group* @getgrgid(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @getgidbyname(i8* %group) #0 !dbg !14490 !ctir !1384 {
entry:
  %retval = alloca i32*, align 8
  %group.addr = alloca i8*, align 8
  %tail = alloca %struct.userid*, align 8, !ctir !1349
  %grent = alloca %struct.group*, align 8, !ctir !1376
  store i8* %group, i8** %group.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %group.addr, metadata !14491, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.declare(metadata %struct.userid** %tail, metadata !14493, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.declare(metadata %struct.group** %grent, metadata !14495, metadata !DIExpression()), !dbg !14496
  %0 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14497, !tbaa !2442
  store %struct.userid* %0, %struct.userid** %tail, align 8, !dbg !14499, !tbaa !2442
  br label %for.cond, !dbg !14500

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14501, !tbaa !2442
  %tobool = icmp ne %struct.userid* %1, null, !dbg !14503
  br i1 %tobool, label %for.body, label %for.end, !dbg !14503

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14504, !tbaa !2442
  %name = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 2, !dbg !14506, !ctir !1350
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %name, i64 0, i64 0, !dbg !14507
  %3 = load i8, i8* %arraydecay, align 8, !dbg !14507, !tbaa !2497, !ctir !144
  %conv = sext i8 %3 to i32, !dbg !14507
  %4 = load i8*, i8** %group.addr, align 8, !dbg !14508, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !14509, !tbaa !2497, !ctir !147
  %conv1 = sext i8 %5 to i32, !dbg !14509
  %cmp = icmp eq i32 %conv, %conv1, !dbg !14510
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14511

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14512, !tbaa !2442
  %name3 = getelementptr inbounds %struct.userid, %struct.userid* %6, i32 0, i32 2, !dbg !14513, !ctir !1350
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %name3, i64 0, i64 0, !dbg !14512
  %7 = load i8*, i8** %group.addr, align 8, !dbg !14514, !tbaa !2442
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %7) #16, !dbg !14515
  %tobool5 = icmp ne i32 %call, 0, !dbg !14515
  br i1 %tobool5, label %if.end, label %if.then, !dbg !14516

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14517, !tbaa !2442
  %id = getelementptr inbounds %struct.userid, %struct.userid* %8, i32 0, i32 0, !dbg !14518, !ctir !1350
  %g = bitcast %union.anon.12* %id to i32*, !dbg !14519
  store i32* %g, i32** %retval, align 8, !dbg !14520
  br label %return, !dbg !14520

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !14521

for.inc:                                          ; preds = %if.end
  %9 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14522, !tbaa !2442
  %next = getelementptr inbounds %struct.userid, %struct.userid* %9, i32 0, i32 1, !dbg !14523, !ctir !1350
  %10 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !14523, !tbaa !2442, !ctir !1349
  store %struct.userid* %10, %struct.userid** %tail, align 8, !dbg !14524, !tbaa !2442
  br label %for.cond, !dbg !14525, !llvm.loop !14526

for.end:                                          ; preds = %for.cond
  %11 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14528, !tbaa !2442
  store %struct.userid* %11, %struct.userid** %tail, align 8, !dbg !14530, !tbaa !2442
  br label %for.cond6, !dbg !14531

for.cond6:                                        ; preds = %for.inc22, %for.end
  %12 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14532, !tbaa !2442
  %tobool7 = icmp ne %struct.userid* %12, null, !dbg !14534
  br i1 %tobool7, label %for.body8, label %for.end24, !dbg !14534

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14535, !tbaa !2442
  %name9 = getelementptr inbounds %struct.userid, %struct.userid* %13, i32 0, i32 2, !dbg !14537, !ctir !1350
  %arraydecay10 = getelementptr inbounds [0 x i8], [0 x i8]* %name9, i64 0, i64 0, !dbg !14538
  %14 = load i8, i8* %arraydecay10, align 8, !dbg !14538, !tbaa !2497, !ctir !144
  %conv11 = sext i8 %14 to i32, !dbg !14538
  %15 = load i8*, i8** %group.addr, align 8, !dbg !14539, !tbaa !2442
  %16 = load i8, i8* %15, align 1, !dbg !14540, !tbaa !2497, !ctir !147
  %conv12 = sext i8 %16 to i32, !dbg !14540
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !14541
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !14542

land.lhs.true15:                                  ; preds = %for.body8
  %17 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14543, !tbaa !2442
  %name16 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !14544, !ctir !1350
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %name16, i64 0, i64 0, !dbg !14543
  %18 = load i8*, i8** %group.addr, align 8, !dbg !14545, !tbaa !2442
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %18) #16, !dbg !14546
  %tobool19 = icmp ne i32 %call18, 0, !dbg !14546
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !14547

if.then20:                                        ; preds = %land.lhs.true15
  store i32* null, i32** %retval, align 8, !dbg !14548
  br label %return, !dbg !14548

if.end21:                                         ; preds = %land.lhs.true15, %for.body8
  br label %for.inc22, !dbg !14549

for.inc22:                                        ; preds = %if.end21
  %19 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14550, !tbaa !2442
  %next23 = getelementptr inbounds %struct.userid, %struct.userid* %19, i32 0, i32 1, !dbg !14551, !ctir !1350
  %20 = load %struct.userid*, %struct.userid** %next23, align 8, !dbg !14551, !tbaa !2442, !ctir !1349
  store %struct.userid* %20, %struct.userid** %tail, align 8, !dbg !14552, !tbaa !2442
  br label %for.cond6, !dbg !14553, !llvm.loop !14554

for.end24:                                        ; preds = %for.cond6
  %21 = load i8*, i8** %group.addr, align 8, !dbg !14556, !tbaa !2442
  %call25 = call %struct.group* @getgrnam(i8* %21), !dbg !14557
  store %struct.group* %call25, %struct.group** %grent, align 8, !dbg !14558, !tbaa !2442
  %22 = load i8*, i8** %group.addr, align 8, !dbg !14559, !tbaa !2442
  %call26 = call i64 @strlen(i8* %22) #16, !dbg !14559
  %add = add i64 %call26, 1, !dbg !14559
  %add27 = add i64 23, %add, !dbg !14559
  %and = and i64 %add27, -8, !dbg !14559
  %call28 = call noalias i8* @xmalloc(i64 %and), !dbg !14560
  %23 = bitcast i8* %call28 to %struct.userid*, !dbg !14560
  store %struct.userid* %23, %struct.userid** %tail, align 8, !dbg !14561, !tbaa !2442
  %24 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14562, !tbaa !2442
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %24, i32 0, i32 2, !dbg !14563, !ctir !1350
  %arraydecay30 = getelementptr inbounds [0 x i8], [0 x i8]* %name29, i64 0, i64 0, !dbg !14562
  %25 = load i8*, i8** %group.addr, align 8, !dbg !14564, !tbaa !2442
  %call31 = call i8* @strcpy(i8* %arraydecay30, i8* %25) #13, !dbg !14565
  %26 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14566, !tbaa !2442
  %tobool32 = icmp ne %struct.group* %26, null, !dbg !14566
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !14568

if.then33:                                        ; preds = %for.end24
  %27 = load %struct.group*, %struct.group** %grent, align 8, !dbg !14569, !tbaa !2442
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %27, i32 0, i32 2, !dbg !14571, !ctir !1377
  %28 = load i32, i32* %gr_gid, align 8, !dbg !14571, !tbaa !14572, !ctir !205
  %29 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14573, !tbaa !2442
  %id34 = getelementptr inbounds %struct.userid, %struct.userid* %29, i32 0, i32 0, !dbg !14574, !ctir !1350
  %g35 = bitcast %union.anon.12* %id34 to i32*, !dbg !14575
  store i32 %28, i32* %g35, align 8, !dbg !14576, !tbaa !2497, !ctir !1354
  %30 = load %struct.userid*, %struct.userid** @group_alist, align 8, !dbg !14577, !tbaa !2442
  %31 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14578, !tbaa !2442
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %31, i32 0, i32 1, !dbg !14579, !ctir !1350
  store %struct.userid* %30, %struct.userid** %next36, align 8, !dbg !14580, !tbaa !2442, !ctir !1349
  %32 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14581, !tbaa !2442
  store %struct.userid* %32, %struct.userid** @group_alist, align 8, !dbg !14582, !tbaa !2442
  %33 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14583, !tbaa !2442
  %id37 = getelementptr inbounds %struct.userid, %struct.userid* %33, i32 0, i32 0, !dbg !14584, !ctir !1350
  %g38 = bitcast %union.anon.12* %id37 to i32*, !dbg !14585
  store i32* %g38, i32** %retval, align 8, !dbg !14586
  br label %return, !dbg !14586

if.end39:                                         ; preds = %for.end24
  %34 = load %struct.userid*, %struct.userid** @nogroup_alist, align 8, !dbg !14587, !tbaa !2442
  %35 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14588, !tbaa !2442
  %next40 = getelementptr inbounds %struct.userid, %struct.userid* %35, i32 0, i32 1, !dbg !14589, !ctir !1350
  store %struct.userid* %34, %struct.userid** %next40, align 8, !dbg !14590, !tbaa !2442, !ctir !1349
  %36 = load %struct.userid*, %struct.userid** %tail, align 8, !dbg !14591, !tbaa !2442
  store %struct.userid* %36, %struct.userid** @nogroup_alist, align 8, !dbg !14592, !tbaa !2442
  store i32* null, i32** %retval, align 8, !dbg !14593
  br label %return, !dbg !14593

return:                                           ; preds = %if.end39, %if.then33, %if.then20, %if.then
  %37 = load i32*, i32** %retval, align 8, !dbg !14594
  ret i32* %37, !dbg !14594
}

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @imaxtostr(i64 %i, i8* %buf) #0 !dbg !14595 !ctir !1859 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14597, metadata !DIExpression()), !dbg !14598
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14599, metadata !DIExpression()), !dbg !14600
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14601, metadata !DIExpression()), !dbg !14602
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14603, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14604
  store i8* %add.ptr, i8** %p, align 8, !dbg !14602, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !14605, !tbaa !2442
  store i8 0, i8* %1, align 1, !dbg !14606, !tbaa !2497, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14607, !tbaa !2579
  %cmp = icmp slt i64 %2, 0, !dbg !14609
  br i1 %cmp, label %if.then, label %if.else, !dbg !14610

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14611

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14613, !tbaa !2579
  %rem = srem i64 %3, 10, !dbg !14614
  %sub = sub nsw i64 48, %rem, !dbg !14615
  %conv = trunc i64 %sub to i8, !dbg !14616
  %4 = load i8*, i8** %p, align 8, !dbg !14617, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14617
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14617, !tbaa !2442
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14618, !tbaa !2497, !ctir !144
  br label %do.cond, !dbg !14619

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14620, !tbaa !2579
  %div = sdiv i64 %5, 10, !dbg !14620
  store i64 %div, i64* %i.addr, align 8, !dbg !14620, !tbaa !2579
  %cmp1 = icmp ne i64 %div, 0, !dbg !14621
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14619, !llvm.loop !14622

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14624, !tbaa !2442
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14624
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14624, !tbaa !2442
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14625, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !14626

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14627

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14629, !tbaa !2579
  %rem5 = srem i64 %7, 10, !dbg !14630
  %add = add nsw i64 48, %rem5, !dbg !14631
  %conv6 = trunc i64 %add to i8, !dbg !14632
  %8 = load i8*, i8** %p, align 8, !dbg !14633, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14633
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14633, !tbaa !2442
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14634, !tbaa !2497, !ctir !144
  br label %do.cond8, !dbg !14635

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14636, !tbaa !2579
  %div9 = sdiv i64 %9, 10, !dbg !14636
  store i64 %div9, i64* %i.addr, align 8, !dbg !14636, !tbaa !2579
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14637
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14635, !llvm.loop !14638

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14640, !tbaa !2442
  ret i8* %10, !dbg !14641
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @umaxtostr(i64 %i, i8* %buf) #0 !dbg !14642 !ctir !1864 {
entry:
  %i.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8, !ctir !143
  store i64 %i, i64* %i.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14643, metadata !DIExpression()), !dbg !14644
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14645, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14647, metadata !DIExpression()), !dbg !14648
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14649, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 20, !dbg !14650
  store i8* %add.ptr, i8** %p, align 8, !dbg !14648, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !14651, !tbaa !2442
  store i8 0, i8* %1, align 1, !dbg !14652, !tbaa !2497, !ctir !144
  %2 = load i64, i64* %i.addr, align 8, !dbg !14653, !tbaa !2579
  %cmp = icmp ult i64 %2, 0, !dbg !14655
  br i1 %cmp, label %if.then, label %if.else, !dbg !14656

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14657

do.body:                                          ; preds = %do.cond, %if.then
  %3 = load i64, i64* %i.addr, align 8, !dbg !14659, !tbaa !2579
  %rem = urem i64 %3, 10, !dbg !14660
  %sub = sub i64 48, %rem, !dbg !14661
  %conv = trunc i64 %sub to i8, !dbg !14662
  %4 = load i8*, i8** %p, align 8, !dbg !14663, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !14663
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14663, !tbaa !2442
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !14664, !tbaa !2497, !ctir !144
  br label %do.cond, !dbg !14665

do.cond:                                          ; preds = %do.body
  %5 = load i64, i64* %i.addr, align 8, !dbg !14666, !tbaa !2579
  %div = udiv i64 %5, 10, !dbg !14666
  store i64 %div, i64* %i.addr, align 8, !dbg !14666, !tbaa !2579
  %cmp1 = icmp ne i64 %div, 0, !dbg !14667
  br i1 %cmp1, label %do.body, label %do.end, !dbg !14665, !llvm.loop !14668

do.end:                                           ; preds = %do.cond
  %6 = load i8*, i8** %p, align 8, !dbg !14670, !tbaa !2442
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !14670
  store i8* %incdec.ptr3, i8** %p, align 8, !dbg !14670, !tbaa !2442
  store i8 45, i8* %incdec.ptr3, align 1, !dbg !14671, !tbaa !2497, !ctir !144
  br label %if.end, !dbg !14672

if.else:                                          ; preds = %entry
  br label %do.body4, !dbg !14673

do.body4:                                         ; preds = %do.cond8, %if.else
  %7 = load i64, i64* %i.addr, align 8, !dbg !14675, !tbaa !2579
  %rem5 = urem i64 %7, 10, !dbg !14676
  %add = add i64 48, %rem5, !dbg !14677
  %conv6 = trunc i64 %add to i8, !dbg !14678
  %8 = load i8*, i8** %p, align 8, !dbg !14679, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !14679
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !14679, !tbaa !2442
  store i8 %conv6, i8* %incdec.ptr7, align 1, !dbg !14680, !tbaa !2497, !ctir !144
  br label %do.cond8, !dbg !14681

do.cond8:                                         ; preds = %do.body4
  %9 = load i64, i64* %i.addr, align 8, !dbg !14682, !tbaa !2579
  %div9 = udiv i64 %9, 10, !dbg !14682
  store i64 %div9, i64* %i.addr, align 8, !dbg !14682, !tbaa !2579
  %cmp10 = icmp ne i64 %div9, 0, !dbg !14683
  br i1 %cmp10, label %do.body4, label %do.end12, !dbg !14681, !llvm.loop !14684

do.end12:                                         ; preds = %do.cond8
  br label %if.end

if.end:                                           ; preds = %do.end12, %do.end
  %10 = load i8*, i8** %p, align 8, !dbg !14686, !tbaa !2442
  ret i8* %10, !dbg !14687
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) #0 !dbg !14688 !ctir !1872 {
entry:
  %src.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_size.addr = alloca i64, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %ret = alloca i64, align 8, !ctir !149
  %src_size = alloca i64, align 8, !ctir !149
  %newstr = alloca i8*, align 8, !ctir !143
  %str_wc = alloca i32*, align 8, !ctir !1874
  %str_to_print = alloca i8*, align 8, !ctir !146
  %n_cols = alloca i64, align 8, !ctir !149
  %n_used_bytes = alloca i64, align 8, !ctir !149
  %n_spaces = alloca i64, align 8, !ctir !149
  %conversion = alloca i8, align 1, !ctir !141
  %wc_enabled = alloca i8, align 1, !ctir !141
  %src_chars = alloca i64, align 8, !ctir !149
  %start_spaces = alloca i64, align 8, !ctir !149
  %end_spaces = alloca i64, align 8, !ctir !149
  %space_left = alloca i64, align 8, !ctir !149
  %dest_end = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14690, metadata !DIExpression()), !dbg !14691
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14692, metadata !DIExpression()), !dbg !14693
  store i64 %dest_size, i64* %dest_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dest_size.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !14696, metadata !DIExpression()), !dbg !14697
  store i32 %align, i32* %align.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !14698, metadata !DIExpression()), !dbg !14699
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14700, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !14702, metadata !DIExpression()), !dbg !14703
  store i64 -1, i64* %ret, align 8, !dbg !14703, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %src_size, metadata !14704, metadata !DIExpression()), !dbg !14705
  %0 = load i8*, i8** %src.addr, align 8, !dbg !14706, !tbaa !2442
  %call = call i64 @strlen(i8* %0) #16, !dbg !14707
  %add = add i64 %call, 1, !dbg !14708
  store i64 %add, i64* %src_size, align 8, !dbg !14705, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !14709, metadata !DIExpression()), !dbg !14710
  store i8* null, i8** %newstr, align 8, !dbg !14710, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %str_wc, metadata !14711, metadata !DIExpression()), !dbg !14712
  store i32* null, i32** %str_wc, align 8, !dbg !14712, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %str_to_print, metadata !14713, metadata !DIExpression()), !dbg !14714
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14715, !tbaa !2442
  store i8* %1, i8** %str_to_print, align 8, !dbg !14714, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %n_cols, metadata !14716, metadata !DIExpression()), !dbg !14717
  %2 = load i64, i64* %src_size, align 8, !dbg !14718, !tbaa !2579
  %sub = sub i64 %2, 1, !dbg !14719
  store i64 %sub, i64* %n_cols, align 8, !dbg !14717, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_used_bytes, metadata !14720, metadata !DIExpression()), !dbg !14721
  %3 = load i64, i64* %n_cols, align 8, !dbg !14722, !tbaa !2579
  store i64 %3, i64* %n_used_bytes, align 8, !dbg !14721, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_spaces, metadata !14723, metadata !DIExpression()), !dbg !14724
  store i64 0, i64* %n_spaces, align 8, !dbg !14724, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %conversion, metadata !14725, metadata !DIExpression()), !dbg !14726
  store i8 0, i8* %conversion, align 1, !dbg !14726, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %wc_enabled, metadata !14727, metadata !DIExpression()), !dbg !14728
  store i8 0, i8* %wc_enabled, align 1, !dbg !14728, !tbaa !2461
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14729, !tbaa !2436
  %and = and i32 %4, 2, !dbg !14731
  %tobool = icmp ne i32 %and, 0, !dbg !14731
  br i1 %tobool, label %if.end24, label %land.lhs.true, !dbg !14732

land.lhs.true:                                    ; preds = %entry
  %call1 = call i64 @__ctype_get_mb_cur_max() #13, !dbg !14733
  %cmp = icmp ugt i64 %call1, 1, !dbg !14734
  br i1 %cmp, label %if.then, label %if.end24, !dbg !14735

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_chars, metadata !14736, metadata !DIExpression()), !dbg !14738
  %5 = load i8*, i8** %src.addr, align 8, !dbg !14739, !tbaa !2442
  %call2 = call i64 @mbstowcs(i32* null, i8* %5, i64 0) #13, !dbg !14740
  store i64 %call2, i64* %src_chars, align 8, !dbg !14738, !tbaa !2579
  %6 = load i64, i64* %src_chars, align 8, !dbg !14741, !tbaa !2579
  %cmp3 = icmp eq i64 %6, -1, !dbg !14743
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !14744

if.then4:                                         ; preds = %if.then
  %7 = load i32, i32* %flags.addr, align 4, !dbg !14745, !tbaa !2436
  %and5 = and i32 %7, 1, !dbg !14748
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14748
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !14749

if.then7:                                         ; preds = %if.then4
  br label %mbsalign_unibyte, !dbg !14750

if.else:                                          ; preds = %if.then4
  br label %mbsalign_cleanup, !dbg !14751

if.end:                                           ; preds = %if.then
  %8 = load i64, i64* %src_chars, align 8, !dbg !14752, !tbaa !2579
  %add8 = add i64 %8, 1, !dbg !14752
  store i64 %add8, i64* %src_chars, align 8, !dbg !14752, !tbaa !2579
  %9 = load i64, i64* %src_chars, align 8, !dbg !14753, !tbaa !2579
  %mul = mul i64 %9, 4, !dbg !14754
  %call9 = call noalias i8* @malloc(i64 %mul) #13, !dbg !14755
  %10 = bitcast i8* %call9 to i32*, !dbg !14755
  store i32* %10, i32** %str_wc, align 8, !dbg !14756, !tbaa !2442
  %11 = load i32*, i32** %str_wc, align 8, !dbg !14757, !tbaa !2442
  %cmp10 = icmp eq i32* %11, null, !dbg !14759
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !14760

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* %flags.addr, align 4, !dbg !14761, !tbaa !2436
  %and12 = and i32 %12, 1, !dbg !14764
  %tobool13 = icmp ne i32 %and12, 0, !dbg !14764
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !14765

if.then14:                                        ; preds = %if.then11
  br label %mbsalign_unibyte, !dbg !14766

if.else15:                                        ; preds = %if.then11
  br label %mbsalign_cleanup, !dbg !14767

if.end16:                                         ; preds = %if.end
  %13 = load i32*, i32** %str_wc, align 8, !dbg !14768, !tbaa !2442
  %14 = load i8*, i8** %src.addr, align 8, !dbg !14770, !tbaa !2442
  %15 = load i64, i64* %src_chars, align 8, !dbg !14771, !tbaa !2579
  %call17 = call i64 @mbstowcs(i32* %13, i8* %14, i64 %15) #13, !dbg !14772
  %cmp18 = icmp ne i64 %call17, 0, !dbg !14773
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !14774

if.then19:                                        ; preds = %if.end16
  %16 = load i32*, i32** %str_wc, align 8, !dbg !14775, !tbaa !2442
  %17 = load i64, i64* %src_chars, align 8, !dbg !14777, !tbaa !2579
  %sub20 = sub i64 %17, 1, !dbg !14778
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %sub20, !dbg !14775, !ctir !1874
  store i32 0, i32* %arrayidx, align 4, !dbg !14779, !tbaa !2436
  store i8 1, i8* %wc_enabled, align 1, !dbg !14780, !tbaa !2461
  %18 = load i32*, i32** %str_wc, align 8, !dbg !14781, !tbaa !2442
  %call21 = call zeroext i1 @wc_ensure_printable(i32* %18), !dbg !14782
  %frombool = zext i1 %call21 to i8, !dbg !14783
  store i8 %frombool, i8* %conversion, align 1, !dbg !14783, !tbaa !2461
  %19 = load i32*, i32** %str_wc, align 8, !dbg !14784, !tbaa !2442
  %20 = load i64, i64* %src_chars, align 8, !dbg !14785, !tbaa !2579
  %call22 = call i32 @wcswidth(i32* %19, i64 %20) #13, !dbg !14786
  %conv = sext i32 %call22 to i64, !dbg !14786
  store i64 %conv, i64* %n_cols, align 8, !dbg !14787, !tbaa !2579
  br label %if.end23, !dbg !14788

if.end23:                                         ; preds = %if.then19, %if.end16
  br label %if.end24, !dbg !14789

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  %21 = load i8, i8* %wc_enabled, align 1, !dbg !14790, !tbaa !2461
  %tobool25 = trunc i8 %21 to i1, !dbg !14790
  br i1 %tobool25, label %land.lhs.true27, label %if.end49, !dbg !14792

land.lhs.true27:                                  ; preds = %if.end24
  %22 = load i8, i8* %conversion, align 1, !dbg !14793, !tbaa !2461
  %tobool28 = trunc i8 %22 to i1, !dbg !14793
  br i1 %tobool28, label %if.then32, label %lor.lhs.false, !dbg !14794

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %23 = load i64, i64* %n_cols, align 8, !dbg !14795, !tbaa !2579
  %24 = load i64*, i64** %width.addr, align 8, !dbg !14796, !tbaa !2442
  %25 = load i64, i64* %24, align 8, !dbg !14797, !tbaa !2579, !ctir !149
  %cmp30 = icmp ugt i64 %23, %25, !dbg !14798
  br i1 %cmp30, label %if.then32, label %if.end49, !dbg !14799

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %26 = load i8, i8* %conversion, align 1, !dbg !14800, !tbaa !2461
  %tobool33 = trunc i8 %26 to i1, !dbg !14800
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !14803

if.then34:                                        ; preds = %if.then32
  %27 = load i32*, i32** %str_wc, align 8, !dbg !14804, !tbaa !2442
  %call35 = call i64 @wcstombs(i8* null, i32* %27, i64 0) #13, !dbg !14806
  %add36 = add i64 %call35, 1, !dbg !14807
  store i64 %add36, i64* %src_size, align 8, !dbg !14808, !tbaa !2579
  br label %if.end37, !dbg !14809

if.end37:                                         ; preds = %if.then34, %if.then32
  %28 = load i64, i64* %src_size, align 8, !dbg !14810, !tbaa !2579
  %call38 = call noalias i8* @malloc(i64 %28) #13, !dbg !14811
  store i8* %call38, i8** %newstr, align 8, !dbg !14812, !tbaa !2442
  %29 = load i8*, i8** %newstr, align 8, !dbg !14813, !tbaa !2442
  %cmp39 = icmp eq i8* %29, null, !dbg !14815
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !14816

if.then41:                                        ; preds = %if.end37
  %30 = load i32, i32* %flags.addr, align 4, !dbg !14817, !tbaa !2436
  %and42 = and i32 %30, 1, !dbg !14820
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14820
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !14821

if.then44:                                        ; preds = %if.then41
  br label %mbsalign_unibyte, !dbg !14822

if.else45:                                        ; preds = %if.then41
  br label %mbsalign_cleanup, !dbg !14823

if.end46:                                         ; preds = %if.end37
  %31 = load i8*, i8** %newstr, align 8, !dbg !14824, !tbaa !2442
  store i8* %31, i8** %str_to_print, align 8, !dbg !14825, !tbaa !2442
  %32 = load i32*, i32** %str_wc, align 8, !dbg !14826, !tbaa !2442
  %33 = load i64*, i64** %width.addr, align 8, !dbg !14827, !tbaa !2442
  %34 = load i64, i64* %33, align 8, !dbg !14828, !tbaa !2579, !ctir !149
  %call47 = call i64 @wc_truncate(i32* %32, i64 %34), !dbg !14829
  store i64 %call47, i64* %n_cols, align 8, !dbg !14830, !tbaa !2579
  %35 = load i8*, i8** %newstr, align 8, !dbg !14831, !tbaa !2442
  %36 = load i32*, i32** %str_wc, align 8, !dbg !14832, !tbaa !2442
  %37 = load i64, i64* %src_size, align 8, !dbg !14833, !tbaa !2579
  %call48 = call i64 @wcstombs(i8* %35, i32* %36, i64 %37) #13, !dbg !14834
  store i64 %call48, i64* %n_used_bytes, align 8, !dbg !14835, !tbaa !2579
  br label %if.end49, !dbg !14836

if.end49:                                         ; preds = %if.end46, %lor.lhs.false, %if.end24
  br label %mbsalign_unibyte, !dbg !14837

mbsalign_unibyte:                                 ; preds = %if.end49, %if.then44, %if.then14, %if.then7
  call void @llvm.dbg.label(metadata !14838), !dbg !14839
  %38 = load i64, i64* %n_cols, align 8, !dbg !14840, !tbaa !2579
  %39 = load i64*, i64** %width.addr, align 8, !dbg !14842, !tbaa !2442
  %40 = load i64, i64* %39, align 8, !dbg !14843, !tbaa !2579, !ctir !149
  %cmp50 = icmp ugt i64 %38, %40, !dbg !14844
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !14845

if.then52:                                        ; preds = %mbsalign_unibyte
  %41 = load i64*, i64** %width.addr, align 8, !dbg !14846, !tbaa !2442
  %42 = load i64, i64* %41, align 8, !dbg !14848, !tbaa !2579, !ctir !149
  store i64 %42, i64* %n_cols, align 8, !dbg !14849, !tbaa !2579
  %43 = load i64, i64* %n_cols, align 8, !dbg !14850, !tbaa !2579
  store i64 %43, i64* %n_used_bytes, align 8, !dbg !14851, !tbaa !2579
  br label %if.end53, !dbg !14852

if.end53:                                         ; preds = %if.then52, %mbsalign_unibyte
  %44 = load i64*, i64** %width.addr, align 8, !dbg !14853, !tbaa !2442
  %45 = load i64, i64* %44, align 8, !dbg !14855, !tbaa !2579, !ctir !149
  %46 = load i64, i64* %n_cols, align 8, !dbg !14856, !tbaa !2579
  %cmp54 = icmp ugt i64 %45, %46, !dbg !14857
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !14858

if.then56:                                        ; preds = %if.end53
  %47 = load i64*, i64** %width.addr, align 8, !dbg !14859, !tbaa !2442
  %48 = load i64, i64* %47, align 8, !dbg !14860, !tbaa !2579, !ctir !149
  %49 = load i64, i64* %n_cols, align 8, !dbg !14861, !tbaa !2579
  %sub57 = sub i64 %48, %49, !dbg !14862
  store i64 %sub57, i64* %n_spaces, align 8, !dbg !14863, !tbaa !2579
  br label %if.end58, !dbg !14864

if.end58:                                         ; preds = %if.then56, %if.end53
  %50 = load i64, i64* %n_cols, align 8, !dbg !14865, !tbaa !2579
  %51 = load i64*, i64** %width.addr, align 8, !dbg !14866, !tbaa !2442
  store i64 %50, i64* %51, align 8, !dbg !14867, !tbaa !2579, !ctir !149
  call void @llvm.dbg.declare(metadata i64* %start_spaces, metadata !14868, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.declare(metadata i64* %end_spaces, metadata !14871, metadata !DIExpression()), !dbg !14872
  %52 = load i32, i32* %align.addr, align 4, !dbg !14873, !tbaa !2497
  switch i32 %52, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
    i32 2, label %sw.bb60
  ], !dbg !14874

sw.bb:                                            ; preds = %if.end58
  store i64 0, i64* %start_spaces, align 8, !dbg !14875, !tbaa !2579
  %53 = load i64, i64* %n_spaces, align 8, !dbg !14877, !tbaa !2579
  store i64 %53, i64* %end_spaces, align 8, !dbg !14878, !tbaa !2579
  br label %sw.epilog, !dbg !14879

sw.bb59:                                          ; preds = %if.end58
  %54 = load i64, i64* %n_spaces, align 8, !dbg !14880, !tbaa !2579
  store i64 %54, i64* %start_spaces, align 8, !dbg !14881, !tbaa !2579
  store i64 0, i64* %end_spaces, align 8, !dbg !14882, !tbaa !2579
  br label %sw.epilog, !dbg !14883

sw.bb60:                                          ; preds = %if.end58
  br label %sw.default, !dbg !14883

sw.default:                                       ; preds = %if.end58, %sw.bb60
  %55 = load i64, i64* %n_spaces, align 8, !dbg !14884, !tbaa !2579
  %div = udiv i64 %55, 2, !dbg !14885
  %56 = load i64, i64* %n_spaces, align 8, !dbg !14886, !tbaa !2579
  %rem = urem i64 %56, 2, !dbg !14887
  %add61 = add i64 %div, %rem, !dbg !14888
  store i64 %add61, i64* %start_spaces, align 8, !dbg !14889, !tbaa !2579
  %57 = load i64, i64* %n_spaces, align 8, !dbg !14890, !tbaa !2579
  %div62 = udiv i64 %57, 2, !dbg !14891
  store i64 %div62, i64* %end_spaces, align 8, !dbg !14892, !tbaa !2579
  br label %sw.epilog, !dbg !14893

sw.epilog:                                        ; preds = %sw.default, %sw.bb59, %sw.bb
  %58 = load i32, i32* %flags.addr, align 4, !dbg !14894, !tbaa !2436
  %and63 = and i32 %58, 4, !dbg !14896
  %tobool64 = icmp ne i32 %and63, 0, !dbg !14896
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !14897

if.then65:                                        ; preds = %sw.epilog
  store i64 0, i64* %start_spaces, align 8, !dbg !14898, !tbaa !2579
  br label %if.end66, !dbg !14899

if.end66:                                         ; preds = %if.then65, %sw.epilog
  %59 = load i32, i32* %flags.addr, align 4, !dbg !14900, !tbaa !2436
  %and67 = and i32 %59, 8, !dbg !14902
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14902
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !14903

if.then69:                                        ; preds = %if.end66
  store i64 0, i64* %end_spaces, align 8, !dbg !14904, !tbaa !2579
  br label %if.end70, !dbg !14905

if.end70:                                         ; preds = %if.then69, %if.end66
  %60 = load i64, i64* %dest_size.addr, align 8, !dbg !14906, !tbaa !2579
  %cmp71 = icmp ne i64 %60, 0, !dbg !14908
  br i1 %cmp71, label %if.then73, label %if.end80, !dbg !14909

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i64* %space_left, metadata !14910, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.declare(metadata i8** %dest_end, metadata !14913, metadata !DIExpression()), !dbg !14914
  %61 = load i8*, i8** %dest.addr, align 8, !dbg !14915, !tbaa !2442
  %62 = load i64, i64* %dest_size.addr, align 8, !dbg !14916, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !14917
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !14918
  store i8* %add.ptr74, i8** %dest_end, align 8, !dbg !14914, !tbaa !2442
  %63 = load i8*, i8** %dest.addr, align 8, !dbg !14919, !tbaa !2442
  %64 = load i8*, i8** %dest_end, align 8, !dbg !14920, !tbaa !2442
  %65 = load i64, i64* %start_spaces, align 8, !dbg !14921, !tbaa !2579
  %call75 = call i8* @mbs_align_pad(i8* %63, i8* %64, i64 %65), !dbg !14922
  store i8* %call75, i8** %dest.addr, align 8, !dbg !14923, !tbaa !2442
  %66 = load i8*, i8** %dest_end, align 8, !dbg !14924, !tbaa !2442
  %67 = load i8*, i8** %dest.addr, align 8, !dbg !14925, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %66 to i64, !dbg !14926
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i64, !dbg !14926
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14926
  store i64 %sub.ptr.sub, i64* %space_left, align 8, !dbg !14927, !tbaa !2579
  %68 = load i8*, i8** %dest.addr, align 8, !dbg !14928, !tbaa !2442
  %69 = load i8*, i8** %str_to_print, align 8, !dbg !14929, !tbaa !2442
  %70 = load i64, i64* %n_used_bytes, align 8, !dbg !14930, !tbaa !2579
  %71 = load i64, i64* %space_left, align 8, !dbg !14930, !tbaa !2579
  %cmp76 = icmp ult i64 %70, %71, !dbg !14930
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !14930

cond.true:                                        ; preds = %if.then73
  %72 = load i64, i64* %n_used_bytes, align 8, !dbg !14930, !tbaa !2579
  br label %cond.end, !dbg !14930

cond.false:                                       ; preds = %if.then73
  %73 = load i64, i64* %space_left, align 8, !dbg !14930, !tbaa !2579
  br label %cond.end, !dbg !14930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %72, %cond.true ], [ %73, %cond.false ], !dbg !14930
  %call78 = call i8* @mempcpy(i8* %68, i8* %69, i64 %cond) #13, !dbg !14931
  store i8* %call78, i8** %dest.addr, align 8, !dbg !14932, !tbaa !2442
  %74 = load i8*, i8** %dest.addr, align 8, !dbg !14933, !tbaa !2442
  %75 = load i8*, i8** %dest_end, align 8, !dbg !14934, !tbaa !2442
  %76 = load i64, i64* %end_spaces, align 8, !dbg !14935, !tbaa !2579
  %call79 = call i8* @mbs_align_pad(i8* %74, i8* %75, i64 %76), !dbg !14936
  br label %if.end80, !dbg !14937

if.end80:                                         ; preds = %cond.end, %if.end70
  %77 = load i64, i64* %n_used_bytes, align 8, !dbg !14938, !tbaa !2579
  %78 = load i64, i64* %start_spaces, align 8, !dbg !14939, !tbaa !2579
  %79 = load i64, i64* %end_spaces, align 8, !dbg !14940, !tbaa !2579
  %add81 = add i64 %78, %79, !dbg !14941
  %mul82 = mul i64 %add81, 1, !dbg !14942
  %add83 = add i64 %77, %mul82, !dbg !14943
  store i64 %add83, i64* %ret, align 8, !dbg !14944, !tbaa !2579
  br label %mbsalign_cleanup, !dbg !14945

mbsalign_cleanup:                                 ; preds = %if.end80, %if.else45, %if.else15, %if.else
  call void @llvm.dbg.label(metadata !14946), !dbg !14947
  %80 = load i32*, i32** %str_wc, align 8, !dbg !14948, !tbaa !2442
  %81 = bitcast i32* %80 to i8*, !dbg !14948
  call void @free(i8* %81) #13, !dbg !14949
  %82 = load i8*, i8** %newstr, align 8, !dbg !14950, !tbaa !2442
  call void @free(i8* %82) #13, !dbg !14951
  %83 = load i64, i64* %ret, align 8, !dbg !14952, !tbaa !2579
  ret i64 %83, !dbg !14953
}

; Function Attrs: nounwind
declare dso_local i64 @mbstowcs(i32*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @wc_ensure_printable(i32* %wchars) #0 !dbg !14954 !ctir !1877 {
entry:
  %wchars.addr = alloca i32*, align 8
  %replaced = alloca i8, align 1, !ctir !141
  %wc = alloca i32*, align 8, !ctir !1874
  store i32* %wchars, i32** %wchars.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %wchars.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.declare(metadata i8* %replaced, metadata !14957, metadata !DIExpression()), !dbg !14958
  store i8 0, i8* %replaced, align 1, !dbg !14958, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32** %wc, metadata !14959, metadata !DIExpression()), !dbg !14960
  %0 = load i32*, i32** %wchars.addr, align 8, !dbg !14961, !tbaa !2442
  store i32* %0, i32** %wc, align 8, !dbg !14960, !tbaa !2442
  br label %while.cond, !dbg !14962

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32*, i32** %wc, align 8, !dbg !14963, !tbaa !2442
  %2 = load i32, i32* %1, align 4, !dbg !14964, !tbaa !2436, !ctir !654
  %tobool = icmp ne i32 %2, 0, !dbg !14962
  br i1 %tobool, label %while.body, label %while.end, !dbg !14962

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %wc, align 8, !dbg !14965, !tbaa !2442
  %4 = load i32, i32* %3, align 4, !dbg !14968, !tbaa !2436, !ctir !654
  %call = call i32 @iswprint(i32 %4) #13, !dbg !14969
  %tobool1 = icmp ne i32 %call, 0, !dbg !14969
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14970

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc, align 8, !dbg !14971, !tbaa !2442
  store i32 65533, i32* %5, align 4, !dbg !14973, !tbaa !2436, !ctir !654
  store i8 1, i8* %replaced, align 1, !dbg !14974, !tbaa !2461
  br label %if.end, !dbg !14975

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i32*, i32** %wc, align 8, !dbg !14976, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1, !dbg !14976
  store i32* %incdec.ptr, i32** %wc, align 8, !dbg !14976, !tbaa !2442
  br label %while.cond, !dbg !14962, !llvm.loop !14977

while.end:                                        ; preds = %while.cond
  %7 = load i8, i8* %replaced, align 1, !dbg !14979, !tbaa !2461
  %tobool2 = trunc i8 %7 to i1, !dbg !14979
  ret i1 %tobool2, !dbg !14980
}

; Function Attrs: nounwind
declare dso_local i32 @wcswidth(i32*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @wcstombs(i8*, i32*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @wc_truncate(i32* %wc, i64 %width) #0 !dbg !14981 !ctir !1879 {
entry:
  %wc.addr = alloca i32*, align 8
  %width.addr = alloca i64, align 8
  %cells = alloca i64, align 8, !ctir !149
  %next_cells = alloca i32, align 4, !ctir !27
  store i32* %wc, i32** %wc.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %wc.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  store i64 %width, i64* %width.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.declare(metadata i64* %cells, metadata !14986, metadata !DIExpression()), !dbg !14987
  store i64 0, i64* %cells, align 8, !dbg !14987, !tbaa !2579
  call void @llvm.dbg.declare(metadata i32* %next_cells, metadata !14988, metadata !DIExpression()), !dbg !14989
  store i32 0, i32* %next_cells, align 4, !dbg !14989, !tbaa !2436
  br label %while.cond, !dbg !14990

while.cond:                                       ; preds = %if.end4, %entry
  %0 = load i32*, i32** %wc.addr, align 8, !dbg !14991, !tbaa !2442
  %1 = load i32, i32* %0, align 4, !dbg !14992, !tbaa !2436, !ctir !654
  %tobool = icmp ne i32 %1, 0, !dbg !14990
  br i1 %tobool, label %while.body, label %while.end, !dbg !14990

while.body:                                       ; preds = %while.cond
  %2 = load i32*, i32** %wc.addr, align 8, !dbg !14993, !tbaa !2442
  %3 = load i32, i32* %2, align 4, !dbg !14995, !tbaa !2436, !ctir !654
  %call = call i32 @wcwidth(i32 %3) #13, !dbg !14996
  store i32 %call, i32* %next_cells, align 4, !dbg !14997, !tbaa !2436
  %4 = load i32, i32* %next_cells, align 4, !dbg !14998, !tbaa !2436
  %cmp = icmp eq i32 %4, -1, !dbg !15000
  br i1 %cmp, label %if.then, label %if.end, !dbg !15001

if.then:                                          ; preds = %while.body
  %5 = load i32*, i32** %wc.addr, align 8, !dbg !15002, !tbaa !2442
  store i32 65533, i32* %5, align 4, !dbg !15004, !tbaa !2436, !ctir !654
  store i32 1, i32* %next_cells, align 4, !dbg !15005, !tbaa !2436
  br label %if.end, !dbg !15006

if.end:                                           ; preds = %if.then, %while.body
  %6 = load i64, i64* %cells, align 8, !dbg !15007, !tbaa !2579
  %7 = load i32, i32* %next_cells, align 4, !dbg !15009, !tbaa !2436
  %conv = sext i32 %7 to i64, !dbg !15009
  %add = add i64 %6, %conv, !dbg !15010
  %8 = load i64, i64* %width.addr, align 8, !dbg !15011, !tbaa !2579
  %cmp1 = icmp ugt i64 %add, %8, !dbg !15012
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !15013

if.then3:                                         ; preds = %if.end
  br label %while.end, !dbg !15014

if.end4:                                          ; preds = %if.end
  %9 = load i32, i32* %next_cells, align 4, !dbg !15015, !tbaa !2436
  %conv5 = sext i32 %9 to i64, !dbg !15015
  %10 = load i64, i64* %cells, align 8, !dbg !15016, !tbaa !2579
  %add6 = add i64 %10, %conv5, !dbg !15016
  store i64 %add6, i64* %cells, align 8, !dbg !15016, !tbaa !2579
  %11 = load i32*, i32** %wc.addr, align 8, !dbg !15017, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !15017
  store i32* %incdec.ptr, i32** %wc.addr, align 8, !dbg !15017, !tbaa !2442
  br label %while.cond, !dbg !14990, !llvm.loop !15018

while.end:                                        ; preds = %if.then3, %while.cond
  %12 = load i32*, i32** %wc.addr, align 8, !dbg !15020, !tbaa !2442
  store i32 0, i32* %12, align 4, !dbg !15021, !tbaa !2436, !ctir !654
  %13 = load i64, i64* %cells, align 8, !dbg !15022, !tbaa !2579
  ret i64 %13, !dbg !15023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) #0 !dbg !15024 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %dest_end.addr = alloca i8*, align 8
  %n_spaces.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15025, metadata !DIExpression()), !dbg !15026
  store i8* %dest_end, i8** %dest_end.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest_end.addr, metadata !15027, metadata !DIExpression()), !dbg !15028
  store i64 %n_spaces, i64* %n_spaces.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_spaces.addr, metadata !15029, metadata !DIExpression()), !dbg !15030
  br label %while.cond, !dbg !15031

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %n_spaces.addr, align 8, !dbg !15032, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !15032
  store i64 %dec, i64* %n_spaces.addr, align 8, !dbg !15032, !tbaa !2579
  %tobool = icmp ne i64 %0, 0, !dbg !15032
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15033

land.rhs:                                         ; preds = %while.cond
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15034, !tbaa !2442
  %2 = load i8*, i8** %dest_end.addr, align 8, !dbg !15035, !tbaa !2442
  %cmp = icmp ult i8* %1, %2, !dbg !15036
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !15037
  br i1 %3, label %while.body, label %while.end, !dbg !15031

while.body:                                       ; preds = %land.end
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !15038, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15038
  store i8* %incdec.ptr, i8** %dest.addr, align 8, !dbg !15038, !tbaa !2442
  store i8 32, i8* %4, align 1, !dbg !15039, !tbaa !2497, !ctir !144
  br label %while.cond, !dbg !15031, !llvm.loop !15040

while.end:                                        ; preds = %land.end
  %5 = load i8*, i8** %dest.addr, align 8, !dbg !15042, !tbaa !2442
  store i8 0, i8* %5, align 1, !dbg !15043, !tbaa !2497, !ctir !144
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !15044, !tbaa !2442
  ret i8* %6, !dbg !15045
}

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) #0 !dbg !15046 !ctir !1875 {
entry:
  %src.addr = alloca i8*, align 8
  %width.addr = alloca i64*, align 8
  %align.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %orig_width = alloca i64, align 8, !ctir !149
  %size = alloca i64, align 8, !ctir !149
  %req = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  %nbuf = alloca i8*, align 8, !ctir !143
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15047, metadata !DIExpression()), !dbg !15048
  store i64* %width, i64** %width.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !15049, metadata !DIExpression()), !dbg !15050
  store i32 %align, i32* %align.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !15051, metadata !DIExpression()), !dbg !15052
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i64* %orig_width, metadata !15055, metadata !DIExpression()), !dbg !15056
  %0 = load i64*, i64** %width.addr, align 8, !dbg !15057, !tbaa !2442
  %1 = load i64, i64* %0, align 8, !dbg !15058, !tbaa !2579, !ctir !149
  store i64 %1, i64* %orig_width, align 8, !dbg !15056, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = load i64*, i64** %width.addr, align 8, !dbg !15061, !tbaa !2442
  %3 = load i64, i64* %2, align 8, !dbg !15062, !tbaa !2579, !ctir !149
  store i64 %3, i64* %size, align 8, !dbg !15060, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %req, metadata !15063, metadata !DIExpression()), !dbg !15064
  %4 = load i64, i64* %size, align 8, !dbg !15065, !tbaa !2579
  store i64 %4, i64* %req, align 8, !dbg !15064, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15066, metadata !DIExpression()), !dbg !15067
  store i8* null, i8** %buf, align 8, !dbg !15067, !tbaa !2442
  br label %while.cond, !dbg !15068

while.cond:                                       ; preds = %if.end5, %entry
  %5 = load i64, i64* %req, align 8, !dbg !15069, !tbaa !2579
  %6 = load i64, i64* %size, align 8, !dbg !15070, !tbaa !2579
  %cmp = icmp uge i64 %5, %6, !dbg !15071
  br i1 %cmp, label %while.body, label %while.end, !dbg !15068

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %nbuf, metadata !15072, metadata !DIExpression()), !dbg !15074
  %7 = load i64, i64* %req, align 8, !dbg !15075, !tbaa !2579
  %add = add i64 %7, 1, !dbg !15076
  store i64 %add, i64* %size, align 8, !dbg !15077, !tbaa !2579
  %8 = load i8*, i8** %buf, align 8, !dbg !15078, !tbaa !2442
  %9 = load i64, i64* %size, align 8, !dbg !15079, !tbaa !2579
  %call = call i8* @realloc(i8* %8, i64 %9) #13, !dbg !15080
  store i8* %call, i8** %nbuf, align 8, !dbg !15081, !tbaa !2442
  %10 = load i8*, i8** %nbuf, align 8, !dbg !15082, !tbaa !2442
  %cmp1 = icmp eq i8* %10, null, !dbg !15084
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15085

if.then:                                          ; preds = %while.body
  %11 = load i8*, i8** %buf, align 8, !dbg !15086, !tbaa !2442
  call void @free(i8* %11) #13, !dbg !15088
  store i8* null, i8** %buf, align 8, !dbg !15089, !tbaa !2442
  br label %while.end, !dbg !15090

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %nbuf, align 8, !dbg !15091, !tbaa !2442
  store i8* %12, i8** %buf, align 8, !dbg !15092, !tbaa !2442
  %13 = load i64, i64* %orig_width, align 8, !dbg !15093, !tbaa !2579
  %14 = load i64*, i64** %width.addr, align 8, !dbg !15094, !tbaa !2442
  store i64 %13, i64* %14, align 8, !dbg !15095, !tbaa !2579, !ctir !149
  %15 = load i8*, i8** %src.addr, align 8, !dbg !15096, !tbaa !2442
  %16 = load i8*, i8** %buf, align 8, !dbg !15097, !tbaa !2442
  %17 = load i64, i64* %size, align 8, !dbg !15098, !tbaa !2579
  %18 = load i64*, i64** %width.addr, align 8, !dbg !15099, !tbaa !2442
  %19 = load i32, i32* %align.addr, align 4, !dbg !15100, !tbaa !2497
  %20 = load i32, i32* %flags.addr, align 4, !dbg !15101, !tbaa !2436
  %call2 = call i64 @mbsalign(i8* %15, i8* %16, i64 %17, i64* %18, i32 %19, i32 %20), !dbg !15102
  store i64 %call2, i64* %req, align 8, !dbg !15103, !tbaa !2579
  %21 = load i64, i64* %req, align 8, !dbg !15104, !tbaa !2579
  %cmp3 = icmp eq i64 %21, -1, !dbg !15106
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !15107

if.then4:                                         ; preds = %if.end
  %22 = load i8*, i8** %buf, align 8, !dbg !15108, !tbaa !2442
  call void @free(i8* %22) #13, !dbg !15110
  store i8* null, i8** %buf, align 8, !dbg !15111, !tbaa !2442
  br label %while.end, !dbg !15112

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !15068, !llvm.loop !15113

while.end:                                        ; preds = %if.then4, %if.then, %while.cond
  %23 = load i8*, i8** %buf, align 8, !dbg !15115, !tbaa !2442
  ret i8* %23, !dbg !15116
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gnu_mbswidth(i8* %string, i32 %flags) #0 !dbg !15117 !ctir !1886 {
entry:
  %string.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15119, metadata !DIExpression()), !dbg !15120
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15121, metadata !DIExpression()), !dbg !15122
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15123, !tbaa !2442
  %1 = load i8*, i8** %string.addr, align 8, !dbg !15124, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !15125
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15126, !tbaa !2436
  %call1 = call i32 @mbsnwidth(i8* %0, i64 %call, i32 %2), !dbg !15127
  ret i32 %call1, !dbg !15128
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) #0 !dbg !15129 !ctir !1888 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %p = alloca i8*, align 8, !ctir !146
  %plimit = alloca i8*, align 8, !ctir !146
  %width = alloca i32, align 4, !ctir !27
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1890
  %wc = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %w = alloca i32, align 4, !ctir !27
  %c = alloca i8, align 1, !ctir !591
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !15130, metadata !DIExpression()), !dbg !15131
  store i64 %nbytes, i64* %nbytes.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !15132, metadata !DIExpression()), !dbg !15133
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15136, metadata !DIExpression()), !dbg !15137
  %0 = load i8*, i8** %string.addr, align 8, !dbg !15138, !tbaa !2442
  store i8* %0, i8** %p, align 8, !dbg !15137, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %plimit, metadata !15139, metadata !DIExpression()), !dbg !15140
  %1 = load i8*, i8** %p, align 8, !dbg !15141, !tbaa !2442
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !15142, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !15143
  store i8* %add.ptr, i8** %plimit, align 8, !dbg !15140, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %width, metadata !15144, metadata !DIExpression()), !dbg !15145
  store i32 0, i32* %width, align 4, !dbg !15146, !tbaa !2436
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !15147
  %cmp = icmp ugt i64 %call, 1, !dbg !15149
  br i1 %cmp, label %if.then, label %if.end49, !dbg !15150

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !15151

while.cond:                                       ; preds = %sw.epilog, %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !15153, !tbaa !2442
  %4 = load i8*, i8** %plimit, align 8, !dbg !15154, !tbaa !2442
  %cmp1 = icmp ult i8* %3, %4, !dbg !15155
  br i1 %cmp1, label %while.body, label %while.end, !dbg !15151

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8, !dbg !15156, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !15157, !tbaa !2497, !ctir !147
  %conv = sext i8 %6 to i32, !dbg !15157
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !15158

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %7 = load i8*, i8** %p, align 8, !dbg !15159, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15159
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !15159, !tbaa !2442
  %8 = load i32, i32* %width, align 4, !dbg !15161, !tbaa !2436
  %inc = add nsw i32 %8, 1, !dbg !15161
  store i32 %inc, i32* %width, align 4, !dbg !15161, !tbaa !2436
  br label %sw.epilog, !dbg !15162

sw.default:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !15163, metadata !DIExpression()), !dbg !15165
  %9 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !15166
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !15166
  br label %do.body, !dbg !15167

do.body:                                          ; preds = %do.cond, %sw.default
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !15168, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15171, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.declare(metadata i32* %w, metadata !15173, metadata !DIExpression()), !dbg !15174
  %10 = load i8*, i8** %p, align 8, !dbg !15175, !tbaa !2442
  %11 = load i8*, i8** %plimit, align 8, !dbg !15176, !tbaa !2442
  %12 = load i8*, i8** %p, align 8, !dbg !15177, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !15178
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !15178
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15178
  %call2 = call i64 @rpl_mbrtowc(i32* %wc, i8* %10, i64 %sub.ptr.sub, %struct.__mbstate_t* %mbstate), !dbg !15179
  store i64 %call2, i64* %bytes, align 8, !dbg !15180, !tbaa !2579
  %13 = load i64, i64* %bytes, align 8, !dbg !15181, !tbaa !2579
  %cmp3 = icmp eq i64 %13, -1, !dbg !15183
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !15184

if.then5:                                         ; preds = %do.body
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15185, !tbaa !2436
  %and = and i32 %14, 1, !dbg !15188
  %tobool = icmp ne i32 %and, 0, !dbg !15188
  br i1 %tobool, label %if.else, label %if.then6, !dbg !15189

if.then6:                                         ; preds = %if.then5
  %15 = load i8*, i8** %p, align 8, !dbg !15190, !tbaa !2442
  %incdec.ptr7 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !15190
  store i8* %incdec.ptr7, i8** %p, align 8, !dbg !15190, !tbaa !2442
  %16 = load i32, i32* %width, align 4, !dbg !15192, !tbaa !2436
  %inc8 = add nsw i32 %16, 1, !dbg !15192
  store i32 %inc8, i32* %width, align 4, !dbg !15192, !tbaa !2436
  br label %do.end, !dbg !15193

if.else:                                          ; preds = %if.then5
  store i32 -1, i32* %retval, align 4, !dbg !15194
  br label %return, !dbg !15194

if.end:                                           ; preds = %do.body
  %17 = load i64, i64* %bytes, align 8, !dbg !15195, !tbaa !2579
  %cmp9 = icmp eq i64 %17, -2, !dbg !15197
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15198

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !15199, !tbaa !2436
  %and12 = and i32 %18, 1, !dbg !15202
  %tobool13 = icmp ne i32 %and12, 0, !dbg !15202
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !15203

if.then14:                                        ; preds = %if.then11
  %19 = load i8*, i8** %plimit, align 8, !dbg !15204, !tbaa !2442
  store i8* %19, i8** %p, align 8, !dbg !15206, !tbaa !2442
  %20 = load i32, i32* %width, align 4, !dbg !15207, !tbaa !2436
  %inc15 = add nsw i32 %20, 1, !dbg !15207
  store i32 %inc15, i32* %width, align 4, !dbg !15207, !tbaa !2436
  br label %do.end, !dbg !15208

if.else16:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !15209
  br label %return, !dbg !15209

if.end17:                                         ; preds = %if.end
  %21 = load i64, i64* %bytes, align 8, !dbg !15210, !tbaa !2579
  %cmp18 = icmp eq i64 %21, 0, !dbg !15212
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15213

if.then20:                                        ; preds = %if.end17
  store i64 1, i64* %bytes, align 8, !dbg !15214, !tbaa !2579
  br label %if.end21, !dbg !15215

if.end21:                                         ; preds = %if.then20, %if.end17
  %22 = load i32, i32* %wc, align 4, !dbg !15216, !tbaa !2436
  %call22 = call i32 @wcwidth(i32 %22) #13, !dbg !15217
  store i32 %call22, i32* %w, align 4, !dbg !15218, !tbaa !2436
  %23 = load i32, i32* %w, align 4, !dbg !15219, !tbaa !2436
  %cmp23 = icmp sge i32 %23, 0, !dbg !15221
  br i1 %cmp23, label %if.then25, label %if.else30, !dbg !15222

if.then25:                                        ; preds = %if.end21
  %24 = load i32, i32* %w, align 4, !dbg !15223, !tbaa !2436
  %25 = load i32, i32* %width, align 4, !dbg !15226, !tbaa !2436
  %sub = sub nsw i32 2147483647, %25, !dbg !15227
  %cmp26 = icmp sgt i32 %24, %sub, !dbg !15228
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15229

if.then28:                                        ; preds = %if.then25
  br label %overflow, !dbg !15230

if.end29:                                         ; preds = %if.then25
  %26 = load i32, i32* %w, align 4, !dbg !15231, !tbaa !2436
  %27 = load i32, i32* %width, align 4, !dbg !15232, !tbaa !2436
  %add = add nsw i32 %27, %26, !dbg !15232
  store i32 %add, i32* %width, align 4, !dbg !15232, !tbaa !2436
  br label %if.end45, !dbg !15233

if.else30:                                        ; preds = %if.end21
  %28 = load i32, i32* %flags.addr, align 4, !dbg !15234, !tbaa !2436
  %and31 = and i32 %28, 2, !dbg !15236
  %tobool32 = icmp ne i32 %and31, 0, !dbg !15236
  br i1 %tobool32, label %if.else43, label %if.then33, !dbg !15237

if.then33:                                        ; preds = %if.else30
  %29 = load i32, i32* %wc, align 4, !dbg !15238, !tbaa !2436
  %call34 = call i32 @iswcntrl(i32 %29) #13, !dbg !15241
  %tobool35 = icmp ne i32 %call34, 0, !dbg !15241
  br i1 %tobool35, label %if.end42, label %if.then36, !dbg !15242

if.then36:                                        ; preds = %if.then33
  %30 = load i32, i32* %width, align 4, !dbg !15243, !tbaa !2436
  %cmp37 = icmp eq i32 %30, 2147483647, !dbg !15246
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !15247

if.then39:                                        ; preds = %if.then36
  br label %overflow, !dbg !15248

if.end40:                                         ; preds = %if.then36
  %31 = load i32, i32* %width, align 4, !dbg !15249, !tbaa !2436
  %inc41 = add nsw i32 %31, 1, !dbg !15249
  store i32 %inc41, i32* %width, align 4, !dbg !15249, !tbaa !2436
  br label %if.end42, !dbg !15250

if.end42:                                         ; preds = %if.end40, %if.then33
  br label %if.end44, !dbg !15251

if.else43:                                        ; preds = %if.else30
  store i32 -1, i32* %retval, align 4, !dbg !15252
  br label %return, !dbg !15252

if.end44:                                         ; preds = %if.end42
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end29
  %32 = load i64, i64* %bytes, align 8, !dbg !15253, !tbaa !2579
  %33 = load i8*, i8** %p, align 8, !dbg !15254, !tbaa !2442
  %add.ptr46 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !15254
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15254, !tbaa !2442
  br label %do.cond, !dbg !15255

do.cond:                                          ; preds = %if.end45
  %call47 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !15256
  %tobool48 = icmp ne i32 %call47, 0, !dbg !15257
  %lnot = xor i1 %tobool48, true, !dbg !15257
  br i1 %lnot, label %do.body, label %do.end, !dbg !15255, !llvm.loop !15258

do.end:                                           ; preds = %do.cond, %if.then14, %if.then6
  br label %sw.epilog, !dbg !15260

sw.epilog:                                        ; preds = %do.end, %sw.bb
  br label %while.cond, !dbg !15151, !llvm.loop !15261

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %width, align 4, !dbg !15263, !tbaa !2436
  store i32 %34, i32* %retval, align 4, !dbg !15264
  br label %return, !dbg !15264

if.end49:                                         ; preds = %entry
  br label %while.cond50, !dbg !15265

while.cond50:                                     ; preds = %if.end86, %if.end49
  %35 = load i8*, i8** %p, align 8, !dbg !15266, !tbaa !2442
  %36 = load i8*, i8** %plimit, align 8, !dbg !15267, !tbaa !2442
  %cmp51 = icmp ult i8* %35, %36, !dbg !15268
  br i1 %cmp51, label %while.body53, label %while.end87, !dbg !15265

while.body53:                                     ; preds = %while.cond50
  call void @llvm.dbg.declare(metadata i8* %c, metadata !15269, metadata !DIExpression()), !dbg !15271
  %37 = load i8*, i8** %p, align 8, !dbg !15272, !tbaa !2442
  %incdec.ptr54 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !15272
  store i8* %incdec.ptr54, i8** %p, align 8, !dbg !15272, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !15273, !tbaa !2497, !ctir !147
  store i8 %38, i8* %c, align 1, !dbg !15271, !tbaa !2497
  %call55 = call i16** @__ctype_b_loc() #17, !dbg !15274
  %39 = load i16*, i16** %call55, align 8, !dbg !15274, !tbaa !2442, !ctir !587
  %40 = load i8, i8* %c, align 1, !dbg !15274, !tbaa !2497
  %conv56 = zext i8 %40 to i32, !dbg !15274
  %idxprom = sext i32 %conv56 to i64, !dbg !15274
  %arrayidx = getelementptr inbounds i16, i16* %39, i64 %idxprom, !dbg !15274, !ctir !587
  %41 = load i16, i16* %arrayidx, align 2, !dbg !15274, !tbaa !5835
  %conv57 = zext i16 %41 to i32, !dbg !15274
  %and58 = and i32 %conv57, 16384, !dbg !15274
  %tobool59 = icmp ne i32 %and58, 0, !dbg !15274
  br i1 %tobool59, label %if.then60, label %if.else66, !dbg !15276

if.then60:                                        ; preds = %while.body53
  %42 = load i32, i32* %width, align 4, !dbg !15277, !tbaa !2436
  %cmp61 = icmp eq i32 %42, 2147483647, !dbg !15280
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !15281

if.then63:                                        ; preds = %if.then60
  br label %overflow, !dbg !15282

if.end64:                                         ; preds = %if.then60
  %43 = load i32, i32* %width, align 4, !dbg !15283, !tbaa !2436
  %inc65 = add nsw i32 %43, 1, !dbg !15283
  store i32 %inc65, i32* %width, align 4, !dbg !15283, !tbaa !2436
  br label %if.end86, !dbg !15284

if.else66:                                        ; preds = %while.body53
  %44 = load i32, i32* %flags.addr, align 4, !dbg !15285, !tbaa !2436
  %and67 = and i32 %44, 2, !dbg !15287
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15287
  br i1 %tobool68, label %if.else84, label %if.then69, !dbg !15288

if.then69:                                        ; preds = %if.else66
  %call70 = call i16** @__ctype_b_loc() #17, !dbg !15289
  %45 = load i16*, i16** %call70, align 8, !dbg !15289, !tbaa !2442, !ctir !587
  %46 = load i8, i8* %c, align 1, !dbg !15289, !tbaa !2497
  %conv71 = zext i8 %46 to i32, !dbg !15289
  %idxprom72 = sext i32 %conv71 to i64, !dbg !15289
  %arrayidx73 = getelementptr inbounds i16, i16* %45, i64 %idxprom72, !dbg !15289, !ctir !587
  %47 = load i16, i16* %arrayidx73, align 2, !dbg !15289, !tbaa !5835
  %conv74 = zext i16 %47 to i32, !dbg !15289
  %and75 = and i32 %conv74, 2, !dbg !15289
  %tobool76 = icmp ne i32 %and75, 0, !dbg !15289
  br i1 %tobool76, label %if.end83, label %if.then77, !dbg !15292

if.then77:                                        ; preds = %if.then69
  %48 = load i32, i32* %width, align 4, !dbg !15293, !tbaa !2436
  %cmp78 = icmp eq i32 %48, 2147483647, !dbg !15296
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !15297

if.then80:                                        ; preds = %if.then77
  br label %overflow, !dbg !15298

if.end81:                                         ; preds = %if.then77
  %49 = load i32, i32* %width, align 4, !dbg !15299, !tbaa !2436
  %inc82 = add nsw i32 %49, 1, !dbg !15299
  store i32 %inc82, i32* %width, align 4, !dbg !15299, !tbaa !2436
  br label %if.end83, !dbg !15300

if.end83:                                         ; preds = %if.end81, %if.then69
  br label %if.end85, !dbg !15301

if.else84:                                        ; preds = %if.else66
  store i32 -1, i32* %retval, align 4, !dbg !15302
  br label %return, !dbg !15302

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end64
  br label %while.cond50, !dbg !15265, !llvm.loop !15303

while.end87:                                      ; preds = %while.cond50
  %50 = load i32, i32* %width, align 4, !dbg !15305, !tbaa !2436
  store i32 %50, i32* %retval, align 4, !dbg !15306
  br label %return, !dbg !15306

overflow:                                         ; preds = %if.then80, %if.then63, %if.then39, %if.then28
  call void @llvm.dbg.label(metadata !15307), !dbg !15308
  store i32 2147483647, i32* %retval, align 4, !dbg !15309
  br label %return, !dbg !15309

return:                                           ; preds = %overflow, %while.end87, %if.else84, %while.end, %if.else43, %if.else16, %if.else
  %51 = load i32, i32* %retval, align 4, !dbg !15310
  ret i32 %51, !dbg !15310
}

; Function Attrs: nounwind
declare dso_local i32 @iswcntrl(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mpsort(i8** %base, i64 %n, i32 (i8*, i8*)* %cmp) #0 !dbg !15311 !ctir !1903 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15312, metadata !DIExpression()), !dbg !15313
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15314, metadata !DIExpression()), !dbg !15315
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15316, metadata !DIExpression()), !dbg !15317
  %0 = load i8**, i8*** %base.addr, align 8, !dbg !15318, !tbaa !2442
  %1 = load i64, i64* %n.addr, align 8, !dbg !15319, !tbaa !2579
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15320, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !15321, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %2, i64 %3, !dbg !15322
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15323, !tbaa !2442
  call void @mpsort_with_tmp(i8** %0, i64 %1, i8** %add.ptr, i32 (i8*, i8*)* %4), !dbg !15324
  ret void, !dbg !15325
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_with_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15326 !ctir !1910 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %p0 = alloca i8*, align 8, !ctir !181
  %p1 = alloca i8*, align 8, !ctir !181
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %i = alloca i64, align 8, !ctir !149
  %t = alloca i64, align 8, !ctir !149
  %tlim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %bb = alloca i8*, align 8, !ctir !181
  %tt = alloca i8*, align 8, !ctir !181
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15327, metadata !DIExpression()), !dbg !15328
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15329, metadata !DIExpression()), !dbg !15330
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15331, metadata !DIExpression()), !dbg !15332
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15333, metadata !DIExpression()), !dbg !15334
  %0 = load i64, i64* %n.addr, align 8, !dbg !15335, !tbaa !2579
  %cmp1 = icmp ule i64 %0, 2, !dbg !15337
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15338

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !15339, !tbaa !2579
  %cmp2 = icmp eq i64 %1, 2, !dbg !15342
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !15343

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !15344, metadata !DIExpression()), !dbg !15346
  %2 = load i8**, i8*** %base.addr, align 8, !dbg !15347, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !15347, !ctir !180
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !15347, !tbaa !2442
  store i8* %3, i8** %p0, align 8, !dbg !15346, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !15348, metadata !DIExpression()), !dbg !15349
  %4 = load i8**, i8*** %base.addr, align 8, !dbg !15350, !tbaa !2442
  %arrayidx4 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !15350, !ctir !180
  %5 = load i8*, i8** %arrayidx4, align 8, !dbg !15350, !tbaa !2442
  store i8* %5, i8** %p1, align 8, !dbg !15349, !tbaa !2442
  %6 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15351, !tbaa !2442
  %7 = load i8*, i8** %p0, align 8, !dbg !15353, !tbaa !2442
  %8 = load i8*, i8** %p1, align 8, !dbg !15354, !tbaa !2442
  %call = call i32 %6(i8* %7, i8* %8), !dbg !15351
  %cmp5 = icmp sle i32 %call, 0, !dbg !15355
  br i1 %cmp5, label %if.end, label %if.then6, !dbg !15356

if.then6:                                         ; preds = %if.then3
  %9 = load i8*, i8** %p1, align 8, !dbg !15357, !tbaa !2442
  %10 = load i8**, i8*** %base.addr, align 8, !dbg !15359, !tbaa !2442
  %arrayidx7 = getelementptr inbounds i8*, i8** %10, i64 0, !dbg !15359, !ctir !180
  store i8* %9, i8** %arrayidx7, align 8, !dbg !15360, !tbaa !2442
  %11 = load i8*, i8** %p0, align 8, !dbg !15361, !tbaa !2442
  %12 = load i8**, i8*** %base.addr, align 8, !dbg !15362, !tbaa !2442
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 1, !dbg !15362, !ctir !180
  store i8* %11, i8** %arrayidx8, align 8, !dbg !15363, !tbaa !2442
  br label %if.end, !dbg !15364

if.end:                                           ; preds = %if.then6, %if.then3
  br label %if.end9, !dbg !15365

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end39, !dbg !15366

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15367, metadata !DIExpression()), !dbg !15369
  %13 = load i64, i64* %n.addr, align 8, !dbg !15370, !tbaa !2579
  %div = udiv i64 %13, 2, !dbg !15371
  store i64 %div, i64* %n1, align 8, !dbg !15369, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15372, metadata !DIExpression()), !dbg !15373
  %14 = load i64, i64* %n.addr, align 8, !dbg !15374, !tbaa !2579
  %15 = load i64, i64* %n1, align 8, !dbg !15375, !tbaa !2579
  %sub = sub i64 %14, %15, !dbg !15376
  store i64 %sub, i64* %n2, align 8, !dbg !15373, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15377, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.declare(metadata i64* %t, metadata !15379, metadata !DIExpression()), !dbg !15380
  store i64 0, i64* %t, align 8, !dbg !15380, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %tlim, metadata !15381, metadata !DIExpression()), !dbg !15382
  %16 = load i64, i64* %n1, align 8, !dbg !15383, !tbaa !2579
  store i64 %16, i64* %tlim, align 8, !dbg !15382, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15384, metadata !DIExpression()), !dbg !15385
  %17 = load i64, i64* %n1, align 8, !dbg !15386, !tbaa !2579
  store i64 %17, i64* %b, align 8, !dbg !15385, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15387, metadata !DIExpression()), !dbg !15388
  %18 = load i64, i64* %n.addr, align 8, !dbg !15389, !tbaa !2579
  store i64 %18, i64* %blim, align 8, !dbg !15388, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15390, metadata !DIExpression()), !dbg !15391
  call void @llvm.dbg.declare(metadata i8** %tt, metadata !15392, metadata !DIExpression()), !dbg !15393
  %19 = load i8**, i8*** %base.addr, align 8, !dbg !15394, !tbaa !2442
  %20 = load i64, i64* %n1, align 8, !dbg !15395, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %19, i64 %20, !dbg !15396
  %21 = load i64, i64* %n2, align 8, !dbg !15397, !tbaa !2579
  %22 = load i8**, i8*** %tmp.addr, align 8, !dbg !15398, !tbaa !2442
  %23 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15399, !tbaa !2442
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %21, i8** %22, i32 (i8*, i8*)* %23), !dbg !15400
  %24 = load i64, i64* %n1, align 8, !dbg !15401, !tbaa !2579
  %cmp10 = icmp ult i64 %24, 2, !dbg !15403
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !15404

if.then11:                                        ; preds = %if.else
  %25 = load i8**, i8*** %base.addr, align 8, !dbg !15405, !tbaa !2442
  %arrayidx12 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !15405, !ctir !180
  %26 = load i8*, i8** %arrayidx12, align 8, !dbg !15405, !tbaa !2442
  %27 = load i8**, i8*** %tmp.addr, align 8, !dbg !15406, !tbaa !2442
  %arrayidx13 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !15406, !ctir !180
  store i8* %26, i8** %arrayidx13, align 8, !dbg !15407, !tbaa !2442
  br label %if.end15, !dbg !15406

if.else14:                                        ; preds = %if.else
  %28 = load i8**, i8*** %base.addr, align 8, !dbg !15408, !tbaa !2442
  %29 = load i64, i64* %n1, align 8, !dbg !15409, !tbaa !2579
  %30 = load i8**, i8*** %tmp.addr, align 8, !dbg !15410, !tbaa !2442
  %31 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15411, !tbaa !2442
  call void @mpsort_into_tmp(i8** %28, i64 %29, i8** %30, i32 (i8*, i8*)* %31), !dbg !15412
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then11
  %32 = load i8**, i8*** %tmp.addr, align 8, !dbg !15413, !tbaa !2442
  %33 = load i64, i64* %t, align 8, !dbg !15414, !tbaa !2579
  %arrayidx16 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !15413, !ctir !180
  %34 = load i8*, i8** %arrayidx16, align 8, !dbg !15413, !tbaa !2442
  store i8* %34, i8** %tt, align 8, !dbg !15415, !tbaa !2442
  %35 = load i8**, i8*** %base.addr, align 8, !dbg !15416, !tbaa !2442
  %36 = load i64, i64* %b, align 8, !dbg !15417, !tbaa !2579
  %arrayidx17 = getelementptr inbounds i8*, i8** %35, i64 %36, !dbg !15416, !ctir !180
  %37 = load i8*, i8** %arrayidx17, align 8, !dbg !15416, !tbaa !2442
  store i8* %37, i8** %bb, align 8, !dbg !15418, !tbaa !2442
  store i64 0, i64* %i, align 8, !dbg !15419, !tbaa !2579
  br label %for.cond, !dbg !15421

for.cond:                                         ; preds = %if.end38, %if.end15
  %38 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15422, !tbaa !2442
  %39 = load i8*, i8** %tt, align 8, !dbg !15425, !tbaa !2442
  %40 = load i8*, i8** %bb, align 8, !dbg !15426, !tbaa !2442
  %call18 = call i32 %38(i8* %39, i8* %40), !dbg !15422
  %cmp19 = icmp sle i32 %call18, 0, !dbg !15427
  br i1 %cmp19, label %if.then20, label %if.else27, !dbg !15428

if.then20:                                        ; preds = %for.cond
  %41 = load i8*, i8** %tt, align 8, !dbg !15429, !tbaa !2442
  %42 = load i8**, i8*** %base.addr, align 8, !dbg !15431, !tbaa !2442
  %43 = load i64, i64* %i, align 8, !dbg !15432, !tbaa !2579
  %inc = add i64 %43, 1, !dbg !15432
  store i64 %inc, i64* %i, align 8, !dbg !15432, !tbaa !2579
  %arrayidx21 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !15431, !ctir !180
  store i8* %41, i8** %arrayidx21, align 8, !dbg !15433, !tbaa !2442
  %44 = load i64, i64* %t, align 8, !dbg !15434, !tbaa !2579
  %inc22 = add i64 %44, 1, !dbg !15434
  store i64 %inc22, i64* %t, align 8, !dbg !15434, !tbaa !2579
  %45 = load i64, i64* %t, align 8, !dbg !15435, !tbaa !2579
  %46 = load i64, i64* %tlim, align 8, !dbg !15437, !tbaa !2579
  %cmp23 = icmp eq i64 %45, %46, !dbg !15438
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !15439

if.then24:                                        ; preds = %if.then20
  br label %for.end, !dbg !15440

if.end25:                                         ; preds = %if.then20
  %47 = load i8**, i8*** %tmp.addr, align 8, !dbg !15441, !tbaa !2442
  %48 = load i64, i64* %t, align 8, !dbg !15442, !tbaa !2579
  %arrayidx26 = getelementptr inbounds i8*, i8** %47, i64 %48, !dbg !15441, !ctir !180
  %49 = load i8*, i8** %arrayidx26, align 8, !dbg !15441, !tbaa !2442
  store i8* %49, i8** %tt, align 8, !dbg !15443, !tbaa !2442
  br label %if.end38, !dbg !15444

if.else27:                                        ; preds = %for.cond
  %50 = load i8*, i8** %bb, align 8, !dbg !15445, !tbaa !2442
  %51 = load i8**, i8*** %base.addr, align 8, !dbg !15447, !tbaa !2442
  %52 = load i64, i64* %i, align 8, !dbg !15448, !tbaa !2579
  %inc28 = add i64 %52, 1, !dbg !15448
  store i64 %inc28, i64* %i, align 8, !dbg !15448, !tbaa !2579
  %arrayidx29 = getelementptr inbounds i8*, i8** %51, i64 %52, !dbg !15447, !ctir !180
  store i8* %50, i8** %arrayidx29, align 8, !dbg !15449, !tbaa !2442
  %53 = load i64, i64* %b, align 8, !dbg !15450, !tbaa !2579
  %inc30 = add i64 %53, 1, !dbg !15450
  store i64 %inc30, i64* %b, align 8, !dbg !15450, !tbaa !2579
  %54 = load i64, i64* %b, align 8, !dbg !15451, !tbaa !2579
  %55 = load i64, i64* %blim, align 8, !dbg !15453, !tbaa !2579
  %cmp31 = icmp eq i64 %54, %55, !dbg !15454
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !15455

if.then32:                                        ; preds = %if.else27
  %56 = load i8**, i8*** %base.addr, align 8, !dbg !15456, !tbaa !2442
  %57 = load i64, i64* %i, align 8, !dbg !15458, !tbaa !2579
  %add.ptr33 = getelementptr inbounds i8*, i8** %56, i64 %57, !dbg !15459
  %58 = bitcast i8** %add.ptr33 to i8*, !dbg !15460
  %59 = load i8**, i8*** %tmp.addr, align 8, !dbg !15461, !tbaa !2442
  %60 = load i64, i64* %t, align 8, !dbg !15462, !tbaa !2579
  %add.ptr34 = getelementptr inbounds i8*, i8** %59, i64 %60, !dbg !15463
  %61 = bitcast i8** %add.ptr34 to i8*, !dbg !15460
  %62 = load i64, i64* %tlim, align 8, !dbg !15464, !tbaa !2579
  %63 = load i64, i64* %t, align 8, !dbg !15465, !tbaa !2579
  %sub35 = sub i64 %62, %63, !dbg !15466
  %mul = mul i64 %sub35, 8, !dbg !15467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %61, i64 %mul, i1 false), !dbg !15460
  br label %for.end, !dbg !15468

if.end36:                                         ; preds = %if.else27
  %64 = load i8**, i8*** %base.addr, align 8, !dbg !15469, !tbaa !2442
  %65 = load i64, i64* %b, align 8, !dbg !15470, !tbaa !2579
  %arrayidx37 = getelementptr inbounds i8*, i8** %64, i64 %65, !dbg !15469, !ctir !180
  %66 = load i8*, i8** %arrayidx37, align 8, !dbg !15469, !tbaa !2442
  store i8* %66, i8** %bb, align 8, !dbg !15471, !tbaa !2442
  br label %if.end38

if.end38:                                         ; preds = %if.end36, %if.end25
  br label %for.cond, !dbg !15472, !llvm.loop !15473

for.end:                                          ; preds = %if.then32, %if.then24
  br label %if.end39

if.end39:                                         ; preds = %for.end, %if.end9
  ret void, !dbg !15476
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mpsort_into_tmp(i8** noalias %base, i64 %n, i8** noalias %tmp, i32 (i8*, i8*)* %cmp) #0 !dbg !15477 !ctir !1910 {
entry:
  %base.addr = alloca i8**, align 8
  %n.addr = alloca i64, align 8
  %tmp.addr = alloca i8**, align 8
  %cmp.addr = alloca i32 (i8*, i8*)*, align 8
  %n1 = alloca i64, align 8, !ctir !149
  %n2 = alloca i64, align 8, !ctir !149
  %a = alloca i64, align 8, !ctir !149
  %alim = alloca i64, align 8, !ctir !149
  %b = alloca i64, align 8, !ctir !149
  %blim = alloca i64, align 8, !ctir !149
  %ba = alloca i8*, align 8, !ctir !181
  %bb = alloca i8*, align 8, !ctir !181
  store i8** %base, i8*** %base.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %base.addr, metadata !15478, metadata !DIExpression()), !dbg !15479
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15480, metadata !DIExpression()), !dbg !15481
  store i8** %tmp, i8*** %tmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %tmp.addr, metadata !15482, metadata !DIExpression()), !dbg !15483
  store i32 (i8*, i8*)* %cmp, i32 (i8*, i8*)** %cmp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp.addr, metadata !15484, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.declare(metadata i64* %n1, metadata !15486, metadata !DIExpression()), !dbg !15487
  %0 = load i64, i64* %n.addr, align 8, !dbg !15488, !tbaa !2579
  %div = udiv i64 %0, 2, !dbg !15489
  store i64 %div, i64* %n1, align 8, !dbg !15487, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n2, metadata !15490, metadata !DIExpression()), !dbg !15491
  %1 = load i64, i64* %n.addr, align 8, !dbg !15492, !tbaa !2579
  %2 = load i64, i64* %n1, align 8, !dbg !15493, !tbaa !2579
  %sub = sub i64 %1, %2, !dbg !15494
  store i64 %sub, i64* %n2, align 8, !dbg !15491, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %a, metadata !15495, metadata !DIExpression()), !dbg !15496
  store i64 0, i64* %a, align 8, !dbg !15496, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alim, metadata !15497, metadata !DIExpression()), !dbg !15498
  %3 = load i64, i64* %n1, align 8, !dbg !15499, !tbaa !2579
  store i64 %3, i64* %alim, align 8, !dbg !15498, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %b, metadata !15500, metadata !DIExpression()), !dbg !15501
  %4 = load i64, i64* %n1, align 8, !dbg !15502, !tbaa !2579
  store i64 %4, i64* %b, align 8, !dbg !15501, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %blim, metadata !15503, metadata !DIExpression()), !dbg !15504
  %5 = load i64, i64* %n.addr, align 8, !dbg !15505, !tbaa !2579
  store i64 %5, i64* %blim, align 8, !dbg !15504, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %ba, metadata !15506, metadata !DIExpression()), !dbg !15507
  call void @llvm.dbg.declare(metadata i8** %bb, metadata !15508, metadata !DIExpression()), !dbg !15509
  %6 = load i8**, i8*** %base.addr, align 8, !dbg !15510, !tbaa !2442
  %7 = load i64, i64* %n1, align 8, !dbg !15511, !tbaa !2579
  %add.ptr = getelementptr inbounds i8*, i8** %6, i64 %7, !dbg !15512
  %8 = load i64, i64* %n2, align 8, !dbg !15513, !tbaa !2579
  %9 = load i8**, i8*** %tmp.addr, align 8, !dbg !15514, !tbaa !2442
  %10 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15515, !tbaa !2442
  call void @mpsort_with_tmp(i8** %add.ptr, i64 %8, i8** %9, i32 (i8*, i8*)* %10), !dbg !15516
  %11 = load i8**, i8*** %base.addr, align 8, !dbg !15517, !tbaa !2442
  %12 = load i64, i64* %n1, align 8, !dbg !15518, !tbaa !2579
  %13 = load i8**, i8*** %tmp.addr, align 8, !dbg !15519, !tbaa !2442
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15520, !tbaa !2442
  call void @mpsort_with_tmp(i8** %11, i64 %12, i8** %13, i32 (i8*, i8*)* %14), !dbg !15521
  %15 = load i8**, i8*** %base.addr, align 8, !dbg !15522, !tbaa !2442
  %16 = load i64, i64* %a, align 8, !dbg !15523, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !15522, !ctir !180
  %17 = load i8*, i8** %arrayidx, align 8, !dbg !15522, !tbaa !2442
  store i8* %17, i8** %ba, align 8, !dbg !15524, !tbaa !2442
  %18 = load i8**, i8*** %base.addr, align 8, !dbg !15525, !tbaa !2442
  %19 = load i64, i64* %b, align 8, !dbg !15526, !tbaa !2579
  %arrayidx1 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !15525, !ctir !180
  %20 = load i8*, i8** %arrayidx1, align 8, !dbg !15525, !tbaa !2442
  store i8* %20, i8** %bb, align 8, !dbg !15527, !tbaa !2442
  br label %for.cond, !dbg !15528

for.cond:                                         ; preds = %if.end12, %entry
  %21 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp.addr, align 8, !dbg !15529, !tbaa !2442
  %22 = load i8*, i8** %ba, align 8, !dbg !15533, !tbaa !2442
  %23 = load i8*, i8** %bb, align 8, !dbg !15534, !tbaa !2442
  %call = call i32 %21(i8* %22, i8* %23), !dbg !15529
  %cmp2 = icmp sle i32 %call, 0, !dbg !15535
  br i1 %cmp2, label %if.then, label %if.else, !dbg !15536

if.then:                                          ; preds = %for.cond
  %24 = load i8*, i8** %ba, align 8, !dbg !15537, !tbaa !2442
  %25 = load i8**, i8*** %tmp.addr, align 8, !dbg !15539, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8*, i8** %25, i32 1, !dbg !15539
  store i8** %incdec.ptr, i8*** %tmp.addr, align 8, !dbg !15539, !tbaa !2442
  store i8* %24, i8** %25, align 8, !dbg !15540, !tbaa !2442, !ctir !181
  %26 = load i64, i64* %a, align 8, !dbg !15541, !tbaa !2579
  %inc = add i64 %26, 1, !dbg !15541
  store i64 %inc, i64* %a, align 8, !dbg !15541, !tbaa !2579
  %27 = load i64, i64* %a, align 8, !dbg !15542, !tbaa !2579
  %28 = load i64, i64* %alim, align 8, !dbg !15544, !tbaa !2579
  %cmp3 = icmp eq i64 %27, %28, !dbg !15545
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !15546

if.then4:                                         ; preds = %if.then
  %29 = load i64, i64* %b, align 8, !dbg !15547, !tbaa !2579
  store i64 %29, i64* %a, align 8, !dbg !15549, !tbaa !2579
  %30 = load i64, i64* %blim, align 8, !dbg !15550, !tbaa !2579
  store i64 %30, i64* %alim, align 8, !dbg !15551, !tbaa !2579
  br label %for.end, !dbg !15552

if.end:                                           ; preds = %if.then
  %31 = load i8**, i8*** %base.addr, align 8, !dbg !15553, !tbaa !2442
  %32 = load i64, i64* %a, align 8, !dbg !15554, !tbaa !2579
  %arrayidx5 = getelementptr inbounds i8*, i8** %31, i64 %32, !dbg !15553, !ctir !180
  %33 = load i8*, i8** %arrayidx5, align 8, !dbg !15553, !tbaa !2442
  store i8* %33, i8** %ba, align 8, !dbg !15555, !tbaa !2442
  br label %if.end12, !dbg !15556

if.else:                                          ; preds = %for.cond
  %34 = load i8*, i8** %bb, align 8, !dbg !15557, !tbaa !2442
  %35 = load i8**, i8*** %tmp.addr, align 8, !dbg !15559, !tbaa !2442
  %incdec.ptr6 = getelementptr inbounds i8*, i8** %35, i32 1, !dbg !15559
  store i8** %incdec.ptr6, i8*** %tmp.addr, align 8, !dbg !15559, !tbaa !2442
  store i8* %34, i8** %35, align 8, !dbg !15560, !tbaa !2442, !ctir !181
  %36 = load i64, i64* %b, align 8, !dbg !15561, !tbaa !2579
  %inc7 = add i64 %36, 1, !dbg !15561
  store i64 %inc7, i64* %b, align 8, !dbg !15561, !tbaa !2579
  %37 = load i64, i64* %b, align 8, !dbg !15562, !tbaa !2579
  %38 = load i64, i64* %blim, align 8, !dbg !15564, !tbaa !2579
  %cmp8 = icmp eq i64 %37, %38, !dbg !15565
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !15566

if.then9:                                         ; preds = %if.else
  br label %for.end, !dbg !15567

if.end10:                                         ; preds = %if.else
  %39 = load i8**, i8*** %base.addr, align 8, !dbg !15568, !tbaa !2442
  %40 = load i64, i64* %b, align 8, !dbg !15569, !tbaa !2579
  %arrayidx11 = getelementptr inbounds i8*, i8** %39, i64 %40, !dbg !15568, !ctir !180
  %41 = load i8*, i8** %arrayidx11, align 8, !dbg !15568, !tbaa !2442
  store i8* %41, i8** %bb, align 8, !dbg !15570, !tbaa !2442
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end
  br label %for.cond, !dbg !15571, !llvm.loop !15572

for.end:                                          ; preds = %if.then9, %if.then4
  %42 = load i8**, i8*** %tmp.addr, align 8, !dbg !15575, !tbaa !2442
  %43 = bitcast i8** %42 to i8*, !dbg !15576
  %44 = load i8**, i8*** %base.addr, align 8, !dbg !15577, !tbaa !2442
  %45 = load i64, i64* %a, align 8, !dbg !15578, !tbaa !2579
  %add.ptr13 = getelementptr inbounds i8*, i8** %44, i64 %45, !dbg !15579
  %46 = bitcast i8** %add.ptr13 to i8*, !dbg !15576
  %47 = load i64, i64* %alim, align 8, !dbg !15580, !tbaa !2579
  %48 = load i64, i64* %a, align 8, !dbg !15581, !tbaa !2579
  %sub14 = sub i64 %47, %48, !dbg !15582
  %mul = mul i64 %sub14, 8, !dbg !15583
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %46, i64 %mul, i1 false), !dbg !15576
  ret void, !dbg !15584
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @nstrftime(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15585 !ctir !1916 {
entry:
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %tzset_called = alloca i8, align 1, !ctir !141
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15587, metadata !DIExpression()), !dbg !15588
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15589, metadata !DIExpression()), !dbg !15590
  store i8* %format, i8** %format.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15591, metadata !DIExpression()), !dbg !15592
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15593, metadata !DIExpression()), !dbg !15594
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15595, metadata !DIExpression()), !dbg !15596
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15597, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.declare(metadata i8* %tzset_called, metadata !15598, metadata !DIExpression()), !dbg !15599
  store i8 0, i8* %tzset_called, align 1, !dbg !15599, !tbaa !2461
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15600, !tbaa !2442
  %1 = load i64, i64* %maxsize.addr, align 8, !dbg !15601, !tbaa !2579
  %2 = load i8*, i8** %format.addr, align 8, !dbg !15602, !tbaa !2442
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15603, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15604, !tbaa !2442
  %5 = load i32, i32* %ns.addr, align 4, !dbg !15604, !tbaa !2436
  %call = call i64 @__strftime_internal(i8* %0, i64 %1, i8* %2, %struct.tm* %3, i1 zeroext false, i32 0, i32 -1, i8* %tzset_called, %struct.tm_zone* %4, i32 %5), !dbg !15605
  ret i64 %call, !dbg !15606
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__strftime_internal(i8* %s, i64 %maxsize, i8* %format, %struct.tm* %tp, i1 zeroext %upcase, i32 %yr_spec, i32 %width, i8* %tzset_called, %struct.tm_zone* %tz, i32 %ns) #0 !dbg !15607 !ctir !1941 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca i8*, align 8
  %maxsize.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %tp.addr = alloca %struct.tm*, align 8
  %upcase.addr = alloca i8, align 1
  %yr_spec.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %tzset_called.addr = alloca i8*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %ns.addr = alloca i32, align 4
  %hour12 = alloca i32, align 4, !ctir !27
  %zone = alloca i8*, align 8, !ctir !146
  %i = alloca i64, align 8, !ctir !149
  %p = alloca i8*, align 8, !ctir !143
  %f = alloca i8*, align 8, !ctir !146
  %pad = alloca i32, align 4, !ctir !27
  %modifier = alloca i32, align 4, !ctir !27
  %digits = alloca i32, align 4, !ctir !27
  %number_value = alloca i32, align 4, !ctir !27
  %u_number_value = alloca i32, align 4, !ctir !6
  %negative_number = alloca i8, align 1, !ctir !141
  %always_output_a_sign = alloca i8, align 1, !ctir !141
  %tz_colon_mask = alloca i32, align 4, !ctir !27
  %subfmt = alloca i8*, align 8, !ctir !146
  %sign_char = alloca i8, align 1, !ctir !144
  %bufp = alloca i8*, align 8, !ctir !143
  %buf = alloca [23 x i8], align 16, !ctir !1943
  %to_lowcase = alloca i8, align 1, !ctir !141
  %to_uppcase = alloca i8, align 1, !ctir !141
  %colons = alloca i64, align 8, !ctir !149
  %change_case = alloca i8, align 1, !ctir !141
  %format_char = alloca i32, align 4, !ctir !27
  %subwidth = alloca i32, align 4, !ctir !27
  %_n = alloca i64, align 8, !ctir !149
  %_w = alloca i64, align 8, !ctir !149
  %_incr = alloca i64, align 8, !ctir !149
  %_delta = alloca i64, align 8, !ctir !149
  %_n95 = alloca i64, align 8, !ctir !149
  %_w96 = alloca i64, align 8, !ctir !149
  %_incr104 = alloca i64, align 8, !ctir !149
  %_delta124 = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %_n182 = alloca i64, align 8, !ctir !149
  %_w183 = alloca i64, align 8, !ctir !149
  %_incr191 = alloca i64, align 8, !ctir !149
  %_delta211 = alloca i64, align 8, !ctir !149
  %ufmt = alloca [5 x i8], align 1, !ctir !1946
  %u = alloca i8*, align 8, !ctir !143
  %ubuf = alloca [1024 x i8], align 16, !ctir !1947
  %len233 = alloca i64, align 8, !ctir !149
  %_n251 = alloca i64, align 8, !ctir !149
  %_w253 = alloca i64, align 8, !ctir !149
  %_incr261 = alloca i64, align 8, !ctir !149
  %_delta281 = alloca i64, align 8, !ctir !149
  %century = alloca i32, align 4, !ctir !27
  %_n437 = alloca i64, align 8, !ctir !149
  %_w438 = alloca i64, align 8, !ctir !149
  %_incr446 = alloca i64, align 8, !ctir !149
  %_delta466 = alloca i64, align 8, !ctir !149
  %padding = alloca i32, align 4, !ctir !27
  %_n525 = alloca i64, align 8, !ctir !149
  %_w526 = alloca i64, align 8, !ctir !149
  %_incr534 = alloca i64, align 8, !ctir !149
  %_delta554 = alloca i64, align 8, !ctir !149
  %_n584 = alloca i64, align 8, !ctir !149
  %_w585 = alloca i64, align 8, !ctir !149
  %_incr593 = alloca i64, align 8, !ctir !149
  %_delta613 = alloca i64, align 8, !ctir !149
  %_n646 = alloca i64, align 8, !ctir !149
  %_w647 = alloca i64, align 8, !ctir !149
  %_incr655 = alloca i64, align 8, !ctir !149
  %_delta675 = alloca i64, align 8, !ctir !149
  %_n698 = alloca i64, align 8, !ctir !149
  %_w704 = alloca i64, align 8, !ctir !149
  %_incr712 = alloca i64, align 8, !ctir !149
  %_delta732 = alloca i64, align 8, !ctir !149
  %j = alloca i32, align 4, !ctir !27
  %_n867 = alloca i64, align 8, !ctir !149
  %_w868 = alloca i64, align 8, !ctir !149
  %_incr876 = alloca i64, align 8, !ctir !149
  %_delta896 = alloca i64, align 8, !ctir !149
  %ltm = alloca %struct.tm, align 8, !ctir !1920
  %t = alloca i64, align 8, !ctir !162
  %d = alloca i32, align 4, !ctir !27
  %_n971 = alloca i64, align 8, !ctir !149
  %_w972 = alloca i64, align 8, !ctir !149
  %_incr980 = alloca i64, align 8, !ctir !149
  %_delta1000 = alloca i64, align 8, !ctir !149
  %year = alloca i32, align 4, !ctir !27
  %year_adjust = alloca i32, align 4, !ctir !27
  %days = alloca i32, align 4, !ctir !27
  %d1080 = alloca i32, align 4, !ctir !27
  %yy = alloca i32, align 4, !ctir !27
  %yy1197 = alloca i32, align 4, !ctir !27
  %_n1221 = alloca i64, align 8, !ctir !149
  %_w1223 = alloca i64, align 8, !ctir !149
  %_incr1231 = alloca i64, align 8, !ctir !149
  %_delta1251 = alloca i64, align 8, !ctir !149
  %diff = alloca i32, align 4, !ctir !27
  %hour_diff = alloca i32, align 4, !ctir !27
  %min_diff = alloca i32, align 4, !ctir !27
  %sec_diff = alloca i32, align 4, !ctir !27
  %flen = alloca i32, align 4, !ctir !27
  %_n1367 = alloca i64, align 8, !ctir !149
  %_w1369 = alloca i64, align 8, !ctir !149
  %_incr1377 = alloca i64, align 8, !ctir !149
  %_delta1397 = alloca i64, align 8, !ctir !149
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15608, metadata !DIExpression()), !dbg !15609
  store i64 %maxsize, i64* %maxsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !15610, metadata !DIExpression()), !dbg !15611
  store i8* %format, i8** %format.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15612, metadata !DIExpression()), !dbg !15613
  store %struct.tm* %tp, %struct.tm** %tp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tp.addr, metadata !15614, metadata !DIExpression()), !dbg !15615
  %frombool = zext i1 %upcase to i8
  store i8 %frombool, i8* %upcase.addr, align 1, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %upcase.addr, metadata !15616, metadata !DIExpression()), !dbg !15617
  store i32 %yr_spec, i32* %yr_spec.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %yr_spec.addr, metadata !15618, metadata !DIExpression()), !dbg !15619
  store i32 %width, i32* %width.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !15620, metadata !DIExpression()), !dbg !15621
  store i8* %tzset_called, i8** %tzset_called.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tzset_called.addr, metadata !15622, metadata !DIExpression()), !dbg !15623
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !15624, metadata !DIExpression()), !dbg !15625
  store i32 %ns, i32* %ns.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !15626, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.declare(metadata i32* %hour12, metadata !15627, metadata !DIExpression()), !dbg !15628
  %0 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15629, !tbaa !2442
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 2, !dbg !15630, !ctir !1919
  %1 = load i32, i32* %tm_hour, align 8, !dbg !15630, !tbaa !15631, !ctir !27
  store i32 %1, i32* %hour12, align 4, !dbg !15628, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !15632, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15634, metadata !DIExpression()), !dbg !15635
  store i64 0, i64* %i, align 8, !dbg !15635, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15636, metadata !DIExpression()), !dbg !15637
  %2 = load i8*, i8** %s.addr, align 8, !dbg !15638, !tbaa !2442
  store i8* %2, i8** %p, align 8, !dbg !15637, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %f, metadata !15639, metadata !DIExpression()), !dbg !15640
  store i8* null, i8** %zone, align 8, !dbg !15641, !tbaa !2442
  %3 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15642, !tbaa !2442
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 10, !dbg !15643, !ctir !1919
  %4 = load i8*, i8** %tm_zone, align 8, !dbg !15643, !tbaa !15644, !ctir !146
  store i8* %4, i8** %zone, align 8, !dbg !15645, !tbaa !2442
  %5 = load i8*, i8** %zone, align 8, !dbg !15646, !tbaa !2442
  %tobool = icmp ne i8* %5, null, !dbg !15646
  br i1 %tobool, label %if.end, label %if.then, !dbg !15648

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.361, i64 0, i64 0), i8** %zone, align 8, !dbg !15649, !tbaa !2442
  br label %if.end, !dbg !15650

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %hour12, align 4, !dbg !15651, !tbaa !2436
  %cmp = icmp sgt i32 %6, 12, !dbg !15653
  br i1 %cmp, label %if.then1, label %if.else, !dbg !15654

if.then1:                                         ; preds = %if.end
  %7 = load i32, i32* %hour12, align 4, !dbg !15655, !tbaa !2436
  %sub = sub nsw i32 %7, 12, !dbg !15655
  store i32 %sub, i32* %hour12, align 4, !dbg !15655, !tbaa !2436
  br label %if.end5, !dbg !15656

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %hour12, align 4, !dbg !15657, !tbaa !2436
  %cmp2 = icmp eq i32 %8, 0, !dbg !15659
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !15660

if.then3:                                         ; preds = %if.else
  store i32 12, i32* %hour12, align 4, !dbg !15661, !tbaa !2436
  br label %if.end4, !dbg !15662

if.end4:                                          ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end4, %if.then1
  %9 = load i8*, i8** %format.addr, align 8, !dbg !15663, !tbaa !2442
  store i8* %9, i8** %f, align 8, !dbg !15665, !tbaa !2442
  br label %for.cond, !dbg !15666

for.cond:                                         ; preds = %for.inc1436, %if.end5
  %10 = load i8*, i8** %f, align 8, !dbg !15667, !tbaa !2442
  %11 = load i8, i8* %10, align 1, !dbg !15669, !tbaa !2497, !ctir !147
  %conv = sext i8 %11 to i32, !dbg !15669
  %cmp6 = icmp ne i32 %conv, 0, !dbg !15670
  br i1 %cmp6, label %for.body, label %for.end1438, !dbg !15671

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !15672, metadata !DIExpression()), !dbg !15674
  store i32 0, i32* %pad, align 4, !dbg !15674, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %modifier, metadata !15675, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !15677, metadata !DIExpression()), !dbg !15678
  store i32 0, i32* %digits, align 4, !dbg !15678, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %number_value, metadata !15679, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.declare(metadata i32* %u_number_value, metadata !15681, metadata !DIExpression()), !dbg !15682
  call void @llvm.dbg.declare(metadata i8* %negative_number, metadata !15683, metadata !DIExpression()), !dbg !15684
  call void @llvm.dbg.declare(metadata i8* %always_output_a_sign, metadata !15685, metadata !DIExpression()), !dbg !15686
  call void @llvm.dbg.declare(metadata i32* %tz_colon_mask, metadata !15687, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.declare(metadata i8** %subfmt, metadata !15689, metadata !DIExpression()), !dbg !15690
  call void @llvm.dbg.declare(metadata i8* %sign_char, metadata !15691, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.declare(metadata i8** %bufp, metadata !15693, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.declare(metadata [23 x i8]* %buf, metadata !15695, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.declare(metadata i8* %to_lowcase, metadata !15697, metadata !DIExpression()), !dbg !15698
  store i8 0, i8* %to_lowcase, align 1, !dbg !15698, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %to_uppcase, metadata !15699, metadata !DIExpression()), !dbg !15700
  %12 = load i8, i8* %upcase.addr, align 1, !dbg !15701, !tbaa !2461
  %tobool8 = trunc i8 %12 to i1, !dbg !15701
  %frombool9 = zext i1 %tobool8 to i8, !dbg !15700
  store i8 %frombool9, i8* %to_uppcase, align 1, !dbg !15700, !tbaa !2461
  call void @llvm.dbg.declare(metadata i64* %colons, metadata !15702, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.declare(metadata i8* %change_case, metadata !15704, metadata !DIExpression()), !dbg !15705
  store i8 0, i8* %change_case, align 1, !dbg !15705, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %format_char, metadata !15706, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.declare(metadata i32* %subwidth, metadata !15708, metadata !DIExpression()), !dbg !15709
  %13 = load i8*, i8** %f, align 8, !dbg !15710, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !15712, !tbaa !2497, !ctir !147
  %conv10 = sext i8 %14 to i32, !dbg !15712
  %cmp11 = icmp ne i32 %conv10, 37, !dbg !15713
  br i1 %cmp11, label %if.then13, label %if.end48, !dbg !15714

if.then13:                                        ; preds = %for.body
  br label %do.body, !dbg !15715

do.body:                                          ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i64* %_n, metadata !15717, metadata !DIExpression()), !dbg !15719
  store i64 1, i64* %_n, align 8, !dbg !15719, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w, metadata !15720, metadata !DIExpression()), !dbg !15719
  %15 = load i32, i32* %width.addr, align 4, !dbg !15719, !tbaa !2436
  %cmp14 = icmp slt i32 %15, 0, !dbg !15719
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !15719

cond.true:                                        ; preds = %do.body
  br label %cond.end, !dbg !15719

cond.false:                                       ; preds = %do.body
  %16 = load i32, i32* %width.addr, align 4, !dbg !15719, !tbaa !2436
  br label %cond.end, !dbg !15719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %16, %cond.false ], !dbg !15719
  %conv16 = sext i32 %cond to i64, !dbg !15719
  store i64 %conv16, i64* %_w, align 8, !dbg !15719, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr, metadata !15721, metadata !DIExpression()), !dbg !15719
  %17 = load i64, i64* %_n, align 8, !dbg !15719, !tbaa !2579
  %18 = load i64, i64* %_w, align 8, !dbg !15719, !tbaa !2579
  %cmp17 = icmp ult i64 %17, %18, !dbg !15719
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !15719

cond.true19:                                      ; preds = %cond.end
  %19 = load i64, i64* %_w, align 8, !dbg !15719, !tbaa !2579
  br label %cond.end21, !dbg !15719

cond.false20:                                     ; preds = %cond.end
  %20 = load i64, i64* %_n, align 8, !dbg !15719, !tbaa !2579
  br label %cond.end21, !dbg !15719

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i64 [ %19, %cond.true19 ], [ %20, %cond.false20 ], !dbg !15719
  store i64 %cond22, i64* %_incr, align 8, !dbg !15719, !tbaa !2579
  %21 = load i64, i64* %_incr, align 8, !dbg !15722, !tbaa !2579
  %22 = load i64, i64* %maxsize.addr, align 8, !dbg !15722, !tbaa !2579
  %23 = load i64, i64* %i, align 8, !dbg !15722, !tbaa !2579
  %sub23 = sub i64 %22, %23, !dbg !15722
  %cmp24 = icmp uge i64 %21, %sub23, !dbg !15722
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !15719

if.then26:                                        ; preds = %cond.end21
  store i64 0, i64* %retval, align 8, !dbg !15722
  br label %return, !dbg !15722

if.end27:                                         ; preds = %cond.end21
  %24 = load i8*, i8** %p, align 8, !dbg !15724, !tbaa !2442
  %tobool28 = icmp ne i8* %24, null, !dbg !15724
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !15719

if.then29:                                        ; preds = %if.end27
  %25 = load i32, i32* %digits, align 4, !dbg !15726, !tbaa !2436
  %cmp30 = icmp eq i32 %25, 0, !dbg !15726
  br i1 %cmp30, label %land.lhs.true, label %if.end45, !dbg !15726

land.lhs.true:                                    ; preds = %if.then29
  %26 = load i64, i64* %_n, align 8, !dbg !15726, !tbaa !2579
  %27 = load i64, i64* %_w, align 8, !dbg !15726, !tbaa !2579
  %cmp32 = icmp ult i64 %26, %27, !dbg !15726
  br i1 %cmp32, label %if.then34, label %if.end45, !dbg !15729

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %_delta, metadata !15730, metadata !DIExpression()), !dbg !15732
  %28 = load i32, i32* %width.addr, align 4, !dbg !15732, !tbaa !2436
  %conv35 = sext i32 %28 to i64, !dbg !15732
  %29 = load i64, i64* %_n, align 8, !dbg !15732, !tbaa !2579
  %sub36 = sub i64 %conv35, %29, !dbg !15732
  store i64 %sub36, i64* %_delta, align 8, !dbg !15732, !tbaa !2579
  %30 = load i32, i32* %pad, align 4, !dbg !15733, !tbaa !2436
  %cmp37 = icmp eq i32 %30, 48, !dbg !15733
  br i1 %cmp37, label %if.then41, label %lor.lhs.false, !dbg !15733

lor.lhs.false:                                    ; preds = %if.then34
  %31 = load i32, i32* %pad, align 4, !dbg !15733, !tbaa !2436
  %cmp39 = icmp eq i32 %31, 43, !dbg !15733
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !15732

if.then41:                                        ; preds = %lor.lhs.false, %if.then34
  %32 = load i8*, i8** %p, align 8, !dbg !15733, !tbaa !2442
  %33 = load i64, i64* %_delta, align 8, !dbg !15733, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 48, i64 %33, i1 false), !dbg !15733
  %34 = load i64, i64* %_delta, align 8, !dbg !15733, !tbaa !2579
  %35 = load i8*, i8** %p, align 8, !dbg !15733, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !15733
  store i8* %add.ptr, i8** %p, align 8, !dbg !15733, !tbaa !2442
  br label %if.end44, !dbg !15733

if.else42:                                        ; preds = %lor.lhs.false
  %36 = load i8*, i8** %p, align 8, !dbg !15733, !tbaa !2442
  %37 = load i64, i64* %_delta, align 8, !dbg !15733, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 32, i64 %37, i1 false), !dbg !15733
  %38 = load i64, i64* %_delta, align 8, !dbg !15733, !tbaa !2579
  %39 = load i8*, i8** %p, align 8, !dbg !15733, !tbaa !2442
  %add.ptr43 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !15733
  store i8* %add.ptr43, i8** %p, align 8, !dbg !15733, !tbaa !2442
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  br label %if.end45, !dbg !15732

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.then29
  %40 = load i8*, i8** %f, align 8, !dbg !15729, !tbaa !2442
  %41 = load i8, i8* %40, align 1, !dbg !15729, !tbaa !2497, !ctir !147
  %42 = load i8*, i8** %p, align 8, !dbg !15729, !tbaa !2442
  store i8 %41, i8* %42, align 1, !dbg !15729, !tbaa !2497, !ctir !144
  %43 = load i64, i64* %_n, align 8, !dbg !15729, !tbaa !2579
  %44 = load i8*, i8** %p, align 8, !dbg !15729, !tbaa !2442
  %add.ptr46 = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !15729
  store i8* %add.ptr46, i8** %p, align 8, !dbg !15729, !tbaa !2442
  br label %if.end47, !dbg !15729

if.end47:                                         ; preds = %if.end45, %if.end27
  %45 = load i64, i64* %_incr, align 8, !dbg !15719, !tbaa !2579
  %46 = load i64, i64* %i, align 8, !dbg !15719, !tbaa !2579
  %add = add i64 %46, %45, !dbg !15719
  store i64 %add, i64* %i, align 8, !dbg !15719, !tbaa !2579
  br label %do.end, !dbg !15719

do.end:                                           ; preds = %if.end47
  br label %for.inc1436, !dbg !15735

if.end48:                                         ; preds = %for.body
  br label %while.body, !dbg !15736

while.body:                                       ; preds = %if.end48, %sw.bb, %sw.bb51, %sw.bb52
  %47 = load i8*, i8** %f, align 8, !dbg !15737, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1, !dbg !15737
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !15737, !tbaa !2442
  %48 = load i8, i8* %incdec.ptr, align 1, !dbg !15739, !tbaa !2497, !ctir !147
  %conv49 = sext i8 %48 to i32, !dbg !15739
  switch i32 %conv49, label %sw.default [
    i32 95, label %sw.bb
    i32 45, label %sw.bb
    i32 43, label %sw.bb
    i32 48, label %sw.bb
    i32 94, label %sw.bb51
    i32 35, label %sw.bb52
  ], !dbg !15740

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body
  %49 = load i8*, i8** %f, align 8, !dbg !15741, !tbaa !2442
  %50 = load i8, i8* %49, align 1, !dbg !15743, !tbaa !2497, !ctir !147
  %conv50 = sext i8 %50 to i32, !dbg !15743
  store i32 %conv50, i32* %pad, align 4, !dbg !15744, !tbaa !2436
  br label %while.body, !dbg !15745, !llvm.loop !15746

sw.bb51:                                          ; preds = %while.body
  store i8 1, i8* %to_uppcase, align 1, !dbg !15748, !tbaa !2461
  br label %while.body, !dbg !15749, !llvm.loop !15746

sw.bb52:                                          ; preds = %while.body
  store i8 1, i8* %change_case, align 1, !dbg !15750, !tbaa !2461
  br label %while.body, !dbg !15751, !llvm.loop !15746

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !15752

sw.epilog:                                        ; preds = %sw.default
  br label %while.end, !dbg !15753

while.end:                                        ; preds = %sw.epilog
  %51 = load i8*, i8** %f, align 8, !dbg !15754, !tbaa !2442
  %52 = load i8, i8* %51, align 1, !dbg !15754, !tbaa !2497, !ctir !147
  %conv53 = sext i8 %52 to i32, !dbg !15754
  %sub54 = sub i32 %conv53, 48, !dbg !15754
  %cmp55 = icmp ule i32 %sub54, 9, !dbg !15754
  br i1 %cmp55, label %if.then57, label %if.end81, !dbg !15756

if.then57:                                        ; preds = %while.end
  store i32 0, i32* %width.addr, align 4, !dbg !15757, !tbaa !2436
  br label %do.body58, !dbg !15759

do.body58:                                        ; preds = %do.cond, %if.then57
  %53 = load i32, i32* %width.addr, align 4, !dbg !15760, !tbaa !2436
  %cmp59 = icmp sgt i32 %53, 214748364, !dbg !15763
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !15764

lor.lhs.false61:                                  ; preds = %do.body58
  %54 = load i32, i32* %width.addr, align 4, !dbg !15765, !tbaa !2436
  %cmp62 = icmp eq i32 %54, 214748364, !dbg !15766
  br i1 %cmp62, label %land.lhs.true64, label %if.else70, !dbg !15767

land.lhs.true64:                                  ; preds = %lor.lhs.false61
  %55 = load i8*, i8** %f, align 8, !dbg !15768, !tbaa !2442
  %56 = load i8, i8* %55, align 1, !dbg !15769, !tbaa !2497, !ctir !147
  %conv65 = sext i8 %56 to i32, !dbg !15769
  %sub66 = sub nsw i32 %conv65, 48, !dbg !15770
  %cmp67 = icmp sgt i32 %sub66, 7, !dbg !15771
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !15772

if.then69:                                        ; preds = %land.lhs.true64, %do.body58
  store i32 2147483647, i32* %width.addr, align 4, !dbg !15773, !tbaa !2436
  br label %if.end74, !dbg !15774

if.else70:                                        ; preds = %land.lhs.true64, %lor.lhs.false61
  %57 = load i32, i32* %width.addr, align 4, !dbg !15775, !tbaa !2436
  %mul = mul nsw i32 %57, 10, !dbg !15775
  store i32 %mul, i32* %width.addr, align 4, !dbg !15775, !tbaa !2436
  %58 = load i8*, i8** %f, align 8, !dbg !15777, !tbaa !2442
  %59 = load i8, i8* %58, align 1, !dbg !15778, !tbaa !2497, !ctir !147
  %conv71 = sext i8 %59 to i32, !dbg !15778
  %sub72 = sub nsw i32 %conv71, 48, !dbg !15779
  %60 = load i32, i32* %width.addr, align 4, !dbg !15780, !tbaa !2436
  %add73 = add nsw i32 %60, %sub72, !dbg !15780
  store i32 %add73, i32* %width.addr, align 4, !dbg !15780, !tbaa !2436
  br label %if.end74

if.end74:                                         ; preds = %if.else70, %if.then69
  %61 = load i8*, i8** %f, align 8, !dbg !15781, !tbaa !2442
  %incdec.ptr75 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !15781
  store i8* %incdec.ptr75, i8** %f, align 8, !dbg !15781, !tbaa !2442
  br label %do.cond, !dbg !15782

do.cond:                                          ; preds = %if.end74
  %62 = load i8*, i8** %f, align 8, !dbg !15783, !tbaa !2442
  %63 = load i8, i8* %62, align 1, !dbg !15783, !tbaa !2497, !ctir !147
  %conv76 = sext i8 %63 to i32, !dbg !15783
  %sub77 = sub i32 %conv76, 48, !dbg !15783
  %cmp78 = icmp ule i32 %sub77, 9, !dbg !15783
  br i1 %cmp78, label %do.body58, label %do.end80, !dbg !15782, !llvm.loop !15784

do.end80:                                         ; preds = %do.cond
  br label %if.end81, !dbg !15786

if.end81:                                         ; preds = %do.end80, %while.end
  %64 = load i8*, i8** %f, align 8, !dbg !15787, !tbaa !2442
  %65 = load i8, i8* %64, align 1, !dbg !15788, !tbaa !2497, !ctir !147
  %conv82 = sext i8 %65 to i32, !dbg !15788
  switch i32 %conv82, label %sw.default86 [
    i32 69, label %sw.bb83
    i32 79, label %sw.bb83
  ], !dbg !15789

sw.bb83:                                          ; preds = %if.end81, %if.end81
  %66 = load i8*, i8** %f, align 8, !dbg !15790, !tbaa !2442
  %incdec.ptr84 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !15790
  store i8* %incdec.ptr84, i8** %f, align 8, !dbg !15790, !tbaa !2442
  %67 = load i8, i8* %66, align 1, !dbg !15792, !tbaa !2497, !ctir !147
  %conv85 = sext i8 %67 to i32, !dbg !15792
  store i32 %conv85, i32* %modifier, align 4, !dbg !15793, !tbaa !2436
  br label %sw.epilog87, !dbg !15794

sw.default86:                                     ; preds = %if.end81
  store i32 0, i32* %modifier, align 4, !dbg !15795, !tbaa !2436
  br label %sw.epilog87, !dbg !15796

sw.epilog87:                                      ; preds = %sw.default86, %sw.bb83
  %68 = load i8*, i8** %f, align 8, !dbg !15797, !tbaa !2442
  %69 = load i8, i8* %68, align 1, !dbg !15798, !tbaa !2497, !ctir !147
  %conv88 = sext i8 %69 to i32, !dbg !15798
  store i32 %conv88, i32* %format_char, align 4, !dbg !15799, !tbaa !2436
  %70 = load i32, i32* %format_char, align 4, !dbg !15800, !tbaa !2436
  switch i32 %70, label %sw.default1355 [
    i32 37, label %sw.bb89
    i32 97, label %sw.bb143
    i32 65, label %sw.bb151
    i32 98, label %sw.bb159
    i32 104, label %sw.bb159
    i32 66, label %sw.bb167
    i32 99, label %sw.bb175
    i32 67, label %sw.bb317
    i32 120, label %sw.bb336
    i32 68, label %sw.bb341
    i32 100, label %sw.bb346
    i32 101, label %sw.bb354
    i32 70, label %sw.bb761
    i32 72, label %sw.bb779
    i32 73, label %sw.bb788
    i32 107, label %sw.bb796
    i32 108, label %sw.bb805
    i32 106, label %sw.bb813
    i32 77, label %sw.bb826
    i32 109, label %sw.bb834
    i32 78, label %sw.bb847
    i32 110, label %sw.bb865
    i32 80, label %sw.bb915
    i32 112, label %sw.bb916
    i32 113, label %sw.bb920
    i32 82, label %sw.bb928
    i32 114, label %sw.bb929
    i32 83, label %sw.bb930
    i32 115, label %sw.bb938
    i32 88, label %sw.bb963
    i32 84, label %sw.bb968
    i32 116, label %sw.bb969
    i32 117, label %sw.bb1019
    i32 85, label %sw.bb1027
    i32 86, label %sw.bb1040
    i32 103, label %sw.bb1040
    i32 71, label %sw.bb1040
    i32 87, label %sw.bb1149
    i32 119, label %sw.bb1165
    i32 89, label %sw.bb1174
    i32 121, label %sw.bb1192
    i32 90, label %sw.bb1216
    i32 58, label %sw.bb1280
    i32 122, label %sw.bb1296
    i32 0, label %sw.bb1353
  ], !dbg !15801

sw.bb89:                                          ; preds = %sw.epilog87
  %71 = load i32, i32* %modifier, align 4, !dbg !15802, !tbaa !2436
  %cmp90 = icmp ne i32 %71, 0, !dbg !15805
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !15806

if.then92:                                        ; preds = %sw.bb89
  br label %bad_format, !dbg !15807

if.end93:                                         ; preds = %sw.bb89
  br label %do.body94, !dbg !15808

do.body94:                                        ; preds = %if.end93
  call void @llvm.dbg.declare(metadata i64* %_n95, metadata !15809, metadata !DIExpression()), !dbg !15811
  store i64 1, i64* %_n95, align 8, !dbg !15811, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w96, metadata !15812, metadata !DIExpression()), !dbg !15811
  %72 = load i32, i32* %width.addr, align 4, !dbg !15811, !tbaa !2436
  %cmp97 = icmp slt i32 %72, 0, !dbg !15811
  br i1 %cmp97, label %cond.true99, label %cond.false100, !dbg !15811

cond.true99:                                      ; preds = %do.body94
  br label %cond.end101, !dbg !15811

cond.false100:                                    ; preds = %do.body94
  %73 = load i32, i32* %width.addr, align 4, !dbg !15811, !tbaa !2436
  br label %cond.end101, !dbg !15811

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond102 = phi i32 [ 0, %cond.true99 ], [ %73, %cond.false100 ], !dbg !15811
  %conv103 = sext i32 %cond102 to i64, !dbg !15811
  store i64 %conv103, i64* %_w96, align 8, !dbg !15811, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr104, metadata !15813, metadata !DIExpression()), !dbg !15811
  %74 = load i64, i64* %_n95, align 8, !dbg !15811, !tbaa !2579
  %75 = load i64, i64* %_w96, align 8, !dbg !15811, !tbaa !2579
  %cmp105 = icmp ult i64 %74, %75, !dbg !15811
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !15811

cond.true107:                                     ; preds = %cond.end101
  %76 = load i64, i64* %_w96, align 8, !dbg !15811, !tbaa !2579
  br label %cond.end109, !dbg !15811

cond.false108:                                    ; preds = %cond.end101
  %77 = load i64, i64* %_n95, align 8, !dbg !15811, !tbaa !2579
  br label %cond.end109, !dbg !15811

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i64 [ %76, %cond.true107 ], [ %77, %cond.false108 ], !dbg !15811
  store i64 %cond110, i64* %_incr104, align 8, !dbg !15811, !tbaa !2579
  %78 = load i64, i64* %_incr104, align 8, !dbg !15814, !tbaa !2579
  %79 = load i64, i64* %maxsize.addr, align 8, !dbg !15814, !tbaa !2579
  %80 = load i64, i64* %i, align 8, !dbg !15814, !tbaa !2579
  %sub111 = sub i64 %79, %80, !dbg !15814
  %cmp112 = icmp uge i64 %78, %sub111, !dbg !15814
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !15811

if.then114:                                       ; preds = %cond.end109
  store i64 0, i64* %retval, align 8, !dbg !15814
  br label %return, !dbg !15814

if.end115:                                        ; preds = %cond.end109
  %81 = load i8*, i8** %p, align 8, !dbg !15816, !tbaa !2442
  %tobool116 = icmp ne i8* %81, null, !dbg !15816
  br i1 %tobool116, label %if.then117, label %if.end139, !dbg !15811

if.then117:                                       ; preds = %if.end115
  %82 = load i32, i32* %digits, align 4, !dbg !15818, !tbaa !2436
  %cmp118 = icmp eq i32 %82, 0, !dbg !15818
  br i1 %cmp118, label %land.lhs.true120, label %if.end137, !dbg !15818

land.lhs.true120:                                 ; preds = %if.then117
  %83 = load i64, i64* %_n95, align 8, !dbg !15818, !tbaa !2579
  %84 = load i64, i64* %_w96, align 8, !dbg !15818, !tbaa !2579
  %cmp121 = icmp ult i64 %83, %84, !dbg !15818
  br i1 %cmp121, label %if.then123, label %if.end137, !dbg !15821

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i64* %_delta124, metadata !15822, metadata !DIExpression()), !dbg !15824
  %85 = load i32, i32* %width.addr, align 4, !dbg !15824, !tbaa !2436
  %conv125 = sext i32 %85 to i64, !dbg !15824
  %86 = load i64, i64* %_n95, align 8, !dbg !15824, !tbaa !2579
  %sub126 = sub i64 %conv125, %86, !dbg !15824
  store i64 %sub126, i64* %_delta124, align 8, !dbg !15824, !tbaa !2579
  %87 = load i32, i32* %pad, align 4, !dbg !15825, !tbaa !2436
  %cmp127 = icmp eq i32 %87, 48, !dbg !15825
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129, !dbg !15825

lor.lhs.false129:                                 ; preds = %if.then123
  %88 = load i32, i32* %pad, align 4, !dbg !15825, !tbaa !2436
  %cmp130 = icmp eq i32 %88, 43, !dbg !15825
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !15824

if.then132:                                       ; preds = %lor.lhs.false129, %if.then123
  %89 = load i8*, i8** %p, align 8, !dbg !15825, !tbaa !2442
  %90 = load i64, i64* %_delta124, align 8, !dbg !15825, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 48, i64 %90, i1 false), !dbg !15825
  %91 = load i64, i64* %_delta124, align 8, !dbg !15825, !tbaa !2579
  %92 = load i8*, i8** %p, align 8, !dbg !15825, !tbaa !2442
  %add.ptr133 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !15825
  store i8* %add.ptr133, i8** %p, align 8, !dbg !15825, !tbaa !2442
  br label %if.end136, !dbg !15825

if.else134:                                       ; preds = %lor.lhs.false129
  %93 = load i8*, i8** %p, align 8, !dbg !15825, !tbaa !2442
  %94 = load i64, i64* %_delta124, align 8, !dbg !15825, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 32, i64 %94, i1 false), !dbg !15825
  %95 = load i64, i64* %_delta124, align 8, !dbg !15825, !tbaa !2579
  %96 = load i8*, i8** %p, align 8, !dbg !15825, !tbaa !2442
  %add.ptr135 = getelementptr inbounds i8, i8* %96, i64 %95, !dbg !15825
  store i8* %add.ptr135, i8** %p, align 8, !dbg !15825, !tbaa !2442
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137, !dbg !15824

if.end137:                                        ; preds = %if.end136, %land.lhs.true120, %if.then117
  %97 = load i8*, i8** %f, align 8, !dbg !15821, !tbaa !2442
  %98 = load i8, i8* %97, align 1, !dbg !15821, !tbaa !2497, !ctir !147
  %99 = load i8*, i8** %p, align 8, !dbg !15821, !tbaa !2442
  store i8 %98, i8* %99, align 1, !dbg !15821, !tbaa !2497, !ctir !144
  %100 = load i64, i64* %_n95, align 8, !dbg !15821, !tbaa !2579
  %101 = load i8*, i8** %p, align 8, !dbg !15821, !tbaa !2442
  %add.ptr138 = getelementptr inbounds i8, i8* %101, i64 %100, !dbg !15821
  store i8* %add.ptr138, i8** %p, align 8, !dbg !15821, !tbaa !2442
  br label %if.end139, !dbg !15821

if.end139:                                        ; preds = %if.end137, %if.end115
  %102 = load i64, i64* %_incr104, align 8, !dbg !15811, !tbaa !2579
  %103 = load i64, i64* %i, align 8, !dbg !15811, !tbaa !2579
  %add140 = add i64 %103, %102, !dbg !15811
  store i64 %add140, i64* %i, align 8, !dbg !15811, !tbaa !2579
  br label %do.end142, !dbg !15811

do.end142:                                        ; preds = %if.end139
  br label %sw.epilog1435, !dbg !15827

sw.bb143:                                         ; preds = %sw.epilog87
  %104 = load i32, i32* %modifier, align 4, !dbg !15828, !tbaa !2436
  %cmp144 = icmp ne i32 %104, 0, !dbg !15830
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !15831

if.then146:                                       ; preds = %sw.bb143
  br label %bad_format, !dbg !15832

if.end147:                                        ; preds = %sw.bb143
  %105 = load i8, i8* %change_case, align 1, !dbg !15833, !tbaa !2461
  %tobool148 = trunc i8 %105 to i1, !dbg !15833
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !15835

if.then149:                                       ; preds = %if.end147
  store i8 1, i8* %to_uppcase, align 1, !dbg !15836, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15838, !tbaa !2461
  br label %if.end150, !dbg !15839

if.end150:                                        ; preds = %if.then149, %if.end147
  br label %underlying_strftime, !dbg !15840

sw.bb151:                                         ; preds = %sw.epilog87
  %106 = load i32, i32* %modifier, align 4, !dbg !15841, !tbaa !2436
  %cmp152 = icmp ne i32 %106, 0, !dbg !15843
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !15844

if.then154:                                       ; preds = %sw.bb151
  br label %bad_format, !dbg !15845

if.end155:                                        ; preds = %sw.bb151
  %107 = load i8, i8* %change_case, align 1, !dbg !15846, !tbaa !2461
  %tobool156 = trunc i8 %107 to i1, !dbg !15846
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !15848

if.then157:                                       ; preds = %if.end155
  store i8 1, i8* %to_uppcase, align 1, !dbg !15849, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15851, !tbaa !2461
  br label %if.end158, !dbg !15852

if.end158:                                        ; preds = %if.then157, %if.end155
  br label %underlying_strftime, !dbg !15853

sw.bb159:                                         ; preds = %sw.epilog87, %sw.epilog87
  %108 = load i8, i8* %change_case, align 1, !dbg !15854, !tbaa !2461
  %tobool160 = trunc i8 %108 to i1, !dbg !15854
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !15856

if.then161:                                       ; preds = %sw.bb159
  store i8 1, i8* %to_uppcase, align 1, !dbg !15857, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15859, !tbaa !2461
  br label %if.end162, !dbg !15860

if.end162:                                        ; preds = %if.then161, %sw.bb159
  %109 = load i32, i32* %modifier, align 4, !dbg !15861, !tbaa !2436
  %cmp163 = icmp eq i32 %109, 69, !dbg !15863
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !15864

if.then165:                                       ; preds = %if.end162
  br label %bad_format, !dbg !15865

if.end166:                                        ; preds = %if.end162
  br label %underlying_strftime, !dbg !15866

sw.bb167:                                         ; preds = %sw.epilog87
  %110 = load i32, i32* %modifier, align 4, !dbg !15867, !tbaa !2436
  %cmp168 = icmp eq i32 %110, 69, !dbg !15869
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !15870

if.then170:                                       ; preds = %sw.bb167
  br label %bad_format, !dbg !15871

if.end171:                                        ; preds = %sw.bb167
  %111 = load i8, i8* %change_case, align 1, !dbg !15872, !tbaa !2461
  %tobool172 = trunc i8 %111 to i1, !dbg !15872
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !15874

if.then173:                                       ; preds = %if.end171
  store i8 1, i8* %to_uppcase, align 1, !dbg !15875, !tbaa !2461
  store i8 0, i8* %to_lowcase, align 1, !dbg !15877, !tbaa !2461
  br label %if.end174, !dbg !15878

if.end174:                                        ; preds = %if.then173, %if.end171
  br label %underlying_strftime, !dbg !15879

sw.bb175:                                         ; preds = %sw.epilog87
  %112 = load i32, i32* %modifier, align 4, !dbg !15880, !tbaa !2436
  %cmp176 = icmp eq i32 %112, 79, !dbg !15882
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !15883

if.then178:                                       ; preds = %sw.bb175
  br label %bad_format, !dbg !15884

if.end179:                                        ; preds = %sw.bb175
  br label %underlying_strftime, !dbg !15885

subformat:                                        ; preds = %sw.bb968, %sw.bb928, %if.end345
  call void @llvm.dbg.label(metadata !15886), !dbg !15887
  store i32 -1, i32* %subwidth, align 4, !dbg !15888, !tbaa !2436
  br label %subformat_width, !dbg !15889

subformat_width:                                  ; preds = %if.end778, %subformat
  call void @llvm.dbg.label(metadata !15890), !dbg !15891
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15892, metadata !DIExpression()), !dbg !15894
  %113 = load i8*, i8** %subfmt, align 8, !dbg !15895, !tbaa !2442
  %114 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15896, !tbaa !2442
  %115 = load i8, i8* %to_uppcase, align 1, !dbg !15897, !tbaa !2461
  %tobool180 = trunc i8 %115 to i1, !dbg !15897
  %116 = load i32, i32* %pad, align 4, !dbg !15898, !tbaa !2436
  %117 = load i32, i32* %subwidth, align 4, !dbg !15899, !tbaa !2436
  %118 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15900, !tbaa !2442
  %119 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15901, !tbaa !2442
  %120 = load i32, i32* %ns.addr, align 4, !dbg !15901, !tbaa !2436
  %call = call i64 @__strftime_internal(i8* null, i64 -1, i8* %113, %struct.tm* %114, i1 zeroext %tobool180, i32 %116, i32 %117, i8* %118, %struct.tm_zone* %119, i32 %120), !dbg !15902
  store i64 %call, i64* %len, align 8, !dbg !15894, !tbaa !2579
  br label %do.body181, !dbg !15903

do.body181:                                       ; preds = %subformat_width
  call void @llvm.dbg.declare(metadata i64* %_n182, metadata !15904, metadata !DIExpression()), !dbg !15906
  %121 = load i64, i64* %len, align 8, !dbg !15906, !tbaa !2579
  store i64 %121, i64* %_n182, align 8, !dbg !15906, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w183, metadata !15907, metadata !DIExpression()), !dbg !15906
  %122 = load i32, i32* %width.addr, align 4, !dbg !15906, !tbaa !2436
  %cmp184 = icmp slt i32 %122, 0, !dbg !15906
  br i1 %cmp184, label %cond.true186, label %cond.false187, !dbg !15906

cond.true186:                                     ; preds = %do.body181
  br label %cond.end188, !dbg !15906

cond.false187:                                    ; preds = %do.body181
  %123 = load i32, i32* %width.addr, align 4, !dbg !15906, !tbaa !2436
  br label %cond.end188, !dbg !15906

cond.end188:                                      ; preds = %cond.false187, %cond.true186
  %cond189 = phi i32 [ 0, %cond.true186 ], [ %123, %cond.false187 ], !dbg !15906
  %conv190 = sext i32 %cond189 to i64, !dbg !15906
  store i64 %conv190, i64* %_w183, align 8, !dbg !15906, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr191, metadata !15908, metadata !DIExpression()), !dbg !15906
  %124 = load i64, i64* %_n182, align 8, !dbg !15906, !tbaa !2579
  %125 = load i64, i64* %_w183, align 8, !dbg !15906, !tbaa !2579
  %cmp192 = icmp ult i64 %124, %125, !dbg !15906
  br i1 %cmp192, label %cond.true194, label %cond.false195, !dbg !15906

cond.true194:                                     ; preds = %cond.end188
  %126 = load i64, i64* %_w183, align 8, !dbg !15906, !tbaa !2579
  br label %cond.end196, !dbg !15906

cond.false195:                                    ; preds = %cond.end188
  %127 = load i64, i64* %_n182, align 8, !dbg !15906, !tbaa !2579
  br label %cond.end196, !dbg !15906

cond.end196:                                      ; preds = %cond.false195, %cond.true194
  %cond197 = phi i64 [ %126, %cond.true194 ], [ %127, %cond.false195 ], !dbg !15906
  store i64 %cond197, i64* %_incr191, align 8, !dbg !15906, !tbaa !2579
  %128 = load i64, i64* %_incr191, align 8, !dbg !15909, !tbaa !2579
  %129 = load i64, i64* %maxsize.addr, align 8, !dbg !15909, !tbaa !2579
  %130 = load i64, i64* %i, align 8, !dbg !15909, !tbaa !2579
  %sub198 = sub i64 %129, %130, !dbg !15909
  %cmp199 = icmp uge i64 %128, %sub198, !dbg !15909
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !15906

if.then201:                                       ; preds = %cond.end196
  store i64 0, i64* %retval, align 8, !dbg !15909
  br label %return, !dbg !15909

if.end202:                                        ; preds = %cond.end196
  %131 = load i8*, i8** %p, align 8, !dbg !15911, !tbaa !2442
  %tobool203 = icmp ne i8* %131, null, !dbg !15911
  br i1 %tobool203, label %if.then204, label %if.end229, !dbg !15906

if.then204:                                       ; preds = %if.end202
  %132 = load i32, i32* %digits, align 4, !dbg !15913, !tbaa !2436
  %cmp205 = icmp eq i32 %132, 0, !dbg !15913
  br i1 %cmp205, label %land.lhs.true207, label %if.end224, !dbg !15913

land.lhs.true207:                                 ; preds = %if.then204
  %133 = load i64, i64* %_n182, align 8, !dbg !15913, !tbaa !2579
  %134 = load i64, i64* %_w183, align 8, !dbg !15913, !tbaa !2579
  %cmp208 = icmp ult i64 %133, %134, !dbg !15913
  br i1 %cmp208, label %if.then210, label %if.end224, !dbg !15916

if.then210:                                       ; preds = %land.lhs.true207
  call void @llvm.dbg.declare(metadata i64* %_delta211, metadata !15917, metadata !DIExpression()), !dbg !15919
  %135 = load i32, i32* %width.addr, align 4, !dbg !15919, !tbaa !2436
  %conv212 = sext i32 %135 to i64, !dbg !15919
  %136 = load i64, i64* %_n182, align 8, !dbg !15919, !tbaa !2579
  %sub213 = sub i64 %conv212, %136, !dbg !15919
  store i64 %sub213, i64* %_delta211, align 8, !dbg !15919, !tbaa !2579
  %137 = load i32, i32* %pad, align 4, !dbg !15920, !tbaa !2436
  %cmp214 = icmp eq i32 %137, 48, !dbg !15920
  br i1 %cmp214, label %if.then219, label %lor.lhs.false216, !dbg !15920

lor.lhs.false216:                                 ; preds = %if.then210
  %138 = load i32, i32* %pad, align 4, !dbg !15920, !tbaa !2436
  %cmp217 = icmp eq i32 %138, 43, !dbg !15920
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !15919

if.then219:                                       ; preds = %lor.lhs.false216, %if.then210
  %139 = load i8*, i8** %p, align 8, !dbg !15920, !tbaa !2442
  %140 = load i64, i64* %_delta211, align 8, !dbg !15920, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %139, i8 48, i64 %140, i1 false), !dbg !15920
  %141 = load i64, i64* %_delta211, align 8, !dbg !15920, !tbaa !2579
  %142 = load i8*, i8** %p, align 8, !dbg !15920, !tbaa !2442
  %add.ptr220 = getelementptr inbounds i8, i8* %142, i64 %141, !dbg !15920
  store i8* %add.ptr220, i8** %p, align 8, !dbg !15920, !tbaa !2442
  br label %if.end223, !dbg !15920

if.else221:                                       ; preds = %lor.lhs.false216
  %143 = load i8*, i8** %p, align 8, !dbg !15920, !tbaa !2442
  %144 = load i64, i64* %_delta211, align 8, !dbg !15920, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 32, i64 %144, i1 false), !dbg !15920
  %145 = load i64, i64* %_delta211, align 8, !dbg !15920, !tbaa !2579
  %146 = load i8*, i8** %p, align 8, !dbg !15920, !tbaa !2442
  %add.ptr222 = getelementptr inbounds i8, i8* %146, i64 %145, !dbg !15920
  store i8* %add.ptr222, i8** %p, align 8, !dbg !15920, !tbaa !2442
  br label %if.end223

if.end223:                                        ; preds = %if.else221, %if.then219
  br label %if.end224, !dbg !15919

if.end224:                                        ; preds = %if.end223, %land.lhs.true207, %if.then204
  %147 = load i8*, i8** %p, align 8, !dbg !15916, !tbaa !2442
  %148 = load i64, i64* %maxsize.addr, align 8, !dbg !15916, !tbaa !2579
  %149 = load i64, i64* %i, align 8, !dbg !15916, !tbaa !2579
  %sub225 = sub i64 %148, %149, !dbg !15916
  %150 = load i8*, i8** %subfmt, align 8, !dbg !15916, !tbaa !2442
  %151 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15916, !tbaa !2442
  %152 = load i8, i8* %to_uppcase, align 1, !dbg !15916, !tbaa !2461
  %tobool226 = trunc i8 %152 to i1, !dbg !15916
  %153 = load i32, i32* %pad, align 4, !dbg !15916, !tbaa !2436
  %154 = load i32, i32* %subwidth, align 4, !dbg !15916, !tbaa !2436
  %155 = load i8*, i8** %tzset_called.addr, align 8, !dbg !15916, !tbaa !2442
  %156 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !15916, !tbaa !2442
  %157 = load i32, i32* %ns.addr, align 4, !dbg !15916, !tbaa !2436
  %call227 = call i64 @__strftime_internal(i8* %147, i64 %sub225, i8* %150, %struct.tm* %151, i1 zeroext %tobool226, i32 %153, i32 %154, i8* %155, %struct.tm_zone* %156, i32 %157), !dbg !15916
  %158 = load i64, i64* %_n182, align 8, !dbg !15916, !tbaa !2579
  %159 = load i8*, i8** %p, align 8, !dbg !15916, !tbaa !2442
  %add.ptr228 = getelementptr inbounds i8, i8* %159, i64 %158, !dbg !15916
  store i8* %add.ptr228, i8** %p, align 8, !dbg !15916, !tbaa !2442
  br label %if.end229, !dbg !15916

if.end229:                                        ; preds = %if.end224, %if.end202
  %160 = load i64, i64* %_incr191, align 8, !dbg !15906, !tbaa !2579
  %161 = load i64, i64* %i, align 8, !dbg !15906, !tbaa !2579
  %add230 = add i64 %161, %160, !dbg !15906
  store i64 %add230, i64* %i, align 8, !dbg !15906, !tbaa !2579
  br label %do.end232, !dbg !15906

do.end232:                                        ; preds = %if.end229
  br label %sw.epilog1435, !dbg !15922

underlying_strftime:                              ; preds = %if.then1195, %if.then1177, %if.end967, %sw.bb929, %if.end919, %if.then391, %if.end340, %if.then320, %if.end179, %if.end174, %if.end166, %if.end158, %if.end150
  call void @llvm.dbg.label(metadata !15923), !dbg !15924
  call void @llvm.dbg.declare(metadata [5 x i8]* %ufmt, metadata !15925, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.declare(metadata i8** %u, metadata !15928, metadata !DIExpression()), !dbg !15929
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15930
  store i8* %arraydecay, i8** %u, align 8, !dbg !15929, !tbaa !2442
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ubuf, metadata !15931, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.declare(metadata i64* %len233, metadata !15933, metadata !DIExpression()), !dbg !15934
  %162 = load i8*, i8** %u, align 8, !dbg !15935, !tbaa !2442
  %incdec.ptr234 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !15935
  store i8* %incdec.ptr234, i8** %u, align 8, !dbg !15935, !tbaa !2442
  store i8 32, i8* %162, align 1, !dbg !15936, !tbaa !2497, !ctir !144
  %163 = load i8*, i8** %u, align 8, !dbg !15937, !tbaa !2442
  %incdec.ptr235 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !15937
  store i8* %incdec.ptr235, i8** %u, align 8, !dbg !15937, !tbaa !2442
  store i8 37, i8* %163, align 1, !dbg !15938, !tbaa !2497, !ctir !144
  %164 = load i32, i32* %modifier, align 4, !dbg !15939, !tbaa !2436
  %cmp236 = icmp ne i32 %164, 0, !dbg !15941
  br i1 %cmp236, label %if.then238, label %if.end241, !dbg !15942

if.then238:                                       ; preds = %underlying_strftime
  %165 = load i32, i32* %modifier, align 4, !dbg !15943, !tbaa !2436
  %conv239 = trunc i32 %165 to i8, !dbg !15943
  %166 = load i8*, i8** %u, align 8, !dbg !15944, !tbaa !2442
  %incdec.ptr240 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !15944
  store i8* %incdec.ptr240, i8** %u, align 8, !dbg !15944, !tbaa !2442
  store i8 %conv239, i8* %166, align 1, !dbg !15945, !tbaa !2497, !ctir !144
  br label %if.end241, !dbg !15946

if.end241:                                        ; preds = %if.then238, %underlying_strftime
  %167 = load i32, i32* %format_char, align 4, !dbg !15947, !tbaa !2436
  %conv242 = trunc i32 %167 to i8, !dbg !15947
  %168 = load i8*, i8** %u, align 8, !dbg !15948, !tbaa !2442
  %incdec.ptr243 = getelementptr inbounds i8, i8* %168, i32 1, !dbg !15948
  store i8* %incdec.ptr243, i8** %u, align 8, !dbg !15948, !tbaa !2442
  store i8 %conv242, i8* %168, align 1, !dbg !15949, !tbaa !2497, !ctir !144
  %169 = load i8*, i8** %u, align 8, !dbg !15950, !tbaa !2442
  store i8 0, i8* %169, align 1, !dbg !15951, !tbaa !2497, !ctir !144
  %arraydecay244 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15952
  %arraydecay245 = getelementptr inbounds [5 x i8], [5 x i8]* %ufmt, i64 0, i64 0, !dbg !15953
  %170 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15954, !tbaa !2442
  %call246 = call i64 @strftime(i8* %arraydecay244, i64 1024, i8* %arraydecay245, %struct.tm* %170) #13, !dbg !15955
  store i64 %call246, i64* %len233, align 8, !dbg !15956, !tbaa !2579
  %171 = load i64, i64* %len233, align 8, !dbg !15957, !tbaa !2579
  %cmp247 = icmp ne i64 %171, 0, !dbg !15959
  br i1 %cmp247, label %if.then249, label %if.end316, !dbg !15960

if.then249:                                       ; preds = %if.end241
  br label %do.body250, !dbg !15961

do.body250:                                       ; preds = %if.then249
  call void @llvm.dbg.declare(metadata i64* %_n251, metadata !15962, metadata !DIExpression()), !dbg !15964
  %172 = load i64, i64* %len233, align 8, !dbg !15964, !tbaa !2579
  %sub252 = sub i64 %172, 1, !dbg !15964
  store i64 %sub252, i64* %_n251, align 8, !dbg !15964, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w253, metadata !15965, metadata !DIExpression()), !dbg !15964
  %173 = load i32, i32* %width.addr, align 4, !dbg !15964, !tbaa !2436
  %cmp254 = icmp slt i32 %173, 0, !dbg !15964
  br i1 %cmp254, label %cond.true256, label %cond.false257, !dbg !15964

cond.true256:                                     ; preds = %do.body250
  br label %cond.end258, !dbg !15964

cond.false257:                                    ; preds = %do.body250
  %174 = load i32, i32* %width.addr, align 4, !dbg !15964, !tbaa !2436
  br label %cond.end258, !dbg !15964

cond.end258:                                      ; preds = %cond.false257, %cond.true256
  %cond259 = phi i32 [ 0, %cond.true256 ], [ %174, %cond.false257 ], !dbg !15964
  %conv260 = sext i32 %cond259 to i64, !dbg !15964
  store i64 %conv260, i64* %_w253, align 8, !dbg !15964, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr261, metadata !15966, metadata !DIExpression()), !dbg !15964
  %175 = load i64, i64* %_n251, align 8, !dbg !15964, !tbaa !2579
  %176 = load i64, i64* %_w253, align 8, !dbg !15964, !tbaa !2579
  %cmp262 = icmp ult i64 %175, %176, !dbg !15964
  br i1 %cmp262, label %cond.true264, label %cond.false265, !dbg !15964

cond.true264:                                     ; preds = %cond.end258
  %177 = load i64, i64* %_w253, align 8, !dbg !15964, !tbaa !2579
  br label %cond.end266, !dbg !15964

cond.false265:                                    ; preds = %cond.end258
  %178 = load i64, i64* %_n251, align 8, !dbg !15964, !tbaa !2579
  br label %cond.end266, !dbg !15964

cond.end266:                                      ; preds = %cond.false265, %cond.true264
  %cond267 = phi i64 [ %177, %cond.true264 ], [ %178, %cond.false265 ], !dbg !15964
  store i64 %cond267, i64* %_incr261, align 8, !dbg !15964, !tbaa !2579
  %179 = load i64, i64* %_incr261, align 8, !dbg !15967, !tbaa !2579
  %180 = load i64, i64* %maxsize.addr, align 8, !dbg !15967, !tbaa !2579
  %181 = load i64, i64* %i, align 8, !dbg !15967, !tbaa !2579
  %sub268 = sub i64 %180, %181, !dbg !15967
  %cmp269 = icmp uge i64 %179, %sub268, !dbg !15967
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !15964

if.then271:                                       ; preds = %cond.end266
  store i64 0, i64* %retval, align 8, !dbg !15967
  br label %return, !dbg !15967

if.end272:                                        ; preds = %cond.end266
  %182 = load i8*, i8** %p, align 8, !dbg !15969, !tbaa !2442
  %tobool273 = icmp ne i8* %182, null, !dbg !15969
  br i1 %tobool273, label %if.then274, label %if.end312, !dbg !15964

if.then274:                                       ; preds = %if.end272
  %183 = load i32, i32* %digits, align 4, !dbg !15971, !tbaa !2436
  %cmp275 = icmp eq i32 %183, 0, !dbg !15971
  br i1 %cmp275, label %land.lhs.true277, label %if.end294, !dbg !15971

land.lhs.true277:                                 ; preds = %if.then274
  %184 = load i64, i64* %_n251, align 8, !dbg !15971, !tbaa !2579
  %185 = load i64, i64* %_w253, align 8, !dbg !15971, !tbaa !2579
  %cmp278 = icmp ult i64 %184, %185, !dbg !15971
  br i1 %cmp278, label %if.then280, label %if.end294, !dbg !15974

if.then280:                                       ; preds = %land.lhs.true277
  call void @llvm.dbg.declare(metadata i64* %_delta281, metadata !15975, metadata !DIExpression()), !dbg !15977
  %186 = load i32, i32* %width.addr, align 4, !dbg !15977, !tbaa !2436
  %conv282 = sext i32 %186 to i64, !dbg !15977
  %187 = load i64, i64* %_n251, align 8, !dbg !15977, !tbaa !2579
  %sub283 = sub i64 %conv282, %187, !dbg !15977
  store i64 %sub283, i64* %_delta281, align 8, !dbg !15977, !tbaa !2579
  %188 = load i32, i32* %pad, align 4, !dbg !15978, !tbaa !2436
  %cmp284 = icmp eq i32 %188, 48, !dbg !15978
  br i1 %cmp284, label %if.then289, label %lor.lhs.false286, !dbg !15978

lor.lhs.false286:                                 ; preds = %if.then280
  %189 = load i32, i32* %pad, align 4, !dbg !15978, !tbaa !2436
  %cmp287 = icmp eq i32 %189, 43, !dbg !15978
  br i1 %cmp287, label %if.then289, label %if.else291, !dbg !15977

if.then289:                                       ; preds = %lor.lhs.false286, %if.then280
  %190 = load i8*, i8** %p, align 8, !dbg !15978, !tbaa !2442
  %191 = load i64, i64* %_delta281, align 8, !dbg !15978, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %190, i8 48, i64 %191, i1 false), !dbg !15978
  %192 = load i64, i64* %_delta281, align 8, !dbg !15978, !tbaa !2579
  %193 = load i8*, i8** %p, align 8, !dbg !15978, !tbaa !2442
  %add.ptr290 = getelementptr inbounds i8, i8* %193, i64 %192, !dbg !15978
  store i8* %add.ptr290, i8** %p, align 8, !dbg !15978, !tbaa !2442
  br label %if.end293, !dbg !15978

if.else291:                                       ; preds = %lor.lhs.false286
  %194 = load i8*, i8** %p, align 8, !dbg !15978, !tbaa !2442
  %195 = load i64, i64* %_delta281, align 8, !dbg !15978, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %194, i8 32, i64 %195, i1 false), !dbg !15978
  %196 = load i64, i64* %_delta281, align 8, !dbg !15978, !tbaa !2579
  %197 = load i8*, i8** %p, align 8, !dbg !15978, !tbaa !2442
  %add.ptr292 = getelementptr inbounds i8, i8* %197, i64 %196, !dbg !15978
  store i8* %add.ptr292, i8** %p, align 8, !dbg !15978, !tbaa !2442
  br label %if.end293

if.end293:                                        ; preds = %if.else291, %if.then289
  br label %if.end294, !dbg !15977

if.end294:                                        ; preds = %if.end293, %land.lhs.true277, %if.then274
  %198 = load i8, i8* %to_lowcase, align 1, !dbg !15980, !tbaa !2461
  %tobool295 = trunc i8 %198 to i1, !dbg !15980
  br i1 %tobool295, label %if.then296, label %if.else300, !dbg !15974

if.then296:                                       ; preds = %if.end294
  %199 = load i8*, i8** %p, align 8, !dbg !15980, !tbaa !2442
  %arraydecay297 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15980
  %add.ptr298 = getelementptr inbounds i8, i8* %arraydecay297, i64 1, !dbg !15980
  %200 = load i64, i64* %_n251, align 8, !dbg !15980, !tbaa !2579
  %call299 = call i8* @memcpy_lowcase(i8* %199, i8* %add.ptr298, i64 %200), !dbg !15980
  br label %if.end310, !dbg !15980

if.else300:                                       ; preds = %if.end294
  %201 = load i8, i8* %to_uppcase, align 1, !dbg !15982, !tbaa !2461
  %tobool301 = trunc i8 %201 to i1, !dbg !15982
  br i1 %tobool301, label %if.then302, label %if.else306, !dbg !15980

if.then302:                                       ; preds = %if.else300
  %202 = load i8*, i8** %p, align 8, !dbg !15982, !tbaa !2442
  %arraydecay303 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15982
  %add.ptr304 = getelementptr inbounds i8, i8* %arraydecay303, i64 1, !dbg !15982
  %203 = load i64, i64* %_n251, align 8, !dbg !15982, !tbaa !2579
  %call305 = call i8* @memcpy_uppcase(i8* %202, i8* %add.ptr304, i64 %203), !dbg !15982
  br label %if.end309, !dbg !15982

if.else306:                                       ; preds = %if.else300
  %204 = load i8*, i8** %p, align 8, !dbg !15982, !tbaa !2442
  %arraydecay307 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ubuf, i64 0, i64 0, !dbg !15982
  %add.ptr308 = getelementptr inbounds i8, i8* %arraydecay307, i64 1, !dbg !15982
  %205 = load i64, i64* %_n251, align 8, !dbg !15982, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %204, i8* align 1 %add.ptr308, i64 %205, i1 false), !dbg !15982
  br label %if.end309

if.end309:                                        ; preds = %if.else306, %if.then302
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then296
  %206 = load i64, i64* %_n251, align 8, !dbg !15974, !tbaa !2579
  %207 = load i8*, i8** %p, align 8, !dbg !15974, !tbaa !2442
  %add.ptr311 = getelementptr inbounds i8, i8* %207, i64 %206, !dbg !15974
  store i8* %add.ptr311, i8** %p, align 8, !dbg !15974, !tbaa !2442
  br label %if.end312, !dbg !15974

if.end312:                                        ; preds = %if.end310, %if.end272
  %208 = load i64, i64* %_incr261, align 8, !dbg !15964, !tbaa !2579
  %209 = load i64, i64* %i, align 8, !dbg !15964, !tbaa !2579
  %add313 = add i64 %209, %208, !dbg !15964
  store i64 %add313, i64* %i, align 8, !dbg !15964, !tbaa !2579
  br label %do.end315, !dbg !15964

do.end315:                                        ; preds = %if.end312
  br label %if.end316, !dbg !15964

if.end316:                                        ; preds = %do.end315, %if.end241
  br label %sw.epilog1435, !dbg !15984

sw.bb317:                                         ; preds = %sw.epilog87
  %210 = load i32, i32* %modifier, align 4, !dbg !15985, !tbaa !2436
  %cmp318 = icmp eq i32 %210, 69, !dbg !15987
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !15988

if.then320:                                       ; preds = %sw.bb317
  br label %underlying_strftime, !dbg !15989

if.end321:                                        ; preds = %sw.bb317
  call void @llvm.dbg.declare(metadata i32* %century, metadata !15991, metadata !DIExpression()), !dbg !15993
  %211 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15994, !tbaa !2442
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %211, i32 0, i32 5, !dbg !15995, !ctir !1919
  %212 = load i32, i32* %tm_year, align 4, !dbg !15995, !tbaa !15996, !ctir !27
  %div = sdiv i32 %212, 100, !dbg !15997
  %add322 = add nsw i32 %div, 19, !dbg !15998
  store i32 %add322, i32* %century, align 4, !dbg !15993, !tbaa !2436
  %213 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !15999, !tbaa !2442
  %tm_year323 = getelementptr inbounds %struct.tm, %struct.tm* %213, i32 0, i32 5, !dbg !16000, !ctir !1919
  %214 = load i32, i32* %tm_year323, align 4, !dbg !16000, !tbaa !15996, !ctir !27
  %rem = srem i32 %214, 100, !dbg !16001
  %cmp324 = icmp slt i32 %rem, 0, !dbg !16002
  br i1 %cmp324, label %land.rhs, label %land.end, !dbg !16003

land.rhs:                                         ; preds = %if.end321
  %215 = load i32, i32* %century, align 4, !dbg !16004, !tbaa !2436
  %cmp326 = icmp slt i32 0, %215, !dbg !16005
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end321
  %216 = phi i1 [ false, %if.end321 ], [ %cmp326, %land.rhs ], !dbg !16006
  %land.ext = zext i1 %216 to i32, !dbg !16003
  %217 = load i32, i32* %century, align 4, !dbg !16007, !tbaa !2436
  %sub328 = sub nsw i32 %217, %land.ext, !dbg !16007
  store i32 %sub328, i32* %century, align 4, !dbg !16007, !tbaa !2436
  br label %do.body329, !dbg !16008

do.body329:                                       ; preds = %land.end
  store i32 2, i32* %digits, align 4, !dbg !16009, !tbaa !2436
  %218 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16009, !tbaa !2442
  %tm_year330 = getelementptr inbounds %struct.tm, %struct.tm* %218, i32 0, i32 5, !dbg !16009, !ctir !1919
  %219 = load i32, i32* %tm_year330, align 4, !dbg !16009, !tbaa !15996, !ctir !27
  %cmp331 = icmp slt i32 %219, -1900, !dbg !16009
  %frombool333 = zext i1 %cmp331 to i8, !dbg !16009
  store i8 %frombool333, i8* %negative_number, align 1, !dbg !16009, !tbaa !2461
  %220 = load i32, i32* %century, align 4, !dbg !16009, !tbaa !2436
  store i32 %220, i32* %u_number_value, align 4, !dbg !16009, !tbaa !2436
  br label %do_yearish, !dbg !16009

do.end335:                                        ; No predecessors!
  br label %sw.bb336, !dbg !16011

sw.bb336:                                         ; preds = %sw.epilog87, %do.end335
  %221 = load i32, i32* %modifier, align 4, !dbg !16012, !tbaa !2436
  %cmp337 = icmp eq i32 %221, 79, !dbg !16014
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !16015

if.then339:                                       ; preds = %sw.bb336
  br label %bad_format, !dbg !16016

if.end340:                                        ; preds = %sw.bb336
  br label %underlying_strftime, !dbg !16017

sw.bb341:                                         ; preds = %sw.epilog87
  %222 = load i32, i32* %modifier, align 4, !dbg !16018, !tbaa !2436
  %cmp342 = icmp ne i32 %222, 0, !dbg !16020
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !16021

if.then344:                                       ; preds = %sw.bb341
  br label %bad_format, !dbg !16022

if.end345:                                        ; preds = %sw.bb341
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.362, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16023, !tbaa !2442
  br label %subformat, !dbg !16024

sw.bb346:                                         ; preds = %sw.epilog87
  %223 = load i32, i32* %modifier, align 4, !dbg !16025, !tbaa !2436
  %cmp347 = icmp eq i32 %223, 69, !dbg !16027
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !16028

if.then349:                                       ; preds = %sw.bb346
  br label %bad_format, !dbg !16029

if.end350:                                        ; preds = %sw.bb346
  br label %do.body351, !dbg !16030

do.body351:                                       ; preds = %if.end350
  store i32 2, i32* %digits, align 4, !dbg !16031, !tbaa !2436
  %224 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16031, !tbaa !2442
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %224, i32 0, i32 3, !dbg !16031, !ctir !1919
  %225 = load i32, i32* %tm_mday, align 4, !dbg !16031, !tbaa !16033, !ctir !27
  store i32 %225, i32* %number_value, align 4, !dbg !16031, !tbaa !2436
  br label %do_number, !dbg !16031

do.end353:                                        ; No predecessors!
  br label %sw.bb354, !dbg !16031

sw.bb354:                                         ; preds = %sw.epilog87, %do.end353
  %226 = load i32, i32* %modifier, align 4, !dbg !16034, !tbaa !2436
  %cmp355 = icmp eq i32 %226, 69, !dbg !16036
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !16037

if.then357:                                       ; preds = %sw.bb354
  br label %bad_format, !dbg !16038

if.end358:                                        ; preds = %sw.bb354
  br label %do.body359, !dbg !16039

do.body359:                                       ; preds = %if.end358
  store i32 2, i32* %digits, align 4, !dbg !16040, !tbaa !2436
  %227 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16040, !tbaa !2442
  %tm_mday360 = getelementptr inbounds %struct.tm, %struct.tm* %227, i32 0, i32 3, !dbg !16040, !ctir !1919
  %228 = load i32, i32* %tm_mday360, align 4, !dbg !16040, !tbaa !16033, !ctir !27
  store i32 %228, i32* %number_value, align 4, !dbg !16040, !tbaa !2436
  br label %do_number_spacepad, !dbg !16040

do.end362:                                        ; No predecessors!
  br label %do_tz_offset, !dbg !16040

do_tz_offset:                                     ; preds = %do.body1349, %do.body1333, %do.body1327, %do.body1321, %do.end362
  call void @llvm.dbg.label(metadata !16042), !dbg !16043
  store i8 1, i8* %always_output_a_sign, align 1, !dbg !16044, !tbaa !2461
  br label %do_number_body, !dbg !16045

do_yearish:                                       ; preds = %do.body1213, %do.body1183, %do.body1131, %cond.end1126, %do.body329
  call void @llvm.dbg.label(metadata !16046), !dbg !16047
  %229 = load i32, i32* %pad, align 4, !dbg !16048, !tbaa !2436
  %cmp363 = icmp eq i32 %229, 0, !dbg !16050
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !16051

if.then365:                                       ; preds = %do_yearish
  %230 = load i32, i32* %yr_spec.addr, align 4, !dbg !16052, !tbaa !2436
  store i32 %230, i32* %pad, align 4, !dbg !16053, !tbaa !2436
  br label %if.end366, !dbg !16054

if.end366:                                        ; preds = %if.then365, %do_yearish
  %231 = load i32, i32* %pad, align 4, !dbg !16055, !tbaa !2436
  %cmp367 = icmp eq i32 %231, 43, !dbg !16056
  br i1 %cmp367, label %land.rhs369, label %land.end377, !dbg !16057

land.rhs369:                                      ; preds = %if.end366
  %232 = load i32, i32* %digits, align 4, !dbg !16058, !tbaa !2436
  %cmp370 = icmp eq i32 %232, 2, !dbg !16059
  %233 = zext i1 %cmp370 to i64, !dbg !16058
  %cond372 = select i1 %cmp370, i32 99, i32 9999, !dbg !16058
  %234 = load i32, i32* %u_number_value, align 4, !dbg !16060, !tbaa !2436
  %cmp373 = icmp ult i32 %cond372, %234, !dbg !16061
  br i1 %cmp373, label %lor.end, label %lor.rhs, !dbg !16062

lor.rhs:                                          ; preds = %land.rhs369
  %235 = load i32, i32* %digits, align 4, !dbg !16063, !tbaa !2436
  %236 = load i32, i32* %width.addr, align 4, !dbg !16064, !tbaa !2436
  %cmp375 = icmp slt i32 %235, %236, !dbg !16065
  br label %lor.end, !dbg !16062

lor.end:                                          ; preds = %lor.rhs, %land.rhs369
  %237 = phi i1 [ true, %land.rhs369 ], [ %cmp375, %lor.rhs ]
  br label %land.end377

land.end377:                                      ; preds = %lor.end, %if.end366
  %238 = phi i1 [ false, %if.end366 ], [ %237, %lor.end ], !dbg !16066
  %frombool379 = zext i1 %238 to i8, !dbg !16067
  store i8 %frombool379, i8* %always_output_a_sign, align 1, !dbg !16067, !tbaa !2461
  br label %do_maybe_signed_number, !dbg !16068

do_number_spacepad:                               ; preds = %do.body810, %do.body801, %do.body359
  call void @llvm.dbg.label(metadata !16069), !dbg !16070
  %239 = load i32, i32* %pad, align 4, !dbg !16071, !tbaa !2436
  %cmp380 = icmp eq i32 %239, 0, !dbg !16073
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !16074

if.then382:                                       ; preds = %do_number_spacepad
  store i32 95, i32* %pad, align 4, !dbg !16075, !tbaa !2436
  br label %if.end383, !dbg !16076

if.end383:                                        ; preds = %if.then382, %do_number_spacepad
  br label %do_number, !dbg !16077

do_number:                                        ; preds = %do.body1170, %do.body1154, %do.body1143, %do.body1032, %do.body1020, %do.body935, %do.body862, %do.body831, %do.body793, %do.body784, %if.end383, %do.body351
  call void @llvm.dbg.label(metadata !16078), !dbg !16079
  %240 = load i32, i32* %number_value, align 4, !dbg !16080, !tbaa !2436
  %cmp384 = icmp slt i32 %240, 0, !dbg !16081
  %frombool386 = zext i1 %cmp384 to i8, !dbg !16082
  store i8 %frombool386, i8* %negative_number, align 1, !dbg !16082, !tbaa !2461
  %241 = load i32, i32* %number_value, align 4, !dbg !16083, !tbaa !2436
  store i32 %241, i32* %u_number_value, align 4, !dbg !16084, !tbaa !2436
  br label %do_signed_number, !dbg !16085

do_signed_number:                                 ; preds = %do.body921, %do.body839, %do.body818, %do_number
  call void @llvm.dbg.label(metadata !16086), !dbg !16087
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16088, !tbaa !2461
  br label %do_maybe_signed_number, !dbg !16089

do_maybe_signed_number:                           ; preds = %do_signed_number, %land.end377
  call void @llvm.dbg.label(metadata !16090), !dbg !16091
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16092, !tbaa !2436
  br label %do_number_body, !dbg !16093

do_number_body:                                   ; preds = %do_maybe_signed_number, %do_tz_offset
  call void @llvm.dbg.label(metadata !16094), !dbg !16095
  %242 = load i32, i32* %modifier, align 4, !dbg !16096, !tbaa !2436
  %cmp387 = icmp eq i32 %242, 79, !dbg !16098
  br i1 %cmp387, label %land.lhs.true389, label %if.end392, !dbg !16099

land.lhs.true389:                                 ; preds = %do_number_body
  %243 = load i8, i8* %negative_number, align 1, !dbg !16100, !tbaa !2461
  %tobool390 = trunc i8 %243 to i1, !dbg !16100
  br i1 %tobool390, label %if.end392, label %if.then391, !dbg !16101

if.then391:                                       ; preds = %land.lhs.true389
  br label %underlying_strftime, !dbg !16102

if.end392:                                        ; preds = %land.lhs.true389, %do_number_body
  %arraydecay393 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16104
  %add.ptr394 = getelementptr inbounds i8, i8* %arraydecay393, i64 23, !dbg !16105
  store i8* %add.ptr394, i8** %bufp, align 8, !dbg !16106, !tbaa !2442
  %244 = load i8, i8* %negative_number, align 1, !dbg !16107, !tbaa !2461
  %tobool395 = trunc i8 %244 to i1, !dbg !16107
  br i1 %tobool395, label %if.then396, label %if.end398, !dbg !16109

if.then396:                                       ; preds = %if.end392
  %245 = load i32, i32* %u_number_value, align 4, !dbg !16110, !tbaa !2436
  %sub397 = sub i32 0, %245, !dbg !16111
  store i32 %sub397, i32* %u_number_value, align 4, !dbg !16112, !tbaa !2436
  br label %if.end398, !dbg !16113

if.end398:                                        ; preds = %if.then396, %if.end392
  br label %do.body399, !dbg !16114

do.body399:                                       ; preds = %lor.end415, %if.end398
  %246 = load i32, i32* %tz_colon_mask, align 4, !dbg !16115, !tbaa !2436
  %and = and i32 %246, 1, !dbg !16118
  %tobool400 = icmp ne i32 %and, 0, !dbg !16118
  br i1 %tobool400, label %if.then401, label %if.end403, !dbg !16119

if.then401:                                       ; preds = %do.body399
  %247 = load i8*, i8** %bufp, align 8, !dbg !16120, !tbaa !2442
  %incdec.ptr402 = getelementptr inbounds i8, i8* %247, i32 -1, !dbg !16120
  store i8* %incdec.ptr402, i8** %bufp, align 8, !dbg !16120, !tbaa !2442
  store i8 58, i8* %incdec.ptr402, align 1, !dbg !16121, !tbaa !2497, !ctir !144
  br label %if.end403, !dbg !16122

if.end403:                                        ; preds = %if.then401, %do.body399
  %248 = load i32, i32* %tz_colon_mask, align 4, !dbg !16123, !tbaa !2436
  %shr = ashr i32 %248, 1, !dbg !16123
  store i32 %shr, i32* %tz_colon_mask, align 4, !dbg !16123, !tbaa !2436
  %249 = load i32, i32* %u_number_value, align 4, !dbg !16124, !tbaa !2436
  %rem404 = urem i32 %249, 10, !dbg !16125
  %add405 = add i32 %rem404, 48, !dbg !16126
  %conv406 = trunc i32 %add405 to i8, !dbg !16124
  %250 = load i8*, i8** %bufp, align 8, !dbg !16127, !tbaa !2442
  %incdec.ptr407 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !16127
  store i8* %incdec.ptr407, i8** %bufp, align 8, !dbg !16127, !tbaa !2442
  store i8 %conv406, i8* %incdec.ptr407, align 1, !dbg !16128, !tbaa !2497, !ctir !144
  %251 = load i32, i32* %u_number_value, align 4, !dbg !16129, !tbaa !2436
  %div408 = udiv i32 %251, 10, !dbg !16129
  store i32 %div408, i32* %u_number_value, align 4, !dbg !16129, !tbaa !2436
  br label %do.cond409, !dbg !16130

do.cond409:                                       ; preds = %if.end403
  %252 = load i32, i32* %u_number_value, align 4, !dbg !16131, !tbaa !2436
  %cmp410 = icmp ne i32 %252, 0, !dbg !16132
  br i1 %cmp410, label %lor.end415, label %lor.rhs412, !dbg !16133

lor.rhs412:                                       ; preds = %do.cond409
  %253 = load i32, i32* %tz_colon_mask, align 4, !dbg !16134, !tbaa !2436
  %cmp413 = icmp ne i32 %253, 0, !dbg !16135
  br label %lor.end415, !dbg !16133

lor.end415:                                       ; preds = %lor.rhs412, %do.cond409
  %254 = phi i1 [ true, %do.cond409 ], [ %cmp413, %lor.rhs412 ]
  br i1 %254, label %do.body399, label %do.end416, !dbg !16130, !llvm.loop !16136

do.end416:                                        ; preds = %lor.end415
  br label %do_number_sign_and_padding, !dbg !16130

do_number_sign_and_padding:                       ; preds = %do.end962, %do.end416
  call void @llvm.dbg.label(metadata !16138), !dbg !16139
  %255 = load i32, i32* %digits, align 4, !dbg !16140, !tbaa !2436
  %256 = load i32, i32* %width.addr, align 4, !dbg !16142, !tbaa !2436
  %cmp417 = icmp slt i32 %255, %256, !dbg !16143
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !16144

if.then419:                                       ; preds = %do_number_sign_and_padding
  %257 = load i32, i32* %width.addr, align 4, !dbg !16145, !tbaa !2436
  store i32 %257, i32* %digits, align 4, !dbg !16146, !tbaa !2436
  br label %if.end420, !dbg !16147

if.end420:                                        ; preds = %if.then419, %do_number_sign_and_padding
  %258 = load i8, i8* %negative_number, align 1, !dbg !16148, !tbaa !2461
  %tobool421 = trunc i8 %258 to i1, !dbg !16148
  br i1 %tobool421, label %cond.true423, label %cond.false424, !dbg !16148

cond.true423:                                     ; preds = %if.end420
  br label %cond.end428, !dbg !16148

cond.false424:                                    ; preds = %if.end420
  %259 = load i8, i8* %always_output_a_sign, align 1, !dbg !16149, !tbaa !2461
  %tobool425 = trunc i8 %259 to i1, !dbg !16149
  %260 = zext i1 %tobool425 to i64, !dbg !16149
  %cond427 = select i1 %tobool425, i32 43, i32 0, !dbg !16149
  br label %cond.end428, !dbg !16148

cond.end428:                                      ; preds = %cond.false424, %cond.true423
  %cond429 = phi i32 [ 45, %cond.true423 ], [ %cond427, %cond.false424 ], !dbg !16148
  %conv430 = trunc i32 %cond429 to i8, !dbg !16150
  store i8 %conv430, i8* %sign_char, align 1, !dbg !16151, !tbaa !2497
  %261 = load i32, i32* %pad, align 4, !dbg !16152, !tbaa !2436
  %cmp431 = icmp eq i32 %261, 45, !dbg !16154
  br i1 %cmp431, label %if.then433, label %if.else486, !dbg !16155

if.then433:                                       ; preds = %cond.end428
  %262 = load i8, i8* %sign_char, align 1, !dbg !16156, !tbaa !2497
  %tobool434 = icmp ne i8 %262, 0, !dbg !16156
  br i1 %tobool434, label %if.then435, label %if.end485, !dbg !16159

if.then435:                                       ; preds = %if.then433
  br label %do.body436, !dbg !16160

do.body436:                                       ; preds = %if.then435
  call void @llvm.dbg.declare(metadata i64* %_n437, metadata !16161, metadata !DIExpression()), !dbg !16163
  store i64 1, i64* %_n437, align 8, !dbg !16163, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w438, metadata !16164, metadata !DIExpression()), !dbg !16163
  %263 = load i32, i32* %width.addr, align 4, !dbg !16163, !tbaa !2436
  %cmp439 = icmp slt i32 %263, 0, !dbg !16163
  br i1 %cmp439, label %cond.true441, label %cond.false442, !dbg !16163

cond.true441:                                     ; preds = %do.body436
  br label %cond.end443, !dbg !16163

cond.false442:                                    ; preds = %do.body436
  %264 = load i32, i32* %width.addr, align 4, !dbg !16163, !tbaa !2436
  br label %cond.end443, !dbg !16163

cond.end443:                                      ; preds = %cond.false442, %cond.true441
  %cond444 = phi i32 [ 0, %cond.true441 ], [ %264, %cond.false442 ], !dbg !16163
  %conv445 = sext i32 %cond444 to i64, !dbg !16163
  store i64 %conv445, i64* %_w438, align 8, !dbg !16163, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr446, metadata !16165, metadata !DIExpression()), !dbg !16163
  %265 = load i64, i64* %_n437, align 8, !dbg !16163, !tbaa !2579
  %266 = load i64, i64* %_w438, align 8, !dbg !16163, !tbaa !2579
  %cmp447 = icmp ult i64 %265, %266, !dbg !16163
  br i1 %cmp447, label %cond.true449, label %cond.false450, !dbg !16163

cond.true449:                                     ; preds = %cond.end443
  %267 = load i64, i64* %_w438, align 8, !dbg !16163, !tbaa !2579
  br label %cond.end451, !dbg !16163

cond.false450:                                    ; preds = %cond.end443
  %268 = load i64, i64* %_n437, align 8, !dbg !16163, !tbaa !2579
  br label %cond.end451, !dbg !16163

cond.end451:                                      ; preds = %cond.false450, %cond.true449
  %cond452 = phi i64 [ %267, %cond.true449 ], [ %268, %cond.false450 ], !dbg !16163
  store i64 %cond452, i64* %_incr446, align 8, !dbg !16163, !tbaa !2579
  %269 = load i64, i64* %_incr446, align 8, !dbg !16166, !tbaa !2579
  %270 = load i64, i64* %maxsize.addr, align 8, !dbg !16166, !tbaa !2579
  %271 = load i64, i64* %i, align 8, !dbg !16166, !tbaa !2579
  %sub453 = sub i64 %270, %271, !dbg !16166
  %cmp454 = icmp uge i64 %269, %sub453, !dbg !16166
  br i1 %cmp454, label %if.then456, label %if.end457, !dbg !16163

if.then456:                                       ; preds = %cond.end451
  store i64 0, i64* %retval, align 8, !dbg !16166
  br label %return, !dbg !16166

if.end457:                                        ; preds = %cond.end451
  %272 = load i8*, i8** %p, align 8, !dbg !16168, !tbaa !2442
  %tobool458 = icmp ne i8* %272, null, !dbg !16168
  br i1 %tobool458, label %if.then459, label %if.end481, !dbg !16163

if.then459:                                       ; preds = %if.end457
  %273 = load i32, i32* %digits, align 4, !dbg !16170, !tbaa !2436
  %cmp460 = icmp eq i32 %273, 0, !dbg !16170
  br i1 %cmp460, label %land.lhs.true462, label %if.end479, !dbg !16170

land.lhs.true462:                                 ; preds = %if.then459
  %274 = load i64, i64* %_n437, align 8, !dbg !16170, !tbaa !2579
  %275 = load i64, i64* %_w438, align 8, !dbg !16170, !tbaa !2579
  %cmp463 = icmp ult i64 %274, %275, !dbg !16170
  br i1 %cmp463, label %if.then465, label %if.end479, !dbg !16173

if.then465:                                       ; preds = %land.lhs.true462
  call void @llvm.dbg.declare(metadata i64* %_delta466, metadata !16174, metadata !DIExpression()), !dbg !16176
  %276 = load i32, i32* %width.addr, align 4, !dbg !16176, !tbaa !2436
  %conv467 = sext i32 %276 to i64, !dbg !16176
  %277 = load i64, i64* %_n437, align 8, !dbg !16176, !tbaa !2579
  %sub468 = sub i64 %conv467, %277, !dbg !16176
  store i64 %sub468, i64* %_delta466, align 8, !dbg !16176, !tbaa !2579
  %278 = load i32, i32* %pad, align 4, !dbg !16177, !tbaa !2436
  %cmp469 = icmp eq i32 %278, 48, !dbg !16177
  br i1 %cmp469, label %if.then474, label %lor.lhs.false471, !dbg !16177

lor.lhs.false471:                                 ; preds = %if.then465
  %279 = load i32, i32* %pad, align 4, !dbg !16177, !tbaa !2436
  %cmp472 = icmp eq i32 %279, 43, !dbg !16177
  br i1 %cmp472, label %if.then474, label %if.else476, !dbg !16176

if.then474:                                       ; preds = %lor.lhs.false471, %if.then465
  %280 = load i8*, i8** %p, align 8, !dbg !16177, !tbaa !2442
  %281 = load i64, i64* %_delta466, align 8, !dbg !16177, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %280, i8 48, i64 %281, i1 false), !dbg !16177
  %282 = load i64, i64* %_delta466, align 8, !dbg !16177, !tbaa !2579
  %283 = load i8*, i8** %p, align 8, !dbg !16177, !tbaa !2442
  %add.ptr475 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !16177
  store i8* %add.ptr475, i8** %p, align 8, !dbg !16177, !tbaa !2442
  br label %if.end478, !dbg !16177

if.else476:                                       ; preds = %lor.lhs.false471
  %284 = load i8*, i8** %p, align 8, !dbg !16177, !tbaa !2442
  %285 = load i64, i64* %_delta466, align 8, !dbg !16177, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %284, i8 32, i64 %285, i1 false), !dbg !16177
  %286 = load i64, i64* %_delta466, align 8, !dbg !16177, !tbaa !2579
  %287 = load i8*, i8** %p, align 8, !dbg !16177, !tbaa !2442
  %add.ptr477 = getelementptr inbounds i8, i8* %287, i64 %286, !dbg !16177
  store i8* %add.ptr477, i8** %p, align 8, !dbg !16177, !tbaa !2442
  br label %if.end478

if.end478:                                        ; preds = %if.else476, %if.then474
  br label %if.end479, !dbg !16176

if.end479:                                        ; preds = %if.end478, %land.lhs.true462, %if.then459
  %288 = load i8, i8* %sign_char, align 1, !dbg !16173, !tbaa !2497
  %289 = load i8*, i8** %p, align 8, !dbg !16173, !tbaa !2442
  store i8 %288, i8* %289, align 1, !dbg !16173, !tbaa !2497, !ctir !144
  %290 = load i64, i64* %_n437, align 8, !dbg !16173, !tbaa !2579
  %291 = load i8*, i8** %p, align 8, !dbg !16173, !tbaa !2442
  %add.ptr480 = getelementptr inbounds i8, i8* %291, i64 %290, !dbg !16173
  store i8* %add.ptr480, i8** %p, align 8, !dbg !16173, !tbaa !2442
  br label %if.end481, !dbg !16173

if.end481:                                        ; preds = %if.end479, %if.end457
  %292 = load i64, i64* %_incr446, align 8, !dbg !16163, !tbaa !2579
  %293 = load i64, i64* %i, align 8, !dbg !16163, !tbaa !2579
  %add482 = add i64 %293, %292, !dbg !16163
  store i64 %add482, i64* %i, align 8, !dbg !16163, !tbaa !2579
  br label %do.end484, !dbg !16163

do.end484:                                        ; preds = %if.end481
  br label %if.end485, !dbg !16163

if.end485:                                        ; preds = %do.end484, %if.then433
  br label %if.end696, !dbg !16179

if.else486:                                       ; preds = %cond.end428
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !16180, metadata !DIExpression()), !dbg !16182
  %294 = load i32, i32* %digits, align 4, !dbg !16183, !tbaa !2436
  %conv487 = sext i32 %294 to i64, !dbg !16183
  %arraydecay488 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16184
  %add.ptr489 = getelementptr inbounds i8, i8* %arraydecay488, i64 23, !dbg !16185
  %295 = load i8*, i8** %bufp, align 8, !dbg !16186, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr489 to i64, !dbg !16187
  %sub.ptr.rhs.cast = ptrtoint i8* %295 to i64, !dbg !16187
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16187
  %sub490 = sub nsw i64 %conv487, %sub.ptr.sub, !dbg !16188
  %296 = load i8, i8* %sign_char, align 1, !dbg !16189, !tbaa !2497
  %tobool491 = icmp ne i8 %296, 0, !dbg !16190
  %lnot = xor i1 %tobool491, true, !dbg !16190
  %lnot492 = xor i1 %lnot, true, !dbg !16191
  %lnot.ext = zext i1 %lnot492 to i32, !dbg !16191
  %conv493 = sext i32 %lnot.ext to i64, !dbg !16191
  %sub494 = sub nsw i64 %sub490, %conv493, !dbg !16192
  %conv495 = trunc i64 %sub494 to i32, !dbg !16183
  store i32 %conv495, i32* %padding, align 4, !dbg !16182, !tbaa !2436
  %297 = load i32, i32* %padding, align 4, !dbg !16193, !tbaa !2436
  %cmp496 = icmp sgt i32 %297, 0, !dbg !16195
  br i1 %cmp496, label %if.then498, label %if.else642, !dbg !16196

if.then498:                                       ; preds = %if.else486
  %298 = load i32, i32* %pad, align 4, !dbg !16197, !tbaa !2436
  %cmp499 = icmp eq i32 %298, 95, !dbg !16200
  br i1 %cmp499, label %if.then501, label %if.else574, !dbg !16201

if.then501:                                       ; preds = %if.then498
  %299 = load i32, i32* %padding, align 4, !dbg !16202, !tbaa !2436
  %conv502 = sext i32 %299 to i64, !dbg !16205
  %300 = load i64, i64* %maxsize.addr, align 8, !dbg !16206, !tbaa !2579
  %301 = load i64, i64* %i, align 8, !dbg !16207, !tbaa !2579
  %sub503 = sub i64 %300, %301, !dbg !16208
  %cmp504 = icmp uge i64 %conv502, %sub503, !dbg !16209
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !16210

if.then506:                                       ; preds = %if.then501
  store i64 0, i64* %retval, align 8, !dbg !16211
  br label %return, !dbg !16211

if.end507:                                        ; preds = %if.then501
  %302 = load i8*, i8** %p, align 8, !dbg !16212, !tbaa !2442
  %tobool508 = icmp ne i8* %302, null, !dbg !16212
  br i1 %tobool508, label %if.then509, label %if.end512, !dbg !16214

if.then509:                                       ; preds = %if.end507
  %303 = load i8*, i8** %p, align 8, !dbg !16215, !tbaa !2442
  %304 = load i32, i32* %padding, align 4, !dbg !16215, !tbaa !2436
  %conv510 = sext i32 %304 to i64, !dbg !16215
  call void @llvm.memset.p0i8.i64(i8* align 1 %303, i8 32, i64 %conv510, i1 false), !dbg !16215
  %305 = load i32, i32* %padding, align 4, !dbg !16215, !tbaa !2436
  %306 = load i8*, i8** %p, align 8, !dbg !16215, !tbaa !2442
  %idx.ext = sext i32 %305 to i64, !dbg !16215
  %add.ptr511 = getelementptr inbounds i8, i8* %306, i64 %idx.ext, !dbg !16215
  store i8* %add.ptr511, i8** %p, align 8, !dbg !16215, !tbaa !2442
  br label %if.end512, !dbg !16215

if.end512:                                        ; preds = %if.then509, %if.end507
  %307 = load i32, i32* %padding, align 4, !dbg !16216, !tbaa !2436
  %conv513 = sext i32 %307 to i64, !dbg !16216
  %308 = load i64, i64* %i, align 8, !dbg !16217, !tbaa !2579
  %add514 = add i64 %308, %conv513, !dbg !16217
  store i64 %add514, i64* %i, align 8, !dbg !16217, !tbaa !2579
  %309 = load i32, i32* %width.addr, align 4, !dbg !16218, !tbaa !2436
  %310 = load i32, i32* %padding, align 4, !dbg !16219, !tbaa !2436
  %cmp515 = icmp sgt i32 %309, %310, !dbg !16220
  br i1 %cmp515, label %cond.true517, label %cond.false519, !dbg !16218

cond.true517:                                     ; preds = %if.end512
  %311 = load i32, i32* %width.addr, align 4, !dbg !16221, !tbaa !2436
  %312 = load i32, i32* %padding, align 4, !dbg !16222, !tbaa !2436
  %sub518 = sub nsw i32 %311, %312, !dbg !16223
  br label %cond.end520, !dbg !16218

cond.false519:                                    ; preds = %if.end512
  br label %cond.end520, !dbg !16218

cond.end520:                                      ; preds = %cond.false519, %cond.true517
  %cond521 = phi i32 [ %sub518, %cond.true517 ], [ 0, %cond.false519 ], !dbg !16218
  store i32 %cond521, i32* %width.addr, align 4, !dbg !16224, !tbaa !2436
  %313 = load i8, i8* %sign_char, align 1, !dbg !16225, !tbaa !2497
  %tobool522 = icmp ne i8 %313, 0, !dbg !16225
  br i1 %tobool522, label %if.then523, label %if.end573, !dbg !16227

if.then523:                                       ; preds = %cond.end520
  br label %do.body524, !dbg !16228

do.body524:                                       ; preds = %if.then523
  call void @llvm.dbg.declare(metadata i64* %_n525, metadata !16229, metadata !DIExpression()), !dbg !16231
  store i64 1, i64* %_n525, align 8, !dbg !16231, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w526, metadata !16232, metadata !DIExpression()), !dbg !16231
  %314 = load i32, i32* %width.addr, align 4, !dbg !16231, !tbaa !2436
  %cmp527 = icmp slt i32 %314, 0, !dbg !16231
  br i1 %cmp527, label %cond.true529, label %cond.false530, !dbg !16231

cond.true529:                                     ; preds = %do.body524
  br label %cond.end531, !dbg !16231

cond.false530:                                    ; preds = %do.body524
  %315 = load i32, i32* %width.addr, align 4, !dbg !16231, !tbaa !2436
  br label %cond.end531, !dbg !16231

cond.end531:                                      ; preds = %cond.false530, %cond.true529
  %cond532 = phi i32 [ 0, %cond.true529 ], [ %315, %cond.false530 ], !dbg !16231
  %conv533 = sext i32 %cond532 to i64, !dbg !16231
  store i64 %conv533, i64* %_w526, align 8, !dbg !16231, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr534, metadata !16233, metadata !DIExpression()), !dbg !16231
  %316 = load i64, i64* %_n525, align 8, !dbg !16231, !tbaa !2579
  %317 = load i64, i64* %_w526, align 8, !dbg !16231, !tbaa !2579
  %cmp535 = icmp ult i64 %316, %317, !dbg !16231
  br i1 %cmp535, label %cond.true537, label %cond.false538, !dbg !16231

cond.true537:                                     ; preds = %cond.end531
  %318 = load i64, i64* %_w526, align 8, !dbg !16231, !tbaa !2579
  br label %cond.end539, !dbg !16231

cond.false538:                                    ; preds = %cond.end531
  %319 = load i64, i64* %_n525, align 8, !dbg !16231, !tbaa !2579
  br label %cond.end539, !dbg !16231

cond.end539:                                      ; preds = %cond.false538, %cond.true537
  %cond540 = phi i64 [ %318, %cond.true537 ], [ %319, %cond.false538 ], !dbg !16231
  store i64 %cond540, i64* %_incr534, align 8, !dbg !16231, !tbaa !2579
  %320 = load i64, i64* %_incr534, align 8, !dbg !16234, !tbaa !2579
  %321 = load i64, i64* %maxsize.addr, align 8, !dbg !16234, !tbaa !2579
  %322 = load i64, i64* %i, align 8, !dbg !16234, !tbaa !2579
  %sub541 = sub i64 %321, %322, !dbg !16234
  %cmp542 = icmp uge i64 %320, %sub541, !dbg !16234
  br i1 %cmp542, label %if.then544, label %if.end545, !dbg !16231

if.then544:                                       ; preds = %cond.end539
  store i64 0, i64* %retval, align 8, !dbg !16234
  br label %return, !dbg !16234

if.end545:                                        ; preds = %cond.end539
  %323 = load i8*, i8** %p, align 8, !dbg !16236, !tbaa !2442
  %tobool546 = icmp ne i8* %323, null, !dbg !16236
  br i1 %tobool546, label %if.then547, label %if.end569, !dbg !16231

if.then547:                                       ; preds = %if.end545
  %324 = load i32, i32* %digits, align 4, !dbg !16238, !tbaa !2436
  %cmp548 = icmp eq i32 %324, 0, !dbg !16238
  br i1 %cmp548, label %land.lhs.true550, label %if.end567, !dbg !16238

land.lhs.true550:                                 ; preds = %if.then547
  %325 = load i64, i64* %_n525, align 8, !dbg !16238, !tbaa !2579
  %326 = load i64, i64* %_w526, align 8, !dbg !16238, !tbaa !2579
  %cmp551 = icmp ult i64 %325, %326, !dbg !16238
  br i1 %cmp551, label %if.then553, label %if.end567, !dbg !16241

if.then553:                                       ; preds = %land.lhs.true550
  call void @llvm.dbg.declare(metadata i64* %_delta554, metadata !16242, metadata !DIExpression()), !dbg !16244
  %327 = load i32, i32* %width.addr, align 4, !dbg !16244, !tbaa !2436
  %conv555 = sext i32 %327 to i64, !dbg !16244
  %328 = load i64, i64* %_n525, align 8, !dbg !16244, !tbaa !2579
  %sub556 = sub i64 %conv555, %328, !dbg !16244
  store i64 %sub556, i64* %_delta554, align 8, !dbg !16244, !tbaa !2579
  %329 = load i32, i32* %pad, align 4, !dbg !16245, !tbaa !2436
  %cmp557 = icmp eq i32 %329, 48, !dbg !16245
  br i1 %cmp557, label %if.then562, label %lor.lhs.false559, !dbg !16245

lor.lhs.false559:                                 ; preds = %if.then553
  %330 = load i32, i32* %pad, align 4, !dbg !16245, !tbaa !2436
  %cmp560 = icmp eq i32 %330, 43, !dbg !16245
  br i1 %cmp560, label %if.then562, label %if.else564, !dbg !16244

if.then562:                                       ; preds = %lor.lhs.false559, %if.then553
  %331 = load i8*, i8** %p, align 8, !dbg !16245, !tbaa !2442
  %332 = load i64, i64* %_delta554, align 8, !dbg !16245, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %331, i8 48, i64 %332, i1 false), !dbg !16245
  %333 = load i64, i64* %_delta554, align 8, !dbg !16245, !tbaa !2579
  %334 = load i8*, i8** %p, align 8, !dbg !16245, !tbaa !2442
  %add.ptr563 = getelementptr inbounds i8, i8* %334, i64 %333, !dbg !16245
  store i8* %add.ptr563, i8** %p, align 8, !dbg !16245, !tbaa !2442
  br label %if.end566, !dbg !16245

if.else564:                                       ; preds = %lor.lhs.false559
  %335 = load i8*, i8** %p, align 8, !dbg !16245, !tbaa !2442
  %336 = load i64, i64* %_delta554, align 8, !dbg !16245, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %335, i8 32, i64 %336, i1 false), !dbg !16245
  %337 = load i64, i64* %_delta554, align 8, !dbg !16245, !tbaa !2579
  %338 = load i8*, i8** %p, align 8, !dbg !16245, !tbaa !2442
  %add.ptr565 = getelementptr inbounds i8, i8* %338, i64 %337, !dbg !16245
  store i8* %add.ptr565, i8** %p, align 8, !dbg !16245, !tbaa !2442
  br label %if.end566

if.end566:                                        ; preds = %if.else564, %if.then562
  br label %if.end567, !dbg !16244

if.end567:                                        ; preds = %if.end566, %land.lhs.true550, %if.then547
  %339 = load i8, i8* %sign_char, align 1, !dbg !16241, !tbaa !2497
  %340 = load i8*, i8** %p, align 8, !dbg !16241, !tbaa !2442
  store i8 %339, i8* %340, align 1, !dbg !16241, !tbaa !2497, !ctir !144
  %341 = load i64, i64* %_n525, align 8, !dbg !16241, !tbaa !2579
  %342 = load i8*, i8** %p, align 8, !dbg !16241, !tbaa !2442
  %add.ptr568 = getelementptr inbounds i8, i8* %342, i64 %341, !dbg !16241
  store i8* %add.ptr568, i8** %p, align 8, !dbg !16241, !tbaa !2442
  br label %if.end569, !dbg !16241

if.end569:                                        ; preds = %if.end567, %if.end545
  %343 = load i64, i64* %_incr534, align 8, !dbg !16231, !tbaa !2579
  %344 = load i64, i64* %i, align 8, !dbg !16231, !tbaa !2579
  %add570 = add i64 %344, %343, !dbg !16231
  store i64 %add570, i64* %i, align 8, !dbg !16231, !tbaa !2579
  br label %do.end572, !dbg !16231

do.end572:                                        ; preds = %if.end569
  br label %if.end573, !dbg !16231

if.end573:                                        ; preds = %do.end572, %cond.end520
  br label %if.end641, !dbg !16247

if.else574:                                       ; preds = %if.then498
  %345 = load i32, i32* %digits, align 4, !dbg !16248, !tbaa !2436
  %conv575 = sext i32 %345 to i64, !dbg !16251
  %346 = load i64, i64* %maxsize.addr, align 8, !dbg !16252, !tbaa !2579
  %347 = load i64, i64* %i, align 8, !dbg !16253, !tbaa !2579
  %sub576 = sub i64 %346, %347, !dbg !16254
  %cmp577 = icmp uge i64 %conv575, %sub576, !dbg !16255
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !16256

if.then579:                                       ; preds = %if.else574
  store i64 0, i64* %retval, align 8, !dbg !16257
  br label %return, !dbg !16257

if.end580:                                        ; preds = %if.else574
  %348 = load i8, i8* %sign_char, align 1, !dbg !16258, !tbaa !2497
  %tobool581 = icmp ne i8 %348, 0, !dbg !16258
  br i1 %tobool581, label %if.then582, label %if.end632, !dbg !16260

if.then582:                                       ; preds = %if.end580
  br label %do.body583, !dbg !16261

do.body583:                                       ; preds = %if.then582
  call void @llvm.dbg.declare(metadata i64* %_n584, metadata !16262, metadata !DIExpression()), !dbg !16264
  store i64 1, i64* %_n584, align 8, !dbg !16264, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w585, metadata !16265, metadata !DIExpression()), !dbg !16264
  %349 = load i32, i32* %width.addr, align 4, !dbg !16264, !tbaa !2436
  %cmp586 = icmp slt i32 %349, 0, !dbg !16264
  br i1 %cmp586, label %cond.true588, label %cond.false589, !dbg !16264

cond.true588:                                     ; preds = %do.body583
  br label %cond.end590, !dbg !16264

cond.false589:                                    ; preds = %do.body583
  %350 = load i32, i32* %width.addr, align 4, !dbg !16264, !tbaa !2436
  br label %cond.end590, !dbg !16264

cond.end590:                                      ; preds = %cond.false589, %cond.true588
  %cond591 = phi i32 [ 0, %cond.true588 ], [ %350, %cond.false589 ], !dbg !16264
  %conv592 = sext i32 %cond591 to i64, !dbg !16264
  store i64 %conv592, i64* %_w585, align 8, !dbg !16264, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr593, metadata !16266, metadata !DIExpression()), !dbg !16264
  %351 = load i64, i64* %_n584, align 8, !dbg !16264, !tbaa !2579
  %352 = load i64, i64* %_w585, align 8, !dbg !16264, !tbaa !2579
  %cmp594 = icmp ult i64 %351, %352, !dbg !16264
  br i1 %cmp594, label %cond.true596, label %cond.false597, !dbg !16264

cond.true596:                                     ; preds = %cond.end590
  %353 = load i64, i64* %_w585, align 8, !dbg !16264, !tbaa !2579
  br label %cond.end598, !dbg !16264

cond.false597:                                    ; preds = %cond.end590
  %354 = load i64, i64* %_n584, align 8, !dbg !16264, !tbaa !2579
  br label %cond.end598, !dbg !16264

cond.end598:                                      ; preds = %cond.false597, %cond.true596
  %cond599 = phi i64 [ %353, %cond.true596 ], [ %354, %cond.false597 ], !dbg !16264
  store i64 %cond599, i64* %_incr593, align 8, !dbg !16264, !tbaa !2579
  %355 = load i64, i64* %_incr593, align 8, !dbg !16267, !tbaa !2579
  %356 = load i64, i64* %maxsize.addr, align 8, !dbg !16267, !tbaa !2579
  %357 = load i64, i64* %i, align 8, !dbg !16267, !tbaa !2579
  %sub600 = sub i64 %356, %357, !dbg !16267
  %cmp601 = icmp uge i64 %355, %sub600, !dbg !16267
  br i1 %cmp601, label %if.then603, label %if.end604, !dbg !16264

if.then603:                                       ; preds = %cond.end598
  store i64 0, i64* %retval, align 8, !dbg !16267
  br label %return, !dbg !16267

if.end604:                                        ; preds = %cond.end598
  %358 = load i8*, i8** %p, align 8, !dbg !16269, !tbaa !2442
  %tobool605 = icmp ne i8* %358, null, !dbg !16269
  br i1 %tobool605, label %if.then606, label %if.end628, !dbg !16264

if.then606:                                       ; preds = %if.end604
  %359 = load i32, i32* %digits, align 4, !dbg !16271, !tbaa !2436
  %cmp607 = icmp eq i32 %359, 0, !dbg !16271
  br i1 %cmp607, label %land.lhs.true609, label %if.end626, !dbg !16271

land.lhs.true609:                                 ; preds = %if.then606
  %360 = load i64, i64* %_n584, align 8, !dbg !16271, !tbaa !2579
  %361 = load i64, i64* %_w585, align 8, !dbg !16271, !tbaa !2579
  %cmp610 = icmp ult i64 %360, %361, !dbg !16271
  br i1 %cmp610, label %if.then612, label %if.end626, !dbg !16274

if.then612:                                       ; preds = %land.lhs.true609
  call void @llvm.dbg.declare(metadata i64* %_delta613, metadata !16275, metadata !DIExpression()), !dbg !16277
  %362 = load i32, i32* %width.addr, align 4, !dbg !16277, !tbaa !2436
  %conv614 = sext i32 %362 to i64, !dbg !16277
  %363 = load i64, i64* %_n584, align 8, !dbg !16277, !tbaa !2579
  %sub615 = sub i64 %conv614, %363, !dbg !16277
  store i64 %sub615, i64* %_delta613, align 8, !dbg !16277, !tbaa !2579
  %364 = load i32, i32* %pad, align 4, !dbg !16278, !tbaa !2436
  %cmp616 = icmp eq i32 %364, 48, !dbg !16278
  br i1 %cmp616, label %if.then621, label %lor.lhs.false618, !dbg !16278

lor.lhs.false618:                                 ; preds = %if.then612
  %365 = load i32, i32* %pad, align 4, !dbg !16278, !tbaa !2436
  %cmp619 = icmp eq i32 %365, 43, !dbg !16278
  br i1 %cmp619, label %if.then621, label %if.else623, !dbg !16277

if.then621:                                       ; preds = %lor.lhs.false618, %if.then612
  %366 = load i8*, i8** %p, align 8, !dbg !16278, !tbaa !2442
  %367 = load i64, i64* %_delta613, align 8, !dbg !16278, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %366, i8 48, i64 %367, i1 false), !dbg !16278
  %368 = load i64, i64* %_delta613, align 8, !dbg !16278, !tbaa !2579
  %369 = load i8*, i8** %p, align 8, !dbg !16278, !tbaa !2442
  %add.ptr622 = getelementptr inbounds i8, i8* %369, i64 %368, !dbg !16278
  store i8* %add.ptr622, i8** %p, align 8, !dbg !16278, !tbaa !2442
  br label %if.end625, !dbg !16278

if.else623:                                       ; preds = %lor.lhs.false618
  %370 = load i8*, i8** %p, align 8, !dbg !16278, !tbaa !2442
  %371 = load i64, i64* %_delta613, align 8, !dbg !16278, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %370, i8 32, i64 %371, i1 false), !dbg !16278
  %372 = load i64, i64* %_delta613, align 8, !dbg !16278, !tbaa !2579
  %373 = load i8*, i8** %p, align 8, !dbg !16278, !tbaa !2442
  %add.ptr624 = getelementptr inbounds i8, i8* %373, i64 %372, !dbg !16278
  store i8* %add.ptr624, i8** %p, align 8, !dbg !16278, !tbaa !2442
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then621
  br label %if.end626, !dbg !16277

if.end626:                                        ; preds = %if.end625, %land.lhs.true609, %if.then606
  %374 = load i8, i8* %sign_char, align 1, !dbg !16274, !tbaa !2497
  %375 = load i8*, i8** %p, align 8, !dbg !16274, !tbaa !2442
  store i8 %374, i8* %375, align 1, !dbg !16274, !tbaa !2497, !ctir !144
  %376 = load i64, i64* %_n584, align 8, !dbg !16274, !tbaa !2579
  %377 = load i8*, i8** %p, align 8, !dbg !16274, !tbaa !2442
  %add.ptr627 = getelementptr inbounds i8, i8* %377, i64 %376, !dbg !16274
  store i8* %add.ptr627, i8** %p, align 8, !dbg !16274, !tbaa !2442
  br label %if.end628, !dbg !16274

if.end628:                                        ; preds = %if.end626, %if.end604
  %378 = load i64, i64* %_incr593, align 8, !dbg !16264, !tbaa !2579
  %379 = load i64, i64* %i, align 8, !dbg !16264, !tbaa !2579
  %add629 = add i64 %379, %378, !dbg !16264
  store i64 %add629, i64* %i, align 8, !dbg !16264, !tbaa !2579
  br label %do.end631, !dbg !16264

do.end631:                                        ; preds = %if.end628
  br label %if.end632, !dbg !16264

if.end632:                                        ; preds = %do.end631, %if.end580
  %380 = load i8*, i8** %p, align 8, !dbg !16280, !tbaa !2442
  %tobool633 = icmp ne i8* %380, null, !dbg !16280
  br i1 %tobool633, label %if.then634, label %if.end638, !dbg !16282

if.then634:                                       ; preds = %if.end632
  %381 = load i8*, i8** %p, align 8, !dbg !16283, !tbaa !2442
  %382 = load i32, i32* %padding, align 4, !dbg !16283, !tbaa !2436
  %conv635 = sext i32 %382 to i64, !dbg !16283
  call void @llvm.memset.p0i8.i64(i8* align 1 %381, i8 48, i64 %conv635, i1 false), !dbg !16283
  %383 = load i32, i32* %padding, align 4, !dbg !16283, !tbaa !2436
  %384 = load i8*, i8** %p, align 8, !dbg !16283, !tbaa !2442
  %idx.ext636 = sext i32 %383 to i64, !dbg !16283
  %add.ptr637 = getelementptr inbounds i8, i8* %384, i64 %idx.ext636, !dbg !16283
  store i8* %add.ptr637, i8** %p, align 8, !dbg !16283, !tbaa !2442
  br label %if.end638, !dbg !16283

if.end638:                                        ; preds = %if.then634, %if.end632
  %385 = load i32, i32* %padding, align 4, !dbg !16284, !tbaa !2436
  %conv639 = sext i32 %385 to i64, !dbg !16284
  %386 = load i64, i64* %i, align 8, !dbg !16285, !tbaa !2579
  %add640 = add i64 %386, %conv639, !dbg !16285
  store i64 %add640, i64* %i, align 8, !dbg !16285, !tbaa !2579
  store i32 0, i32* %width.addr, align 4, !dbg !16286, !tbaa !2436
  br label %if.end641

if.end641:                                        ; preds = %if.end638, %if.end573
  br label %if.end695, !dbg !16287

if.else642:                                       ; preds = %if.else486
  %387 = load i8, i8* %sign_char, align 1, !dbg !16288, !tbaa !2497
  %tobool643 = icmp ne i8 %387, 0, !dbg !16288
  br i1 %tobool643, label %if.then644, label %if.end694, !dbg !16291

if.then644:                                       ; preds = %if.else642
  br label %do.body645, !dbg !16292

do.body645:                                       ; preds = %if.then644
  call void @llvm.dbg.declare(metadata i64* %_n646, metadata !16293, metadata !DIExpression()), !dbg !16295
  store i64 1, i64* %_n646, align 8, !dbg !16295, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w647, metadata !16296, metadata !DIExpression()), !dbg !16295
  %388 = load i32, i32* %width.addr, align 4, !dbg !16295, !tbaa !2436
  %cmp648 = icmp slt i32 %388, 0, !dbg !16295
  br i1 %cmp648, label %cond.true650, label %cond.false651, !dbg !16295

cond.true650:                                     ; preds = %do.body645
  br label %cond.end652, !dbg !16295

cond.false651:                                    ; preds = %do.body645
  %389 = load i32, i32* %width.addr, align 4, !dbg !16295, !tbaa !2436
  br label %cond.end652, !dbg !16295

cond.end652:                                      ; preds = %cond.false651, %cond.true650
  %cond653 = phi i32 [ 0, %cond.true650 ], [ %389, %cond.false651 ], !dbg !16295
  %conv654 = sext i32 %cond653 to i64, !dbg !16295
  store i64 %conv654, i64* %_w647, align 8, !dbg !16295, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr655, metadata !16297, metadata !DIExpression()), !dbg !16295
  %390 = load i64, i64* %_n646, align 8, !dbg !16295, !tbaa !2579
  %391 = load i64, i64* %_w647, align 8, !dbg !16295, !tbaa !2579
  %cmp656 = icmp ult i64 %390, %391, !dbg !16295
  br i1 %cmp656, label %cond.true658, label %cond.false659, !dbg !16295

cond.true658:                                     ; preds = %cond.end652
  %392 = load i64, i64* %_w647, align 8, !dbg !16295, !tbaa !2579
  br label %cond.end660, !dbg !16295

cond.false659:                                    ; preds = %cond.end652
  %393 = load i64, i64* %_n646, align 8, !dbg !16295, !tbaa !2579
  br label %cond.end660, !dbg !16295

cond.end660:                                      ; preds = %cond.false659, %cond.true658
  %cond661 = phi i64 [ %392, %cond.true658 ], [ %393, %cond.false659 ], !dbg !16295
  store i64 %cond661, i64* %_incr655, align 8, !dbg !16295, !tbaa !2579
  %394 = load i64, i64* %_incr655, align 8, !dbg !16298, !tbaa !2579
  %395 = load i64, i64* %maxsize.addr, align 8, !dbg !16298, !tbaa !2579
  %396 = load i64, i64* %i, align 8, !dbg !16298, !tbaa !2579
  %sub662 = sub i64 %395, %396, !dbg !16298
  %cmp663 = icmp uge i64 %394, %sub662, !dbg !16298
  br i1 %cmp663, label %if.then665, label %if.end666, !dbg !16295

if.then665:                                       ; preds = %cond.end660
  store i64 0, i64* %retval, align 8, !dbg !16298
  br label %return, !dbg !16298

if.end666:                                        ; preds = %cond.end660
  %397 = load i8*, i8** %p, align 8, !dbg !16300, !tbaa !2442
  %tobool667 = icmp ne i8* %397, null, !dbg !16300
  br i1 %tobool667, label %if.then668, label %if.end690, !dbg !16295

if.then668:                                       ; preds = %if.end666
  %398 = load i32, i32* %digits, align 4, !dbg !16302, !tbaa !2436
  %cmp669 = icmp eq i32 %398, 0, !dbg !16302
  br i1 %cmp669, label %land.lhs.true671, label %if.end688, !dbg !16302

land.lhs.true671:                                 ; preds = %if.then668
  %399 = load i64, i64* %_n646, align 8, !dbg !16302, !tbaa !2579
  %400 = load i64, i64* %_w647, align 8, !dbg !16302, !tbaa !2579
  %cmp672 = icmp ult i64 %399, %400, !dbg !16302
  br i1 %cmp672, label %if.then674, label %if.end688, !dbg !16305

if.then674:                                       ; preds = %land.lhs.true671
  call void @llvm.dbg.declare(metadata i64* %_delta675, metadata !16306, metadata !DIExpression()), !dbg !16308
  %401 = load i32, i32* %width.addr, align 4, !dbg !16308, !tbaa !2436
  %conv676 = sext i32 %401 to i64, !dbg !16308
  %402 = load i64, i64* %_n646, align 8, !dbg !16308, !tbaa !2579
  %sub677 = sub i64 %conv676, %402, !dbg !16308
  store i64 %sub677, i64* %_delta675, align 8, !dbg !16308, !tbaa !2579
  %403 = load i32, i32* %pad, align 4, !dbg !16309, !tbaa !2436
  %cmp678 = icmp eq i32 %403, 48, !dbg !16309
  br i1 %cmp678, label %if.then683, label %lor.lhs.false680, !dbg !16309

lor.lhs.false680:                                 ; preds = %if.then674
  %404 = load i32, i32* %pad, align 4, !dbg !16309, !tbaa !2436
  %cmp681 = icmp eq i32 %404, 43, !dbg !16309
  br i1 %cmp681, label %if.then683, label %if.else685, !dbg !16308

if.then683:                                       ; preds = %lor.lhs.false680, %if.then674
  %405 = load i8*, i8** %p, align 8, !dbg !16309, !tbaa !2442
  %406 = load i64, i64* %_delta675, align 8, !dbg !16309, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %405, i8 48, i64 %406, i1 false), !dbg !16309
  %407 = load i64, i64* %_delta675, align 8, !dbg !16309, !tbaa !2579
  %408 = load i8*, i8** %p, align 8, !dbg !16309, !tbaa !2442
  %add.ptr684 = getelementptr inbounds i8, i8* %408, i64 %407, !dbg !16309
  store i8* %add.ptr684, i8** %p, align 8, !dbg !16309, !tbaa !2442
  br label %if.end687, !dbg !16309

if.else685:                                       ; preds = %lor.lhs.false680
  %409 = load i8*, i8** %p, align 8, !dbg !16309, !tbaa !2442
  %410 = load i64, i64* %_delta675, align 8, !dbg !16309, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %409, i8 32, i64 %410, i1 false), !dbg !16309
  %411 = load i64, i64* %_delta675, align 8, !dbg !16309, !tbaa !2579
  %412 = load i8*, i8** %p, align 8, !dbg !16309, !tbaa !2442
  %add.ptr686 = getelementptr inbounds i8, i8* %412, i64 %411, !dbg !16309
  store i8* %add.ptr686, i8** %p, align 8, !dbg !16309, !tbaa !2442
  br label %if.end687

if.end687:                                        ; preds = %if.else685, %if.then683
  br label %if.end688, !dbg !16308

if.end688:                                        ; preds = %if.end687, %land.lhs.true671, %if.then668
  %413 = load i8, i8* %sign_char, align 1, !dbg !16305, !tbaa !2497
  %414 = load i8*, i8** %p, align 8, !dbg !16305, !tbaa !2442
  store i8 %413, i8* %414, align 1, !dbg !16305, !tbaa !2497, !ctir !144
  %415 = load i64, i64* %_n646, align 8, !dbg !16305, !tbaa !2579
  %416 = load i8*, i8** %p, align 8, !dbg !16305, !tbaa !2442
  %add.ptr689 = getelementptr inbounds i8, i8* %416, i64 %415, !dbg !16305
  store i8* %add.ptr689, i8** %p, align 8, !dbg !16305, !tbaa !2442
  br label %if.end690, !dbg !16305

if.end690:                                        ; preds = %if.end688, %if.end666
  %417 = load i64, i64* %_incr655, align 8, !dbg !16295, !tbaa !2579
  %418 = load i64, i64* %i, align 8, !dbg !16295, !tbaa !2579
  %add691 = add i64 %418, %417, !dbg !16295
  store i64 %add691, i64* %i, align 8, !dbg !16295, !tbaa !2579
  br label %do.end693, !dbg !16295

do.end693:                                        ; preds = %if.end690
  br label %if.end694, !dbg !16295

if.end694:                                        ; preds = %do.end693, %if.else642
  br label %if.end695

if.end695:                                        ; preds = %if.end694, %if.end641
  br label %if.end696

if.end696:                                        ; preds = %if.end695, %if.end485
  br label %do.body697, !dbg !16311

do.body697:                                       ; preds = %if.end696
  call void @llvm.dbg.declare(metadata i64* %_n698, metadata !16312, metadata !DIExpression()), !dbg !16314
  %arraydecay699 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16314
  %add.ptr700 = getelementptr inbounds i8, i8* %arraydecay699, i64 23, !dbg !16314
  %419 = load i8*, i8** %bufp, align 8, !dbg !16314, !tbaa !2442
  %sub.ptr.lhs.cast701 = ptrtoint i8* %add.ptr700 to i64, !dbg !16314
  %sub.ptr.rhs.cast702 = ptrtoint i8* %419 to i64, !dbg !16314
  %sub.ptr.sub703 = sub i64 %sub.ptr.lhs.cast701, %sub.ptr.rhs.cast702, !dbg !16314
  store i64 %sub.ptr.sub703, i64* %_n698, align 8, !dbg !16314, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w704, metadata !16315, metadata !DIExpression()), !dbg !16314
  %420 = load i32, i32* %width.addr, align 4, !dbg !16314, !tbaa !2436
  %cmp705 = icmp slt i32 %420, 0, !dbg !16314
  br i1 %cmp705, label %cond.true707, label %cond.false708, !dbg !16314

cond.true707:                                     ; preds = %do.body697
  br label %cond.end709, !dbg !16314

cond.false708:                                    ; preds = %do.body697
  %421 = load i32, i32* %width.addr, align 4, !dbg !16314, !tbaa !2436
  br label %cond.end709, !dbg !16314

cond.end709:                                      ; preds = %cond.false708, %cond.true707
  %cond710 = phi i32 [ 0, %cond.true707 ], [ %421, %cond.false708 ], !dbg !16314
  %conv711 = sext i32 %cond710 to i64, !dbg !16314
  store i64 %conv711, i64* %_w704, align 8, !dbg !16314, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr712, metadata !16316, metadata !DIExpression()), !dbg !16314
  %422 = load i64, i64* %_n698, align 8, !dbg !16314, !tbaa !2579
  %423 = load i64, i64* %_w704, align 8, !dbg !16314, !tbaa !2579
  %cmp713 = icmp ult i64 %422, %423, !dbg !16314
  br i1 %cmp713, label %cond.true715, label %cond.false716, !dbg !16314

cond.true715:                                     ; preds = %cond.end709
  %424 = load i64, i64* %_w704, align 8, !dbg !16314, !tbaa !2579
  br label %cond.end717, !dbg !16314

cond.false716:                                    ; preds = %cond.end709
  %425 = load i64, i64* %_n698, align 8, !dbg !16314, !tbaa !2579
  br label %cond.end717, !dbg !16314

cond.end717:                                      ; preds = %cond.false716, %cond.true715
  %cond718 = phi i64 [ %424, %cond.true715 ], [ %425, %cond.false716 ], !dbg !16314
  store i64 %cond718, i64* %_incr712, align 8, !dbg !16314, !tbaa !2579
  %426 = load i64, i64* %_incr712, align 8, !dbg !16317, !tbaa !2579
  %427 = load i64, i64* %maxsize.addr, align 8, !dbg !16317, !tbaa !2579
  %428 = load i64, i64* %i, align 8, !dbg !16317, !tbaa !2579
  %sub719 = sub i64 %427, %428, !dbg !16317
  %cmp720 = icmp uge i64 %426, %sub719, !dbg !16317
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !16314

if.then722:                                       ; preds = %cond.end717
  store i64 0, i64* %retval, align 8, !dbg !16317
  br label %return, !dbg !16317

if.end723:                                        ; preds = %cond.end717
  %429 = load i8*, i8** %p, align 8, !dbg !16319, !tbaa !2442
  %tobool724 = icmp ne i8* %429, null, !dbg !16319
  br i1 %tobool724, label %if.then725, label %if.end757, !dbg !16314

if.then725:                                       ; preds = %if.end723
  %430 = load i32, i32* %digits, align 4, !dbg !16321, !tbaa !2436
  %cmp726 = icmp eq i32 %430, 0, !dbg !16321
  br i1 %cmp726, label %land.lhs.true728, label %if.end745, !dbg !16321

land.lhs.true728:                                 ; preds = %if.then725
  %431 = load i64, i64* %_n698, align 8, !dbg !16321, !tbaa !2579
  %432 = load i64, i64* %_w704, align 8, !dbg !16321, !tbaa !2579
  %cmp729 = icmp ult i64 %431, %432, !dbg !16321
  br i1 %cmp729, label %if.then731, label %if.end745, !dbg !16324

if.then731:                                       ; preds = %land.lhs.true728
  call void @llvm.dbg.declare(metadata i64* %_delta732, metadata !16325, metadata !DIExpression()), !dbg !16327
  %433 = load i32, i32* %width.addr, align 4, !dbg !16327, !tbaa !2436
  %conv733 = sext i32 %433 to i64, !dbg !16327
  %434 = load i64, i64* %_n698, align 8, !dbg !16327, !tbaa !2579
  %sub734 = sub i64 %conv733, %434, !dbg !16327
  store i64 %sub734, i64* %_delta732, align 8, !dbg !16327, !tbaa !2579
  %435 = load i32, i32* %pad, align 4, !dbg !16328, !tbaa !2436
  %cmp735 = icmp eq i32 %435, 48, !dbg !16328
  br i1 %cmp735, label %if.then740, label %lor.lhs.false737, !dbg !16328

lor.lhs.false737:                                 ; preds = %if.then731
  %436 = load i32, i32* %pad, align 4, !dbg !16328, !tbaa !2436
  %cmp738 = icmp eq i32 %436, 43, !dbg !16328
  br i1 %cmp738, label %if.then740, label %if.else742, !dbg !16327

if.then740:                                       ; preds = %lor.lhs.false737, %if.then731
  %437 = load i8*, i8** %p, align 8, !dbg !16328, !tbaa !2442
  %438 = load i64, i64* %_delta732, align 8, !dbg !16328, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %437, i8 48, i64 %438, i1 false), !dbg !16328
  %439 = load i64, i64* %_delta732, align 8, !dbg !16328, !tbaa !2579
  %440 = load i8*, i8** %p, align 8, !dbg !16328, !tbaa !2442
  %add.ptr741 = getelementptr inbounds i8, i8* %440, i64 %439, !dbg !16328
  store i8* %add.ptr741, i8** %p, align 8, !dbg !16328, !tbaa !2442
  br label %if.end744, !dbg !16328

if.else742:                                       ; preds = %lor.lhs.false737
  %441 = load i8*, i8** %p, align 8, !dbg !16328, !tbaa !2442
  %442 = load i64, i64* %_delta732, align 8, !dbg !16328, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %441, i8 32, i64 %442, i1 false), !dbg !16328
  %443 = load i64, i64* %_delta732, align 8, !dbg !16328, !tbaa !2579
  %444 = load i8*, i8** %p, align 8, !dbg !16328, !tbaa !2442
  %add.ptr743 = getelementptr inbounds i8, i8* %444, i64 %443, !dbg !16328
  store i8* %add.ptr743, i8** %p, align 8, !dbg !16328, !tbaa !2442
  br label %if.end744

if.end744:                                        ; preds = %if.else742, %if.then740
  br label %if.end745, !dbg !16327

if.end745:                                        ; preds = %if.end744, %land.lhs.true728, %if.then725
  %445 = load i8, i8* %to_lowcase, align 1, !dbg !16330, !tbaa !2461
  %tobool746 = trunc i8 %445 to i1, !dbg !16330
  br i1 %tobool746, label %if.then747, label %if.else749, !dbg !16324

if.then747:                                       ; preds = %if.end745
  %446 = load i8*, i8** %p, align 8, !dbg !16330, !tbaa !2442
  %447 = load i8*, i8** %bufp, align 8, !dbg !16330, !tbaa !2442
  %448 = load i64, i64* %_n698, align 8, !dbg !16330, !tbaa !2579
  %call748 = call i8* @memcpy_lowcase(i8* %446, i8* %447, i64 %448), !dbg !16330
  br label %if.end755, !dbg !16330

if.else749:                                       ; preds = %if.end745
  %449 = load i8, i8* %to_uppcase, align 1, !dbg !16332, !tbaa !2461
  %tobool750 = trunc i8 %449 to i1, !dbg !16332
  br i1 %tobool750, label %if.then751, label %if.else753, !dbg !16330

if.then751:                                       ; preds = %if.else749
  %450 = load i8*, i8** %p, align 8, !dbg !16332, !tbaa !2442
  %451 = load i8*, i8** %bufp, align 8, !dbg !16332, !tbaa !2442
  %452 = load i64, i64* %_n698, align 8, !dbg !16332, !tbaa !2579
  %call752 = call i8* @memcpy_uppcase(i8* %450, i8* %451, i64 %452), !dbg !16332
  br label %if.end754, !dbg !16332

if.else753:                                       ; preds = %if.else749
  %453 = load i8*, i8** %p, align 8, !dbg !16332, !tbaa !2442
  %454 = load i8*, i8** %bufp, align 8, !dbg !16332, !tbaa !2442
  %455 = load i64, i64* %_n698, align 8, !dbg !16332, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %453, i8* align 1 %454, i64 %455, i1 false), !dbg !16332
  br label %if.end754

if.end754:                                        ; preds = %if.else753, %if.then751
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.then747
  %456 = load i64, i64* %_n698, align 8, !dbg !16324, !tbaa !2579
  %457 = load i8*, i8** %p, align 8, !dbg !16324, !tbaa !2442
  %add.ptr756 = getelementptr inbounds i8, i8* %457, i64 %456, !dbg !16324
  store i8* %add.ptr756, i8** %p, align 8, !dbg !16324, !tbaa !2442
  br label %if.end757, !dbg !16324

if.end757:                                        ; preds = %if.end755, %if.end723
  %458 = load i64, i64* %_incr712, align 8, !dbg !16314, !tbaa !2579
  %459 = load i64, i64* %i, align 8, !dbg !16314, !tbaa !2579
  %add758 = add i64 %459, %458, !dbg !16314
  store i64 %add758, i64* %i, align 8, !dbg !16314, !tbaa !2579
  br label %do.end760, !dbg !16314

do.end760:                                        ; preds = %if.end757
  br label %sw.epilog1435, !dbg !16334

sw.bb761:                                         ; preds = %sw.epilog87
  %460 = load i32, i32* %modifier, align 4, !dbg !16335, !tbaa !2436
  %cmp762 = icmp ne i32 %460, 0, !dbg !16337
  br i1 %cmp762, label %if.then764, label %if.end765, !dbg !16338

if.then764:                                       ; preds = %sw.bb761
  br label %bad_format, !dbg !16339

if.end765:                                        ; preds = %sw.bb761
  %461 = load i32, i32* %pad, align 4, !dbg !16340, !tbaa !2436
  %cmp766 = icmp eq i32 %461, 0, !dbg !16342
  br i1 %cmp766, label %land.lhs.true768, label %if.else772, !dbg !16343

land.lhs.true768:                                 ; preds = %if.end765
  %462 = load i32, i32* %width.addr, align 4, !dbg !16344, !tbaa !2436
  %cmp769 = icmp slt i32 %462, 0, !dbg !16345
  br i1 %cmp769, label %if.then771, label %if.else772, !dbg !16346

if.then771:                                       ; preds = %land.lhs.true768
  store i32 43, i32* %pad, align 4, !dbg !16347, !tbaa !2436
  store i32 4, i32* %subwidth, align 4, !dbg !16349, !tbaa !2436
  br label %if.end778, !dbg !16350

if.else772:                                       ; preds = %land.lhs.true768, %if.end765
  %463 = load i32, i32* %width.addr, align 4, !dbg !16351, !tbaa !2436
  %sub773 = sub nsw i32 %463, 6, !dbg !16353
  store i32 %sub773, i32* %subwidth, align 4, !dbg !16354, !tbaa !2436
  %464 = load i32, i32* %subwidth, align 4, !dbg !16355, !tbaa !2436
  %cmp774 = icmp slt i32 %464, 0, !dbg !16357
  br i1 %cmp774, label %if.then776, label %if.end777, !dbg !16358

if.then776:                                       ; preds = %if.else772
  store i32 0, i32* %subwidth, align 4, !dbg !16359, !tbaa !2436
  br label %if.end777, !dbg !16360

if.end777:                                        ; preds = %if.then776, %if.else772
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.then771
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.363, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16361, !tbaa !2442
  br label %subformat_width, !dbg !16362

sw.bb779:                                         ; preds = %sw.epilog87
  %465 = load i32, i32* %modifier, align 4, !dbg !16363, !tbaa !2436
  %cmp780 = icmp eq i32 %465, 69, !dbg !16365
  br i1 %cmp780, label %if.then782, label %if.end783, !dbg !16366

if.then782:                                       ; preds = %sw.bb779
  br label %bad_format, !dbg !16367

if.end783:                                        ; preds = %sw.bb779
  br label %do.body784, !dbg !16368

do.body784:                                       ; preds = %if.end783
  store i32 2, i32* %digits, align 4, !dbg !16369, !tbaa !2436
  %466 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16369, !tbaa !2442
  %tm_hour785 = getelementptr inbounds %struct.tm, %struct.tm* %466, i32 0, i32 2, !dbg !16369, !ctir !1919
  %467 = load i32, i32* %tm_hour785, align 8, !dbg !16369, !tbaa !15631, !ctir !27
  store i32 %467, i32* %number_value, align 4, !dbg !16369, !tbaa !2436
  br label %do_number, !dbg !16369

do.end787:                                        ; No predecessors!
  br label %sw.bb788, !dbg !16369

sw.bb788:                                         ; preds = %sw.epilog87, %do.end787
  %468 = load i32, i32* %modifier, align 4, !dbg !16371, !tbaa !2436
  %cmp789 = icmp eq i32 %468, 69, !dbg !16373
  br i1 %cmp789, label %if.then791, label %if.end792, !dbg !16374

if.then791:                                       ; preds = %sw.bb788
  br label %bad_format, !dbg !16375

if.end792:                                        ; preds = %sw.bb788
  br label %do.body793, !dbg !16376

do.body793:                                       ; preds = %if.end792
  store i32 2, i32* %digits, align 4, !dbg !16377, !tbaa !2436
  %469 = load i32, i32* %hour12, align 4, !dbg !16377, !tbaa !2436
  store i32 %469, i32* %number_value, align 4, !dbg !16377, !tbaa !2436
  br label %do_number, !dbg !16377

do.end795:                                        ; No predecessors!
  br label %sw.bb796, !dbg !16377

sw.bb796:                                         ; preds = %sw.epilog87, %do.end795
  %470 = load i32, i32* %modifier, align 4, !dbg !16379, !tbaa !2436
  %cmp797 = icmp eq i32 %470, 69, !dbg !16381
  br i1 %cmp797, label %if.then799, label %if.end800, !dbg !16382

if.then799:                                       ; preds = %sw.bb796
  br label %bad_format, !dbg !16383

if.end800:                                        ; preds = %sw.bb796
  br label %do.body801, !dbg !16384

do.body801:                                       ; preds = %if.end800
  store i32 2, i32* %digits, align 4, !dbg !16385, !tbaa !2436
  %471 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16385, !tbaa !2442
  %tm_hour802 = getelementptr inbounds %struct.tm, %struct.tm* %471, i32 0, i32 2, !dbg !16385, !ctir !1919
  %472 = load i32, i32* %tm_hour802, align 8, !dbg !16385, !tbaa !15631, !ctir !27
  store i32 %472, i32* %number_value, align 4, !dbg !16385, !tbaa !2436
  br label %do_number_spacepad, !dbg !16385

do.end804:                                        ; No predecessors!
  br label %sw.bb805, !dbg !16385

sw.bb805:                                         ; preds = %sw.epilog87, %do.end804
  %473 = load i32, i32* %modifier, align 4, !dbg !16387, !tbaa !2436
  %cmp806 = icmp eq i32 %473, 69, !dbg !16389
  br i1 %cmp806, label %if.then808, label %if.end809, !dbg !16390

if.then808:                                       ; preds = %sw.bb805
  br label %bad_format, !dbg !16391

if.end809:                                        ; preds = %sw.bb805
  br label %do.body810, !dbg !16392

do.body810:                                       ; preds = %if.end809
  store i32 2, i32* %digits, align 4, !dbg !16393, !tbaa !2436
  %474 = load i32, i32* %hour12, align 4, !dbg !16393, !tbaa !2436
  store i32 %474, i32* %number_value, align 4, !dbg !16393, !tbaa !2436
  br label %do_number_spacepad, !dbg !16393

do.end812:                                        ; No predecessors!
  br label %sw.bb813, !dbg !16393

sw.bb813:                                         ; preds = %sw.epilog87, %do.end812
  %475 = load i32, i32* %modifier, align 4, !dbg !16395, !tbaa !2436
  %cmp814 = icmp eq i32 %475, 69, !dbg !16397
  br i1 %cmp814, label %if.then816, label %if.end817, !dbg !16398

if.then816:                                       ; preds = %sw.bb813
  br label %bad_format, !dbg !16399

if.end817:                                        ; preds = %sw.bb813
  br label %do.body818, !dbg !16400

do.body818:                                       ; preds = %if.end817
  store i32 3, i32* %digits, align 4, !dbg !16401, !tbaa !2436
  %476 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16401, !tbaa !2442
  %tm_yday = getelementptr inbounds %struct.tm, %struct.tm* %476, i32 0, i32 7, !dbg !16401, !ctir !1919
  %477 = load i32, i32* %tm_yday, align 4, !dbg !16401, !tbaa !16403, !ctir !27
  %cmp819 = icmp slt i32 %477, -1, !dbg !16401
  %frombool821 = zext i1 %cmp819 to i8, !dbg !16401
  store i8 %frombool821, i8* %negative_number, align 1, !dbg !16401, !tbaa !2461
  %478 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16401, !tbaa !2442
  %tm_yday822 = getelementptr inbounds %struct.tm, %struct.tm* %478, i32 0, i32 7, !dbg !16401, !ctir !1919
  %479 = load i32, i32* %tm_yday822, align 4, !dbg !16401, !tbaa !16403, !ctir !27
  %add823 = add i32 %479, 1, !dbg !16401
  store i32 %add823, i32* %u_number_value, align 4, !dbg !16401, !tbaa !2436
  br label %do_signed_number, !dbg !16401

do.end825:                                        ; No predecessors!
  br label %sw.bb826, !dbg !16401

sw.bb826:                                         ; preds = %sw.epilog87, %do.end825
  %480 = load i32, i32* %modifier, align 4, !dbg !16404, !tbaa !2436
  %cmp827 = icmp eq i32 %480, 69, !dbg !16406
  br i1 %cmp827, label %if.then829, label %if.end830, !dbg !16407

if.then829:                                       ; preds = %sw.bb826
  br label %bad_format, !dbg !16408

if.end830:                                        ; preds = %sw.bb826
  br label %do.body831, !dbg !16409

do.body831:                                       ; preds = %if.end830
  store i32 2, i32* %digits, align 4, !dbg !16410, !tbaa !2436
  %481 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16410, !tbaa !2442
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %481, i32 0, i32 1, !dbg !16410, !ctir !1919
  %482 = load i32, i32* %tm_min, align 4, !dbg !16410, !tbaa !16412, !ctir !27
  store i32 %482, i32* %number_value, align 4, !dbg !16410, !tbaa !2436
  br label %do_number, !dbg !16410

do.end833:                                        ; No predecessors!
  br label %sw.bb834, !dbg !16410

sw.bb834:                                         ; preds = %sw.epilog87, %do.end833
  %483 = load i32, i32* %modifier, align 4, !dbg !16413, !tbaa !2436
  %cmp835 = icmp eq i32 %483, 69, !dbg !16415
  br i1 %cmp835, label %if.then837, label %if.end838, !dbg !16416

if.then837:                                       ; preds = %sw.bb834
  br label %bad_format, !dbg !16417

if.end838:                                        ; preds = %sw.bb834
  br label %do.body839, !dbg !16418

do.body839:                                       ; preds = %if.end838
  store i32 2, i32* %digits, align 4, !dbg !16419, !tbaa !2436
  %484 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16419, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %484, i32 0, i32 4, !dbg !16419, !ctir !1919
  %485 = load i32, i32* %tm_mon, align 8, !dbg !16419, !tbaa !6836, !ctir !27
  %cmp840 = icmp slt i32 %485, -1, !dbg !16419
  %frombool842 = zext i1 %cmp840 to i8, !dbg !16419
  store i8 %frombool842, i8* %negative_number, align 1, !dbg !16419, !tbaa !2461
  %486 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16419, !tbaa !2442
  %tm_mon843 = getelementptr inbounds %struct.tm, %struct.tm* %486, i32 0, i32 4, !dbg !16419, !ctir !1919
  %487 = load i32, i32* %tm_mon843, align 8, !dbg !16419, !tbaa !6836, !ctir !27
  %add844 = add i32 %487, 1, !dbg !16419
  store i32 %add844, i32* %u_number_value, align 4, !dbg !16419, !tbaa !2436
  br label %do_signed_number, !dbg !16419

do.end846:                                        ; No predecessors!
  br label %sw.bb847, !dbg !16419

sw.bb847:                                         ; preds = %sw.epilog87, %do.end846
  %488 = load i32, i32* %modifier, align 4, !dbg !16421, !tbaa !2436
  %cmp848 = icmp eq i32 %488, 69, !dbg !16423
  br i1 %cmp848, label %if.then850, label %if.end851, !dbg !16424

if.then850:                                       ; preds = %sw.bb847
  br label %bad_format, !dbg !16425

if.end851:                                        ; preds = %sw.bb847
  %489 = load i32, i32* %ns.addr, align 4, !dbg !16426, !tbaa !2436
  store i32 %489, i32* %number_value, align 4, !dbg !16427, !tbaa !2436
  %490 = load i32, i32* %width.addr, align 4, !dbg !16428, !tbaa !2436
  %cmp852 = icmp eq i32 %490, -1, !dbg !16430
  br i1 %cmp852, label %if.then854, label %if.else855, !dbg !16431

if.then854:                                       ; preds = %if.end851
  store i32 9, i32* %width.addr, align 4, !dbg !16432, !tbaa !2436
  br label %if.end861, !dbg !16433

if.else855:                                       ; preds = %if.end851
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16434, metadata !DIExpression()), !dbg !16436
  %491 = load i32, i32* %width.addr, align 4, !dbg !16437, !tbaa !2436
  store i32 %491, i32* %j, align 4, !dbg !16439, !tbaa !2436
  br label %for.cond856, !dbg !16440

for.cond856:                                      ; preds = %for.inc, %if.else855
  %492 = load i32, i32* %j, align 4, !dbg !16441, !tbaa !2436
  %cmp857 = icmp slt i32 %492, 9, !dbg !16443
  br i1 %cmp857, label %for.body859, label %for.end, !dbg !16444

for.body859:                                      ; preds = %for.cond856
  %493 = load i32, i32* %number_value, align 4, !dbg !16445, !tbaa !2436
  %div860 = sdiv i32 %493, 10, !dbg !16445
  store i32 %div860, i32* %number_value, align 4, !dbg !16445, !tbaa !2436
  br label %for.inc, !dbg !16446

for.inc:                                          ; preds = %for.body859
  %494 = load i32, i32* %j, align 4, !dbg !16447, !tbaa !2436
  %inc = add nsw i32 %494, 1, !dbg !16447
  store i32 %inc, i32* %j, align 4, !dbg !16447, !tbaa !2436
  br label %for.cond856, !dbg !16448, !llvm.loop !16449

for.end:                                          ; preds = %for.cond856
  br label %if.end861

if.end861:                                        ; preds = %for.end, %if.then854
  br label %do.body862, !dbg !16451

do.body862:                                       ; preds = %if.end861
  %495 = load i32, i32* %width.addr, align 4, !dbg !16452, !tbaa !2436
  store i32 %495, i32* %digits, align 4, !dbg !16452, !tbaa !2436
  %496 = load i32, i32* %number_value, align 4, !dbg !16452, !tbaa !2436
  store i32 %496, i32* %number_value, align 4, !dbg !16452, !tbaa !2436
  br label %do_number, !dbg !16452

do.end864:                                        ; No predecessors!
  br label %sw.bb865, !dbg !16452

sw.bb865:                                         ; preds = %sw.epilog87, %do.end864
  br label %do.body866, !dbg !16454

do.body866:                                       ; preds = %sw.bb865
  call void @llvm.dbg.declare(metadata i64* %_n867, metadata !16455, metadata !DIExpression()), !dbg !16457
  store i64 1, i64* %_n867, align 8, !dbg !16457, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w868, metadata !16458, metadata !DIExpression()), !dbg !16457
  %497 = load i32, i32* %width.addr, align 4, !dbg !16457, !tbaa !2436
  %cmp869 = icmp slt i32 %497, 0, !dbg !16457
  br i1 %cmp869, label %cond.true871, label %cond.false872, !dbg !16457

cond.true871:                                     ; preds = %do.body866
  br label %cond.end873, !dbg !16457

cond.false872:                                    ; preds = %do.body866
  %498 = load i32, i32* %width.addr, align 4, !dbg !16457, !tbaa !2436
  br label %cond.end873, !dbg !16457

cond.end873:                                      ; preds = %cond.false872, %cond.true871
  %cond874 = phi i32 [ 0, %cond.true871 ], [ %498, %cond.false872 ], !dbg !16457
  %conv875 = sext i32 %cond874 to i64, !dbg !16457
  store i64 %conv875, i64* %_w868, align 8, !dbg !16457, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr876, metadata !16459, metadata !DIExpression()), !dbg !16457
  %499 = load i64, i64* %_n867, align 8, !dbg !16457, !tbaa !2579
  %500 = load i64, i64* %_w868, align 8, !dbg !16457, !tbaa !2579
  %cmp877 = icmp ult i64 %499, %500, !dbg !16457
  br i1 %cmp877, label %cond.true879, label %cond.false880, !dbg !16457

cond.true879:                                     ; preds = %cond.end873
  %501 = load i64, i64* %_w868, align 8, !dbg !16457, !tbaa !2579
  br label %cond.end881, !dbg !16457

cond.false880:                                    ; preds = %cond.end873
  %502 = load i64, i64* %_n867, align 8, !dbg !16457, !tbaa !2579
  br label %cond.end881, !dbg !16457

cond.end881:                                      ; preds = %cond.false880, %cond.true879
  %cond882 = phi i64 [ %501, %cond.true879 ], [ %502, %cond.false880 ], !dbg !16457
  store i64 %cond882, i64* %_incr876, align 8, !dbg !16457, !tbaa !2579
  %503 = load i64, i64* %_incr876, align 8, !dbg !16460, !tbaa !2579
  %504 = load i64, i64* %maxsize.addr, align 8, !dbg !16460, !tbaa !2579
  %505 = load i64, i64* %i, align 8, !dbg !16460, !tbaa !2579
  %sub883 = sub i64 %504, %505, !dbg !16460
  %cmp884 = icmp uge i64 %503, %sub883, !dbg !16460
  br i1 %cmp884, label %if.then886, label %if.end887, !dbg !16457

if.then886:                                       ; preds = %cond.end881
  store i64 0, i64* %retval, align 8, !dbg !16460
  br label %return, !dbg !16460

if.end887:                                        ; preds = %cond.end881
  %506 = load i8*, i8** %p, align 8, !dbg !16462, !tbaa !2442
  %tobool888 = icmp ne i8* %506, null, !dbg !16462
  br i1 %tobool888, label %if.then889, label %if.end911, !dbg !16457

if.then889:                                       ; preds = %if.end887
  %507 = load i32, i32* %digits, align 4, !dbg !16464, !tbaa !2436
  %cmp890 = icmp eq i32 %507, 0, !dbg !16464
  br i1 %cmp890, label %land.lhs.true892, label %if.end909, !dbg !16464

land.lhs.true892:                                 ; preds = %if.then889
  %508 = load i64, i64* %_n867, align 8, !dbg !16464, !tbaa !2579
  %509 = load i64, i64* %_w868, align 8, !dbg !16464, !tbaa !2579
  %cmp893 = icmp ult i64 %508, %509, !dbg !16464
  br i1 %cmp893, label %if.then895, label %if.end909, !dbg !16467

if.then895:                                       ; preds = %land.lhs.true892
  call void @llvm.dbg.declare(metadata i64* %_delta896, metadata !16468, metadata !DIExpression()), !dbg !16470
  %510 = load i32, i32* %width.addr, align 4, !dbg !16470, !tbaa !2436
  %conv897 = sext i32 %510 to i64, !dbg !16470
  %511 = load i64, i64* %_n867, align 8, !dbg !16470, !tbaa !2579
  %sub898 = sub i64 %conv897, %511, !dbg !16470
  store i64 %sub898, i64* %_delta896, align 8, !dbg !16470, !tbaa !2579
  %512 = load i32, i32* %pad, align 4, !dbg !16471, !tbaa !2436
  %cmp899 = icmp eq i32 %512, 48, !dbg !16471
  br i1 %cmp899, label %if.then904, label %lor.lhs.false901, !dbg !16471

lor.lhs.false901:                                 ; preds = %if.then895
  %513 = load i32, i32* %pad, align 4, !dbg !16471, !tbaa !2436
  %cmp902 = icmp eq i32 %513, 43, !dbg !16471
  br i1 %cmp902, label %if.then904, label %if.else906, !dbg !16470

if.then904:                                       ; preds = %lor.lhs.false901, %if.then895
  %514 = load i8*, i8** %p, align 8, !dbg !16471, !tbaa !2442
  %515 = load i64, i64* %_delta896, align 8, !dbg !16471, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %514, i8 48, i64 %515, i1 false), !dbg !16471
  %516 = load i64, i64* %_delta896, align 8, !dbg !16471, !tbaa !2579
  %517 = load i8*, i8** %p, align 8, !dbg !16471, !tbaa !2442
  %add.ptr905 = getelementptr inbounds i8, i8* %517, i64 %516, !dbg !16471
  store i8* %add.ptr905, i8** %p, align 8, !dbg !16471, !tbaa !2442
  br label %if.end908, !dbg !16471

if.else906:                                       ; preds = %lor.lhs.false901
  %518 = load i8*, i8** %p, align 8, !dbg !16471, !tbaa !2442
  %519 = load i64, i64* %_delta896, align 8, !dbg !16471, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %518, i8 32, i64 %519, i1 false), !dbg !16471
  %520 = load i64, i64* %_delta896, align 8, !dbg !16471, !tbaa !2579
  %521 = load i8*, i8** %p, align 8, !dbg !16471, !tbaa !2442
  %add.ptr907 = getelementptr inbounds i8, i8* %521, i64 %520, !dbg !16471
  store i8* %add.ptr907, i8** %p, align 8, !dbg !16471, !tbaa !2442
  br label %if.end908

if.end908:                                        ; preds = %if.else906, %if.then904
  br label %if.end909, !dbg !16470

if.end909:                                        ; preds = %if.end908, %land.lhs.true892, %if.then889
  %522 = load i8*, i8** %p, align 8, !dbg !16467, !tbaa !2442
  store i8 10, i8* %522, align 1, !dbg !16467, !tbaa !2497, !ctir !144
  %523 = load i64, i64* %_n867, align 8, !dbg !16467, !tbaa !2579
  %524 = load i8*, i8** %p, align 8, !dbg !16467, !tbaa !2442
  %add.ptr910 = getelementptr inbounds i8, i8* %524, i64 %523, !dbg !16467
  store i8* %add.ptr910, i8** %p, align 8, !dbg !16467, !tbaa !2442
  br label %if.end911, !dbg !16467

if.end911:                                        ; preds = %if.end909, %if.end887
  %525 = load i64, i64* %_incr876, align 8, !dbg !16457, !tbaa !2579
  %526 = load i64, i64* %i, align 8, !dbg !16457, !tbaa !2579
  %add912 = add i64 %526, %525, !dbg !16457
  store i64 %add912, i64* %i, align 8, !dbg !16457, !tbaa !2579
  br label %do.end914, !dbg !16457

do.end914:                                        ; preds = %if.end911
  br label %sw.epilog1435, !dbg !16473

sw.bb915:                                         ; preds = %sw.epilog87
  store i8 1, i8* %to_lowcase, align 1, !dbg !16474, !tbaa !2461
  store i32 112, i32* %format_char, align 4, !dbg !16475, !tbaa !2436
  br label %sw.bb916, !dbg !16476

sw.bb916:                                         ; preds = %sw.epilog87, %sw.bb915
  %527 = load i8, i8* %change_case, align 1, !dbg !16477, !tbaa !2461
  %tobool917 = trunc i8 %527 to i1, !dbg !16477
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !16479

if.then918:                                       ; preds = %sw.bb916
  store i8 0, i8* %to_uppcase, align 1, !dbg !16480, !tbaa !2461
  store i8 1, i8* %to_lowcase, align 1, !dbg !16482, !tbaa !2461
  br label %if.end919, !dbg !16483

if.end919:                                        ; preds = %if.then918, %sw.bb916
  br label %underlying_strftime, !dbg !16484

sw.bb920:                                         ; preds = %sw.epilog87
  br label %do.body921, !dbg !16485

do.body921:                                       ; preds = %sw.bb920
  store i32 1, i32* %digits, align 4, !dbg !16486, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16486, !tbaa !2461
  %528 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16486, !tbaa !2442
  %tm_mon922 = getelementptr inbounds %struct.tm, %struct.tm* %528, i32 0, i32 4, !dbg !16486, !ctir !1919
  %529 = load i32, i32* %tm_mon922, align 8, !dbg !16486, !tbaa !6836, !ctir !27
  %mul923 = mul nsw i32 %529, 11, !dbg !16486
  %shr924 = ashr i32 %mul923, 5, !dbg !16486
  %add925 = add nsw i32 %shr924, 1, !dbg !16486
  store i32 %add925, i32* %u_number_value, align 4, !dbg !16486, !tbaa !2436
  br label %do_signed_number, !dbg !16486

do.end927:                                        ; No predecessors!
  br label %sw.epilog1435, !dbg !16488

sw.bb928:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.364, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16489, !tbaa !2442
  br label %subformat, !dbg !16490

sw.bb929:                                         ; preds = %sw.epilog87
  br label %underlying_strftime, !dbg !16491

sw.bb930:                                         ; preds = %sw.epilog87
  %530 = load i32, i32* %modifier, align 4, !dbg !16492, !tbaa !2436
  %cmp931 = icmp eq i32 %530, 69, !dbg !16494
  br i1 %cmp931, label %if.then933, label %if.end934, !dbg !16495

if.then933:                                       ; preds = %sw.bb930
  br label %bad_format, !dbg !16496

if.end934:                                        ; preds = %sw.bb930
  br label %do.body935, !dbg !16497

do.body935:                                       ; preds = %if.end934
  store i32 2, i32* %digits, align 4, !dbg !16498, !tbaa !2436
  %531 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16498, !tbaa !2442
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %531, i32 0, i32 0, !dbg !16498, !ctir !1919
  %532 = load i32, i32* %tm_sec, align 8, !dbg !16498, !tbaa !16500, !ctir !27
  store i32 %532, i32* %number_value, align 4, !dbg !16498, !tbaa !2436
  br label %do_number, !dbg !16498

do.end937:                                        ; No predecessors!
  br label %sw.bb938, !dbg !16498

sw.bb938:                                         ; preds = %sw.epilog87, %do.end937
  call void @llvm.dbg.declare(metadata %struct.tm* %ltm, metadata !16501, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.declare(metadata i64* %t, metadata !16504, metadata !DIExpression()), !dbg !16505
  %533 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16506, !tbaa !2442
  %534 = bitcast %struct.tm* %ltm to i8*, !dbg !16507
  %535 = bitcast %struct.tm* %533 to i8*, !dbg !16507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %534, i8* align 8 %535, i64 56, i1 false), !dbg !16507, !tbaa.struct !16508
  %536 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !16509, !tbaa !2442
  %call939 = call i64 @mktime_z(%struct.tm_zone* %536, %struct.tm* %ltm), !dbg !16510
  store i64 %call939, i64* %t, align 8, !dbg !16511, !tbaa !2579
  %arraydecay940 = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i64 0, i64 0, !dbg !16512
  %add.ptr941 = getelementptr inbounds i8, i8* %arraydecay940, i64 23, !dbg !16513
  store i8* %add.ptr941, i8** %bufp, align 8, !dbg !16514, !tbaa !2442
  %537 = load i64, i64* %t, align 8, !dbg !16515, !tbaa !2579
  %cmp942 = icmp slt i64 %537, 0, !dbg !16516
  %frombool944 = zext i1 %cmp942 to i8, !dbg !16517
  store i8 %frombool944, i8* %negative_number, align 1, !dbg !16517, !tbaa !2461
  br label %do.body945, !dbg !16518

do.body945:                                       ; preds = %do.cond959, %sw.bb938
  call void @llvm.dbg.declare(metadata i32* %d, metadata !16519, metadata !DIExpression()), !dbg !16521
  %538 = load i64, i64* %t, align 8, !dbg !16522, !tbaa !2579
  %rem946 = srem i64 %538, 10, !dbg !16523
  %conv947 = trunc i64 %rem946 to i32, !dbg !16522
  store i32 %conv947, i32* %d, align 4, !dbg !16521, !tbaa !2436
  %539 = load i64, i64* %t, align 8, !dbg !16524, !tbaa !2579
  %div948 = sdiv i64 %539, 10, !dbg !16524
  store i64 %div948, i64* %t, align 8, !dbg !16524, !tbaa !2579
  %540 = load i8, i8* %negative_number, align 1, !dbg !16525, !tbaa !2461
  %tobool949 = trunc i8 %540 to i1, !dbg !16525
  br i1 %tobool949, label %cond.true951, label %cond.false953, !dbg !16525

cond.true951:                                     ; preds = %do.body945
  %541 = load i32, i32* %d, align 4, !dbg !16526, !tbaa !2436
  %sub952 = sub nsw i32 0, %541, !dbg !16527
  br label %cond.end954, !dbg !16525

cond.false953:                                    ; preds = %do.body945
  %542 = load i32, i32* %d, align 4, !dbg !16528, !tbaa !2436
  br label %cond.end954, !dbg !16525

cond.end954:                                      ; preds = %cond.false953, %cond.true951
  %cond955 = phi i32 [ %sub952, %cond.true951 ], [ %542, %cond.false953 ], !dbg !16525
  %add956 = add nsw i32 %cond955, 48, !dbg !16529
  %conv957 = trunc i32 %add956 to i8, !dbg !16530
  %543 = load i8*, i8** %bufp, align 8, !dbg !16531, !tbaa !2442
  %incdec.ptr958 = getelementptr inbounds i8, i8* %543, i32 -1, !dbg !16531
  store i8* %incdec.ptr958, i8** %bufp, align 8, !dbg !16531, !tbaa !2442
  store i8 %conv957, i8* %incdec.ptr958, align 1, !dbg !16532, !tbaa !2497, !ctir !144
  br label %do.cond959, !dbg !16533

do.cond959:                                       ; preds = %cond.end954
  %544 = load i64, i64* %t, align 8, !dbg !16534, !tbaa !2579
  %cmp960 = icmp ne i64 %544, 0, !dbg !16535
  br i1 %cmp960, label %do.body945, label %do.end962, !dbg !16533, !llvm.loop !16536

do.end962:                                        ; preds = %do.cond959
  store i32 1, i32* %digits, align 4, !dbg !16538, !tbaa !2436
  store i8 0, i8* %always_output_a_sign, align 1, !dbg !16539, !tbaa !2461
  br label %do_number_sign_and_padding, !dbg !16540

sw.bb963:                                         ; preds = %sw.epilog87
  %545 = load i32, i32* %modifier, align 4, !dbg !16541, !tbaa !2436
  %cmp964 = icmp eq i32 %545, 79, !dbg !16543
  br i1 %cmp964, label %if.then966, label %if.end967, !dbg !16544

if.then966:                                       ; preds = %sw.bb963
  br label %bad_format, !dbg !16545

if.end967:                                        ; preds = %sw.bb963
  br label %underlying_strftime, !dbg !16546

sw.bb968:                                         ; preds = %sw.epilog87
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.365, i64 0, i64 0), i8** %subfmt, align 8, !dbg !16547, !tbaa !2442
  br label %subformat, !dbg !16548

sw.bb969:                                         ; preds = %sw.epilog87
  br label %do.body970, !dbg !16549

do.body970:                                       ; preds = %sw.bb969
  call void @llvm.dbg.declare(metadata i64* %_n971, metadata !16550, metadata !DIExpression()), !dbg !16552
  store i64 1, i64* %_n971, align 8, !dbg !16552, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w972, metadata !16553, metadata !DIExpression()), !dbg !16552
  %546 = load i32, i32* %width.addr, align 4, !dbg !16552, !tbaa !2436
  %cmp973 = icmp slt i32 %546, 0, !dbg !16552
  br i1 %cmp973, label %cond.true975, label %cond.false976, !dbg !16552

cond.true975:                                     ; preds = %do.body970
  br label %cond.end977, !dbg !16552

cond.false976:                                    ; preds = %do.body970
  %547 = load i32, i32* %width.addr, align 4, !dbg !16552, !tbaa !2436
  br label %cond.end977, !dbg !16552

cond.end977:                                      ; preds = %cond.false976, %cond.true975
  %cond978 = phi i32 [ 0, %cond.true975 ], [ %547, %cond.false976 ], !dbg !16552
  %conv979 = sext i32 %cond978 to i64, !dbg !16552
  store i64 %conv979, i64* %_w972, align 8, !dbg !16552, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr980, metadata !16554, metadata !DIExpression()), !dbg !16552
  %548 = load i64, i64* %_n971, align 8, !dbg !16552, !tbaa !2579
  %549 = load i64, i64* %_w972, align 8, !dbg !16552, !tbaa !2579
  %cmp981 = icmp ult i64 %548, %549, !dbg !16552
  br i1 %cmp981, label %cond.true983, label %cond.false984, !dbg !16552

cond.true983:                                     ; preds = %cond.end977
  %550 = load i64, i64* %_w972, align 8, !dbg !16552, !tbaa !2579
  br label %cond.end985, !dbg !16552

cond.false984:                                    ; preds = %cond.end977
  %551 = load i64, i64* %_n971, align 8, !dbg !16552, !tbaa !2579
  br label %cond.end985, !dbg !16552

cond.end985:                                      ; preds = %cond.false984, %cond.true983
  %cond986 = phi i64 [ %550, %cond.true983 ], [ %551, %cond.false984 ], !dbg !16552
  store i64 %cond986, i64* %_incr980, align 8, !dbg !16552, !tbaa !2579
  %552 = load i64, i64* %_incr980, align 8, !dbg !16555, !tbaa !2579
  %553 = load i64, i64* %maxsize.addr, align 8, !dbg !16555, !tbaa !2579
  %554 = load i64, i64* %i, align 8, !dbg !16555, !tbaa !2579
  %sub987 = sub i64 %553, %554, !dbg !16555
  %cmp988 = icmp uge i64 %552, %sub987, !dbg !16555
  br i1 %cmp988, label %if.then990, label %if.end991, !dbg !16552

if.then990:                                       ; preds = %cond.end985
  store i64 0, i64* %retval, align 8, !dbg !16555
  br label %return, !dbg !16555

if.end991:                                        ; preds = %cond.end985
  %555 = load i8*, i8** %p, align 8, !dbg !16557, !tbaa !2442
  %tobool992 = icmp ne i8* %555, null, !dbg !16557
  br i1 %tobool992, label %if.then993, label %if.end1015, !dbg !16552

if.then993:                                       ; preds = %if.end991
  %556 = load i32, i32* %digits, align 4, !dbg !16559, !tbaa !2436
  %cmp994 = icmp eq i32 %556, 0, !dbg !16559
  br i1 %cmp994, label %land.lhs.true996, label %if.end1013, !dbg !16559

land.lhs.true996:                                 ; preds = %if.then993
  %557 = load i64, i64* %_n971, align 8, !dbg !16559, !tbaa !2579
  %558 = load i64, i64* %_w972, align 8, !dbg !16559, !tbaa !2579
  %cmp997 = icmp ult i64 %557, %558, !dbg !16559
  br i1 %cmp997, label %if.then999, label %if.end1013, !dbg !16562

if.then999:                                       ; preds = %land.lhs.true996
  call void @llvm.dbg.declare(metadata i64* %_delta1000, metadata !16563, metadata !DIExpression()), !dbg !16565
  %559 = load i32, i32* %width.addr, align 4, !dbg !16565, !tbaa !2436
  %conv1001 = sext i32 %559 to i64, !dbg !16565
  %560 = load i64, i64* %_n971, align 8, !dbg !16565, !tbaa !2579
  %sub1002 = sub i64 %conv1001, %560, !dbg !16565
  store i64 %sub1002, i64* %_delta1000, align 8, !dbg !16565, !tbaa !2579
  %561 = load i32, i32* %pad, align 4, !dbg !16566, !tbaa !2436
  %cmp1003 = icmp eq i32 %561, 48, !dbg !16566
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005, !dbg !16566

lor.lhs.false1005:                                ; preds = %if.then999
  %562 = load i32, i32* %pad, align 4, !dbg !16566, !tbaa !2436
  %cmp1006 = icmp eq i32 %562, 43, !dbg !16566
  br i1 %cmp1006, label %if.then1008, label %if.else1010, !dbg !16565

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.then999
  %563 = load i8*, i8** %p, align 8, !dbg !16566, !tbaa !2442
  %564 = load i64, i64* %_delta1000, align 8, !dbg !16566, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %563, i8 48, i64 %564, i1 false), !dbg !16566
  %565 = load i64, i64* %_delta1000, align 8, !dbg !16566, !tbaa !2579
  %566 = load i8*, i8** %p, align 8, !dbg !16566, !tbaa !2442
  %add.ptr1009 = getelementptr inbounds i8, i8* %566, i64 %565, !dbg !16566
  store i8* %add.ptr1009, i8** %p, align 8, !dbg !16566, !tbaa !2442
  br label %if.end1012, !dbg !16566

if.else1010:                                      ; preds = %lor.lhs.false1005
  %567 = load i8*, i8** %p, align 8, !dbg !16566, !tbaa !2442
  %568 = load i64, i64* %_delta1000, align 8, !dbg !16566, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %567, i8 32, i64 %568, i1 false), !dbg !16566
  %569 = load i64, i64* %_delta1000, align 8, !dbg !16566, !tbaa !2579
  %570 = load i8*, i8** %p, align 8, !dbg !16566, !tbaa !2442
  %add.ptr1011 = getelementptr inbounds i8, i8* %570, i64 %569, !dbg !16566
  store i8* %add.ptr1011, i8** %p, align 8, !dbg !16566, !tbaa !2442
  br label %if.end1012

if.end1012:                                       ; preds = %if.else1010, %if.then1008
  br label %if.end1013, !dbg !16565

if.end1013:                                       ; preds = %if.end1012, %land.lhs.true996, %if.then993
  %571 = load i8*, i8** %p, align 8, !dbg !16562, !tbaa !2442
  store i8 9, i8* %571, align 1, !dbg !16562, !tbaa !2497, !ctir !144
  %572 = load i64, i64* %_n971, align 8, !dbg !16562, !tbaa !2579
  %573 = load i8*, i8** %p, align 8, !dbg !16562, !tbaa !2442
  %add.ptr1014 = getelementptr inbounds i8, i8* %573, i64 %572, !dbg !16562
  store i8* %add.ptr1014, i8** %p, align 8, !dbg !16562, !tbaa !2442
  br label %if.end1015, !dbg !16562

if.end1015:                                       ; preds = %if.end1013, %if.end991
  %574 = load i64, i64* %_incr980, align 8, !dbg !16552, !tbaa !2579
  %575 = load i64, i64* %i, align 8, !dbg !16552, !tbaa !2579
  %add1016 = add i64 %575, %574, !dbg !16552
  store i64 %add1016, i64* %i, align 8, !dbg !16552, !tbaa !2579
  br label %do.end1018, !dbg !16552

do.end1018:                                       ; preds = %if.end1015
  br label %sw.epilog1435, !dbg !16568

sw.bb1019:                                        ; preds = %sw.epilog87
  br label %do.body1020, !dbg !16569

do.body1020:                                      ; preds = %sw.bb1019
  store i32 1, i32* %digits, align 4, !dbg !16570, !tbaa !2436
  %576 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16570, !tbaa !2442
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %576, i32 0, i32 6, !dbg !16570, !ctir !1919
  %577 = load i32, i32* %tm_wday, align 8, !dbg !16570, !tbaa !16572, !ctir !27
  %sub1021 = sub nsw i32 %577, 1, !dbg !16570
  %add1022 = add nsw i32 %sub1021, 7, !dbg !16570
  %rem1023 = srem i32 %add1022, 7, !dbg !16570
  %add1024 = add nsw i32 %rem1023, 1, !dbg !16570
  store i32 %add1024, i32* %number_value, align 4, !dbg !16570, !tbaa !2436
  br label %do_number, !dbg !16570

do.end1026:                                       ; No predecessors!
  br label %sw.bb1027, !dbg !16570

sw.bb1027:                                        ; preds = %sw.epilog87, %do.end1026
  %578 = load i32, i32* %modifier, align 4, !dbg !16573, !tbaa !2436
  %cmp1028 = icmp eq i32 %578, 69, !dbg !16575
  br i1 %cmp1028, label %if.then1030, label %if.end1031, !dbg !16576

if.then1030:                                      ; preds = %sw.bb1027
  br label %bad_format, !dbg !16577

if.end1031:                                       ; preds = %sw.bb1027
  br label %do.body1032, !dbg !16578

do.body1032:                                      ; preds = %if.end1031
  store i32 2, i32* %digits, align 4, !dbg !16579, !tbaa !2436
  %579 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16579, !tbaa !2442
  %tm_yday1033 = getelementptr inbounds %struct.tm, %struct.tm* %579, i32 0, i32 7, !dbg !16579, !ctir !1919
  %580 = load i32, i32* %tm_yday1033, align 4, !dbg !16579, !tbaa !16403, !ctir !27
  %581 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16579, !tbaa !2442
  %tm_wday1034 = getelementptr inbounds %struct.tm, %struct.tm* %581, i32 0, i32 6, !dbg !16579, !ctir !1919
  %582 = load i32, i32* %tm_wday1034, align 8, !dbg !16579, !tbaa !16572, !ctir !27
  %sub1035 = sub nsw i32 %580, %582, !dbg !16579
  %add1036 = add nsw i32 %sub1035, 7, !dbg !16579
  %div1037 = sdiv i32 %add1036, 7, !dbg !16579
  store i32 %div1037, i32* %number_value, align 4, !dbg !16579, !tbaa !2436
  br label %do_number, !dbg !16579

do.end1039:                                       ; No predecessors!
  br label %sw.bb1040, !dbg !16579

sw.bb1040:                                        ; preds = %sw.epilog87, %sw.epilog87, %sw.epilog87, %do.end1039
  %583 = load i32, i32* %modifier, align 4, !dbg !16581, !tbaa !2436
  %cmp1041 = icmp eq i32 %583, 69, !dbg !16583
  br i1 %cmp1041, label %if.then1043, label %if.end1044, !dbg !16584

if.then1043:                                      ; preds = %sw.bb1040
  br label %bad_format, !dbg !16585

if.end1044:                                       ; preds = %sw.bb1040
  call void @llvm.dbg.declare(metadata i32* %year, metadata !16586, metadata !DIExpression()), !dbg !16588
  %584 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16589, !tbaa !2442
  %tm_year1045 = getelementptr inbounds %struct.tm, %struct.tm* %584, i32 0, i32 5, !dbg !16590, !ctir !1919
  %585 = load i32, i32* %tm_year1045, align 4, !dbg !16590, !tbaa !15996, !ctir !27
  %586 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16591, !tbaa !2442
  %tm_year1046 = getelementptr inbounds %struct.tm, %struct.tm* %586, i32 0, i32 5, !dbg !16592, !ctir !1919
  %587 = load i32, i32* %tm_year1046, align 4, !dbg !16592, !tbaa !15996, !ctir !27
  %cmp1047 = icmp slt i32 %587, 0, !dbg !16593
  %588 = zext i1 %cmp1047 to i64, !dbg !16591
  %cond1049 = select i1 %cmp1047, i32 300, i32 -100, !dbg !16591
  %add1050 = add nsw i32 %585, %cond1049, !dbg !16594
  store i32 %add1050, i32* %year, align 4, !dbg !16588, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %year_adjust, metadata !16595, metadata !DIExpression()), !dbg !16596
  store i32 0, i32* %year_adjust, align 4, !dbg !16596, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %days, metadata !16597, metadata !DIExpression()), !dbg !16598
  %589 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16599, !tbaa !2442
  %tm_yday1051 = getelementptr inbounds %struct.tm, %struct.tm* %589, i32 0, i32 7, !dbg !16600, !ctir !1919
  %590 = load i32, i32* %tm_yday1051, align 4, !dbg !16600, !tbaa !16403, !ctir !27
  %591 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16601, !tbaa !2442
  %tm_wday1052 = getelementptr inbounds %struct.tm, %struct.tm* %591, i32 0, i32 6, !dbg !16602, !ctir !1919
  %592 = load i32, i32* %tm_wday1052, align 8, !dbg !16602, !tbaa !16572, !ctir !27
  %call1053 = call i32 @iso_week_days(i32 %590, i32 %592), !dbg !16603
  store i32 %call1053, i32* %days, align 4, !dbg !16598, !tbaa !2436
  %593 = load i32, i32* %days, align 4, !dbg !16604, !tbaa !2436
  %cmp1054 = icmp slt i32 %593, 0, !dbg !16606
  br i1 %cmp1054, label %if.then1056, label %if.else1079, !dbg !16607

if.then1056:                                      ; preds = %if.end1044
  store i32 -1, i32* %year_adjust, align 4, !dbg !16608, !tbaa !2436
  %594 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16610, !tbaa !2442
  %tm_yday1057 = getelementptr inbounds %struct.tm, %struct.tm* %594, i32 0, i32 7, !dbg !16611, !ctir !1919
  %595 = load i32, i32* %tm_yday1057, align 4, !dbg !16611, !tbaa !16403, !ctir !27
  %596 = load i32, i32* %year, align 4, !dbg !16612, !tbaa !2436
  %sub1058 = sub nsw i32 %596, 1, !dbg !16612
  %rem1059 = srem i32 %sub1058, 4, !dbg !16612
  %cmp1060 = icmp eq i32 %rem1059, 0, !dbg !16612
  br i1 %cmp1060, label %land.rhs1062, label %land.end1073, !dbg !16612

land.rhs1062:                                     ; preds = %if.then1056
  %597 = load i32, i32* %year, align 4, !dbg !16612, !tbaa !2436
  %sub1063 = sub nsw i32 %597, 1, !dbg !16612
  %rem1064 = srem i32 %sub1063, 100, !dbg !16612
  %cmp1065 = icmp ne i32 %rem1064, 0, !dbg !16612
  br i1 %cmp1065, label %lor.end1072, label %lor.rhs1067, !dbg !16612

lor.rhs1067:                                      ; preds = %land.rhs1062
  %598 = load i32, i32* %year, align 4, !dbg !16612, !tbaa !2436
  %sub1068 = sub nsw i32 %598, 1, !dbg !16612
  %rem1069 = srem i32 %sub1068, 400, !dbg !16612
  %cmp1070 = icmp eq i32 %rem1069, 0, !dbg !16612
  br label %lor.end1072, !dbg !16612

lor.end1072:                                      ; preds = %lor.rhs1067, %land.rhs1062
  %599 = phi i1 [ true, %land.rhs1062 ], [ %cmp1070, %lor.rhs1067 ]
  br label %land.end1073

land.end1073:                                     ; preds = %lor.end1072, %if.then1056
  %600 = phi i1 [ false, %if.then1056 ], [ %599, %lor.end1072 ], !dbg !16613
  %land.ext1074 = zext i1 %600 to i32, !dbg !16612
  %add1075 = add nsw i32 365, %land.ext1074, !dbg !16614
  %add1076 = add nsw i32 %595, %add1075, !dbg !16615
  %601 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16616, !tbaa !2442
  %tm_wday1077 = getelementptr inbounds %struct.tm, %struct.tm* %601, i32 0, i32 6, !dbg !16617, !ctir !1919
  %602 = load i32, i32* %tm_wday1077, align 8, !dbg !16617, !tbaa !16572, !ctir !27
  %call1078 = call i32 @iso_week_days(i32 %add1076, i32 %602), !dbg !16618
  store i32 %call1078, i32* %days, align 4, !dbg !16619, !tbaa !2436
  br label %if.end1104, !dbg !16620

if.else1079:                                      ; preds = %if.end1044
  call void @llvm.dbg.declare(metadata i32* %d1080, metadata !16621, metadata !DIExpression()), !dbg !16623
  %603 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16624, !tbaa !2442
  %tm_yday1081 = getelementptr inbounds %struct.tm, %struct.tm* %603, i32 0, i32 7, !dbg !16625, !ctir !1919
  %604 = load i32, i32* %tm_yday1081, align 4, !dbg !16625, !tbaa !16403, !ctir !27
  %605 = load i32, i32* %year, align 4, !dbg !16626, !tbaa !2436
  %rem1082 = srem i32 %605, 4, !dbg !16626
  %cmp1083 = icmp eq i32 %rem1082, 0, !dbg !16626
  br i1 %cmp1083, label %land.rhs1085, label %land.end1094, !dbg !16626

land.rhs1085:                                     ; preds = %if.else1079
  %606 = load i32, i32* %year, align 4, !dbg !16626, !tbaa !2436
  %rem1086 = srem i32 %606, 100, !dbg !16626
  %cmp1087 = icmp ne i32 %rem1086, 0, !dbg !16626
  br i1 %cmp1087, label %lor.end1093, label %lor.rhs1089, !dbg !16626

lor.rhs1089:                                      ; preds = %land.rhs1085
  %607 = load i32, i32* %year, align 4, !dbg !16626, !tbaa !2436
  %rem1090 = srem i32 %607, 400, !dbg !16626
  %cmp1091 = icmp eq i32 %rem1090, 0, !dbg !16626
  br label %lor.end1093, !dbg !16626

lor.end1093:                                      ; preds = %lor.rhs1089, %land.rhs1085
  %608 = phi i1 [ true, %land.rhs1085 ], [ %cmp1091, %lor.rhs1089 ]
  br label %land.end1094

land.end1094:                                     ; preds = %lor.end1093, %if.else1079
  %609 = phi i1 [ false, %if.else1079 ], [ %608, %lor.end1093 ], !dbg !16627
  %land.ext1095 = zext i1 %609 to i32, !dbg !16626
  %add1096 = add nsw i32 365, %land.ext1095, !dbg !16628
  %sub1097 = sub nsw i32 %604, %add1096, !dbg !16629
  %610 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16630, !tbaa !2442
  %tm_wday1098 = getelementptr inbounds %struct.tm, %struct.tm* %610, i32 0, i32 6, !dbg !16631, !ctir !1919
  %611 = load i32, i32* %tm_wday1098, align 8, !dbg !16631, !tbaa !16572, !ctir !27
  %call1099 = call i32 @iso_week_days(i32 %sub1097, i32 %611), !dbg !16632
  store i32 %call1099, i32* %d1080, align 4, !dbg !16623, !tbaa !2436
  %612 = load i32, i32* %d1080, align 4, !dbg !16633, !tbaa !2436
  %cmp1100 = icmp sle i32 0, %612, !dbg !16635
  br i1 %cmp1100, label %if.then1102, label %if.end1103, !dbg !16636

if.then1102:                                      ; preds = %land.end1094
  store i32 1, i32* %year_adjust, align 4, !dbg !16637, !tbaa !2436
  %613 = load i32, i32* %d1080, align 4, !dbg !16639, !tbaa !2436
  store i32 %613, i32* %days, align 4, !dbg !16640, !tbaa !2436
  br label %if.end1103, !dbg !16641

if.end1103:                                       ; preds = %if.then1102, %land.end1094
  br label %if.end1104

if.end1104:                                       ; preds = %if.end1103, %land.end1073
  %614 = load i8*, i8** %f, align 8, !dbg !16642, !tbaa !2442
  %615 = load i8, i8* %614, align 1, !dbg !16643, !tbaa !2497, !ctir !147
  %conv1105 = sext i8 %615 to i32, !dbg !16643
  switch i32 %conv1105, label %sw.default1142 [
    i32 103, label %sw.bb1106
    i32 71, label %sw.bb1130
  ], !dbg !16644

sw.bb1106:                                        ; preds = %if.end1104
  call void @llvm.dbg.declare(metadata i32* %yy, metadata !16645, metadata !DIExpression()), !dbg !16648
  %616 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16649, !tbaa !2442
  %tm_year1107 = getelementptr inbounds %struct.tm, %struct.tm* %616, i32 0, i32 5, !dbg !16650, !ctir !1919
  %617 = load i32, i32* %tm_year1107, align 4, !dbg !16650, !tbaa !15996, !ctir !27
  %rem1108 = srem i32 %617, 100, !dbg !16651
  %618 = load i32, i32* %year_adjust, align 4, !dbg !16652, !tbaa !2436
  %add1109 = add nsw i32 %rem1108, %618, !dbg !16653
  %rem1110 = srem i32 %add1109, 100, !dbg !16654
  store i32 %rem1110, i32* %yy, align 4, !dbg !16648, !tbaa !2436
  br label %do.body1111, !dbg !16655

do.body1111:                                      ; preds = %sw.bb1106
  store i32 2, i32* %digits, align 4, !dbg !16656, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16656, !tbaa !2461
  %619 = load i32, i32* %yy, align 4, !dbg !16656, !tbaa !2436
  %cmp1112 = icmp sle i32 0, %619, !dbg !16656
  br i1 %cmp1112, label %cond.true1114, label %cond.false1115, !dbg !16656

cond.true1114:                                    ; preds = %do.body1111
  %620 = load i32, i32* %yy, align 4, !dbg !16656, !tbaa !2436
  br label %cond.end1126, !dbg !16656

cond.false1115:                                   ; preds = %do.body1111
  %621 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16656, !tbaa !2442
  %tm_year1116 = getelementptr inbounds %struct.tm, %struct.tm* %621, i32 0, i32 5, !dbg !16656, !ctir !1919
  %622 = load i32, i32* %tm_year1116, align 4, !dbg !16656, !tbaa !15996, !ctir !27
  %623 = load i32, i32* %year_adjust, align 4, !dbg !16656, !tbaa !2436
  %sub1117 = sub nsw i32 -1900, %623, !dbg !16656
  %cmp1118 = icmp slt i32 %622, %sub1117, !dbg !16656
  br i1 %cmp1118, label %cond.true1120, label %cond.false1122, !dbg !16656

cond.true1120:                                    ; preds = %cond.false1115
  %624 = load i32, i32* %yy, align 4, !dbg !16656, !tbaa !2436
  %sub1121 = sub nsw i32 0, %624, !dbg !16656
  br label %cond.end1124, !dbg !16656

cond.false1122:                                   ; preds = %cond.false1115
  %625 = load i32, i32* %yy, align 4, !dbg !16656, !tbaa !2436
  %add1123 = add nsw i32 %625, 100, !dbg !16656
  br label %cond.end1124, !dbg !16656

cond.end1124:                                     ; preds = %cond.false1122, %cond.true1120
  %cond1125 = phi i32 [ %sub1121, %cond.true1120 ], [ %add1123, %cond.false1122 ], !dbg !16656
  br label %cond.end1126, !dbg !16656

cond.end1126:                                     ; preds = %cond.end1124, %cond.true1114
  %cond1127 = phi i32 [ %620, %cond.true1114 ], [ %cond1125, %cond.end1124 ], !dbg !16656
  store i32 %cond1127, i32* %u_number_value, align 4, !dbg !16656, !tbaa !2436
  br label %do_yearish, !dbg !16656

do.end1129:                                       ; No predecessors!
  br label %sw.bb1130, !dbg !16658

sw.bb1130:                                        ; preds = %if.end1104, %do.end1129
  br label %do.body1131, !dbg !16659

do.body1131:                                      ; preds = %sw.bb1130
  store i32 4, i32* %digits, align 4, !dbg !16660, !tbaa !2436
  %626 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16660, !tbaa !2442
  %tm_year1132 = getelementptr inbounds %struct.tm, %struct.tm* %626, i32 0, i32 5, !dbg !16660, !ctir !1919
  %627 = load i32, i32* %tm_year1132, align 4, !dbg !16660, !tbaa !15996, !ctir !27
  %628 = load i32, i32* %year_adjust, align 4, !dbg !16660, !tbaa !2436
  %sub1133 = sub nsw i32 -1900, %628, !dbg !16660
  %cmp1134 = icmp slt i32 %627, %sub1133, !dbg !16660
  %frombool1136 = zext i1 %cmp1134 to i8, !dbg !16660
  store i8 %frombool1136, i8* %negative_number, align 1, !dbg !16660, !tbaa !2461
  %629 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16660, !tbaa !2442
  %tm_year1137 = getelementptr inbounds %struct.tm, %struct.tm* %629, i32 0, i32 5, !dbg !16660, !ctir !1919
  %630 = load i32, i32* %tm_year1137, align 4, !dbg !16660, !tbaa !15996, !ctir !27
  %add1138 = add i32 %630, 1900, !dbg !16660
  %631 = load i32, i32* %year_adjust, align 4, !dbg !16660, !tbaa !2436
  %add1139 = add i32 %add1138, %631, !dbg !16660
  store i32 %add1139, i32* %u_number_value, align 4, !dbg !16660, !tbaa !2436
  br label %do_yearish, !dbg !16660

do.end1141:                                       ; No predecessors!
  br label %sw.default1142, !dbg !16660

sw.default1142:                                   ; preds = %if.end1104, %do.end1141
  br label %do.body1143, !dbg !16662

do.body1143:                                      ; preds = %sw.default1142
  store i32 2, i32* %digits, align 4, !dbg !16663, !tbaa !2436
  %632 = load i32, i32* %days, align 4, !dbg !16663, !tbaa !2436
  %div1144 = sdiv i32 %632, 7, !dbg !16663
  %add1145 = add nsw i32 %div1144, 1, !dbg !16663
  store i32 %add1145, i32* %number_value, align 4, !dbg !16663, !tbaa !2436
  br label %do_number, !dbg !16663

do.end1147:                                       ; No predecessors!
  br label %sw.epilog1148, !dbg !16665

sw.epilog1148:                                    ; preds = %do.end1147
  br label %sw.bb1149, !dbg !16666

sw.bb1149:                                        ; preds = %sw.epilog87, %sw.epilog1148
  %633 = load i32, i32* %modifier, align 4, !dbg !16667, !tbaa !2436
  %cmp1150 = icmp eq i32 %633, 69, !dbg !16669
  br i1 %cmp1150, label %if.then1152, label %if.end1153, !dbg !16670

if.then1152:                                      ; preds = %sw.bb1149
  br label %bad_format, !dbg !16671

if.end1153:                                       ; preds = %sw.bb1149
  br label %do.body1154, !dbg !16672

do.body1154:                                      ; preds = %if.end1153
  store i32 2, i32* %digits, align 4, !dbg !16673, !tbaa !2436
  %634 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16673, !tbaa !2442
  %tm_yday1155 = getelementptr inbounds %struct.tm, %struct.tm* %634, i32 0, i32 7, !dbg !16673, !ctir !1919
  %635 = load i32, i32* %tm_yday1155, align 4, !dbg !16673, !tbaa !16403, !ctir !27
  %636 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16673, !tbaa !2442
  %tm_wday1156 = getelementptr inbounds %struct.tm, %struct.tm* %636, i32 0, i32 6, !dbg !16673, !ctir !1919
  %637 = load i32, i32* %tm_wday1156, align 8, !dbg !16673, !tbaa !16572, !ctir !27
  %sub1157 = sub nsw i32 %637, 1, !dbg !16673
  %add1158 = add nsw i32 %sub1157, 7, !dbg !16673
  %rem1159 = srem i32 %add1158, 7, !dbg !16673
  %sub1160 = sub nsw i32 %635, %rem1159, !dbg !16673
  %add1161 = add nsw i32 %sub1160, 7, !dbg !16673
  %div1162 = sdiv i32 %add1161, 7, !dbg !16673
  store i32 %div1162, i32* %number_value, align 4, !dbg !16673, !tbaa !2436
  br label %do_number, !dbg !16673

do.end1164:                                       ; No predecessors!
  br label %sw.bb1165, !dbg !16673

sw.bb1165:                                        ; preds = %sw.epilog87, %do.end1164
  %638 = load i32, i32* %modifier, align 4, !dbg !16675, !tbaa !2436
  %cmp1166 = icmp eq i32 %638, 69, !dbg !16677
  br i1 %cmp1166, label %if.then1168, label %if.end1169, !dbg !16678

if.then1168:                                      ; preds = %sw.bb1165
  br label %bad_format, !dbg !16679

if.end1169:                                       ; preds = %sw.bb1165
  br label %do.body1170, !dbg !16680

do.body1170:                                      ; preds = %if.end1169
  store i32 1, i32* %digits, align 4, !dbg !16681, !tbaa !2436
  %639 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16681, !tbaa !2442
  %tm_wday1171 = getelementptr inbounds %struct.tm, %struct.tm* %639, i32 0, i32 6, !dbg !16681, !ctir !1919
  %640 = load i32, i32* %tm_wday1171, align 8, !dbg !16681, !tbaa !16572, !ctir !27
  store i32 %640, i32* %number_value, align 4, !dbg !16681, !tbaa !2436
  br label %do_number, !dbg !16681

do.end1173:                                       ; No predecessors!
  br label %sw.bb1174, !dbg !16681

sw.bb1174:                                        ; preds = %sw.epilog87, %do.end1173
  %641 = load i32, i32* %modifier, align 4, !dbg !16683, !tbaa !2436
  %cmp1175 = icmp eq i32 %641, 69, !dbg !16685
  br i1 %cmp1175, label %if.then1177, label %if.end1178, !dbg !16686

if.then1177:                                      ; preds = %sw.bb1174
  br label %underlying_strftime, !dbg !16687

if.end1178:                                       ; preds = %sw.bb1174
  %642 = load i32, i32* %modifier, align 4, !dbg !16689, !tbaa !2436
  %cmp1179 = icmp eq i32 %642, 79, !dbg !16691
  br i1 %cmp1179, label %if.then1181, label %if.end1182, !dbg !16692

if.then1181:                                      ; preds = %if.end1178
  br label %bad_format, !dbg !16693

if.end1182:                                       ; preds = %if.end1178
  br label %do.body1183, !dbg !16694

do.body1183:                                      ; preds = %if.end1182
  store i32 4, i32* %digits, align 4, !dbg !16695, !tbaa !2436
  %643 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16695, !tbaa !2442
  %tm_year1184 = getelementptr inbounds %struct.tm, %struct.tm* %643, i32 0, i32 5, !dbg !16695, !ctir !1919
  %644 = load i32, i32* %tm_year1184, align 4, !dbg !16695, !tbaa !15996, !ctir !27
  %cmp1185 = icmp slt i32 %644, -1900, !dbg !16695
  %frombool1187 = zext i1 %cmp1185 to i8, !dbg !16695
  store i8 %frombool1187, i8* %negative_number, align 1, !dbg !16695, !tbaa !2461
  %645 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16695, !tbaa !2442
  %tm_year1188 = getelementptr inbounds %struct.tm, %struct.tm* %645, i32 0, i32 5, !dbg !16695, !ctir !1919
  %646 = load i32, i32* %tm_year1188, align 4, !dbg !16695, !tbaa !15996, !ctir !27
  %add1189 = add i32 %646, 1900, !dbg !16695
  store i32 %add1189, i32* %u_number_value, align 4, !dbg !16695, !tbaa !2436
  br label %do_yearish, !dbg !16695

do.end1191:                                       ; No predecessors!
  br label %sw.bb1192, !dbg !16695

sw.bb1192:                                        ; preds = %sw.epilog87, %do.end1191
  %647 = load i32, i32* %modifier, align 4, !dbg !16697, !tbaa !2436
  %cmp1193 = icmp eq i32 %647, 69, !dbg !16699
  br i1 %cmp1193, label %if.then1195, label %if.end1196, !dbg !16700

if.then1195:                                      ; preds = %sw.bb1192
  br label %underlying_strftime, !dbg !16701

if.end1196:                                       ; preds = %sw.bb1192
  call void @llvm.dbg.declare(metadata i32* %yy1197, metadata !16703, metadata !DIExpression()), !dbg !16705
  %648 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16706, !tbaa !2442
  %tm_year1198 = getelementptr inbounds %struct.tm, %struct.tm* %648, i32 0, i32 5, !dbg !16707, !ctir !1919
  %649 = load i32, i32* %tm_year1198, align 4, !dbg !16707, !tbaa !15996, !ctir !27
  %rem1199 = srem i32 %649, 100, !dbg !16708
  store i32 %rem1199, i32* %yy1197, align 4, !dbg !16705, !tbaa !2436
  %650 = load i32, i32* %yy1197, align 4, !dbg !16709, !tbaa !2436
  %cmp1200 = icmp slt i32 %650, 0, !dbg !16711
  br i1 %cmp1200, label %if.then1202, label %if.end1212, !dbg !16712

if.then1202:                                      ; preds = %if.end1196
  %651 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16713, !tbaa !2442
  %tm_year1203 = getelementptr inbounds %struct.tm, %struct.tm* %651, i32 0, i32 5, !dbg !16714, !ctir !1919
  %652 = load i32, i32* %tm_year1203, align 4, !dbg !16714, !tbaa !15996, !ctir !27
  %cmp1204 = icmp slt i32 %652, -1900, !dbg !16715
  br i1 %cmp1204, label %cond.true1206, label %cond.false1208, !dbg !16713

cond.true1206:                                    ; preds = %if.then1202
  %653 = load i32, i32* %yy1197, align 4, !dbg !16716, !tbaa !2436
  %sub1207 = sub nsw i32 0, %653, !dbg !16717
  br label %cond.end1210, !dbg !16713

cond.false1208:                                   ; preds = %if.then1202
  %654 = load i32, i32* %yy1197, align 4, !dbg !16718, !tbaa !2436
  %add1209 = add nsw i32 %654, 100, !dbg !16719
  br label %cond.end1210, !dbg !16713

cond.end1210:                                     ; preds = %cond.false1208, %cond.true1206
  %cond1211 = phi i32 [ %sub1207, %cond.true1206 ], [ %add1209, %cond.false1208 ], !dbg !16713
  store i32 %cond1211, i32* %yy1197, align 4, !dbg !16720, !tbaa !2436
  br label %if.end1212, !dbg !16721

if.end1212:                                       ; preds = %cond.end1210, %if.end1196
  br label %do.body1213, !dbg !16722

do.body1213:                                      ; preds = %if.end1212
  store i32 2, i32* %digits, align 4, !dbg !16723, !tbaa !2436
  store i8 0, i8* %negative_number, align 1, !dbg !16723, !tbaa !2461
  %655 = load i32, i32* %yy1197, align 4, !dbg !16723, !tbaa !2436
  store i32 %655, i32* %u_number_value, align 4, !dbg !16723, !tbaa !2436
  br label %do_yearish, !dbg !16723

do.end1215:                                       ; No predecessors!
  br label %sw.bb1216, !dbg !16725

sw.bb1216:                                        ; preds = %sw.epilog87, %do.end1215
  %656 = load i8, i8* %change_case, align 1, !dbg !16726, !tbaa !2461
  %tobool1217 = trunc i8 %656 to i1, !dbg !16726
  br i1 %tobool1217, label %if.then1218, label %if.end1219, !dbg !16728

if.then1218:                                      ; preds = %sw.bb1216
  store i8 0, i8* %to_uppcase, align 1, !dbg !16729, !tbaa !2461
  store i8 1, i8* %to_lowcase, align 1, !dbg !16731, !tbaa !2461
  br label %if.end1219, !dbg !16732

if.end1219:                                       ; preds = %if.then1218, %sw.bb1216
  br label %do.body1220, !dbg !16733

do.body1220:                                      ; preds = %if.end1219
  call void @llvm.dbg.declare(metadata i64* %_n1221, metadata !16734, metadata !DIExpression()), !dbg !16736
  %657 = load i8*, i8** %zone, align 8, !dbg !16736, !tbaa !2442
  %call1222 = call i64 @strlen(i8* %657) #16, !dbg !16736
  store i64 %call1222, i64* %_n1221, align 8, !dbg !16736, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w1223, metadata !16737, metadata !DIExpression()), !dbg !16736
  %658 = load i32, i32* %width.addr, align 4, !dbg !16736, !tbaa !2436
  %cmp1224 = icmp slt i32 %658, 0, !dbg !16736
  br i1 %cmp1224, label %cond.true1226, label %cond.false1227, !dbg !16736

cond.true1226:                                    ; preds = %do.body1220
  br label %cond.end1228, !dbg !16736

cond.false1227:                                   ; preds = %do.body1220
  %659 = load i32, i32* %width.addr, align 4, !dbg !16736, !tbaa !2436
  br label %cond.end1228, !dbg !16736

cond.end1228:                                     ; preds = %cond.false1227, %cond.true1226
  %cond1229 = phi i32 [ 0, %cond.true1226 ], [ %659, %cond.false1227 ], !dbg !16736
  %conv1230 = sext i32 %cond1229 to i64, !dbg !16736
  store i64 %conv1230, i64* %_w1223, align 8, !dbg !16736, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr1231, metadata !16738, metadata !DIExpression()), !dbg !16736
  %660 = load i64, i64* %_n1221, align 8, !dbg !16736, !tbaa !2579
  %661 = load i64, i64* %_w1223, align 8, !dbg !16736, !tbaa !2579
  %cmp1232 = icmp ult i64 %660, %661, !dbg !16736
  br i1 %cmp1232, label %cond.true1234, label %cond.false1235, !dbg !16736

cond.true1234:                                    ; preds = %cond.end1228
  %662 = load i64, i64* %_w1223, align 8, !dbg !16736, !tbaa !2579
  br label %cond.end1236, !dbg !16736

cond.false1235:                                   ; preds = %cond.end1228
  %663 = load i64, i64* %_n1221, align 8, !dbg !16736, !tbaa !2579
  br label %cond.end1236, !dbg !16736

cond.end1236:                                     ; preds = %cond.false1235, %cond.true1234
  %cond1237 = phi i64 [ %662, %cond.true1234 ], [ %663, %cond.false1235 ], !dbg !16736
  store i64 %cond1237, i64* %_incr1231, align 8, !dbg !16736, !tbaa !2579
  %664 = load i64, i64* %_incr1231, align 8, !dbg !16739, !tbaa !2579
  %665 = load i64, i64* %maxsize.addr, align 8, !dbg !16739, !tbaa !2579
  %666 = load i64, i64* %i, align 8, !dbg !16739, !tbaa !2579
  %sub1238 = sub i64 %665, %666, !dbg !16739
  %cmp1239 = icmp uge i64 %664, %sub1238, !dbg !16739
  br i1 %cmp1239, label %if.then1241, label %if.end1242, !dbg !16736

if.then1241:                                      ; preds = %cond.end1236
  store i64 0, i64* %retval, align 8, !dbg !16739
  br label %return, !dbg !16739

if.end1242:                                       ; preds = %cond.end1236
  %667 = load i8*, i8** %p, align 8, !dbg !16741, !tbaa !2442
  %tobool1243 = icmp ne i8* %667, null, !dbg !16741
  br i1 %tobool1243, label %if.then1244, label %if.end1276, !dbg !16736

if.then1244:                                      ; preds = %if.end1242
  %668 = load i32, i32* %digits, align 4, !dbg !16743, !tbaa !2436
  %cmp1245 = icmp eq i32 %668, 0, !dbg !16743
  br i1 %cmp1245, label %land.lhs.true1247, label %if.end1264, !dbg !16743

land.lhs.true1247:                                ; preds = %if.then1244
  %669 = load i64, i64* %_n1221, align 8, !dbg !16743, !tbaa !2579
  %670 = load i64, i64* %_w1223, align 8, !dbg !16743, !tbaa !2579
  %cmp1248 = icmp ult i64 %669, %670, !dbg !16743
  br i1 %cmp1248, label %if.then1250, label %if.end1264, !dbg !16746

if.then1250:                                      ; preds = %land.lhs.true1247
  call void @llvm.dbg.declare(metadata i64* %_delta1251, metadata !16747, metadata !DIExpression()), !dbg !16749
  %671 = load i32, i32* %width.addr, align 4, !dbg !16749, !tbaa !2436
  %conv1252 = sext i32 %671 to i64, !dbg !16749
  %672 = load i64, i64* %_n1221, align 8, !dbg !16749, !tbaa !2579
  %sub1253 = sub i64 %conv1252, %672, !dbg !16749
  store i64 %sub1253, i64* %_delta1251, align 8, !dbg !16749, !tbaa !2579
  %673 = load i32, i32* %pad, align 4, !dbg !16750, !tbaa !2436
  %cmp1254 = icmp eq i32 %673, 48, !dbg !16750
  br i1 %cmp1254, label %if.then1259, label %lor.lhs.false1256, !dbg !16750

lor.lhs.false1256:                                ; preds = %if.then1250
  %674 = load i32, i32* %pad, align 4, !dbg !16750, !tbaa !2436
  %cmp1257 = icmp eq i32 %674, 43, !dbg !16750
  br i1 %cmp1257, label %if.then1259, label %if.else1261, !dbg !16749

if.then1259:                                      ; preds = %lor.lhs.false1256, %if.then1250
  %675 = load i8*, i8** %p, align 8, !dbg !16750, !tbaa !2442
  %676 = load i64, i64* %_delta1251, align 8, !dbg !16750, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %675, i8 48, i64 %676, i1 false), !dbg !16750
  %677 = load i64, i64* %_delta1251, align 8, !dbg !16750, !tbaa !2579
  %678 = load i8*, i8** %p, align 8, !dbg !16750, !tbaa !2442
  %add.ptr1260 = getelementptr inbounds i8, i8* %678, i64 %677, !dbg !16750
  store i8* %add.ptr1260, i8** %p, align 8, !dbg !16750, !tbaa !2442
  br label %if.end1263, !dbg !16750

if.else1261:                                      ; preds = %lor.lhs.false1256
  %679 = load i8*, i8** %p, align 8, !dbg !16750, !tbaa !2442
  %680 = load i64, i64* %_delta1251, align 8, !dbg !16750, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %679, i8 32, i64 %680, i1 false), !dbg !16750
  %681 = load i64, i64* %_delta1251, align 8, !dbg !16750, !tbaa !2579
  %682 = load i8*, i8** %p, align 8, !dbg !16750, !tbaa !2442
  %add.ptr1262 = getelementptr inbounds i8, i8* %682, i64 %681, !dbg !16750
  store i8* %add.ptr1262, i8** %p, align 8, !dbg !16750, !tbaa !2442
  br label %if.end1263

if.end1263:                                       ; preds = %if.else1261, %if.then1259
  br label %if.end1264, !dbg !16749

if.end1264:                                       ; preds = %if.end1263, %land.lhs.true1247, %if.then1244
  %683 = load i8, i8* %to_lowcase, align 1, !dbg !16752, !tbaa !2461
  %tobool1265 = trunc i8 %683 to i1, !dbg !16752
  br i1 %tobool1265, label %if.then1266, label %if.else1268, !dbg !16746

if.then1266:                                      ; preds = %if.end1264
  %684 = load i8*, i8** %p, align 8, !dbg !16752, !tbaa !2442
  %685 = load i8*, i8** %zone, align 8, !dbg !16752, !tbaa !2442
  %686 = load i64, i64* %_n1221, align 8, !dbg !16752, !tbaa !2579
  %call1267 = call i8* @memcpy_lowcase(i8* %684, i8* %685, i64 %686), !dbg !16752
  br label %if.end1274, !dbg !16752

if.else1268:                                      ; preds = %if.end1264
  %687 = load i8, i8* %to_uppcase, align 1, !dbg !16754, !tbaa !2461
  %tobool1269 = trunc i8 %687 to i1, !dbg !16754
  br i1 %tobool1269, label %if.then1270, label %if.else1272, !dbg !16752

if.then1270:                                      ; preds = %if.else1268
  %688 = load i8*, i8** %p, align 8, !dbg !16754, !tbaa !2442
  %689 = load i8*, i8** %zone, align 8, !dbg !16754, !tbaa !2442
  %690 = load i64, i64* %_n1221, align 8, !dbg !16754, !tbaa !2579
  %call1271 = call i8* @memcpy_uppcase(i8* %688, i8* %689, i64 %690), !dbg !16754
  br label %if.end1273, !dbg !16754

if.else1272:                                      ; preds = %if.else1268
  %691 = load i8*, i8** %p, align 8, !dbg !16754, !tbaa !2442
  %692 = load i8*, i8** %zone, align 8, !dbg !16754, !tbaa !2442
  %693 = load i64, i64* %_n1221, align 8, !dbg !16754, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %691, i8* align 1 %692, i64 %693, i1 false), !dbg !16754
  br label %if.end1273

if.end1273:                                       ; preds = %if.else1272, %if.then1270
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1273, %if.then1266
  %694 = load i64, i64* %_n1221, align 8, !dbg !16746, !tbaa !2579
  %695 = load i8*, i8** %p, align 8, !dbg !16746, !tbaa !2442
  %add.ptr1275 = getelementptr inbounds i8, i8* %695, i64 %694, !dbg !16746
  store i8* %add.ptr1275, i8** %p, align 8, !dbg !16746, !tbaa !2442
  br label %if.end1276, !dbg !16746

if.end1276:                                       ; preds = %if.end1274, %if.end1242
  %696 = load i64, i64* %_incr1231, align 8, !dbg !16736, !tbaa !2579
  %697 = load i64, i64* %i, align 8, !dbg !16736, !tbaa !2579
  %add1277 = add i64 %697, %696, !dbg !16736
  store i64 %add1277, i64* %i, align 8, !dbg !16736, !tbaa !2579
  br label %do.end1279, !dbg !16736

do.end1279:                                       ; preds = %if.end1276
  br label %sw.epilog1435, !dbg !16756

sw.bb1280:                                        ; preds = %sw.epilog87
  store i64 1, i64* %colons, align 8, !dbg !16757, !tbaa !2579
  br label %for.cond1281, !dbg !16759

for.cond1281:                                     ; preds = %for.inc1286, %sw.bb1280
  %698 = load i8*, i8** %f, align 8, !dbg !16760, !tbaa !2442
  %699 = load i64, i64* %colons, align 8, !dbg !16762, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %698, i64 %699, !dbg !16760, !ctir !146
  %700 = load i8, i8* %arrayidx, align 1, !dbg !16760, !tbaa !2497
  %conv1282 = sext i8 %700 to i32, !dbg !16760
  %cmp1283 = icmp eq i32 %conv1282, 58, !dbg !16763
  br i1 %cmp1283, label %for.body1285, label %for.end1288, !dbg !16764

for.body1285:                                     ; preds = %for.cond1281
  br label %for.inc1286, !dbg !16765

for.inc1286:                                      ; preds = %for.body1285
  %701 = load i64, i64* %colons, align 8, !dbg !16766, !tbaa !2579
  %inc1287 = add i64 %701, 1, !dbg !16766
  store i64 %inc1287, i64* %colons, align 8, !dbg !16766, !tbaa !2579
  br label %for.cond1281, !dbg !16767, !llvm.loop !16768

for.end1288:                                      ; preds = %for.cond1281
  %702 = load i8*, i8** %f, align 8, !dbg !16770, !tbaa !2442
  %703 = load i64, i64* %colons, align 8, !dbg !16772, !tbaa !2579
  %arrayidx1289 = getelementptr inbounds i8, i8* %702, i64 %703, !dbg !16770, !ctir !146
  %704 = load i8, i8* %arrayidx1289, align 1, !dbg !16770, !tbaa !2497
  %conv1290 = sext i8 %704 to i32, !dbg !16770
  %cmp1291 = icmp ne i32 %conv1290, 122, !dbg !16773
  br i1 %cmp1291, label %if.then1293, label %if.end1294, !dbg !16774

if.then1293:                                      ; preds = %for.end1288
  br label %bad_format, !dbg !16775

if.end1294:                                       ; preds = %for.end1288
  %705 = load i64, i64* %colons, align 8, !dbg !16776, !tbaa !2579
  %706 = load i8*, i8** %f, align 8, !dbg !16777, !tbaa !2442
  %add.ptr1295 = getelementptr inbounds i8, i8* %706, i64 %705, !dbg !16777
  store i8* %add.ptr1295, i8** %f, align 8, !dbg !16777, !tbaa !2442
  br label %do_z_conversion, !dbg !16778

sw.bb1296:                                        ; preds = %sw.epilog87
  store i64 0, i64* %colons, align 8, !dbg !16779, !tbaa !2579
  br label %do_z_conversion, !dbg !16780

do_z_conversion:                                  ; preds = %sw.bb1296, %if.end1294
  call void @llvm.dbg.label(metadata !16781), !dbg !16782
  %707 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16783, !tbaa !2442
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %707, i32 0, i32 8, !dbg !16785, !ctir !1919
  %708 = load i32, i32* %tm_isdst, align 8, !dbg !16785, !tbaa !16786, !ctir !27
  %cmp1297 = icmp slt i32 %708, 0, !dbg !16787
  br i1 %cmp1297, label %if.then1299, label %if.end1300, !dbg !16788

if.then1299:                                      ; preds = %do_z_conversion
  br label %sw.epilog1435, !dbg !16789

if.end1300:                                       ; preds = %do_z_conversion
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.declare(metadata i32* %hour_diff, metadata !16793, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.declare(metadata i32* %min_diff, metadata !16795, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.declare(metadata i32* %sec_diff, metadata !16797, metadata !DIExpression()), !dbg !16798
  %709 = load %struct.tm*, %struct.tm** %tp.addr, align 8, !dbg !16799, !tbaa !2442
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %709, i32 0, i32 9, !dbg !16800, !ctir !1919
  %710 = load i64, i64* %tm_gmtoff, align 8, !dbg !16800, !tbaa !16801, !ctir !166
  %conv1301 = trunc i64 %710 to i32, !dbg !16799
  store i32 %conv1301, i32* %diff, align 4, !dbg !16802, !tbaa !2436
  %711 = load i32, i32* %diff, align 4, !dbg !16803, !tbaa !2436
  %cmp1302 = icmp slt i32 %711, 0, !dbg !16804
  br i1 %cmp1302, label %lor.end1313, label %lor.rhs1304, !dbg !16805

lor.rhs1304:                                      ; preds = %if.end1300
  %712 = load i32, i32* %diff, align 4, !dbg !16806, !tbaa !2436
  %cmp1305 = icmp eq i32 %712, 0, !dbg !16807
  br i1 %cmp1305, label %land.rhs1307, label %land.end1311, !dbg !16808

land.rhs1307:                                     ; preds = %lor.rhs1304
  %713 = load i8*, i8** %zone, align 8, !dbg !16809, !tbaa !2442
  %714 = load i8, i8* %713, align 1, !dbg !16810, !tbaa !2497, !ctir !147
  %conv1308 = sext i8 %714 to i32, !dbg !16810
  %cmp1309 = icmp eq i32 %conv1308, 45, !dbg !16811
  br label %land.end1311

land.end1311:                                     ; preds = %land.rhs1307, %lor.rhs1304
  %715 = phi i1 [ false, %lor.rhs1304 ], [ %cmp1309, %land.rhs1307 ], !dbg !16812
  br label %lor.end1313, !dbg !16805

lor.end1313:                                      ; preds = %land.end1311, %if.end1300
  %716 = phi i1 [ true, %if.end1300 ], [ %715, %land.end1311 ]
  %frombool1314 = zext i1 %716 to i8, !dbg !16813
  store i8 %frombool1314, i8* %negative_number, align 1, !dbg !16813, !tbaa !2461
  %717 = load i32, i32* %diff, align 4, !dbg !16814, !tbaa !2436
  %div1315 = sdiv i32 %717, 60, !dbg !16815
  %div1316 = sdiv i32 %div1315, 60, !dbg !16816
  store i32 %div1316, i32* %hour_diff, align 4, !dbg !16817, !tbaa !2436
  %718 = load i32, i32* %diff, align 4, !dbg !16818, !tbaa !2436
  %div1317 = sdiv i32 %718, 60, !dbg !16819
  %rem1318 = srem i32 %div1317, 60, !dbg !16820
  store i32 %rem1318, i32* %min_diff, align 4, !dbg !16821, !tbaa !2436
  %719 = load i32, i32* %diff, align 4, !dbg !16822, !tbaa !2436
  %rem1319 = srem i32 %719, 60, !dbg !16823
  store i32 %rem1319, i32* %sec_diff, align 4, !dbg !16824, !tbaa !2436
  %720 = load i64, i64* %colons, align 8, !dbg !16825, !tbaa !2579
  switch i64 %720, label %sw.default1352 [
    i64 0, label %sw.bb1320
    i64 1, label %sw.bb1326
    i64 2, label %sw.bb1332
    i64 3, label %sw.bb1340
  ], !dbg !16826

sw.bb1320:                                        ; preds = %lor.end1313
  br label %do.body1321, !dbg !16827

do.body1321:                                      ; preds = %sw.bb1320
  store i32 5, i32* %digits, align 4, !dbg !16829, !tbaa !2436
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16829, !tbaa !2436
  %721 = load i32, i32* %hour_diff, align 4, !dbg !16829, !tbaa !2436
  %mul1322 = mul nsw i32 %721, 100, !dbg !16829
  %722 = load i32, i32* %min_diff, align 4, !dbg !16829, !tbaa !2436
  %add1323 = add nsw i32 %mul1322, %722, !dbg !16829
  store i32 %add1323, i32* %u_number_value, align 4, !dbg !16829, !tbaa !2436
  br label %do_tz_offset, !dbg !16829

do.end1325:                                       ; No predecessors!
  br label %sw.bb1326, !dbg !16829

sw.bb1326:                                        ; preds = %lor.end1313, %do.end1325
  br label %tz_hh_mm, !dbg !16829

tz_hh_mm:                                         ; preds = %if.then1347, %sw.bb1326
  call void @llvm.dbg.label(metadata !16831), !dbg !16832
  br label %do.body1327, !dbg !16833

do.body1327:                                      ; preds = %tz_hh_mm
  store i32 6, i32* %digits, align 4, !dbg !16834, !tbaa !2436
  store i32 4, i32* %tz_colon_mask, align 4, !dbg !16834, !tbaa !2436
  %723 = load i32, i32* %hour_diff, align 4, !dbg !16834, !tbaa !2436
  %mul1328 = mul nsw i32 %723, 100, !dbg !16834
  %724 = load i32, i32* %min_diff, align 4, !dbg !16834, !tbaa !2436
  %add1329 = add nsw i32 %mul1328, %724, !dbg !16834
  store i32 %add1329, i32* %u_number_value, align 4, !dbg !16834, !tbaa !2436
  br label %do_tz_offset, !dbg !16834

do.end1331:                                       ; No predecessors!
  br label %sw.bb1332, !dbg !16834

sw.bb1332:                                        ; preds = %lor.end1313, %do.end1331
  br label %tz_hh_mm_ss, !dbg !16834

tz_hh_mm_ss:                                      ; preds = %if.then1343, %sw.bb1332
  call void @llvm.dbg.label(metadata !16836), !dbg !16837
  br label %do.body1333, !dbg !16838

do.body1333:                                      ; preds = %tz_hh_mm_ss
  store i32 9, i32* %digits, align 4, !dbg !16839, !tbaa !2436
  store i32 20, i32* %tz_colon_mask, align 4, !dbg !16839, !tbaa !2436
  %725 = load i32, i32* %hour_diff, align 4, !dbg !16839, !tbaa !2436
  %mul1334 = mul nsw i32 %725, 10000, !dbg !16839
  %726 = load i32, i32* %min_diff, align 4, !dbg !16839, !tbaa !2436
  %mul1335 = mul nsw i32 %726, 100, !dbg !16839
  %add1336 = add nsw i32 %mul1334, %mul1335, !dbg !16839
  %727 = load i32, i32* %sec_diff, align 4, !dbg !16839, !tbaa !2436
  %add1337 = add nsw i32 %add1336, %727, !dbg !16839
  store i32 %add1337, i32* %u_number_value, align 4, !dbg !16839, !tbaa !2436
  br label %do_tz_offset, !dbg !16839

do.end1339:                                       ; No predecessors!
  br label %sw.bb1340, !dbg !16839

sw.bb1340:                                        ; preds = %lor.end1313, %do.end1339
  %728 = load i32, i32* %sec_diff, align 4, !dbg !16841, !tbaa !2436
  %cmp1341 = icmp ne i32 %728, 0, !dbg !16843
  br i1 %cmp1341, label %if.then1343, label %if.end1344, !dbg !16844

if.then1343:                                      ; preds = %sw.bb1340
  br label %tz_hh_mm_ss, !dbg !16845

if.end1344:                                       ; preds = %sw.bb1340
  %729 = load i32, i32* %min_diff, align 4, !dbg !16846, !tbaa !2436
  %cmp1345 = icmp ne i32 %729, 0, !dbg !16848
  br i1 %cmp1345, label %if.then1347, label %if.end1348, !dbg !16849

if.then1347:                                      ; preds = %if.end1344
  br label %tz_hh_mm, !dbg !16850

if.end1348:                                       ; preds = %if.end1344
  br label %do.body1349, !dbg !16851

do.body1349:                                      ; preds = %if.end1348
  store i32 3, i32* %digits, align 4, !dbg !16852, !tbaa !2436
  store i32 0, i32* %tz_colon_mask, align 4, !dbg !16852, !tbaa !2436
  %730 = load i32, i32* %hour_diff, align 4, !dbg !16852, !tbaa !2436
  store i32 %730, i32* %u_number_value, align 4, !dbg !16852, !tbaa !2436
  br label %do_tz_offset, !dbg !16852

do.end1351:                                       ; No predecessors!
  br label %sw.default1352, !dbg !16852

sw.default1352:                                   ; preds = %lor.end1313, %do.end1351
  br label %bad_format, !dbg !16854

sw.bb1353:                                        ; preds = %sw.epilog87
  %731 = load i8*, i8** %f, align 8, !dbg !16855, !tbaa !2442
  %incdec.ptr1354 = getelementptr inbounds i8, i8* %731, i32 -1, !dbg !16855
  store i8* %incdec.ptr1354, i8** %f, align 8, !dbg !16855, !tbaa !2442
  br label %sw.default1355, !dbg !16856

sw.default1355:                                   ; preds = %sw.epilog87, %sw.bb1353
  br label %bad_format, !dbg !16856

bad_format:                                       ; preds = %sw.default1355, %sw.default1352, %if.then1293, %if.then1181, %if.then1168, %if.then1152, %if.then1043, %if.then1030, %if.then966, %if.then933, %if.then850, %if.then837, %if.then829, %if.then816, %if.then808, %if.then799, %if.then791, %if.then782, %if.then764, %if.then357, %if.then349, %if.then344, %if.then339, %if.then178, %if.then170, %if.then165, %if.then154, %if.then146, %if.then92
  call void @llvm.dbg.label(metadata !16857), !dbg !16858
  call void @llvm.dbg.declare(metadata i32* %flen, metadata !16859, metadata !DIExpression()), !dbg !16861
  store i32 1, i32* %flen, align 4, !dbg !16862, !tbaa !2436
  br label %for.cond1356, !dbg !16864

for.cond1356:                                     ; preds = %for.inc1363, %bad_format
  %732 = load i8*, i8** %f, align 8, !dbg !16865, !tbaa !2442
  %733 = load i32, i32* %flen, align 4, !dbg !16867, !tbaa !2436
  %sub1357 = sub nsw i32 1, %733, !dbg !16868
  %idxprom = sext i32 %sub1357 to i64, !dbg !16865
  %arrayidx1358 = getelementptr inbounds i8, i8* %732, i64 %idxprom, !dbg !16865, !ctir !146
  %734 = load i8, i8* %arrayidx1358, align 1, !dbg !16865, !tbaa !2497
  %conv1359 = sext i8 %734 to i32, !dbg !16865
  %cmp1360 = icmp ne i32 %conv1359, 37, !dbg !16869
  br i1 %cmp1360, label %for.body1362, label %for.end1365, !dbg !16870

for.body1362:                                     ; preds = %for.cond1356
  br label %for.inc1363, !dbg !16871

for.inc1363:                                      ; preds = %for.body1362
  %735 = load i32, i32* %flen, align 4, !dbg !16872, !tbaa !2436
  %inc1364 = add nsw i32 %735, 1, !dbg !16872
  store i32 %inc1364, i32* %flen, align 4, !dbg !16872, !tbaa !2436
  br label %for.cond1356, !dbg !16873, !llvm.loop !16874

for.end1365:                                      ; preds = %for.cond1356
  br label %do.body1366, !dbg !16876

do.body1366:                                      ; preds = %for.end1365
  call void @llvm.dbg.declare(metadata i64* %_n1367, metadata !16877, metadata !DIExpression()), !dbg !16879
  %736 = load i32, i32* %flen, align 4, !dbg !16879, !tbaa !2436
  %conv1368 = sext i32 %736 to i64, !dbg !16879
  store i64 %conv1368, i64* %_n1367, align 8, !dbg !16879, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_w1369, metadata !16880, metadata !DIExpression()), !dbg !16879
  %737 = load i32, i32* %width.addr, align 4, !dbg !16879, !tbaa !2436
  %cmp1370 = icmp slt i32 %737, 0, !dbg !16879
  br i1 %cmp1370, label %cond.true1372, label %cond.false1373, !dbg !16879

cond.true1372:                                    ; preds = %do.body1366
  br label %cond.end1374, !dbg !16879

cond.false1373:                                   ; preds = %do.body1366
  %738 = load i32, i32* %width.addr, align 4, !dbg !16879, !tbaa !2436
  br label %cond.end1374, !dbg !16879

cond.end1374:                                     ; preds = %cond.false1373, %cond.true1372
  %cond1375 = phi i32 [ 0, %cond.true1372 ], [ %738, %cond.false1373 ], !dbg !16879
  %conv1376 = sext i32 %cond1375 to i64, !dbg !16879
  store i64 %conv1376, i64* %_w1369, align 8, !dbg !16879, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %_incr1377, metadata !16881, metadata !DIExpression()), !dbg !16879
  %739 = load i64, i64* %_n1367, align 8, !dbg !16879, !tbaa !2579
  %740 = load i64, i64* %_w1369, align 8, !dbg !16879, !tbaa !2579
  %cmp1378 = icmp ult i64 %739, %740, !dbg !16879
  br i1 %cmp1378, label %cond.true1380, label %cond.false1381, !dbg !16879

cond.true1380:                                    ; preds = %cond.end1374
  %741 = load i64, i64* %_w1369, align 8, !dbg !16879, !tbaa !2579
  br label %cond.end1382, !dbg !16879

cond.false1381:                                   ; preds = %cond.end1374
  %742 = load i64, i64* %_n1367, align 8, !dbg !16879, !tbaa !2579
  br label %cond.end1382, !dbg !16879

cond.end1382:                                     ; preds = %cond.false1381, %cond.true1380
  %cond1383 = phi i64 [ %741, %cond.true1380 ], [ %742, %cond.false1381 ], !dbg !16879
  store i64 %cond1383, i64* %_incr1377, align 8, !dbg !16879, !tbaa !2579
  %743 = load i64, i64* %_incr1377, align 8, !dbg !16882, !tbaa !2579
  %744 = load i64, i64* %maxsize.addr, align 8, !dbg !16882, !tbaa !2579
  %745 = load i64, i64* %i, align 8, !dbg !16882, !tbaa !2579
  %sub1384 = sub i64 %744, %745, !dbg !16882
  %cmp1385 = icmp uge i64 %743, %sub1384, !dbg !16882
  br i1 %cmp1385, label %if.then1387, label %if.end1388, !dbg !16879

if.then1387:                                      ; preds = %cond.end1382
  store i64 0, i64* %retval, align 8, !dbg !16882
  br label %return, !dbg !16882

if.end1388:                                       ; preds = %cond.end1382
  %746 = load i8*, i8** %p, align 8, !dbg !16884, !tbaa !2442
  %tobool1389 = icmp ne i8* %746, null, !dbg !16884
  br i1 %tobool1389, label %if.then1390, label %if.end1431, !dbg !16879

if.then1390:                                      ; preds = %if.end1388
  %747 = load i32, i32* %digits, align 4, !dbg !16886, !tbaa !2436
  %cmp1391 = icmp eq i32 %747, 0, !dbg !16886
  br i1 %cmp1391, label %land.lhs.true1393, label %if.end1410, !dbg !16886

land.lhs.true1393:                                ; preds = %if.then1390
  %748 = load i64, i64* %_n1367, align 8, !dbg !16886, !tbaa !2579
  %749 = load i64, i64* %_w1369, align 8, !dbg !16886, !tbaa !2579
  %cmp1394 = icmp ult i64 %748, %749, !dbg !16886
  br i1 %cmp1394, label %if.then1396, label %if.end1410, !dbg !16889

if.then1396:                                      ; preds = %land.lhs.true1393
  call void @llvm.dbg.declare(metadata i64* %_delta1397, metadata !16890, metadata !DIExpression()), !dbg !16892
  %750 = load i32, i32* %width.addr, align 4, !dbg !16892, !tbaa !2436
  %conv1398 = sext i32 %750 to i64, !dbg !16892
  %751 = load i64, i64* %_n1367, align 8, !dbg !16892, !tbaa !2579
  %sub1399 = sub i64 %conv1398, %751, !dbg !16892
  store i64 %sub1399, i64* %_delta1397, align 8, !dbg !16892, !tbaa !2579
  %752 = load i32, i32* %pad, align 4, !dbg !16893, !tbaa !2436
  %cmp1400 = icmp eq i32 %752, 48, !dbg !16893
  br i1 %cmp1400, label %if.then1405, label %lor.lhs.false1402, !dbg !16893

lor.lhs.false1402:                                ; preds = %if.then1396
  %753 = load i32, i32* %pad, align 4, !dbg !16893, !tbaa !2436
  %cmp1403 = icmp eq i32 %753, 43, !dbg !16893
  br i1 %cmp1403, label %if.then1405, label %if.else1407, !dbg !16892

if.then1405:                                      ; preds = %lor.lhs.false1402, %if.then1396
  %754 = load i8*, i8** %p, align 8, !dbg !16893, !tbaa !2442
  %755 = load i64, i64* %_delta1397, align 8, !dbg !16893, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %754, i8 48, i64 %755, i1 false), !dbg !16893
  %756 = load i64, i64* %_delta1397, align 8, !dbg !16893, !tbaa !2579
  %757 = load i8*, i8** %p, align 8, !dbg !16893, !tbaa !2442
  %add.ptr1406 = getelementptr inbounds i8, i8* %757, i64 %756, !dbg !16893
  store i8* %add.ptr1406, i8** %p, align 8, !dbg !16893, !tbaa !2442
  br label %if.end1409, !dbg !16893

if.else1407:                                      ; preds = %lor.lhs.false1402
  %758 = load i8*, i8** %p, align 8, !dbg !16893, !tbaa !2442
  %759 = load i64, i64* %_delta1397, align 8, !dbg !16893, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %758, i8 32, i64 %759, i1 false), !dbg !16893
  %760 = load i64, i64* %_delta1397, align 8, !dbg !16893, !tbaa !2579
  %761 = load i8*, i8** %p, align 8, !dbg !16893, !tbaa !2442
  %add.ptr1408 = getelementptr inbounds i8, i8* %761, i64 %760, !dbg !16893
  store i8* %add.ptr1408, i8** %p, align 8, !dbg !16893, !tbaa !2442
  br label %if.end1409

if.end1409:                                       ; preds = %if.else1407, %if.then1405
  br label %if.end1410, !dbg !16892

if.end1410:                                       ; preds = %if.end1409, %land.lhs.true1393, %if.then1390
  %762 = load i8, i8* %to_lowcase, align 1, !dbg !16895, !tbaa !2461
  %tobool1411 = trunc i8 %762 to i1, !dbg !16895
  br i1 %tobool1411, label %if.then1412, label %if.else1417, !dbg !16889

if.then1412:                                      ; preds = %if.end1410
  %763 = load i8*, i8** %p, align 8, !dbg !16895, !tbaa !2442
  %764 = load i8*, i8** %f, align 8, !dbg !16895, !tbaa !2442
  %765 = load i32, i32* %flen, align 4, !dbg !16895, !tbaa !2436
  %sub1413 = sub nsw i32 1, %765, !dbg !16895
  %idxprom1414 = sext i32 %sub1413 to i64, !dbg !16895
  %arrayidx1415 = getelementptr inbounds i8, i8* %764, i64 %idxprom1414, !dbg !16895, !ctir !146
  %766 = load i64, i64* %_n1367, align 8, !dbg !16895, !tbaa !2579
  %call1416 = call i8* @memcpy_lowcase(i8* %763, i8* %arrayidx1415, i64 %766), !dbg !16895
  br label %if.end1429, !dbg !16895

if.else1417:                                      ; preds = %if.end1410
  %767 = load i8, i8* %to_uppcase, align 1, !dbg !16897, !tbaa !2461
  %tobool1418 = trunc i8 %767 to i1, !dbg !16897
  br i1 %tobool1418, label %if.then1419, label %if.else1424, !dbg !16895

if.then1419:                                      ; preds = %if.else1417
  %768 = load i8*, i8** %p, align 8, !dbg !16897, !tbaa !2442
  %769 = load i8*, i8** %f, align 8, !dbg !16897, !tbaa !2442
  %770 = load i32, i32* %flen, align 4, !dbg !16897, !tbaa !2436
  %sub1420 = sub nsw i32 1, %770, !dbg !16897
  %idxprom1421 = sext i32 %sub1420 to i64, !dbg !16897
  %arrayidx1422 = getelementptr inbounds i8, i8* %769, i64 %idxprom1421, !dbg !16897, !ctir !146
  %771 = load i64, i64* %_n1367, align 8, !dbg !16897, !tbaa !2579
  %call1423 = call i8* @memcpy_uppcase(i8* %768, i8* %arrayidx1422, i64 %771), !dbg !16897
  br label %if.end1428, !dbg !16897

if.else1424:                                      ; preds = %if.else1417
  %772 = load i8*, i8** %p, align 8, !dbg !16897, !tbaa !2442
  %773 = load i8*, i8** %f, align 8, !dbg !16897, !tbaa !2442
  %774 = load i32, i32* %flen, align 4, !dbg !16897, !tbaa !2436
  %sub1425 = sub nsw i32 1, %774, !dbg !16897
  %idxprom1426 = sext i32 %sub1425 to i64, !dbg !16897
  %arrayidx1427 = getelementptr inbounds i8, i8* %773, i64 %idxprom1426, !dbg !16897, !ctir !146
  %775 = load i64, i64* %_n1367, align 8, !dbg !16897, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %772, i8* align 1 %arrayidx1427, i64 %775, i1 false), !dbg !16897
  br label %if.end1428

if.end1428:                                       ; preds = %if.else1424, %if.then1419
  br label %if.end1429

if.end1429:                                       ; preds = %if.end1428, %if.then1412
  %776 = load i64, i64* %_n1367, align 8, !dbg !16889, !tbaa !2579
  %777 = load i8*, i8** %p, align 8, !dbg !16889, !tbaa !2442
  %add.ptr1430 = getelementptr inbounds i8, i8* %777, i64 %776, !dbg !16889
  store i8* %add.ptr1430, i8** %p, align 8, !dbg !16889, !tbaa !2442
  br label %if.end1431, !dbg !16889

if.end1431:                                       ; preds = %if.end1429, %if.end1388
  %778 = load i64, i64* %_incr1377, align 8, !dbg !16879, !tbaa !2579
  %779 = load i64, i64* %i, align 8, !dbg !16879, !tbaa !2579
  %add1432 = add i64 %779, %778, !dbg !16879
  store i64 %add1432, i64* %i, align 8, !dbg !16879, !tbaa !2579
  br label %do.end1434, !dbg !16879

do.end1434:                                       ; preds = %if.end1431
  br label %sw.epilog1435, !dbg !16899

sw.epilog1435:                                    ; preds = %do.end1434, %if.then1299, %do.end1279, %do.end1018, %do.end927, %do.end914, %do.end760, %if.end316, %do.end232, %do.end142
  br label %for.inc1436, !dbg !16900

for.inc1436:                                      ; preds = %sw.epilog1435, %do.end
  store i32 -1, i32* %width.addr, align 4, !dbg !16901, !tbaa !2436
  %780 = load i8*, i8** %f, align 8, !dbg !16902, !tbaa !2442
  %incdec.ptr1437 = getelementptr inbounds i8, i8* %780, i32 1, !dbg !16902
  store i8* %incdec.ptr1437, i8** %f, align 8, !dbg !16902, !tbaa !2442
  br label %for.cond, !dbg !16903, !llvm.loop !16904

for.end1438:                                      ; preds = %for.cond
  %781 = load i8*, i8** %p, align 8, !dbg !16906, !tbaa !2442
  %tobool1439 = icmp ne i8* %781, null, !dbg !16906
  br i1 %tobool1439, label %land.lhs.true1440, label %if.end1444, !dbg !16908

land.lhs.true1440:                                ; preds = %for.end1438
  %782 = load i64, i64* %maxsize.addr, align 8, !dbg !16909, !tbaa !2579
  %cmp1441 = icmp ne i64 %782, 0, !dbg !16910
  br i1 %cmp1441, label %if.then1443, label %if.end1444, !dbg !16911

if.then1443:                                      ; preds = %land.lhs.true1440
  %783 = load i8*, i8** %p, align 8, !dbg !16912, !tbaa !2442
  store i8 0, i8* %783, align 1, !dbg !16913, !tbaa !2497, !ctir !144
  br label %if.end1444, !dbg !16914

if.end1444:                                       ; preds = %if.then1443, %land.lhs.true1440, %for.end1438
  %784 = load i64, i64* %i, align 8, !dbg !16915, !tbaa !2579
  store i64 %784, i64* %retval, align 8, !dbg !16916
  br label %return, !dbg !16916

return:                                           ; preds = %if.end1444, %if.then1387, %if.then1241, %if.then990, %if.then886, %if.then722, %if.then665, %if.then603, %if.then579, %if.then544, %if.then506, %if.then456, %if.then271, %if.then201, %if.then114, %if.then26
  %785 = load i64, i64* %retval, align 8, !dbg !16917
  ret i64 %785, !dbg !16917
}

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_lowcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16918 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16919, metadata !DIExpression()), !dbg !16920
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16921, metadata !DIExpression()), !dbg !16922
  store i64 %len, i64* %len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16923, metadata !DIExpression()), !dbg !16924
  br label %while.cond, !dbg !16925

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16926, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !16926
  store i64 %dec, i64* %len.addr, align 8, !dbg !16926, !tbaa !2579
  %cmp = icmp ugt i64 %0, 0, !dbg !16927
  br i1 %cmp, label %while.body, label %while.end, !dbg !16925

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16928, !tbaa !2442
  %2 = load i64, i64* %len.addr, align 8, !dbg !16928, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16928, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16928, !tbaa !2497
  %conv = zext i8 %3 to i32, !dbg !16928
  %call = call i32 @tolower(i32 %conv) #16, !dbg !16928
  %conv1 = trunc i32 %call to i8, !dbg !16928
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16929, !tbaa !2442
  %5 = load i64, i64* %len.addr, align 8, !dbg !16930, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16929, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16931, !tbaa !2497
  br label %while.cond, !dbg !16925, !llvm.loop !16932

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16933, !tbaa !2442
  ret i8* %6, !dbg !16934
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @memcpy_uppcase(i8* %dest, i8* %src, i64 %len) #0 !dbg !16935 !ctir !1881 {
entry:
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  store i8* %src, i8** %src.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16938, metadata !DIExpression()), !dbg !16939
  store i64 %len, i64* %len.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16940, metadata !DIExpression()), !dbg !16941
  br label %while.cond, !dbg !16942

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16943, !tbaa !2579
  %dec = add i64 %0, -1, !dbg !16943
  store i64 %dec, i64* %len.addr, align 8, !dbg !16943, !tbaa !2579
  %cmp = icmp ugt i64 %0, 0, !dbg !16944
  br i1 %cmp, label %while.body, label %while.end, !dbg !16942

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16945, !tbaa !2442
  %2 = load i64, i64* %len.addr, align 8, !dbg !16945, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !16945, !ctir !146
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16945, !tbaa !2497
  %conv = zext i8 %3 to i32, !dbg !16945
  %call = call i32 @toupper(i32 %conv) #16, !dbg !16945
  %conv1 = trunc i32 %call to i8, !dbg !16945
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !16946, !tbaa !2442
  %5 = load i64, i64* %len.addr, align 8, !dbg !16947, !tbaa !2579
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !16946, !ctir !143
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !16948, !tbaa !2497
  br label %while.cond, !dbg !16942, !llvm.loop !16949

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !16950, !tbaa !2442
  ret i8* %6, !dbg !16951
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iso_week_days(i32 %yday, i32 %wday) #0 !dbg !16952 !ctir !1950 {
entry:
  %yday.addr = alloca i32, align 4
  %wday.addr = alloca i32, align 4
  %big_enough_multiple_of_7 = alloca i32, align 4, !ctir !27
  store i32 %yday, i32* %yday.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %yday.addr, metadata !16953, metadata !DIExpression()), !dbg !16954
  store i32 %wday, i32* %wday.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %wday.addr, metadata !16955, metadata !DIExpression()), !dbg !16956
  call void @llvm.dbg.declare(metadata i32* %big_enough_multiple_of_7, metadata !16957, metadata !DIExpression()), !dbg !16958
  store i32 378, i32* %big_enough_multiple_of_7, align 4, !dbg !16958, !tbaa !2436
  %0 = load i32, i32* %yday.addr, align 4, !dbg !16959, !tbaa !2436
  %1 = load i32, i32* %yday.addr, align 4, !dbg !16960, !tbaa !2436
  %2 = load i32, i32* %wday.addr, align 4, !dbg !16961, !tbaa !2436
  %sub = sub nsw i32 %1, %2, !dbg !16962
  %add = add nsw i32 %sub, 4, !dbg !16963
  %3 = load i32, i32* %big_enough_multiple_of_7, align 4, !dbg !16964, !tbaa !2436
  %add1 = add nsw i32 %add, %3, !dbg !16965
  %rem = srem i32 %add1, 7, !dbg !16966
  %sub2 = sub nsw i32 %0, %rem, !dbg !16967
  %add3 = add nsw i32 %sub2, 4, !dbg !16968
  %sub4 = sub nsw i32 %add3, 1, !dbg !16969
  ret i32 %sub4, !dbg !16970
}

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #0 !dbg !16971 !ctir !570 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !146
  %base = alloca i8*, align 8, !ctir !146
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !16972, metadata !DIExpression()), !dbg !16973
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !16974, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.declare(metadata i8** %base, metadata !16976, metadata !DIExpression()), !dbg !16977
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !16978, !tbaa !2442
  %cmp = icmp eq i8* %0, null, !dbg !16980
  br i1 %cmp, label %if.then, label %if.end, !dbg !16981

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16982, !tbaa !2442
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.370, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !16984
  call void @abort() #15, !dbg !16985
  unreachable, !dbg !16985

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !16986, !tbaa !2442
  %call1 = call i8* @strrchr(i8* %2, i32 47) #16, !dbg !16987
  store i8* %call1, i8** %slash, align 8, !dbg !16988, !tbaa !2442
  %3 = load i8*, i8** %slash, align 8, !dbg !16989, !tbaa !2442
  %cmp2 = icmp ne i8* %3, null, !dbg !16990
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !16989

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !16991, !tbaa !2442
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !16992
  br label %cond.end, !dbg !16989

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !16993, !tbaa !2442
  br label %cond.end, !dbg !16989

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !16989
  store i8* %cond, i8** %base, align 8, !dbg !16994, !tbaa !2442
  %6 = load i8*, i8** %base, align 8, !dbg !16995, !tbaa !2442
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !16997, !tbaa !2442
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !16998
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !16998
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16998
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !16999
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !17000

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !17001, !tbaa !2442
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !17002
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.371, i64 0, i64 0), i64 7) #16, !dbg !17003
  %cmp6 = icmp eq i32 %call5, 0, !dbg !17004
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !17005

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !17006, !tbaa !2442
  store i8* %9, i8** %argv0.addr, align 8, !dbg !17008, !tbaa !2442
  %10 = load i8*, i8** %base, align 8, !dbg !17009, !tbaa !2442
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.372, i64 0, i64 0), i64 3) #16, !dbg !17011
  %cmp9 = icmp eq i32 %call8, 0, !dbg !17012
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !17013

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !17014, !tbaa !2442
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !17016
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !17017, !tbaa !2442
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !17018, !tbaa !2442
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !17019, !tbaa !2442
  br label %if.end12, !dbg !17020

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !17021

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !17022, !tbaa !2442
  store i8* %13, i8** @program_name, align 8, !dbg !17023, !tbaa !2442
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !17024, !tbaa !2442
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !17025, !tbaa !2442
  ret void, !dbg !17026
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #0 !dbg !17027 !ctir !1443 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %p = alloca %struct.quoting_options*, align 8, !ctir !1445
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17028, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17030, metadata !DIExpression()), !dbg !17031
  %call = call i32* @__errno_location() #17, !dbg !17032
  %0 = load i32, i32* %call, align 4, !dbg !17032, !tbaa !2436, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !17031, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17033, metadata !DIExpression()), !dbg !17034
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17035, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17035
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17035

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17036, !tbaa !2442
  br label %cond.end, !dbg !17035

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17035
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !17035
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !17037
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !17037
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !17034, !tbaa !2442
  %5 = load i32, i32* %e, align 4, !dbg !17038, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !17039
  store i32 %5, i32* %call2, align 4, !dbg !17040, !tbaa !2436, !ctir !27
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17041, !tbaa !2442
  ret %struct.quoting_options* %6, !dbg !17042
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #0 !dbg !17043 !ctir !1455 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17044, metadata !DIExpression()), !dbg !17045
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17046, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17046
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17046

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17047, !tbaa !2442
  br label %cond.end, !dbg !17046

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17046

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17046
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17048, !ctir !1458
  %2 = load i32, i32* %style, align 8, !dbg !17048, !tbaa !17049, !ctir !95
  ret i32 %2, !dbg !17051
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #0 !dbg !17052 !ctir !1459 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17053, metadata !DIExpression()), !dbg !17054
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !17055, metadata !DIExpression()), !dbg !17056
  %0 = load i32, i32* %s.addr, align 4, !dbg !17057, !tbaa !2497
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17058, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17058
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17058

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17059, !tbaa !2442
  br label %cond.end, !dbg !17058

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17058

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17058
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !17060, !ctir !1446
  store i32 %0, i32* %style, align 8, !dbg !17061, !tbaa !17049, !ctir !95
  ret void, !dbg !17062
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #0 !dbg !17063 !ctir !1461 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !591
  %p = alloca i32*, align 8, !ctir !1463
  %shift = alloca i32, align 4, !ctir !27
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17064, metadata !DIExpression()), !dbg !17065
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !17066, metadata !DIExpression()), !dbg !17067
  store i32 %i, i32* %i.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17068, metadata !DIExpression()), !dbg !17069
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !17070, metadata !DIExpression()), !dbg !17071
  %0 = load i8, i8* %c.addr, align 1, !dbg !17072, !tbaa !2497
  store i8 %0, i8* %uc, align 1, !dbg !17071, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32** %p, metadata !17073, metadata !DIExpression()), !dbg !17074
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17075, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !17075
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17075

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17076, !tbaa !2442
  br label %cond.end, !dbg !17075

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17075
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !17077, !ctir !1446
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17078
  %3 = load i8, i8* %uc, align 1, !dbg !17079, !tbaa !2497
  %conv = zext i8 %3 to i64, !dbg !17079
  %div = udiv i64 %conv, 32, !dbg !17080
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !17081
  store i32* %add.ptr, i32** %p, align 8, !dbg !17074, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !17082, metadata !DIExpression()), !dbg !17083
  %4 = load i8, i8* %uc, align 1, !dbg !17084, !tbaa !2497
  %conv1 = zext i8 %4 to i64, !dbg !17084
  %rem = urem i64 %conv1, 32, !dbg !17085
  %conv2 = trunc i64 %rem to i32, !dbg !17084
  store i32 %conv2, i32* %shift, align 4, !dbg !17083, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17086, metadata !DIExpression()), !dbg !17087
  %5 = load i32*, i32** %p, align 8, !dbg !17088, !tbaa !2442
  %6 = load i32, i32* %5, align 4, !dbg !17089, !tbaa !2436, !ctir !6
  %7 = load i32, i32* %shift, align 4, !dbg !17090, !tbaa !2436
  %shr = lshr i32 %6, %7, !dbg !17091
  %and = and i32 %shr, 1, !dbg !17092
  store i32 %and, i32* %r, align 4, !dbg !17087, !tbaa !2436
  %8 = load i32, i32* %i.addr, align 4, !dbg !17093, !tbaa !2436
  %and3 = and i32 %8, 1, !dbg !17094
  %9 = load i32, i32* %r, align 4, !dbg !17095, !tbaa !2436
  %xor = xor i32 %and3, %9, !dbg !17096
  %10 = load i32, i32* %shift, align 4, !dbg !17097, !tbaa !2436
  %shl = shl i32 %xor, %10, !dbg !17098
  %11 = load i32*, i32** %p, align 8, !dbg !17099, !tbaa !2442
  %12 = load i32, i32* %11, align 4, !dbg !17100, !tbaa !2436, !ctir !6
  %xor4 = xor i32 %12, %shl, !dbg !17100
  store i32 %xor4, i32* %11, align 4, !dbg !17100, !tbaa !2436, !ctir !6
  %13 = load i32, i32* %r, align 4, !dbg !17101, !tbaa !2436
  ret i32 %13, !dbg !17102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #0 !dbg !17103 !ctir !1464 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !27
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17104, metadata !DIExpression()), !dbg !17105
  store i32 %i, i32* %i.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !17106, metadata !DIExpression()), !dbg !17107
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17108, metadata !DIExpression()), !dbg !17109
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17110, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17110
  br i1 %tobool, label %if.end, label %if.then, !dbg !17112

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17113, !tbaa !2442
  br label %if.end, !dbg !17114

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17115, !tbaa !2442
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !17116, !ctir !1446
  %2 = load i32, i32* %flags, align 4, !dbg !17116, !tbaa !17117, !ctir !27
  store i32 %2, i32* %r, align 4, !dbg !17118, !tbaa !2436
  %3 = load i32, i32* %i.addr, align 4, !dbg !17119, !tbaa !2436
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17120, !tbaa !2442
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !17121, !ctir !1446
  store i32 %3, i32* %flags1, align 4, !dbg !17122, !tbaa !17117, !ctir !27
  %5 = load i32, i32* %r, align 4, !dbg !17123, !tbaa !2436
  ret i32 %5, !dbg !17124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #0 !dbg !17125 !ctir !1466 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17128, metadata !DIExpression()), !dbg !17129
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17130, metadata !DIExpression()), !dbg !17131
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17132, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17132
  br i1 %tobool, label %if.end, label %if.then, !dbg !17134

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !17135, !tbaa !2442
  br label %if.end, !dbg !17136

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17137, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !17138, !ctir !1446
  store i32 10, i32* %style, align 8, !dbg !17139, !tbaa !17049, !ctir !95
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !17140, !tbaa !2442
  %tobool1 = icmp ne i8* %2, null, !dbg !17140
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !17142

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !17143, !tbaa !2442
  %tobool2 = icmp ne i8* %3, null, !dbg !17143
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !17144

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #15, !dbg !17145
  unreachable, !dbg !17145

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !17146, !tbaa !2442
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17147, !tbaa !2442
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !17148, !ctir !1446
  store i8* %4, i8** %left_quote5, align 8, !dbg !17149, !tbaa !17150, !ctir !146
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !17151, !tbaa !2442
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17152, !tbaa !2442
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !17153, !ctir !1446
  store i8* %6, i8** %right_quote6, align 8, !dbg !17154, !tbaa !17155, !ctir !146
  ret void, !dbg !17156
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !17157 !ctir !1468 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1457
  %e = alloca i32, align 4, !ctir !27
  %r = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17158, metadata !DIExpression()), !dbg !17159
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17160, metadata !DIExpression()), !dbg !17161
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17162, metadata !DIExpression()), !dbg !17163
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17164, metadata !DIExpression()), !dbg !17165
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !17166, metadata !DIExpression()), !dbg !17167
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !17168, metadata !DIExpression()), !dbg !17169
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17170, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !17170
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17170

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !17171, !tbaa !2442
  br label %cond.end, !dbg !17170

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !17170
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !17169, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17172, metadata !DIExpression()), !dbg !17173
  %call = call i32* @__errno_location() #17, !dbg !17174
  %2 = load i32, i32* %call, align 4, !dbg !17174, !tbaa !2436, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !17173, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %r, metadata !17175, metadata !DIExpression()), !dbg !17176
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !17177, !tbaa !2442
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17178, !tbaa !2579
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !17179, !tbaa !2442
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !17180, !tbaa !2579
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17181, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !17182, !ctir !1458
  %8 = load i32, i32* %style, align 8, !dbg !17182, !tbaa !17049, !ctir !95
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17183, !tbaa !2442
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !17184, !ctir !1458
  %10 = load i32, i32* %flags, align 4, !dbg !17184, !tbaa !17117, !ctir !27
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17185, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !17186, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !17185
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17187, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !17188, !ctir !1458
  %13 = load i8*, i8** %left_quote, align 8, !dbg !17188, !tbaa !17150, !ctir !146
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !17189, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !17190, !ctir !1458
  %15 = load i8*, i8** %right_quote, align 8, !dbg !17190, !tbaa !17155, !ctir !146
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !17191
  store i64 %call1, i64* %r, align 8, !dbg !17176, !tbaa !2579
  %16 = load i32, i32* %e, align 4, !dbg !17192, !tbaa !2436
  %call2 = call i32* @__errno_location() #17, !dbg !17193
  store i32 %16, i32* %call2, align 4, !dbg !17194, !tbaa !2436, !ctir !27
  %17 = load i64, i64* %r, align 8, !dbg !17195, !tbaa !2579
  ret i64 %17, !dbg !17196
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #0 !dbg !17197 !ctir !1511 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !149
  %len = alloca i64, align 8, !ctir !149
  %orig_buffersize = alloca i64, align 8, !ctir !149
  %quote_string = alloca i8*, align 8, !ctir !146
  %quote_string_len = alloca i64, align 8, !ctir !149
  %backslash_escapes = alloca i8, align 1, !ctir !141
  %unibyte_locale = alloca i8, align 1, !ctir !141
  %elide_outer_quotes = alloca i8, align 1, !ctir !141
  %pending_shell_escape_end = alloca i8, align 1, !ctir !141
  %encountered_single_quote = alloca i8, align 1, !ctir !141
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %c = alloca i8, align 1, !ctir !591
  %esc = alloca i8, align 1, !ctir !591
  %is_right_quote = alloca i8, align 1, !ctir !141
  %escaping = alloca i8, align 1, !ctir !141
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !141
  %m = alloca i64, align 8, !ctir !149
  %printable = alloca i8, align 1, !ctir !141
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1515
  %w = alloca i32, align 4, !ctir !654
  %bytes = alloca i64, align 8, !ctir !149
  %j = alloca i64, align 8, !ctir !149
  %ilim = alloca i64, align 8, !ctir !149
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !17198, metadata !DIExpression()), !dbg !17199
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !17200, metadata !DIExpression()), !dbg !17201
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17202, metadata !DIExpression()), !dbg !17203
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !17204, metadata !DIExpression()), !dbg !17205
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !17206, metadata !DIExpression()), !dbg !17207
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17208, metadata !DIExpression()), !dbg !17209
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !17210, metadata !DIExpression()), !dbg !17211
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !17212, metadata !DIExpression()), !dbg !17213
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !17214, metadata !DIExpression()), !dbg !17215
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17216, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17218, metadata !DIExpression()), !dbg !17219
  store i64 0, i64* %len, align 8, !dbg !17219, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !17220, metadata !DIExpression()), !dbg !17221
  store i64 0, i64* %orig_buffersize, align 8, !dbg !17221, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !17222, metadata !DIExpression()), !dbg !17223
  store i8* null, i8** %quote_string, align 8, !dbg !17223, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !17224, metadata !DIExpression()), !dbg !17225
  store i64 0, i64* %quote_string_len, align 8, !dbg !17225, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !17226, metadata !DIExpression()), !dbg !17227
  store i8 0, i8* %backslash_escapes, align 1, !dbg !17227, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !17228, metadata !DIExpression()), !dbg !17229
  %call = call i64 @__ctype_get_mb_cur_max() #13, !dbg !17230
  %cmp = icmp eq i64 %call, 1, !dbg !17231
  %frombool = zext i1 %cmp to i8, !dbg !17229
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !17229, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !17232, metadata !DIExpression()), !dbg !17233
  %0 = load i32, i32* %flags.addr, align 4, !dbg !17234, !tbaa !2436
  %and = and i32 %0, 2, !dbg !17235
  %cmp1 = icmp ne i32 %and, 0, !dbg !17236
  %frombool2 = zext i1 %cmp1 to i8, !dbg !17233
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !17233, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !17237, metadata !DIExpression()), !dbg !17238
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17238, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !17239, metadata !DIExpression()), !dbg !17240
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !17240, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !17241, metadata !DIExpression()), !dbg !17242
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17242, !tbaa !2461
  br label %process_input, !dbg !17243

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !17244), !dbg !17245
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !17246, !tbaa !2497
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !17247

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !17248, !tbaa !2497
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17250, !tbaa !2461
  br label %sw.bb3, !dbg !17251

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17252, !tbaa !2461
  %tobool = trunc i8 %2 to i1, !dbg !17252
  br i1 %tobool, label %if.end6, label %if.then, !dbg !17254

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !17255

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !17256, !tbaa !2579
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !17256, !tbaa !2579
  %cmp4 = icmp ult i64 %3, %4, !dbg !17256
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !17259

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !17256, !tbaa !2442
  %6 = load i64, i64* %len, align 8, !dbg !17256, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !17256, !ctir !143
  store i8 34, i8* %arrayidx, align 1, !dbg !17256, !tbaa !2497
  br label %if.end, !dbg !17256

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !17259, !tbaa !2579
  %inc = add i64 %7, 1, !dbg !17259
  store i64 %inc, i64* %len, align 8, !dbg !17259, !tbaa !2579
  br label %do.end, !dbg !17259

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !17259

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17260, !tbaa !2461
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.397, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17261, !tbaa !2442
  store i64 1, i64* %quote_string_len, align 8, !dbg !17262, !tbaa !2579
  br label %sw.epilog, !dbg !17263

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17264, !tbaa !2461
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17265, !tbaa !2461
  br label %sw.epilog, !dbg !17266

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !17267, !tbaa !2497
  %cmp9 = icmp ne i32 %8, 10, !dbg !17270
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !17271

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !17272, !tbaa !2497
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.398, i64 0, i64 0), i32 %9), !dbg !17274
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !17275, !tbaa !2442
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !17276, !tbaa !2497
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), i32 %10), !dbg !17277
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !17278, !tbaa !2442
  br label %if.end13, !dbg !17279

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17280, !tbaa !2461
  %tobool14 = trunc i8 %11 to i1, !dbg !17280
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !17282

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !17283, !tbaa !2442
  store i8* %12, i8** %quote_string, align 8, !dbg !17285, !tbaa !2442
  br label %for.cond, !dbg !17286

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !17287, !tbaa !2442
  %14 = load i8, i8* %13, align 1, !dbg !17289, !tbaa !2497, !ctir !147
  %tobool16 = icmp ne i8 %14, 0, !dbg !17290
  br i1 %tobool16, label %for.body, label %for.end, !dbg !17290

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !17291

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !17292, !tbaa !2579
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !17292, !tbaa !2579
  %cmp18 = icmp ult i64 %15, %16, !dbg !17292
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !17295

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !17292, !tbaa !2442
  %18 = load i8, i8* %17, align 1, !dbg !17292, !tbaa !2497, !ctir !147
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !17292, !tbaa !2442
  %20 = load i64, i64* %len, align 8, !dbg !17292, !tbaa !2579
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !17292, !ctir !143
  store i8 %18, i8* %arrayidx20, align 1, !dbg !17292, !tbaa !2497
  br label %if.end21, !dbg !17292

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !17295, !tbaa !2579
  %inc22 = add i64 %21, 1, !dbg !17295
  store i64 %inc22, i64* %len, align 8, !dbg !17295, !tbaa !2579
  br label %do.end23, !dbg !17295

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !17295

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !17296, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !17296
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !17296, !tbaa !2442
  br label %for.cond, !dbg !17297, !llvm.loop !17298

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !17299

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17300, !tbaa !2461
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !17301, !tbaa !2442
  store i8* %23, i8** %quote_string, align 8, !dbg !17302, !tbaa !2442
  %24 = load i8*, i8** %quote_string, align 8, !dbg !17303, !tbaa !2442
  %call25 = call i64 @strlen(i8* %24) #16, !dbg !17304
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !17305, !tbaa !2579
  br label %sw.epilog, !dbg !17306

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17307, !tbaa !2461
  br label %sw.bb27, !dbg !17308

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !17309, !tbaa !2461
  br label %sw.bb28, !dbg !17310

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17311, !tbaa !2461
  %tobool29 = trunc i8 %25 to i1, !dbg !17311
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !17313

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !17314, !tbaa !2461
  br label %if.end31, !dbg !17315

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !17316

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !17317, !tbaa !2497
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17318, !tbaa !2461
  %tobool33 = trunc i8 %26 to i1, !dbg !17318
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !17320

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !17321

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !17322, !tbaa !2579
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !17322, !tbaa !2579
  %cmp36 = icmp ult i64 %27, %28, !dbg !17322
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !17325

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !17322, !tbaa !2442
  %30 = load i64, i64* %len, align 8, !dbg !17322, !tbaa !2579
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !17322, !ctir !143
  store i8 39, i8* %arrayidx38, align 1, !dbg !17322, !tbaa !2497
  br label %if.end39, !dbg !17322

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !17325, !tbaa !2579
  %inc40 = add i64 %31, 1, !dbg !17325
  store i64 %inc40, i64* %len, align 8, !dbg !17325, !tbaa !2579
  br label %do.end41, !dbg !17325

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !17325

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), i8** %quote_string, align 8, !dbg !17326, !tbaa !2442
  store i64 1, i64* %quote_string_len, align 8, !dbg !17327, !tbaa !2579
  br label %sw.epilog, !dbg !17328

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !17329, !tbaa !2461
  br label %sw.epilog, !dbg !17330

sw.default:                                       ; preds = %process_input
  call void @abort() #15, !dbg !17331
  unreachable, !dbg !17331

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !17332, !tbaa !2579
  br label %for.cond44, !dbg !17334

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !17335, !tbaa !2579
  %cmp45 = icmp eq i64 %32, -1, !dbg !17337
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !17335

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !17338, !tbaa !2442
  %34 = load i64, i64* %i, align 8, !dbg !17339, !tbaa !2579
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !17338, !ctir !146
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !17338, !tbaa !2497
  %conv = sext i8 %35 to i32, !dbg !17338
  %cmp47 = icmp eq i32 %conv, 0, !dbg !17340
  %conv48 = zext i1 %cmp47 to i32, !dbg !17340
  br label %cond.end, !dbg !17335

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !17341, !tbaa !2579
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !17342, !tbaa !2579
  %cmp49 = icmp eq i64 %36, %37, !dbg !17343
  %conv50 = zext i1 %cmp49 to i32, !dbg !17343
  br label %cond.end, !dbg !17335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !17335
  %tobool51 = icmp ne i32 %cond, 0, !dbg !17344
  %lnot = xor i1 %tobool51, true, !dbg !17344
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !17345

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !17346, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !17349, metadata !DIExpression()), !dbg !17350
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !17351, metadata !DIExpression()), !dbg !17352
  store i8 0, i8* %is_right_quote, align 1, !dbg !17352, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !17353, metadata !DIExpression()), !dbg !17354
  store i8 0, i8* %escaping, align 1, !dbg !17354, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !17355, metadata !DIExpression()), !dbg !17356
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !17356, !tbaa !2461
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !17357, !tbaa !2461
  %tobool53 = trunc i8 %38 to i1, !dbg !17357
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !17359

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !17360, !tbaa !2497
  %cmp55 = icmp ne i32 %39, 2, !dbg !17361
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !17362

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !17363, !tbaa !2579
  %tobool58 = icmp ne i64 %40, 0, !dbg !17363
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !17364

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !17365, !tbaa !2579
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !17366, !tbaa !2579
  %add = add i64 %41, %42, !dbg !17367
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !17368, !tbaa !2579
  %cmp60 = icmp eq i64 %43, -1, !dbg !17369
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !17370

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !17371, !tbaa !2579
  %cmp63 = icmp ult i64 1, %44, !dbg !17372
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !17368

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !17373, !tbaa !2442
  %call66 = call i64 @strlen(i8* %45) #16, !dbg !17374
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !17375, !tbaa !2579
  br label %cond.end68, !dbg !17368

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !17376, !tbaa !2579
  br label %cond.end68, !dbg !17368

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !17368
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !17377
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !17378

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !17379, !tbaa !2442
  %48 = load i64, i64* %i, align 8, !dbg !17380, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !17381
  %49 = load i8*, i8** %quote_string, align 8, !dbg !17382, !tbaa !2442
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !17383, !tbaa !2579
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #16, !dbg !17384
  %cmp74 = icmp eq i32 %call73, 0, !dbg !17385
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !17386

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17387, !tbaa !2461
  %tobool77 = trunc i8 %51 to i1, !dbg !17387
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !17390

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !17391

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !17392, !tbaa !2461
  br label %if.end80, !dbg !17393

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !17394, !tbaa !2442
  %53 = load i64, i64* %i, align 8, !dbg !17395, !tbaa !2579
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !17394, !ctir !146
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !17394, !tbaa !2497
  store i8 %54, i8* %c, align 1, !dbg !17396, !tbaa !2497
  %55 = load i8, i8* %c, align 1, !dbg !17397, !tbaa !2497
  %conv82 = zext i8 %55 to i32, !dbg !17397
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !17398

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !17399, !tbaa !2461
  %tobool84 = trunc i8 %56 to i1, !dbg !17399
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !17402

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !17403

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17405, !tbaa !2461
  %tobool87 = trunc i8 %57 to i1, !dbg !17405
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !17408

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !17405

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !17408, !tbaa !2461
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !17409, !tbaa !2497
  %cmp90 = icmp eq i32 %58, 2, !dbg !17409
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !17409

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17409, !tbaa !2461
  %tobool93 = trunc i8 %59 to i1, !dbg !17409
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !17408

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !17411

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !17413, !tbaa !2579
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !17413, !tbaa !2579
  %cmp96 = icmp ult i64 %60, %61, !dbg !17413
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !17416

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !17413, !tbaa !2442
  %63 = load i64, i64* %len, align 8, !dbg !17413, !tbaa !2579
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !17413, !ctir !143
  store i8 39, i8* %arrayidx99, align 1, !dbg !17413, !tbaa !2497
  br label %if.end100, !dbg !17413

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !17416, !tbaa !2579
  %inc101 = add i64 %64, 1, !dbg !17416
  store i64 %inc101, i64* %len, align 8, !dbg !17416, !tbaa !2579
  br label %do.end102, !dbg !17416

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !17411

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !17417, !tbaa !2579
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !17417, !tbaa !2579
  %cmp104 = icmp ult i64 %65, %66, !dbg !17417
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !17420

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !17417, !tbaa !2442
  %68 = load i64, i64* %len, align 8, !dbg !17417, !tbaa !2579
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !17417, !ctir !143
  store i8 36, i8* %arrayidx107, align 1, !dbg !17417, !tbaa !2497
  br label %if.end108, !dbg !17417

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !17420, !tbaa !2579
  %inc109 = add i64 %69, 1, !dbg !17420
  store i64 %inc109, i64* %len, align 8, !dbg !17420, !tbaa !2579
  br label %do.end110, !dbg !17420

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !17411

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !17421, !tbaa !2579
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !17421, !tbaa !2579
  %cmp112 = icmp ult i64 %70, %71, !dbg !17421
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !17424

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !17421, !tbaa !2442
  %73 = load i64, i64* %len, align 8, !dbg !17421, !tbaa !2579
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !17421, !ctir !143
  store i8 39, i8* %arrayidx115, align 1, !dbg !17421, !tbaa !2497
  br label %if.end116, !dbg !17421

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !17424, !tbaa !2579
  %inc117 = add i64 %74, 1, !dbg !17424
  store i64 %inc117, i64* %len, align 8, !dbg !17424, !tbaa !2579
  br label %do.end118, !dbg !17424

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17411, !tbaa !2461
  br label %if.end119, !dbg !17411

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !17408

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !17425, !tbaa !2579
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !17425, !tbaa !2579
  %cmp121 = icmp ult i64 %75, %76, !dbg !17425
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !17428

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !17425, !tbaa !2442
  %78 = load i64, i64* %len, align 8, !dbg !17425, !tbaa !2579
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !17425, !ctir !143
  store i8 92, i8* %arrayidx124, align 1, !dbg !17425, !tbaa !2497
  br label %if.end125, !dbg !17425

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !17428, !tbaa !2579
  %inc126 = add i64 %79, 1, !dbg !17428
  store i64 %inc126, i64* %len, align 8, !dbg !17428, !tbaa !2579
  br label %do.end127, !dbg !17428

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !17408

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !17429, !tbaa !2497
  %cmp129 = icmp ne i32 %80, 2, !dbg !17431
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !17432

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !17433, !tbaa !2579
  %add132 = add i64 %81, 1, !dbg !17434
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !17435, !tbaa !2579
  %cmp133 = icmp ult i64 %add132, %82, !dbg !17436
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !17437

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !17438, !tbaa !2442
  %84 = load i64, i64* %i, align 8, !dbg !17439, !tbaa !2579
  %add136 = add i64 %84, 1, !dbg !17440
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !17438, !ctir !146
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !17438, !tbaa !2497
  %conv138 = sext i8 %85 to i32, !dbg !17438
  %cmp139 = icmp sle i32 48, %conv138, !dbg !17441
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !17442

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !17443, !tbaa !2442
  %87 = load i64, i64* %i, align 8, !dbg !17444, !tbaa !2579
  %add142 = add i64 %87, 1, !dbg !17445
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !17443, !ctir !146
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !17443, !tbaa !2497
  %conv144 = sext i8 %88 to i32, !dbg !17443
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !17446
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !17447

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !17448

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !17450, !tbaa !2579
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !17450, !tbaa !2579
  %cmp149 = icmp ult i64 %89, %90, !dbg !17450
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !17453

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !17450, !tbaa !2442
  %92 = load i64, i64* %len, align 8, !dbg !17450, !tbaa !2579
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !17450, !ctir !143
  store i8 48, i8* %arrayidx152, align 1, !dbg !17450, !tbaa !2497
  br label %if.end153, !dbg !17450

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !17453, !tbaa !2579
  %inc154 = add i64 %93, 1, !dbg !17453
  store i64 %inc154, i64* %len, align 8, !dbg !17453, !tbaa !2579
  br label %do.end155, !dbg !17453

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !17454

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !17455, !tbaa !2579
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !17455, !tbaa !2579
  %cmp157 = icmp ult i64 %94, %95, !dbg !17455
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !17458

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !17455, !tbaa !2442
  %97 = load i64, i64* %len, align 8, !dbg !17455, !tbaa !2579
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !17455, !ctir !143
  store i8 48, i8* %arrayidx160, align 1, !dbg !17455, !tbaa !2497
  br label %if.end161, !dbg !17455

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !17458, !tbaa !2579
  %inc162 = add i64 %98, 1, !dbg !17458
  store i64 %inc162, i64* %len, align 8, !dbg !17458, !tbaa !2579
  br label %do.end163, !dbg !17458

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !17459

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !17460, !tbaa !2497
  br label %if.end169, !dbg !17461

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !17462, !tbaa !2436
  %and165 = and i32 %99, 1, !dbg !17464
  %tobool166 = icmp ne i32 %and165, 0, !dbg !17464
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !17465

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !17466

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !17467

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !17468, !tbaa !2497
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !17469

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17470, !tbaa !2461
  %tobool172 = trunc i8 %101 to i1, !dbg !17470
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !17473

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !17474

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !17475

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !17476, !tbaa !2436
  %and176 = and i32 %102, 4, !dbg !17478
  %tobool177 = icmp ne i32 %and176, 0, !dbg !17478
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !17479

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !17480, !tbaa !2579
  %add179 = add i64 %103, 2, !dbg !17481
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !17482, !tbaa !2579
  %cmp180 = icmp ult i64 %add179, %104, !dbg !17483
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !17484

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !17485, !tbaa !2442
  %106 = load i64, i64* %i, align 8, !dbg !17486, !tbaa !2579
  %add183 = add i64 %106, 1, !dbg !17487
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !17485, !ctir !146
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !17485, !tbaa !2497
  %conv185 = sext i8 %107 to i32, !dbg !17485
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !17488
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !17489

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !17490, !tbaa !2442
  %109 = load i64, i64* %i, align 8, !dbg !17491, !tbaa !2579
  %add189 = add i64 %109, 2, !dbg !17492
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !17490, !ctir !146
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !17490, !tbaa !2497
  %conv191 = sext i8 %110 to i32, !dbg !17490
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !17493

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17494, !tbaa !2461
  %tobool193 = trunc i8 %111 to i1, !dbg !17494
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !17497

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !17498

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !17499, !tbaa !2442
  %113 = load i64, i64* %i, align 8, !dbg !17500, !tbaa !2579
  %add196 = add i64 %113, 2, !dbg !17501
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !17499, !ctir !146
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !17499, !tbaa !2497
  store i8 %114, i8* %c, align 1, !dbg !17502, !tbaa !2497
  %115 = load i64, i64* %i, align 8, !dbg !17503, !tbaa !2579
  %add198 = add i64 %115, 2, !dbg !17503
  store i64 %add198, i64* %i, align 8, !dbg !17503, !tbaa !2579
  br label %do.body199, !dbg !17504

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !17505, !tbaa !2579
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !17505, !tbaa !2579
  %cmp200 = icmp ult i64 %116, %117, !dbg !17505
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !17508

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !17505, !tbaa !2442
  %119 = load i64, i64* %len, align 8, !dbg !17505, !tbaa !2579
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !17505, !ctir !143
  store i8 63, i8* %arrayidx203, align 1, !dbg !17505, !tbaa !2497
  br label %if.end204, !dbg !17505

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !17508, !tbaa !2579
  %inc205 = add i64 %120, 1, !dbg !17508
  store i64 %inc205, i64* %len, align 8, !dbg !17508, !tbaa !2579
  br label %do.end206, !dbg !17508

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !17509

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !17510, !tbaa !2579
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !17510, !tbaa !2579
  %cmp208 = icmp ult i64 %121, %122, !dbg !17510
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !17513

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !17510, !tbaa !2442
  %124 = load i64, i64* %len, align 8, !dbg !17510, !tbaa !2579
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !17510, !ctir !143
  store i8 34, i8* %arrayidx211, align 1, !dbg !17510, !tbaa !2497
  br label %if.end212, !dbg !17510

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !17513, !tbaa !2579
  %inc213 = add i64 %125, 1, !dbg !17513
  store i64 %inc213, i64* %len, align 8, !dbg !17513, !tbaa !2579
  br label %do.end214, !dbg !17513

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !17514

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !17515, !tbaa !2579
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !17515, !tbaa !2579
  %cmp216 = icmp ult i64 %126, %127, !dbg !17515
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !17518

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !17515, !tbaa !2442
  %129 = load i64, i64* %len, align 8, !dbg !17515, !tbaa !2579
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !17515, !ctir !143
  store i8 34, i8* %arrayidx219, align 1, !dbg !17515, !tbaa !2497
  br label %if.end220, !dbg !17515

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !17518, !tbaa !2579
  %inc221 = add i64 %130, 1, !dbg !17518
  store i64 %inc221, i64* %len, align 8, !dbg !17518, !tbaa !2579
  br label %do.end222, !dbg !17518

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !17519

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !17520, !tbaa !2579
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !17520, !tbaa !2579
  %cmp224 = icmp ult i64 %131, %132, !dbg !17520
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !17523

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !17520, !tbaa !2442
  %134 = load i64, i64* %len, align 8, !dbg !17520, !tbaa !2579
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !17520, !ctir !143
  store i8 63, i8* %arrayidx227, align 1, !dbg !17520, !tbaa !2497
  br label %if.end228, !dbg !17520

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !17523, !tbaa !2579
  %inc229 = add i64 %135, 1, !dbg !17523
  store i64 %inc229, i64* %len, align 8, !dbg !17523, !tbaa !2579
  br label %do.end230, !dbg !17523

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !17524

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !17525

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !17526

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !17527

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !17528

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !17529

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !17530, !tbaa !2497
  br label %c_escape, !dbg !17531

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !17532, !tbaa !2497
  br label %c_escape, !dbg !17533

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !17534, !tbaa !2497
  br label %c_escape, !dbg !17535

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !17536, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17537

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !17538, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17539

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !17540, !tbaa !2497
  br label %c_and_shell_escape, !dbg !17541

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !17542, !tbaa !2497
  br label %c_escape, !dbg !17543

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !17544, !tbaa !2497
  store i8 %136, i8* %esc, align 1, !dbg !17545, !tbaa !2497
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !17546, !tbaa !2497
  %cmp244 = icmp eq i32 %137, 2, !dbg !17548
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !17549

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17550, !tbaa !2461
  %tobool247 = trunc i8 %138 to i1, !dbg !17550
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !17553

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !17554

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !17555

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !17556, !tbaa !2461
  %tobool251 = trunc i8 %139 to i1, !dbg !17556
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !17558

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17559, !tbaa !2461
  %tobool254 = trunc i8 %140 to i1, !dbg !17559
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !17560

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !17561, !tbaa !2579
  %tobool257 = icmp ne i64 %141, 0, !dbg !17561
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !17562

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !17563

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !17561

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !17564), !dbg !17565
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !17566, !tbaa !2497
  %cmp260 = icmp eq i32 %142, 2, !dbg !17568
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !17569

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17570, !tbaa !2461
  %tobool263 = trunc i8 %143 to i1, !dbg !17570
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !17571

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !17572

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !17570

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !17573), !dbg !17574
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !17575, !tbaa !2461
  %tobool267 = trunc i8 %144 to i1, !dbg !17575
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !17577

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !17578, !tbaa !2497
  store i8 %145, i8* %c, align 1, !dbg !17580, !tbaa !2497
  br label %store_escape, !dbg !17581

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !17582

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !17583, !tbaa !2579
  %cmp271 = icmp eq i64 %146, -1, !dbg !17585
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !17586

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !17587, !tbaa !2442
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !17587, !ctir !146
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !17587, !tbaa !2497
  %conv275 = sext i8 %148 to i32, !dbg !17587
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !17588
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !17583

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !17589, !tbaa !2579
  %cmp279 = icmp eq i64 %149, 1, !dbg !17590
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !17586

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !17591

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !17592

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !17593, !tbaa !2579
  %cmp284 = icmp ne i64 %150, 0, !dbg !17595
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !17596

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !17597

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !17598

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17599, !tbaa !2461
  br label %sw.bb289, !dbg !17600

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !17601, !tbaa !2497
  %cmp290 = icmp eq i32 %151, 2, !dbg !17603
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !17604

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17605, !tbaa !2461
  %tobool293 = trunc i8 %152 to i1, !dbg !17605
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !17606

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !17607

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !17608

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !17609, !tbaa !2461
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17610, !tbaa !2461
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !17611, !tbaa !2497
  %cmp298 = icmp eq i32 %153, 2, !dbg !17613
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !17614

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17615, !tbaa !2461
  %tobool301 = trunc i8 %154 to i1, !dbg !17615
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !17618

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !17619

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !17620, !tbaa !2579
  %tobool304 = icmp ne i64 %155, 0, !dbg !17620
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !17622

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !17623, !tbaa !2579
  %tobool306 = icmp ne i64 %156, 0, !dbg !17623
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !17624

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !17625, !tbaa !2579
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !17627, !tbaa !2579
  store i64 0, i64* %buffersize.addr, align 8, !dbg !17628, !tbaa !2579
  br label %if.end308, !dbg !17629

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !17630

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !17631, !tbaa !2579
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !17631, !tbaa !2579
  %cmp310 = icmp ult i64 %158, %159, !dbg !17631
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !17634

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !17631, !tbaa !2442
  %161 = load i64, i64* %len, align 8, !dbg !17631, !tbaa !2579
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !17631, !ctir !143
  store i8 39, i8* %arrayidx313, align 1, !dbg !17631, !tbaa !2497
  br label %if.end314, !dbg !17631

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !17634, !tbaa !2579
  %inc315 = add i64 %162, 1, !dbg !17634
  store i64 %inc315, i64* %len, align 8, !dbg !17634, !tbaa !2579
  br label %do.end316, !dbg !17634

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !17635

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !17636, !tbaa !2579
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !17636, !tbaa !2579
  %cmp318 = icmp ult i64 %163, %164, !dbg !17636
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !17639

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !17636, !tbaa !2442
  %166 = load i64, i64* %len, align 8, !dbg !17636, !tbaa !2579
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !17636, !ctir !143
  store i8 92, i8* %arrayidx321, align 1, !dbg !17636, !tbaa !2497
  br label %if.end322, !dbg !17636

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !17639, !tbaa !2579
  %inc323 = add i64 %167, 1, !dbg !17639
  store i64 %inc323, i64* %len, align 8, !dbg !17639, !tbaa !2579
  br label %do.end324, !dbg !17639

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !17640

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !17641, !tbaa !2579
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !17641, !tbaa !2579
  %cmp326 = icmp ult i64 %168, %169, !dbg !17641
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !17644

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !17641, !tbaa !2442
  %171 = load i64, i64* %len, align 8, !dbg !17641, !tbaa !2579
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !17641, !ctir !143
  store i8 39, i8* %arrayidx329, align 1, !dbg !17641, !tbaa !2497
  br label %if.end330, !dbg !17641

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !17644, !tbaa !2579
  %inc331 = add i64 %172, 1, !dbg !17644
  store i64 %inc331, i64* %len, align 8, !dbg !17644, !tbaa !2579
  br label %do.end332, !dbg !17644

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17645, !tbaa !2461
  br label %if.end333, !dbg !17646

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !17647

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !17648, !tbaa !2461
  br label %sw.epilog564, !dbg !17649

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !17650, metadata !DIExpression()), !dbg !17652
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !17653, metadata !DIExpression()), !dbg !17654
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !17655, !tbaa !2461
  %tobool336 = trunc i8 %173 to i1, !dbg !17655
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !17657

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !17658, !tbaa !2579
  %call338 = call i16** @__ctype_b_loc() #17, !dbg !17660
  %174 = load i16*, i16** %call338, align 8, !dbg !17660, !tbaa !2442, !ctir !587
  %175 = load i8, i8* %c, align 1, !dbg !17660, !tbaa !2497
  %conv339 = zext i8 %175 to i32, !dbg !17660
  %idxprom = sext i32 %conv339 to i64, !dbg !17660
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !17660, !ctir !587
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !17660, !tbaa !5835
  %conv341 = zext i16 %176 to i32, !dbg !17660
  %and342 = and i32 %conv341, 16384, !dbg !17660
  %cmp343 = icmp ne i32 %and342, 0, !dbg !17661
  %frombool345 = zext i1 %cmp343 to i8, !dbg !17662
  store i8 %frombool345, i8* %printable, align 1, !dbg !17662, !tbaa !2461
  br label %if.end410, !dbg !17663

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !17664, metadata !DIExpression()), !dbg !17666
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !17667
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !17667
  store i64 0, i64* %m, align 8, !dbg !17668, !tbaa !2579
  store i8 1, i8* %printable, align 1, !dbg !17669, !tbaa !2461
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !17670, !tbaa !2579
  %cmp347 = icmp eq i64 %178, -1, !dbg !17672
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !17673

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !17674, !tbaa !2442
  %call350 = call i64 @strlen(i8* %179) #16, !dbg !17675
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !17676, !tbaa !2579
  br label %if.end351, !dbg !17677

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !17678

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !17679, metadata !DIExpression()), !dbg !17681
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !17682, metadata !DIExpression()), !dbg !17683
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !17684, !tbaa !2442
  %181 = load i64, i64* %i, align 8, !dbg !17685, !tbaa !2579
  %182 = load i64, i64* %m, align 8, !dbg !17686, !tbaa !2579
  %add353 = add i64 %181, %182, !dbg !17687
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !17684, !ctir !146
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !17688, !tbaa !2579
  %184 = load i64, i64* %i, align 8, !dbg !17689, !tbaa !2579
  %185 = load i64, i64* %m, align 8, !dbg !17690, !tbaa !2579
  %add355 = add i64 %184, %185, !dbg !17691
  %sub = sub i64 %183, %add355, !dbg !17692
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !17693
  store i64 %call356, i64* %bytes, align 8, !dbg !17683, !tbaa !2579
  %186 = load i64, i64* %bytes, align 8, !dbg !17694, !tbaa !2579
  %cmp357 = icmp eq i64 %186, 0, !dbg !17696
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !17697

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !17698

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !17699, !tbaa !2579
  %cmp361 = icmp eq i64 %187, -1, !dbg !17701
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !17702

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !17703, !tbaa !2461
  br label %do.end409, !dbg !17705

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !17706, !tbaa !2579
  %cmp365 = icmp eq i64 %188, -2, !dbg !17708
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !17709

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !17710, !tbaa !2461
  br label %while.cond, !dbg !17712

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !17713, !tbaa !2579
  %190 = load i64, i64* %m, align 8, !dbg !17714, !tbaa !2579
  %add368 = add i64 %189, %190, !dbg !17715
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !17716, !tbaa !2579
  %cmp369 = icmp ult i64 %add368, %191, !dbg !17717
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !17718

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !17719, !tbaa !2442
  %193 = load i64, i64* %i, align 8, !dbg !17720, !tbaa !2579
  %194 = load i64, i64* %m, align 8, !dbg !17721, !tbaa !2579
  %add371 = add i64 %193, %194, !dbg !17722
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !17719, !ctir !146
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !17719, !tbaa !2497
  %conv373 = sext i8 %195 to i32, !dbg !17719
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !17718
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !17723
  br i1 %196, label %while.body, label %while.end, !dbg !17712

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !17724, !tbaa !2579
  %inc375 = add i64 %197, 1, !dbg !17724
  store i64 %inc375, i64* %m, align 8, !dbg !17724, !tbaa !2579
  br label %while.cond, !dbg !17712, !llvm.loop !17725

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !17726

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17727, !tbaa !2461
  %tobool377 = trunc i8 %198 to i1, !dbg !17727
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !17730

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !17731, !tbaa !2497
  %cmp380 = icmp eq i32 %199, 2, !dbg !17732
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !17733

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !17734, metadata !DIExpression()), !dbg !17736
  store i64 1, i64* %j, align 8, !dbg !17737, !tbaa !2579
  br label %for.cond383, !dbg !17739

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !17740, !tbaa !2579
  %201 = load i64, i64* %bytes, align 8, !dbg !17742, !tbaa !2579
  %cmp384 = icmp ult i64 %200, %201, !dbg !17743
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !17744

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !17745, !tbaa !2442
  %203 = load i64, i64* %i, align 8, !dbg !17746, !tbaa !2579
  %204 = load i64, i64* %m, align 8, !dbg !17747, !tbaa !2579
  %add387 = add i64 %203, %204, !dbg !17748
  %205 = load i64, i64* %j, align 8, !dbg !17749, !tbaa !2579
  %add388 = add i64 %add387, %205, !dbg !17750
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !17745, !ctir !146
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !17745, !tbaa !2497
  %conv390 = sext i8 %206 to i32, !dbg !17745
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !17751

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !17752

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !17754

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !17755

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !17756, !tbaa !2579
  %inc395 = add i64 %207, 1, !dbg !17756
  store i64 %inc395, i64* %j, align 8, !dbg !17756, !tbaa !2579
  br label %for.cond383, !dbg !17757, !llvm.loop !17758

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !17760

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !17761, !tbaa !2436
  %call398 = call i32 @iswprint(i32 %208) #13, !dbg !17763
  %tobool399 = icmp ne i32 %call398, 0, !dbg !17763
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !17764

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !17765, !tbaa !2461
  br label %if.end401, !dbg !17766

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !17767, !tbaa !2579
  %210 = load i64, i64* %m, align 8, !dbg !17768, !tbaa !2579
  %add402 = add i64 %210, %209, !dbg !17768
  store i64 %add402, i64* %m, align 8, !dbg !17768, !tbaa !2579
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !17769

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #16, !dbg !17770
  %tobool407 = icmp ne i32 %call406, 0, !dbg !17771
  %lnot408 = xor i1 %tobool407, true, !dbg !17771
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !17769, !llvm.loop !17772

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !17774, !tbaa !2461
  %tobool411 = trunc i8 %211 to i1, !dbg !17774
  %frombool412 = zext i1 %tobool411 to i8, !dbg !17775
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !17775, !tbaa !2461
  %212 = load i64, i64* %m, align 8, !dbg !17776, !tbaa !2579
  %cmp413 = icmp ult i64 1, %212, !dbg !17778
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !17779

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !17780, !tbaa !2461
  %tobool415 = trunc i8 %213 to i1, !dbg !17780
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !17781

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !17782, !tbaa !2461
  %tobool418 = trunc i8 %214 to i1, !dbg !17782
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !17783

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !17784, metadata !DIExpression()), !dbg !17786
  %215 = load i64, i64* %i, align 8, !dbg !17787, !tbaa !2579
  %216 = load i64, i64* %m, align 8, !dbg !17788, !tbaa !2579
  %add420 = add i64 %215, %216, !dbg !17789
  store i64 %add420, i64* %ilim, align 8, !dbg !17786, !tbaa !2579
  br label %for.cond421, !dbg !17790

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !17791, !tbaa !2461
  %tobool422 = trunc i8 %217 to i1, !dbg !17791
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !17796

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !17797, !tbaa !2461
  %tobool425 = trunc i8 %218 to i1, !dbg !17797
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !17798

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !17799

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17801, !tbaa !2461
  %tobool428 = trunc i8 %219 to i1, !dbg !17801
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !17804

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !17801

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !17804, !tbaa !2461
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !17805, !tbaa !2497
  %cmp431 = icmp eq i32 %220, 2, !dbg !17805
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !17805

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17805, !tbaa !2461
  %tobool434 = trunc i8 %221 to i1, !dbg !17805
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !17804

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !17807

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !17809, !tbaa !2579
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !17809, !tbaa !2579
  %cmp437 = icmp ult i64 %222, %223, !dbg !17809
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !17812

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !17809, !tbaa !2442
  %225 = load i64, i64* %len, align 8, !dbg !17809, !tbaa !2579
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !17809, !ctir !143
  store i8 39, i8* %arrayidx440, align 1, !dbg !17809, !tbaa !2497
  br label %if.end441, !dbg !17809

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !17812, !tbaa !2579
  %inc442 = add i64 %226, 1, !dbg !17812
  store i64 %inc442, i64* %len, align 8, !dbg !17812, !tbaa !2579
  br label %do.end444, !dbg !17812

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !17807

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !17813, !tbaa !2579
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !17813, !tbaa !2579
  %cmp446 = icmp ult i64 %227, %228, !dbg !17813
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !17816

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !17813, !tbaa !2442
  %230 = load i64, i64* %len, align 8, !dbg !17813, !tbaa !2579
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !17813, !ctir !143
  store i8 36, i8* %arrayidx449, align 1, !dbg !17813, !tbaa !2497
  br label %if.end450, !dbg !17813

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !17816, !tbaa !2579
  %inc451 = add i64 %231, 1, !dbg !17816
  store i64 %inc451, i64* %len, align 8, !dbg !17816, !tbaa !2579
  br label %do.end453, !dbg !17816

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !17807

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !17817, !tbaa !2579
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !17817, !tbaa !2579
  %cmp455 = icmp ult i64 %232, %233, !dbg !17817
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !17820

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !17817, !tbaa !2442
  %235 = load i64, i64* %len, align 8, !dbg !17817, !tbaa !2579
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !17817, !ctir !143
  store i8 39, i8* %arrayidx458, align 1, !dbg !17817, !tbaa !2497
  br label %if.end459, !dbg !17817

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !17820, !tbaa !2579
  %inc460 = add i64 %236, 1, !dbg !17820
  store i64 %inc460, i64* %len, align 8, !dbg !17820, !tbaa !2579
  br label %do.end462, !dbg !17820

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17807, !tbaa !2461
  br label %if.end463, !dbg !17807

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !17804

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !17821, !tbaa !2579
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !17821, !tbaa !2579
  %cmp465 = icmp ult i64 %237, %238, !dbg !17821
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !17824

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !17821, !tbaa !2442
  %240 = load i64, i64* %len, align 8, !dbg !17821, !tbaa !2579
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !17821, !ctir !143
  store i8 92, i8* %arrayidx468, align 1, !dbg !17821, !tbaa !2497
  br label %if.end469, !dbg !17821

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !17824, !tbaa !2579
  %inc470 = add i64 %241, 1, !dbg !17824
  store i64 %inc470, i64* %len, align 8, !dbg !17824, !tbaa !2579
  br label %do.end472, !dbg !17824

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !17804

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !17825

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !17826, !tbaa !2579
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !17826, !tbaa !2579
  %cmp476 = icmp ult i64 %242, %243, !dbg !17826
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !17829

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !17826, !tbaa !2497
  %conv479 = zext i8 %244 to i32, !dbg !17826
  %shr = ashr i32 %conv479, 6, !dbg !17826
  %add480 = add nsw i32 48, %shr, !dbg !17826
  %conv481 = trunc i32 %add480 to i8, !dbg !17826
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !17826, !tbaa !2442
  %246 = load i64, i64* %len, align 8, !dbg !17826, !tbaa !2579
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !17826, !ctir !143
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !17826, !tbaa !2497
  br label %if.end483, !dbg !17826

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !17829, !tbaa !2579
  %inc484 = add i64 %247, 1, !dbg !17829
  store i64 %inc484, i64* %len, align 8, !dbg !17829, !tbaa !2579
  br label %do.end486, !dbg !17829

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !17830

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !17831, !tbaa !2579
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !17831, !tbaa !2579
  %cmp488 = icmp ult i64 %248, %249, !dbg !17831
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !17834

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !17831, !tbaa !2497
  %conv491 = zext i8 %250 to i32, !dbg !17831
  %shr492 = ashr i32 %conv491, 3, !dbg !17831
  %and493 = and i32 %shr492, 7, !dbg !17831
  %add494 = add nsw i32 48, %and493, !dbg !17831
  %conv495 = trunc i32 %add494 to i8, !dbg !17831
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !17831, !tbaa !2442
  %252 = load i64, i64* %len, align 8, !dbg !17831, !tbaa !2579
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !17831, !ctir !143
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !17831, !tbaa !2497
  br label %if.end497, !dbg !17831

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !17834, !tbaa !2579
  %inc498 = add i64 %253, 1, !dbg !17834
  store i64 %inc498, i64* %len, align 8, !dbg !17834, !tbaa !2579
  br label %do.end500, !dbg !17834

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !17835, !tbaa !2497
  %conv501 = zext i8 %254 to i32, !dbg !17835
  %and502 = and i32 %conv501, 7, !dbg !17836
  %add503 = add nsw i32 48, %and502, !dbg !17837
  %conv504 = trunc i32 %add503 to i8, !dbg !17838
  store i8 %conv504, i8* %c, align 1, !dbg !17839, !tbaa !2497
  br label %if.end518, !dbg !17840

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !17841, !tbaa !2461
  %tobool506 = trunc i8 %255 to i1, !dbg !17841
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !17843

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !17844

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !17846, !tbaa !2579
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !17846, !tbaa !2579
  %cmp509 = icmp ult i64 %256, %257, !dbg !17846
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !17849

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !17846, !tbaa !2442
  %259 = load i64, i64* %len, align 8, !dbg !17846, !tbaa !2579
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !17846, !ctir !143
  store i8 92, i8* %arrayidx512, align 1, !dbg !17846, !tbaa !2497
  br label %if.end513, !dbg !17846

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !17849, !tbaa !2579
  %inc514 = add i64 %260, 1, !dbg !17849
  store i64 %inc514, i64* %len, align 8, !dbg !17849, !tbaa !2579
  br label %do.end516, !dbg !17849

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !17850, !tbaa !2461
  br label %if.end517, !dbg !17851

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !17852, !tbaa !2579
  %262 = load i64, i64* %i, align 8, !dbg !17854, !tbaa !2579
  %add519 = add i64 %262, 1, !dbg !17855
  %cmp520 = icmp ule i64 %261, %add519, !dbg !17856
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !17857

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !17858

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !17859

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17860, !tbaa !2461
  %tobool525 = trunc i8 %263 to i1, !dbg !17860
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !17860

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !17860, !tbaa !2461
  %tobool528 = trunc i8 %264 to i1, !dbg !17860
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !17863

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !17864

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !17866, !tbaa !2579
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !17866, !tbaa !2579
  %cmp531 = icmp ult i64 %265, %266, !dbg !17866
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !17869

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !17866, !tbaa !2442
  %268 = load i64, i64* %len, align 8, !dbg !17866, !tbaa !2579
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !17866, !ctir !143
  store i8 39, i8* %arrayidx534, align 1, !dbg !17866, !tbaa !2497
  br label %if.end535, !dbg !17866

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !17869, !tbaa !2579
  %inc536 = add i64 %269, 1, !dbg !17869
  store i64 %inc536, i64* %len, align 8, !dbg !17869, !tbaa !2579
  br label %do.end538, !dbg !17869

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !17864

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !17870, !tbaa !2579
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !17870, !tbaa !2579
  %cmp540 = icmp ult i64 %270, %271, !dbg !17870
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !17873

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !17870, !tbaa !2442
  %273 = load i64, i64* %len, align 8, !dbg !17870, !tbaa !2579
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !17870, !ctir !143
  store i8 39, i8* %arrayidx543, align 1, !dbg !17870, !tbaa !2497
  br label %if.end544, !dbg !17870

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !17873, !tbaa !2579
  %inc545 = add i64 %274, 1, !dbg !17873
  store i64 %inc545, i64* %len, align 8, !dbg !17873, !tbaa !2579
  br label %do.end547, !dbg !17873

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17864, !tbaa !2461
  br label %if.end548, !dbg !17864

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !17863

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !17874

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !17875, !tbaa !2579
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !17875, !tbaa !2579
  %cmp552 = icmp ult i64 %275, %276, !dbg !17875
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !17878

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !17875, !tbaa !2497
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !17875, !tbaa !2442
  %279 = load i64, i64* %len, align 8, !dbg !17875, !tbaa !2579
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !17875, !ctir !143
  store i8 %277, i8* %arrayidx555, align 1, !dbg !17875, !tbaa !2497
  br label %if.end556, !dbg !17875

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !17878, !tbaa !2579
  %inc557 = add i64 %280, 1, !dbg !17878
  store i64 %inc557, i64* %len, align 8, !dbg !17878, !tbaa !2579
  br label %do.end559, !dbg !17878

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !17879, !tbaa !2442
  %282 = load i64, i64* %i, align 8, !dbg !17880, !tbaa !2579
  %inc560 = add i64 %282, 1, !dbg !17880
  store i64 %inc560, i64* %i, align 8, !dbg !17880, !tbaa !2579
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !17879, !ctir !146
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !17879, !tbaa !2497
  store i8 %283, i8* %c, align 1, !dbg !17881, !tbaa !2497
  br label %for.cond421, !dbg !17882, !llvm.loop !17883

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !17886

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !17887

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !17888, !tbaa !2461
  %tobool565 = trunc i8 %284 to i1, !dbg !17888
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !17890

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !17891, !tbaa !2497
  %cmp568 = icmp ne i32 %285, 2, !dbg !17892
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !17893

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17894, !tbaa !2461
  %tobool571 = trunc i8 %286 to i1, !dbg !17894
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !17895

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17896, !tbaa !2442
  %tobool574 = icmp ne i32* %287, null, !dbg !17896
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !17897

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17898, !tbaa !2442
  %289 = load i8, i8* %c, align 1, !dbg !17899, !tbaa !2497
  %conv576 = zext i8 %289 to i64, !dbg !17899
  %div = udiv i64 %conv576, 32, !dbg !17900
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !17898, !ctir !1513
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !17898, !tbaa !2436
  %291 = load i8, i8* %c, align 1, !dbg !17901, !tbaa !2497
  %conv578 = zext i8 %291 to i64, !dbg !17901
  %rem = urem i64 %conv578, 32, !dbg !17902
  %sh_prom = trunc i64 %rem to i32, !dbg !17903
  %shr579 = lshr i32 %290, %sh_prom, !dbg !17903
  %and580 = and i32 %shr579, 1, !dbg !17904
  %tobool581 = icmp ne i32 %and580, 0, !dbg !17904
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !17905

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !17906, !tbaa !2461
  %tobool583 = trunc i8 %292 to i1, !dbg !17906
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !17907

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !17908

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !17906

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !17909), !dbg !17910
  br label %do.body586, !dbg !17911

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17912, !tbaa !2461
  %tobool587 = trunc i8 %293 to i1, !dbg !17912
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !17915

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !17912

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !17915, !tbaa !2461
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !17916, !tbaa !2497
  %cmp590 = icmp eq i32 %294, 2, !dbg !17916
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !17916

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17916, !tbaa !2461
  %tobool593 = trunc i8 %295 to i1, !dbg !17916
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !17915

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !17918

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !17920, !tbaa !2579
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !17920, !tbaa !2579
  %cmp596 = icmp ult i64 %296, %297, !dbg !17920
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !17923

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !17920, !tbaa !2442
  %299 = load i64, i64* %len, align 8, !dbg !17920, !tbaa !2579
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !17920, !ctir !143
  store i8 39, i8* %arrayidx599, align 1, !dbg !17920, !tbaa !2497
  br label %if.end600, !dbg !17920

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !17923, !tbaa !2579
  %inc601 = add i64 %300, 1, !dbg !17923
  store i64 %inc601, i64* %len, align 8, !dbg !17923, !tbaa !2579
  br label %do.end603, !dbg !17923

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !17918

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !17924, !tbaa !2579
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !17924, !tbaa !2579
  %cmp605 = icmp ult i64 %301, %302, !dbg !17924
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !17927

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !17924, !tbaa !2442
  %304 = load i64, i64* %len, align 8, !dbg !17924, !tbaa !2579
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !17924, !ctir !143
  store i8 36, i8* %arrayidx608, align 1, !dbg !17924, !tbaa !2497
  br label %if.end609, !dbg !17924

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !17927, !tbaa !2579
  %inc610 = add i64 %305, 1, !dbg !17927
  store i64 %inc610, i64* %len, align 8, !dbg !17927, !tbaa !2579
  br label %do.end612, !dbg !17927

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !17918

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !17928, !tbaa !2579
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !17928, !tbaa !2579
  %cmp614 = icmp ult i64 %306, %307, !dbg !17928
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !17931

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !17928, !tbaa !2442
  %309 = load i64, i64* %len, align 8, !dbg !17928, !tbaa !2579
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !17928, !ctir !143
  store i8 39, i8* %arrayidx617, align 1, !dbg !17928, !tbaa !2497
  br label %if.end618, !dbg !17928

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !17931, !tbaa !2579
  %inc619 = add i64 %310, 1, !dbg !17931
  store i64 %inc619, i64* %len, align 8, !dbg !17931, !tbaa !2579
  br label %do.end621, !dbg !17931

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !17918, !tbaa !2461
  br label %if.end622, !dbg !17918

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !17915

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !17932, !tbaa !2579
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !17932, !tbaa !2579
  %cmp624 = icmp ult i64 %311, %312, !dbg !17932
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !17935

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !17932, !tbaa !2442
  %314 = load i64, i64* %len, align 8, !dbg !17932, !tbaa !2579
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !17932, !ctir !143
  store i8 92, i8* %arrayidx627, align 1, !dbg !17932, !tbaa !2497
  br label %if.end628, !dbg !17932

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !17935, !tbaa !2579
  %inc629 = add i64 %315, 1, !dbg !17935
  store i64 %inc629, i64* %len, align 8, !dbg !17935, !tbaa !2579
  br label %do.end631, !dbg !17935

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !17915

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !17915

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !17936), !dbg !17937
  br label %do.body634, !dbg !17938

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !17939, !tbaa !2461
  %tobool635 = trunc i8 %316 to i1, !dbg !17939
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !17939

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !17939, !tbaa !2461
  %tobool638 = trunc i8 %317 to i1, !dbg !17939
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !17942

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !17943

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !17945, !tbaa !2579
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !17945, !tbaa !2579
  %cmp641 = icmp ult i64 %318, %319, !dbg !17945
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !17948

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !17945, !tbaa !2442
  %321 = load i64, i64* %len, align 8, !dbg !17945, !tbaa !2579
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !17945, !ctir !143
  store i8 39, i8* %arrayidx644, align 1, !dbg !17945, !tbaa !2497
  br label %if.end645, !dbg !17945

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !17948, !tbaa !2579
  %inc646 = add i64 %322, 1, !dbg !17948
  store i64 %inc646, i64* %len, align 8, !dbg !17948, !tbaa !2579
  br label %do.end648, !dbg !17948

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !17943

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !17949, !tbaa !2579
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !17949, !tbaa !2579
  %cmp650 = icmp ult i64 %323, %324, !dbg !17949
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !17952

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !17949, !tbaa !2442
  %326 = load i64, i64* %len, align 8, !dbg !17949, !tbaa !2579
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !17949, !ctir !143
  store i8 39, i8* %arrayidx653, align 1, !dbg !17949, !tbaa !2497
  br label %if.end654, !dbg !17949

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !17952, !tbaa !2579
  %inc655 = add i64 %327, 1, !dbg !17952
  store i64 %inc655, i64* %len, align 8, !dbg !17952, !tbaa !2579
  br label %do.end657, !dbg !17952

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !17943, !tbaa !2461
  br label %if.end658, !dbg !17943

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !17942

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !17953

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !17954, !tbaa !2579
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !17954, !tbaa !2579
  %cmp662 = icmp ult i64 %328, %329, !dbg !17954
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !17957

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !17954, !tbaa !2497
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !17954, !tbaa !2442
  %332 = load i64, i64* %len, align 8, !dbg !17954, !tbaa !2579
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !17954, !ctir !143
  store i8 %330, i8* %arrayidx665, align 1, !dbg !17954, !tbaa !2497
  br label %if.end666, !dbg !17954

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !17957, !tbaa !2579
  %inc667 = add i64 %333, 1, !dbg !17957
  store i64 %inc667, i64* %len, align 8, !dbg !17957, !tbaa !2579
  br label %do.end669, !dbg !17957

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !17958, !tbaa !2461
  %tobool670 = trunc i8 %334 to i1, !dbg !17958
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !17960

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17961, !tbaa !2461
  br label %if.end672, !dbg !17962

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !17963

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !17964, !tbaa !2579
  %inc674 = add i64 %335, 1, !dbg !17964
  store i64 %inc674, i64* %i, align 8, !dbg !17964, !tbaa !2579
  br label %for.cond44, !dbg !17965, !llvm.loop !17966

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !17968, !tbaa !2579
  %cmp676 = icmp eq i64 %336, 0, !dbg !17970
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !17971

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !17972, !tbaa !2497
  %cmp679 = icmp eq i32 %337, 2, !dbg !17973
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !17974

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17975, !tbaa !2461
  %tobool682 = trunc i8 %338 to i1, !dbg !17975
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !17976

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !17977

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !17978, !tbaa !2497
  %cmp686 = icmp eq i32 %339, 2, !dbg !17980
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !17981

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !17982, !tbaa !2461
  %tobool689 = trunc i8 %340 to i1, !dbg !17982
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !17983

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !17984, !tbaa !2461
  %tobool691 = trunc i8 %341 to i1, !dbg !17984
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !17985

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !17986, !tbaa !2461
  %tobool694 = trunc i8 %342 to i1, !dbg !17986
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !17989

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !17990, !tbaa !2442
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !17991, !tbaa !2579
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !17992, !tbaa !2442
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !17993, !tbaa !2579
  %347 = load i32, i32* %flags.addr, align 4, !dbg !17994, !tbaa !2436
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !17995, !tbaa !2442
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !17996, !tbaa !2442
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !17997, !tbaa !2442
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !17998
  store i64 %call696, i64* %retval, align 8, !dbg !17999
  br label %return, !dbg !17999

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !18000, !tbaa !2579
  %tobool698 = icmp ne i64 %351, 0, !dbg !18000
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !18002

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !18003, !tbaa !2579
  %tobool700 = icmp ne i64 %352, 0, !dbg !18003
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !18004

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !18005, !tbaa !2579
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !18007, !tbaa !2579
  store i64 0, i64* %len, align 8, !dbg !18008, !tbaa !2579
  br label %process_input, !dbg !18009

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !18010

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !18011, !tbaa !2442
  %tobool705 = icmp ne i8* %354, null, !dbg !18011
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !18013

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !18014, !tbaa !2461
  %tobool707 = trunc i8 %355 to i1, !dbg !18014
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !18015

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !18016

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !18017, !tbaa !2442
  %357 = load i8, i8* %356, align 1, !dbg !18020, !tbaa !2497, !ctir !147
  %tobool710 = icmp ne i8 %357, 0, !dbg !18021
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !18021

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !18022

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !18023, !tbaa !2579
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !18023, !tbaa !2579
  %cmp713 = icmp ult i64 %358, %359, !dbg !18023
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !18026

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !18023, !tbaa !2442
  %361 = load i8, i8* %360, align 1, !dbg !18023, !tbaa !2497, !ctir !147
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !18023, !tbaa !2442
  %363 = load i64, i64* %len, align 8, !dbg !18023, !tbaa !2579
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !18023, !ctir !143
  store i8 %361, i8* %arrayidx716, align 1, !dbg !18023, !tbaa !2497
  br label %if.end717, !dbg !18023

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !18026, !tbaa !2579
  %inc718 = add i64 %364, 1, !dbg !18026
  store i64 %inc718, i64* %len, align 8, !dbg !18026, !tbaa !2579
  br label %do.end720, !dbg !18026

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !18026

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !18027, !tbaa !2442
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !18027
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !18027, !tbaa !2442
  br label %for.cond709, !dbg !18028, !llvm.loop !18029

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !18030

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !18031, !tbaa !2579
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !18033, !tbaa !2579
  %cmp725 = icmp ult i64 %366, %367, !dbg !18034
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !18035

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !18036, !tbaa !2442
  %369 = load i64, i64* %len, align 8, !dbg !18037, !tbaa !2579
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !18036, !ctir !143
  store i8 0, i8* %arrayidx728, align 1, !dbg !18038, !tbaa !2497
  br label %if.end729, !dbg !18036

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !18039, !tbaa !2579
  store i64 %370, i64* %retval, align 8, !dbg !18040
  br label %return, !dbg !18040

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !18041), !dbg !18042
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !18043, !tbaa !2497
  %cmp730 = icmp eq i32 %371, 2, !dbg !18045
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !18046

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !18047, !tbaa !2461
  %tobool733 = trunc i8 %372 to i1, !dbg !18047
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !18048

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !18049, !tbaa !2497
  br label %if.end736, !dbg !18050

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !18051, !tbaa !2442
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !18052, !tbaa !2579
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !18053, !tbaa !2442
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !18054, !tbaa !2579
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !18055, !tbaa !2497
  %378 = load i32, i32* %flags.addr, align 4, !dbg !18056, !tbaa !2436
  %and737 = and i32 %378, -3, !dbg !18057
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !18058, !tbaa !2442
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !18059, !tbaa !2442
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !18060
  store i64 %call738, i64* %retval, align 8, !dbg !18061
  br label %return, !dbg !18061

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !18062
  ret i64 %381, !dbg !18062
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #0 !dbg !18063 !ctir !1525 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !146
  %locale_code = alloca i8*, align 8, !ctir !146
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !18064, metadata !DIExpression()), !dbg !18065
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18066, metadata !DIExpression()), !dbg !18067
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !18068, metadata !DIExpression()), !dbg !18069
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !18070, !tbaa !2442
  %call = call i8* @gettext(i8* %0) #13, !dbg !18070
  store i8* %call, i8** %translation, align 8, !dbg !18069, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !18071, metadata !DIExpression()), !dbg !18072
  %1 = load i8*, i8** %translation, align 8, !dbg !18073, !tbaa !2442
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !18075, !tbaa !2442
  %cmp = icmp ne i8* %1, %2, !dbg !18076
  br i1 %cmp, label %if.then, label %if.end, !dbg !18077

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !18078, !tbaa !2442
  store i8* %3, i8** %retval, align 8, !dbg !18079
  br label %return, !dbg !18079

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !18080
  store i8* %call1, i8** %locale_code, align 8, !dbg !18081, !tbaa !2442
  %4 = load i8*, i8** %locale_code, align 8, !dbg !18082, !tbaa !2442
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.400, i64 0, i64 0)) #16, !dbg !18082
  %cmp3 = icmp eq i32 %call2, 0, !dbg !18082
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !18084

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !18085, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !18085, !ctir !146
  %6 = load i8, i8* %arrayidx, align 1, !dbg !18085, !tbaa !2497
  %conv = sext i8 %6 to i32, !dbg !18085
  %cmp5 = icmp eq i32 %conv, 96, !dbg !18086
  %7 = zext i1 %cmp5 to i64, !dbg !18085
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.401, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.402, i64 0, i64 0), !dbg !18085
  store i8* %cond, i8** %retval, align 8, !dbg !18087
  br label %return, !dbg !18087

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !18088, !tbaa !2442
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.403, i64 0, i64 0)) #16, !dbg !18088
  %cmp9 = icmp eq i32 %call8, 0, !dbg !18088
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !18090

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !18091, !tbaa !2442
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !18091, !ctir !146
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !18091, !tbaa !2497
  %conv13 = sext i8 %10 to i32, !dbg !18091
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !18092
  %11 = zext i1 %cmp14 to i64, !dbg !18091
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.404, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.405, i64 0, i64 0), !dbg !18091
  store i8* %cond16, i8** %retval, align 8, !dbg !18093
  br label %return, !dbg !18093

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !18094, !tbaa !2497
  %cmp18 = icmp eq i32 %12, 9, !dbg !18095
  %13 = zext i1 %cmp18 to i64, !dbg !18094
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.397, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.399, i64 0, i64 0), !dbg !18094
  store i8* %cond20, i8** %retval, align 8, !dbg !18096
  br label %return, !dbg !18096

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !18097
  ret i8* %14, !dbg !18097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #0 !dbg !18098 !ctir !1470 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18099, metadata !DIExpression()), !dbg !18100
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18101, metadata !DIExpression()), !dbg !18102
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18103, metadata !DIExpression()), !dbg !18104
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18105, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18106, !tbaa !2579
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18107, !tbaa !2442
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !18108
  ret i8* %call, !dbg !18109
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #0 !dbg !18110 !ctir !1472 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1457
  %e = alloca i32, align 4, !ctir !27
  %flags = alloca i32, align 4, !ctir !27
  %bufsize = alloca i64, align 8, !ctir !149
  %buf = alloca i8*, align 8, !ctir !143
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18111, metadata !DIExpression()), !dbg !18112
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18113, metadata !DIExpression()), !dbg !18114
  store i64* %size, i64** %size.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !18115, metadata !DIExpression()), !dbg !18116
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !18117, metadata !DIExpression()), !dbg !18118
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !18119, metadata !DIExpression()), !dbg !18120
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18121, !tbaa !2442
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !18121
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18121

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !18122, !tbaa !2442
  br label %cond.end, !dbg !18121

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !18121
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !18120, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18123, metadata !DIExpression()), !dbg !18124
  %call = call i32* @__errno_location() #17, !dbg !18125
  %2 = load i32, i32* %call, align 4, !dbg !18125, !tbaa !2436, !ctir !27
  store i32 %2, i32* %e, align 4, !dbg !18124, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18126, metadata !DIExpression()), !dbg !18127
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18128, !tbaa !2442
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !18129, !ctir !1458
  %4 = load i32, i32* %flags1, align 4, !dbg !18129, !tbaa !17117, !ctir !27
  %5 = load i64*, i64** %size.addr, align 8, !dbg !18130, !tbaa !2442
  %tobool2 = icmp ne i64* %5, null, !dbg !18130
  %6 = zext i1 %tobool2 to i64, !dbg !18130
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !18130
  %or = or i32 %4, %cond3, !dbg !18131
  store i32 %or, i32* %flags, align 4, !dbg !18127, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !18132, metadata !DIExpression()), !dbg !18133
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !18134, !tbaa !2442
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !18135, !tbaa !2579
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18136, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !18137, !ctir !1458
  %10 = load i32, i32* %style, align 8, !dbg !18137, !tbaa !17049, !ctir !95
  %11 = load i32, i32* %flags, align 4, !dbg !18138, !tbaa !2436
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18139, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !18140, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18139
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18141, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !18142, !ctir !1458
  %14 = load i8*, i8** %left_quote, align 8, !dbg !18142, !tbaa !17150, !ctir !146
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18143, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !18144, !ctir !1458
  %16 = load i8*, i8** %right_quote, align 8, !dbg !18144, !tbaa !17155, !ctir !146
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !18145
  %add = add i64 %call4, 1, !dbg !18146
  store i64 %add, i64* %bufsize, align 8, !dbg !18133, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !18147, metadata !DIExpression()), !dbg !18148
  %17 = load i64, i64* %bufsize, align 8, !dbg !18149, !tbaa !2579
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !18150
  store i8* %call5, i8** %buf, align 8, !dbg !18148, !tbaa !2442
  %18 = load i8*, i8** %buf, align 8, !dbg !18151, !tbaa !2442
  %19 = load i64, i64* %bufsize, align 8, !dbg !18152, !tbaa !2579
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !18153, !tbaa !2442
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !18154, !tbaa !2579
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18155, !tbaa !2442
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !18156, !ctir !1458
  %23 = load i32, i32* %style6, align 8, !dbg !18156, !tbaa !17049, !ctir !95
  %24 = load i32, i32* %flags, align 4, !dbg !18157, !tbaa !2436
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18158, !tbaa !2442
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !18159, !ctir !1458
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !18158
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18160, !tbaa !2442
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !18161, !ctir !1458
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !18161, !tbaa !17150, !ctir !146
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !18162, !tbaa !2442
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !18163, !ctir !1458
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !18163, !tbaa !17155, !ctir !146
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !18164
  %30 = load i32, i32* %e, align 4, !dbg !18165, !tbaa !2436
  %call12 = call i32* @__errno_location() #17, !dbg !18166
  store i32 %30, i32* %call12, align 4, !dbg !18167, !tbaa !2436, !ctir !27
  %31 = load i64*, i64** %size.addr, align 8, !dbg !18168, !tbaa !2442
  %tobool13 = icmp ne i64* %31, null, !dbg !18168
  br i1 %tobool13, label %if.then, label %if.end, !dbg !18170

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !18171, !tbaa !2579
  %sub = sub i64 %32, 1, !dbg !18172
  %33 = load i64*, i64** %size.addr, align 8, !dbg !18173, !tbaa !2442
  store i64 %sub, i64* %33, align 8, !dbg !18174, !tbaa !2579, !ctir !149
  br label %if.end, !dbg !18175

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !18176, !tbaa !2442
  ret i8* %34, !dbg !18177
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #0 !dbg !18178 !ctir !341 {
entry:
  %sv = alloca %struct.bin_str*, align 8, !ctir !1474
  %i = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18179, metadata !DIExpression()), !dbg !18180
  %0 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18181, !tbaa !2442
  store %struct.bin_str* %0, %struct.bin_str** %sv, align 8, !dbg !18180, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18182, metadata !DIExpression()), !dbg !18183
  store i32 1, i32* %i, align 4, !dbg !18184, !tbaa !2436
  br label %for.cond, !dbg !18186

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !18187, !tbaa !2436
  %2 = load i32, i32* @nslots, align 4, !dbg !18189, !tbaa !2436
  %cmp = icmp slt i32 %1, %2, !dbg !18190
  br i1 %cmp, label %for.body, label %for.end, !dbg !18191

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18192, !tbaa !2442
  %4 = load i32, i32* %i, align 4, !dbg !18193, !tbaa !2436
  %idxprom = sext i32 %4 to i64, !dbg !18192
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %3, i64 %idxprom, !dbg !18192, !ctir !1474
  %val = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 1, !dbg !18194, !ctir !1475
  %5 = load i8*, i8** %val, align 8, !dbg !18194, !tbaa !18195, !ctir !143
  call void @free(i8* %5) #13, !dbg !18197
  br label %for.inc, !dbg !18197

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !18198, !tbaa !2436
  %inc = add nsw i32 %6, 1, !dbg !18198
  store i32 %inc, i32* %i, align 4, !dbg !18198, !tbaa !2436
  br label %for.cond, !dbg !18199, !llvm.loop !18200

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18202, !tbaa !2442
  %arrayidx1 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %7, i64 0, !dbg !18202, !ctir !1474
  %val2 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx1, i32 0, i32 1, !dbg !18204, !ctir !1475
  %8 = load i8*, i8** %val2, align 8, !dbg !18204, !tbaa !18195, !ctir !143
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18205
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18206

if.then:                                          ; preds = %for.end
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18207, !tbaa !2442
  %arrayidx4 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %9, i64 0, !dbg !18207, !ctir !1474
  %val5 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx4, i32 0, i32 1, !dbg !18209, !ctir !1475
  %10 = load i8*, i8** %val5, align 8, !dbg !18209, !tbaa !18195, !ctir !143
  call void @free(i8* %10) #13, !dbg !18210
  store i64 256, i64* getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 0), align 8, !dbg !18211, !tbaa !18212, !ctir !149
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.bin_str, %struct.bin_str* @slotvec0, i32 0, i32 1), align 8, !dbg !18213, !tbaa !18195, !ctir !143
  br label %if.end, !dbg !18214

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18215, !tbaa !2442
  %cmp6 = icmp ne %struct.bin_str* %11, @slotvec0, !dbg !18217
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !18218

if.then7:                                         ; preds = %if.end
  %12 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18219, !tbaa !2442
  %13 = bitcast %struct.bin_str* %12 to i8*, !dbg !18219
  call void @free(i8* %13) #13, !dbg !18221
  store %struct.bin_str* @slotvec0, %struct.bin_str** @slotvec, align 8, !dbg !18222, !tbaa !2442
  br label %if.end8, !dbg !18223

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !18224, !tbaa !2436
  ret void, !dbg !18225
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #0 !dbg !18226 !ctir !1479 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18227, metadata !DIExpression()), !dbg !18228
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18229, metadata !DIExpression()), !dbg !18230
  %0 = load i32, i32* %n.addr, align 4, !dbg !18231, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18232, !tbaa !2442
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !18233
  ret i8* %call, !dbg !18234
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #0 !dbg !18235 !ctir !1527 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !27
  %sv = alloca %struct.bin_str*, align 8, !ctir !1474
  %preallocated = alloca i8, align 1, !ctir !141
  %nmax = alloca i32, align 4, !ctir !27
  %size = alloca i64, align 8, !ctir !149
  %val = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %qsize = alloca i64, align 8, !ctir !149
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18236, metadata !DIExpression()), !dbg !18237
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18238, metadata !DIExpression()), !dbg !18239
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18240, metadata !DIExpression()), !dbg !18241
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !18242, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.declare(metadata i32* %e, metadata !18244, metadata !DIExpression()), !dbg !18245
  %call = call i32* @__errno_location() #17, !dbg !18246
  %0 = load i32, i32* %call, align 4, !dbg !18246, !tbaa !2436, !ctir !27
  store i32 %0, i32* %e, align 4, !dbg !18245, !tbaa !2436
  call void @llvm.dbg.declare(metadata %struct.bin_str** %sv, metadata !18247, metadata !DIExpression()), !dbg !18248
  %1 = load %struct.bin_str*, %struct.bin_str** @slotvec, align 8, !dbg !18249, !tbaa !2442
  store %struct.bin_str* %1, %struct.bin_str** %sv, align 8, !dbg !18248, !tbaa !2442
  %2 = load i32, i32* %n.addr, align 4, !dbg !18250, !tbaa !2436
  %cmp = icmp slt i32 %2, 0, !dbg !18252
  br i1 %cmp, label %if.then, label %if.end, !dbg !18253

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18254
  unreachable, !dbg !18254

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !18255, !tbaa !2436
  %4 = load i32, i32* %n.addr, align 4, !dbg !18257, !tbaa !2436
  %cmp1 = icmp sle i32 %3, %4, !dbg !18258
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !18259

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !18260, metadata !DIExpression()), !dbg !18262
  %5 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18263, !tbaa !2442
  %cmp3 = icmp eq %struct.bin_str* %5, @slotvec0, !dbg !18264
  %frombool = zext i1 %cmp3 to i8, !dbg !18262
  store i8 %frombool, i8* %preallocated, align 1, !dbg !18262, !tbaa !2461
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !18265, metadata !DIExpression()), !dbg !18266
  store i32 2147483646, i32* %nmax, align 4, !dbg !18266, !tbaa !2436
  %6 = load i32, i32* %nmax, align 4, !dbg !18267, !tbaa !2436
  %7 = load i32, i32* %n.addr, align 4, !dbg !18269, !tbaa !2436
  %cmp4 = icmp slt i32 %6, %7, !dbg !18270
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18271

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #14, !dbg !18272
  unreachable, !dbg !18272

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !18273, !tbaa !2461
  %tobool = trunc i8 %8 to i1, !dbg !18273
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18273

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !18273

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18274, !tbaa !2442
  br label %cond.end, !dbg !18273

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bin_str* [ null, %cond.true ], [ %9, %cond.false ], !dbg !18273
  %10 = bitcast %struct.bin_str* %cond to i8*, !dbg !18273
  %11 = load i32, i32* %n.addr, align 4, !dbg !18275, !tbaa !2436
  %add = add nsw i32 %11, 1, !dbg !18276
  %conv = sext i32 %add to i64, !dbg !18277
  %mul = mul i64 %conv, 16, !dbg !18278
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !18279
  %12 = bitcast i8* %call7 to %struct.bin_str*, !dbg !18279
  store %struct.bin_str* %12, %struct.bin_str** %sv, align 8, !dbg !18280, !tbaa !2442
  store %struct.bin_str* %12, %struct.bin_str** @slotvec, align 8, !dbg !18281, !tbaa !2442
  %13 = load i8, i8* %preallocated, align 1, !dbg !18282, !tbaa !2461
  %tobool8 = trunc i8 %13 to i1, !dbg !18282
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !18284

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18285, !tbaa !2442
  %15 = bitcast %struct.bin_str* %14 to i8*, !dbg !18286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.bin_str* @slotvec0 to i8*), i64 16, i1 false), !dbg !18286, !tbaa.struct !18287
  br label %if.end10, !dbg !18288

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18289, !tbaa !2442
  %17 = load i32, i32* @nslots, align 4, !dbg !18290, !tbaa !2436
  %idx.ext = sext i32 %17 to i64, !dbg !18291
  %add.ptr = getelementptr inbounds %struct.bin_str, %struct.bin_str* %16, i64 %idx.ext, !dbg !18291
  %18 = bitcast %struct.bin_str* %add.ptr to i8*, !dbg !18292
  %19 = load i32, i32* %n.addr, align 4, !dbg !18293, !tbaa !2436
  %add11 = add nsw i32 %19, 1, !dbg !18294
  %20 = load i32, i32* @nslots, align 4, !dbg !18295, !tbaa !2436
  %sub = sub nsw i32 %add11, %20, !dbg !18296
  %conv12 = sext i32 %sub to i64, !dbg !18297
  %mul13 = mul i64 %conv12, 16, !dbg !18298
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !18292
  %21 = load i32, i32* %n.addr, align 4, !dbg !18299, !tbaa !2436
  %add14 = add nsw i32 %21, 1, !dbg !18300
  store i32 %add14, i32* @nslots, align 4, !dbg !18301, !tbaa !2436
  br label %if.end15, !dbg !18302

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !18303, metadata !DIExpression()), !dbg !18305
  %22 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18306, !tbaa !2442
  %23 = load i32, i32* %n.addr, align 4, !dbg !18307, !tbaa !2436
  %idxprom = sext i32 %23 to i64, !dbg !18306
  %arrayidx = getelementptr inbounds %struct.bin_str, %struct.bin_str* %22, i64 %idxprom, !dbg !18306, !ctir !1474
  %size16 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx, i32 0, i32 0, !dbg !18308, !ctir !1475
  %24 = load i64, i64* %size16, align 8, !dbg !18308, !tbaa !18212, !ctir !149
  store i64 %24, i64* %size, align 8, !dbg !18305, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %val, metadata !18309, metadata !DIExpression()), !dbg !18310
  %25 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18311, !tbaa !2442
  %26 = load i32, i32* %n.addr, align 4, !dbg !18312, !tbaa !2436
  %idxprom17 = sext i32 %26 to i64, !dbg !18311
  %arrayidx18 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %25, i64 %idxprom17, !dbg !18311, !ctir !1474
  %val19 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx18, i32 0, i32 1, !dbg !18313, !ctir !1475
  %27 = load i8*, i8** %val19, align 8, !dbg !18313, !tbaa !18195, !ctir !143
  store i8* %27, i8** %val, align 8, !dbg !18310, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18314, metadata !DIExpression()), !dbg !18315
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18316, !tbaa !2442
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !18317, !ctir !1458
  %29 = load i32, i32* %flags20, align 4, !dbg !18317, !tbaa !17117, !ctir !27
  %or = or i32 %29, 1, !dbg !18318
  store i32 %or, i32* %flags, align 4, !dbg !18315, !tbaa !2436
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !18319, metadata !DIExpression()), !dbg !18320
  %30 = load i8*, i8** %val, align 8, !dbg !18321, !tbaa !2442
  %31 = load i64, i64* %size, align 8, !dbg !18322, !tbaa !2579
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !18323, !tbaa !2442
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !18324, !tbaa !2579
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18325, !tbaa !2442
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !18326, !ctir !1458
  %35 = load i32, i32* %style, align 8, !dbg !18326, !tbaa !17049, !ctir !95
  %36 = load i32, i32* %flags, align 4, !dbg !18327, !tbaa !2436
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18328, !tbaa !2442
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !18329, !ctir !1458
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !18328
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18330, !tbaa !2442
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !18331, !ctir !1458
  %39 = load i8*, i8** %left_quote, align 8, !dbg !18331, !tbaa !17150, !ctir !146
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18332, !tbaa !2442
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !18333, !ctir !1458
  %41 = load i8*, i8** %right_quote, align 8, !dbg !18333, !tbaa !17155, !ctir !146
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !18334
  store i64 %call21, i64* %qsize, align 8, !dbg !18320, !tbaa !2579
  %42 = load i64, i64* %size, align 8, !dbg !18335, !tbaa !2579
  %43 = load i64, i64* %qsize, align 8, !dbg !18337, !tbaa !2579
  %cmp22 = icmp ule i64 %42, %43, !dbg !18338
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !18339

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !18340, !tbaa !2579
  %add25 = add i64 %44, 1, !dbg !18342
  store i64 %add25, i64* %size, align 8, !dbg !18343, !tbaa !2579
  %45 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18344, !tbaa !2442
  %46 = load i32, i32* %n.addr, align 4, !dbg !18345, !tbaa !2436
  %idxprom26 = sext i32 %46 to i64, !dbg !18344
  %arrayidx27 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %45, i64 %idxprom26, !dbg !18344, !ctir !1474
  %size28 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx27, i32 0, i32 0, !dbg !18346, !ctir !1475
  store i64 %add25, i64* %size28, align 8, !dbg !18347, !tbaa !18212, !ctir !149
  %47 = load i8*, i8** %val, align 8, !dbg !18348, !tbaa !2442
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !18350
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !18351

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !18352, !tbaa !2442
  call void @free(i8* %48) #13, !dbg !18353
  br label %if.end32, !dbg !18353

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !18354, !tbaa !2579
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !18355
  store i8* %call33, i8** %val, align 8, !dbg !18356, !tbaa !2442
  %50 = load %struct.bin_str*, %struct.bin_str** %sv, align 8, !dbg !18357, !tbaa !2442
  %51 = load i32, i32* %n.addr, align 4, !dbg !18358, !tbaa !2436
  %idxprom34 = sext i32 %51 to i64, !dbg !18357
  %arrayidx35 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %50, i64 %idxprom34, !dbg !18357, !ctir !1474
  %val36 = getelementptr inbounds %struct.bin_str, %struct.bin_str* %arrayidx35, i32 0, i32 1, !dbg !18359, !ctir !1475
  store i8* %call33, i8** %val36, align 8, !dbg !18360, !tbaa !18195, !ctir !143
  %52 = load i8*, i8** %val, align 8, !dbg !18361, !tbaa !2442
  %53 = load i64, i64* %size, align 8, !dbg !18362, !tbaa !2579
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !18363, !tbaa !2442
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !18364, !tbaa !2579
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18365, !tbaa !2442
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !18366, !ctir !1458
  %57 = load i32, i32* %style37, align 8, !dbg !18366, !tbaa !17049, !ctir !95
  %58 = load i32, i32* %flags, align 4, !dbg !18367, !tbaa !2436
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18368, !tbaa !2442
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !18369, !ctir !1458
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !18368
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18370, !tbaa !2442
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !18371, !ctir !1458
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !18371, !tbaa !17150, !ctir !146
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !18372, !tbaa !2442
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !18373, !ctir !1458
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !18373, !tbaa !17155, !ctir !146
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !18374
  br label %if.end43, !dbg !18375

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !18376, !tbaa !2436
  %call44 = call i32* @__errno_location() #17, !dbg !18377
  store i32 %64, i32* %call44, align 4, !dbg !18378, !tbaa !2436, !ctir !27
  %65 = load i8*, i8** %val, align 8, !dbg !18379, !tbaa !2442
  ret i8* %65, !dbg !18380
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18381 !ctir !1481 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18382, metadata !DIExpression()), !dbg !18383
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18384, metadata !DIExpression()), !dbg !18385
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18386, metadata !DIExpression()), !dbg !18387
  %0 = load i32, i32* %n.addr, align 4, !dbg !18388, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18389, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18390, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !18391
  ret i8* %call, !dbg !18392
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #0 !dbg !18393 !ctir !572 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18394, metadata !DIExpression()), !dbg !18395
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18396, !tbaa !2442
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !18397
  ret i8* %call, !dbg !18398
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #0 !dbg !18399 !ctir !1483 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18400, metadata !DIExpression()), !dbg !18401
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18402, metadata !DIExpression()), !dbg !18403
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18404, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18405, !tbaa !2579
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !18406
  ret i8* %call, !dbg !18407
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #0 !dbg !18408 !ctir !1485 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1458
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18409, metadata !DIExpression()), !dbg !18410
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18411, metadata !DIExpression()), !dbg !18412
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18413, metadata !DIExpression()), !dbg !18414
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18415, metadata !DIExpression()), !dbg !18416
  %0 = load i32, i32* %s.addr, align 4, !dbg !18417, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18418
  %1 = load i32, i32* %n.addr, align 4, !dbg !18419, !tbaa !2436
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18420, !tbaa !2442
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !18421
  ret i8* %call, !dbg !18422
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #0 !dbg !18423 !ctir !1529 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !18424, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !18426, metadata !DIExpression()), !dbg !18427
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !18427
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !18427
  %1 = load i32, i32* %style.addr, align 4, !dbg !18428, !tbaa !2497
  %cmp = icmp eq i32 %1, 10, !dbg !18430
  br i1 %cmp, label %if.then, label %if.end, !dbg !18431

if.then:                                          ; preds = %entry
  call void @abort() #15, !dbg !18432
  unreachable, !dbg !18432

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !18433, !tbaa !2497
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !18434, !ctir !1446
  store i32 %2, i32* %style1, align 8, !dbg !18435, !tbaa !17049, !ctir !95
  ret void, !dbg !18436
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18437 !ctir !1487 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1458
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18438, metadata !DIExpression()), !dbg !18439
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18440, metadata !DIExpression()), !dbg !18441
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18442, metadata !DIExpression()), !dbg !18443
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18444, metadata !DIExpression()), !dbg !18445
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18446, metadata !DIExpression()), !dbg !18447
  %0 = load i32, i32* %s.addr, align 4, !dbg !18448, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !18449
  %1 = load i32, i32* %n.addr, align 4, !dbg !18450, !tbaa !2436
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18451, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18452, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !18453
  ret i8* %call, !dbg !18454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #0 !dbg !18455 !ctir !1489 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18456, metadata !DIExpression()), !dbg !18457
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18458, metadata !DIExpression()), !dbg !18459
  %0 = load i32, i32* %s.addr, align 4, !dbg !18460, !tbaa !2497
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18461, !tbaa !2442
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !18462
  ret i8* %call, !dbg !18463
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #0 !dbg !18464 !ctir !1491 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18465, metadata !DIExpression()), !dbg !18466
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18467, metadata !DIExpression()), !dbg !18468
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18469, metadata !DIExpression()), !dbg !18470
  %0 = load i32, i32* %s.addr, align 4, !dbg !18471, !tbaa !2497
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18472, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18473, !tbaa !2579
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !18474
  ret i8* %call, !dbg !18475
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #0 !dbg !18476 !ctir !1493 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1446
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18477, metadata !DIExpression()), !dbg !18478
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18479, metadata !DIExpression()), !dbg !18480
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18481, metadata !DIExpression()), !dbg !18482
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18483, metadata !DIExpression()), !dbg !18484
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !18485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18485, !tbaa.struct !18486
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18487, !tbaa !2497
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !18488
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18489, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18490, !tbaa !2579
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !18491
  ret i8* %call1, !dbg !18492
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #0 !dbg !18493 !ctir !1495 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18494, metadata !DIExpression()), !dbg !18495
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18496, metadata !DIExpression()), !dbg !18497
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18498, !tbaa !2442
  %1 = load i8, i8* %ch.addr, align 1, !dbg !18499, !tbaa !2497
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !18500
  ret i8* %call, !dbg !18501
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #0 !dbg !18502 !ctir !572 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18503, metadata !DIExpression()), !dbg !18504
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18505, !tbaa !2442
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !18506
  ret i8* %call, !dbg !18507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #0 !dbg !18508 !ctir !1483 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18509, metadata !DIExpression()), !dbg !18510
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18511, metadata !DIExpression()), !dbg !18512
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18513, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18514, !tbaa !2579
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !18515
  ret i8* %call, !dbg !18516
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #0 !dbg !18517 !ctir !1485 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1446
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18518, metadata !DIExpression()), !dbg !18519
  store i32 %s, i32* %s.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !18520, metadata !DIExpression()), !dbg !18521
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18522, metadata !DIExpression()), !dbg !18523
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !18524, metadata !DIExpression()), !dbg !18525
  %0 = load i32, i32* %s.addr, align 4, !dbg !18526, !tbaa !2497
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !18527
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !18527
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !18527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !18527, !tbaa.struct !18486
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !18528
  %3 = load i32, i32* %n.addr, align 4, !dbg !18529, !tbaa !2436
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18530, !tbaa !2442
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !18531
  ret i8* %call1, !dbg !18532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18533 !ctir !1497 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18534, metadata !DIExpression()), !dbg !18535
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18536, metadata !DIExpression()), !dbg !18537
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18538, metadata !DIExpression()), !dbg !18539
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18540, metadata !DIExpression()), !dbg !18541
  %0 = load i32, i32* %n.addr, align 4, !dbg !18542, !tbaa !2436
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18543, !tbaa !2442
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18544, !tbaa !2442
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !18545, !tbaa !2442
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !18546
  ret i8* %call, !dbg !18547
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18548 !ctir !1499 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1446
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18549, metadata !DIExpression()), !dbg !18550
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18551, metadata !DIExpression()), !dbg !18552
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18553, metadata !DIExpression()), !dbg !18554
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18557, metadata !DIExpression()), !dbg !18558
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !18559, metadata !DIExpression()), !dbg !18560
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !18561
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !18561, !tbaa.struct !18486
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !18562, !tbaa !2442
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !18563, !tbaa !2442
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !18564
  %3 = load i32, i32* %n.addr, align 4, !dbg !18565, !tbaa !2436
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !18566, !tbaa !2442
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !18567, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !18568
  ret i8* %call, !dbg !18569
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #0 !dbg !18570 !ctir !1501 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18571, metadata !DIExpression()), !dbg !18572
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18573, metadata !DIExpression()), !dbg !18574
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18575, metadata !DIExpression()), !dbg !18576
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18577, !tbaa !2442
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18578, !tbaa !2442
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18579, !tbaa !2442
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !18580
  ret i8* %call, !dbg !18581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #0 !dbg !18582 !ctir !1503 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !18583, metadata !DIExpression()), !dbg !18584
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !18585, metadata !DIExpression()), !dbg !18586
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18587, metadata !DIExpression()), !dbg !18588
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18589, metadata !DIExpression()), !dbg !18590
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !18591, !tbaa !2442
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !18592, !tbaa !2442
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !18593, !tbaa !2442
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !18594, !tbaa !2579
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !18595
  ret i8* %call, !dbg !18596
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #0 !dbg !18597 !ctir !1505 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18598, metadata !DIExpression()), !dbg !18599
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18600, metadata !DIExpression()), !dbg !18601
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18602, metadata !DIExpression()), !dbg !18603
  %0 = load i32, i32* %n.addr, align 4, !dbg !18604, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18605, !tbaa !2442
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !18606, !tbaa !2579
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !18607
  ret i8* %call, !dbg !18608
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #0 !dbg !18609 !ctir !1507 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18610, metadata !DIExpression()), !dbg !18611
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !18612, metadata !DIExpression()), !dbg !18613
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18614, !tbaa !2442
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !18615, !tbaa !2579
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !18616
  ret i8* %call, !dbg !18617
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #0 !dbg !18618 !ctir !1509 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18619, metadata !DIExpression()), !dbg !18620
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18621, metadata !DIExpression()), !dbg !18622
  %0 = load i32, i32* %n.addr, align 4, !dbg !18623, !tbaa !2436
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !18624, !tbaa !2442
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !18625
  ret i8* %call, !dbg !18626
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #0 !dbg !18627 !ctir !579 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18628, metadata !DIExpression()), !dbg !18629
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18630, !tbaa !2442
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !18631
  ret i8* %call, !dbg !18632
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #0 !dbg !18633 !ctir !1955 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18635, metadata !DIExpression()), !dbg !18636
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18637, metadata !DIExpression()), !dbg !18638
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18639, !tbaa !2442
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18640, !tbaa !2442
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !18641
  ret i1 %call, !dbg !18642
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #0 !dbg !18643 !ctir !1957 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !146
  %dest_basename = alloca i8*, align 8, !ctir !146
  %source_baselen = alloca i64, align 8, !ctir !149
  %dest_baselen = alloca i64, align 8, !ctir !149
  %identical_basenames = alloca i8, align 1, !ctir !141
  %compare_dirs = alloca i8, align 1, !ctir !141
  %same = alloca i8, align 1, !ctir !141
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !18644
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !18644
  %source_dirname = alloca i8*, align 8, !ctir !143
  %flags = alloca i32, align 4, !ctir !27
  %dest_dirname = alloca i8*, align 8, !ctir !143
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !18665, metadata !DIExpression()), !dbg !18666
  store i8* %source, i8** %source.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !18667, metadata !DIExpression()), !dbg !18668
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !18669, metadata !DIExpression()), !dbg !18670
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !18671, metadata !DIExpression()), !dbg !18672
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !18673, metadata !DIExpression()), !dbg !18674
  %0 = load i8*, i8** %source.addr, align 8, !dbg !18675, !tbaa !2442
  %call = call i8* @last_component(i8* %0) #16, !dbg !18676
  store i8* %call, i8** %source_basename, align 8, !dbg !18674, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !18677, metadata !DIExpression()), !dbg !18678
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !18679, !tbaa !2442
  %call1 = call i8* @last_component(i8* %1) #16, !dbg !18680
  store i8* %call1, i8** %dest_basename, align 8, !dbg !18678, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !18681, metadata !DIExpression()), !dbg !18682
  %2 = load i8*, i8** %source_basename, align 8, !dbg !18683, !tbaa !2442
  %call2 = call i64 @base_len(i8* %2) #16, !dbg !18684
  store i64 %call2, i64* %source_baselen, align 8, !dbg !18682, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !18685, metadata !DIExpression()), !dbg !18686
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !18687, !tbaa !2442
  %call3 = call i64 @base_len(i8* %3) #16, !dbg !18688
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !18686, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !18689, metadata !DIExpression()), !dbg !18690
  %4 = load i64, i64* %source_baselen, align 8, !dbg !18691, !tbaa !2579
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !18692, !tbaa !2579
  %cmp = icmp eq i64 %4, %5, !dbg !18693
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18694

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !18695, !tbaa !2442
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !18696, !tbaa !2442
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !18697, !tbaa !2579
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #16, !dbg !18698
  %cmp5 = icmp eq i32 %call4, 0, !dbg !18699
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !18700
  %frombool = zext i1 %9 to i8, !dbg !18690
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !18690, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !18701, metadata !DIExpression()), !dbg !18702
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !18703, !tbaa !2461
  %tobool = trunc i8 %10 to i1, !dbg !18703
  %frombool6 = zext i1 %tobool to i8, !dbg !18702
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !18702, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %same, metadata !18704, metadata !DIExpression()), !dbg !18705
  store i8 0, i8* %same, align 1, !dbg !18705, !tbaa !2461
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !18706, !tbaa !2461
  %tobool7 = trunc i8 %11 to i1, !dbg !18706
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !18708

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !18709, metadata !DIExpression()), !dbg !18711
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !18712, metadata !DIExpression()), !dbg !18713
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !18714, metadata !DIExpression()), !dbg !18715
  %12 = load i8*, i8** %source.addr, align 8, !dbg !18716, !tbaa !2442
  %call8 = call i8* @dir_name(i8* %12), !dbg !18717
  store i8* %call8, i8** %source_dirname, align 8, !dbg !18715, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18718, metadata !DIExpression()), !dbg !18719
  store i32 256, i32* %flags, align 4, !dbg !18719, !tbaa !2436
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !18720, !tbaa !2436
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !18722, !tbaa !2442
  %15 = load i32, i32* %flags, align 4, !dbg !18723, !tbaa !2436
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #13, !dbg !18724
  %cmp10 = icmp ne i32 %call9, 0, !dbg !18725
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !18726

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #17, !dbg !18727
  %16 = load i32, i32* %call12, align 4, !dbg !18727, !tbaa !2436, !ctir !27
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !18729, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.420, i64 0, i64 0), i8* %17), !dbg !18730
  br label %if.end, !dbg !18731

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !18732, !tbaa !2442
  call void @free(i8* %18) #13, !dbg !18733
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !18734, metadata !DIExpression()), !dbg !18735
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !18736, !tbaa !2442
  %call13 = call i8* @dir_name(i8* %19), !dbg !18737
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !18735, !tbaa !2442
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !18738, !tbaa !2436
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !18740, !tbaa !2442
  %22 = load i32, i32* %flags, align 4, !dbg !18741, !tbaa !2436
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #13, !dbg !18742
  %cmp15 = icmp ne i32 %call14, 0, !dbg !18743
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !18744

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #17, !dbg !18745
  %23 = load i32, i32* %call17, align 4, !dbg !18745, !tbaa !2436, !ctir !27
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !18747, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.420, i64 0, i64 0), i8* %24), !dbg !18748
  br label %if.end18, !dbg !18749

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !18750, !ctir !18644
  %25 = load i64, i64* %st_ino, align 8, !dbg !18750, !tbaa !4827, !ctir !197
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !18750, !ctir !18644
  %26 = load i64, i64* %st_ino19, align 8, !dbg !18750, !tbaa !4827, !ctir !197
  %cmp20 = icmp eq i64 %25, %26, !dbg !18750
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !18750

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !18750, !ctir !18644
  %27 = load i64, i64* %st_dev, align 8, !dbg !18750, !tbaa !4825, !ctir !195
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !18750, !ctir !18644
  %28 = load i64, i64* %st_dev22, align 8, !dbg !18750, !tbaa !4825, !ctir !195
  %cmp23 = icmp eq i64 %27, %28, !dbg !18750
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !18751
  %frombool25 = zext i1 %29 to i8, !dbg !18752
  store i8 %frombool25, i8* %same, align 1, !dbg !18752, !tbaa !2461
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !18753, !tbaa !2442
  call void @free(i8* %30) #13, !dbg !18754
  br label %if.end26, !dbg !18755

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !18756, !tbaa !2461
  %tobool27 = trunc i8 %31 to i1, !dbg !18756
  ret i1 %tobool27, !dbg !18757
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #0 !dbg !18758 !ctir !1962 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18759, metadata !DIExpression()), !dbg !18760
  %call = call i32* @__errno_location() #17, !dbg !18761
  store i32 95, i32* %call, align 4, !dbg !18762, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18763
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #0 !dbg !18764 !ctir !1967 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18765, metadata !DIExpression()), !dbg !18766
  ret void, !dbg !18767
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #0 !dbg !18768 !ctir !1962 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18769, metadata !DIExpression()), !dbg !18770
  %call = call i32* @__errno_location() #17, !dbg !18771
  store i32 95, i32* %call, align 4, !dbg !18772, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18773
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #0 !dbg !18774 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18775, metadata !DIExpression()), !dbg !18776
  %call = call i32* @__errno_location() #17, !dbg !18777
  store i32 95, i32* %call, align 4, !dbg !18778, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18779
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #0 !dbg !18780 !ctir !1971 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  store i32 %m, i32* %m.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18785, metadata !DIExpression()), !dbg !18786
  %call = call i32* @__errno_location() #17, !dbg !18787
  store i32 95, i32* %call, align 4, !dbg !18788, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #0 !dbg !18790 !ctir !1973 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18791, metadata !DIExpression()), !dbg !18792
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18793, metadata !DIExpression()), !dbg !18794
  %call = call i32* @__errno_location() #17, !dbg !18795
  store i32 95, i32* %call, align 4, !dbg !18796, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18797
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #0 !dbg !18798 !ctir !1973 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18799, metadata !DIExpression()), !dbg !18800
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18801, metadata !DIExpression()), !dbg !18802
  %call = call i32* @__errno_location() #17, !dbg !18803
  store i32 95, i32* %call, align 4, !dbg !18804, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #0 !dbg !18806 !ctir !1975 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18807, metadata !DIExpression()), !dbg !18808
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !18809, metadata !DIExpression()), !dbg !18810
  %call = call i32* @__errno_location() #17, !dbg !18811
  store i32 95, i32* %call, align 4, !dbg !18812, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #0 !dbg !18814 !ctir !1977 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18817, metadata !DIExpression()), !dbg !18818
  %call = call i32* @__errno_location() #17, !dbg !18819
  store i32 95, i32* %call, align 4, !dbg !18820, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #0 !dbg !18822 !ctir !1977 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18823, metadata !DIExpression()), !dbg !18824
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  %call = call i32* @__errno_location() #17, !dbg !18827
  store i32 95, i32* %call, align 4, !dbg !18828, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #0 !dbg !18830 !ctir !1979 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !18831, metadata !DIExpression()), !dbg !18832
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18833, metadata !DIExpression()), !dbg !18834
  %call = call i32* @__errno_location() #17, !dbg !18835
  store i32 95, i32* %call, align 4, !dbg !18836, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #0 !dbg !18838 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18839, metadata !DIExpression()), !dbg !18840
  %call = call i32* @__errno_location() #17, !dbg !18841
  store i32 95, i32* %call, align 4, !dbg !18842, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18843
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #0 !dbg !18844 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18845, metadata !DIExpression()), !dbg !18846
  %call = call i32* @__errno_location() #17, !dbg !18847
  store i32 95, i32* %call, align 4, !dbg !18848, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18849
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #0 !dbg !18850 !ctir !1969 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !18851, metadata !DIExpression()), !dbg !18852
  %call = call i32* @__errno_location() #17, !dbg !18853
  store i32 95, i32* %call, align 4, !dbg !18854, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18855
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #0 !dbg !18856 !ctir !1981 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !18857, metadata !DIExpression()), !dbg !18858
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !18859, metadata !DIExpression()), !dbg !18860
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !18861, metadata !DIExpression()), !dbg !18862
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !18863, metadata !DIExpression()), !dbg !18864
  %call = call i32* @__errno_location() #17, !dbg !18865
  store i32 95, i32* %call, align 4, !dbg !18866, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18867
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #0 !dbg !18868 !ctir !1984 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18869, metadata !DIExpression()), !dbg !18870
  %call = call i32* @__errno_location() #17, !dbg !18871
  store i32 95, i32* %call, align 4, !dbg !18872, !tbaa !2436, !ctir !27
  ret i16 0, !dbg !18873
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #0 !dbg !18874 !ctir !731 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !18875, metadata !DIExpression()), !dbg !18876
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !18877, metadata !DIExpression()), !dbg !18878
  %call = call i32* @__errno_location() #17, !dbg !18879
  store i32 95, i32* %call, align 4, !dbg !18880, !tbaa !2436, !ctir !27
  ret i32 -1, !dbg !18881
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !18882 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18884, metadata !DIExpression()), !dbg !18885
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18886, !tbaa !2442
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18886, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_atim, i32 0, i32 1, !dbg !18887, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18887, !tbaa !18888, !ctir !219
  ret i64 %1, !dbg !18889
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !18890 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18891, metadata !DIExpression()), !dbg !18892
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18893, !tbaa !2442
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18893, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_ctim, i32 0, i32 1, !dbg !18894, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18894, !tbaa !18895, !ctir !219
  ret i64 %1, !dbg !18896
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !18897 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18898, metadata !DIExpression()), !dbg !18899
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18900, !tbaa !2442
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18900, !ctir !1992
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %st_mtim, i32 0, i32 1, !dbg !18901, !ctir !2007
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18901, !tbaa !18902, !ctir !219
  ret i64 %1, !dbg !18903
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !18904 !ctir !1989 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18905, metadata !DIExpression()), !dbg !18906
  ret i64 0, !dbg !18907
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !18908 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18909, metadata !DIExpression()), !dbg !18910
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18911, !tbaa !2442
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !18911, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18911
  %2 = bitcast %struct.dev_ino* %st_atim to i8*, !dbg !18911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18911, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18912
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18912
  ret { i64, i64 } %4, !dbg !18912
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !18913 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18914, metadata !DIExpression()), !dbg !18915
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18916, !tbaa !2442
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !18916, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18916
  %2 = bitcast %struct.dev_ino* %st_ctim to i8*, !dbg !18916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18916, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18917
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18917
  ret { i64, i64 } %4, !dbg !18917
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !18918 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18919, metadata !DIExpression()), !dbg !18920
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !18921, !tbaa !2442
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !18921, !ctir !1992
  %1 = bitcast %struct.dev_ino* %retval to i8*, !dbg !18921
  %2 = bitcast %struct.dev_ino* %st_mtim to i8*, !dbg !18921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !18921, !tbaa.struct !4755
  %3 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18922
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !18922
  ret { i64, i64 } %4, !dbg !18922
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !18923 !ctir !2014 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18924, metadata !DIExpression()), !dbg !18925
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18926, metadata !DIExpression()), !dbg !18927
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18928, !ctir !2007
  store i64 -1, i64* %tv_sec, align 8, !dbg !18929, !tbaa !2465, !ctir !164
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18930, !ctir !2007
  store i64 -1, i64* %tv_nsec, align 8, !dbg !18931, !tbaa !2469, !ctir !219
  %0 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18932
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !18932
  ret { i64, i64 } %1, !dbg !18932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #0 !dbg !18933 !ctir !2016 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !18934, metadata !DIExpression()), !dbg !18935
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !18936, metadata !DIExpression()), !dbg !18937
  %0 = load i32, i32* %result.addr, align 4, !dbg !18938, !tbaa !2436
  ret i32 %0, !dbg !18939
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @make_timespec(i64 %s, i64 %ns) #0 !dbg !18940 !ctir !2022 {
entry:
  %retval = alloca %struct.dev_ino, align 8
  %s.addr = alloca i64, align 8
  %ns.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18942, metadata !DIExpression()), !dbg !18943
  store i64 %ns, i64* %ns.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %ns.addr, metadata !18944, metadata !DIExpression()), !dbg !18945
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %retval, metadata !18946, metadata !DIExpression()), !dbg !18947
  %0 = load i64, i64* %s.addr, align 8, !dbg !18948, !tbaa !2579
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 0, !dbg !18949, !ctir !2024
  store i64 %0, i64* %tv_sec, align 8, !dbg !18950, !tbaa !2465, !ctir !164
  %1 = load i64, i64* %ns.addr, align 8, !dbg !18951, !tbaa !2579
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %retval, i32 0, i32 1, !dbg !18952, !ctir !2024
  store i64 %1, i64* %tv_nsec, align 8, !dbg !18953, !tbaa !2469, !ctir !219
  %2 = bitcast %struct.dev_ino* %retval to { i64, i64 }*, !dbg !18954
  %3 = load { i64, i64 }, { i64, i64 }* %2, align 8, !dbg !18954
  ret { i64, i64 } %3, !dbg !18954
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_cmp(i64 %a.coerce0, i64 %a.coerce1, i64 %b.coerce0, i64 %b.coerce1) #9 !dbg !18955 !ctir !2028 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.dev_ino, align 8
  %b = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  %3 = bitcast %struct.dev_ino* %b to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %b.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %b.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18956, metadata !DIExpression()), !dbg !18957
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %b, metadata !18958, metadata !DIExpression()), !dbg !18959
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18960, !ctir !2024
  %6 = load i64, i64* %tv_sec, align 8, !dbg !18960, !tbaa !2465, !ctir !164
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18962, !ctir !2024
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !18962, !tbaa !2465, !ctir !164
  %cmp = icmp slt i64 %6, %7, !dbg !18963
  br i1 %cmp, label %if.then, label %if.end, !dbg !18964

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !18965
  br label %return, !dbg !18965

if.end:                                           ; preds = %entry
  %tv_sec2 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18966, !ctir !2024
  %8 = load i64, i64* %tv_sec2, align 8, !dbg !18966, !tbaa !2465, !ctir !164
  %tv_sec3 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 0, !dbg !18968, !ctir !2024
  %9 = load i64, i64* %tv_sec3, align 8, !dbg !18968, !tbaa !2465, !ctir !164
  %cmp4 = icmp sgt i64 %8, %9, !dbg !18969
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !18970

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !18971
  br label %return, !dbg !18971

if.end6:                                          ; preds = %if.end
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18972, !ctir !2024
  %10 = load i64, i64* %tv_nsec, align 8, !dbg !18972, !tbaa !2469, !ctir !219
  %cmp7 = icmp sle i64 -1, %10, !dbg !18972
  br i1 %cmp7, label %land.lhs.true, label %cond.false, !dbg !18972

land.lhs.true:                                    ; preds = %if.end6
  %tv_nsec8 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18972, !ctir !2024
  %11 = load i64, i64* %tv_nsec8, align 8, !dbg !18972, !tbaa !2469, !ctir !219
  %cmp9 = icmp sle i64 %11, 2000000000, !dbg !18972
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !18972

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18972

cond.false:                                       ; preds = %land.lhs.true, %if.end6
  unreachable, !dbg !18972

unreachable.cont:                                 ; No predecessors!
  br label %cond.end, !dbg !18972

cond.end:                                         ; preds = %unreachable.cont, %cond.true
  %tv_nsec10 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18973, !ctir !2024
  %12 = load i64, i64* %tv_nsec10, align 8, !dbg !18973, !tbaa !2469, !ctir !219
  %cmp11 = icmp sle i64 -1, %12, !dbg !18973
  br i1 %cmp11, label %land.lhs.true12, label %cond.false16, !dbg !18973

land.lhs.true12:                                  ; preds = %cond.end
  %tv_nsec13 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18973, !ctir !2024
  %13 = load i64, i64* %tv_nsec13, align 8, !dbg !18973, !tbaa !2469, !ctir !219
  %cmp14 = icmp sle i64 %13, 2000000000, !dbg !18973
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !18973

cond.true15:                                      ; preds = %land.lhs.true12
  br label %cond.end18, !dbg !18973

cond.false16:                                     ; preds = %land.lhs.true12, %cond.end
  unreachable, !dbg !18973

unreachable.cont17:                               ; No predecessors!
  br label %cond.end18, !dbg !18973

cond.end18:                                       ; preds = %unreachable.cont17, %cond.true15
  %tv_nsec19 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18974, !ctir !2024
  %14 = load i64, i64* %tv_nsec19, align 8, !dbg !18974, !tbaa !2469, !ctir !219
  %tv_nsec20 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %b, i32 0, i32 1, !dbg !18975, !ctir !2024
  %15 = load i64, i64* %tv_nsec20, align 8, !dbg !18975, !tbaa !2469, !ctir !219
  %sub = sub nsw i64 %14, %15, !dbg !18976
  %conv = trunc i64 %sub to i32, !dbg !18977
  store i32 %conv, i32* %retval, align 4, !dbg !18978
  br label %return, !dbg !18978

return:                                           ; preds = %cond.end18, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !18979
  ret i32 %16, !dbg !18979
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @timespec_sign(i64 %a.coerce0, i64 %a.coerce1) #9 !dbg !18980 !ctir !2030 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18981, metadata !DIExpression()), !dbg !18982
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18983, !ctir !2024
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18983, !tbaa !2465, !ctir !164
  %cmp = icmp slt i64 %3, 0, !dbg !18984
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18985

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18985

cond.false:                                       ; preds = %entry
  %tv_sec1 = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18986, !ctir !2024
  %4 = load i64, i64* %tv_sec1, align 8, !dbg !18986, !tbaa !2465, !ctir !164
  %tobool = icmp ne i64 %4, 0, !dbg !18987
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !18988

lor.rhs:                                          ; preds = %cond.false
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18989, !ctir !2024
  %5 = load i64, i64* %tv_nsec, align 8, !dbg !18989, !tbaa !2469, !ctir !219
  %tobool2 = icmp ne i64 %5, 0, !dbg !18988
  br label %lor.end, !dbg !18988

lor.end:                                          ; preds = %lor.rhs, %cond.false
  %6 = phi i1 [ true, %cond.false ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !18988
  br label %cond.end, !dbg !18985

cond.end:                                         ; preds = %lor.end, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %lor.ext, %lor.end ], !dbg !18985
  ret i32 %cond, !dbg !18990
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timespectod(i64 %a.coerce0, i64 %a.coerce1) #0 !dbg !18991 !ctir !2032 {
entry:
  %a = alloca %struct.dev_ino, align 8
  %0 = bitcast %struct.dev_ino* %a to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %a.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %a.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_ino* %a, metadata !18992, metadata !DIExpression()), !dbg !18993
  %tv_sec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 0, !dbg !18994, !ctir !2024
  %3 = load i64, i64* %tv_sec, align 8, !dbg !18994, !tbaa !2465, !ctir !164
  %conv = sitofp i64 %3 to double, !dbg !18995
  %tv_nsec = getelementptr inbounds %struct.dev_ino, %struct.dev_ino* %a, i32 0, i32 1, !dbg !18996, !ctir !2024
  %4 = load i64, i64* %tv_nsec, align 8, !dbg !18996, !tbaa !2469, !ctir !219
  %conv1 = sitofp i64 %4 to double, !dbg !18997
  %div = fdiv double %conv1, 1.000000e+09, !dbg !18998
  %add = fadd double %conv, %div, !dbg !18999
  ret double %add, !dbg !19000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #0 !dbg !19001 !ctir !2038 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19003, metadata !DIExpression()), !dbg !19004
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19005, metadata !DIExpression()), !dbg !19006
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19007, metadata !DIExpression()), !dbg !19008
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19009, metadata !DIExpression()), !dbg !19010
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !19011, metadata !DIExpression()), !dbg !19012
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !19013, metadata !DIExpression()), !dbg !19014
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !19015, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !19015
  br i1 %tobool, label %if.then, label %if.else, !dbg !19017

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19018, !tbaa !2442
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !19019, !tbaa !2442
  %3 = load i8*, i8** %package.addr, align 8, !dbg !19020, !tbaa !2442
  %4 = load i8*, i8** %version.addr, align 8, !dbg !19021, !tbaa !2442
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.435, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !19022
  br label %if.end, !dbg !19022

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19023, !tbaa !2442
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19024, !tbaa !2442
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19025, !tbaa !2442
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.436, i64 0, i64 0), i8* %6, i8* %7), !dbg !19026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19027, !tbaa !2442
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.437, i64 0, i64 0)) #13, !dbg !19028
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !19029
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.438, i64 0, i64 0)) #13, !dbg !19030
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19030, !tbaa !2442
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !19030
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !19031, !tbaa !2579
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !19032

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !19033

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19035, !tbaa !2442
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.439, i64 0, i64 0)) #13, !dbg !19036
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !19037, !tbaa !2442
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !19037, !ctir !567
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !19037, !tbaa !2442
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !19038
  br label %sw.epilog, !dbg !19039

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19040, !tbaa !2442
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.440, i64 0, i64 0)) #13, !dbg !19041
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !19042, !tbaa !2442
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !19042, !ctir !567
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !19042, !tbaa !2442
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !19043, !tbaa !2442
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !19043, !ctir !567
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !19043, !tbaa !2442
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !19044
  br label %sw.epilog, !dbg !19045

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19046, !tbaa !2442
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.441, i64 0, i64 0)) #13, !dbg !19047
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !19048, !tbaa !2442
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !19048, !ctir !567
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !19048, !tbaa !2442
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !19049, !tbaa !2442
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !19049, !ctir !567
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !19049, !tbaa !2442
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !19050, !tbaa !2442
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !19050, !ctir !567
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !19050, !tbaa !2442
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !19051
  br label %sw.epilog, !dbg !19052

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19053, !tbaa !2442
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.442, i64 0, i64 0)) #13, !dbg !19054
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !19055, !tbaa !2442
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !19055, !ctir !567
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !19055, !tbaa !2442
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !19056, !tbaa !2442
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !19056, !ctir !567
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !19056, !tbaa !2442
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !19057, !tbaa !2442
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !19057, !ctir !567
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !19057, !tbaa !2442
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !19058, !tbaa !2442
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !19058, !ctir !567
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !19058, !tbaa !2442
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !19059
  br label %sw.epilog, !dbg !19060

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19061, !tbaa !2442
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.443, i64 0, i64 0)) #13, !dbg !19062
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !19063, !tbaa !2442
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !19063, !ctir !567
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !19063, !tbaa !2442
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !19064, !tbaa !2442
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !19064, !ctir !567
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !19064, !tbaa !2442
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !19065, !tbaa !2442
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !19065, !ctir !567
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !19065, !tbaa !2442
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !19066, !tbaa !2442
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !19066, !ctir !567
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !19066, !tbaa !2442
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !19067, !tbaa !2442
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !19067, !ctir !567
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !19067, !tbaa !2442
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !19068
  br label %sw.epilog, !dbg !19069

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19070, !tbaa !2442
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.444, i64 0, i64 0)) #13, !dbg !19071
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !19072, !tbaa !2442
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !19072, !ctir !567
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !19072, !tbaa !2442
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !19073, !tbaa !2442
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !19073, !ctir !567
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !19073, !tbaa !2442
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !19074, !tbaa !2442
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !19074, !ctir !567
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !19074, !tbaa !2442
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !19075, !tbaa !2442
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !19075, !ctir !567
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !19075, !tbaa !2442
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !19076, !tbaa !2442
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !19076, !ctir !567
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !19076, !tbaa !2442
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !19077, !tbaa !2442
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !19077, !ctir !567
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !19077, !tbaa !2442
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !19078
  br label %sw.epilog, !dbg !19079

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19080, !tbaa !2442
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.445, i64 0, i64 0)) #13, !dbg !19081
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !19082, !tbaa !2442
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !19082, !ctir !567
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !19082, !tbaa !2442
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !19083, !tbaa !2442
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !19083, !ctir !567
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !19083, !tbaa !2442
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !19084, !tbaa !2442
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !19084, !ctir !567
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !19084, !tbaa !2442
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !19085, !tbaa !2442
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !19085, !ctir !567
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !19085, !tbaa !2442
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !19086, !tbaa !2442
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !19086, !ctir !567
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !19086, !tbaa !2442
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !19087, !tbaa !2442
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !19087, !ctir !567
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !19087, !tbaa !2442
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !19088, !tbaa !2442
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !19088, !ctir !567
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !19088, !tbaa !2442
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !19089
  br label %sw.epilog, !dbg !19090

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19091, !tbaa !2442
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.446, i64 0, i64 0)) #13, !dbg !19092
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !19093, !tbaa !2442
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !19093, !ctir !567
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !19093, !tbaa !2442
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !19094, !tbaa !2442
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !19094, !ctir !567
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !19094, !tbaa !2442
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !19095, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !19095, !ctir !567
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !19095, !tbaa !2442
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !19096, !tbaa !2442
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !19096, !ctir !567
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !19096, !tbaa !2442
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !19097, !tbaa !2442
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !19097, !ctir !567
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !19097, !tbaa !2442
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !19098, !tbaa !2442
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !19098, !ctir !567
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !19098, !tbaa !2442
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !19099, !tbaa !2442
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !19099, !ctir !567
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !19099, !tbaa !2442
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !19100, !tbaa !2442
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !19100, !ctir !567
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !19100, !tbaa !2442
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !19101
  br label %sw.epilog, !dbg !19102

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19103, !tbaa !2442
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.447, i64 0, i64 0)) #13, !dbg !19104
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !19105, !tbaa !2442
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !19105, !ctir !567
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !19105, !tbaa !2442
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !19106, !tbaa !2442
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !19106, !ctir !567
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !19106, !tbaa !2442
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !19107, !tbaa !2442
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !19107, !ctir !567
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !19107, !tbaa !2442
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !19108, !tbaa !2442
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !19108, !ctir !567
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !19108, !tbaa !2442
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !19109, !tbaa !2442
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !19109, !ctir !567
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !19109, !tbaa !2442
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !19110, !tbaa !2442
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !19110, !ctir !567
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !19110, !tbaa !2442
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !19111, !tbaa !2442
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !19111, !ctir !567
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !19111, !tbaa !2442
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !19112, !tbaa !2442
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !19112, !ctir !567
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !19112, !tbaa !2442
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !19113, !tbaa !2442
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !19113, !ctir !567
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !19113, !tbaa !2442
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !19114
  br label %sw.epilog, !dbg !19115

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19116, !tbaa !2442
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.448, i64 0, i64 0)) #13, !dbg !19117
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !19118, !tbaa !2442
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !19118, !ctir !567
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !19118, !tbaa !2442
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !19119, !tbaa !2442
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !19119, !ctir !567
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !19119, !tbaa !2442
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !19120, !tbaa !2442
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !19120, !ctir !567
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !19120, !tbaa !2442
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !19121, !tbaa !2442
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !19121, !ctir !567
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !19121, !tbaa !2442
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !19122, !tbaa !2442
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !19122, !ctir !567
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !19122, !tbaa !2442
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !19123, !tbaa !2442
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !19123, !ctir !567
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !19123, !tbaa !2442
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !19124, !tbaa !2442
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !19124, !ctir !567
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !19124, !tbaa !2442
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !19125, !tbaa !2442
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !19125, !ctir !567
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !19125, !tbaa !2442
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !19126, !tbaa !2442
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !19126, !ctir !567
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !19126, !tbaa !2442
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !19127
  br label %sw.epilog, !dbg !19128

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !19129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #0 !dbg !19130 !ctir !2075 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19131, metadata !DIExpression()), !dbg !19132
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19133, metadata !DIExpression()), !dbg !19134
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19135, metadata !DIExpression()), !dbg !19136
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19137, metadata !DIExpression()), !dbg !19138
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !19139, metadata !DIExpression()), !dbg !19140
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19141, metadata !DIExpression()), !dbg !19142
  store i64 0, i64* %n_authors, align 8, !dbg !19143, !tbaa !2579
  br label %for.cond, !dbg !19145

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !19146, !tbaa !2442
  %1 = load i64, i64* %n_authors, align 8, !dbg !19148, !tbaa !2579
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19146, !ctir !567
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19146, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !19149
  br i1 %tobool, label %for.body, label %for.end, !dbg !19149

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !19149

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !19150, !tbaa !2579
  %inc = add i64 %3, 1, !dbg !19150
  store i64 %inc, i64* %n_authors, align 8, !dbg !19150, !tbaa !2579
  br label %for.cond, !dbg !19151, !llvm.loop !19152

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19154, !tbaa !2442
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !19155, !tbaa !2442
  %6 = load i8*, i8** %package.addr, align 8, !dbg !19156, !tbaa !2442
  %7 = load i8*, i8** %version.addr, align 8, !dbg !19157, !tbaa !2442
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !19158, !tbaa !2442
  %9 = load i64, i64* %n_authors, align 8, !dbg !19159, !tbaa !2579
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !19160
  ret void, !dbg !19161
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #0 !dbg !19162 !ctir !2077 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !149
  %authtab = alloca [10 x i8*], align 16, !ctir !2086
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19163, metadata !DIExpression()), !dbg !19164
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19165, metadata !DIExpression()), !dbg !19166
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19167, metadata !DIExpression()), !dbg !19168
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19169, metadata !DIExpression()), !dbg !19170
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !19171, metadata !DIExpression()), !dbg !19172
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !19173, metadata !DIExpression()), !dbg !19174
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !19175, metadata !DIExpression()), !dbg !19176
  store i64 0, i64* %n_authors, align 8, !dbg !19177, !tbaa !2579
  br label %for.cond, !dbg !19179

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !19180, !tbaa !2579
  %cmp = icmp ult i64 %0, 10, !dbg !19182
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19183

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !19184, !tbaa !2442
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !19184
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !19184
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19184
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19184

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !19184
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !19184
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19184
  %4 = bitcast i8* %3 to i8**, !dbg !19184
  %5 = add i32 %gp_offset, 8, !dbg !19184
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !19184
  br label %vaarg.end, !dbg !19184

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !19184
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19184
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !19184
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19184
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19184
  br label %vaarg.end, !dbg !19184

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !19184
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !19184
  %8 = load i64, i64* %n_authors, align 8, !dbg !19185, !tbaa !2579
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !19186, !ctir !2086
  store i8* %7, i8** %arrayidx, align 8, !dbg !19187, !tbaa !2442
  %cmp1 = icmp ne i8* %7, null, !dbg !19188
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !19189
  br i1 %9, label %for.body, label %for.end, !dbg !19190

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !19190

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !19191, !tbaa !2579
  %inc = add i64 %10, 1, !dbg !19191
  store i64 %inc, i64* %n_authors, align 8, !dbg !19191, !tbaa !2579
  br label %for.cond, !dbg !19192, !llvm.loop !19193

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19195, !tbaa !2442
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !19196, !tbaa !2442
  %13 = load i8*, i8** %package.addr, align 8, !dbg !19197, !tbaa !2442
  %14 = load i8*, i8** %version.addr, align 8, !dbg !19198, !tbaa !2442
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !19199
  %15 = load i64, i64* %n_authors, align 8, !dbg !19200, !tbaa !2579
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !19201
  ret void, !dbg !19202
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #0 !dbg !19203 !ctir !2087 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2089
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19206, metadata !DIExpression()), !dbg !19207
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !19208, metadata !DIExpression()), !dbg !19209
  store i8* %package, i8** %package.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !19210, metadata !DIExpression()), !dbg !19211
  store i8* %version, i8** %version.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !19212, metadata !DIExpression()), !dbg !19213
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !19214, metadata !DIExpression()), !dbg !19215
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19216
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19216
  call void @llvm.va_start(i8* %arraydecay1), !dbg !19216
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19217, !tbaa !2442
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !19218, !tbaa !2442
  %2 = load i8*, i8** %package.addr, align 8, !dbg !19219, !tbaa !2442
  %3 = load i8*, i8** %version.addr, align 8, !dbg !19220, !tbaa !2442
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19221
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !19222
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !19223
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19223
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19223
  ret void, !dbg !19224
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #0 !dbg !19225 !ctir !341 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.451, i64 0, i64 0)) #13, !dbg !19226
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.452, i64 0, i64 0)), !dbg !19227
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.453, i64 0, i64 0)) #13, !dbg !19228
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.454, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.455, i64 0, i64 0)), !dbg !19229
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.456, i64 0, i64 0)) #13, !dbg !19230
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !19230, !tbaa !2442
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !19230
  ret void, !dbg !19231
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #0 !dbg !19232 !ctir !2098 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19234, metadata !DIExpression()), !dbg !19235
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19236, metadata !DIExpression()), !dbg !19237
  %0 = load i64, i64* %s.addr, align 8, !dbg !19238, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19238
  %1 = load i64, i64* %n.addr, align 8, !dbg !19238, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19238
  br i1 %cmp, label %if.then, label %if.end, !dbg !19240

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19241
  unreachable, !dbg !19241

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19242, !tbaa !2579
  %3 = load i64, i64* %s.addr, align 8, !dbg !19243, !tbaa !2579
  %mul = mul i64 %2, %3, !dbg !19244
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !19245
  ret i8* %call, !dbg !19246
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #0 !dbg !19247 !ctir !376 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19249, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19251, metadata !DIExpression()), !dbg !19252
  %0 = load i64, i64* %n.addr, align 8, !dbg !19253, !tbaa !2579
  %call = call noalias i8* @malloc(i64 %0) #13, !dbg !19254
  store i8* %call, i8** %p, align 8, !dbg !19252, !tbaa !2442
  %1 = load i8*, i8** %p, align 8, !dbg !19255, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !19255
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19257

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19258, !tbaa !2579
  %cmp = icmp ne i64 %2, 0, !dbg !19259
  br i1 %cmp, label %if.then, label %if.end, !dbg !19260

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19261
  unreachable, !dbg !19261

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !19262, !tbaa !2442
  ret i8* %3, !dbg !19263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #0 !dbg !19264 !ctir !2100 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19265, metadata !DIExpression()), !dbg !19266
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19267, metadata !DIExpression()), !dbg !19268
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19269, metadata !DIExpression()), !dbg !19270
  %0 = load i64, i64* %s.addr, align 8, !dbg !19271, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19271
  %1 = load i64, i64* %n.addr, align 8, !dbg !19271, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19271
  br i1 %cmp, label %if.then, label %if.end, !dbg !19273

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !19274
  unreachable, !dbg !19274

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19275, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !19276, !tbaa !2579
  %4 = load i64, i64* %s.addr, align 8, !dbg !19277, !tbaa !2579
  %mul = mul i64 %3, %4, !dbg !19278
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !19279
  ret i8* %call, !dbg !19280
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #0 !dbg !19281 !ctir !380 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19282, metadata !DIExpression()), !dbg !19283
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19284, metadata !DIExpression()), !dbg !19285
  %0 = load i64, i64* %n.addr, align 8, !dbg !19286, !tbaa !2579
  %tobool = icmp ne i64 %0, 0, !dbg !19286
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19288

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19289, !tbaa !2442
  %tobool1 = icmp ne i8* %1, null, !dbg !19289
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19290

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19291, !tbaa !2442
  call void @free(i8* %2) #13, !dbg !19293
  store i8* null, i8** %retval, align 8, !dbg !19294
  br label %return, !dbg !19294

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !19295, !tbaa !2442
  %4 = load i64, i64* %n.addr, align 8, !dbg !19296, !tbaa !2579
  %call = call i8* @realloc(i8* %3, i64 %4) #13, !dbg !19297
  store i8* %call, i8** %p.addr, align 8, !dbg !19298, !tbaa !2442
  %5 = load i8*, i8** %p.addr, align 8, !dbg !19299, !tbaa !2442
  %tobool2 = icmp ne i8* %5, null, !dbg !19299
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !19301

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19302, !tbaa !2579
  %tobool4 = icmp ne i64 %6, 0, !dbg !19302
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19303

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #14, !dbg !19304
  unreachable, !dbg !19304

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !19305, !tbaa !2442
  store i8* %7, i8** %retval, align 8, !dbg !19306
  br label %return, !dbg !19306

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !19307
  ret i8* %8, !dbg !19307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #0 !dbg !19308 !ctir !2102 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !149
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19309, metadata !DIExpression()), !dbg !19310
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19311, metadata !DIExpression()), !dbg !19312
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19313, metadata !DIExpression()), !dbg !19314
  call void @llvm.dbg.declare(metadata i64* %n, metadata !19315, metadata !DIExpression()), !dbg !19316
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !19317, !tbaa !2442
  %1 = load i64, i64* %0, align 8, !dbg !19318, !tbaa !2579, !ctir !149
  store i64 %1, i64* %n, align 8, !dbg !19316, !tbaa !2579
  %2 = load i8*, i8** %p.addr, align 8, !dbg !19319, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !19319
  br i1 %tobool, label %if.else, label %if.then, !dbg !19321

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !19322, !tbaa !2579
  %tobool1 = icmp ne i64 %3, 0, !dbg !19322
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19325

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !19326, !tbaa !2579
  %div = udiv i64 128, %4, !dbg !19328
  store i64 %div, i64* %n, align 8, !dbg !19329, !tbaa !2579
  %5 = load i64, i64* %n, align 8, !dbg !19330, !tbaa !2579
  %tobool3 = icmp ne i64 %5, 0, !dbg !19331
  %lnot = xor i1 %tobool3, true, !dbg !19331
  %lnot.ext = zext i1 %lnot to i32, !dbg !19331
  %conv = sext i32 %lnot.ext to i64, !dbg !19331
  %6 = load i64, i64* %n, align 8, !dbg !19332, !tbaa !2579
  %add = add i64 %6, %conv, !dbg !19332
  store i64 %add, i64* %n, align 8, !dbg !19332, !tbaa !2579
  br label %if.end, !dbg !19333

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !19334, !tbaa !2579
  %div4 = udiv i64 9223372036854775807, %7, !dbg !19334
  %8 = load i64, i64* %n, align 8, !dbg !19334, !tbaa !2579
  %cmp = icmp ult i64 %div4, %8, !dbg !19334
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !19336

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #14, !dbg !19337
  unreachable, !dbg !19337

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !19338

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !19339, !tbaa !2579
  %div8 = udiv i64 6148914691236517204, %9, !dbg !19342
  %10 = load i64, i64* %n, align 8, !dbg !19343, !tbaa !2579
  %cmp9 = icmp ule i64 %div8, %10, !dbg !19344
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !19345

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #14, !dbg !19346
  unreachable, !dbg !19346

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !19347, !tbaa !2579
  %div13 = udiv i64 %11, 2, !dbg !19348
  %add14 = add i64 %div13, 1, !dbg !19349
  %12 = load i64, i64* %n, align 8, !dbg !19350, !tbaa !2579
  %add15 = add i64 %12, %add14, !dbg !19350
  store i64 %add15, i64* %n, align 8, !dbg !19350, !tbaa !2579
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !19351, !tbaa !2579
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !19352, !tbaa !2442
  store i64 %13, i64* %14, align 8, !dbg !19353, !tbaa !2579, !ctir !149
  %15 = load i8*, i8** %p.addr, align 8, !dbg !19354, !tbaa !2442
  %16 = load i64, i64* %n, align 8, !dbg !19355, !tbaa !2579
  %17 = load i64, i64* %s.addr, align 8, !dbg !19356, !tbaa !2579
  %mul = mul i64 %16, %17, !dbg !19357
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !19358
  ret i8* %call, !dbg !19359
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #0 !dbg !19360 !ctir !2104 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19361, metadata !DIExpression()), !dbg !19362
  %0 = load i64, i64* %n.addr, align 8, !dbg !19363, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19363
  ret i8* %call, !dbg !19364
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #0 !dbg !19365 !ctir !2106 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19366, metadata !DIExpression()), !dbg !19367
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !19368, metadata !DIExpression()), !dbg !19369
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19370, !tbaa !2442
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !19371, !tbaa !2442
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !19372
  ret i8* %call, !dbg !19373
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #0 !dbg !19374 !ctir !376 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19375, metadata !DIExpression()), !dbg !19376
  %0 = load i64, i64* %s.addr, align 8, !dbg !19377, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19378
  %1 = load i64, i64* %s.addr, align 8, !dbg !19379, !tbaa !2579
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !19380
  ret i8* %call, !dbg !19381
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #0 !dbg !19382 !ctir !2098 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !167
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19383, metadata !DIExpression()), !dbg !19384
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19385, metadata !DIExpression()), !dbg !19386
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19387, metadata !DIExpression()), !dbg !19388
  %0 = load i64, i64* %s.addr, align 8, !dbg !19389, !tbaa !2579
  %div = udiv i64 9223372036854775807, %0, !dbg !19389
  %1 = load i64, i64* %n.addr, align 8, !dbg !19389, !tbaa !2579
  %cmp = icmp ult i64 %div, %1, !dbg !19389
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19391

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !19392, !tbaa !2579
  %3 = load i64, i64* %s.addr, align 8, !dbg !19393, !tbaa !2579
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #13, !dbg !19394
  store i8* %call, i8** %p, align 8, !dbg !19395, !tbaa !2442
  %tobool = icmp ne i8* %call, null, !dbg !19395
  br i1 %tobool, label %if.end, label %if.then, !dbg !19396

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #14, !dbg !19397
  unreachable, !dbg !19397

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !19398, !tbaa !2442
  ret i8* %4, !dbg !19399
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #0 !dbg !19400 !ctir !2108 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19401, metadata !DIExpression()), !dbg !19402
  store i64 %s, i64* %s.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19403, metadata !DIExpression()), !dbg !19404
  %0 = load i64, i64* %s.addr, align 8, !dbg !19405, !tbaa !2579
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19406
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19407, !tbaa !2442
  %2 = load i64, i64* %s.addr, align 8, !dbg !19408, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !19409
  ret i8* %call, !dbg !19410
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #0 !dbg !19411 !ctir !572 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !19412, metadata !DIExpression()), !dbg !19413
  %0 = load i8*, i8** %string.addr, align 8, !dbg !19414, !tbaa !2442
  %1 = load i8*, i8** %string.addr, align 8, !dbg !19415, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !19416
  %add = add i64 %call, 1, !dbg !19417
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !19418
  ret i8* %call1, !dbg !19419
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #10 !dbg !19420 !ctir !341 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !19422, !tbaa !2436
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.475, i64 0, i64 0)) #13, !dbg !19423
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.476, i64 0, i64 0), i8* %call), !dbg !19424
  call void @abort() #15, !dbg !19425
  unreachable, !dbg !19425
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xnumtoumax(i8* %n_str, i32 %base, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19426 !ctir !2116 {
entry:
  %n_str.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  %s_err = alloca i32, align 4, !ctir !1322
  %tnum = alloca i64, align 8, !ctir !168
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19428, metadata !DIExpression()), !dbg !19429
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19430, metadata !DIExpression()), !dbg !19431
  store i64 %min, i64* %min.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19432, metadata !DIExpression()), !dbg !19433
  store i64 %max, i64* %max.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19434, metadata !DIExpression()), !dbg !19435
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19436, metadata !DIExpression()), !dbg !19437
  store i8* %err, i8** %err.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19438, metadata !DIExpression()), !dbg !19439
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19440, metadata !DIExpression()), !dbg !19441
  call void @llvm.dbg.declare(metadata i32* %s_err, metadata !19442, metadata !DIExpression()), !dbg !19443
  call void @llvm.dbg.declare(metadata i64* %tnum, metadata !19444, metadata !DIExpression()), !dbg !19445
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19446, !tbaa !2442
  %1 = load i32, i32* %base.addr, align 4, !dbg !19447, !tbaa !2436
  %2 = load i8*, i8** %suffixes.addr, align 8, !dbg !19448, !tbaa !2442
  %call = call i32 @xstrtoumax(i8* %0, i8** null, i32 %1, i64* %tnum, i8* %2), !dbg !19449
  store i32 %call, i32* %s_err, align 4, !dbg !19450, !tbaa !2497
  %3 = load i32, i32* %s_err, align 4, !dbg !19451, !tbaa !2497
  %cmp = icmp eq i32 %3, 0, !dbg !19453
  br i1 %cmp, label %if.then, label %if.else9, !dbg !19454

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %tnum, align 8, !dbg !19455, !tbaa !2579
  %5 = load i64, i64* %min.addr, align 8, !dbg !19458, !tbaa !2579
  %cmp1 = icmp ult i64 %4, %5, !dbg !19459
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !19460

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i64, i64* %max.addr, align 8, !dbg !19461, !tbaa !2579
  %7 = load i64, i64* %tnum, align 8, !dbg !19462, !tbaa !2579
  %cmp2 = icmp ult i64 %6, %7, !dbg !19463
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !19464

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %s_err, align 4, !dbg !19465, !tbaa !2497
  %8 = load i64, i64* %tnum, align 8, !dbg !19467, !tbaa !2579
  %cmp4 = icmp ugt i64 %8, 1073741823, !dbg !19469
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !19470

if.then5:                                         ; preds = %if.then3
  %call6 = call i32* @__errno_location() #17, !dbg !19471
  store i32 75, i32* %call6, align 4, !dbg !19472, !tbaa !2436, !ctir !27
  br label %if.end, !dbg !19471

if.else:                                          ; preds = %if.then3
  %call7 = call i32* @__errno_location() #17, !dbg !19473
  store i32 34, i32* %call7, align 4, !dbg !19474, !tbaa !2436, !ctir !27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end8, !dbg !19475

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  br label %if.end19, !dbg !19476

if.else9:                                         ; preds = %entry
  %9 = load i32, i32* %s_err, align 4, !dbg !19477, !tbaa !2497
  %cmp10 = icmp eq i32 %9, 1, !dbg !19479
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !19480

if.then11:                                        ; preds = %if.else9
  %call12 = call i32* @__errno_location() #17, !dbg !19481
  store i32 75, i32* %call12, align 4, !dbg !19482, !tbaa !2436, !ctir !27
  br label %if.end18, !dbg !19481

if.else13:                                        ; preds = %if.else9
  %10 = load i32, i32* %s_err, align 4, !dbg !19483, !tbaa !2497
  %cmp14 = icmp eq i32 %10, 3, !dbg !19485
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !19486

if.then15:                                        ; preds = %if.else13
  %call16 = call i32* @__errno_location() #17, !dbg !19487
  store i32 0, i32* %call16, align 4, !dbg !19488, !tbaa !2436, !ctir !27
  br label %if.end17, !dbg !19487

if.end17:                                         ; preds = %if.then15, %if.else13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then11
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end8
  %11 = load i32, i32* %s_err, align 4, !dbg !19489, !tbaa !2497
  %cmp20 = icmp ne i32 %11, 0, !dbg !19491
  br i1 %cmp20, label %if.then21, label %if.end30, !dbg !19492

if.then21:                                        ; preds = %if.end19
  %12 = load i32, i32* %err_exit.addr, align 4, !dbg !19493, !tbaa !2436
  %tobool = icmp ne i32 %12, 0, !dbg !19493
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19493

cond.true:                                        ; preds = %if.then21
  %13 = load i32, i32* %err_exit.addr, align 4, !dbg !19495, !tbaa !2436
  br label %cond.end, !dbg !19493

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !19493

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 1, %cond.false ], !dbg !19493
  %call22 = call i32* @__errno_location() #17, !dbg !19496
  %14 = load i32, i32* %call22, align 4, !dbg !19496, !tbaa !2436, !ctir !27
  %cmp23 = icmp eq i32 %14, 22, !dbg !19497
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !19496

cond.true24:                                      ; preds = %cond.end
  br label %cond.end27, !dbg !19496

cond.false25:                                     ; preds = %cond.end
  %call26 = call i32* @__errno_location() #17, !dbg !19498
  %15 = load i32, i32* %call26, align 4, !dbg !19498, !tbaa !2436, !ctir !27
  br label %cond.end27, !dbg !19496

cond.end27:                                       ; preds = %cond.false25, %cond.true24
  %cond28 = phi i32 [ 0, %cond.true24 ], [ %15, %cond.false25 ], !dbg !19496
  %16 = load i8*, i8** %err.addr, align 8, !dbg !19499, !tbaa !2442
  %17 = load i8*, i8** %n_str.addr, align 8, !dbg !19500, !tbaa !2442
  %call29 = call i8* @quote(i8* %17), !dbg !19501
  call void (i32, i32, i8*, ...) @error(i32 %cond, i32 %cond28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.479, i64 0, i64 0), i8* %16, i8* %call29), !dbg !19502
  br label %if.end30, !dbg !19503

if.end30:                                         ; preds = %cond.end27, %if.end19
  %18 = load i64, i64* %tnum, align 8, !dbg !19504, !tbaa !2579
  ret i64 %18, !dbg !19505
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xdectoumax(i8* %n_str, i64 %min, i64 %max, i8* %suffixes, i8* %err, i32 %err_exit) #0 !dbg !19506 !ctir !2118 {
entry:
  %n_str.addr = alloca i8*, align 8
  %min.addr = alloca i64, align 8
  %max.addr = alloca i64, align 8
  %suffixes.addr = alloca i8*, align 8
  %err.addr = alloca i8*, align 8
  %err_exit.addr = alloca i32, align 4
  store i8* %n_str, i8** %n_str.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %n_str.addr, metadata !19507, metadata !DIExpression()), !dbg !19508
  store i64 %min, i64* %min.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %min.addr, metadata !19509, metadata !DIExpression()), !dbg !19510
  store i64 %max, i64* %max.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %max.addr, metadata !19511, metadata !DIExpression()), !dbg !19512
  store i8* %suffixes, i8** %suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %suffixes.addr, metadata !19513, metadata !DIExpression()), !dbg !19514
  store i8* %err, i8** %err.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %err.addr, metadata !19515, metadata !DIExpression()), !dbg !19516
  store i32 %err_exit, i32* %err_exit.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %err_exit.addr, metadata !19517, metadata !DIExpression()), !dbg !19518
  %0 = load i8*, i8** %n_str.addr, align 8, !dbg !19519, !tbaa !2442
  %1 = load i64, i64* %min.addr, align 8, !dbg !19520, !tbaa !2579
  %2 = load i64, i64* %max.addr, align 8, !dbg !19521, !tbaa !2579
  %3 = load i8*, i8** %suffixes.addr, align 8, !dbg !19522, !tbaa !2442
  %4 = load i8*, i8** %err.addr, align 8, !dbg !19523, !tbaa !2442
  %5 = load i32, i32* %err_exit.addr, align 4, !dbg !19524, !tbaa !2436
  %call = call i64 @xnumtoumax(i8* %0, i32 10, i64 %1, i64 %2, i8* %3, i8* %4, i32 %5), !dbg !19525
  ret i64 %call, !dbg !19526
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgetcwd() #0 !dbg !19527 !ctir !2123 {
entry:
  %cwd = alloca i8*, align 8, !ctir !143
  call void @llvm.dbg.declare(metadata i8** %cwd, metadata !19529, metadata !DIExpression()), !dbg !19530
  %call = call i8* @getcwd(i8* null, i64 0) #13, !dbg !19531
  store i8* %call, i8** %cwd, align 8, !dbg !19530, !tbaa !2442
  %0 = load i8*, i8** %cwd, align 8, !dbg !19532, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !19532
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !19534

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #17, !dbg !19535
  %1 = load i32, i32* %call1, align 4, !dbg !19535, !tbaa !2436, !ctir !27
  %cmp = icmp eq i32 %1, 12, !dbg !19536
  br i1 %cmp, label %if.then, label %if.end, !dbg !19537

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #14, !dbg !19538
  unreachable, !dbg !19538

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %cwd, align 8, !dbg !19539, !tbaa !2442
  ret i8* %2, !dbg !19540
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xgethostname() #0 !dbg !19541 !ctir !2123 {
entry:
  %retval = alloca i8*, align 8
  %hostname = alloca i8*, align 8, !ctir !143
  %size = alloca i64, align 8, !ctir !149
  %size_1 = alloca i64, align 8, !ctir !149
  %saved_errno = alloca i32, align 4, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !19543, metadata !DIExpression()), !dbg !19544
  store i8* null, i8** %hostname, align 8, !dbg !19544, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %size, metadata !19545, metadata !DIExpression()), !dbg !19546
  store i64 34, i64* %size, align 8, !dbg !19546, !tbaa !2579
  br label %while.body, !dbg !19547

while.body:                                       ; preds = %entry, %if.end21
  call void @llvm.dbg.declare(metadata i64* %size_1, metadata !19548, metadata !DIExpression()), !dbg !19550
  %0 = load i8*, i8** %hostname, align 8, !dbg !19551, !tbaa !2442
  %call = call i8* @x2realloc(i8* %0, i64* %size), !dbg !19552
  store i8* %call, i8** %hostname, align 8, !dbg !19553, !tbaa !2442
  %1 = load i64, i64* %size, align 8, !dbg !19554, !tbaa !2579
  %sub = sub i64 %1, 1, !dbg !19555
  store i64 %sub, i64* %size_1, align 8, !dbg !19556, !tbaa !2579
  %2 = load i8*, i8** %hostname, align 8, !dbg !19557, !tbaa !2442
  %3 = load i64, i64* %size_1, align 8, !dbg !19558, !tbaa !2579
  %sub1 = sub i64 %3, 1, !dbg !19559
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub1, !dbg !19557, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !19560, !tbaa !2497
  %call2 = call i32* @__errno_location() #17, !dbg !19561
  store i32 0, i32* %call2, align 4, !dbg !19562, !tbaa !2436, !ctir !27
  %4 = load i8*, i8** %hostname, align 8, !dbg !19563, !tbaa !2442
  %5 = load i64, i64* %size_1, align 8, !dbg !19565, !tbaa !2579
  %call3 = call i32 @gethostname(i8* %4, i64 %5) #13, !dbg !19566
  %cmp = icmp eq i32 %call3, 0, !dbg !19567
  br i1 %cmp, label %if.then, label %if.else, !dbg !19568

if.then:                                          ; preds = %while.body
  %6 = load i8*, i8** %hostname, align 8, !dbg !19569, !tbaa !2442
  %7 = load i64, i64* %size_1, align 8, !dbg !19572, !tbaa !2579
  %sub4 = sub i64 %7, 1, !dbg !19573
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %sub4, !dbg !19569, !ctir !143
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !19569, !tbaa !2497
  %tobool = icmp ne i8 %8, 0, !dbg !19569
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19574

if.then6:                                         ; preds = %if.then
  br label %while.end, !dbg !19575

if.end:                                           ; preds = %if.then
  br label %if.end21, !dbg !19576

if.else:                                          ; preds = %while.body
  %call7 = call i32* @__errno_location() #17, !dbg !19577
  %9 = load i32, i32* %call7, align 4, !dbg !19577, !tbaa !2436, !ctir !27
  %cmp8 = icmp ne i32 %9, 0, !dbg !19579
  br i1 %cmp8, label %land.lhs.true, label %if.end20, !dbg !19580

land.lhs.true:                                    ; preds = %if.else
  %call9 = call i32* @__errno_location() #17, !dbg !19581
  %10 = load i32, i32* %call9, align 4, !dbg !19581, !tbaa !2436, !ctir !27
  %cmp10 = icmp ne i32 %10, 36, !dbg !19582
  br i1 %cmp10, label %land.lhs.true11, label %if.end20, !dbg !19583

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call i32* @__errno_location() #17, !dbg !19584
  %11 = load i32, i32* %call12, align 4, !dbg !19584, !tbaa !2436, !ctir !27
  %cmp13 = icmp ne i32 %11, 22, !dbg !19585
  br i1 %cmp13, label %land.lhs.true14, label %if.end20, !dbg !19586

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %call15 = call i32* @__errno_location() #17, !dbg !19587
  %12 = load i32, i32* %call15, align 4, !dbg !19587, !tbaa !2436, !ctir !27
  %cmp16 = icmp ne i32 %12, 12, !dbg !19588
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !19589

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19590, metadata !DIExpression()), !dbg !19592
  %call18 = call i32* @__errno_location() #17, !dbg !19593
  %13 = load i32, i32* %call18, align 4, !dbg !19593, !tbaa !2436, !ctir !27
  store i32 %13, i32* %saved_errno, align 4, !dbg !19592, !tbaa !2436
  %14 = load i8*, i8** %hostname, align 8, !dbg !19594, !tbaa !2442
  call void @free(i8* %14) #13, !dbg !19595
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19596, !tbaa !2436
  %call19 = call i32* @__errno_location() #17, !dbg !19597
  store i32 %15, i32* %call19, align 4, !dbg !19598, !tbaa !2436, !ctir !27
  store i8* null, i8** %retval, align 8, !dbg !19599
  br label %return, !dbg !19599

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  br label %while.body, !dbg !19547, !llvm.loop !19600

while.end:                                        ; preds = %if.then6
  %16 = load i8*, i8** %hostname, align 8, !dbg !19602, !tbaa !2442
  store i8* %16, i8** %retval, align 8, !dbg !19603
  br label %return, !dbg !19603

return:                                           ; preds = %while.end, %if.then17
  %17 = load i8*, i8** %retval, align 8, !dbg !19604
  ret i8* %17, !dbg !19604
}

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19605 !ctir !2131 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !151
  %err = alloca i32, align 4, !ctir !1322
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !591
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1322
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19607, metadata !DIExpression()), !dbg !19608
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19609, metadata !DIExpression()), !dbg !19610
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19611, metadata !DIExpression()), !dbg !19612
  store i64* %val, i64** %val.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19613, metadata !DIExpression()), !dbg !19614
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19615, metadata !DIExpression()), !dbg !19616
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19617, metadata !DIExpression()), !dbg !19618
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19619, metadata !DIExpression()), !dbg !19620
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19621, metadata !DIExpression()), !dbg !19622
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19623, metadata !DIExpression()), !dbg !19624
  store i32 0, i32* %err, align 4, !dbg !19624, !tbaa !2497
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19625, !tbaa !2436
  %cmp = icmp sle i32 0, %0, !dbg !19625
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19625

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19625, !tbaa !2436
  %cmp1 = icmp sle i32 %1, 36, !dbg !19625
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19628

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !19628

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.486, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.487, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #15, !dbg !19625
  unreachable, !dbg !19625

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !19629, !tbaa !2442
  %tobool = icmp ne i8** %2, null, !dbg !19629
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19629

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19630, !tbaa !2442
  br label %cond.end, !dbg !19629

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !19629
  store i8** %cond, i8*** %p, align 8, !dbg !19631, !tbaa !2442
  %call = call i32* @__errno_location() #17, !dbg !19632
  store i32 0, i32* %call, align 4, !dbg !19633, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19634, metadata !DIExpression()), !dbg !19637
  %4 = load i8*, i8** %s.addr, align 8, !dbg !19638, !tbaa !2442
  store i8* %4, i8** %q, align 8, !dbg !19637, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19639, metadata !DIExpression()), !dbg !19640
  %5 = load i8*, i8** %q, align 8, !dbg !19641, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !19642, !tbaa !2497, !ctir !147
  store i8 %6, i8* %ch, align 1, !dbg !19640, !tbaa !2497
  br label %while.cond, !dbg !19643

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !19644
  %7 = load i16*, i16** %call2, align 8, !dbg !19644, !tbaa !2442, !ctir !587
  %8 = load i8, i8* %ch, align 1, !dbg !19644, !tbaa !2497
  %conv = zext i8 %8 to i32, !dbg !19644
  %idxprom = sext i32 %conv to i64, !dbg !19644
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !19644, !ctir !587
  %9 = load i16, i16* %arrayidx, align 2, !dbg !19644, !tbaa !5835
  %conv3 = zext i16 %9 to i32, !dbg !19644
  %and = and i32 %conv3, 8192, !dbg !19644
  %tobool4 = icmp ne i32 %and, 0, !dbg !19643
  br i1 %tobool4, label %while.body, label %while.end, !dbg !19643

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !19645, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19645
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19645, !tbaa !2442
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !19646, !tbaa !2497, !ctir !147
  store i8 %11, i8* %ch, align 1, !dbg !19647, !tbaa !2497
  br label %while.cond, !dbg !19643, !llvm.loop !19648

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !19650, !tbaa !2497
  %conv5 = zext i8 %12 to i32, !dbg !19650
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !19652
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19653

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19654
  br label %return, !dbg !19654

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !19655, !tbaa !2442
  %14 = load i8**, i8*** %p, align 8, !dbg !19656, !tbaa !2442
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !19657, !tbaa !2436
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #13, !dbg !19658
  store i64 %call10, i64* %tmp, align 8, !dbg !19659, !tbaa !2579
  %16 = load i8**, i8*** %p, align 8, !dbg !19660, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !19662, !tbaa !2442, !ctir !143
  %18 = load i8*, i8** %s.addr, align 8, !dbg !19663, !tbaa !2442
  %cmp11 = icmp eq i8* %17, %18, !dbg !19664
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !19665

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19666, !tbaa !2442
  %tobool14 = icmp ne i8* %19, null, !dbg !19666
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !19669

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !19670, !tbaa !2442
  %21 = load i8*, i8** %20, align 8, !dbg !19671, !tbaa !2442, !ctir !143
  %22 = load i8, i8* %21, align 1, !dbg !19672, !tbaa !2497, !ctir !144
  %conv16 = sext i8 %22 to i32, !dbg !19672
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !19672
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !19673

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19674, !tbaa !2442
  %24 = load i8**, i8*** %p, align 8, !dbg !19675, !tbaa !2442
  %25 = load i8*, i8** %24, align 8, !dbg !19676, !tbaa !2442, !ctir !143
  %26 = load i8, i8* %25, align 1, !dbg !19677, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %26 to i32, !dbg !19677
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #16, !dbg !19678
  %tobool21 = icmp ne i8* %call20, null, !dbg !19678
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !19679

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !19680, !tbaa !2579
  br label %if.end24, !dbg !19681

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !19682
  br label %return, !dbg !19682

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !19683

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #17, !dbg !19684
  %27 = load i32, i32* %call26, align 4, !dbg !19684, !tbaa !2436, !ctir !27
  %cmp27 = icmp ne i32 %27, 0, !dbg !19686
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19687

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !19688
  %28 = load i32, i32* %call30, align 4, !dbg !19688, !tbaa !2436, !ctir !27
  %cmp31 = icmp ne i32 %28, 34, !dbg !19691
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19692

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19693
  br label %return, !dbg !19693

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19694, !tbaa !2497
  br label %if.end35, !dbg !19695

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19696, !tbaa !2442
  %tobool37 = icmp ne i8* %29, null, !dbg !19696
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19698

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !19699, !tbaa !2579
  %31 = load i64*, i64** %val.addr, align 8, !dbg !19701, !tbaa !2442
  store i64 %30, i64* %31, align 8, !dbg !19702, !tbaa !2579, !ctir !151
  %32 = load i32, i32* %err, align 4, !dbg !19703, !tbaa !2497
  store i32 %32, i32* %retval, align 4, !dbg !19704
  br label %return, !dbg !19704

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !19705, !tbaa !2442
  %34 = load i8*, i8** %33, align 8, !dbg !19707, !tbaa !2442, !ctir !143
  %35 = load i8, i8* %34, align 1, !dbg !19708, !tbaa !2497, !ctir !144
  %conv40 = sext i8 %35 to i32, !dbg !19708
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19709
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19710

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19711, metadata !DIExpression()), !dbg !19713
  store i32 1024, i32* %base, align 4, !dbg !19713, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19714, metadata !DIExpression()), !dbg !19715
  store i32 1, i32* %suffixes, align 4, !dbg !19715, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19716, metadata !DIExpression()), !dbg !19717
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19718, !tbaa !2442
  %37 = load i8**, i8*** %p, align 8, !dbg !19720, !tbaa !2442
  %38 = load i8*, i8** %37, align 8, !dbg !19721, !tbaa !2442, !ctir !143
  %39 = load i8, i8* %38, align 1, !dbg !19722, !tbaa !2497, !ctir !144
  %conv44 = sext i8 %39 to i32, !dbg !19722
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #16, !dbg !19723
  %tobool46 = icmp ne i8* %call45, null, !dbg !19723
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19724

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !19725, !tbaa !2579
  %41 = load i64*, i64** %val.addr, align 8, !dbg !19727, !tbaa !2442
  store i64 %40, i64* %41, align 8, !dbg !19728, !tbaa !2579, !ctir !151
  %42 = load i32, i32* %err, align 4, !dbg !19729, !tbaa !2497
  %or = or i32 %42, 2, !dbg !19730
  store i32 %or, i32* %retval, align 4, !dbg !19731
  br label %return, !dbg !19731

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !19732, !tbaa !2442
  %44 = load i8*, i8** %43, align 8, !dbg !19733, !tbaa !2442, !ctir !143
  %45 = load i8, i8* %44, align 1, !dbg !19734, !tbaa !2497, !ctir !144
  %conv49 = sext i8 %45 to i32, !dbg !19734
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19735

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19736, !tbaa !2442
  %call50 = call i8* @strchr(i8* %46, i32 48) #16, !dbg !19739
  %tobool51 = icmp ne i8* %call50, null, !dbg !19739
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19740

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !19741, !tbaa !2442
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !19741, !ctir !142
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !19741, !tbaa !2442
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !19741, !ctir !143
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !19741, !tbaa !2497
  %conv55 = sext i8 %49 to i32, !dbg !19741
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19742

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !19743, !tbaa !2442
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !19743, !ctir !142
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !19743, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !19743, !ctir !143
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !19743, !tbaa !2497
  %conv59 = sext i8 %52 to i32, !dbg !19743
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19746
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19747

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !19748, !tbaa !2436
  %add = add nsw i32 %53, 2, !dbg !19748
  store i32 %add, i32* %suffixes, align 4, !dbg !19748, !tbaa !2436
  br label %if.end63, !dbg !19749

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19750

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19751, !tbaa !2436
  %54 = load i32, i32* %suffixes, align 4, !dbg !19752, !tbaa !2436
  %inc = add nsw i32 %54, 1, !dbg !19752
  store i32 %inc, i32* %suffixes, align 4, !dbg !19752, !tbaa !2436
  br label %sw.epilog, !dbg !19753

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19754

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19755

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !19756, !tbaa !2442
  %56 = load i8*, i8** %55, align 8, !dbg !19757, !tbaa !2442, !ctir !143
  %57 = load i8, i8* %56, align 1, !dbg !19758, !tbaa !2497, !ctir !144
  %conv67 = sext i8 %57 to i32, !dbg !19758
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19759

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19760
  store i32 %call69, i32* %overflow, align 4, !dbg !19762, !tbaa !2497
  br label %sw.epilog92, !dbg !19763

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19764
  store i32 %call71, i32* %overflow, align 4, !dbg !19765, !tbaa !2497
  br label %sw.epilog92, !dbg !19766

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19767, !tbaa !2497
  br label %sw.epilog92, !dbg !19768

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !19769, !tbaa !2436
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !19770
  store i32 %call74, i32* %overflow, align 4, !dbg !19771, !tbaa !2497
  br label %sw.epilog92, !dbg !19772

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19773, !tbaa !2436
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !19774
  store i32 %call76, i32* %overflow, align 4, !dbg !19775, !tbaa !2497
  br label %sw.epilog92, !dbg !19776

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19777, !tbaa !2436
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !19778
  store i32 %call78, i32* %overflow, align 4, !dbg !19779, !tbaa !2497
  br label %sw.epilog92, !dbg !19780

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19781, !tbaa !2436
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !19782
  store i32 %call80, i32* %overflow, align 4, !dbg !19783, !tbaa !2497
  br label %sw.epilog92, !dbg !19784

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19785, !tbaa !2436
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !19786
  store i32 %call82, i32* %overflow, align 4, !dbg !19787, !tbaa !2497
  br label %sw.epilog92, !dbg !19788

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19789, !tbaa !2436
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !19790
  store i32 %call84, i32* %overflow, align 4, !dbg !19791, !tbaa !2497
  br label %sw.epilog92, !dbg !19792

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19793
  store i32 %call86, i32* %overflow, align 4, !dbg !19794, !tbaa !2497
  br label %sw.epilog92, !dbg !19795

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19796, !tbaa !2436
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !19797
  store i32 %call88, i32* %overflow, align 4, !dbg !19798, !tbaa !2497
  br label %sw.epilog92, !dbg !19799

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19800, !tbaa !2436
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !19801
  store i32 %call90, i32* %overflow, align 4, !dbg !19802, !tbaa !2497
  br label %sw.epilog92, !dbg !19803

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !19804, !tbaa !2579
  %67 = load i64*, i64** %val.addr, align 8, !dbg !19805, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !19806, !tbaa !2579, !ctir !151
  %68 = load i32, i32* %err, align 4, !dbg !19807, !tbaa !2497
  %or91 = or i32 %68, 2, !dbg !19808
  store i32 %or91, i32* %retval, align 4, !dbg !19809
  br label %return, !dbg !19809

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !19810, !tbaa !2497
  %70 = load i32, i32* %err, align 4, !dbg !19811, !tbaa !2497
  %or93 = or i32 %70, %69, !dbg !19811
  store i32 %or93, i32* %err, align 4, !dbg !19811, !tbaa !2497
  %71 = load i32, i32* %suffixes, align 4, !dbg !19812, !tbaa !2436
  %72 = load i8**, i8*** %p, align 8, !dbg !19813, !tbaa !2442
  %73 = load i8*, i8** %72, align 8, !dbg !19814, !tbaa !2442, !ctir !143
  %idx.ext = sext i32 %71 to i64, !dbg !19814
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !19814
  store i8* %add.ptr, i8** %72, align 8, !dbg !19814, !tbaa !2442, !ctir !143
  %74 = load i8**, i8*** %p, align 8, !dbg !19815, !tbaa !2442
  %75 = load i8*, i8** %74, align 8, !dbg !19817, !tbaa !2442, !ctir !143
  %76 = load i8, i8* %75, align 1, !dbg !19818, !tbaa !2497, !ctir !144
  %tobool94 = icmp ne i8 %76, 0, !dbg !19818
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19819

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !19820, !tbaa !2497
  %or96 = or i32 %77, 2, !dbg !19820
  store i32 %or96, i32* %err, align 4, !dbg !19820, !tbaa !2497
  br label %if.end97, !dbg !19821

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19822

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !19823, !tbaa !2579
  %79 = load i64*, i64** %val.addr, align 8, !dbg !19824, !tbaa !2442
  store i64 %78, i64* %79, align 8, !dbg !19825, !tbaa !2579, !ctir !151
  %80 = load i32, i32* %err, align 4, !dbg !19826, !tbaa !2497
  store i32 %80, i32* %retval, align 4, !dbg !19827
  br label %return, !dbg !19827

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !19828
  ret i32 %81, !dbg !19828
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #0 !dbg !19829 !ctir !2134 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19830, metadata !DIExpression()), !dbg !19831
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19832, metadata !DIExpression()), !dbg !19833
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19834, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !19834
  %div = udiv i64 -1, %conv, !dbg !19836
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19837, !tbaa !2442
  %2 = load i64, i64* %1, align 8, !dbg !19838, !tbaa !2579, !ctir !151
  %cmp = icmp ult i64 %div, %2, !dbg !19839
  br i1 %cmp, label %if.then, label %if.end, !dbg !19840

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19841, !tbaa !2442
  store i64 -1, i64* %3, align 8, !dbg !19843, !tbaa !2579, !ctir !151
  store i32 1, i32* %retval, align 4, !dbg !19844
  br label %return, !dbg !19844

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19845, !tbaa !2436
  %conv2 = sext i32 %4 to i64, !dbg !19845
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19846, !tbaa !2442
  %6 = load i64, i64* %5, align 8, !dbg !19847, !tbaa !2579, !ctir !151
  %mul = mul i64 %6, %conv2, !dbg !19847
  store i64 %mul, i64* %5, align 8, !dbg !19847, !tbaa !2579, !ctir !151
  store i32 0, i32* %retval, align 4, !dbg !19848
  br label %return, !dbg !19848

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19849
  ret i32 %7, !dbg !19849
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #0 !dbg !19850 !ctir !2136 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1322
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19851, metadata !DIExpression()), !dbg !19852
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19853, metadata !DIExpression()), !dbg !19854
  store i32 %power, i32* %power.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19855, metadata !DIExpression()), !dbg !19856
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19857, metadata !DIExpression()), !dbg !19858
  store i32 0, i32* %err, align 4, !dbg !19858, !tbaa !2497
  br label %while.cond, !dbg !19859

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19860, !tbaa !2436
  %dec = add nsw i32 %0, -1, !dbg !19860
  store i32 %dec, i32* %power.addr, align 4, !dbg !19860, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !19859
  br i1 %tobool, label %while.body, label %while.end, !dbg !19859

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19861, !tbaa !2442
  %2 = load i32, i32* %base.addr, align 4, !dbg !19862, !tbaa !2436
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19863
  %3 = load i32, i32* %err, align 4, !dbg !19864, !tbaa !2497
  %or = or i32 %3, %call, !dbg !19864
  store i32 %or, i32* %err, align 4, !dbg !19864, !tbaa !2497
  br label %while.cond, !dbg !19859, !llvm.loop !19865

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19867, !tbaa !2497
  ret i32 %4, !dbg !19868
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) #10 !dbg !19869 !ctir !2141 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %err, i32* %err.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19871, metadata !DIExpression()), !dbg !19872
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19873, metadata !DIExpression()), !dbg !19874
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19875, metadata !DIExpression()), !dbg !19876
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19877, metadata !DIExpression()), !dbg !19878
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19879, metadata !DIExpression()), !dbg !19880
  %0 = load i32, i32* %err.addr, align 4, !dbg !19881, !tbaa !2497
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19882, !tbaa !2436
  %2 = load i8, i8* %c.addr, align 1, !dbg !19883, !tbaa !2497
  %3 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19884, !tbaa !2442
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !19885, !tbaa !2442
  %5 = load volatile i32, i32* @exit_failure, align 4, !dbg !19886, !tbaa !2436
  call void @xstrtol_error(i32 %0, i32 %1, i8 signext %2, %struct.option* %3, i8* %4, i32 %5), !dbg !19887
  call void @abort() #15, !dbg !19888
  unreachable, !dbg !19888
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) #0 !dbg !19889 !ctir !2151 {
entry:
  %err.addr = alloca i32, align 4
  %opt_idx.addr = alloca i32, align 4
  %c.addr = alloca i8, align 1
  %long_options.addr = alloca %struct.option*, align 8
  %arg.addr = alloca i8*, align 8
  %exit_status.addr = alloca i32, align 4
  %hyphens = alloca i8*, align 8, !ctir !146
  %msgid = alloca i8*, align 8, !ctir !146
  %option = alloca i8*, align 8, !ctir !146
  %option_buffer = alloca [2 x i8], align 1, !ctir !666
  store i32 %err, i32* %err.addr, align 4, !tbaa !2497
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !19890, metadata !DIExpression()), !dbg !19891
  store i32 %opt_idx, i32* %opt_idx.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %opt_idx.addr, metadata !19892, metadata !DIExpression()), !dbg !19893
  store i8 %c, i8* %c.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !19894, metadata !DIExpression()), !dbg !19895
  store %struct.option* %long_options, %struct.option** %long_options.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.option** %long_options.addr, metadata !19896, metadata !DIExpression()), !dbg !19897
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19898, metadata !DIExpression()), !dbg !19899
  store i32 %exit_status, i32* %exit_status.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %exit_status.addr, metadata !19900, metadata !DIExpression()), !dbg !19901
  call void @llvm.dbg.declare(metadata i8** %hyphens, metadata !19902, metadata !DIExpression()), !dbg !19903
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.490, i64 0, i64 0), i8** %hyphens, align 8, !dbg !19903, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %msgid, metadata !19904, metadata !DIExpression()), !dbg !19905
  call void @llvm.dbg.declare(metadata i8** %option, metadata !19906, metadata !DIExpression()), !dbg !19907
  call void @llvm.dbg.declare(metadata [2 x i8]* %option_buffer, metadata !19908, metadata !DIExpression()), !dbg !19909
  %0 = load i32, i32* %err.addr, align 4, !dbg !19910, !tbaa !2497
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !19911

sw.default:                                       ; preds = %entry
  call void @abort() #15, !dbg !19912
  unreachable, !dbg !19912

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.491, i64 0, i64 0), i8** %msgid, align 8, !dbg !19914, !tbaa !2442
  br label %sw.epilog, !dbg !19915

sw.bb1:                                           ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.492, i64 0, i64 0), i8** %msgid, align 8, !dbg !19916, !tbaa !2442
  br label %sw.epilog, !dbg !19917

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.493, i64 0, i64 0), i8** %msgid, align 8, !dbg !19918, !tbaa !2442
  br label %sw.epilog, !dbg !19919

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %opt_idx.addr, align 4, !dbg !19920, !tbaa !2436
  %cmp = icmp slt i32 %1, 0, !dbg !19922
  br i1 %cmp, label %if.then, label %if.else, !dbg !19923

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %opt_idx.addr, align 4, !dbg !19924, !tbaa !2436
  %3 = load i8*, i8** %hyphens, align 8, !dbg !19926, !tbaa !2442
  %idx.ext = sext i32 %2 to i64, !dbg !19926
  %idx.neg = sub i64 0, %idx.ext, !dbg !19926
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !19926
  store i8* %add.ptr, i8** %hyphens, align 8, !dbg !19926, !tbaa !2442
  %4 = load i8, i8* %c.addr, align 1, !dbg !19927, !tbaa !2497
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19928, !ctir !666
  store i8 %4, i8* %arrayidx, align 1, !dbg !19929, !tbaa !2497
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 1, !dbg !19930, !ctir !666
  store i8 0, i8* %arrayidx3, align 1, !dbg !19931, !tbaa !2497
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %option_buffer, i64 0, i64 0, !dbg !19932
  store i8* %arraydecay, i8** %option, align 8, !dbg !19933, !tbaa !2442
  br label %if.end, !dbg !19934

if.else:                                          ; preds = %sw.epilog
  %5 = load %struct.option*, %struct.option** %long_options.addr, align 8, !dbg !19935, !tbaa !2442
  %6 = load i32, i32* %opt_idx.addr, align 4, !dbg !19936, !tbaa !2436
  %idxprom = sext i32 %6 to i64, !dbg !19935
  %arrayidx4 = getelementptr inbounds %struct.option, %struct.option* %5, i64 %idxprom, !dbg !19935, !ctir !2143
  %name = getelementptr inbounds %struct.option, %struct.option* %arrayidx4, i32 0, i32 0, !dbg !19937, !ctir !2144
  %7 = load i8*, i8** %name, align 8, !dbg !19937, !tbaa !19938, !ctir !146
  store i8* %7, i8** %option, align 8, !dbg !19940, !tbaa !2442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %exit_status.addr, align 4, !dbg !19941, !tbaa !2436
  %9 = load i8*, i8** %msgid, align 8, !dbg !19942, !tbaa !2442
  %call = call i8* @gettext(i8* %9) #13, !dbg !19943
  %10 = load i8*, i8** %hyphens, align 8, !dbg !19944, !tbaa !2442
  %11 = load i8*, i8** %option, align 8, !dbg !19945, !tbaa !2442
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !19946, !tbaa !2442
  call void (i32, i32, i8*, ...) @error(i32 %8, i32 0, i8* %call, i8* %10, i8* %11, i8* %12), !dbg !19947
  ret void, !dbg !19948
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #0 !dbg !19949 !ctir !2156 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !143
  %p = alloca i8**, align 8, !ctir !142
  %tmp = alloca i64, align 8, !ctir !168
  %err = alloca i32, align 4, !ctir !1322
  %q = alloca i8*, align 8, !ctir !146
  %ch = alloca i8, align 1, !ctir !591
  %base = alloca i32, align 4, !ctir !27
  %suffixes = alloca i32, align 4, !ctir !27
  %overflow = alloca i32, align 4, !ctir !1322
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19950, metadata !DIExpression()), !dbg !19951
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19952, metadata !DIExpression()), !dbg !19953
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19954, metadata !DIExpression()), !dbg !19955
  store i64* %val, i64** %val.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19956, metadata !DIExpression()), !dbg !19957
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19958, metadata !DIExpression()), !dbg !19959
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19960, metadata !DIExpression()), !dbg !19961
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19962, metadata !DIExpression()), !dbg !19963
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19964, metadata !DIExpression()), !dbg !19965
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19966, metadata !DIExpression()), !dbg !19967
  store i32 0, i32* %err, align 4, !dbg !19967, !tbaa !2497
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19968, !tbaa !2436
  %cmp = icmp sle i32 0, %0, !dbg !19968
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19968

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19968, !tbaa !2436
  %cmp1 = icmp sle i32 %1, 36, !dbg !19968
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19971

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !19971

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.496, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.497, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__.xstrtoumax, i64 0, i64 0)) #15, !dbg !19968
  unreachable, !dbg !19968

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !19972, !tbaa !2442
  %tobool = icmp ne i8** %2, null, !dbg !19972
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19972

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19973, !tbaa !2442
  br label %cond.end, !dbg !19972

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !19972
  store i8** %cond, i8*** %p, align 8, !dbg !19974, !tbaa !2442
  %call = call i32* @__errno_location() #17, !dbg !19975
  store i32 0, i32* %call, align 4, !dbg !19976, !tbaa !2436, !ctir !27
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19977, metadata !DIExpression()), !dbg !19980
  %4 = load i8*, i8** %s.addr, align 8, !dbg !19981, !tbaa !2442
  store i8* %4, i8** %q, align 8, !dbg !19980, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19982, metadata !DIExpression()), !dbg !19983
  %5 = load i8*, i8** %q, align 8, !dbg !19984, !tbaa !2442
  %6 = load i8, i8* %5, align 1, !dbg !19985, !tbaa !2497, !ctir !147
  store i8 %6, i8* %ch, align 1, !dbg !19983, !tbaa !2497
  br label %while.cond, !dbg !19986

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #17, !dbg !19987
  %7 = load i16*, i16** %call2, align 8, !dbg !19987, !tbaa !2442, !ctir !587
  %8 = load i8, i8* %ch, align 1, !dbg !19987, !tbaa !2497
  %conv = zext i8 %8 to i32, !dbg !19987
  %idxprom = sext i32 %conv to i64, !dbg !19987
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !19987, !ctir !587
  %9 = load i16, i16* %arrayidx, align 2, !dbg !19987, !tbaa !5835
  %conv3 = zext i16 %9 to i32, !dbg !19987
  %and = and i32 %conv3, 8192, !dbg !19987
  %tobool4 = icmp ne i32 %and, 0, !dbg !19986
  br i1 %tobool4, label %while.body, label %while.end, !dbg !19986

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !19988, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19988
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19988, !tbaa !2442
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !19989, !tbaa !2497, !ctir !147
  store i8 %11, i8* %ch, align 1, !dbg !19990, !tbaa !2497
  br label %while.cond, !dbg !19986, !llvm.loop !19991

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !19993, !tbaa !2497
  %conv5 = zext i8 %12 to i32, !dbg !19993
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !19995
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19996

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19997
  br label %return, !dbg !19997

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !19998, !tbaa !2442
  %14 = load i8**, i8*** %p, align 8, !dbg !19999, !tbaa !2442
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !20000, !tbaa !2436
  %call10 = call i64 @strtoumax(i8* %13, i8** %14, i32 %15) #13, !dbg !20001
  store i64 %call10, i64* %tmp, align 8, !dbg !20002, !tbaa !2579
  %16 = load i8**, i8*** %p, align 8, !dbg !20003, !tbaa !2442
  %17 = load i8*, i8** %16, align 8, !dbg !20005, !tbaa !2442, !ctir !143
  %18 = load i8*, i8** %s.addr, align 8, !dbg !20006, !tbaa !2442
  %cmp11 = icmp eq i8* %17, %18, !dbg !20007
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !20008

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20009, !tbaa !2442
  %tobool14 = icmp ne i8* %19, null, !dbg !20009
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !20012

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !20013, !tbaa !2442
  %21 = load i8*, i8** %20, align 8, !dbg !20014, !tbaa !2442, !ctir !143
  %22 = load i8, i8* %21, align 1, !dbg !20015, !tbaa !2497, !ctir !144
  %conv16 = sext i8 %22 to i32, !dbg !20015
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !20015
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !20016

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20017, !tbaa !2442
  %24 = load i8**, i8*** %p, align 8, !dbg !20018, !tbaa !2442
  %25 = load i8*, i8** %24, align 8, !dbg !20019, !tbaa !2442, !ctir !143
  %26 = load i8, i8* %25, align 1, !dbg !20020, !tbaa !2497, !ctir !144
  %conv19 = sext i8 %26 to i32, !dbg !20020
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #16, !dbg !20021
  %tobool21 = icmp ne i8* %call20, null, !dbg !20021
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !20022

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !20023, !tbaa !2579
  br label %if.end24, !dbg !20024

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !20025
  br label %return, !dbg !20025

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !20026

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #17, !dbg !20027
  %27 = load i32, i32* %call26, align 4, !dbg !20027, !tbaa !2436, !ctir !27
  %cmp27 = icmp ne i32 %27, 0, !dbg !20029
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !20030

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #17, !dbg !20031
  %28 = load i32, i32* %call30, align 4, !dbg !20031, !tbaa !2436, !ctir !27
  %cmp31 = icmp ne i32 %28, 34, !dbg !20034
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !20035

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !20036
  br label %return, !dbg !20036

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !20037, !tbaa !2497
  br label %if.end35, !dbg !20038

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20039, !tbaa !2442
  %tobool37 = icmp ne i8* %29, null, !dbg !20039
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !20041

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !20042, !tbaa !2579
  %31 = load i64*, i64** %val.addr, align 8, !dbg !20044, !tbaa !2442
  store i64 %30, i64* %31, align 8, !dbg !20045, !tbaa !2579, !ctir !168
  %32 = load i32, i32* %err, align 4, !dbg !20046, !tbaa !2497
  store i32 %32, i32* %retval, align 4, !dbg !20047
  br label %return, !dbg !20047

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !20048, !tbaa !2442
  %34 = load i8*, i8** %33, align 8, !dbg !20050, !tbaa !2442, !ctir !143
  %35 = load i8, i8* %34, align 1, !dbg !20051, !tbaa !2497, !ctir !144
  %conv40 = sext i8 %35 to i32, !dbg !20051
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !20052
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !20053

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !20054, metadata !DIExpression()), !dbg !20056
  store i32 1024, i32* %base, align 4, !dbg !20056, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !20057, metadata !DIExpression()), !dbg !20058
  store i32 1, i32* %suffixes, align 4, !dbg !20058, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !20059, metadata !DIExpression()), !dbg !20060
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20061, !tbaa !2442
  %37 = load i8**, i8*** %p, align 8, !dbg !20063, !tbaa !2442
  %38 = load i8*, i8** %37, align 8, !dbg !20064, !tbaa !2442, !ctir !143
  %39 = load i8, i8* %38, align 1, !dbg !20065, !tbaa !2497, !ctir !144
  %conv44 = sext i8 %39 to i32, !dbg !20065
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #16, !dbg !20066
  %tobool46 = icmp ne i8* %call45, null, !dbg !20066
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !20067

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !20068, !tbaa !2579
  %41 = load i64*, i64** %val.addr, align 8, !dbg !20070, !tbaa !2442
  store i64 %40, i64* %41, align 8, !dbg !20071, !tbaa !2579, !ctir !168
  %42 = load i32, i32* %err, align 4, !dbg !20072, !tbaa !2497
  %or = or i32 %42, 2, !dbg !20073
  store i32 %or, i32* %retval, align 4, !dbg !20074
  br label %return, !dbg !20074

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !20075, !tbaa !2442
  %44 = load i8*, i8** %43, align 8, !dbg !20076, !tbaa !2442, !ctir !143
  %45 = load i8, i8* %44, align 1, !dbg !20077, !tbaa !2497, !ctir !144
  %conv49 = sext i8 %45 to i32, !dbg !20077
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !20078

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !20079, !tbaa !2442
  %call50 = call i8* @strchr(i8* %46, i32 48) #16, !dbg !20082
  %tobool51 = icmp ne i8* %call50, null, !dbg !20082
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !20083

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !20084, !tbaa !2442
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !20084, !ctir !142
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !20084, !tbaa !2442
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !20084, !ctir !143
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !20084, !tbaa !2497
  %conv55 = sext i8 %49 to i32, !dbg !20084
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !20085

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !20086, !tbaa !2442
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !20086, !ctir !142
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !20086, !tbaa !2442
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !20086, !ctir !143
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !20086, !tbaa !2497
  %conv59 = sext i8 %52 to i32, !dbg !20086
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !20089
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !20090

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !20091, !tbaa !2436
  %add = add nsw i32 %53, 2, !dbg !20091
  store i32 %add, i32* %suffixes, align 4, !dbg !20091, !tbaa !2436
  br label %if.end63, !dbg !20092

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !20093

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !20094, !tbaa !2436
  %54 = load i32, i32* %suffixes, align 4, !dbg !20095, !tbaa !2436
  %inc = add nsw i32 %54, 1, !dbg !20095
  store i32 %inc, i32* %suffixes, align 4, !dbg !20095, !tbaa !2436
  br label %sw.epilog, !dbg !20096

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !20097

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !20098

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !20099, !tbaa !2442
  %56 = load i8*, i8** %55, align 8, !dbg !20100, !tbaa !2442, !ctir !143
  %57 = load i8, i8* %56, align 1, !dbg !20101, !tbaa !2497, !ctir !144
  %conv67 = sext i8 %57 to i32, !dbg !20101
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !20102

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale.498(i64* %tmp, i32 512), !dbg !20103
  store i32 %call69, i32* %overflow, align 4, !dbg !20105, !tbaa !2497
  br label %sw.epilog92, !dbg !20106

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale.498(i64* %tmp, i32 1024), !dbg !20107
  store i32 %call71, i32* %overflow, align 4, !dbg !20108, !tbaa !2497
  br label %sw.epilog92, !dbg !20109

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !20110, !tbaa !2497
  br label %sw.epilog92, !dbg !20111

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !20112, !tbaa !2436
  %call74 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %58, i32 6), !dbg !20113
  store i32 %call74, i32* %overflow, align 4, !dbg !20114, !tbaa !2497
  br label %sw.epilog92, !dbg !20115

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !20116, !tbaa !2436
  %call76 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %59, i32 3), !dbg !20117
  store i32 %call76, i32* %overflow, align 4, !dbg !20118, !tbaa !2497
  br label %sw.epilog92, !dbg !20119

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !20120, !tbaa !2436
  %call78 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %60, i32 1), !dbg !20121
  store i32 %call78, i32* %overflow, align 4, !dbg !20122, !tbaa !2497
  br label %sw.epilog92, !dbg !20123

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !20124, !tbaa !2436
  %call80 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %61, i32 2), !dbg !20125
  store i32 %call80, i32* %overflow, align 4, !dbg !20126, !tbaa !2497
  br label %sw.epilog92, !dbg !20127

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !20128, !tbaa !2436
  %call82 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %62, i32 5), !dbg !20129
  store i32 %call82, i32* %overflow, align 4, !dbg !20130, !tbaa !2497
  br label %sw.epilog92, !dbg !20131

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !20132, !tbaa !2436
  %call84 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %63, i32 4), !dbg !20133
  store i32 %call84, i32* %overflow, align 4, !dbg !20134, !tbaa !2497
  br label %sw.epilog92, !dbg !20135

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale.498(i64* %tmp, i32 2), !dbg !20136
  store i32 %call86, i32* %overflow, align 4, !dbg !20137, !tbaa !2497
  br label %sw.epilog92, !dbg !20138

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !20139, !tbaa !2436
  %call88 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %64, i32 8), !dbg !20140
  store i32 %call88, i32* %overflow, align 4, !dbg !20141, !tbaa !2497
  br label %sw.epilog92, !dbg !20142

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !20143, !tbaa !2436
  %call90 = call i32 @bkm_scale_by_power.499(i64* %tmp, i32 %65, i32 7), !dbg !20144
  store i32 %call90, i32* %overflow, align 4, !dbg !20145, !tbaa !2497
  br label %sw.epilog92, !dbg !20146

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !20147, !tbaa !2579
  %67 = load i64*, i64** %val.addr, align 8, !dbg !20148, !tbaa !2442
  store i64 %66, i64* %67, align 8, !dbg !20149, !tbaa !2579, !ctir !168
  %68 = load i32, i32* %err, align 4, !dbg !20150, !tbaa !2497
  %or91 = or i32 %68, 2, !dbg !20151
  store i32 %or91, i32* %retval, align 4, !dbg !20152
  br label %return, !dbg !20152

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !20153, !tbaa !2497
  %70 = load i32, i32* %err, align 4, !dbg !20154, !tbaa !2497
  %or93 = or i32 %70, %69, !dbg !20154
  store i32 %or93, i32* %err, align 4, !dbg !20154, !tbaa !2497
  %71 = load i32, i32* %suffixes, align 4, !dbg !20155, !tbaa !2436
  %72 = load i8**, i8*** %p, align 8, !dbg !20156, !tbaa !2442
  %73 = load i8*, i8** %72, align 8, !dbg !20157, !tbaa !2442, !ctir !143
  %idx.ext = sext i32 %71 to i64, !dbg !20157
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !20157
  store i8* %add.ptr, i8** %72, align 8, !dbg !20157, !tbaa !2442, !ctir !143
  %74 = load i8**, i8*** %p, align 8, !dbg !20158, !tbaa !2442
  %75 = load i8*, i8** %74, align 8, !dbg !20160, !tbaa !2442, !ctir !143
  %76 = load i8, i8* %75, align 1, !dbg !20161, !tbaa !2497, !ctir !144
  %tobool94 = icmp ne i8 %76, 0, !dbg !20161
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !20162

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !20163, !tbaa !2497
  %or96 = or i32 %77, 2, !dbg !20163
  store i32 %or96, i32* %err, align 4, !dbg !20163, !tbaa !2497
  br label %if.end97, !dbg !20164

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !20165

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !20166, !tbaa !2579
  %79 = load i64*, i64** %val.addr, align 8, !dbg !20167, !tbaa !2442
  store i64 %78, i64* %79, align 8, !dbg !20168, !tbaa !2579, !ctir !168
  %80 = load i32, i32* %err, align 4, !dbg !20169, !tbaa !2497
  store i32 %80, i32* %retval, align 4, !dbg !20170
  br label %return, !dbg !20170

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !20171
  ret i32 %81, !dbg !20171
}

; Function Attrs: nounwind
declare dso_local i64 @strtoumax(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale.498(i64* %x, i32 %scale_factor) #0 !dbg !20172 !ctir !2158 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20173, metadata !DIExpression()), !dbg !20174
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !20175, metadata !DIExpression()), !dbg !20176
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !20177, !tbaa !2436
  %conv = sext i32 %0 to i64, !dbg !20177
  %div = udiv i64 -1, %conv, !dbg !20179
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20180, !tbaa !2442
  %2 = load i64, i64* %1, align 8, !dbg !20181, !tbaa !2579, !ctir !168
  %cmp = icmp ult i64 %div, %2, !dbg !20182
  br i1 %cmp, label %if.then, label %if.end, !dbg !20183

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !20184, !tbaa !2442
  store i64 -1, i64* %3, align 8, !dbg !20186, !tbaa !2579, !ctir !168
  store i32 1, i32* %retval, align 4, !dbg !20187
  br label %return, !dbg !20187

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !20188, !tbaa !2436
  %conv2 = sext i32 %4 to i64, !dbg !20188
  %5 = load i64*, i64** %x.addr, align 8, !dbg !20189, !tbaa !2442
  %6 = load i64, i64* %5, align 8, !dbg !20190, !tbaa !2579, !ctir !168
  %mul = mul i64 %6, %conv2, !dbg !20190
  store i64 %mul, i64* %5, align 8, !dbg !20190, !tbaa !2579, !ctir !168
  store i32 0, i32* %retval, align 4, !dbg !20191
  br label %return, !dbg !20191

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !20192
  ret i32 %7, !dbg !20192
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power.499(i64* %x, i32 %base, i32 %power) #0 !dbg !20193 !ctir !2160 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !1322
  store i64* %x, i64** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !20194, metadata !DIExpression()), !dbg !20195
  store i32 %base, i32* %base.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !20196, metadata !DIExpression()), !dbg !20197
  store i32 %power, i32* %power.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !20198, metadata !DIExpression()), !dbg !20199
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20200, metadata !DIExpression()), !dbg !20201
  store i32 0, i32* %err, align 4, !dbg !20201, !tbaa !2497
  br label %while.cond, !dbg !20202

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !20203, !tbaa !2436
  %dec = add nsw i32 %0, -1, !dbg !20203
  store i32 %dec, i32* %power.addr, align 4, !dbg !20203, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !20202
  br i1 %tobool, label %while.body, label %while.end, !dbg !20202

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !20204, !tbaa !2442
  %2 = load i32, i32* %base.addr, align 4, !dbg !20205, !tbaa !2436
  %call = call i32 @bkm_scale.498(i64* %1, i32 %2), !dbg !20206
  %3 = load i32, i32* %err, align 4, !dbg !20207, !tbaa !2497
  %or = or i32 %3, %call, !dbg !20207
  store i32 %or, i32* %err, align 4, !dbg !20207, !tbaa !2497
  br label %while.cond, !dbg !20202, !llvm.loop !20208

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !20210, !tbaa !2497
  ret i32 %4, !dbg !20211
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #0 !dbg !20212 !ctir !2165 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !149
  %wc = alloca i32, align 4, !ctir !654
  %uc = alloca i8, align 1, !ctir !591
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !20214, metadata !DIExpression()), !dbg !20215
  store i8* %s, i8** %s.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !20216, metadata !DIExpression()), !dbg !20217
  store i64 %n, i64* %n.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20218, metadata !DIExpression()), !dbg !20219
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !20220, metadata !DIExpression()), !dbg !20221
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !20222, metadata !DIExpression()), !dbg !20223
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !20224, metadata !DIExpression()), !dbg !20225
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !20226, !tbaa !2442
  %tobool = icmp ne i32* %0, null, !dbg !20226
  br i1 %tobool, label %if.end, label %if.then, !dbg !20228

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !20229, !tbaa !2442
  br label %if.end, !dbg !20230

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !20231, !tbaa !2442
  %2 = load i8*, i8** %s.addr, align 8, !dbg !20232, !tbaa !2442
  %3 = load i64, i64* %n.addr, align 8, !dbg !20233, !tbaa !2579
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !20234, !tbaa !2442
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #13, !dbg !20235
  store i64 %call, i64* %ret, align 8, !dbg !20236, !tbaa !2579
  %5 = load i64, i64* %ret, align 8, !dbg !20237, !tbaa !2579
  %cmp = icmp ule i64 -2, %5, !dbg !20239
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !20240

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !20241, !tbaa !2579
  %cmp1 = icmp ne i64 %6, 0, !dbg !20242
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !20243

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !20244
  br i1 %call3, label %if.end5, label %if.then4, !dbg !20245

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !20246, metadata !DIExpression()), !dbg !20248
  %7 = load i8*, i8** %s.addr, align 8, !dbg !20249, !tbaa !2442
  %8 = load i8, i8* %7, align 1, !dbg !20250, !tbaa !2497, !ctir !147
  store i8 %8, i8* %uc, align 1, !dbg !20248, !tbaa !2497
  %9 = load i8, i8* %uc, align 1, !dbg !20251, !tbaa !2497
  %conv = zext i8 %9 to i32, !dbg !20251
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !20252, !tbaa !2442
  store i32 %conv, i32* %10, align 4, !dbg !20253, !tbaa !2436, !ctir !654
  store i64 1, i64* %retval, align 8, !dbg !20254
  br label %return, !dbg !20254

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !20255, !tbaa !2579
  store i64 %11, i64* %retval, align 8, !dbg !20256
  br label %return, !dbg !20256

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !20257
  ret i64 %12, !dbg !20257
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @print_and_abort() #10 !dbg !20258 !ctir !341 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20259, !tbaa !2442
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.502, i64 0, i64 0)) #13, !dbg !20260
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.503, i64 0, i64 0), i8* %call), !dbg !20261
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20262, !tbaa !2436
  call void @exit(i32 %1) #15, !dbg !20263
  unreachable, !dbg !20263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i64)* %chunkfun, void (i8*)* %freefun) #0 !dbg !20264 !ctir !1561 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i64)*, align 8
  %freefun.addr = alloca void (i8*)*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20265, metadata !DIExpression()), !dbg !20266
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20267, metadata !DIExpression()), !dbg !20268
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20269, metadata !DIExpression()), !dbg !20270
  store i8* (i64)* %chunkfun, i8* (i64)** %chunkfun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* (i64)** %chunkfun.addr, metadata !20271, metadata !DIExpression()), !dbg !20272
  store void (i8*)* %freefun, void (i8*)** %freefun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*)** %freefun.addr, metadata !20273, metadata !DIExpression()), !dbg !20274
  %0 = load i8* (i64)*, i8* (i64)** %chunkfun.addr, align 8, !dbg !20275, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20276, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20277, !ctir !1564
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20278
  store i8* (i64)* %0, i8* (i64)** %plain, align 8, !dbg !20279, !tbaa !2497, !ctir !1584
  %2 = load void (i8*)*, void (i8*)** %freefun.addr, align 8, !dbg !20280, !tbaa !2442
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20281, !tbaa !2442
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20282, !ctir !1564
  %plain3 = bitcast %union.anon.1* %freefun2 to void (i8*)**, !dbg !20283
  store void (i8*)* %2, void (i8*)** %plain3, align 8, !dbg !20284, !tbaa !2497, !ctir !1589
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20285, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 10, !dbg !20286, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20287
  %bf.clear = and i8 %bf.load, -2, !dbg !20287
  store i8 %bf.clear, i8* %use_extra_arg, align 8, !dbg !20287
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20288, !tbaa !2442
  %6 = load i64, i64* %size.addr, align 8, !dbg !20289, !tbaa !2579
  %7 = load i64, i64* %alignment.addr, align 8, !dbg !20290, !tbaa !2579
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %5, i64 %6, i64 %7), !dbg !20291
  ret i32 %call, !dbg !20292
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_obstack_begin_worker(%struct.obstack* %h, i64 %size, i64 %alignment) #0 !dbg !20293 !ctir !1607 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %extra = alloca i32, align 4, !ctir !27
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20294, metadata !DIExpression()), !dbg !20295
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20296, metadata !DIExpression()), !dbg !20297
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20298, metadata !DIExpression()), !dbg !20299
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %chunk, metadata !20300, metadata !DIExpression()), !dbg !20301
  %0 = load i64, i64* %alignment.addr, align 8, !dbg !20302, !tbaa !2579
  %cmp = icmp eq i64 %0, 0, !dbg !20304
  br i1 %cmp, label %if.then, label %if.end, !dbg !20305

if.then:                                          ; preds = %entry
  store i64 16, i64* %alignment.addr, align 8, !dbg !20306, !tbaa !2579
  br label %if.end, !dbg !20307

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !20308, !tbaa !2579
  %cmp1 = icmp eq i64 %1, 0, !dbg !20310
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !20311

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !20312, metadata !DIExpression()), !dbg !20314
  store i32 32, i32* %extra, align 4, !dbg !20314, !tbaa !2436
  %2 = load i32, i32* %extra, align 4, !dbg !20315, !tbaa !2436
  %sub = sub nsw i32 4096, %2, !dbg !20316
  %conv = sext i32 %sub to i64, !dbg !20317
  store i64 %conv, i64* %size.addr, align 8, !dbg !20318, !tbaa !2579
  br label %if.end3, !dbg !20319

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i64, i64* %size.addr, align 8, !dbg !20320, !tbaa !2579
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20321, !tbaa !2442
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 0, !dbg !20322, !ctir !1564
  store i64 %3, i64* %chunk_size, align 8, !dbg !20323, !tbaa !20324, !ctir !149
  %5 = load i64, i64* %alignment.addr, align 8, !dbg !20325, !tbaa !2579
  %sub4 = sub i64 %5, 1, !dbg !20326
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20327, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 6, !dbg !20328, !ctir !1564
  store i64 %sub4, i64* %alignment_mask, align 8, !dbg !20329, !tbaa !5069, !ctir !149
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20330, !tbaa !2442
  %8 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20331, !tbaa !2442
  %chunk_size5 = getelementptr inbounds %struct.obstack, %struct.obstack* %8, i32 0, i32 0, !dbg !20332, !ctir !1564
  %9 = load i64, i64* %chunk_size5, align 8, !dbg !20332, !tbaa !20324, !ctir !149
  %call = call i8* @call_chunkfun(%struct.obstack* %7, i64 %9), !dbg !20333
  %10 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20333
  %11 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20334, !tbaa !2442
  %chunk6 = getelementptr inbounds %struct.obstack, %struct.obstack* %11, i32 0, i32 1, !dbg !20335, !ctir !1564
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk6, align 8, !dbg !20336, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %10, %struct._obstack_chunk** %chunk, align 8, !dbg !20337, !tbaa !2442
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20338, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %12, null, !dbg !20338
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !20340

if.then7:                                         ; preds = %if.end3
  %13 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20341, !tbaa !2442
  call void %13() #14, !dbg !20342
  unreachable, !dbg !20342

if.end8:                                          ; preds = %if.end3
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20343, !tbaa !2442
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %14, i32 0, i32 2, !dbg !20343, !ctir !1569
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20343
  %sub.ptr.lhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !20343
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !20343
  %15 = load i64, i64* %alignment.addr, align 8, !dbg !20343, !tbaa !2579
  %sub9 = sub i64 %15, 1, !dbg !20343
  %add = add i64 %sub.ptr.sub, %sub9, !dbg !20343
  %16 = load i64, i64* %alignment.addr, align 8, !dbg !20343, !tbaa !2579
  %sub10 = sub i64 %16, 1, !dbg !20343
  %neg = xor i64 %sub10, -1, !dbg !20343
  %and = and i64 %add, %neg, !dbg !20343
  %add.ptr = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20343
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20344, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 2, !dbg !20345, !ctir !1564
  store i8* %add.ptr, i8** %object_base, align 8, !dbg !20346, !tbaa !4746, !ctir !143
  %18 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20347, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3, !dbg !20348, !ctir !1564
  store i8* %add.ptr, i8** %next_free, align 8, !dbg !20349, !tbaa !4744, !ctir !143
  %19 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20350, !tbaa !2442
  %20 = bitcast %struct._obstack_chunk* %19 to i8*, !dbg !20351
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20352, !tbaa !2442
  %chunk_size11 = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 0, !dbg !20353, !ctir !1564
  %22 = load i64, i64* %chunk_size11, align 8, !dbg !20353, !tbaa !20324, !ctir !149
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !20354
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20355, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %23, i32 0, i32 0, !dbg !20356, !ctir !1569
  store i8* %add.ptr12, i8** %limit, align 8, !dbg !20357, !tbaa !2442, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20358, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20359, !ctir !1564
  store i8* %add.ptr12, i8** %chunk_limit, align 8, !dbg !20360, !tbaa !5073, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20361, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %25, i32 0, i32 1, !dbg !20362, !ctir !1569
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %prev, align 8, !dbg !20363, !tbaa !2442, !ctir !1568
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20364, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 10, !dbg !20365, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20366
  %bf.clear = and i8 %bf.load, -3, !dbg !20366
  store i8 %bf.clear, i8* %maybe_empty_object, align 8, !dbg !20366
  %27 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20367, !tbaa !2442
  %alloc_failed = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 10, !dbg !20368, !ctir !1564
  %bf.load13 = load i8, i8* %alloc_failed, align 8, !dbg !20369
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !20369
  store i8 %bf.clear14, i8* %alloc_failed, align 8, !dbg !20369
  ret i32 1, !dbg !20370
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @call_chunkfun(%struct.obstack* %h, i64 %size) #0 !dbg !20371 !ctir !1609 {
entry:
  %retval = alloca i8*, align 8
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20372, metadata !DIExpression()), !dbg !20373
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20374, metadata !DIExpression()), !dbg !20375
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20376, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20378, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20378
  %bf.clear = and i8 %bf.load, 1, !dbg !20378
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20378
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20376
  br i1 %tobool, label %if.then, label %if.else, !dbg !20379

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20380, !tbaa !2442
  %chunkfun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20381, !ctir !1564
  %extra = bitcast %union.anon.0* %chunkfun to i8* (i8*, i64)**, !dbg !20382
  %2 = load i8* (i8*, i64)*, i8* (i8*, i64)** %extra, align 8, !dbg !20382, !tbaa !2497, !ctir !1584
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20383, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20384, !ctir !1564
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20384, !tbaa !20385, !ctir !167
  %5 = load i64, i64* %size.addr, align 8, !dbg !20386, !tbaa !2579
  %call = call i8* %2(i8* %4, i64 %5), !dbg !20380
  store i8* %call, i8** %retval, align 8, !dbg !20387
  br label %return, !dbg !20387

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20388, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 7, !dbg !20389, !ctir !1564
  %plain = bitcast %union.anon.0* %chunkfun1 to i8* (i64)**, !dbg !20390
  %7 = load i8* (i64)*, i8* (i64)** %plain, align 8, !dbg !20390, !tbaa !2497, !ctir !1584
  %8 = load i64, i64* %size.addr, align 8, !dbg !20391, !tbaa !2579
  %call2 = call i8* %7(i64 %8), !dbg !20388
  store i8* %call2, i8** %retval, align 8, !dbg !20392
  br label %return, !dbg !20392

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !20393
  ret i8* %9, !dbg !20393
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_obstack_begin_1(%struct.obstack* %h, i64 %size, i64 %alignment, i8* (i8*, i64)* %chunkfun, void (i8*, i8*)* %freefun, i8* %arg) #0 !dbg !20394 !ctir !1597 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %chunkfun.addr = alloca i8* (i8*, i64)*, align 8
  %freefun.addr = alloca void (i8*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20395, metadata !DIExpression()), !dbg !20396
  store i64 %size, i64* %size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20397, metadata !DIExpression()), !dbg !20398
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !20399, metadata !DIExpression()), !dbg !20400
  store i8* (i8*, i64)* %chunkfun, i8* (i8*, i64)** %chunkfun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* (i8*, i64)** %chunkfun.addr, metadata !20401, metadata !DIExpression()), !dbg !20402
  store void (i8*, i8*)* %freefun, void (i8*, i8*)** %freefun.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %freefun.addr, metadata !20403, metadata !DIExpression()), !dbg !20404
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20405, metadata !DIExpression()), !dbg !20406
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** %chunkfun.addr, align 8, !dbg !20407, !tbaa !2442
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20408, !tbaa !2442
  %chunkfun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 7, !dbg !20409, !ctir !1564
  %extra = bitcast %union.anon.0* %chunkfun1 to i8* (i8*, i64)**, !dbg !20410
  store i8* (i8*, i64)* %0, i8* (i8*, i64)** %extra, align 8, !dbg !20411, !tbaa !2497, !ctir !1584
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %freefun.addr, align 8, !dbg !20412, !tbaa !2442
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20413, !tbaa !2442
  %freefun2 = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 8, !dbg !20414, !ctir !1564
  %extra3 = bitcast %union.anon.1* %freefun2 to void (i8*, i8*)**, !dbg !20415
  store void (i8*, i8*)* %2, void (i8*, i8*)** %extra3, align 8, !dbg !20416, !tbaa !2497, !ctir !1589
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !20417, !tbaa !2442
  %5 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20418, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %5, i32 0, i32 9, !dbg !20419, !ctir !1564
  store i8* %4, i8** %extra_arg, align 8, !dbg !20420, !tbaa !20385, !ctir !167
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20421, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 10, !dbg !20422, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20423
  %bf.clear = and i8 %bf.load, -2, !dbg !20423
  %bf.set = or i8 %bf.clear, 1, !dbg !20423
  store i8 %bf.set, i8* %use_extra_arg, align 8, !dbg !20423
  %7 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20424, !tbaa !2442
  %8 = load i64, i64* %size.addr, align 8, !dbg !20425, !tbaa !2579
  %9 = load i64, i64* %alignment.addr, align 8, !dbg !20426, !tbaa !2579
  %call = call i32 @_obstack_begin_worker(%struct.obstack* %7, i64 %8, i64 %9), !dbg !20427
  ret i32 %call, !dbg !20428
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_newchunk(%struct.obstack* %h, i64 %length) #0 !dbg !20429 !ctir !1599 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %length.addr = alloca i64, align 8
  %old_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %new_chunk = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %obj_size = alloca i64, align 8, !ctir !149
  %object_base1 = alloca i8*, align 8, !ctir !143
  %sum1 = alloca i64, align 8, !ctir !149
  %sum2 = alloca i64, align 8, !ctir !149
  %new_size = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20430, metadata !DIExpression()), !dbg !20431
  store i64 %length, i64* %length.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !20432, metadata !DIExpression()), !dbg !20433
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %old_chunk, metadata !20434, metadata !DIExpression()), !dbg !20435
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20436, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20437, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20437, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20435, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %new_chunk, metadata !20438, metadata !DIExpression()), !dbg !20439
  store %struct._obstack_chunk* null, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20439, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64* %obj_size, metadata !20440, metadata !DIExpression()), !dbg !20441
  %2 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20442, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 3, !dbg !20443, !ctir !1564
  %3 = load i8*, i8** %next_free, align 8, !dbg !20443, !tbaa !4744, !ctir !143
  %4 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20444, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 2, !dbg !20445, !ctir !1564
  %5 = load i8*, i8** %object_base, align 8, !dbg !20445, !tbaa !4746, !ctir !143
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !20446
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !20446
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20446
  store i64 %sub.ptr.sub, i64* %obj_size, align 8, !dbg !20441, !tbaa !2579
  call void @llvm.dbg.declare(metadata i8** %object_base1, metadata !20447, metadata !DIExpression()), !dbg !20448
  call void @llvm.dbg.declare(metadata i64* %sum1, metadata !20449, metadata !DIExpression()), !dbg !20450
  %6 = load i64, i64* %obj_size, align 8, !dbg !20451, !tbaa !2579
  %7 = load i64, i64* %length.addr, align 8, !dbg !20452, !tbaa !2579
  %add = add i64 %6, %7, !dbg !20453
  store i64 %add, i64* %sum1, align 8, !dbg !20450, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %sum2, metadata !20454, metadata !DIExpression()), !dbg !20455
  %8 = load i64, i64* %sum1, align 8, !dbg !20456, !tbaa !2579
  %9 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20457, !tbaa !2442
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 6, !dbg !20458, !ctir !1564
  %10 = load i64, i64* %alignment_mask, align 8, !dbg !20458, !tbaa !5069, !ctir !149
  %add2 = add i64 %8, %10, !dbg !20459
  store i64 %add2, i64* %sum2, align 8, !dbg !20455, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !20460, metadata !DIExpression()), !dbg !20461
  %11 = load i64, i64* %sum2, align 8, !dbg !20462, !tbaa !2579
  %12 = load i64, i64* %obj_size, align 8, !dbg !20463, !tbaa !2579
  %shr = lshr i64 %12, 3, !dbg !20464
  %add3 = add i64 %11, %shr, !dbg !20465
  %add4 = add i64 %add3, 100, !dbg !20466
  store i64 %add4, i64* %new_size, align 8, !dbg !20461, !tbaa !2579
  %13 = load i64, i64* %new_size, align 8, !dbg !20467, !tbaa !2579
  %14 = load i64, i64* %sum2, align 8, !dbg !20469, !tbaa !2579
  %cmp = icmp ult i64 %13, %14, !dbg !20470
  br i1 %cmp, label %if.then, label %if.end, !dbg !20471

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %sum2, align 8, !dbg !20472, !tbaa !2579
  store i64 %15, i64* %new_size, align 8, !dbg !20473, !tbaa !2579
  br label %if.end, !dbg !20474

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %new_size, align 8, !dbg !20475, !tbaa !2579
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20477, !tbaa !2442
  %chunk_size = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 0, !dbg !20478, !ctir !1564
  %18 = load i64, i64* %chunk_size, align 8, !dbg !20478, !tbaa !20324, !ctir !149
  %cmp5 = icmp ult i64 %16, %18, !dbg !20479
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !20480

if.then6:                                         ; preds = %if.end
  %19 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20481, !tbaa !2442
  %chunk_size7 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 0, !dbg !20482, !ctir !1564
  %20 = load i64, i64* %chunk_size7, align 8, !dbg !20482, !tbaa !20324, !ctir !149
  store i64 %20, i64* %new_size, align 8, !dbg !20483, !tbaa !2579
  br label %if.end8, !dbg !20484

if.end8:                                          ; preds = %if.then6, %if.end
  %21 = load i64, i64* %obj_size, align 8, !dbg !20485, !tbaa !2579
  %22 = load i64, i64* %sum1, align 8, !dbg !20487, !tbaa !2579
  %cmp9 = icmp ule i64 %21, %22, !dbg !20488
  br i1 %cmp9, label %land.lhs.true, label %if.end12, !dbg !20489

land.lhs.true:                                    ; preds = %if.end8
  %23 = load i64, i64* %sum1, align 8, !dbg !20490, !tbaa !2579
  %24 = load i64, i64* %sum2, align 8, !dbg !20491, !tbaa !2579
  %cmp10 = icmp ule i64 %23, %24, !dbg !20492
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !20493

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20494, !tbaa !2442
  %26 = load i64, i64* %new_size, align 8, !dbg !20495, !tbaa !2579
  %call = call i8* @call_chunkfun(%struct.obstack* %25, i64 %26), !dbg !20496
  %27 = bitcast i8* %call to %struct._obstack_chunk*, !dbg !20496
  store %struct._obstack_chunk* %27, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20497, !tbaa !2442
  br label %if.end12, !dbg !20498

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20499, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %28, null, !dbg !20499
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !20501

if.then13:                                        ; preds = %if.end12
  %29 = load void ()*, void ()** @obstack_alloc_failed_handler, align 8, !dbg !20502, !tbaa !2442
  call void %29() #14, !dbg !20503
  unreachable, !dbg !20503

if.end14:                                         ; preds = %if.end12
  %30 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20504, !tbaa !2442
  %31 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20505, !tbaa !2442
  %chunk15 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 1, !dbg !20506, !ctir !1564
  store %struct._obstack_chunk* %30, %struct._obstack_chunk** %chunk15, align 8, !dbg !20507, !tbaa !5072, !ctir !1568
  %32 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20508, !tbaa !2442
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20509, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %33, i32 0, i32 1, !dbg !20510, !ctir !1569
  store %struct._obstack_chunk* %32, %struct._obstack_chunk** %prev, align 8, !dbg !20511, !tbaa !2442, !ctir !1568
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20512, !tbaa !2442
  %35 = bitcast %struct._obstack_chunk* %34 to i8*, !dbg !20513
  %36 = load i64, i64* %new_size, align 8, !dbg !20514, !tbaa !2579
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !20515
  %37 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20516, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 4, !dbg !20517, !ctir !1564
  store i8* %add.ptr, i8** %chunk_limit, align 8, !dbg !20518, !tbaa !5073, !ctir !143
  %38 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20519, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %38, i32 0, i32 0, !dbg !20520, !ctir !1569
  store i8* %add.ptr, i8** %limit, align 8, !dbg !20521, !tbaa !2442, !ctir !143
  %39 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20522, !tbaa !2442
  %contents = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %39, i32 0, i32 2, !dbg !20522, !ctir !1569
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %contents, i64 0, i64 0, !dbg !20522
  %sub.ptr.lhs.cast16 = ptrtoint i8* %arraydecay to i64, !dbg !20522
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast16, 0, !dbg !20522
  %40 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20522, !tbaa !2442
  %alignment_mask18 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 6, !dbg !20522, !ctir !1564
  %41 = load i64, i64* %alignment_mask18, align 8, !dbg !20522, !tbaa !5069, !ctir !149
  %add19 = add i64 %sub.ptr.sub17, %41, !dbg !20522
  %42 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20522, !tbaa !2442
  %alignment_mask20 = getelementptr inbounds %struct.obstack, %struct.obstack* %42, i32 0, i32 6, !dbg !20522, !ctir !1564
  %43 = load i64, i64* %alignment_mask20, align 8, !dbg !20522, !tbaa !5069, !ctir !149
  %neg = xor i64 %43, -1, !dbg !20522
  %and = and i64 %add19, %neg, !dbg !20522
  %add.ptr21 = getelementptr inbounds i8, i8* null, i64 %and, !dbg !20522
  store i8* %add.ptr21, i8** %object_base1, align 8, !dbg !20523, !tbaa !2442
  %44 = load i8*, i8** %object_base1, align 8, !dbg !20524, !tbaa !2442
  %45 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20525, !tbaa !2442
  %object_base22 = getelementptr inbounds %struct.obstack, %struct.obstack* %45, i32 0, i32 2, !dbg !20526, !ctir !1564
  %46 = load i8*, i8** %object_base22, align 8, !dbg !20526, !tbaa !4746, !ctir !143
  %47 = load i64, i64* %obj_size, align 8, !dbg !20527, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %46, i64 %47, i1 false), !dbg !20528
  %48 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20529, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %48, i32 0, i32 10, !dbg !20531, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20531
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !20531
  %bf.clear = and i8 %bf.lshr, 1, !dbg !20531
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20531
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !20529
  br i1 %tobool23, label %if.end40, label %land.lhs.true24, !dbg !20532

land.lhs.true24:                                  ; preds = %if.end14
  %49 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20533, !tbaa !2442
  %object_base25 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 2, !dbg !20534, !ctir !1564
  %50 = load i8*, i8** %object_base25, align 8, !dbg !20534, !tbaa !4746, !ctir !143
  %51 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20535, !tbaa !2442
  %contents26 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %51, i32 0, i32 2, !dbg !20535, !ctir !1569
  %arraydecay27 = getelementptr inbounds [0 x i8], [0 x i8]* %contents26, i64 0, i64 0, !dbg !20535
  %sub.ptr.lhs.cast28 = ptrtoint i8* %arraydecay27 to i64, !dbg !20535
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast28, 0, !dbg !20535
  %52 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20535, !tbaa !2442
  %alignment_mask30 = getelementptr inbounds %struct.obstack, %struct.obstack* %52, i32 0, i32 6, !dbg !20535, !ctir !1564
  %53 = load i64, i64* %alignment_mask30, align 8, !dbg !20535, !tbaa !5069, !ctir !149
  %add31 = add i64 %sub.ptr.sub29, %53, !dbg !20535
  %54 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20535, !tbaa !2442
  %alignment_mask32 = getelementptr inbounds %struct.obstack, %struct.obstack* %54, i32 0, i32 6, !dbg !20535, !ctir !1564
  %55 = load i64, i64* %alignment_mask32, align 8, !dbg !20535, !tbaa !5069, !ctir !149
  %neg33 = xor i64 %55, -1, !dbg !20535
  %and34 = and i64 %add31, %neg33, !dbg !20535
  %add.ptr35 = getelementptr inbounds i8, i8* null, i64 %and34, !dbg !20535
  %cmp36 = icmp eq i8* %50, %add.ptr35, !dbg !20536
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !20537

if.then37:                                        ; preds = %land.lhs.true24
  %56 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20538, !tbaa !2442
  %prev38 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %56, i32 0, i32 1, !dbg !20540, !ctir !1569
  %57 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev38, align 8, !dbg !20540, !tbaa !2442, !ctir !1568
  %58 = load %struct._obstack_chunk*, %struct._obstack_chunk** %new_chunk, align 8, !dbg !20541, !tbaa !2442
  %prev39 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %58, i32 0, i32 1, !dbg !20542, !ctir !1569
  store %struct._obstack_chunk* %57, %struct._obstack_chunk** %prev39, align 8, !dbg !20543, !tbaa !2442, !ctir !1568
  %59 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20544, !tbaa !2442
  %60 = load %struct._obstack_chunk*, %struct._obstack_chunk** %old_chunk, align 8, !dbg !20545, !tbaa !2442
  %61 = bitcast %struct._obstack_chunk* %60 to i8*, !dbg !20545
  call void @call_freefun(%struct.obstack* %59, i8* %61), !dbg !20546
  br label %if.end40, !dbg !20547

if.end40:                                         ; preds = %if.then37, %land.lhs.true24, %if.end14
  %62 = load i8*, i8** %object_base1, align 8, !dbg !20548, !tbaa !2442
  %63 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20549, !tbaa !2442
  %object_base41 = getelementptr inbounds %struct.obstack, %struct.obstack* %63, i32 0, i32 2, !dbg !20550, !ctir !1564
  store i8* %62, i8** %object_base41, align 8, !dbg !20551, !tbaa !4746, !ctir !143
  %64 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20552, !tbaa !2442
  %object_base42 = getelementptr inbounds %struct.obstack, %struct.obstack* %64, i32 0, i32 2, !dbg !20553, !ctir !1564
  %65 = load i8*, i8** %object_base42, align 8, !dbg !20553, !tbaa !4746, !ctir !143
  %66 = load i64, i64* %obj_size, align 8, !dbg !20554, !tbaa !2579
  %add.ptr43 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !20555
  %67 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20556, !tbaa !2442
  %next_free44 = getelementptr inbounds %struct.obstack, %struct.obstack* %67, i32 0, i32 3, !dbg !20557, !ctir !1564
  store i8* %add.ptr43, i8** %next_free44, align 8, !dbg !20558, !tbaa !4744, !ctir !143
  %68 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20559, !tbaa !2442
  %maybe_empty_object45 = getelementptr inbounds %struct.obstack, %struct.obstack* %68, i32 0, i32 10, !dbg !20560, !ctir !1564
  %bf.load46 = load i8, i8* %maybe_empty_object45, align 8, !dbg !20561
  %bf.clear47 = and i8 %bf.load46, -3, !dbg !20561
  store i8 %bf.clear47, i8* %maybe_empty_object45, align 8, !dbg !20561
  ret void, !dbg !20562
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @call_freefun(%struct.obstack* %h, i8* %old_chunk) #0 !dbg !20563 !ctir !1603 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %old_chunk.addr = alloca i8*, align 8
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20564, metadata !DIExpression()), !dbg !20565
  store i8* %old_chunk, i8** %old_chunk.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %old_chunk.addr, metadata !20566, metadata !DIExpression()), !dbg !20567
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20568, !tbaa !2442
  %use_extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 10, !dbg !20570, !ctir !1564
  %bf.load = load i8, i8* %use_extra_arg, align 8, !dbg !20570
  %bf.clear = and i8 %bf.load, 1, !dbg !20570
  %bf.cast = zext i8 %bf.clear to i32, !dbg !20570
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !20568
  br i1 %tobool, label %if.then, label %if.else, !dbg !20571

if.then:                                          ; preds = %entry
  %1 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20572, !tbaa !2442
  %freefun = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 8, !dbg !20573, !ctir !1564
  %extra = bitcast %union.anon.1* %freefun to void (i8*, i8*)**, !dbg !20574
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %extra, align 8, !dbg !20574, !tbaa !2497, !ctir !1589
  %3 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20575, !tbaa !2442
  %extra_arg = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 9, !dbg !20576, !ctir !1564
  %4 = load i8*, i8** %extra_arg, align 8, !dbg !20576, !tbaa !20385, !ctir !167
  %5 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20577, !tbaa !2442
  call void %2(i8* %4, i8* %5), !dbg !20572
  br label %if.end, !dbg !20572

if.else:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20578, !tbaa !2442
  %freefun1 = getelementptr inbounds %struct.obstack, %struct.obstack* %6, i32 0, i32 8, !dbg !20579, !ctir !1564
  %plain = bitcast %union.anon.1* %freefun1 to void (i8*)**, !dbg !20580
  %7 = load void (i8*)*, void (i8*)** %plain, align 8, !dbg !20580, !tbaa !2497, !ctir !1589
  %8 = load i8*, i8** %old_chunk.addr, align 8, !dbg !20581, !tbaa !2442
  call void %7(i8* %8), !dbg !20578
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20582
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @_obstack_allocated_p(%struct.obstack* %h, i8* %obj) #9 !dbg !20583 !ctir !1601 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20584, metadata !DIExpression()), !dbg !20585
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20586, metadata !DIExpression()), !dbg !20587
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20588, metadata !DIExpression()), !dbg !20589
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20590, metadata !DIExpression()), !dbg !20591
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20592, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20593, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20593, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20594, !tbaa !2442
  br label %while.cond, !dbg !20595

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20596, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20597
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20598

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20599, !tbaa !2442
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20600
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20601, !tbaa !2442
  %cmp1 = icmp uge i8* %4, %5, !dbg !20602
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20603

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20604, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20605, !ctir !1569
  %7 = load i8*, i8** %limit, align 8, !dbg !20605, !tbaa !2442, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20606, !tbaa !2442
  %cmp2 = icmp ult i8* %7, %8, !dbg !20607
  br label %lor.end, !dbg !20603

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20608
  br i1 %10, label %while.body, label %while.end, !dbg !20595

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20609, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20611, !ctir !1569
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20611, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20612, !tbaa !2442
  %13 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20613, !tbaa !2442
  store %struct._obstack_chunk* %13, %struct._obstack_chunk** %lp, align 8, !dbg !20614, !tbaa !2442
  br label %while.cond, !dbg !20595, !llvm.loop !20615

while.end:                                        ; preds = %land.end
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20617, !tbaa !2442
  %cmp3 = icmp ne %struct._obstack_chunk* %14, null, !dbg !20618
  %conv = zext i1 %cmp3 to i32, !dbg !20618
  ret i32 %conv, !dbg !20619
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_obstack_free(%struct.obstack* %h, i8* %obj) #0 !dbg !20620 !ctir !1603 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %obj.addr = alloca i8*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %plp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20621, metadata !DIExpression()), !dbg !20622
  store i8* %obj, i8** %obj.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !20623, metadata !DIExpression()), !dbg !20624
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20625, metadata !DIExpression()), !dbg !20626
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %plp, metadata !20627, metadata !DIExpression()), !dbg !20628
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20629, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20630, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20630, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20631, !tbaa !2442
  br label %while.cond, !dbg !20632

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20633, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20634
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !20635

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20636, !tbaa !2442
  %4 = bitcast %struct._obstack_chunk* %3 to i8*, !dbg !20637
  %5 = load i8*, i8** %obj.addr, align 8, !dbg !20638, !tbaa !2442
  %cmp1 = icmp uge i8* %4, %5, !dbg !20639
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !20640

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20641, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %6, i32 0, i32 0, !dbg !20642, !ctir !1569
  %7 = load i8*, i8** %limit, align 8, !dbg !20642, !tbaa !2442, !ctir !143
  %8 = load i8*, i8** %obj.addr, align 8, !dbg !20643, !tbaa !2442
  %cmp2 = icmp ult i8* %7, %8, !dbg !20644
  br label %lor.end, !dbg !20640

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %9, %lor.end ], !dbg !20645
  br i1 %10, label %while.body, label %while.end, !dbg !20632

while.body:                                       ; preds = %land.end
  %11 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20646, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %11, i32 0, i32 1, !dbg !20648, !ctir !1569
  %12 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20648, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %12, %struct._obstack_chunk** %plp, align 8, !dbg !20649, !tbaa !2442
  %13 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20650, !tbaa !2442
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20651, !tbaa !2442
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !20651
  call void @call_freefun(%struct.obstack* %13, i8* %15), !dbg !20652
  %16 = load %struct._obstack_chunk*, %struct._obstack_chunk** %plp, align 8, !dbg !20653, !tbaa !2442
  store %struct._obstack_chunk* %16, %struct._obstack_chunk** %lp, align 8, !dbg !20654, !tbaa !2442
  %17 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20655, !tbaa !2442
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10, !dbg !20656, !ctir !1564
  %bf.load = load i8, i8* %maybe_empty_object, align 8, !dbg !20657
  %bf.clear = and i8 %bf.load, -3, !dbg !20657
  %bf.set = or i8 %bf.clear, 2, !dbg !20657
  store i8 %bf.set, i8* %maybe_empty_object, align 8, !dbg !20657
  br label %while.cond, !dbg !20632, !llvm.loop !20658

while.end:                                        ; preds = %land.end
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20660, !tbaa !2442
  %tobool = icmp ne %struct._obstack_chunk* %18, null, !dbg !20660
  br i1 %tobool, label %if.then, label %if.else, !dbg !20662

if.then:                                          ; preds = %while.end
  %19 = load i8*, i8** %obj.addr, align 8, !dbg !20663, !tbaa !2442
  %20 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20665, !tbaa !2442
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 3, !dbg !20666, !ctir !1564
  store i8* %19, i8** %next_free, align 8, !dbg !20667, !tbaa !4744, !ctir !143
  %21 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20668, !tbaa !2442
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 2, !dbg !20669, !ctir !1564
  store i8* %19, i8** %object_base, align 8, !dbg !20670, !tbaa !4746, !ctir !143
  %22 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20671, !tbaa !2442
  %limit3 = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %22, i32 0, i32 0, !dbg !20672, !ctir !1569
  %23 = load i8*, i8** %limit3, align 8, !dbg !20672, !tbaa !2442, !ctir !143
  %24 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20673, !tbaa !2442
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 4, !dbg !20674, !ctir !1564
  store i8* %23, i8** %chunk_limit, align 8, !dbg !20675, !tbaa !5073, !ctir !143
  %25 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20676, !tbaa !2442
  %26 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20677, !tbaa !2442
  %chunk4 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 1, !dbg !20678, !ctir !1564
  store %struct._obstack_chunk* %25, %struct._obstack_chunk** %chunk4, align 8, !dbg !20679, !tbaa !5072, !ctir !1568
  br label %if.end7, !dbg !20680

if.else:                                          ; preds = %while.end
  %27 = load i8*, i8** %obj.addr, align 8, !dbg !20681, !tbaa !2442
  %cmp5 = icmp ne i8* %27, null, !dbg !20683
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20684

if.then6:                                         ; preds = %if.else
  call void @abort() #15, !dbg !20685
  unreachable, !dbg !20685

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !20686
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @_obstack_memory_used(%struct.obstack* %h) #9 !dbg !20687 !ctir !1605 {
entry:
  %h.addr = alloca %struct.obstack*, align 8
  %lp = alloca %struct._obstack_chunk*, align 8, !ctir !1568
  %nbytes = alloca i64, align 8, !ctir !149
  store %struct.obstack* %h, %struct.obstack** %h.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.obstack** %h.addr, metadata !20688, metadata !DIExpression()), !dbg !20689
  call void @llvm.dbg.declare(metadata %struct._obstack_chunk** %lp, metadata !20690, metadata !DIExpression()), !dbg !20691
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20692, metadata !DIExpression()), !dbg !20693
  store i64 0, i64* %nbytes, align 8, !dbg !20693, !tbaa !2579
  %0 = load %struct.obstack*, %struct.obstack** %h.addr, align 8, !dbg !20694, !tbaa !2442
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %0, i32 0, i32 1, !dbg !20696, !ctir !1564
  %1 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8, !dbg !20696, !tbaa !5072, !ctir !1568
  store %struct._obstack_chunk* %1, %struct._obstack_chunk** %lp, align 8, !dbg !20697, !tbaa !2442
  br label %for.cond, !dbg !20698

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20699, !tbaa !2442
  %cmp = icmp ne %struct._obstack_chunk* %2, null, !dbg !20701
  br i1 %cmp, label %for.body, label %for.end, !dbg !20702

for.body:                                         ; preds = %for.cond
  %3 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20703, !tbaa !2442
  %limit = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %3, i32 0, i32 0, !dbg !20705, !ctir !1569
  %4 = load i8*, i8** %limit, align 8, !dbg !20705, !tbaa !2442, !ctir !143
  %5 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20706, !tbaa !2442
  %6 = bitcast %struct._obstack_chunk* %5 to i8*, !dbg !20707
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !20708
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !20708
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20708
  %7 = load i64, i64* %nbytes, align 8, !dbg !20709, !tbaa !2579
  %add = add i64 %7, %sub.ptr.sub, !dbg !20709
  store i64 %add, i64* %nbytes, align 8, !dbg !20709, !tbaa !2579
  br label %for.inc, !dbg !20710

for.inc:                                          ; preds = %for.body
  %8 = load %struct._obstack_chunk*, %struct._obstack_chunk** %lp, align 8, !dbg !20711, !tbaa !2442
  %prev = getelementptr inbounds %struct._obstack_chunk, %struct._obstack_chunk* %8, i32 0, i32 1, !dbg !20712, !ctir !1569
  %9 = load %struct._obstack_chunk*, %struct._obstack_chunk** %prev, align 8, !dbg !20712, !tbaa !2442, !ctir !1568
  store %struct._obstack_chunk* %9, %struct._obstack_chunk** %lp, align 8, !dbg !20713, !tbaa !2442
  br label %for.cond, !dbg !20714, !llvm.loop !20715

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %nbytes, align 8, !dbg !20717, !tbaa !2579
  ret i64 %10, !dbg !20718
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm_zone* @tzalloc(i8* %name) #0 !dbg !20719 !ctir !2181 {
entry:
  %name.addr = alloca i8*, align 8
  %name_size = alloca i64, align 8, !ctir !149
  %abbr_size = alloca i64, align 8, !ctir !149
  %tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  store i8* %name, i8** %name.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20720, metadata !DIExpression()), !dbg !20721
  call void @llvm.dbg.declare(metadata i64* %name_size, metadata !20722, metadata !DIExpression()), !dbg !20723
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20724, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !20724
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20724

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20725, !tbaa !2442
  %call = call i64 @strlen(i8* %1) #16, !dbg !20726
  %add = add i64 %call, 1, !dbg !20727
  br label %cond.end, !dbg !20724

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20724

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !20724
  store i64 %cond, i64* %name_size, align 8, !dbg !20723, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %abbr_size, metadata !20728, metadata !DIExpression()), !dbg !20729
  %2 = load i64, i64* %name_size, align 8, !dbg !20730, !tbaa !2579
  %cmp = icmp ult i64 %2, 119, !dbg !20731
  br i1 %cmp, label %cond.true1, label %cond.false2, !dbg !20730

cond.true1:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !20730

cond.false2:                                      ; preds = %cond.end
  %3 = load i64, i64* %name_size, align 8, !dbg !20732, !tbaa !2579
  %add3 = add i64 %3, 1, !dbg !20733
  br label %cond.end4, !dbg !20730

cond.end4:                                        ; preds = %cond.false2, %cond.true1
  %cond5 = phi i64 [ 119, %cond.true1 ], [ %add3, %cond.false2 ], !dbg !20730
  store i64 %cond5, i64* %abbr_size, align 8, !dbg !20729, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz, metadata !20734, metadata !DIExpression()), !dbg !20735
  %4 = load i64, i64* %abbr_size, align 8, !dbg !20736, !tbaa !2579
  %add6 = add i64 16, %4, !dbg !20736
  %and = and i64 %add6, -8, !dbg !20736
  %call7 = call noalias i8* @malloc(i64 %and) #13, !dbg !20737
  %5 = bitcast i8* %call7 to %struct.tm_zone*, !dbg !20737
  store %struct.tm_zone* %5, %struct.tm_zone** %tz, align 8, !dbg !20735, !tbaa !2442
  %6 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20738, !tbaa !2442
  %tobool8 = icmp ne %struct.tm_zone* %6, null, !dbg !20738
  br i1 %tobool8, label %if.then, label %if.end14, !dbg !20740

if.then:                                          ; preds = %cond.end4
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20741, !tbaa !2442
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %7, i32 0, i32 0, !dbg !20743, !ctir !2185
  store %struct.tm_zone* null, %struct.tm_zone** %next, align 8, !dbg !20744, !tbaa !2442, !ctir !2184
  %8 = load i8*, i8** %name.addr, align 8, !dbg !20745, !tbaa !2442
  %tobool9 = icmp ne i8* %8, null, !dbg !20746
  %lnot = xor i1 %tobool9, true, !dbg !20746
  %lnot10 = xor i1 %lnot, true, !dbg !20747
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !20747
  %conv = trunc i32 %lnot.ext to i8, !dbg !20747
  %9 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20748, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %9, i32 0, i32 1, !dbg !20749, !ctir !2185
  store i8 %conv, i8* %tz_is_set, align 8, !dbg !20750, !tbaa !2497, !ctir !144
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20751, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %10, i32 0, i32 2, !dbg !20752, !ctir !2185
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20751, !ctir !361
  store i8 0, i8* %arrayidx, align 1, !dbg !20753, !tbaa !2497
  %11 = load i8*, i8** %name.addr, align 8, !dbg !20754, !tbaa !2442
  %tobool11 = icmp ne i8* %11, null, !dbg !20754
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !20756

if.then12:                                        ; preds = %if.then
  %12 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20757, !tbaa !2442
  %abbrs13 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %12, i32 0, i32 2, !dbg !20758, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs13, i64 0, i64 0, !dbg !20757
  %13 = load i8*, i8** %name.addr, align 8, !dbg !20759, !tbaa !2442
  %14 = load i64, i64* %name_size, align 8, !dbg !20760, !tbaa !2579
  call void @extend_abbrs(i8* %arraydecay, i8* %13, i64 %14), !dbg !20761
  br label %if.end, !dbg !20761

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end14, !dbg !20762

if.end14:                                         ; preds = %if.end, %cond.end4
  %15 = load %struct.tm_zone*, %struct.tm_zone** %tz, align 8, !dbg !20763, !tbaa !2442
  ret %struct.tm_zone* %15, !dbg !20764
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extend_abbrs(i8* %abbrs, i8* %abbr, i64 %abbr_size) #0 !dbg !20765 !ctir !2212 {
entry:
  %abbrs.addr = alloca i8*, align 8
  %abbr.addr = alloca i8*, align 8
  %abbr_size.addr = alloca i64, align 8
  store i8* %abbrs, i8** %abbrs.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %abbrs.addr, metadata !20766, metadata !DIExpression()), !dbg !20767
  store i8* %abbr, i8** %abbr.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %abbr.addr, metadata !20768, metadata !DIExpression()), !dbg !20769
  store i64 %abbr_size, i64* %abbr_size.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %abbr_size.addr, metadata !20770, metadata !DIExpression()), !dbg !20771
  %0 = load i8*, i8** %abbrs.addr, align 8, !dbg !20772, !tbaa !2442
  %1 = load i8*, i8** %abbr.addr, align 8, !dbg !20773, !tbaa !2442
  %2 = load i64, i64* %abbr_size.addr, align 8, !dbg !20774, !tbaa !2579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false), !dbg !20775
  %3 = load i8*, i8** %abbrs.addr, align 8, !dbg !20776, !tbaa !2442
  %4 = load i64, i64* %abbr_size.addr, align 8, !dbg !20777, !tbaa !2579
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !20776, !ctir !143
  store i8 0, i8* %arrayidx, align 1, !dbg !20778, !tbaa !2497
  ret void, !dbg !20779
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @tzfree(%struct.tm_zone* %tz) #0 !dbg !20780 !ctir !2190 {
entry:
  %tz.addr = alloca %struct.tm_zone*, align 8
  %next = alloca %struct.tm_zone*, align 8, !ctir !2183
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20781, metadata !DIExpression()), !dbg !20782
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20783, !tbaa !2442
  %cmp = icmp ne %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !20785
  br i1 %cmp, label %if.then, label %if.end, !dbg !20786

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !20787

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20788, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %1, null, !dbg !20787
  br i1 %tobool, label %while.body, label %while.end, !dbg !20787

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %next, metadata !20789, metadata !DIExpression()), !dbg !20791
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20792, !tbaa !2442
  %next1 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 0, !dbg !20793, !ctir !2185
  %3 = load %struct.tm_zone*, %struct.tm_zone** %next1, align 8, !dbg !20793, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %3, %struct.tm_zone** %next, align 8, !dbg !20791, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20794, !tbaa !2442
  %5 = bitcast %struct.tm_zone* %4 to i8*, !dbg !20794
  call void @free(i8* %5) #13, !dbg !20795
  %6 = load %struct.tm_zone*, %struct.tm_zone** %next, align 8, !dbg !20796, !tbaa !2442
  store %struct.tm_zone* %6, %struct.tm_zone** %tz.addr, align 8, !dbg !20797, !tbaa !2442
  br label %while.cond, !dbg !20787, !llvm.loop !20798

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !20787

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !20800
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.tm* @localtime_rz(%struct.tm_zone* %tz, i64* nonnull %t, %struct.tm* nonnull %tm) #0 !dbg !20801 !ctir !2192 {
entry:
  %retval = alloca %struct.tm*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %t.addr = alloca i64*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %abbr_saved = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20802, metadata !DIExpression()), !dbg !20803
  store i64* %t, i64** %t.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !20804, metadata !DIExpression()), !dbg !20805
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20806, metadata !DIExpression()), !dbg !20807
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20808, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !20808
  br i1 %tobool, label %if.else, label %if.then, !dbg !20810

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %t.addr, align 8, !dbg !20811, !tbaa !2442
  %2 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20812, !tbaa !2442
  %call = call %struct.tm* @gmtime_r(i64* %1, %struct.tm* %2) #13, !dbg !20813
  store %struct.tm* %call, %struct.tm** %retval, align 8, !dbg !20814
  br label %return, !dbg !20814

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20815, metadata !DIExpression()), !dbg !20817
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20818, !tbaa !2442
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %3), !dbg !20819
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !20817, !tbaa !2442
  %4 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20820, !tbaa !2442
  %tobool2 = icmp ne %struct.tm_zone* %4, null, !dbg !20820
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !20822

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %abbr_saved, metadata !20823, metadata !DIExpression()), !dbg !20825
  %5 = load i64*, i64** %t.addr, align 8, !dbg !20826, !tbaa !2442
  %6 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20827, !tbaa !2442
  %call4 = call %struct.tm* @localtime_r(i64* %5, %struct.tm* %6) #13, !dbg !20828
  %tobool5 = icmp ne %struct.tm* %call4, null, !dbg !20828
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !20829

land.rhs:                                         ; preds = %if.then3
  %7 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20830, !tbaa !2442
  %8 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20831, !tbaa !2442
  %call6 = call zeroext i1 @save_abbr(%struct.tm_zone* %7, %struct.tm* %8), !dbg !20832
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then3
  %9 = phi i1 [ false, %if.then3 ], [ %call6, %land.rhs ], !dbg !20833
  %frombool = zext i1 %9 to i8, !dbg !20825
  store i8 %frombool, i8* %abbr_saved, align 1, !dbg !20825, !tbaa !2461
  %10 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20834, !tbaa !2442
  %call7 = call zeroext i1 @revert_tz(%struct.tm_zone* %10), !dbg !20836
  br i1 %call7, label %land.lhs.true, label %if.end, !dbg !20837

land.lhs.true:                                    ; preds = %land.end
  %11 = load i8, i8* %abbr_saved, align 1, !dbg !20838, !tbaa !2461
  %tobool8 = trunc i8 %11 to i1, !dbg !20838
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !20839

if.then9:                                         ; preds = %land.lhs.true
  %12 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20840, !tbaa !2442
  store %struct.tm* %12, %struct.tm** %retval, align 8, !dbg !20841
  br label %return, !dbg !20841

if.end:                                           ; preds = %land.lhs.true, %land.end
  br label %if.end10, !dbg !20842

if.end10:                                         ; preds = %if.end, %if.else
  store %struct.tm* null, %struct.tm** %retval, align 8, !dbg !20843
  br label %return, !dbg !20843

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %13 = load %struct.tm*, %struct.tm** %retval, align 8, !dbg !20844
  ret %struct.tm* %13, !dbg !20844
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @gmtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.tm_zone* @set_tz(%struct.tm_zone* %tz) #0 !dbg !20845 !ctir !2214 {
entry:
  %retval = alloca %struct.tm_zone*, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %env_tz = alloca i8*, align 8, !ctir !143
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %saved_errno = alloca i32, align 4, !ctir !27
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20846, metadata !DIExpression()), !dbg !20847
  call void @llvm.dbg.declare(metadata i8** %env_tz, metadata !20848, metadata !DIExpression()), !dbg !20849
  %call = call i8* @getenv_TZ(), !dbg !20850
  store i8* %call, i8** %env_tz, align 8, !dbg !20849, !tbaa !2442
  %0 = load i8*, i8** %env_tz, align 8, !dbg !20851, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !20851
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20853

cond.true:                                        ; preds = %entry
  %1 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20854, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %1, i32 0, i32 1, !dbg !20855, !ctir !2185
  %2 = load i8, i8* %tz_is_set, align 8, !dbg !20855, !tbaa !2497, !ctir !144
  %conv = sext i8 %2 to i32, !dbg !20854
  %tobool1 = icmp ne i32 %conv, 0, !dbg !20854
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !20856

land.lhs.true:                                    ; preds = %cond.true
  %3 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20857, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %3, i32 0, i32 2, !dbg !20858, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20857
  %4 = load i8*, i8** %env_tz, align 8, !dbg !20859, !tbaa !2442
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* %4) #16, !dbg !20860
  %cmp = icmp eq i32 %call2, 0, !dbg !20861
  br i1 %cmp, label %if.then, label %if.else, !dbg !20851

cond.false:                                       ; preds = %entry
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20862, !tbaa !2442
  %tz_is_set4 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %5, i32 0, i32 1, !dbg !20863, !ctir !2185
  %6 = load i8, i8* %tz_is_set4, align 8, !dbg !20863, !tbaa !2497, !ctir !144
  %tobool5 = icmp ne i8 %6, 0, !dbg !20862
  br i1 %tobool5, label %if.else, label %if.then, !dbg !20853

if.then:                                          ; preds = %cond.false, %land.lhs.true
  store %struct.tm_zone* inttoptr (i64 1 to %struct.tm_zone*), %struct.tm_zone** %retval, align 8, !dbg !20864
  br label %return, !dbg !20864

if.else:                                          ; preds = %cond.false, %land.lhs.true, %cond.true
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !20865, metadata !DIExpression()), !dbg !20867
  %7 = load i8*, i8** %env_tz, align 8, !dbg !20868, !tbaa !2442
  %call6 = call %struct.tm_zone* @tzalloc(i8* %7), !dbg !20869
  store %struct.tm_zone* %call6, %struct.tm_zone** %old_tz, align 8, !dbg !20867, !tbaa !2442
  %8 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20870, !tbaa !2442
  %tobool7 = icmp ne %struct.tm_zone* %8, null, !dbg !20870
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !20872

if.then8:                                         ; preds = %if.else
  %9 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20873, !tbaa !2442
  store %struct.tm_zone* %9, %struct.tm_zone** %retval, align 8, !dbg !20874
  br label %return, !dbg !20874

if.end:                                           ; preds = %if.else
  %10 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20875, !tbaa !2442
  %call9 = call zeroext i1 @change_env(%struct.tm_zone* %10), !dbg !20877
  br i1 %call9, label %if.end13, label %if.then10, !dbg !20878

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20879, metadata !DIExpression()), !dbg !20881
  %call11 = call i32* @__errno_location() #17, !dbg !20882
  %11 = load i32, i32* %call11, align 4, !dbg !20882, !tbaa !2436, !ctir !27
  store i32 %11, i32* %saved_errno, align 4, !dbg !20881, !tbaa !2436
  %12 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20883, !tbaa !2442
  call void @tzfree(%struct.tm_zone* %12), !dbg !20884
  %13 = load i32, i32* %saved_errno, align 4, !dbg !20885, !tbaa !2436
  %call12 = call i32* @__errno_location() #17, !dbg !20886
  store i32 %13, i32* %call12, align 4, !dbg !20887, !tbaa !2436, !ctir !27
  store %struct.tm_zone* null, %struct.tm_zone** %retval, align 8, !dbg !20888
  br label %return, !dbg !20888

if.end13:                                         ; preds = %if.end
  %14 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !20889, !tbaa !2442
  store %struct.tm_zone* %14, %struct.tm_zone** %retval, align 8, !dbg !20890
  br label %return, !dbg !20890

return:                                           ; preds = %if.end13, %if.then10, %if.then8, %if.then
  %15 = load %struct.tm_zone*, %struct.tm_zone** %retval, align 8, !dbg !20891
  ret %struct.tm_zone* %15, !dbg !20891
}

; Function Attrs: nounwind
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @save_abbr(%struct.tm_zone* %tz, %struct.tm* %tm) #0 !dbg !20892 !ctir !2220 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %zone = alloca i8*, align 8, !ctir !146
  %zone_copy = alloca i8*, align 8, !ctir !143
  %zone_size = alloca i64, align 8, !ctir !149
  %zone_used = alloca i64, align 8, !ctir !149
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !20893, metadata !DIExpression()), !dbg !20894
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !20895, metadata !DIExpression()), !dbg !20896
  call void @llvm.dbg.declare(metadata i8** %zone, metadata !20897, metadata !DIExpression()), !dbg !20898
  store i8* null, i8** %zone, align 8, !dbg !20898, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %zone_copy, metadata !20899, metadata !DIExpression()), !dbg !20900
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.513, i64 0, i64 0), i8** %zone_copy, align 8, !dbg !20900, !tbaa !2442
  %0 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20901, !tbaa !2442
  %tm_zone = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 10, !dbg !20902, !ctir !2195
  %1 = load i8*, i8** %tm_zone, align 8, !dbg !20902, !tbaa !15644, !ctir !146
  store i8* %1, i8** %zone, align 8, !dbg !20903, !tbaa !2442
  %2 = load i8*, i8** %zone, align 8, !dbg !20904, !tbaa !2442
  %tobool = icmp ne i8* %2, null, !dbg !20904
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20906

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20907, !tbaa !2442
  %4 = bitcast %struct.tm* %3 to i8*, !dbg !20908
  %5 = load i8*, i8** %zone, align 8, !dbg !20909, !tbaa !2442
  %cmp = icmp ule i8* %4, %5, !dbg !20910
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20911

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load i8*, i8** %zone, align 8, !dbg !20912, !tbaa !2442
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !20913, !tbaa !2442
  %add.ptr = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 1, !dbg !20914
  %8 = bitcast %struct.tm* %add.ptr to i8*, !dbg !20915
  %cmp1 = icmp ult i8* %6, %8, !dbg !20916
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20917

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 true, i1* %retval, align 1, !dbg !20918
  br label %return, !dbg !20918

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load i8*, i8** %zone, align 8, !dbg !20919, !tbaa !2442
  %10 = load i8, i8* %9, align 1, !dbg !20921, !tbaa !2497, !ctir !147
  %tobool2 = icmp ne i8 %10, 0, !dbg !20921
  br i1 %tobool2, label %if.then3, label %if.end48, !dbg !20922

if.then3:                                         ; preds = %if.end
  %11 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20923, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %11, i32 0, i32 2, !dbg !20925, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !20923
  store i8* %arraydecay, i8** %zone_copy, align 8, !dbg !20926, !tbaa !2442
  br label %while.cond, !dbg !20927

while.cond:                                       ; preds = %if.end47, %if.then3
  %12 = load i8*, i8** %zone_copy, align 8, !dbg !20928, !tbaa !2442
  %13 = load i8*, i8** %zone, align 8, !dbg !20929, !tbaa !2442
  %call = call i32 @strcmp(i8* %12, i8* %13) #16, !dbg !20930
  %cmp4 = icmp ne i32 %call, 0, !dbg !20931
  br i1 %cmp4, label %while.body, label %while.end, !dbg !20927

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %zone_copy, align 8, !dbg !20932, !tbaa !2442
  %15 = load i8, i8* %14, align 1, !dbg !20935, !tbaa !2497, !ctir !144
  %conv = sext i8 %15 to i32, !dbg !20935
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20935
  br i1 %tobool5, label %if.end35, label %lor.lhs.false6, !dbg !20936

lor.lhs.false6:                                   ; preds = %while.body
  %16 = load i8*, i8** %zone_copy, align 8, !dbg !20937, !tbaa !2442
  %17 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20938, !tbaa !2442
  %abbrs7 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %17, i32 0, i32 2, !dbg !20939, !ctir !2185
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs7, i64 0, i64 0, !dbg !20938
  %cmp9 = icmp eq i8* %16, %arraydecay8, !dbg !20940
  br i1 %cmp9, label %land.lhs.true11, label %if.then14, !dbg !20941

land.lhs.true11:                                  ; preds = %lor.lhs.false6
  %18 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20942, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %18, i32 0, i32 1, !dbg !20943, !ctir !2185
  %19 = load i8, i8* %tz_is_set, align 8, !dbg !20943, !tbaa !2497, !ctir !144
  %conv12 = sext i8 %19 to i32, !dbg !20942
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !20942
  br i1 %tobool13, label %if.end35, label %if.then14, !dbg !20944

if.then14:                                        ; preds = %land.lhs.true11, %lor.lhs.false6
  call void @llvm.dbg.declare(metadata i64* %zone_size, metadata !20945, metadata !DIExpression()), !dbg !20947
  %20 = load i8*, i8** %zone, align 8, !dbg !20948, !tbaa !2442
  %call15 = call i64 @strlen(i8* %20) #16, !dbg !20949
  %add = add i64 %call15, 1, !dbg !20950
  store i64 %add, i64* %zone_size, align 8, !dbg !20947, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %zone_used, metadata !20951, metadata !DIExpression()), !dbg !20952
  %21 = load i8*, i8** %zone_copy, align 8, !dbg !20953, !tbaa !2442
  %22 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20954, !tbaa !2442
  %abbrs16 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %22, i32 0, i32 2, !dbg !20955, !ctir !2185
  %arraydecay17 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs16, i64 0, i64 0, !dbg !20954
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64, !dbg !20956
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay17 to i64, !dbg !20956
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20956
  store i64 %sub.ptr.sub, i64* %zone_used, align 8, !dbg !20952, !tbaa !2579
  %23 = load i64, i64* %zone_used, align 8, !dbg !20957, !tbaa !2579
  %sub = sub i64 -1, %23, !dbg !20959
  %24 = load i64, i64* %zone_size, align 8, !dbg !20960, !tbaa !2579
  %cmp18 = icmp ult i64 %sub, %24, !dbg !20961
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !20962

if.then20:                                        ; preds = %if.then14
  %call21 = call i32* @__errno_location() #17, !dbg !20963
  store i32 12, i32* %call21, align 4, !dbg !20965, !tbaa !2436, !ctir !27
  store i1 false, i1* %retval, align 1, !dbg !20966
  br label %return, !dbg !20966

if.end22:                                         ; preds = %if.then14
  %25 = load i64, i64* %zone_used, align 8, !dbg !20967, !tbaa !2579
  %26 = load i64, i64* %zone_size, align 8, !dbg !20969, !tbaa !2579
  %add23 = add i64 %25, %26, !dbg !20970
  %cmp24 = icmp ult i64 %add23, 119, !dbg !20971
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !20972

if.then26:                                        ; preds = %if.end22
  %27 = load i8*, i8** %zone_copy, align 8, !dbg !20973, !tbaa !2442
  %28 = load i8*, i8** %zone, align 8, !dbg !20974, !tbaa !2442
  %29 = load i64, i64* %zone_size, align 8, !dbg !20975, !tbaa !2579
  call void @extend_abbrs(i8* %27, i8* %28, i64 %29), !dbg !20976
  br label %if.end34, !dbg !20976

if.else:                                          ; preds = %if.end22
  %30 = load i8*, i8** %zone, align 8, !dbg !20977, !tbaa !2442
  %call27 = call %struct.tm_zone* @tzalloc(i8* %30), !dbg !20979
  %31 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20980, !tbaa !2442
  %next = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %31, i32 0, i32 0, !dbg !20981, !ctir !2185
  store %struct.tm_zone* %call27, %struct.tm_zone** %next, align 8, !dbg !20982, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %call27, %struct.tm_zone** %tz.addr, align 8, !dbg !20983, !tbaa !2442
  %32 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20984, !tbaa !2442
  %tobool28 = icmp ne %struct.tm_zone* %32, null, !dbg !20984
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !20986

if.then29:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !20987
  br label %return, !dbg !20987

if.end30:                                         ; preds = %if.else
  %33 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20988, !tbaa !2442
  %tz_is_set31 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %33, i32 0, i32 1, !dbg !20989, !ctir !2185
  store i8 0, i8* %tz_is_set31, align 8, !dbg !20990, !tbaa !2497, !ctir !144
  %34 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !20991, !tbaa !2442
  %abbrs32 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %34, i32 0, i32 2, !dbg !20992, !ctir !2185
  %arraydecay33 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs32, i64 0, i64 0, !dbg !20991
  store i8* %arraydecay33, i8** %zone_copy, align 8, !dbg !20993, !tbaa !2442
  br label %if.end34

if.end34:                                         ; preds = %if.end30, %if.then26
  br label %while.end, !dbg !20994

if.end35:                                         ; preds = %land.lhs.true11, %while.body
  %35 = load i8*, i8** %zone_copy, align 8, !dbg !20995, !tbaa !2442
  %call36 = call i64 @strlen(i8* %35) #16, !dbg !20996
  %add37 = add i64 %call36, 1, !dbg !20997
  %36 = load i8*, i8** %zone_copy, align 8, !dbg !20998, !tbaa !2442
  %add.ptr38 = getelementptr inbounds i8, i8* %36, i64 %add37, !dbg !20998
  store i8* %add.ptr38, i8** %zone_copy, align 8, !dbg !20998, !tbaa !2442
  %37 = load i8*, i8** %zone_copy, align 8, !dbg !20999, !tbaa !2442
  %38 = load i8, i8* %37, align 1, !dbg !21001, !tbaa !2497, !ctir !144
  %tobool39 = icmp ne i8 %38, 0, !dbg !21001
  br i1 %tobool39, label %if.end47, label %land.lhs.true40, !dbg !21002

land.lhs.true40:                                  ; preds = %if.end35
  %39 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21003, !tbaa !2442
  %next41 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %39, i32 0, i32 0, !dbg !21004, !ctir !2185
  %40 = load %struct.tm_zone*, %struct.tm_zone** %next41, align 8, !dbg !21004, !tbaa !2442, !ctir !2184
  %tobool42 = icmp ne %struct.tm_zone* %40, null, !dbg !21003
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !21005

if.then43:                                        ; preds = %land.lhs.true40
  %41 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21006, !tbaa !2442
  %next44 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %41, i32 0, i32 0, !dbg !21008, !ctir !2185
  %42 = load %struct.tm_zone*, %struct.tm_zone** %next44, align 8, !dbg !21008, !tbaa !2442, !ctir !2184
  store %struct.tm_zone* %42, %struct.tm_zone** %tz.addr, align 8, !dbg !21009, !tbaa !2442
  %43 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21010, !tbaa !2442
  %abbrs45 = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %43, i32 0, i32 2, !dbg !21011, !ctir !2185
  %arraydecay46 = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs45, i64 0, i64 0, !dbg !21010
  store i8* %arraydecay46, i8** %zone_copy, align 8, !dbg !21012, !tbaa !2442
  br label %if.end47, !dbg !21013

if.end47:                                         ; preds = %if.then43, %land.lhs.true40, %if.end35
  br label %while.cond, !dbg !20927, !llvm.loop !21014

while.end:                                        ; preds = %if.end34, %while.cond
  br label %if.end48, !dbg !21016

if.end48:                                         ; preds = %while.end, %if.end
  %44 = load i8*, i8** %zone_copy, align 8, !dbg !21017, !tbaa !2442
  %45 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21018, !tbaa !2442
  %tm_zone49 = getelementptr inbounds %struct.tm, %struct.tm* %45, i32 0, i32 10, !dbg !21019, !ctir !2195
  store i8* %44, i8** %tm_zone49, align 8, !dbg !21020, !tbaa !15644, !ctir !146
  store i1 true, i1* %retval, align 1, !dbg !21021
  br label %return, !dbg !21021

return:                                           ; preds = %if.end48, %if.then29, %if.then20, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !21022
  ret i1 %46, !dbg !21022
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @revert_tz(%struct.tm_zone* %tz) #0 !dbg !21023 !ctir !2216 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %ok = alloca i8, align 1, !ctir !141
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21024, metadata !DIExpression()), !dbg !21025
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21026, !tbaa !2442
  %cmp = icmp eq %struct.tm_zone* %0, inttoptr (i64 1 to %struct.tm_zone*), !dbg !21028
  br i1 %cmp, label %if.then, label %if.else, !dbg !21029

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21030
  br label %return, !dbg !21030

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21031, metadata !DIExpression()), !dbg !21033
  %call = call i32* @__errno_location() #17, !dbg !21034
  %1 = load i32, i32* %call, align 4, !dbg !21034, !tbaa !2436, !ctir !27
  store i32 %1, i32* %saved_errno, align 4, !dbg !21033, !tbaa !2436
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !21035, metadata !DIExpression()), !dbg !21036
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21037, !tbaa !2442
  %call1 = call zeroext i1 @change_env(%struct.tm_zone* %2), !dbg !21038
  %frombool = zext i1 %call1 to i8, !dbg !21036
  store i8 %frombool, i8* %ok, align 1, !dbg !21036, !tbaa !2461
  %3 = load i8, i8* %ok, align 1, !dbg !21039, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !21039
  br i1 %tobool, label %if.end, label %if.then2, !dbg !21041

if.then2:                                         ; preds = %if.else
  %call3 = call i32* @__errno_location() #17, !dbg !21042
  %4 = load i32, i32* %call3, align 4, !dbg !21042, !tbaa !2436, !ctir !27
  store i32 %4, i32* %saved_errno, align 4, !dbg !21043, !tbaa !2436
  br label %if.end, !dbg !21044

if.end:                                           ; preds = %if.then2, %if.else
  %5 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21045, !tbaa !2442
  call void @tzfree(%struct.tm_zone* %5), !dbg !21046
  %6 = load i32, i32* %saved_errno, align 4, !dbg !21047, !tbaa !2436
  %call4 = call i32* @__errno_location() #17, !dbg !21048
  store i32 %6, i32* %call4, align 4, !dbg !21049, !tbaa !2436, !ctir !27
  %7 = load i8, i8* %ok, align 1, !dbg !21050, !tbaa !2461
  %tobool5 = trunc i8 %7 to i1, !dbg !21050
  store i1 %tobool5, i1* %retval, align 1, !dbg !21051
  br label %return, !dbg !21051

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !21052
  ret i1 %8, !dbg !21052
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_env(%struct.tm_zone* %tz) #0 !dbg !21053 !ctir !2216 {
entry:
  %retval = alloca i1, align 1
  %tz.addr = alloca %struct.tm_zone*, align 8
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21054, metadata !DIExpression()), !dbg !21055
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21056, !tbaa !2442
  %tz_is_set = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %0, i32 0, i32 1, !dbg !21058, !ctir !2185
  %1 = load i8, i8* %tz_is_set, align 8, !dbg !21058, !tbaa !2497, !ctir !144
  %conv = sext i8 %1 to i32, !dbg !21056
  %tobool = icmp ne i32 %conv, 0, !dbg !21056
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21056

cond.true:                                        ; preds = %entry
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21059, !tbaa !2442
  %abbrs = getelementptr inbounds %struct.tm_zone, %struct.tm_zone* %2, i32 0, i32 2, !dbg !21060, !ctir !2185
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %abbrs, i64 0, i64 0, !dbg !21059
  br label %cond.end, !dbg !21056

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21056

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !21056
  %call = call i32 @setenv_TZ(i8* %cond), !dbg !21061
  %cmp = icmp ne i32 %call, 0, !dbg !21062
  br i1 %cmp, label %if.then, label %if.end, !dbg !21063

if.then:                                          ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !21064
  br label %return, !dbg !21064

if.end:                                           ; preds = %cond.end
  call void @tzset() #13, !dbg !21065
  store i1 true, i1* %retval, align 1, !dbg !21066
  br label %return, !dbg !21066

return:                                           ; preds = %if.end, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !21067
  ret i1 %3, !dbg !21067
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setenv_TZ(i8* %tz) #0 !dbg !21068 !ctir !2218 {
entry:
  %tz.addr = alloca i8*, align 8
  store i8* %tz, i8** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %tz.addr, metadata !21069, metadata !DIExpression()), !dbg !21070
  %0 = load i8*, i8** %tz.addr, align 8, !dbg !21071, !tbaa !2442
  %tobool = icmp ne i8* %0, null, !dbg !21071
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21071

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %tz.addr, align 8, !dbg !21072, !tbaa !2442
  %call = call i32 @setenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.512, i64 0, i64 0), i8* %1, i32 1) #13, !dbg !21073
  br label %cond.end, !dbg !21071

cond.false:                                       ; preds = %entry
  %call1 = call i32 @unsetenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.512, i64 0, i64 0)) #13, !dbg !21074
  br label %cond.end, !dbg !21071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21071
  ret i32 %cond, !dbg !21075
}

; Function Attrs: nounwind
declare dso_local void @tzset() #2

; Function Attrs: nounwind
declare dso_local i32 @setenv(i8*, i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @unsetenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getenv_TZ() #0 !dbg !21076 !ctir !2123 {
entry:
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.512, i64 0, i64 0)) #13, !dbg !21077
  ret i8* %call, !dbg !21078
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mktime_z(%struct.tm_zone* %tz, %struct.tm* nonnull %tm) #0 !dbg !21079 !ctir !2210 {
entry:
  %retval = alloca i64, align 8
  %tz.addr = alloca %struct.tm_zone*, align 8
  %tm.addr = alloca %struct.tm*, align 8
  %old_tz = alloca %struct.tm_zone*, align 8, !ctir !2183
  %t = alloca i64, align 8, !ctir !162
  %badtime = alloca i64, align 8, !ctir !162
  %tm_1 = alloca %struct.tm, align 8, !ctir !2195
  store %struct.tm_zone* %tz, %struct.tm_zone** %tz.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %tz.addr, metadata !21080, metadata !DIExpression()), !dbg !21081
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !21082, metadata !DIExpression()), !dbg !21083
  %0 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21084, !tbaa !2442
  %tobool = icmp ne %struct.tm_zone* %0, null, !dbg !21084
  br i1 %tobool, label %if.else, label %if.then, !dbg !21086

if.then:                                          ; preds = %entry
  %1 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21087, !tbaa !2442
  %call = call i64 @timegm(%struct.tm* %1) #13, !dbg !21088
  store i64 %call, i64* %retval, align 8, !dbg !21089
  br label %return, !dbg !21089

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm_zone** %old_tz, metadata !21090, metadata !DIExpression()), !dbg !21092
  %2 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21093, !tbaa !2442
  %call1 = call %struct.tm_zone* @set_tz(%struct.tm_zone* %2), !dbg !21094
  store %struct.tm_zone* %call1, %struct.tm_zone** %old_tz, align 8, !dbg !21092, !tbaa !2442
  %3 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21095, !tbaa !2442
  %tobool2 = icmp ne %struct.tm_zone* %3, null, !dbg !21095
  br i1 %tobool2, label %if.then3, label %if.end15, !dbg !21097

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %t, metadata !21098, metadata !DIExpression()), !dbg !21100
  %4 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21101, !tbaa !2442
  %call4 = call i64 @mktime(%struct.tm* %4) #13, !dbg !21102
  store i64 %call4, i64* %t, align 8, !dbg !21100, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %badtime, metadata !21103, metadata !DIExpression()), !dbg !21104
  store i64 -1, i64* %badtime, align 8, !dbg !21104, !tbaa !2579
  call void @llvm.dbg.declare(metadata %struct.tm* %tm_1, metadata !21105, metadata !DIExpression()), !dbg !21106
  %5 = load i64, i64* %t, align 8, !dbg !21107, !tbaa !2579
  %6 = load i64, i64* %badtime, align 8, !dbg !21109, !tbaa !2579
  %cmp = icmp ne i64 %5, %6, !dbg !21110
  br i1 %cmp, label %land.lhs.true9, label %lor.lhs.false, !dbg !21111

lor.lhs.false:                                    ; preds = %if.then3
  %call5 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tm_1) #13, !dbg !21112
  %tobool6 = icmp ne %struct.tm* %call5, null, !dbg !21112
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !21113

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21114, !tbaa !2442
  %call7 = call i32 @equal_tm(%struct.tm* %7, %struct.tm* %tm_1), !dbg !21115
  %tobool8 = icmp ne i32 %call7, 0, !dbg !21115
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !21116

land.lhs.true9:                                   ; preds = %land.lhs.true, %if.then3
  %8 = load %struct.tm_zone*, %struct.tm_zone** %tz.addr, align 8, !dbg !21117, !tbaa !2442
  %9 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !21118, !tbaa !2442
  %call10 = call zeroext i1 @save_abbr(%struct.tm_zone* %8, %struct.tm* %9), !dbg !21119
  br i1 %call10, label %if.end, label %if.then11, !dbg !21120

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load i64, i64* %badtime, align 8, !dbg !21121, !tbaa !2579
  store i64 %10, i64* %t, align 8, !dbg !21122, !tbaa !2579
  br label %if.end, !dbg !21123

if.end:                                           ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %lor.lhs.false
  %11 = load %struct.tm_zone*, %struct.tm_zone** %old_tz, align 8, !dbg !21124, !tbaa !2442
  %call12 = call zeroext i1 @revert_tz(%struct.tm_zone* %11), !dbg !21126
  br i1 %call12, label %if.then13, label %if.end14, !dbg !21127

if.then13:                                        ; preds = %if.end
  %12 = load i64, i64* %t, align 8, !dbg !21128, !tbaa !2579
  store i64 %12, i64* %retval, align 8, !dbg !21129
  br label %return, !dbg !21129

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !21130

if.end15:                                         ; preds = %if.end14, %if.else
  store i64 -1, i64* %retval, align 8, !dbg !21131
  br label %return, !dbg !21131

return:                                           ; preds = %if.end15, %if.then13, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21132
  ret i64 %13, !dbg !21132
}

; Function Attrs: nounwind
declare dso_local i64 @timegm(%struct.tm*) #2

; Function Attrs: nounwind
declare dso_local i64 @mktime(%struct.tm*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @equal_tm(%struct.tm* %a, %struct.tm* %b) #0 !dbg !21133 !ctir !2222 {
entry:
  %a.addr = alloca %struct.tm*, align 8
  %b.addr = alloca %struct.tm*, align 8
  store %struct.tm* %a, %struct.tm** %a.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %a.addr, metadata !21134, metadata !DIExpression()), !dbg !21135
  store %struct.tm* %b, %struct.tm** %b.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct.tm** %b.addr, metadata !21136, metadata !DIExpression()), !dbg !21137
  %0 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21138, !tbaa !2442
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %0, i32 0, i32 0, !dbg !21139, !ctir !2225
  %1 = load i32, i32* %tm_sec, align 8, !dbg !21139, !tbaa !16500, !ctir !27
  %2 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21140, !tbaa !2442
  %tm_sec1 = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 0, !dbg !21141, !ctir !2225
  %3 = load i32, i32* %tm_sec1, align 8, !dbg !21141, !tbaa !16500, !ctir !27
  %xor = xor i32 %1, %3, !dbg !21142
  %4 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21143, !tbaa !2442
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 1, !dbg !21144, !ctir !2225
  %5 = load i32, i32* %tm_min, align 4, !dbg !21144, !tbaa !16412, !ctir !27
  %6 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21145, !tbaa !2442
  %tm_min2 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 1, !dbg !21146, !ctir !2225
  %7 = load i32, i32* %tm_min2, align 4, !dbg !21146, !tbaa !16412, !ctir !27
  %xor3 = xor i32 %5, %7, !dbg !21147
  %or = or i32 %xor, %xor3, !dbg !21148
  %8 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21149, !tbaa !2442
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2, !dbg !21150, !ctir !2225
  %9 = load i32, i32* %tm_hour, align 8, !dbg !21150, !tbaa !15631, !ctir !27
  %10 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21151, !tbaa !2442
  %tm_hour4 = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 2, !dbg !21152, !ctir !2225
  %11 = load i32, i32* %tm_hour4, align 8, !dbg !21152, !tbaa !15631, !ctir !27
  %xor5 = xor i32 %9, %11, !dbg !21153
  %or6 = or i32 %or, %xor5, !dbg !21154
  %12 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21155, !tbaa !2442
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 3, !dbg !21156, !ctir !2225
  %13 = load i32, i32* %tm_mday, align 4, !dbg !21156, !tbaa !16033, !ctir !27
  %14 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21157, !tbaa !2442
  %tm_mday7 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 3, !dbg !21158, !ctir !2225
  %15 = load i32, i32* %tm_mday7, align 4, !dbg !21158, !tbaa !16033, !ctir !27
  %xor8 = xor i32 %13, %15, !dbg !21159
  %or9 = or i32 %or6, %xor8, !dbg !21160
  %16 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21161, !tbaa !2442
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 4, !dbg !21162, !ctir !2225
  %17 = load i32, i32* %tm_mon, align 8, !dbg !21162, !tbaa !6836, !ctir !27
  %18 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21163, !tbaa !2442
  %tm_mon10 = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 4, !dbg !21164, !ctir !2225
  %19 = load i32, i32* %tm_mon10, align 8, !dbg !21164, !tbaa !6836, !ctir !27
  %xor11 = xor i32 %17, %19, !dbg !21165
  %or12 = or i32 %or9, %xor11, !dbg !21166
  %20 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21167, !tbaa !2442
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 5, !dbg !21168, !ctir !2225
  %21 = load i32, i32* %tm_year, align 4, !dbg !21168, !tbaa !15996, !ctir !27
  %22 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21169, !tbaa !2442
  %tm_year13 = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 5, !dbg !21170, !ctir !2225
  %23 = load i32, i32* %tm_year13, align 4, !dbg !21170, !tbaa !15996, !ctir !27
  %xor14 = xor i32 %21, %23, !dbg !21171
  %or15 = or i32 %or12, %xor14, !dbg !21172
  %24 = load %struct.tm*, %struct.tm** %a.addr, align 8, !dbg !21173, !tbaa !2442
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 8, !dbg !21174, !ctir !2225
  %25 = load i32, i32* %tm_isdst, align 8, !dbg !21174, !tbaa !16786, !ctir !27
  %26 = load %struct.tm*, %struct.tm** %b.addr, align 8, !dbg !21175, !tbaa !2442
  %tm_isdst16 = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 8, !dbg !21176, !ctir !2225
  %27 = load i32, i32* %tm_isdst16, align 8, !dbg !21176, !tbaa !16786, !ctir !27
  %call = call zeroext i1 @isdst_differ(i32 %25, i32 %27), !dbg !21177
  %conv = zext i1 %call to i32, !dbg !21177
  %or17 = or i32 %or15, %conv, !dbg !21178
  %tobool = icmp ne i32 %or17, 0, !dbg !21179
  %lnot = xor i1 %tobool, true, !dbg !21179
  %lnot.ext = zext i1 %lnot to i32, !dbg !21179
  ret i32 %lnot.ext, !dbg !21180
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @isdst_differ(i32 %a, i32 %b) #0 !dbg !21181 !ctir !2226 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21182, metadata !DIExpression()), !dbg !21183
  store i32 %b, i32* %b.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !21184, metadata !DIExpression()), !dbg !21185
  %0 = load i32, i32* %a.addr, align 4, !dbg !21186, !tbaa !2436
  %tobool = icmp ne i32 %0, 0, !dbg !21187
  %lnot = xor i1 %tobool, true, !dbg !21187
  %lnot.ext = zext i1 %lnot to i32, !dbg !21187
  %1 = load i32, i32* %b.addr, align 4, !dbg !21188, !tbaa !2436
  %tobool1 = icmp ne i32 %1, 0, !dbg !21189
  %lnot2 = xor i1 %tobool1, true, !dbg !21189
  %lnot.ext3 = zext i1 %lnot2 to i32, !dbg !21189
  %cmp = icmp ne i32 %lnot.ext, %lnot.ext3, !dbg !21190
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !21191

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !21192, !tbaa !2436
  %cmp4 = icmp sle i32 0, %2, !dbg !21193
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !21194

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %b.addr, align 4, !dbg !21195, !tbaa !2436
  %cmp5 = icmp sle i32 0, %3, !dbg !21196
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !21197
  ret i1 %4, !dbg !21198
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #12 !dbg !21199 !ctir !680 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !21201, metadata !DIExpression()), !dbg !21202
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !21203, !tbaa !2436
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !21204

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21205
  br label %return, !dbg !21205

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21207
  br label %return, !dbg !21207

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21208
  br label %return, !dbg !21208

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21209
  br label %return, !dbg !21209

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21210
  br label %return, !dbg !21210

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21211
  ret i1 %1, !dbg !21211
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #0 !dbg !21212 !ctir !2239 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21214, metadata !DIExpression()), !dbg !21215
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21216, metadata !DIExpression()), !dbg !21217
  %0 = load i64, i64* %x.addr, align 8, !dbg !21218, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21219, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21220
  %shl = shl i64 %0, %sh_prom, !dbg !21220
  %2 = load i64, i64* %x.addr, align 8, !dbg !21221, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21222, !tbaa !2436
  %sub = sub nsw i32 64, %3, !dbg !21223
  %sh_prom1 = zext i32 %sub to i64, !dbg !21224
  %shr = lshr i64 %2, %sh_prom1, !dbg !21224
  %or = or i64 %shl, %shr, !dbg !21225
  ret i64 %or, !dbg !21226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #0 !dbg !21227 !ctir !2239 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21228, metadata !DIExpression()), !dbg !21229
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21230, metadata !DIExpression()), !dbg !21231
  %0 = load i64, i64* %x.addr, align 8, !dbg !21232, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21233, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21234
  %shr = lshr i64 %0, %sh_prom, !dbg !21234
  %2 = load i64, i64* %x.addr, align 8, !dbg !21235, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21236, !tbaa !2436
  %sub = sub nsw i32 64, %3, !dbg !21237
  %sh_prom1 = zext i32 %sub to i64, !dbg !21238
  %shl = shl i64 %2, %sh_prom1, !dbg !21238
  %or = or i64 %shr, %shl, !dbg !21239
  ret i64 %or, !dbg !21240
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #0 !dbg !21241 !ctir !2244 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21242, metadata !DIExpression()), !dbg !21243
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21244, metadata !DIExpression()), !dbg !21245
  %0 = load i32, i32* %x.addr, align 4, !dbg !21246, !tbaa !2436
  %1 = load i32, i32* %n.addr, align 4, !dbg !21247, !tbaa !2436
  %shl = shl i32 %0, %1, !dbg !21248
  %2 = load i32, i32* %x.addr, align 4, !dbg !21249, !tbaa !2436
  %3 = load i32, i32* %n.addr, align 4, !dbg !21250, !tbaa !2436
  %sub = sub nsw i32 32, %3, !dbg !21251
  %shr = lshr i32 %2, %sub, !dbg !21252
  %or = or i32 %shl, %shr, !dbg !21253
  ret i32 %or, !dbg !21254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #0 !dbg !21255 !ctir !2244 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21256, metadata !DIExpression()), !dbg !21257
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21258, metadata !DIExpression()), !dbg !21259
  %0 = load i32, i32* %x.addr, align 4, !dbg !21260, !tbaa !2436
  %1 = load i32, i32* %n.addr, align 4, !dbg !21261, !tbaa !2436
  %shr = lshr i32 %0, %1, !dbg !21262
  %2 = load i32, i32* %x.addr, align 4, !dbg !21263, !tbaa !2436
  %3 = load i32, i32* %n.addr, align 4, !dbg !21264, !tbaa !2436
  %sub = sub nsw i32 32, %3, !dbg !21265
  %shl = shl i32 %2, %sub, !dbg !21266
  %or = or i32 %shr, %shl, !dbg !21267
  ret i32 %or, !dbg !21268
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #0 !dbg !21269 !ctir !2247 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21270, metadata !DIExpression()), !dbg !21271
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21272, metadata !DIExpression()), !dbg !21273
  %0 = load i64, i64* %x.addr, align 8, !dbg !21274, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21275, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21276
  %shl = shl i64 %0, %sh_prom, !dbg !21276
  %2 = load i64, i64* %x.addr, align 8, !dbg !21277, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21278, !tbaa !2436
  %conv = sext i32 %3 to i64, !dbg !21278
  %sub = sub i64 64, %conv, !dbg !21279
  %shr = lshr i64 %2, %sub, !dbg !21280
  %or = or i64 %shl, %shr, !dbg !21281
  ret i64 %or, !dbg !21282
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #0 !dbg !21283 !ctir !2247 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21284, metadata !DIExpression()), !dbg !21285
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21286, metadata !DIExpression()), !dbg !21287
  %0 = load i64, i64* %x.addr, align 8, !dbg !21288, !tbaa !2579
  %1 = load i32, i32* %n.addr, align 4, !dbg !21289, !tbaa !2436
  %sh_prom = zext i32 %1 to i64, !dbg !21290
  %shr = lshr i64 %0, %sh_prom, !dbg !21290
  %2 = load i64, i64* %x.addr, align 8, !dbg !21291, !tbaa !2579
  %3 = load i32, i32* %n.addr, align 4, !dbg !21292, !tbaa !2436
  %conv = sext i32 %3 to i64, !dbg !21292
  %sub = sub i64 64, %conv, !dbg !21293
  %shl = shl i64 %2, %sub, !dbg !21294
  %or = or i64 %shr, %shl, !dbg !21295
  ret i64 %or, !dbg !21296
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #0 !dbg !21297 !ctir !2249 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21298, metadata !DIExpression()), !dbg !21299
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21300, metadata !DIExpression()), !dbg !21301
  %0 = load i16, i16* %x.addr, align 2, !dbg !21302, !tbaa !5835
  %conv = zext i16 %0 to i32, !dbg !21302
  %1 = load i32, i32* %n.addr, align 4, !dbg !21303, !tbaa !2436
  %shl = shl i32 %conv, %1, !dbg !21304
  %2 = load i16, i16* %x.addr, align 2, !dbg !21305, !tbaa !5835
  %conv1 = zext i16 %2 to i32, !dbg !21305
  %3 = load i32, i32* %n.addr, align 4, !dbg !21306, !tbaa !2436
  %sub = sub nsw i32 16, %3, !dbg !21307
  %shr = ashr i32 %conv1, %sub, !dbg !21308
  %or = or i32 %shl, %shr, !dbg !21309
  %and = and i32 %or, 65535, !dbg !21310
  %conv2 = trunc i32 %and to i16, !dbg !21311
  ret i16 %conv2, !dbg !21312
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #0 !dbg !21313 !ctir !2249 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !5835
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21314, metadata !DIExpression()), !dbg !21315
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21316, metadata !DIExpression()), !dbg !21317
  %0 = load i16, i16* %x.addr, align 2, !dbg !21318, !tbaa !5835
  %conv = zext i16 %0 to i32, !dbg !21318
  %1 = load i32, i32* %n.addr, align 4, !dbg !21319, !tbaa !2436
  %shr = ashr i32 %conv, %1, !dbg !21320
  %2 = load i16, i16* %x.addr, align 2, !dbg !21321, !tbaa !5835
  %conv1 = zext i16 %2 to i32, !dbg !21321
  %3 = load i32, i32* %n.addr, align 4, !dbg !21322, !tbaa !2436
  %sub = sub nsw i32 16, %3, !dbg !21323
  %shl = shl i32 %conv1, %sub, !dbg !21324
  %or = or i32 %shr, %shl, !dbg !21325
  %and = and i32 %or, 65535, !dbg !21326
  %conv2 = trunc i32 %and to i16, !dbg !21327
  ret i16 %conv2, !dbg !21328
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #0 !dbg !21329 !ctir !2253 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21330, metadata !DIExpression()), !dbg !21331
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21332, metadata !DIExpression()), !dbg !21333
  %0 = load i8, i8* %x.addr, align 1, !dbg !21334, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !21334
  %1 = load i32, i32* %n.addr, align 4, !dbg !21335, !tbaa !2436
  %shl = shl i32 %conv, %1, !dbg !21336
  %2 = load i8, i8* %x.addr, align 1, !dbg !21337, !tbaa !2497
  %conv1 = zext i8 %2 to i32, !dbg !21337
  %3 = load i32, i32* %n.addr, align 4, !dbg !21338, !tbaa !2436
  %sub = sub nsw i32 8, %3, !dbg !21339
  %shr = ashr i32 %conv1, %sub, !dbg !21340
  %or = or i32 %shl, %shr, !dbg !21341
  %and = and i32 %or, 255, !dbg !21342
  %conv2 = trunc i32 %and to i8, !dbg !21343
  ret i8 %conv2, !dbg !21344
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #0 !dbg !21345 !ctir !2253 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !2497
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21346, metadata !DIExpression()), !dbg !21347
  store i32 %n, i32* %n.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21348, metadata !DIExpression()), !dbg !21349
  %0 = load i8, i8* %x.addr, align 1, !dbg !21350, !tbaa !2497
  %conv = zext i8 %0 to i32, !dbg !21350
  %1 = load i32, i32* %n.addr, align 4, !dbg !21351, !tbaa !2436
  %shr = ashr i32 %conv, %1, !dbg !21352
  %2 = load i8, i8* %x.addr, align 1, !dbg !21353, !tbaa !2497
  %conv1 = zext i8 %2 to i32, !dbg !21353
  %3 = load i32, i32* %n.addr, align 4, !dbg !21354, !tbaa !2436
  %sub = sub nsw i32 8, %3, !dbg !21355
  %shl = shl i32 %conv1, %sub, !dbg !21356
  %or = or i32 %shr, %shl, !dbg !21357
  %and = and i32 %or, 255, !dbg !21358
  %conv2 = trunc i32 %and to i8, !dbg !21359
  ret i8 %conv2, !dbg !21360
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21361 !ctir !731 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !1660
  %p2 = alloca i8*, align 8, !ctir !1660
  %c1 = alloca i8, align 1, !ctir !591
  %c2 = alloca i8, align 1, !ctir !591
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21363, metadata !DIExpression()), !dbg !21364
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21365, metadata !DIExpression()), !dbg !21366
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21367, metadata !DIExpression()), !dbg !21368
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21369, !tbaa !2442
  store i8* %0, i8** %p1, align 8, !dbg !21368, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21370, metadata !DIExpression()), !dbg !21371
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21372, !tbaa !2442
  store i8* %1, i8** %p2, align 8, !dbg !21371, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21373, metadata !DIExpression()), !dbg !21374
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21375, metadata !DIExpression()), !dbg !21376
  %2 = load i8*, i8** %p1, align 8, !dbg !21377, !tbaa !2442
  %3 = load i8*, i8** %p2, align 8, !dbg !21379, !tbaa !2442
  %cmp = icmp eq i8* %2, %3, !dbg !21380
  br i1 %cmp, label %if.then, label %if.end, !dbg !21381

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21382
  br label %return, !dbg !21382

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21383

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21384, !tbaa !2442
  %5 = load i8, i8* %4, align 1, !dbg !21386, !tbaa !2497, !ctir !1661
  %conv = zext i8 %5 to i32, !dbg !21386
  %call = call i32 @c_tolower(i32 %conv), !dbg !21387
  %conv1 = trunc i32 %call to i8, !dbg !21387
  store i8 %conv1, i8* %c1, align 1, !dbg !21388, !tbaa !2497
  %6 = load i8*, i8** %p2, align 8, !dbg !21389, !tbaa !2442
  %7 = load i8, i8* %6, align 1, !dbg !21390, !tbaa !2497, !ctir !1661
  %conv2 = zext i8 %7 to i32, !dbg !21390
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21391
  %conv4 = trunc i32 %call3 to i8, !dbg !21391
  store i8 %conv4, i8* %c2, align 1, !dbg !21392, !tbaa !2497
  %8 = load i8, i8* %c1, align 1, !dbg !21393, !tbaa !2497
  %conv5 = zext i8 %8 to i32, !dbg !21393
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21395
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21396

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21397

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21398, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21398
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21398, !tbaa !2442
  %10 = load i8*, i8** %p2, align 8, !dbg !21399, !tbaa !2442
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21399
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21399, !tbaa !2442
  br label %do.cond, !dbg !21400

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21401, !tbaa !2497
  %conv11 = zext i8 %11 to i32, !dbg !21401
  %12 = load i8, i8* %c2, align 1, !dbg !21402, !tbaa !2497
  %conv12 = zext i8 %12 to i32, !dbg !21402
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21403
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21400, !llvm.loop !21404

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21406, !tbaa !2497
  %conv15 = zext i8 %13 to i32, !dbg !21406
  %14 = load i8, i8* %c2, align 1, !dbg !21408, !tbaa !2497
  %conv16 = zext i8 %14 to i32, !dbg !21408
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21409
  store i32 %sub, i32* %retval, align 4, !dbg !21410
  br label %return, !dbg !21410

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21411
  ret i32 %15, !dbg !21411
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #0 !dbg !21412 !ctir !2263 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2299
  %prev_fail = alloca i8, align 1, !ctir !2299
  %fclose_fail = alloca i8, align 1, !ctir !2299
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21414, metadata !DIExpression()), !dbg !21415
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21416, metadata !DIExpression()), !dbg !21417
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21418, !tbaa !2442
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #13, !dbg !21419
  %cmp = icmp ne i64 %call, 0, !dbg !21420
  %frombool = zext i1 %cmp to i8, !dbg !21417
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21417, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21421, metadata !DIExpression()), !dbg !21422
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21423, !tbaa !2442
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #13, !dbg !21423
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21424
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21422
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21422, !tbaa !2461
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21425, metadata !DIExpression()), !dbg !21426
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21427, !tbaa !2442
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21428
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21429
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21426
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21426, !tbaa !2461
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21430, !tbaa !2461
  %tobool = trunc i8 %3 to i1, !dbg !21430
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21432

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21433, !tbaa !2461
  %tobool7 = trunc i8 %4 to i1, !dbg !21433
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21434

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21435, !tbaa !2461
  %tobool8 = trunc i8 %5 to i1, !dbg !21435
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21436

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #17, !dbg !21437
  %6 = load i32, i32* %call10, align 4, !dbg !21437, !tbaa !2436, !ctir !27
  %cmp11 = icmp ne i32 %6, 9, !dbg !21438
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21439

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21440, !tbaa !2461
  %tobool12 = trunc i8 %7 to i1, !dbg !21440
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21443

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #17, !dbg !21444
  store i32 0, i32* %call14, align 4, !dbg !21445, !tbaa !2436, !ctir !27
  br label %if.end, !dbg !21444

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21446
  br label %return, !dbg !21446

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21447
  br label %return, !dbg !21447

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21448
  ret i32 %8, !dbg !21448
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #0 !dbg !21449 !ctir !572 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !143
  store i8* %file, i8** %file.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21451, metadata !DIExpression()), !dbg !21452
  call void @llvm.dbg.declare(metadata i8** %result, metadata !21453, metadata !DIExpression()), !dbg !21454
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21455, !tbaa !2442
  %call = call i8* @mdir_name(i8* %0), !dbg !21456
  store i8* %call, i8** %result, align 8, !dbg !21454, !tbaa !2442
  %1 = load i8*, i8** %result, align 8, !dbg !21457, !tbaa !2442
  %tobool = icmp ne i8* %1, null, !dbg !21457
  br i1 %tobool, label %if.end, label %if.then, !dbg !21459

if.then:                                          ; preds = %entry
  call void @xalloc_die() #14, !dbg !21460
  unreachable, !dbg !21460

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !21461, !tbaa !2442
  ret i8* %2, !dbg !21462
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !21463 !ctir !333 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !146
  %h = alloca i64, align 8, !ctir !149
  store i8* %x, i8** %x.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21465, metadata !DIExpression()), !dbg !21466
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !21467, metadata !DIExpression()), !dbg !21468
  call void @llvm.dbg.declare(metadata i8** %s, metadata !21469, metadata !DIExpression()), !dbg !21470
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21471, metadata !DIExpression()), !dbg !21472
  store i64 0, i64* %h, align 8, !dbg !21472, !tbaa !2579
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21473, !tbaa !2442
  store i8* %0, i8** %s, align 8, !dbg !21475, !tbaa !2442
  br label %for.cond, !dbg !21476

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !21477, !tbaa !2442
  %2 = load i8, i8* %1, align 1, !dbg !21479, !tbaa !2497, !ctir !147
  %tobool = icmp ne i8 %2, 0, !dbg !21480
  br i1 %tobool, label %for.body, label %for.end, !dbg !21480

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !21481, !tbaa !2442
  %4 = load i8, i8* %3, align 1, !dbg !21482, !tbaa !2497, !ctir !147
  %conv = sext i8 %4 to i64, !dbg !21482
  %5 = load i64, i64* %h, align 8, !dbg !21483, !tbaa !2579
  %shl = shl i64 %5, 9, !dbg !21484
  %6 = load i64, i64* %h, align 8, !dbg !21485, !tbaa !2579
  %shr = lshr i64 %6, 55, !dbg !21486
  %or = or i64 %shl, %shr, !dbg !21487
  %add = add i64 %conv, %or, !dbg !21488
  store i64 %add, i64* %h, align 8, !dbg !21489, !tbaa !2579
  br label %for.inc, !dbg !21490

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !21491, !tbaa !2442
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21491
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !21491, !tbaa !2442
  br label %for.cond, !dbg !21492, !llvm.loop !21493

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !21495, !tbaa !2579
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !21496, !tbaa !2579
  %rem = urem i64 %8, %9, !dbg !21497
  ret i64 %rem, !dbg !21498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #0 !dbg !21499 !ctir !2309 {
entry:
  %codeset = alloca i8*, align 8, !ctir !146
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !21501, metadata !DIExpression()), !dbg !21502
  %call = call i8* @nl_langinfo(i32 14) #13, !dbg !21503
  store i8* %call, i8** %codeset, align 8, !dbg !21504, !tbaa !2442
  %0 = load i8*, i8** %codeset, align 8, !dbg !21505, !tbaa !2442
  %cmp = icmp eq i8* %0, null, !dbg !21507
  br i1 %cmp, label %if.then, label %if.end, !dbg !21508

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.530, i64 0, i64 0), i8** %codeset, align 8, !dbg !21509, !tbaa !2442
  br label %if.end, !dbg !21510

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !21511, !tbaa !2442
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !21511, !ctir !146
  %2 = load i8, i8* %arrayidx, align 1, !dbg !21511, !tbaa !2497
  %conv = sext i8 %2 to i32, !dbg !21511
  %cmp1 = icmp eq i32 %conv, 0, !dbg !21515
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !21516

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.531, i64 0, i64 0), i8** %codeset, align 8, !dbg !21517, !tbaa !2442
  br label %if.end4, !dbg !21518

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !21519, !tbaa !2442
  ret i8* %3, !dbg !21520
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #0 !dbg !21521 !ctir !2313 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !27
  %fd = alloca i32, align 4, !ctir !27
  %result = alloca i32, align 4, !ctir !27
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21523, metadata !DIExpression()), !dbg !21524
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21525, metadata !DIExpression()), !dbg !21526
  store i32 0, i32* %saved_errno, align 4, !dbg !21526, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21527, metadata !DIExpression()), !dbg !21528
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21529, metadata !DIExpression()), !dbg !21530
  store i32 0, i32* %result, align 4, !dbg !21530, !tbaa !2436
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21531, !tbaa !2442
  %call = call i32 @fileno(%struct._IO_FILE* %0) #13, !dbg !21532
  store i32 %call, i32* %fd, align 4, !dbg !21533, !tbaa !2436
  %1 = load i32, i32* %fd, align 4, !dbg !21534, !tbaa !2436
  %cmp = icmp slt i32 %1, 0, !dbg !21536
  br i1 %cmp, label %if.then, label %if.end, !dbg !21537

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21538, !tbaa !2442
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21539
  store i32 %call1, i32* %retval, align 4, !dbg !21540
  br label %return, !dbg !21540

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21541, !tbaa !2442
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #13, !dbg !21541
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21541
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21543

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21544, !tbaa !2442
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #13, !dbg !21545
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #13, !dbg !21546
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21547
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21548

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21549, !tbaa !2442
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21550
  %tobool = icmp ne i32 %call7, 0, !dbg !21550
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21551

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #17, !dbg !21552
  %6 = load i32, i32* %call9, align 4, !dbg !21552, !tbaa !2436, !ctir !27
  store i32 %6, i32* %saved_errno, align 4, !dbg !21553, !tbaa !2436
  br label %if.end10, !dbg !21554

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21555, !tbaa !2442
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21556
  store i32 %call11, i32* %result, align 4, !dbg !21557, !tbaa !2436
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21558, !tbaa !2436
  %cmp12 = icmp ne i32 %8, 0, !dbg !21560
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21561

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21562, !tbaa !2436
  %call14 = call i32* @__errno_location() #17, !dbg !21564
  store i32 %9, i32* %call14, align 4, !dbg !21565, !tbaa !2436, !ctir !27
  store i32 -1, i32* %result, align 4, !dbg !21566, !tbaa !2436
  br label %if.end15, !dbg !21567

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21568, !tbaa !2436
  store i32 %10, i32* %retval, align 4, !dbg !21569
  br label %return, !dbg !21569

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21570
  ret i32 %11, !dbg !21570
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #0 !dbg !21571 !ctir !2352 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21573, metadata !DIExpression()), !dbg !21574
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21575, !tbaa !2442
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !21577
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21578

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21579, !tbaa !2442
  %call = call i32 @__freading(%struct._IO_FILE* %1) #13, !dbg !21579
  %cmp1 = icmp ne i32 %call, 0, !dbg !21579
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21580

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21581, !tbaa !2442
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !21582
  store i32 %call2, i32* %retval, align 4, !dbg !21583
  br label %return, !dbg !21583

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21584, !tbaa !2442
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !21585
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21586, !tbaa !2442
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !21587
  store i32 %call3, i32* %retval, align 4, !dbg !21588
  br label %return, !dbg !21588

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21589
  ret i32 %5, !dbg !21589
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #0 !dbg !21590 !ctir !2388 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21591, metadata !DIExpression()), !dbg !21592
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21593, !tbaa !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !21595, !ctir !2355
  %1 = load i32, i32* %_flags, align 8, !dbg !21595, !tbaa !21596, !ctir !27
  %and = and i32 %1, 256, !dbg !21598
  %tobool = icmp ne i32 %and, 0, !dbg !21598
  br i1 %tobool, label %if.then, label %if.end, !dbg !21599

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21600, !tbaa !2442
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !21601
  br label %if.end, !dbg !21601

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !21602
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #0 !dbg !21603 !ctir !2393 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !2429
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2442
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21605, metadata !DIExpression()), !dbg !21606
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !2579
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !21607, metadata !DIExpression()), !dbg !21608
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2436
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !21609, metadata !DIExpression()), !dbg !21610
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21611, !tbaa !2442
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !21613, !ctir !2396
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !21613, !tbaa !21614, !ctir !143
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21615, !tbaa !2442
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !21616, !ctir !2396
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !21616, !tbaa !21617, !ctir !143
  %cmp = icmp eq i8* %1, %3, !dbg !21618
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !21619

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21620, !tbaa !2442
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !21621, !ctir !2396
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !21621, !tbaa !21622, !ctir !143
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21623, !tbaa !2442
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !21624, !ctir !2396
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !21624, !tbaa !21625, !ctir !143
  %cmp1 = icmp eq i8* %5, %7, !dbg !21626
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !21627

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21628, !tbaa !2442
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !21629, !ctir !2396
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !21629, !tbaa !21630, !ctir !143
  %cmp3 = icmp eq i8* %9, null, !dbg !21631
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !21632

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !21633, metadata !DIExpression()), !dbg !21635
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21636, !tbaa !2442
  %call = call i32 @fileno(%struct._IO_FILE* %10) #13, !dbg !21637
  %11 = load i64, i64* %offset.addr, align 8, !dbg !21638, !tbaa !2579
  %12 = load i32, i32* %whence.addr, align 4, !dbg !21639, !tbaa !2436
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #13, !dbg !21640
  store i64 %call4, i64* %pos, align 8, !dbg !21635, !tbaa !2579
  %13 = load i64, i64* %pos, align 8, !dbg !21641, !tbaa !2579
  %cmp5 = icmp eq i64 %13, -1, !dbg !21643
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21644

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21645
  br label %return, !dbg !21645

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21647, !tbaa !2442
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !21648, !ctir !2396
  %15 = load i32, i32* %_flags, align 8, !dbg !21649, !tbaa !21596, !ctir !27
  %and = and i32 %15, -17, !dbg !21649
  store i32 %and, i32* %_flags, align 8, !dbg !21649, !tbaa !21596, !ctir !27
  %16 = load i64, i64* %pos, align 8, !dbg !21650, !tbaa !2579
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21651, !tbaa !2442
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !21652, !ctir !2396
  store i64 %16, i64* %_offset, align 8, !dbg !21653, !tbaa !21654, !ctir !305
  store i32 0, i32* %retval, align 4, !dbg !21655
  br label %return, !dbg !21655

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21656, !tbaa !2442
  %19 = load i64, i64* %offset.addr, align 8, !dbg !21657, !tbaa !2579
  %20 = load i32, i32* %whence.addr, align 4, !dbg !21658, !tbaa !2436
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !21659
  store i32 %call8, i32* %retval, align 4, !dbg !21660
  br label %return, !dbg !21660

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !21661
  ret i32 %21, !dbg !21661
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind returns_twice }

!llvm.dbg.cu = !{!2, !1038, !1043, !1647, !1049, !1652, !1657, !1664, !1100, !1704, !1709, !1143, !1712, !1740, !1779, !1811, !1816, !1819, !1828, !1840, !1150, !1843, !1282, !1344, !1854, !1861, !1866, !1883, !1900, !1913, !1396, !1437, !1952, !1959, !1986, !2019, !2035, !1548, !2095, !2110, !2113, !2120, !2125, !2128, !2138, !2153, !2162, !1558, !2178, !2233, !2236, !2257, !2260, !2300, !2303, !2306, !2310, !2349, !2390}
!llvm.ident = !{!2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430}
!llvm.module.flags = !{!2431, !2432, !2433, !2434}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "exit_status", scope: !2, file: !3, line: 800, type: !27, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !161, globals: !816, nameTableKind: None)
!3 = !DIFile(filename: "src/ls.c", directory: "/home/mbarbar/software/coreutils-8.31")
!4 = !{!5, !13, !20, !26, !36, !48, !53, !79, !85, !90, !95, !109, !117, !123, !129, !137}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "format", file: !3, line: 419, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12}
!8 = !DIEnumerator(name: "long_format", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "one_per_line", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "many_per_line", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "horizontal", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "with_commas", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !3, line: 576, baseType: !6, size: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19}
!15 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "DEREF_ALWAYS", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_style", file: !3, line: 534, baseType: !6, size: 32, elements: !21)
!21 = !{!22, !23, !24, !25}
!22 = !DIEnumerator(name: "none", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "slash", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "file_type", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "classify", value: 3, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sort_type", file: !3, line: 470, baseType: !27, size: 32, elements: !28)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "sort_none", value: -1)
!30 = !DIEnumerator(name: "sort_name", value: 0)
!31 = !DIEnumerator(name: "sort_extension", value: 1)
!32 = !DIEnumerator(name: "sort_size", value: 2)
!33 = !DIEnumerator(name: "sort_version", value: 3)
!34 = !DIEnumerator(name: "sort_time", value: 4)
!35 = !DIEnumerator(name: "sort_numtypes", value: 5)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "filetype", file: !3, line: 164, baseType: !6, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47}
!38 = !DIEnumerator(name: "unknown", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "fifo", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "chardev", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "directory", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "blockdev", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "normal", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "symbolic_link", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "sock", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "whiteout", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "arg_directory", value: 9, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acl_type", file: !3, line: 192, baseType: !6, size: 32, elements: !49)
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "ACL_T_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "ACL_T_LSM_CONTEXT_ONLY", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "ACL_T_YES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "indicator_no", file: !3, line: 585, baseType: !6, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!55 = !DIEnumerator(name: "C_LEFT", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "C_RIGHT", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "C_END", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "C_RESET", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "C_NORM", value: 4, isUnsigned: true)
!60 = !DIEnumerator(name: "C_FILE", value: 5, isUnsigned: true)
!61 = !DIEnumerator(name: "C_DIR", value: 6, isUnsigned: true)
!62 = !DIEnumerator(name: "C_LINK", value: 7, isUnsigned: true)
!63 = !DIEnumerator(name: "C_FIFO", value: 8, isUnsigned: true)
!64 = !DIEnumerator(name: "C_SOCK", value: 9, isUnsigned: true)
!65 = !DIEnumerator(name: "C_BLK", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "C_CHR", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "C_MISSING", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "C_ORPHAN", value: 13, isUnsigned: true)
!69 = !DIEnumerator(name: "C_EXEC", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "C_DOOR", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "C_SETUID", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "C_SETGID", value: 17, isUnsigned: true)
!73 = !DIEnumerator(name: "C_STICKY", value: 18, isUnsigned: true)
!74 = !DIEnumerator(name: "C_OTHER_WRITABLE", value: 19, isUnsigned: true)
!75 = !DIEnumerator(name: "C_STICKY_OTHER_WRITABLE", value: 20, isUnsigned: true)
!76 = !DIEnumerator(name: "C_CAP", value: 21, isUnsigned: true)
!77 = !DIEnumerator(name: "C_MULTIHARDLINK", value: 22, isUnsigned: true)
!78 = !DIEnumerator(name: "C_CLR_TO_EOL", value: 23, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_type", file: !3, line: 456, baseType: !6, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "time_mtime", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "time_ctime", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "time_atime", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "time_numtypes", value: 3, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 672, baseType: !6, size: 32, elements: !86)
!86 = !{!87, !88, !89}
!87 = !DIEnumerator(name: "IGNORE_DEFAULT", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "IGNORE_DOT_AND_DOTDOT", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "IGNORE_MINIMAL", value: 2, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "when_type", file: !3, line: 569, baseType: !6, size: 32, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "when_never", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "when_always", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "when_if_tty", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !96, line: 32, baseType: !6, size: 32, elements: !97)
!96 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!98 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !110, line: 26, baseType: !6, size: 32, elements: !111)
!110 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/software/coreutils-8.31")
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "time_style", file: !3, line: 433, baseType: !6, size: 32, elements: !118)
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "full_iso_time_style", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "long_iso_time_style", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "iso_time_style", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "locale_time_style", value: 3, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 19, baseType: !6, size: 32, elements: !125)
!124 = !DIFile(filename: "./lib/mbsalign.h", directory: "/home/mbarbar/software/coreutils-8.31")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "MBS_ALIGN_LEFT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MBS_ALIGN_RIGHT", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "MBS_ALIGN_CENTER", value: 2, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "parse_state", file: !3, line: 2475, baseType: !6, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136}
!131 = !DIEnumerator(name: "PS_START", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "PS_2", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "PS_3", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "PS_4", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "PS_DONE", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "PS_FAIL", value: 6, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !138, file: !3, line: 2286, baseType: !6, size: 32, elements: !153)
!138 = distinct !DISubprogram(name: "get_funky_string", scope: !3, file: !3, line: 2281, type: !139, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!139 = !DISubroutineType(types: !140)
!140 = !{!141, !142, !145, !141, !148}
!141 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 46, baseType: !151)
!150 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!151 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!152 = !{}
!153 = !{!154, !155, !156, !157, !158, !159, !160}
!154 = !DIEnumerator(name: "ST_GND", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "ST_BACKSLASH", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "ST_OCTAL", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "ST_HEX", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "ST_CARET", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "ST_END", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "ST_ERROR", value: 6, isUnsigned: true)
!161 = !{!162, !167, !168, !149, !171, !148, !143, !151, !146, !27, !176, !177, !180, !183, !235, !237, !142, !141, !164, !219, !244, !248, !252, !253, !261, !268, !320, !324, !328, !174, !330, !331, !333, !335, !258, !337, !260, !339, !341, !343, !346, !348, !395, !397, !401, !403, !413, !417, !508, !510, !355, !511, !147, !516, !528, !532, !535, !537, !539, !543, !546, !550, !553, !557, !558, !560, !144, !561, !564, !565, !567, !325, !568, !570, !572, !574, !577, !579, !581, !586, !587, !589, !592, !593, !599, !602, !604, !139, !607, !609, !613, !195, !197, !591, !622, !625, !627, !629, !631, !635, !638, !641, !654, !655, !657, !659, !661, !663, !664, !666, !667, !201, !228, !212, !203, !205, !669, !199, !179, !672, !674, !676, !680, !682, !684, !686, !688, !690, !693, !695, !698, !700, !702, !704, !715, !723, !725, !727, !719, !728, !731, !733, !735, !737, !739, !399, !741, !743, !744, !745, !747, !749, !751, !753, !755, !762, !763, !765, !767, !769, !770, !773, !776, !778, !780, !782, !800, !802, !805, !807, !815}
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !163, line: 7, baseType: !164)
!163 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !165, line: 160, baseType: !166)
!165 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!166 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !169, line: 102, baseType: !170)
!169 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !165, line: 73, baseType: !151)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !172, line: 72, baseType: !173)
!172 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !27}
!176 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !178, line: 85, baseType: !179)
!178 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !165, line: 152, baseType: !166)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fileinfo", file: !3, line: 199, size: 1600, elements: !186)
!186 = !{!187, !188, !189, !190, !226, !227, !229, !230, !231, !232, !233, !234}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !185, file: !3, line: 202, baseType: !143, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "linkname", scope: !185, file: !3, line: 205, baseType: !143, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_name", scope: !185, file: !3, line: 208, baseType: !143, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !185, file: !3, line: 210, baseType: !191, size: 1152, offset: 192)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !193)
!192 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!193 = !{!194, !196, !198, !200, !202, !204, !206, !207, !208, !209, !211, !213, !220, !221, !222}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !191, file: !192, line: 48, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !165, line: 145, baseType: !151)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !191, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !165, line: 148, baseType: !151)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !191, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !165, line: 151, baseType: !151)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !191, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !165, line: 150, baseType: !6)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !191, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !165, line: 146, baseType: !6)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !191, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !165, line: 147, baseType: !6)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !191, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !191, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !191, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !191, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !165, line: 174, baseType: !166)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !191, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !165, line: 179, baseType: !166)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !191, file: !192, line: 91, baseType: !214, size: 128, offset: 576)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !216)
!215 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !214, file: !215, line: 11, baseType: !164, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !214, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !165, line: 196, baseType: !166)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !191, file: !192, line: 92, baseType: !214, size: 128, offset: 704)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !191, file: !192, line: 93, baseType: !214, size: 128, offset: 832)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !191, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 192, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 3)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "filetype", scope: !185, file: !3, line: 212, baseType: !36, size: 32, offset: 1344)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "linkmode", scope: !185, file: !3, line: 216, baseType: !228, size: 32, offset: 1376)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !178, line: 69, baseType: !201)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "scontext", scope: !185, file: !3, line: 219, baseType: !143, size: 64, offset: 1408)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stat_ok", scope: !185, file: !3, line: 221, baseType: !141, size: 8, offset: 1472)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "linkok", scope: !185, file: !3, line: 225, baseType: !141, size: 8, offset: 1480)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "acl_type", scope: !185, file: !3, line: 229, baseType: !48, size: 32, offset: 1504)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "has_capability", scope: !185, file: !3, line: 232, baseType: !141, size: 8, offset: 1536)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "quoted", scope: !185, file: !3, line: 235, baseType: !27, size: 32, offset: 1568)
!235 = !DISubroutineType(types: !236)
!236 = !{!27, !27, !142}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pending", file: !3, line: 367, size: 256, elements: !239)
!239 = !{!240, !241, !242, !243}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !238, file: !3, line: 369, baseType: !143, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "realname", scope: !238, file: !3, line: 373, baseType: !143, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "command_line_arg", scope: !238, file: !3, line: 374, baseType: !141, size: 8, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !3, line: 375, baseType: !237, size: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !246, line: 69, baseType: !247)
!246 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !246, line: 67, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !250)
!249 = !DIFile(filename: "./lib/time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !249, line: 764, flags: DIFlagFwdDecl)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !255, line: 7, size: 128, elements: !256)
!255 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mbarbar/software/coreutils-8.31")
!256 = !{!257, !259}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !254, file: !255, line: 9, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !178, line: 47, baseType: !197)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !254, file: !255, line: 10, baseType: !260, size: 64, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !178, line: 59, baseType: !195)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 3072, elements: !266)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_str", file: !3, line: 244, size: 128, elements: !263)
!263 = !{!264, !265}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !262, file: !3, line: 246, baseType: !149, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !262, file: !3, line: 247, baseType: !146, size: 64, offset: 64)
!266 = !{!267}
!267 = !DISubrange(count: 24)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !271)
!270 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !273)
!272 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !289, !291, !292, !293, !294, !295, !297, !301, !304, !306, !309, !312, !313, !314, !315, !316}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !271, file: !272, line: 51, baseType: !27, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !271, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !271, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !271, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !271, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !271, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !271, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !271, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !271, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !271, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !271, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !271, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !271, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !272, line: 36, flags: DIFlagFwdDecl)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !271, file: !272, line: 70, baseType: !290, size: 64, offset: 832)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !271, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !271, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !271, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !271, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !271, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!296 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !271, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 1)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !271, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !272, line: 43, baseType: null)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !271, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !165, line: 153, baseType: !166)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !271, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !272, line: 37, flags: DIFlagFwdDecl)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !271, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !272, line: 38, flags: DIFlagFwdDecl)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !271, file: !272, line: 93, baseType: !290, size: 64, offset: 1344)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !271, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !271, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !271, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !271, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 160, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 20)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !322, line: 8, baseType: !323)
!322 = !DIFile(filename: "/usr/include/bits/types/sig_atomic_t.h", directory: "")
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !165, line: 214, baseType: !27)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, elements: !326)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!326 = !{!327}
!327 = !DISubrange(count: -1)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !96, line: 270, flags: DIFlagFwdDecl)
!330 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !27)
!331 = !DISubroutineType(types: !332)
!332 = !{!141, !53}
!333 = !DISubroutineType(types: !334)
!334 = !{!149, !181, !149}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!337 = !DISubroutineType(types: !338)
!338 = !{!141, !181, !181}
!339 = !DISubroutineType(types: !340)
!340 = !{null, !167}
!341 = !DISubroutineType(types: !342)
!342 = !{null}
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2048, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 256)
!346 = !DISubroutineType(types: !347)
!347 = !{!254}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !351, line: 174, size: 704, elements: !352)
!351 = !DIFile(filename: "./lib/obstack.h", directory: "/home/mbarbar/software/coreutils-8.31")
!352 = !{!353, !354, !362, !363, !364, !365, !370, !371, !382, !391, !392, !393, !394}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !350, file: !351, line: 176, baseType: !149, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !350, file: !351, line: 177, baseType: !355, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !351, line: 167, size: 128, elements: !357)
!357 = !{!358, !359, !360}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !356, file: !351, line: 169, baseType: !143, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !356, file: !351, line: 170, baseType: !355, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !356, file: !351, line: 171, baseType: !361, offset: 128)
!361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, elements: !326)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !350, file: !351, line: 178, baseType: !143, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !350, file: !351, line: 179, baseType: !143, size: 64, offset: 192)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !350, file: !351, line: 180, baseType: !143, size: 64, offset: 256)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !350, file: !351, line: 185, baseType: !366, size: 64, offset: 320)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 181, size: 64, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !366, file: !351, line: 183, baseType: !149, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !366, file: !351, line: 184, baseType: !167, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !350, file: !351, line: 186, baseType: !149, size: 64, offset: 384)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !350, file: !351, line: 193, baseType: !372, size: 64, offset: 448)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 189, size: 64, elements: !373)
!373 = !{!374, !378}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !372, file: !351, line: 191, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DISubroutineType(types: !377)
!377 = !{!167, !149}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !372, file: !351, line: 192, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{!167, !167, !149}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !350, file: !351, line: 198, baseType: !383, size: 64, offset: 512)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !350, file: !351, line: 194, size: 64, elements: !384)
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !383, file: !351, line: 196, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !383, file: !351, line: 197, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !167, !167}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !350, file: !351, line: 200, baseType: !167, size: 64, offset: 576)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !350, file: !351, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !350, file: !351, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !350, file: !351, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !237}
!397 = !DISubroutineType(types: !398)
!398 = !{null, !399}
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!401 = !DISubroutineType(types: !402)
!402 = !{null, !141}
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !404, line: 7, baseType: !405)
!404 = !DIFile(filename: "/usr/include/bits/types/sigset_t.h", directory: "")
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !406, line: 8, baseType: !407)
!406 = !DIFile(filename: "/usr/include/bits/types/__sigset_t.h", directory: "")
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 5, size: 1024, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !407, file: !406, line: 7, baseType: !410, size: 1024)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !151, size: 1024, elements: !411)
!411 = !{!412}
!412 = !DISubrange(count: 16)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 384, elements: !415)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!415 = !{!416}
!416 = !DISubrange(count: 12)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !419, file: !418, line: 31, size: 64, elements: !426)
!418 = !DIFile(filename: "/usr/include/bits/sigaction.h", directory: "")
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !418, line: 27, size: 1216, elements: !420)
!420 = !{!421, !422, !423, !424}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !419, file: !418, line: 38, baseType: !417, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !419, file: !418, line: 46, baseType: !405, size: 1024, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !419, file: !418, line: 49, baseType: !27, size: 32, offset: 1088)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !419, file: !418, line: 52, baseType: !425, size: 64, offset: 1152)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!426 = !{!427, !428}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !417, file: !418, line: 34, baseType: !171, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !417, file: !418, line: 36, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{null, !27, !432, !167}
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !434, line: 124, baseType: !435)
!434 = !DIFile(filename: "/usr/include/bits/types/siginfo_t.h", directory: "")
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !434, line: 36, size: 1024, elements: !436)
!436 = !{!437, !438, !439, !440, !441}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !435, file: !434, line: 38, baseType: !27, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !435, file: !434, line: 40, baseType: !27, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !435, file: !434, line: 42, baseType: !27, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !435, file: !434, line: 48, baseType: !27, size: 32, offset: 96)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !435, file: !434, line: 123, baseType: !442, size: 896, offset: 128)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !435, file: !434, line: 51, size: 896, elements: !443)
!443 = !{!444, !448, !454, !466, !472, !481, !497, !502}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !442, file: !434, line: 53, baseType: !445, size: 896)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 896, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 28)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !442, file: !434, line: 60, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 56, size: 64, elements: !450)
!450 = !{!451, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !449, file: !434, line: 58, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !165, line: 154, baseType: !27)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !449, file: !434, line: 59, baseType: !203, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !442, file: !434, line: 68, baseType: !455, size: 128)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 63, size: 128, elements: !456)
!456 = !{!457, !458, !459}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !455, file: !434, line: 65, baseType: !27, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !455, file: !434, line: 66, baseType: !27, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !455, file: !434, line: 67, baseType: !460, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !461, line: 30, baseType: !462)
!461 = !DIFile(filename: "/usr/include/bits/types/__sigval_t.h", directory: "")
!462 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !461, line: 24, size: 64, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !462, file: !461, line: 26, baseType: !27, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !462, file: !461, line: 27, baseType: !167, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !442, file: !434, line: 76, baseType: !467, size: 128)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 71, size: 128, elements: !468)
!468 = !{!469, !470, !471}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !467, file: !434, line: 73, baseType: !452, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !467, file: !434, line: 74, baseType: !203, size: 32, offset: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !467, file: !434, line: 75, baseType: !460, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !442, file: !434, line: 86, baseType: !473, size: 256)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 79, size: 256, elements: !474)
!474 = !{!475, !476, !477, !478, !480}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !473, file: !434, line: 81, baseType: !452, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !473, file: !434, line: 82, baseType: !203, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !473, file: !434, line: 83, baseType: !27, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !473, file: !434, line: 84, baseType: !479, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !165, line: 156, baseType: !166)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !473, file: !434, line: 85, baseType: !479, size: 64, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !442, file: !434, line: 105, baseType: !482, size: 256)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 89, size: 256, elements: !483)
!483 = !{!484, !485, !487}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !482, file: !434, line: 91, baseType: !167, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !482, file: !434, line: 93, baseType: !486, size: 16, offset: 64)
!486 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !482, file: !434, line: 104, baseType: !488, size: 128, offset: 128)
!488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !482, file: !434, line: 94, size: 128, elements: !489)
!489 = !{!490, !495}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !488, file: !434, line: 101, baseType: !491, size: 128)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !488, file: !434, line: 97, size: 128, elements: !492)
!492 = !{!493, !494}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !491, file: !434, line: 99, baseType: !167, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !491, file: !434, line: 100, baseType: !167, size: 64, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !488, file: !434, line: 103, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !165, line: 42, baseType: !6)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !442, file: !434, line: 112, baseType: !498, size: 128)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 108, size: 128, elements: !499)
!499 = !{!500, !501}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !498, file: !434, line: 110, baseType: !166, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !498, file: !434, line: 111, baseType: !27, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !442, file: !434, line: 121, baseType: !503, size: 128)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !442, file: !434, line: 116, size: 128, elements: !504)
!504 = !{!505, !506, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !503, file: !434, line: 118, baseType: !167, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !503, file: !434, line: 119, baseType: !27, size: 32, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !503, file: !434, line: 120, baseType: !6, size: 32, offset: 96)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !146, !510}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ignore_pattern", file: !3, line: 690, size: 128, elements: !513)
!513 = !{!514, !515}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !512, file: !3, line: 692, baseType: !146, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !512, file: !3, line: 693, baseType: !511, size: 64, offset: 64)
!516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 11264, elements: !526)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !519, line: 50, size: 256, elements: !520)
!519 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!520 = !{!521, !522, !523, !525}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !518, file: !519, line: 52, baseType: !146, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !518, file: !519, line: 55, baseType: !27, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !518, file: !519, line: 56, baseType: !524, size: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !518, file: !519, line: 57, baseType: !27, size: 32, offset: 192)
!526 = !{!527}
!527 = !DISubrange(count: 44)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 160, elements: !530)
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!530 = !{!531}
!531 = !DISubrange(count: 5)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 384, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 6)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !536, line: 55, baseType: !425)
!536 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 160, elements: !530)
!538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 224, elements: !541)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!541 = !{!542}
!542 = !DISubrange(count: 7)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 512, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 8)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, size: 288, elements: !548)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !90)
!548 = !{!549}
!549 = !DISubrange(count: 9)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 640, elements: !551)
!551 = !{!552}
!552 = !DISubrange(count: 10)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !554, size: 128, elements: !555)
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!555 = !{!556}
!556 = !DISubrange(count: 4)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 320, elements: !530)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, elements: !326)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !95)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 48, elements: !533)
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 128, elements: !562)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !150, line: 35, baseType: !166)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !555)
!566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!141, !146}
!570 = !DISubroutineType(types: !571)
!571 = !{null, !146}
!572 = !DISubroutineType(types: !573)
!573 = !{!143, !146}
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 12288, elements: !575)
!575 = !{!416, !576}
!576 = !DISubrange(count: 128)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24576, elements: !578)
!578 = !{!563, !416, !576}
!579 = !DISubroutineType(types: !580)
!580 = !{!146, !146}
!581 = !DISubroutineType(types: !582)
!582 = !{!141, !583}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1024, elements: !585)
!585 = !{!576}
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbs_align_t", file: !124, line: 19, baseType: !123)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!589 = !DISubroutineType(types: !590)
!590 = !{!591, !144}
!591 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 24, elements: !224)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "color_ext_type", file: !3, line: 601, size: 320, elements: !595)
!595 = !{!596, !597, !598}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !594, file: !3, line: 603, baseType: !262, size: 128)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !594, file: !3, line: 604, baseType: !262, size: 128, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !594, file: !3, line: 605, baseType: !593, size: 64, offset: 256)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 1600, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 25)
!602 = !DISubroutineType(types: !603)
!603 = !{!141}
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 34336, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 4292)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !146, !146, !141}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !611, line: 127, baseType: !612)
!611 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !611, line: 127, flags: DIFlagFwdDecl)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !615, line: 22, size: 2240, elements: !616)
!615 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!616 = !{!617, !618, !619, !620, !621}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !614, file: !615, line: 25, baseType: !197, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !614, file: !615, line: 26, baseType: !179, size: 64, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !614, file: !615, line: 31, baseType: !176, size: 16, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !614, file: !615, line: 32, baseType: !591, size: 8, offset: 144)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !614, file: !615, line: 33, baseType: !343, size: 2048, offset: 152)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 5216, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 652)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !141, !146, !146}
!627 = !DISubroutineType(types: !628)
!628 = !{!141, !260, !258}
!629 = !DISubroutineType(types: !630)
!630 = !{null, !260, !258}
!631 = !DISubroutineType(types: !632)
!632 = !{!149, !146, !633, !27, !399, !141, !510, !146}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 65536, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 8192)
!638 = !DISubroutineType(types: !639)
!639 = !{!149, !142, !149, !143, !633, !27, !148, !640}
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !643)
!642 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !645)
!644 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !646)
!646 = !{!647, !648}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !645, file: !644, line: 15, baseType: !27, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !645, file: !644, line: 20, baseType: !649, size: 32, offset: 32)
!649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !645, file: !644, line: 16, size: 32, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !649, file: !644, line: 18, baseType: !6, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !649, file: !644, line: 19, baseType: !653, size: 32)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 32, elements: !555)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !150, line: 74, baseType: !27)
!655 = !DISubroutineType(types: !656)
!656 = !{!141, !399}
!657 = !DISubroutineType(types: !658)
!658 = !{!143, !146, !141}
!659 = !DISubroutineType(types: !660)
!660 = !{!141, !661, !146}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !252}
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 16, elements: !562)
!667 = !DISubroutineType(types: !668)
!668 = !{!168, !146, !36, !258, !141, !146}
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 168, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 21)
!672 = !DISubroutineType(types: !673)
!673 = !{null, !143, !146, !146}
!674 = !DISubroutineType(types: !675)
!675 = !{!141, !146, !252}
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "cap_t", file: !677, line: 39, baseType: !678)
!677 = !DIFile(filename: "/usr/include/sys/capability.h", directory: "")
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "_cap_struct", file: !677, line: 39, flags: DIFlagFwdDecl)
!680 = !DISubroutineType(types: !681)
!681 = !{!141, !27}
!682 = !DISubroutineType(types: !683)
!683 = !{!27, !146, !252, !141}
!684 = !DISubroutineType(types: !685)
!685 = !{!27, !146, !252}
!686 = !DISubroutineType(types: !687)
!687 = !{null, !146, !252, !141}
!688 = !DISubroutineType(types: !689)
!689 = !{!143, !146, !146}
!690 = !DISubroutineType(types: !691)
!691 = !{!27, !692}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !178, line: 79, baseType: !203)
!693 = !DISubroutineType(types: !694)
!694 = !{!27, !146, !151}
!695 = !DISubroutineType(types: !696)
!696 = !{!27, !697}
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !178, line: 64, baseType: !205)
!698 = !DISubroutineType(types: !699)
!699 = !{!168, !177}
!700 = !DISubroutineType(types: !701)
!701 = !{null, !146, !141}
!702 = !DISubroutineType(types: !703)
!703 = !{!141, !183}
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !705, line: 45, baseType: !706)
!705 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1600, elements: !299)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !705, line: 33, size: 1600, elements: !708)
!708 = !{!709, !713, !714}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !707, file: !705, line: 39, baseType: !710, size: 512)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !711, line: 31, baseType: !712)
!711 = !DIFile(filename: "/usr/include/bits/setjmp.h", directory: "")
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 512, elements: !544)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !707, file: !705, line: 40, baseType: !27, size: 32, offset: 512)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !707, file: !705, line: 41, baseType: !405, size: 1024, offset: 576)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 3584, elements: !722)
!716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsortFunc", file: !3, line: 3585, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!27, !721, !721}
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "V", file: !3, line: 3584, baseType: !181)
!722 = !{!542, !563, !563, !563}
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 512, elements: !724)
!724 = !{!563, !563, !563}
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 256, elements: !726)
!726 = !{!563, !563}
!727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 128, elements: !562)
!728 = !DISubroutineType(types: !729)
!729 = !{!27, !183, !183, !730}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!27, !146, !146}
!733 = !DISubroutineType(types: !734)
!734 = !{!27, !183, !183}
!735 = !DISubroutineType(types: !736)
!736 = !{!149, !183, !149}
!737 = !DISubroutineType(types: !738)
!738 = !{!143, !143, !149, !183}
!739 = !DISubroutineType(types: !740)
!740 = !{!149, !183, !141, !510, !149}
!741 = !DISubroutineType(types: !742)
!742 = !{!399, !183, !141}
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 320, elements: !551)
!744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!745 = !DISubroutineType(types: !746)
!746 = !{!141, !141, !228, !36}
!747 = !DISubroutineType(types: !748)
!748 = !{!144, !141, !228, !36}
!749 = !DISubroutineType(types: !750)
!750 = !{null, !144}
!751 = !DISubroutineType(types: !752)
!752 = !{!149, !183}
!753 = !DISubroutineType(types: !754)
!754 = !{!149, !146, !633, !27}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "column_info", file: !3, line: 937, size: 192, elements: !758)
!758 = !{!759, !760, !761}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "valid_len", scope: !757, file: !3, line: 939, baseType: !141, size: 8)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "line_len", scope: !757, file: !3, line: 940, baseType: !149, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "col_arr", scope: !757, file: !3, line: 941, baseType: !148, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!149, !141}
!765 = !DISubroutineType(types: !766)
!766 = !{null, !149, !149}
!767 = !DISubroutineType(types: !768)
!768 = !{null, !183}
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !415)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 29144, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 3643)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 88, elements: !774)
!774 = !{!775}
!775 = !DISubrange(count: 11)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !692, !27, !141}
!778 = !DISubroutineType(types: !779)
!779 = !{null, !697, !27, !141}
!780 = !DISubroutineType(types: !781)
!781 = !{null, !146, !151, !27}
!782 = !DISubroutineType(types: !783)
!783 = !{!149, !143, !149, !141, !784, !248, !27}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !788)
!787 = !DIFile(filename: "/usr/include/bits/types/struct_tm.h", directory: "")
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !786, file: !787, line: 9, baseType: !27, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !786, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !786, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !786, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !786, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !786, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !786, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !786, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !786, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !786, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !786, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!800 = !DISubroutineType(types: !801)
!801 = !{!27}
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8008, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 1001)
!805 = !DISubroutineType(types: !806)
!806 = !{!143, !162, !143}
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 896, elements: !541)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !811, file: !810, line: 633, size: 128, elements: !812)
!810 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!811 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !810, file: !810, line: 631, type: !570, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!812 = !{!813, !814}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !809, file: !810, line: 633, baseType: !146, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !809, file: !810, line: 633, baseType: !146, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!816 = !{!817, !819, !821, !823, !825, !827, !829, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !0, !873, !875, !877, !879, !881, !883, !885, !887, !890, !892, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !971, !973, !975, !977, !980, !982, !984, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1011, !1014, !1017, !1019, !1021, !1023, !1026, !1029, !1031, !1033}
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "active_dir_set", scope: !2, file: !3, line: 319, type: !244, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "cwd_file", scope: !2, file: !3, line: 330, type: !252, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "cwd_n_alloc", scope: !2, file: !3, line: 333, type: !149, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "cwd_n_used", scope: !2, file: !3, line: 336, type: !149, isLocal: true, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "color_symlink_as_referent", scope: !2, file: !3, line: 355, type: !141, isLocal: true, isDefinition: true)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "hostname", scope: !2, file: !3, line: 357, type: !146, isLocal: true, isDefinition: true)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "pending_dirs", scope: !2, file: !3, line: 378, type: !237, isLocal: true, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "current_time", scope: !2, file: !3, line: 383, type: !214, isLocal: true, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "print_scontext", scope: !2, file: !3, line: 385, type: !141, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "format", scope: !2, file: !3, line: 428, type: !5, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "sort_type", scope: !2, file: !3, line: 481, type: !26, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "print_block_size", scope: !2, file: !3, line: 510, type: !141, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "dired", scope: !2, file: !3, line: 525, type: !141, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "indicator_style", scope: !2, file: !3, line: 542, type: !20, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "print_with_color", scope: !2, file: !3, line: 559, type: !141, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "print_hyperlink", scope: !2, file: !3, line: 561, type: !141, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "check_symlink_mode", scope: !2, file: !3, line: 645, type: !141, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "dereference", scope: !2, file: !3, line: 654, type: !13, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "recursive", scope: !2, file: !3, line: 659, type: !141, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "immediate_dirs", scope: !2, file: !3, line: 664, type: !141, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "directories_first", scope: !2, file: !3, line: 668, type: !141, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "filename_quoting_options", scope: !2, file: !3, line: 715, type: !328, isLocal: true, isDefinition: true)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "print_dir_name", scope: !2, file: !3, line: 724, type: !141, isLocal: true, isDefinition: true)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "localtz", scope: !2, file: !3, line: 733, type: !248, isLocal: true, isDefinition: true)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "format_needs_stat", scope: !2, file: !3, line: 738, type: !141, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "format_needs_type", scope: !2, file: !3, line: 743, type: !141, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "interrupt_signal", scope: !2, file: !3, line: 792, type: !320, isLocal: true, isDefinition: true)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "stop_signal_count", scope: !2, file: !3, line: 796, type: !320, isLocal: true, isDefinition: true)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "dired_pos", scope: !2, file: !3, line: 960, type: !149, isLocal: true, isDefinition: true)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "dired_obstack", scope: !2, file: !3, line: 981, type: !350, isLocal: true, isDefinition: true)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "subdired_obstack", scope: !2, file: !3, line: 988, type: !350, isLocal: true, isDefinition: true)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "dev_ino_obstack", scope: !2, file: !3, line: 1002, type: !350, isLocal: true, isDefinition: true)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "RFC3986", scope: !2, file: !3, line: 1083, type: !343, isLocal: true, isDefinition: true)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "used_color", scope: !2, file: !3, line: 567, type: !141, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "color_indicator", scope: !2, file: !3, line: 608, type: !261, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "sig", scope: !889, file: !3, line: 1358, type: !413, isLocal: true, isDefinition: true)
!889 = distinct !DISubprogram(name: "signal_setup", scope: !3, file: !3, line: 1355, type: !401, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "caught_signals", scope: !2, file: !3, line: 788, type: !403, isLocal: true, isDefinition: true)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "posix_prefix", scope: !894, file: !3, line: 2181, type: !895, isLocal: true, isDefinition: true)
!894 = distinct !DISubprogram(name: "decode_switches", scope: !3, file: !3, line: 1688, type: !235, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 56, elements: !541)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "qmark_funny_chars", scope: !2, file: !3, line: 711, type: !141, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "time_type", scope: !2, file: !3, line: 464, type: !79, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "sort_reverse", scope: !2, file: !3, line: 489, type: !141, isLocal: true, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "numeric_ids", scope: !2, file: !3, line: 506, type: !141, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "print_inode", scope: !2, file: !3, line: 649, type: !141, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "ignore_mode", scope: !2, file: !3, line: 683, type: !85, isLocal: true, isDefinition: true)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "ignore_patterns", scope: !2, file: !3, line: 696, type: !511, isLocal: true, isDefinition: true)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "hide_patterns", scope: !2, file: !3, line: 700, type: !511, isLocal: true, isDefinition: true)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "line_length", scope: !2, file: !3, line: 729, type: !149, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "tabsize", scope: !2, file: !3, line: 720, type: !149, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 839, type: !516, isLocal: true, isDefinition: true)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "print_owner", scope: !2, file: !3, line: 493, type: !141, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "human_output_opts", scope: !2, file: !3, line: 513, type: !27, isLocal: true, isDefinition: true)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "file_human_output_opts", scope: !2, file: !3, line: 519, type: !27, isLocal: true, isDefinition: true)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "output_block_size", scope: !2, file: !3, line: 516, type: !168, isLocal: true, isDefinition: true)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "file_output_block_size", scope: !2, file: !3, line: 520, type: !168, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "print_group", scope: !2, file: !3, line: 501, type: !141, isLocal: true, isDefinition: true)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "print_author", scope: !2, file: !3, line: 497, type: !141, isLocal: true, isDefinition: true)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "sort_types", scope: !2, file: !3, line: 905, type: !528, isLocal: true, isDefinition: true)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "sort_args", scope: !2, file: !3, line: 901, type: !532, isLocal: true, isDefinition: true)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "time_types", scope: !2, file: !3, line: 915, type: !537, isLocal: true, isDefinition: true)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "time_args", scope: !2, file: !3, line: 911, type: !532, isLocal: true, isDefinition: true)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "format_types", scope: !2, file: !3, line: 894, type: !539, isLocal: true, isDefinition: true)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "format_args", scope: !2, file: !3, line: 889, type: !543, isLocal: true, isDefinition: true)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "when_types", scope: !2, file: !3, line: 928, type: !546, isLocal: true, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "when_args", scope: !2, file: !3, line: 921, type: !550, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "indicator_style_types", scope: !2, file: !3, line: 549, type: !553, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "indicator_style_args", scope: !2, file: !3, line: 545, type: !557, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "max_idx", scope: !2, file: !3, line: 948, type: !149, isLocal: true, isDefinition: true)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "align_variable_outer_quotes", scope: !2, file: !3, line: 343, type: !141, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "dirname_quoting_options", scope: !2, file: !3, line: 716, type: !328, isLocal: true, isDefinition: true)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "long_time_format", scope: !2, file: !3, line: 756, type: !561, isLocal: true, isDefinition: true)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "time_style_args", scope: !2, file: !3, line: 441, type: !557, isLocal: true, isDefinition: true)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "time_style_types", scope: !2, file: !3, line: 445, type: !565, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "abformat", scope: !2, file: !3, line: 1107, type: !577, isLocal: true, isDefinition: true)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "use_abformat", scope: !2, file: !3, line: 1111, type: !141, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "G_line", scope: !2, file: !970, line: 1, type: !604, isLocal: true, isDefinition: true)
!970 = !DIFile(filename: "src/dircolors.h", directory: "/home/mbarbar/software/coreutils-8.31")
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "color_buf", scope: !2, file: !3, line: 640, type: !143, isLocal: true, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "color_ext_list", scope: !2, file: !3, line: 637, type: !593, isLocal: true, isDefinition: true)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "indicator_name", scope: !2, file: !3, line: 594, type: !599, isLocal: true, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "first", scope: !979, file: !3, line: 2725, type: !141, isLocal: true, isDefinition: true)
!979 = distinct !DISubprogram(name: "print_dir", scope: !3, file: !3, line: 2720, type: !607, scopeLine: 2721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "cwd_some_quoted", scope: !2, file: !3, line: 339, type: !141, isLocal: true, isDefinition: true)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "sorted_file", scope: !2, file: !3, line: 347, type: !663, isLocal: true, isDefinition: true)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "UNKNOWN_SECURITY_CONTEXT", scope: !2, file: !3, line: 386, type: !666, isLocal: true, isDefinition: true)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "any_has_acl", scope: !2, file: !3, line: 391, type: !141, isLocal: true, isDefinition: true)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "inode_number_width", scope: !2, file: !3, line: 397, type: !27, isLocal: true, isDefinition: true)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "block_size_width", scope: !2, file: !3, line: 398, type: !27, isLocal: true, isDefinition: true)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "nlink_width", scope: !2, file: !3, line: 399, type: !27, isLocal: true, isDefinition: true)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "owner_width", scope: !2, file: !3, line: 401, type: !27, isLocal: true, isDefinition: true)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "group_width", scope: !2, file: !3, line: 402, type: !27, isLocal: true, isDefinition: true)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "author_width", scope: !2, file: !3, line: 403, type: !27, isLocal: true, isDefinition: true)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "scontext_width", scope: !2, file: !3, line: 400, type: !27, isLocal: true, isDefinition: true)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "major_device_number_width", scope: !2, file: !3, line: 404, type: !27, isLocal: true, isDefinition: true)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "minor_device_number_width", scope: !2, file: !3, line: 405, type: !27, isLocal: true, isDefinition: true)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "file_size_width", scope: !2, file: !3, line: 406, type: !27, isLocal: true, isDefinition: true)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1010, file: !3, line: 3084, type: !260, isLocal: true, isDefinition: true)
!1010 = distinct !DISubprogram(name: "has_capability_cache", scope: !3, file: !3, line: 3080, type: !674, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1013, file: !3, line: 3029, type: !260, isLocal: true, isDefinition: true)
!1013 = distinct !DISubprogram(name: "getfilecon_cache", scope: !3, file: !3, line: 3025, type: !682, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "unsupported_device", scope: !1016, file: !3, line: 3059, type: !260, isLocal: true, isDefinition: true)
!1016 = distinct !DISubprogram(name: "file_has_acl_cache", scope: !3, file: !3, line: 3055, type: !684, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "sorted_file_alloc", scope: !2, file: !3, line: 348, type: !149, isLocal: true, isDefinition: true)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "failed_strcoll", scope: !2, file: !3, line: 3564, type: !704, isLocal: true, isDefinition: true)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "sort_functions", scope: !2, file: !3, line: 3741, type: !715, isLocal: true, isDefinition: true)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "filetype_indicator", scope: !1025, file: !3, line: 4710, type: !743, isLocal: true, isDefinition: true)
!1025 = distinct !DISubprogram(name: "get_color_indicator", scope: !3, file: !3, line: 4682, type: !741, scopeLine: 4683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "column_info_alloc", scope: !1028, file: !3, line: 5015, type: !149, isLocal: true, isDefinition: true)
!1028 = distinct !DISubprogram(name: "init_column_info", scope: !3, file: !3, line: 5009, type: !341, scopeLine: 5010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "column_info", scope: !2, file: !3, line: 945, type: !762, isLocal: true, isDefinition: true)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "filetype_letter", scope: !2, file: !3, line: 180, type: !773, isLocal: true, isDefinition: true)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "width", scope: !1035, file: !3, line: 3895, type: !27, isLocal: true, isDefinition: true)
!1035 = distinct !DISubprogram(name: "long_time_expected_width", scope: !3, file: !3, line: 3893, type: !800, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "ls_mode", scope: !1038, file: !1039, line: 2, type: !27, isLocal: false, isDefinition: true)
!1038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1039, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !801, globals: !1040, nameTableKind: None)
!1039 = !DIFile(filename: "src/ls-ls.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1040 = !{!1036}
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "Version", scope: !1043, file: !1044, line: 2, type: !146, isLocal: false, isDefinition: true)
!1043 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1044, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1045, globals: !1046, nameTableKind: None)
!1044 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1045 = !{!146}
!1046 = !{!1041}
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1049, file: !1097, line: 69, type: !535, isLocal: false, isDefinition: true)
!1049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1050, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1051, globals: !1096, nameTableKind: None)
!1050 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1051 = !{!167, !535, !1052, !149, !564, !141, !567, !1054, !146, !1056, !1058, !1092, !1094, !341}
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!564, !146, !567, !146, !149}
!1054 = !DISubroutineType(types: !1055)
!1055 = !{null, !146, !146, !564}
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !567, !146, !149}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1060, file: !272, line: 51, baseType: !27, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1060, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1060, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1060, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1060, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1060, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1060, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1060, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1060, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1060, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1060, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1060, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1060, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1060, file: !272, line: 70, baseType: !1076, size: 64, offset: 832)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1060, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1060, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1060, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1060, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1060, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1060, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1060, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1060, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1060, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1060, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1060, file: !272, line: 93, baseType: !1076, size: 64, offset: 1344)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1060, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1060, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1060, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1060, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!564, !146, !146, !567, !146, !149, !535}
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!146, !146, !567, !146, !149}
!1096 = !{!1047}
!1097 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "file_name", scope: !1100, file: !1140, line: 46, type: !146, isLocal: true, isDefinition: true)
!1100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1101, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1102, globals: !1137, nameTableKind: None)
!1101 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1102 = !{!570, !146, !401, !141, !341, !1103, !27, !330}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1105, file: !272, line: 51, baseType: !27, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1105, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1105, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1105, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1105, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1105, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1105, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1105, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1105, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1105, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1105, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1105, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1105, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1105, file: !272, line: 70, baseType: !1121, size: 64, offset: 832)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1105, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1105, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1105, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1105, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1105, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1105, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1105, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1105, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1105, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1105, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1105, file: !272, line: 93, baseType: !1121, size: 64, offset: 1344)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1105, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1105, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1105, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1105, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1137 = !{!1098, !1138}
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !1100, file: !1140, line: 56, type: !141, isLocal: true, isDefinition: true)
!1140 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "exit_failure", scope: !1143, file: !1147, line: 24, type: !330, isLocal: false, isDefinition: true)
!1143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1144, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1145, globals: !1146, nameTableKind: None)
!1144 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1145 = !{!330}
!1146 = !{!1141}
!1147 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "default_tuning", scope: !1150, file: !1159, line: 130, type: !1175, isLocal: true, isDefinition: true)
!1150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1151, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1152, globals: !1279, nameTableKind: None)
!1151 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1152 = !{!151, !167, !149, !1153, !1156, !1168, !1162, !1194, !1196, !1232, !1189, !1234, !1236, !663, !1238, !1244, !591, !147, !1246, !1175, !1249, !1251, !1157, !1174, !1186, !1192, !1252, !1254, !1256, !181, !1180, !141, !1258, !27, !1260, !333, !337, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1277}
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!149, !1155}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !246, line: 69, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1159, line: 52, size: 640, elements: !1160)
!1159 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1160 = !{!1161, !1167, !1170, !1171, !1172, !1173, !1185, !1188, !1191, !1193}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !1158, file: !1159, line: 57, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !1159, line: 46, size: 128, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1163, file: !1159, line: 48, baseType: !167, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1163, file: !1159, line: 49, baseType: !1162, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !1158, file: !1159, line: 58, baseType: !1168, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !1158, file: !1159, line: 59, baseType: !149, size: 64, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !1158, file: !1159, line: 60, baseType: !149, size: 64, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !1158, file: !1159, line: 61, baseType: !149, size: 64, offset: 256)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !1158, file: !1159, line: 64, baseType: !1174, size: 64, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !246, line: 65, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !246, line: 53, size: 160, elements: !1178)
!1178 = !{!1179, !1181, !1182, !1183, !1184}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !1177, file: !246, line: 58, baseType: !1180, size: 32)
!1180 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !1177, file: !246, line: 59, baseType: !1180, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !1177, file: !246, line: 60, baseType: !1180, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !1177, file: !246, line: 61, baseType: !1180, size: 32, offset: 96)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !1177, file: !246, line: 62, baseType: !141, size: 8, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !1158, file: !1159, line: 71, baseType: !1186, size: 64, offset: 384)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !246, line: 48, baseType: !1187)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !1158, file: !1159, line: 72, baseType: !1189, size: 64, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !246, line: 49, baseType: !1190)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !1158, file: !1159, line: 73, baseType: !1192, size: 64, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !246, line: 50, baseType: !386)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !1158, file: !1159, line: 76, baseType: !1162, size: 64, offset: 576)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!141, !1155}
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1155, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1200, file: !272, line: 51, baseType: !27, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1200, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1200, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1200, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1200, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1200, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1200, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1200, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1200, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1200, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1200, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1200, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1200, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1200, file: !272, line: 70, baseType: !1216, size: 64, offset: 832)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1200, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1200, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1200, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1200, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1200, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1200, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1200, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1200, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1200, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1200, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1200, file: !272, line: 93, baseType: !1216, size: 64, offset: 1344)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1200, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1200, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1200, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1200, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!167, !1155, !181}
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!167, !1155}
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!149, !1155, !663, !149}
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!149, !1155, !1240, !167}
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !246, line: 51, baseType: !1241)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!141, !167, !167}
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!149, !146, !149}
!1246 = !DISubroutineType(types: !1247)
!1247 = !{null, !1248}
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1251, !149, !1174, !1186, !1189, !1192}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1251}
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!141, !1251, !149}
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!27, !1251, !181, !180}
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!167, !1251, !181}
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!1162, !1155, !181}
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!141, !1251}
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!149, !149, !1174}
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!149, !149}
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!141, !149}
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!141, !1251, !1251, !141}
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !1251, !1162}
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!167, !1251, !181, !1276, !141}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1162, !1251}
!1279 = !{!1148}
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "power_letter", scope: !1282, file: !1339, line: 36, type: !1318, isLocal: true, isDefinition: true)
!1282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1283, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !1285, globals: !1336, nameTableKind: None)
!1283 = !DIFile(filename: "./lib/human.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1284 = !{!109}
!1285 = !{!146, !1286, !27, !6, !168, !143, !149, !1288, !1317, !144, !1318, !1319, !1322, !1323, !1325, !1327, !591, !147, !1330, !1332, !1333, !1334}
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!143, !168, !143, !27, !168, !168}
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !1291, line: 51, size: 768, elements: !1292)
!1291 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !1290, file: !1291, line: 55, baseType: !143, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "thousands_sep", scope: !1290, file: !1291, line: 56, baseType: !143, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !1290, file: !1291, line: 62, baseType: !143, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "int_curr_symbol", scope: !1290, file: !1291, line: 68, baseType: !143, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "currency_symbol", scope: !1290, file: !1291, line: 69, baseType: !143, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "mon_decimal_point", scope: !1290, file: !1291, line: 70, baseType: !143, size: 64, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "mon_thousands_sep", scope: !1290, file: !1291, line: 71, baseType: !143, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "mon_grouping", scope: !1290, file: !1291, line: 72, baseType: !143, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "positive_sign", scope: !1290, file: !1291, line: 73, baseType: !143, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sign", scope: !1290, file: !1291, line: 74, baseType: !143, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "int_frac_digits", scope: !1290, file: !1291, line: 75, baseType: !144, size: 8, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "frac_digits", scope: !1290, file: !1291, line: 76, baseType: !144, size: 8, offset: 648)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "p_cs_precedes", scope: !1290, file: !1291, line: 78, baseType: !144, size: 8, offset: 656)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "p_sep_by_space", scope: !1290, file: !1291, line: 80, baseType: !144, size: 8, offset: 664)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "n_cs_precedes", scope: !1290, file: !1291, line: 82, baseType: !144, size: 8, offset: 672)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "n_sep_by_space", scope: !1290, file: !1291, line: 84, baseType: !144, size: 8, offset: 680)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "p_sign_posn", scope: !1290, file: !1291, line: 91, baseType: !144, size: 8, offset: 688)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "n_sign_posn", scope: !1290, file: !1291, line: 92, baseType: !144, size: 8, offset: 696)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_cs_precedes", scope: !1290, file: !1291, line: 95, baseType: !144, size: 8, offset: 704)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sep_by_space", scope: !1290, file: !1291, line: 97, baseType: !144, size: 8, offset: 712)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_cs_precedes", scope: !1290, file: !1291, line: 99, baseType: !144, size: 8, offset: 720)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sep_by_space", scope: !1290, file: !1291, line: 101, baseType: !144, size: 8, offset: 728)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "int_p_sign_posn", scope: !1290, file: !1291, line: 108, baseType: !144, size: 8, offset: 736)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "int_n_sign_posn", scope: !1290, file: !1291, line: 109, baseType: !144, size: 8, offset: 744)
!1317 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 72, elements: !548)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!109, !146, !524, !1321}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !110, line: 39, baseType: !109)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!1317, !27, !1317}
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!143, !143, !149, !146, !146}
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 328, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 41)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1322, !146, !1321, !524}
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 192, elements: !224)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 64, elements: !562)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!168}
!1336 = !{!1280, !1337, !1340}
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "block_size_args", scope: !1282, file: !1339, line: 398, type: !1332, isLocal: true, isDefinition: true)
!1339 = !DIFile(filename: "lib/human.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "block_size_opts", scope: !1282, file: !1339, line: 399, type: !1333, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "user_alist", scope: !1344, file: !1351, line: 55, type: !1349, isLocal: true, isDefinition: true)
!1344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1345, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1346, globals: !1387, nameTableKind: None)
!1345 = !DIFile(filename: "./lib/idcache.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1346 = !{!167, !1347, !1349, !1354, !1360, !146, !143, !361, !1371, !144, !147, !203, !1374, !1376, !1384, !205}
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!143, !692}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "userid", file: !1351, line: 37, size: 128, elements: !1352)
!1351 = !DIFile(filename: "lib/idcache.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1352 = !{!1353, !1358, !1359}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1350, file: !1351, line: 43, baseType: !1354, size: 32)
!1354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1350, file: !1351, line: 39, size: 32, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1354, file: !1351, line: 41, baseType: !692, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1354, file: !1351, line: 42, baseType: !697, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1350, file: !1351, line: 44, baseType: !1349, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1350, file: !1351, line: 45, baseType: !361, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !1362, line: 49, size: 384, elements: !1363)
!1362 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !1361, file: !1362, line: 51, baseType: !143, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !1361, file: !1362, line: 52, baseType: !143, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !1361, file: !1362, line: 54, baseType: !203, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !1361, file: !1362, line: 55, baseType: !205, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !1361, file: !1362, line: 56, baseType: !143, size: 64, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !1361, file: !1362, line: 57, baseType: !143, size: 64, offset: 256)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !1361, file: !1362, line: 58, baseType: !143, size: 64, offset: 320)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!1373, !146}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!143, !697}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !1378, line: 42, size: 256, elements: !1379)
!1378 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!1379 = !{!1380, !1381, !1382, !1383}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !1377, file: !1378, line: 44, baseType: !143, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !1377, file: !1378, line: 45, baseType: !143, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !1377, file: !1378, line: 46, baseType: !205, size: 32, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !1377, file: !1378, line: 47, baseType: !142, size: 64, offset: 192)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!1386, !146}
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!1387 = !{!1342, !1388, !1390, !1392}
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "nouser_alist", scope: !1344, file: !1351, line: 58, type: !1349, isLocal: true, isDefinition: true)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "group_alist", scope: !1344, file: !1351, line: 61, type: !1349, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "nogroup_alist", scope: !1344, file: !1351, line: 64, type: !1349, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "program_name", scope: !1396, file: !1434, line: 33, type: !146, isLocal: false, isDefinition: true)
!1396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1397, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1398, globals: !1433, nameTableKind: None)
!1397 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1398 = !{!167, !143, !146, !570, !1399}
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1401, file: !272, line: 51, baseType: !27, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1401, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1401, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1401, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1401, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1401, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1401, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1401, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1401, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1401, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1401, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1401, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1401, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1401, file: !272, line: 70, baseType: !1417, size: 64, offset: 832)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1401, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1401, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1401, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1401, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1401, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1401, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1401, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1401, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1401, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1401, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1401, file: !272, line: 93, baseType: !1417, size: 64, offset: 1344)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1401, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1401, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1401, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1401, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1433 = !{!1394}
!1434 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1437, file: !1447, line: 85, type: !1441, isLocal: false, isDefinition: true)
!1437 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1438, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1439, retainedTypes: !1440, globals: !1531, nameTableKind: None)
!1438 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1439 = !{!95}
!1440 = !{!27, !176, !149, !1441, !1442, !1443, !1445, !1455, !1459, !1461, !591, !1463, !6, !1464, !1466, !146, !1468, !1457, !1470, !1472, !143, !341, !1474, !343, !1479, !1481, !572, !1483, !1485, !1487, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !579, !1511, !141, !147, !587, !1515, !654, !1513, !1525, !1527, !1529}
!1441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 704, elements: !774)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 320, elements: !551)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!1445, !1445}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1447, line: 65, size: 448, elements: !1448)
!1447 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1448 = !{!1449, !1450, !1451, !1453, !1454}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1446, file: !1447, line: 68, baseType: !95, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1446, file: !1447, line: 71, baseType: !27, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1446, file: !1447, line: 75, baseType: !1452, size: 256, offset: 64)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 256, elements: !544)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1446, file: !1447, line: 78, baseType: !146, size: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1446, file: !1447, line: 81, baseType: !146, size: 64, offset: 384)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!95, !1457}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !1445, !95}
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!27, !1445, !144, !27}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!27, !1445, !27}
!1466 = !DISubroutineType(types: !1467)
!1467 = !{null, !1445, !146, !146}
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!149, !143, !149, !146, !149, !1457}
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!143, !146, !149, !1457}
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!143, !146, !149, !148, !1457}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1447, line: 834, size: 128, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1475, file: !1447, line: 836, baseType: !149, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1475, file: !1447, line: 837, baseType: !143, size: 64, offset: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!143, !27, !146}
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!143, !27, !146, !149}
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!143, !146, !149}
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!143, !27, !95, !146}
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!143, !27, !95, !146, !149}
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!143, !95, !146}
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!143, !95, !146, !149}
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!143, !146, !149, !144}
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!143, !146, !144}
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!143, !27, !146, !146, !146}
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!143, !27, !146, !146, !146, !149}
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!143, !146, !146, !146}
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!143, !146, !146, !146, !149}
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!146, !27, !146, !149}
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!146, !146, !149}
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!146, !27, !146}
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!149, !143, !149, !146, !149, !95, !27, !1513, !146, !146}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !1518)
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1517, file: !644, line: 15, baseType: !27, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1517, file: !644, line: 20, baseType: !1521, size: 32, offset: 32)
!1521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !644, line: 16, size: 32, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1521, file: !644, line: 18, baseType: !6, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1521, file: !644, line: 19, baseType: !653, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!146, !146, !95}
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!143, !27, !146, !149, !1457}
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1446, !95}
!1531 = !{!1435, !1532, !1534, !1536, !1538, !1540, !1542, !1544}
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1437, file: !1447, line: 101, type: !1442, isLocal: false, isDefinition: true)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1437, file: !1447, line: 1052, type: !1446, isLocal: false, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1437, file: !1447, line: 116, type: !1446, isLocal: true, isDefinition: true)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "slot0", scope: !1437, file: !1447, line: 842, type: !343, isLocal: true, isDefinition: true)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "slotvec", scope: !1437, file: !1447, line: 845, type: !1474, isLocal: true, isDefinition: true)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "nslots", scope: !1437, file: !1447, line: 843, type: !27, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1437, file: !1447, line: 844, type: !1475, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1548, file: !1555, line: 26, type: !1551, isLocal: false, isDefinition: true)
!1548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1549, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1550, globals: !1554, nameTableKind: None)
!1549 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1550 = !{!1551}
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 376, elements: !1552)
!1552 = !{!1553}
!1553 = !DISubrange(count: 47)
!1554 = !{!1546}
!1555 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "obstack_alloc_failed_handler", scope: !1558, file: !1646, line: 351, type: !425, isLocal: false, isDefinition: true)
!1558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1559, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1560, globals: !1645, nameTableKind: None)
!1559 = !DIFile(filename: "./lib/obstack.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1560 = !{!143, !167, !1561, !1584, !1589, !1597, !1599, !1568, !149, !425, !1601, !1603, !1605, !1607, !27, !1609, !341, !1611, !330}
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!27, !1563, !149, !149, !375, !386}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !351, line: 174, size: 704, elements: !1565)
!1565 = !{!1566, !1567, !1574, !1575, !1576, !1577, !1582, !1583, !1588, !1593, !1594, !1595, !1596}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1564, file: !351, line: 176, baseType: !149, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1564, file: !351, line: 177, baseType: !1568, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !351, line: 167, size: 128, elements: !1570)
!1570 = !{!1571, !1572, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1569, file: !351, line: 169, baseType: !143, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1569, file: !351, line: 170, baseType: !1568, size: 64, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1569, file: !351, line: 171, baseType: !361, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1564, file: !351, line: 178, baseType: !143, size: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1564, file: !351, line: 179, baseType: !143, size: 64, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1564, file: !351, line: 180, baseType: !143, size: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1564, file: !351, line: 185, baseType: !1578, size: 64, offset: 320)
!1578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 181, size: 64, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1578, file: !351, line: 183, baseType: !149, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1578, file: !351, line: 184, baseType: !167, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1564, file: !351, line: 186, baseType: !149, size: 64, offset: 384)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1564, file: !351, line: 193, baseType: !1584, size: 64, offset: 448)
!1584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 189, size: 64, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1584, file: !351, line: 191, baseType: !375, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1584, file: !351, line: 192, baseType: !379, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1564, file: !351, line: 198, baseType: !1589, size: 64, offset: 512)
!1589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !351, line: 194, size: 64, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "plain", scope: !1589, file: !351, line: 196, baseType: !386, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !1589, file: !351, line: 197, baseType: !388, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1564, file: !351, line: 200, baseType: !167, size: 64, offset: 576)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1564, file: !351, line: 201, baseType: !6, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1564, file: !351, line: 202, baseType: !6, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1564, file: !351, line: 206, baseType: !6, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!27, !1563, !149, !149, !379, !388, !167}
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1563, !149}
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!27, !1563, !167}
!1603 = !DISubroutineType(types: !1604)
!1604 = !{null, !1563, !167}
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!149, !1563}
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!27, !1563, !149, !149}
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!167, !1563, !149}
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1613, file: !272, line: 51, baseType: !27, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1613, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1613, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1613, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1613, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1613, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1613, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1613, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1613, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1613, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1613, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1613, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1613, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1613, file: !272, line: 70, baseType: !1629, size: 64, offset: 832)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1613, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1613, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1613, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1613, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1613, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1613, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1613, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1613, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1613, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1613, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1613, file: !272, line: 93, baseType: !1629, size: 64, offset: 1344)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1613, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1613, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1613, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1613, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!1645 = !{!1556}
!1646 = !DIFile(filename: "lib/obstack.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1648, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1649, nameTableKind: None)
!1648 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1649 = !{!167, !1483, !149, !1650, !143, !27}
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !178, line: 108, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !165, line: 193, baseType: !166)
!1652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1653, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1654, nameTableKind: None)
!1653 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1654 = !{!680, !1655}
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!27, !27}
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1659, nameTableKind: None)
!1658 = !DIFile(filename: "./lib/c-strncasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1659 = !{!1660, !1662, !591, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!27, !146, !146, !149}
!1664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1665, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1666, retainedTypes: !1674, nameTableKind: None)
!1665 = !DIFile(filename: "./lib/canonicalize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1666 = !{!1667}
!1667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "canonicalize_mode_t", file: !1668, line: 24, baseType: !6, size: 32, elements: !1669)
!1668 = !DIFile(filename: "./lib/canonicalize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIEnumerator(name: "CAN_EXISTING", value: 0, isUnsigned: true)
!1671 = !DIEnumerator(name: "CAN_ALL_BUT_LAST", value: 1, isUnsigned: true)
!1672 = !DIEnumerator(name: "CAN_MISSING", value: 2, isUnsigned: true)
!1673 = !DIEnumerator(name: "CAN_NOLINKS", value: 4, isUnsigned: true)
!1674 = !{!167, !1675, !143, !146, !149, !244, !27, !141, !144, !147, !564, !201, !179, !1678}
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!143, !146, !1677}
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "canonicalize_mode_t", file: !1668, line: 38, baseType: !1667)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!141, !1680, !146, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1701, !1702, !1703}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1683, file: !192, line: 48, baseType: !195, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1683, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1683, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1683, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1683, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1683, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1683, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1683, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1683, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1683, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1683, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1683, file: !192, line: 91, baseType: !1697, size: 128, offset: 576)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1697, file: !215, line: 11, baseType: !164, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1697, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1683, file: !192, line: 92, baseType: !1697, size: 128, offset: 704)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1683, file: !192, line: 93, baseType: !1697, size: 128, offset: 832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1683, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1705, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1706, nameTableKind: None)
!1705 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1706 = !{!1707, !149, !146, !572, !141, !143}
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!149, !146}
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1711, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1711 = !{!143, !572, !146, !141, !147, !1707, !149}
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1714, nameTableKind: None)
!1713 = !DIFile(filename: "./lib/file-has-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1714 = !{!167, !1715, !201, !1650, !27}
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!27, !146, !1717}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1737, !1738, !1739}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1719, file: !192, line: 48, baseType: !195, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1719, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1719, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1719, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1719, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1719, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1719, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1719, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1719, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1719, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1719, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1719, file: !192, line: 91, baseType: !1733, size: 128, offset: 576)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1733, file: !215, line: 11, baseType: !164, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1733, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1719, file: !192, line: 92, baseType: !1733, size: 128, offset: 704)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1719, file: !192, line: 93, baseType: !1733, size: 128, offset: 832)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1719, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1741, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1742, nameTableKind: None)
!1741 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1742 = !{!167, !143, !1743, !1768, !197, !258, !195, !260, !1775}
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !244, !146, !1745}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1765, !1766, !1767}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1747, file: !192, line: 48, baseType: !195, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1747, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1747, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1747, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1747, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1747, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1747, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1747, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1747, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1747, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1747, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1747, file: !192, line: 91, baseType: !1761, size: 128, offset: 576)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1761, file: !215, line: 11, baseType: !164, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1761, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1747, file: !192, line: 92, baseType: !1761, size: 128, offset: 704)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1747, file: !192, line: 93, baseType: !1761, size: 128, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1747, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1770, line: 9, size: 192, elements: !1771)
!1770 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1771 = !{!1772, !1773, !1774}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1769, file: !1770, line: 11, baseType: !143, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1769, file: !1770, line: 12, baseType: !258, size: 64, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1769, file: !1770, line: 13, baseType: !260, size: 64, offset: 128)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!141, !1777, !146, !1745}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!1779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1780, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1781, nameTableKind: None)
!1780 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1781 = !{!1782, !143, !1784, !201, !1809}
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !228, !143}
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1786, !143}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1806, !1807, !1808}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1788, file: !192, line: 48, baseType: !195, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1788, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1788, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1788, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1788, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1788, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1788, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1788, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1788, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1788, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1788, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1788, file: !192, line: 91, baseType: !1802, size: 128, offset: 576)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1802, file: !215, line: 11, baseType: !164, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1802, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1788, file: !192, line: 92, baseType: !1802, size: 128, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1788, file: !192, line: 93, baseType: !1802, size: 128, offset: 832)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1788, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!144, !228}
!1811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1812, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1813, nameTableKind: None)
!1812 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1813 = !{!167, !1814, !143}
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!143, !146, !146, !142}
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1818, nameTableKind: None)
!1817 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1818 = !{!167, !1814, !146, !149, !144, !147, !143}
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1821, nameTableKind: None)
!1820 = !DIFile(filename: "./lib/filevercmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1821 = !{!27, !731, !146, !149, !147, !1822, !141, !1824, !1826}
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!146, !145}
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!27, !146, !149, !146, !149}
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!27, !591}
!1828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1829, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1830, nameTableKind: None)
!1829 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1830 = !{!1831, !1838}
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1833}
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !1835)
!1835 = !{!1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1834, file: !215, line: 11, baseType: !164, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1834, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!1834}
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1842, nameTableKind: None)
!1841 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1842 = !{!680, !141, !146}
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1845, nameTableKind: None)
!1844 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1845 = !{!333, !1846, !149, !143, !258, !337, !260, !339, !1853}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1770, line: 9, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1848, file: !1770, line: 11, baseType: !143, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1848, file: !1770, line: 12, baseType: !258, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1848, file: !1770, line: 13, baseType: !260, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1855, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1856, nameTableKind: None)
!1855 = !DIFile(filename: "./lib/imaxtostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1856 = !{!1857, !1859, !143, !144}
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !169, line: 101, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !165, line: 72, baseType: !166)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!143, !1857, !143}
!1861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1862, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1863, nameTableKind: None)
!1862 = !DIFile(filename: "./lib/umaxtostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1863 = !{!168, !1864, !143, !144}
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!143, !168, !143}
!1866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1867, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1868, retainedTypes: !1869, nameTableKind: None)
!1867 = !DIFile(filename: "./lib/mbsalign.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1868 = !{!123}
!1869 = !{!167, !1870, !1872, !149, !143, !1874, !146, !141, !1875, !1877, !654, !1879, !27, !1881, !144}
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1871, line: 20, baseType: !6)
!1871 = !DIFile(filename: "/usr/include/bits/types/wint_t.h", directory: "")
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!149, !146, !143, !149, !148, !586, !27}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!143, !146, !148, !586, !27}
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!141, !1874}
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!149, !1874, !149}
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!143, !143, !146, !149}
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1885, nameTableKind: None)
!1884 = !DIFile(filename: "./lib/mbswidth.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1885 = !{!149, !591, !27, !176, !1886, !1888, !146, !147, !1890, !654, !587}
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!27, !146, !27}
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!27, !146, !149, !27}
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1892, file: !644, line: 15, baseType: !27, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1892, file: !644, line: 20, baseType: !1896, size: 32, offset: 32)
!1896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1892, file: !644, line: 16, size: 32, elements: !1897)
!1897 = !{!1898, !1899}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1896, file: !644, line: 18, baseType: !6, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1896, file: !644, line: 19, baseType: !653, size: 32)
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1902, nameTableKind: None)
!1901 = !DIFile(filename: "./lib/mpsort.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1902 = !{!1903, !1910, !181, !180, !149}
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !180, !149, !1905}
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1906, line: 28, baseType: !1907)
!1906 = !DIFile(filename: "lib/mpsort.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!27, !181, !181}
!1910 = !DISubroutineType(types: !1911)
!1911 = !{null, !1912, !149, !1912, !1905}
!1912 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !180)
!1913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1914, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1915, nameTableKind: None)
!1914 = !DIFile(filename: "./lib/nstrftime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1915 = !{!146, !6, !149, !167, !181, !591, !1916, !141, !1941, !27, !143, !147, !144, !1943, !1946, !1947, !162, !166, !1881, !1950}
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!149, !143, !149, !146, !1918, !1933, !27}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1920, file: !787, line: 9, baseType: !27, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1920, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1920, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1920, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1920, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1920, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1920, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1920, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1920, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1920, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1920, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !1934)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1936, line: 21, size: 128, elements: !1937)
!1936 = !DIFile(filename: "./lib/time-internal.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1937 = !{!1938, !1939, !1940}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1935, file: !1936, line: 25, baseType: !1934, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !1935, file: !1936, line: 36, baseType: !144, size: 8, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !1935, file: !1936, line: 48, baseType: !361, offset: 72)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!149, !143, !149, !146, !1918, !141, !27, !27, !640, !1933, !27}
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 184, elements: !1944)
!1944 = !{!1945}
!1945 = !DISubrange(count: 23)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 40, elements: !530)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8192, elements: !1948)
!1948 = !{!1949}
!1949 = !DISubrange(count: 1024)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!27, !27, !27}
!1952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1953, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1954, nameTableKind: None)
!1953 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1954 = !{!1955, !1957, !146, !149, !141, !143, !27, !197, !195}
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!141, !146, !146}
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!141, !27, !146, !27, !146}
!1959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1960, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1961, nameTableKind: None)
!1960 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1961 = !{!1962, !27, !1967, !1969, !1971, !1973, !1975, !1977, !1979, !1981, !1984, !731}
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!27, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1966, line: 83, baseType: !143)
!1966 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1967 = !DISubroutineType(types: !1968)
!1968 = !{null, !1965}
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!27, !1965}
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!27, !146, !228, !1964}
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!27, !146, !1964}
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!27, !27, !1964}
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!27, !146, !1965}
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!27, !27, !1965}
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!27, !1965, !1965, !1983, !1964}
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1966, line: 82, baseType: !176)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!1983, !146}
!1986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1987, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !1988, nameTableKind: None)
!1987 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1988 = !{!1989, !219, !2014, !164, !2016}
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!166, !1991}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2011, !2012, !2013}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1993, file: !192, line: 48, baseType: !195, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1993, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1993, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1993, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1993, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1993, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1993, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1993, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1993, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1993, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1993, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1993, file: !192, line: 91, baseType: !2007, size: 128, offset: 576)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2007, file: !215, line: 11, baseType: !164, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2007, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1993, file: !192, line: 92, baseType: !2007, size: 128, offset: 704)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1993, file: !192, line: 93, baseType: !2007, size: 128, offset: 832)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1993, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!2007, !1991}
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!27, !27, !2018}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2020, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2021, nameTableKind: None)
!2020 = !DIFile(filename: "./lib/timespec.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2021 = !{!2022, !164, !219, !2028, !2030, !2032}
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!2024, !162, !166}
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2024, file: !215, line: 11, baseType: !164, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2024, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!27, !2024, !2024}
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!27, !2024}
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!2034, !2024}
!2034 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2036, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2037, nameTableKind: None)
!2036 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2037 = !{!167, !2038, !2074, !567, !2075, !149, !2077, !2086, !2087, !2089, !341, !2040}
!2038 = !DISubroutineType(types: !2039)
!2039 = !{null, !2040, !146, !146, !146, !567, !149}
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2042, file: !272, line: 51, baseType: !27, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2042, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2042, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2042, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2042, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2042, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2042, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2042, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2042, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2042, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2042, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2042, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2042, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2042, file: !272, line: 70, baseType: !2058, size: 64, offset: 832)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2042, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2042, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2042, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2042, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2042, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2042, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2042, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2042, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2042, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2042, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2042, file: !272, line: 93, baseType: !2058, size: 64, offset: 1344)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2042, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2042, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2042, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2042, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, elements: !326)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !2040, !146, !146, !146, !567}
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !2040, !146, !146, !146, !2079}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2036, line: 189, size: 192, elements: !2081)
!2081 = !{!2082, !2083, !2084, !2085}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2080, file: !2036, line: 189, baseType: !6, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2080, file: !2036, line: 189, baseType: !6, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2080, file: !2036, line: 189, baseType: !167, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2080, file: !2036, line: 189, baseType: !167, size: 64, offset: 128)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 640, elements: !551)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !2040, !146, !146, !146}
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2090, line: 52, baseType: !2091)
!2090 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2092, line: 32, baseType: !2093)
!2092 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2036, line: 231, baseType: !2094)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2080, size: 192, elements: !299)
!2095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2096, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2097, nameTableKind: None)
!2096 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2097 = !{!149, !143, !167, !2098, !2100, !2102, !2104, !376, !380, !2106, !2108, !572}
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!167, !149, !149}
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!167, !167, !149, !149}
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!167, !167, !148, !149}
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!143, !149}
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!167, !167, !148}
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!167, !181, !149}
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2112, nameTableKind: None)
!2111 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2112 = !{!341, !330}
!2113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2114, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2115, nameTableKind: None)
!2114 = !DIFile(filename: "./lib/xdectoumax.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2115 = !{!2116, !1322, !168, !27, !2118}
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!168, !146, !27, !168, !168, !146, !146, !27}
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!168, !146, !168, !168, !146, !146, !27}
!2120 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2121, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2122, nameTableKind: None)
!2121 = !DIFile(filename: "./lib/xgetcwd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2122 = !{!2123, !143, !27}
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!143}
!2125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2126, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2127, nameTableKind: None)
!2126 = !DIFile(filename: "./lib/xgethostname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2127 = !{!2123, !143, !149, !27}
!2128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2129, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2130, nameTableKind: None)
!2129 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2130 = !{!27, !176, !2131, !143, !142, !151, !1322, !146, !591, !147, !587, !144, !2134, !2136}
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!1322, !146, !142, !27, !2133, !146}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!1322, !2133, !27}
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!1322, !2133, !27, !27}
!2138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2139, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2140, nameTableKind: None)
!2139 = !DIFile(filename: "./lib/xstrtol-error.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2140 = !{!2141, !330, !2151, !146, !666, !2143}
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !109, !27, !144, !2143, !146}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !519, line: 50, size: 256, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2145, file: !519, line: 52, baseType: !146, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !2145, file: !519, line: 55, baseType: !27, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2145, file: !519, line: 56, baseType: !524, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2145, file: !519, line: 57, baseType: !27, size: 32, offset: 192)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{null, !109, !27, !144, !2143, !146, !27}
!2153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2154, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !2155, nameTableKind: None)
!2154 = !DIFile(filename: "./lib/xstrtoumax.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2155 = !{!27, !176, !2156, !143, !142, !168, !1322, !146, !591, !147, !587, !144, !2158, !2160}
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!1322, !146, !142, !27, !1321, !146}
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!1322, !1321, !27}
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!1322, !1321, !27, !27}
!2162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2163, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2164, nameTableKind: None)
!2163 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2164 = !{!149, !2165, !654, !591, !147}
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!149, !1874, !146, !149, !2167}
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !642, line: 6, baseType: !2169)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !644, line: 21, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 13, size: 64, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2170, file: !644, line: 15, baseType: !27, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2170, file: !644, line: 20, baseType: !2174, size: 32, offset: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2170, file: !644, line: 16, size: 32, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2174, file: !644, line: 18, baseType: !6, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2174, file: !644, line: 19, baseType: !653, size: 32)
!2178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2179, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2180, globals: !2228, nameTableKind: None)
!2179 = !DIFile(filename: "./lib/time_rz.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2180 = !{!143, !149, !2181, !2183, !2184, !144, !361, !2190, !2192, !141, !2210, !162, !2212, !2214, !27, !2123, !2216, !2218, !2220, !146, !147, !2222, !2226}
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!2183, !146}
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "timezone_t", file: !249, line: 764, baseType: !2184)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm_zone", file: !1936, line: 21, size: 128, elements: !2186)
!2186 = !{!2187, !2188, !2189}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2185, file: !1936, line: 25, baseType: !2184, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "tz_is_set", scope: !2185, file: !1936, line: 36, baseType: !144, size: 8, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "abbrs", scope: !2185, file: !1936, line: 48, baseType: !361, offset: 72)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !2183}
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!2194, !2183, !2208, !2194}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !787, line: 7, size: 448, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !2195, file: !787, line: 9, baseType: !27, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !2195, file: !787, line: 10, baseType: !27, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !2195, file: !787, line: 11, baseType: !27, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !2195, file: !787, line: 12, baseType: !27, size: 32, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !2195, file: !787, line: 13, baseType: !27, size: 32, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !2195, file: !787, line: 14, baseType: !27, size: 32, offset: 160)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !2195, file: !787, line: 15, baseType: !27, size: 32, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !2195, file: !787, line: 16, baseType: !27, size: 32, offset: 224)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !2195, file: !787, line: 17, baseType: !27, size: 32, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !2195, file: !787, line: 20, baseType: !166, size: 64, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !2195, file: !787, line: 21, baseType: !146, size: 64, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!162, !2183, !2194}
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !143, !146, !149}
!2214 = !DISubroutineType(types: !2215)
!2215 = !{!2183, !2183}
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!141, !2183}
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!27, !146}
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!141, !2183, !2194}
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!27, !2224, !2224}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!141, !27, !27}
!2228 = !{!2229}
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "local_tz", scope: !2178, file: !2231, line: 55, type: !2232, isLocal: true, isDefinition: true)
!2231 = !DIFile(filename: "lib/time_rz.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2234, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2235, nameTableKind: None)
!2234 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2235 = !{!680}
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2238, nameTableKind: None)
!2237 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2238 = !{!2239, !2244, !2247, !2249, !2253}
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!2241, !2241, !27}
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2242, line: 27, baseType: !2243)
!2242 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !165, line: 45, baseType: !151)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!2246, !2246, !27}
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2242, line: 26, baseType: !496)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!149, !149, !27}
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2251, !2251, !27}
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !2242, line: 25, baseType: !2252)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !165, line: 40, baseType: !176)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!2255, !2255, !27}
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !2242, line: 24, baseType: !2256)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !165, line: 38, baseType: !591)
!2257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2258, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2259, nameTableKind: None)
!2258 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2259 = !{!1660, !731, !591, !1661}
!2260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2261, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2262, nameTableKind: None)
!2261 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2262 = !{!2263, !2299, !27}
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!27, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2267, file: !272, line: 51, baseType: !27, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2267, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2267, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2267, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2267, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2267, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2267, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2267, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2267, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2267, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2267, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2267, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2267, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2267, file: !272, line: 70, baseType: !2283, size: 64, offset: 832)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2267, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2267, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2267, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2267, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2267, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2267, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2267, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2267, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2267, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2267, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2267, file: !272, line: 93, baseType: !2283, size: 64, offset: 1344)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2267, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2267, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2267, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2267, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!2300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2301, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2302, nameTableKind: None)
!2301 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2302 = !{!572, !143}
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2305, nameTableKind: None)
!2304 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2305 = !{!333, !146, !149, !147}
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2308, nameTableKind: None)
!2307 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2308 = !{!167, !2309, !146}
!2309 = !DISubroutineType(types: !1045)
!2310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2311, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2312, nameTableKind: None)
!2311 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2312 = !{!2313, !27}
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!27, !2315}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2317, file: !272, line: 51, baseType: !27, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2317, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2317, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2317, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2317, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2317, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2317, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2317, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2317, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2317, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2317, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2317, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2317, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2317, file: !272, line: 70, baseType: !2333, size: 64, offset: 832)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2317, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2317, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2317, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2317, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2317, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2317, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2317, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2317, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2317, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2317, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2317, file: !272, line: 93, baseType: !2333, size: 64, offset: 1344)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2317, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2317, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2317, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2317, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2351, nameTableKind: None)
!2350 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2351 = !{!167, !2352, !2388, !2355, !27}
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!27, !2354}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2356, file: !272, line: 51, baseType: !27, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2356, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2356, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2356, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2356, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2356, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2356, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2356, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2356, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2356, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2356, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2356, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2356, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2356, file: !272, line: 70, baseType: !2372, size: 64, offset: 832)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2356, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2356, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2356, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2356, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2356, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2356, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2356, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2356, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2356, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2356, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2356, file: !272, line: 93, baseType: !2372, size: 64, offset: 1344)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2356, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2356, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2356, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2356, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !2354}
!2390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2391, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !152, retainedTypes: !2392, nameTableKind: None)
!2391 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2392 = !{!167, !2393, !2396, !143, !2429, !27, !305}
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!27, !2395, !2429, !27}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !270, line: 7, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !272, line: 49, size: 1728, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2397, file: !272, line: 51, baseType: !27, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2397, file: !272, line: 54, baseType: !143, size: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2397, file: !272, line: 55, baseType: !143, size: 64, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2397, file: !272, line: 56, baseType: !143, size: 64, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2397, file: !272, line: 57, baseType: !143, size: 64, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2397, file: !272, line: 58, baseType: !143, size: 64, offset: 320)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2397, file: !272, line: 59, baseType: !143, size: 64, offset: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2397, file: !272, line: 60, baseType: !143, size: 64, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2397, file: !272, line: 61, baseType: !143, size: 64, offset: 512)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2397, file: !272, line: 64, baseType: !143, size: 64, offset: 576)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2397, file: !272, line: 65, baseType: !143, size: 64, offset: 640)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2397, file: !272, line: 66, baseType: !143, size: 64, offset: 704)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2397, file: !272, line: 68, baseType: !287, size: 64, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2397, file: !272, line: 70, baseType: !2413, size: 64, offset: 832)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2397, file: !272, line: 72, baseType: !27, size: 32, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2397, file: !272, line: 73, baseType: !27, size: 32, offset: 928)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2397, file: !272, line: 74, baseType: !179, size: 64, offset: 960)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2397, file: !272, line: 77, baseType: !176, size: 16, offset: 1024)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2397, file: !272, line: 78, baseType: !296, size: 8, offset: 1040)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2397, file: !272, line: 79, baseType: !298, size: 8, offset: 1048)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2397, file: !272, line: 81, baseType: !302, size: 64, offset: 1088)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2397, file: !272, line: 89, baseType: !305, size: 64, offset: 1152)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2397, file: !272, line: 91, baseType: !307, size: 64, offset: 1216)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2397, file: !272, line: 92, baseType: !310, size: 64, offset: 1280)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2397, file: !272, line: 93, baseType: !2413, size: 64, offset: 1344)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2397, file: !272, line: 94, baseType: !167, size: 64, offset: 1408)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2397, file: !272, line: 95, baseType: !149, size: 64, offset: 1472)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2397, file: !272, line: 96, baseType: !27, size: 32, offset: 1536)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2397, file: !272, line: 98, baseType: !317, size: 160, offset: 1568)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2090, line: 63, baseType: !179)
!2430 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2431 = !{i32 2, !"ctir", i32 1}
!2432 = !{i32 2, !"Dwarf Version", i32 4}
!2433 = !{i32 2, !"Debug Info Version", i32 3}
!2434 = !{i32 1, !"wchar_size", i32 4}
!2435 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 1450, type: !235, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2436 = !{!2437, !2437, i64 0}
!2437 = !{!"int", !2438, i64 0}
!2438 = !{!"omnipotent char", !2439, i64 0}
!2439 = !{!"Simple C/C++ TBAA"}
!2440 = !DILocalVariable(name: "argc", arg: 1, scope: !2435, file: !3, line: 1450, type: !27)
!2441 = !DILocation(line: 1450, column: 11, scope: !2435)
!2442 = !{!2443, !2443, i64 0}
!2443 = !{!"any pointer", !2438, i64 0}
!2444 = !DILocalVariable(name: "argv", arg: 2, scope: !2435, file: !3, line: 1450, type: !142)
!2445 = !DILocation(line: 1450, column: 24, scope: !2435)
!2446 = !DILocalVariable(name: "i", scope: !2435, file: !3, line: 1452, type: !27)
!2447 = !DILocation(line: 1452, column: 7, scope: !2435)
!2448 = !DILocalVariable(name: "thispend", scope: !2435, file: !3, line: 1453, type: !237)
!2449 = !DILocation(line: 1453, column: 19, scope: !2435)
!2450 = !DILocalVariable(name: "n_files", scope: !2435, file: !3, line: 1454, type: !27)
!2451 = !DILocation(line: 1454, column: 7, scope: !2435)
!2452 = !DILocation(line: 1457, column: 21, scope: !2435)
!2453 = !DILocation(line: 1457, column: 3, scope: !2435)
!2454 = !DILocation(line: 1458, column: 3, scope: !2435)
!2455 = !DILocation(line: 1459, column: 3, scope: !2435)
!2456 = !DILocation(line: 1460, column: 3, scope: !2435)
!2457 = !DILocation(line: 1462, column: 3, scope: !2435)
!2458 = !DILocation(line: 1463, column: 3, scope: !2435)
!2459 = !DILocation(line: 1468, column: 15, scope: !2435)
!2460 = !DILocation(line: 1469, column: 18, scope: !2435)
!2461 = !{!2462, !2462, i64 0}
!2462 = !{!"_Bool", !2438, i64 0}
!2463 = !DILocation(line: 1470, column: 16, scope: !2435)
!2464 = !DILocation(line: 1472, column: 23, scope: !2435)
!2465 = !{!2466, !2467, i64 0}
!2466 = !{!"timespec", !2467, i64 0, !2467, i64 8}
!2467 = !{!"long", !2438, i64 0}
!2468 = !DILocation(line: 1473, column: 24, scope: !2435)
!2469 = !{!2466, !2467, i64 8}
!2470 = !DILocation(line: 1475, column: 24, scope: !2435)
!2471 = !DILocation(line: 1475, column: 30, scope: !2435)
!2472 = !DILocation(line: 1475, column: 7, scope: !2435)
!2473 = !DILocation(line: 1475, column: 5, scope: !2435)
!2474 = !DILocation(line: 1477, column: 7, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1477, column: 7)
!2476 = !DILocation(line: 1477, column: 7, scope: !2435)
!2477 = !DILocation(line: 1478, column: 5, scope: !2475)
!2478 = !DILocation(line: 1482, column: 7, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1482, column: 7)
!2480 = !DILocation(line: 1482, column: 7, scope: !2435)
!2481 = !DILocation(line: 1483, column: 24, scope: !2479)
!2482 = !DILocation(line: 1483, column: 5, scope: !2479)
!2483 = !DILocation(line: 1484, column: 12, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 1484, column: 12)
!2485 = !DILocation(line: 1484, column: 12, scope: !2479)
!2486 = !DILocation(line: 1487, column: 11, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 1487, column: 11)
!2488 = distinct !DILexicalBlock(scope: !2484, file: !3, line: 1485, column: 5)
!2489 = !DILocation(line: 1488, column: 11, scope: !2487)
!2490 = !DILocation(line: 1488, column: 15, scope: !2487)
!2491 = !DILocation(line: 1488, column: 35, scope: !2487)
!2492 = !DILocation(line: 1488, column: 38, scope: !2487)
!2493 = !DILocation(line: 1489, column: 11, scope: !2487)
!2494 = !DILocation(line: 1489, column: 15, scope: !2487)
!2495 = !DILocation(line: 1489, column: 38, scope: !2487)
!2496 = !DILocation(line: 1489, column: 41, scope: !2487)
!2497 = !{!2438, !2438, i64 0}
!2498 = !DILocation(line: 1489, column: 48, scope: !2487)
!2499 = !DILocation(line: 1487, column: 11, scope: !2488)
!2500 = !DILocation(line: 1490, column: 28, scope: !2487)
!2501 = !DILocation(line: 1490, column: 9, scope: !2487)
!2502 = !DILocation(line: 1491, column: 5, scope: !2488)
!2503 = !DILocation(line: 1493, column: 7, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1493, column: 7)
!2505 = !DILocation(line: 1493, column: 19, scope: !2504)
!2506 = !DILocation(line: 1493, column: 7, scope: !2435)
!2507 = !DILocation(line: 1494, column: 21, scope: !2504)
!2508 = !DILocation(line: 1495, column: 21, scope: !2504)
!2509 = !DILocation(line: 1495, column: 24, scope: !2504)
!2510 = !DILocation(line: 1495, column: 40, scope: !2504)
!2511 = !DILocation(line: 1496, column: 21, scope: !2504)
!2512 = !DILocation(line: 1496, column: 24, scope: !2504)
!2513 = !DILocation(line: 1496, column: 31, scope: !2504)
!2514 = !DILocation(line: 1494, column: 20, scope: !2504)
!2515 = !DILocation(line: 1494, column: 17, scope: !2504)
!2516 = !DILocation(line: 1494, column: 5, scope: !2504)
!2517 = !DILocation(line: 1502, column: 7, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1502, column: 7)
!2519 = !DILocation(line: 1502, column: 7, scope: !2435)
!2520 = !DILocation(line: 1504, column: 24, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 1503, column: 5)
!2522 = !DILocation(line: 1504, column: 22, scope: !2521)
!2523 = !DILocation(line: 1508, column: 11, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 1508, column: 11)
!2525 = !DILocation(line: 1508, column: 26, scope: !2524)
!2526 = !DILocation(line: 1508, column: 11, scope: !2521)
!2527 = !DILocation(line: 1509, column: 9, scope: !2524)
!2528 = !DILocation(line: 1511, column: 7, scope: !2521)
!2529 = !DILocation(line: 1512, column: 5, scope: !2521)
!2530 = !DILocation(line: 1514, column: 22, scope: !2435)
!2531 = !DILocation(line: 1514, column: 13, scope: !2435)
!2532 = !DILocation(line: 1514, column: 11, scope: !2435)
!2533 = !DILocation(line: 1516, column: 23, scope: !2435)
!2534 = !DILocation(line: 1516, column: 33, scope: !2435)
!2535 = !DILocation(line: 1516, column: 46, scope: !2435)
!2536 = !DILocation(line: 1516, column: 49, scope: !2435)
!2537 = !DILocation(line: 1516, column: 59, scope: !2435)
!2538 = !DILocation(line: 1517, column: 5, scope: !2435)
!2539 = !DILocation(line: 1517, column: 8, scope: !2435)
!2540 = !DILocation(line: 1517, column: 15, scope: !2435)
!2541 = !DILocation(line: 1518, column: 5, scope: !2435)
!2542 = !DILocation(line: 1518, column: 8, scope: !2435)
!2543 = !DILocation(line: 1519, column: 5, scope: !2435)
!2544 = !DILocation(line: 1519, column: 8, scope: !2435)
!2545 = !DILocation(line: 1516, column: 21, scope: !2435)
!2546 = !DILocation(line: 1520, column: 26, scope: !2435)
!2547 = !DILocation(line: 1521, column: 24, scope: !2435)
!2548 = !DILocation(line: 1521, column: 28, scope: !2435)
!2549 = !DILocation(line: 1522, column: 28, scope: !2435)
!2550 = !DILocation(line: 1522, column: 31, scope: !2435)
!2551 = !DILocation(line: 1523, column: 28, scope: !2435)
!2552 = !DILocation(line: 1523, column: 31, scope: !2435)
!2553 = !DILocation(line: 1523, column: 47, scope: !2435)
!2554 = !DILocation(line: 1524, column: 28, scope: !2435)
!2555 = !DILocation(line: 1524, column: 31, scope: !2435)
!2556 = !DILocation(line: 0, scope: !2435)
!2557 = !DILocation(line: 1520, column: 21, scope: !2435)
!2558 = !DILocation(line: 1526, column: 7, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1526, column: 7)
!2560 = !DILocation(line: 1526, column: 7, scope: !2435)
!2561 = !DILocation(line: 1528, column: 7, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2559, file: !3, line: 1527, column: 5)
!2563 = !DILocation(line: 1529, column: 7, scope: !2562)
!2564 = !DILocation(line: 1530, column: 5, scope: !2562)
!2565 = !DILocation(line: 1532, column: 7, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1532, column: 7)
!2567 = !DILocation(line: 1532, column: 7, scope: !2435)
!2568 = !DILocation(line: 1534, column: 7, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 1533, column: 5)
!2570 = !DILocation(line: 1536, column: 18, scope: !2569)
!2571 = !DILocation(line: 1536, column: 16, scope: !2569)
!2572 = !DILocation(line: 1539, column: 13, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2569, file: !3, line: 1539, column: 11)
!2574 = !DILocation(line: 1539, column: 11, scope: !2569)
!2575 = !DILocation(line: 1540, column: 18, scope: !2573)
!2576 = !DILocation(line: 1540, column: 9, scope: !2573)
!2577 = !DILocation(line: 1541, column: 5, scope: !2569)
!2578 = !DILocation(line: 1543, column: 15, scope: !2435)
!2579 = !{!2467, !2467, i64 0}
!2580 = !DILocation(line: 1544, column: 24, scope: !2435)
!2581 = !DILocation(line: 1544, column: 14, scope: !2435)
!2582 = !DILocation(line: 1544, column: 12, scope: !2435)
!2583 = !DILocation(line: 1545, column: 14, scope: !2435)
!2584 = !DILocation(line: 1547, column: 3, scope: !2435)
!2585 = !DILocation(line: 1549, column: 13, scope: !2435)
!2586 = !DILocation(line: 1549, column: 20, scope: !2435)
!2587 = !DILocation(line: 1549, column: 18, scope: !2435)
!2588 = !DILocation(line: 1549, column: 11, scope: !2435)
!2589 = !DILocation(line: 1551, column: 7, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1551, column: 7)
!2591 = !DILocation(line: 1551, column: 15, scope: !2590)
!2592 = !DILocation(line: 1551, column: 7, scope: !2435)
!2593 = !DILocation(line: 1553, column: 11, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 1553, column: 11)
!2595 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 1552, column: 5)
!2596 = !DILocation(line: 1553, column: 11, scope: !2595)
!2597 = !DILocation(line: 1554, column: 9, scope: !2594)
!2598 = !DILocation(line: 1556, column: 9, scope: !2594)
!2599 = !DILocation(line: 1557, column: 5, scope: !2595)
!2600 = !DILocation(line: 1559, column: 5, scope: !2590)
!2601 = !DILocation(line: 1560, column: 20, scope: !2590)
!2602 = !DILocation(line: 1560, column: 26, scope: !2590)
!2603 = !DILocation(line: 1560, column: 7, scope: !2590)
!2604 = !DILocation(line: 1561, column: 12, scope: !2590)
!2605 = !DILocation(line: 1561, column: 16, scope: !2590)
!2606 = !DILocation(line: 1561, column: 14, scope: !2590)
!2607 = distinct !{!2607, !2600, !2608}
!2608 = !DILocation(line: 1561, column: 20, scope: !2590)
!2609 = !DILocation(line: 1563, column: 7, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1563, column: 7)
!2611 = !DILocation(line: 1563, column: 7, scope: !2435)
!2612 = !DILocation(line: 1565, column: 7, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 1564, column: 5)
!2614 = !DILocation(line: 1566, column: 12, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 1566, column: 11)
!2616 = !DILocation(line: 1566, column: 11, scope: !2613)
!2617 = !DILocation(line: 1567, column: 9, scope: !2615)
!2618 = !DILocation(line: 1569, column: 5, scope: !2613)
!2619 = !DILocation(line: 1575, column: 7, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1575, column: 7)
!2621 = !DILocation(line: 1575, column: 7, scope: !2435)
!2622 = !DILocation(line: 1577, column: 7, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 1576, column: 5)
!2624 = !DILocation(line: 1578, column: 11, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 1578, column: 11)
!2626 = !DILocation(line: 1578, column: 11, scope: !2623)
!2627 = !DILocation(line: 1579, column: 9, scope: !2625)
!2628 = !DILocation(line: 1579, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 1579, column: 9)
!2630 = !DILocation(line: 1580, column: 5, scope: !2623)
!2631 = !DILocation(line: 1581, column: 12, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 1581, column: 12)
!2633 = !DILocation(line: 1581, column: 20, scope: !2632)
!2634 = !DILocation(line: 1581, column: 25, scope: !2632)
!2635 = !DILocation(line: 1581, column: 28, scope: !2632)
!2636 = !DILocation(line: 1581, column: 41, scope: !2632)
!2637 = !DILocation(line: 1581, column: 44, scope: !2632)
!2638 = !DILocation(line: 1581, column: 58, scope: !2632)
!2639 = !{!2640, !2443, i64 24}
!2640 = !{!"pending", !2443, i64 0, !2443, i64 8, !2462, i64 16, !2443, i64 24}
!2641 = !DILocation(line: 1581, column: 63, scope: !2632)
!2642 = !DILocation(line: 1581, column: 12, scope: !2620)
!2643 = !DILocation(line: 1582, column: 20, scope: !2632)
!2644 = !DILocation(line: 1582, column: 5, scope: !2632)
!2645 = !DILocation(line: 1584, column: 3, scope: !2435)
!2646 = !DILocation(line: 1584, column: 10, scope: !2435)
!2647 = !DILocation(line: 1586, column: 18, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1585, column: 5)
!2649 = !DILocation(line: 1586, column: 16, scope: !2648)
!2650 = !DILocation(line: 1587, column: 22, scope: !2648)
!2651 = !DILocation(line: 1587, column: 36, scope: !2648)
!2652 = !DILocation(line: 1587, column: 20, scope: !2648)
!2653 = !DILocation(line: 1589, column: 11, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1589, column: 11)
!2655 = !DILocation(line: 1589, column: 11, scope: !2648)
!2656 = !DILocation(line: 1591, column: 15, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1591, column: 15)
!2658 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 1590, column: 9)
!2659 = !DILocation(line: 1591, column: 25, scope: !2657)
!2660 = !{!2640, !2443, i64 0}
!2661 = !DILocation(line: 1591, column: 30, scope: !2657)
!2662 = !DILocation(line: 1591, column: 15, scope: !2658)
!2663 = !DILocalVariable(name: "di", scope: !2664, file: !3, line: 1597, type: !254)
!2664 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 1592, column: 13)
!2665 = !DILocation(line: 1597, column: 30, scope: !2664)
!2666 = !DILocation(line: 1597, column: 35, scope: !2664)
!2667 = !DILocalVariable(name: "found", scope: !2664, file: !3, line: 1598, type: !253)
!2668 = !DILocation(line: 1598, column: 31, scope: !2664)
!2669 = !DILocation(line: 1598, column: 52, scope: !2664)
!2670 = !DILocation(line: 1598, column: 68, scope: !2664)
!2671 = !DILocation(line: 1598, column: 39, scope: !2664)
!2672 = !DILocation(line: 1600, column: 15, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 1600, column: 15)
!2674 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1600, column: 15)
!2675 = !DILocation(line: 1600, column: 15, scope: !2674)
!2676 = !DILocation(line: 1601, column: 29, scope: !2664)
!2677 = !DILocation(line: 1601, column: 15, scope: !2664)
!2678 = !DILocation(line: 1602, column: 33, scope: !2664)
!2679 = !DILocation(line: 1602, column: 15, scope: !2664)
!2680 = !DILocation(line: 1603, column: 15, scope: !2664)
!2681 = distinct !{!2681, !2645, !2682}
!2682 = !DILocation(line: 1612, column: 5, scope: !2435)
!2683 = !DILocation(line: 1605, column: 9, scope: !2658)
!2684 = !DILocation(line: 1607, column: 18, scope: !2648)
!2685 = !DILocation(line: 1607, column: 28, scope: !2648)
!2686 = !DILocation(line: 1607, column: 34, scope: !2648)
!2687 = !DILocation(line: 1607, column: 44, scope: !2648)
!2688 = !{!2640, !2443, i64 8}
!2689 = !DILocation(line: 1608, column: 18, scope: !2648)
!2690 = !DILocation(line: 1608, column: 28, scope: !2648)
!2691 = !{!2640, !2462, i64 16}
!2692 = !DILocation(line: 1607, column: 7, scope: !2648)
!2693 = !DILocation(line: 1610, column: 25, scope: !2648)
!2694 = !DILocation(line: 1610, column: 7, scope: !2648)
!2695 = !DILocation(line: 1611, column: 22, scope: !2648)
!2696 = !DILocation(line: 1614, column: 7, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1614, column: 7)
!2698 = !DILocation(line: 1614, column: 24, scope: !2697)
!2699 = !DILocation(line: 1614, column: 27, scope: !2697)
!2700 = !DILocation(line: 1614, column: 7, scope: !2435)
!2701 = !DILocalVariable(name: "j", scope: !2702, file: !3, line: 1616, type: !27)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 1615, column: 5)
!2703 = !DILocation(line: 1616, column: 11, scope: !2702)
!2704 = !DILocation(line: 1620, column: 37, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1620, column: 11)
!2706 = !{!2707, !2467, i64 0}
!2707 = !{!"bin_str", !2467, i64 0, !2443, i64 8}
!2708 = !DILocation(line: 1620, column: 41, scope: !2705)
!2709 = !DILocation(line: 1621, column: 13, scope: !2705)
!2710 = !DILocation(line: 1621, column: 48, scope: !2705)
!2711 = !{!2707, !2443, i64 8}
!2712 = !DILocation(line: 1621, column: 16, scope: !2705)
!2713 = !DILocation(line: 1621, column: 68, scope: !2705)
!2714 = !DILocation(line: 1622, column: 13, scope: !2705)
!2715 = !DILocation(line: 1622, column: 41, scope: !2705)
!2716 = !DILocation(line: 1622, column: 45, scope: !2705)
!2717 = !DILocation(line: 1623, column: 13, scope: !2705)
!2718 = !DILocation(line: 1623, column: 41, scope: !2705)
!2719 = !DILocation(line: 1623, column: 16, scope: !2705)
!2720 = !DILocation(line: 1623, column: 51, scope: !2705)
!2721 = !DILocation(line: 1620, column: 11, scope: !2702)
!2722 = !DILocation(line: 1624, column: 9, scope: !2705)
!2723 = !DILocation(line: 1626, column: 7, scope: !2702)
!2724 = !DILocation(line: 1628, column: 7, scope: !2702)
!2725 = !DILocation(line: 1634, column: 16, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1634, column: 7)
!2727 = !DILocation(line: 1634, column: 14, scope: !2726)
!2728 = !DILocation(line: 1634, column: 12, scope: !2726)
!2729 = !DILocation(line: 1634, column: 35, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 1634, column: 7)
!2731 = !DILocation(line: 1634, column: 7, scope: !2726)
!2732 = !DILocation(line: 1635, column: 9, scope: !2730)
!2733 = !DILocation(line: 1634, column: 39, scope: !2730)
!2734 = !DILocation(line: 1634, column: 7, scope: !2730)
!2735 = distinct !{!2735, !2731, !2736}
!2736 = !DILocation(line: 1635, column: 23, scope: !2726)
!2737 = !DILocation(line: 1636, column: 11, scope: !2702)
!2738 = !DILocation(line: 1636, column: 9, scope: !2702)
!2739 = !DILocation(line: 1637, column: 11, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1637, column: 11)
!2741 = !DILocation(line: 1637, column: 11, scope: !2702)
!2742 = !DILocation(line: 1638, column: 16, scope: !2740)
!2743 = !DILocation(line: 1638, column: 9, scope: !2740)
!2744 = !DILocation(line: 1639, column: 5, scope: !2702)
!2745 = !DILocation(line: 1641, column: 7, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1641, column: 7)
!2747 = !DILocation(line: 1641, column: 7, scope: !2435)
!2748 = !DILocation(line: 1644, column: 7, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 1642, column: 5)
!2750 = !DILocation(line: 1645, column: 7, scope: !2749)
!2751 = !DILocation(line: 1647, column: 53, scope: !2749)
!2752 = !DILocation(line: 1647, column: 34, scope: !2749)
!2753 = !DILocation(line: 1647, column: 15, scope: !2749)
!2754 = !DILocation(line: 1646, column: 7, scope: !2749)
!2755 = !DILocation(line: 1648, column: 5, scope: !2749)
!2756 = !DILocation(line: 1650, column: 7, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2435, file: !3, line: 1650, column: 7)
!2758 = !DILocation(line: 1650, column: 7, scope: !2435)
!2759 = !DILocation(line: 1652, column: 7, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 1652, column: 7)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 1652, column: 7)
!2762 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1651, column: 5)
!2763 = !DILocation(line: 1652, column: 7, scope: !2761)
!2764 = !DILocation(line: 1653, column: 18, scope: !2762)
!2765 = !DILocation(line: 1653, column: 7, scope: !2762)
!2766 = !DILocation(line: 1654, column: 5, scope: !2762)
!2767 = !DILocation(line: 1656, column: 10, scope: !2435)
!2768 = !DILocation(line: 1656, column: 3, scope: !2435)
!2769 = distinct !DISubprogram(name: "initialize_exit_failure", scope: !810, file: !810, line: 99, type: !174, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!2770 = !DILocalVariable(name: "status", arg: 1, scope: !2769, file: !810, line: 99, type: !27)
!2771 = !DILocation(line: 99, column: 30, scope: !2769)
!2772 = !DILocation(line: 101, column: 7, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2769, file: !810, line: 101, column: 7)
!2774 = !DILocation(line: 101, column: 14, scope: !2773)
!2775 = !DILocation(line: 101, column: 7, scope: !2769)
!2776 = !DILocation(line: 102, column: 20, scope: !2773)
!2777 = !DILocation(line: 102, column: 18, scope: !2773)
!2778 = !DILocation(line: 102, column: 5, scope: !2773)
!2779 = !DILocation(line: 103, column: 1, scope: !2769)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2781, line: 27, size: 64, elements: !2782)
!2781 = !DIFile(filename: "/usr/include/bits/ioctl-types.h", directory: "")
!2782 = !{!2783, !2784, !2785, !2786}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2780, file: !2781, line: 29, baseType: !176, size: 16)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2780, file: !2781, line: 30, baseType: !176, size: 16, offset: 16)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2780, file: !2781, line: 31, baseType: !176, size: 16, offset: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2780, file: !2781, line: 32, baseType: !176, size: 16, offset: 48)
!2787 = !DILocalVariable(name: "argc", arg: 1, scope: !894, file: !3, line: 1688, type: !27)
!2788 = !DILocation(line: 1688, column: 22, scope: !894)
!2789 = !DILocalVariable(name: "argv", arg: 2, scope: !894, file: !3, line: 1688, type: !142)
!2790 = !DILocation(line: 1688, column: 35, scope: !894)
!2791 = !DILocalVariable(name: "time_style_option", scope: !894, file: !3, line: 1690, type: !143)
!2792 = !DILocation(line: 1690, column: 9, scope: !894)
!2793 = !DILocalVariable(name: "sort_type_specified", scope: !894, file: !3, line: 1692, type: !141)
!2794 = !DILocation(line: 1692, column: 8, scope: !894)
!2795 = !DILocalVariable(name: "kibibytes_specified", scope: !894, file: !3, line: 1693, type: !141)
!2796 = !DILocation(line: 1693, column: 8, scope: !894)
!2797 = !DILocation(line: 1695, column: 21, scope: !894)
!2798 = !DILocation(line: 1699, column: 11, scope: !894)
!2799 = !DILocation(line: 1699, column: 3, scope: !894)
!2800 = !DILocation(line: 1703, column: 14, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1700, column: 5)
!2802 = !DILocation(line: 1704, column: 7, scope: !2801)
!2803 = !DILocation(line: 1705, column: 7, scope: !2801)
!2804 = !DILocation(line: 1709, column: 14, scope: !2801)
!2805 = !DILocation(line: 1710, column: 7, scope: !2801)
!2806 = !DILocation(line: 1711, column: 7, scope: !2801)
!2807 = !DILocation(line: 1715, column: 11, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1715, column: 11)
!2809 = !DILocation(line: 1715, column: 11, scope: !2801)
!2810 = !DILocation(line: 1717, column: 18, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 1716, column: 9)
!2812 = !DILocation(line: 1718, column: 11, scope: !2811)
!2813 = !DILocation(line: 1720, column: 29, scope: !2811)
!2814 = !DILocation(line: 1721, column: 9, scope: !2811)
!2815 = !DILocation(line: 1724, column: 18, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 1723, column: 9)
!2817 = !DILocation(line: 1725, column: 29, scope: !2816)
!2818 = !DILocation(line: 1727, column: 7, scope: !2801)
!2819 = !DILocation(line: 1730, column: 7, scope: !2801)
!2820 = !DILocation(line: 1733, column: 13, scope: !894)
!2821 = !DILocation(line: 1734, column: 13, scope: !894)
!2822 = !DILocation(line: 1735, column: 16, scope: !894)
!2823 = !DILocation(line: 1736, column: 15, scope: !894)
!2824 = !DILocation(line: 1737, column: 20, scope: !894)
!2825 = !DILocation(line: 1738, column: 19, scope: !894)
!2826 = !DILocation(line: 1739, column: 15, scope: !894)
!2827 = !DILocation(line: 1740, column: 15, scope: !894)
!2828 = !DILocation(line: 1741, column: 13, scope: !894)
!2829 = !DILocation(line: 1742, column: 18, scope: !894)
!2830 = !DILocation(line: 1743, column: 15, scope: !894)
!2831 = !DILocation(line: 1744, column: 19, scope: !894)
!2832 = !DILocation(line: 1745, column: 17, scope: !894)
!2833 = !DILocation(line: 1746, column: 18, scope: !894)
!2834 = !DILocation(line: 1748, column: 3, scope: !894)
!2835 = !DILocation(line: 1750, column: 15, scope: !894)
!2836 = !DILocalVariable(name: "p", scope: !2837, file: !3, line: 1752, type: !146)
!2837 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1751, column: 3)
!2838 = !DILocation(line: 1752, column: 17, scope: !2837)
!2839 = !DILocation(line: 1752, column: 21, scope: !2837)
!2840 = !DILocation(line: 1753, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 1753, column: 9)
!2842 = !DILocation(line: 1753, column: 11, scope: !2841)
!2843 = !DILocation(line: 1753, column: 15, scope: !2841)
!2844 = !DILocation(line: 1753, column: 14, scope: !2841)
!2845 = !DILocation(line: 1753, column: 17, scope: !2841)
!2846 = !DILocation(line: 1753, column: 39, scope: !2841)
!2847 = !DILocation(line: 1753, column: 22, scope: !2841)
!2848 = !DILocation(line: 1753, column: 9, scope: !2837)
!2849 = !DILocation(line: 1755, column: 14, scope: !2841)
!2850 = !DILocation(line: 1756, column: 21, scope: !2841)
!2851 = !DILocation(line: 1756, column: 14, scope: !2841)
!2852 = !DILocation(line: 1754, column: 7, scope: !2841)
!2853 = !DILocalVariable(name: "ws", scope: !2854, file: !3, line: 1761, type: !2780)
!2854 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1760, column: 3)
!2855 = !DILocation(line: 1761, column: 20, scope: !2854)
!2856 = !DILocation(line: 1763, column: 9, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 1763, column: 9)
!2858 = !DILocation(line: 1763, column: 48, scope: !2857)
!2859 = !DILocation(line: 1764, column: 9, scope: !2857)
!2860 = !DILocation(line: 1764, column: 19, scope: !2857)
!2861 = !{!2862, !2863, i64 2}
!2862 = !{!"winsize", !2863, i64 0, !2863, i64 2, !2863, i64 4, !2863, i64 6}
!2863 = !{!"short", !2438, i64 0}
!2864 = !DILocation(line: 1764, column: 16, scope: !2857)
!2865 = !DILocation(line: 1764, column: 14, scope: !2857)
!2866 = !DILocation(line: 1764, column: 26, scope: !2857)
!2867 = !DILocation(line: 1764, column: 32, scope: !2857)
!2868 = !DILocation(line: 1764, column: 29, scope: !2857)
!2869 = !DILocation(line: 1764, column: 54, scope: !2857)
!2870 = !DILocation(line: 1764, column: 42, scope: !2857)
!2871 = !DILocation(line: 1764, column: 39, scope: !2857)
!2872 = !DILocation(line: 1763, column: 9, scope: !2854)
!2873 = !DILocation(line: 1765, column: 24, scope: !2857)
!2874 = !DILocation(line: 1765, column: 21, scope: !2857)
!2875 = !DILocation(line: 1765, column: 19, scope: !2857)
!2876 = !DILocation(line: 1765, column: 7, scope: !2857)
!2877 = !DILocalVariable(name: "p", scope: !2878, file: !3, line: 1770, type: !146)
!2878 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1769, column: 3)
!2879 = !DILocation(line: 1770, column: 17, scope: !2878)
!2880 = !DILocation(line: 1770, column: 21, scope: !2878)
!2881 = !DILocation(line: 1771, column: 13, scope: !2878)
!2882 = !DILocation(line: 1772, column: 9, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 1772, column: 9)
!2884 = !DILocation(line: 1772, column: 9, scope: !2878)
!2885 = !DILocalVariable(name: "tmp_ulong", scope: !2886, file: !3, line: 1774, type: !151)
!2886 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 1773, column: 7)
!2887 = !DILocation(line: 1774, column: 27, scope: !2886)
!2888 = !DILocation(line: 1775, column: 23, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 1775, column: 13)
!2890 = !DILocation(line: 1775, column: 13, scope: !2889)
!2891 = !DILocation(line: 1775, column: 53, scope: !2889)
!2892 = !DILocation(line: 1776, column: 13, scope: !2889)
!2893 = !DILocation(line: 1776, column: 16, scope: !2889)
!2894 = !DILocation(line: 1776, column: 26, scope: !2889)
!2895 = !DILocation(line: 1775, column: 13, scope: !2886)
!2896 = !DILocation(line: 1778, column: 23, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 1777, column: 11)
!2898 = !DILocation(line: 1778, column: 21, scope: !2897)
!2899 = !DILocation(line: 1779, column: 11, scope: !2897)
!2900 = !DILocation(line: 1783, column: 14, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 1781, column: 11)
!2902 = !DILocation(line: 1784, column: 27, scope: !2901)
!2903 = !DILocation(line: 1784, column: 20, scope: !2901)
!2904 = !DILocation(line: 1782, column: 13, scope: !2901)
!2905 = !DILocation(line: 1786, column: 7, scope: !2886)
!2906 = !DILocation(line: 1789, column: 3, scope: !894)
!2907 = !DILocalVariable(name: "oi", scope: !2908, file: !3, line: 1791, type: !27)
!2908 = distinct !DILexicalBlock(scope: !894, file: !3, line: 1790, column: 5)
!2909 = !DILocation(line: 1791, column: 11, scope: !2908)
!2910 = !DILocalVariable(name: "c", scope: !2908, file: !3, line: 1792, type: !27)
!2911 = !DILocation(line: 1792, column: 11, scope: !2908)
!2912 = !DILocation(line: 1792, column: 28, scope: !2908)
!2913 = !DILocation(line: 1792, column: 34, scope: !2908)
!2914 = !DILocation(line: 1792, column: 15, scope: !2908)
!2915 = !DILocation(line: 1795, column: 11, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1795, column: 11)
!2917 = !DILocation(line: 1795, column: 13, scope: !2916)
!2918 = !DILocation(line: 1795, column: 11, scope: !2908)
!2919 = !DILocation(line: 1796, column: 9, scope: !2916)
!2920 = !DILocation(line: 1798, column: 15, scope: !2908)
!2921 = !DILocation(line: 1798, column: 7, scope: !2908)
!2922 = !DILocation(line: 1801, column: 23, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1799, column: 9)
!2924 = !DILocation(line: 1802, column: 11, scope: !2923)
!2925 = !DILocation(line: 1805, column: 11, scope: !2923)
!2926 = !DILocation(line: 1806, column: 11, scope: !2923)
!2927 = !DILocation(line: 1809, column: 21, scope: !2923)
!2928 = !DILocation(line: 1810, column: 11, scope: !2923)
!2929 = !DILocation(line: 1813, column: 26, scope: !2923)
!2930 = !DILocation(line: 1814, column: 11, scope: !2923)
!2931 = !DILocation(line: 1818, column: 23, scope: !2923)
!2932 = !DILocation(line: 1819, column: 21, scope: !2923)
!2933 = !DILocation(line: 1820, column: 31, scope: !2923)
!2934 = !DILocation(line: 1822, column: 15, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1822, column: 15)
!2936 = !DILocation(line: 1822, column: 22, scope: !2935)
!2937 = !DILocation(line: 1822, column: 15, scope: !2923)
!2938 = !DILocation(line: 1823, column: 23, scope: !2935)
!2939 = !DILocation(line: 1823, column: 20, scope: !2935)
!2940 = !DILocation(line: 1823, column: 13, scope: !2935)
!2941 = !DILocation(line: 1824, column: 28, scope: !2923)
!2942 = !DILocation(line: 1825, column: 28, scope: !2923)
!2943 = !DILocation(line: 1826, column: 27, scope: !2923)
!2944 = !DILocation(line: 1827, column: 11, scope: !2923)
!2945 = !DILocation(line: 1830, column: 27, scope: !2923)
!2946 = !DILocation(line: 1831, column: 11, scope: !2923)
!2947 = !DILocation(line: 1834, column: 18, scope: !2923)
!2948 = !DILocation(line: 1835, column: 23, scope: !2923)
!2949 = !DILocation(line: 1836, column: 11, scope: !2923)
!2950 = !DILocation(line: 1839, column: 54, scope: !2923)
!2951 = !DILocation(line: 1839, column: 34, scope: !2923)
!2952 = !DILocation(line: 1841, column: 54, scope: !2923)
!2953 = !DILocation(line: 1841, column: 34, scope: !2923)
!2954 = !DILocation(line: 1842, column: 11, scope: !2923)
!2955 = !DILocation(line: 1845, column: 23, scope: !2923)
!2956 = !DILocation(line: 1846, column: 11, scope: !2923)
!2957 = !DILocation(line: 1849, column: 31, scope: !2923)
!2958 = !DILocation(line: 1850, column: 11, scope: !2923)
!2959 = !DILocation(line: 1853, column: 18, scope: !2923)
!2960 = !DILocation(line: 1854, column: 11, scope: !2923)
!2961 = !DILocation(line: 1857, column: 18, scope: !2923)
!2962 = !DILocation(line: 1858, column: 11, scope: !2923)
!2963 = !DILocation(line: 1861, column: 23, scope: !2923)
!2964 = !DILocation(line: 1862, column: 18, scope: !2923)
!2965 = !DILocation(line: 1863, column: 11, scope: !2923)
!2966 = !DILocation(line: 1866, column: 18, scope: !2923)
!2967 = !DILocation(line: 1867, column: 23, scope: !2923)
!2968 = !DILocation(line: 1868, column: 11, scope: !2923)
!2969 = !DILocation(line: 1871, column: 27, scope: !2923)
!2970 = !DILocation(line: 1872, column: 11, scope: !2923)
!2971 = !DILocation(line: 1875, column: 29, scope: !2923)
!2972 = !DILocation(line: 1876, column: 11, scope: !2923)
!2973 = !DILocation(line: 1879, column: 24, scope: !2923)
!2974 = !DILocation(line: 1880, column: 11, scope: !2923)
!2975 = !DILocation(line: 1883, column: 28, scope: !2923)
!2976 = !DILocation(line: 1884, column: 11, scope: !2923)
!2977 = !DILocation(line: 1887, column: 21, scope: !2923)
!2978 = !DILocation(line: 1888, column: 31, scope: !2923)
!2979 = !DILocation(line: 1889, column: 11, scope: !2923)
!2980 = !DILocation(line: 1892, column: 21, scope: !2923)
!2981 = !DILocation(line: 1893, column: 11, scope: !2923)
!2982 = !DILocation(line: 1896, column: 21, scope: !2923)
!2983 = !DILocation(line: 1897, column: 31, scope: !2923)
!2984 = !DILocation(line: 1898, column: 11, scope: !2923)
!2985 = !DILocation(line: 1901, column: 34, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1901, column: 15)
!2987 = !DILocation(line: 1901, column: 17, scope: !2986)
!2988 = !DILocation(line: 1901, column: 15, scope: !2923)
!2989 = !DILocation(line: 1902, column: 13, scope: !2986)
!2990 = !DILocation(line: 1904, column: 11, scope: !2923)
!2991 = !DILocation(line: 1907, column: 18, scope: !2923)
!2992 = !DILocation(line: 1908, column: 11, scope: !2923)
!2993 = !DILocation(line: 1911, column: 23, scope: !2923)
!2994 = !DILocation(line: 1912, column: 11, scope: !2923)
!2995 = !DILocation(line: 1915, column: 11, scope: !2923)
!2996 = !DILocation(line: 1916, column: 11, scope: !2923)
!2997 = !DILocation(line: 1917, column: 11, scope: !2923)
!2998 = !DILocation(line: 1920, column: 18, scope: !2923)
!2999 = !DILocation(line: 1921, column: 11, scope: !2923)
!3000 = !DILocation(line: 1924, column: 17, scope: !2923)
!3001 = !DILocation(line: 1925, column: 11, scope: !2923)
!3002 = !DILocation(line: 1928, column: 27, scope: !2923)
!3003 = !DILocation(line: 1929, column: 11, scope: !2923)
!3004 = !DILocation(line: 1932, column: 23, scope: !2923)
!3005 = !DILocation(line: 1933, column: 11, scope: !2923)
!3006 = !DILocation(line: 1936, column: 23, scope: !2923)
!3007 = !DILocation(line: 1937, column: 11, scope: !2923)
!3008 = !DILocation(line: 1940, column: 23, scope: !2923)
!3009 = !DILocation(line: 1941, column: 11, scope: !2923)
!3010 = !DILocation(line: 1944, column: 31, scope: !2923)
!3011 = !DILocation(line: 1944, column: 11, scope: !2923)
!3012 = !DILocation(line: 1945, column: 11, scope: !2923)
!3013 = !DILocation(line: 1948, column: 23, scope: !2923)
!3014 = !DILocation(line: 1949, column: 11, scope: !2923)
!3015 = !DILocation(line: 1952, column: 11, scope: !2923)
!3016 = !DILocation(line: 1953, column: 11, scope: !2923)
!3017 = !DILocation(line: 1956, column: 11, scope: !2923)
!3018 = !DILocation(line: 1957, column: 11, scope: !2923)
!3019 = !DILocation(line: 1960, column: 21, scope: !2923)
!3020 = !DILocation(line: 1961, column: 11, scope: !2923)
!3021 = !DILocation(line: 1964, column: 21, scope: !2923)
!3022 = !DILocation(line: 1965, column: 31, scope: !2923)
!3023 = !DILocation(line: 1966, column: 11, scope: !2923)
!3024 = !DILocation(line: 1969, column: 33, scope: !2923)
!3025 = !DILocation(line: 1970, column: 33, scope: !2923)
!3026 = !DILocation(line: 1969, column: 21, scope: !2923)
!3027 = !DILocation(line: 1969, column: 19, scope: !2923)
!3028 = !DILocation(line: 1971, column: 11, scope: !2923)
!3029 = !DILocation(line: 1974, column: 21, scope: !2923)
!3030 = !DILocation(line: 1975, column: 31, scope: !2923)
!3031 = !DILocation(line: 1976, column: 11, scope: !2923)
!3032 = !DILocation(line: 1979, column: 21, scope: !2923)
!3033 = !DILocation(line: 1980, column: 31, scope: !2923)
!3034 = !DILocation(line: 1981, column: 11, scope: !2923)
!3035 = !DILocation(line: 1985, column: 15, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1985, column: 15)
!3037 = !DILocation(line: 1985, column: 22, scope: !3036)
!3038 = !DILocation(line: 1985, column: 15, scope: !2923)
!3039 = !DILocation(line: 1986, column: 20, scope: !3036)
!3040 = !DILocation(line: 1986, column: 13, scope: !3036)
!3041 = !DILocation(line: 1987, column: 11, scope: !2923)
!3042 = !DILocation(line: 1990, column: 24, scope: !2923)
!3043 = !DILocation(line: 1991, column: 11, scope: !2923)
!3044 = !DILocalVariable(name: "hide", scope: !3045, file: !3, line: 1995, type: !511)
!3045 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1994, column: 11)
!3046 = !DILocation(line: 1995, column: 36, scope: !3045)
!3047 = !DILocation(line: 1995, column: 43, scope: !3045)
!3048 = !DILocation(line: 1996, column: 29, scope: !3045)
!3049 = !DILocation(line: 1996, column: 13, scope: !3045)
!3050 = !DILocation(line: 1996, column: 19, scope: !3045)
!3051 = !DILocation(line: 1996, column: 27, scope: !3045)
!3052 = !{!3053, !2443, i64 0}
!3053 = !{!"ignore_pattern", !2443, i64 0, !2443, i64 8}
!3054 = !DILocation(line: 1997, column: 26, scope: !3045)
!3055 = !DILocation(line: 1997, column: 13, scope: !3045)
!3056 = !DILocation(line: 1997, column: 19, scope: !3045)
!3057 = !DILocation(line: 1997, column: 24, scope: !3045)
!3058 = !{!3053, !2443, i64 8}
!3059 = !DILocation(line: 1998, column: 29, scope: !3045)
!3060 = !DILocation(line: 1998, column: 27, scope: !3045)
!3061 = !DILocation(line: 2000, column: 11, scope: !2923)
!3062 = !DILocation(line: 2003, column: 23, scope: !2923)
!3063 = !DILocation(line: 2003, column: 21, scope: !2923)
!3064 = !DILocation(line: 2004, column: 31, scope: !2923)
!3065 = !DILocation(line: 2005, column: 11, scope: !2923)
!3066 = !DILocation(line: 2008, column: 29, scope: !2923)
!3067 = !DILocation(line: 2009, column: 11, scope: !2923)
!3068 = !DILocation(line: 2012, column: 23, scope: !2923)
!3069 = !DILocation(line: 2012, column: 21, scope: !2923)
!3070 = !DILocation(line: 2013, column: 11, scope: !2923)
!3071 = !DILocation(line: 2016, column: 20, scope: !2923)
!3072 = !DILocation(line: 2016, column: 18, scope: !2923)
!3073 = !DILocation(line: 2017, column: 11, scope: !2923)
!3074 = !DILocation(line: 2020, column: 18, scope: !2923)
!3075 = !DILocation(line: 2021, column: 31, scope: !2923)
!3076 = !DILocation(line: 2021, column: 29, scope: !2923)
!3077 = !DILocation(line: 2022, column: 11, scope: !2923)
!3078 = !DILocalVariable(name: "i", scope: !3079, file: !3, line: 2026, type: !27)
!3079 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2025, column: 11)
!3080 = !DILocation(line: 2026, column: 17, scope: !3079)
!3081 = !DILocation(line: 2027, column: 17, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2027, column: 17)
!3083 = !DILocation(line: 2027, column: 17, scope: !3079)
!3084 = !DILocation(line: 2028, column: 19, scope: !3082)
!3085 = !DILocation(line: 2028, column: 17, scope: !3082)
!3086 = !DILocation(line: 2028, column: 15, scope: !3082)
!3087 = !DILocation(line: 2032, column: 17, scope: !3082)
!3088 = !DILocation(line: 2034, column: 33, scope: !3079)
!3089 = !DILocation(line: 2034, column: 35, scope: !3079)
!3090 = !DILocation(line: 2035, column: 33, scope: !3079)
!3091 = !DILocation(line: 2035, column: 37, scope: !3079)
!3092 = !DILocation(line: 2035, column: 39, scope: !3079)
!3093 = !DILocation(line: 2036, column: 37, scope: !3079)
!3094 = !DILocation(line: 2036, column: 40, scope: !3079)
!3095 = !DILocation(line: 0, scope: !3079)
!3096 = !DILocation(line: 2034, column: 30, scope: !3079)
!3097 = !DILocation(line: 2038, column: 17, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2038, column: 17)
!3099 = !DILocation(line: 2038, column: 17, scope: !3079)
!3100 = !DILocation(line: 2043, column: 25, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 2039, column: 15)
!3102 = !DILocation(line: 2044, column: 15, scope: !3101)
!3103 = !DILocation(line: 2045, column: 13, scope: !3079)
!3104 = !DILocalVariable(name: "i", scope: !3105, file: !3, line: 2050, type: !27)
!3105 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2049, column: 11)
!3106 = !DILocation(line: 2050, column: 17, scope: !3105)
!3107 = !DILocation(line: 2051, column: 17, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 2051, column: 17)
!3109 = !DILocation(line: 2051, column: 17, scope: !3105)
!3110 = !DILocation(line: 2052, column: 19, scope: !3108)
!3111 = !DILocation(line: 2052, column: 17, scope: !3108)
!3112 = !DILocation(line: 2052, column: 15, scope: !3108)
!3113 = !DILocation(line: 2056, column: 17, scope: !3108)
!3114 = !DILocation(line: 2058, column: 32, scope: !3105)
!3115 = !DILocation(line: 2058, column: 34, scope: !3105)
!3116 = !DILocation(line: 2059, column: 32, scope: !3105)
!3117 = !DILocation(line: 2059, column: 36, scope: !3105)
!3118 = !DILocation(line: 2059, column: 38, scope: !3105)
!3119 = !DILocation(line: 2060, column: 36, scope: !3105)
!3120 = !DILocation(line: 2060, column: 39, scope: !3105)
!3121 = !DILocation(line: 0, scope: !3105)
!3122 = !DILocation(line: 2058, column: 29, scope: !3105)
!3123 = !DILocation(line: 2061, column: 13, scope: !3105)
!3124 = !DILocation(line: 2065, column: 29, scope: !2923)
!3125 = !DILocation(line: 2065, column: 27, scope: !2923)
!3126 = !DILocation(line: 2068, column: 11, scope: !2923)
!3127 = !DILocation(line: 2072, column: 30, scope: !2923)
!3128 = !DILocation(line: 2071, column: 11, scope: !2923)
!3129 = !DILocation(line: 2075, column: 11, scope: !2923)
!3130 = !DILocation(line: 2078, column: 31, scope: !2923)
!3131 = !DILocation(line: 2078, column: 29, scope: !2923)
!3132 = !DILocation(line: 2079, column: 11, scope: !2923)
!3133 = !DILocation(line: 2082, column: 29, scope: !2923)
!3134 = !DILocation(line: 2083, column: 11, scope: !2923)
!3135 = !DILocalVariable(name: "e", scope: !3136, file: !3, line: 2087, type: !109)
!3136 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 2086, column: 11)
!3137 = !DILocation(line: 2087, column: 31, scope: !3136)
!3138 = !DILocation(line: 2087, column: 50, scope: !3136)
!3139 = !DILocation(line: 2087, column: 35, scope: !3136)
!3140 = !DILocation(line: 2089, column: 17, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 2089, column: 17)
!3142 = !DILocation(line: 2089, column: 19, scope: !3141)
!3143 = !DILocation(line: 2089, column: 17, scope: !3136)
!3144 = !DILocation(line: 2090, column: 30, scope: !3141)
!3145 = !DILocation(line: 2090, column: 33, scope: !3141)
!3146 = !DILocation(line: 2090, column: 54, scope: !3141)
!3147 = !DILocation(line: 2090, column: 15, scope: !3141)
!3148 = !DILocation(line: 2091, column: 38, scope: !3136)
!3149 = !DILocation(line: 2091, column: 36, scope: !3136)
!3150 = !DILocation(line: 2092, column: 38, scope: !3136)
!3151 = !DILocation(line: 2092, column: 36, scope: !3136)
!3152 = !DILocation(line: 2094, column: 11, scope: !2923)
!3153 = !DILocation(line: 2097, column: 54, scope: !2923)
!3154 = !DILocation(line: 2097, column: 34, scope: !2923)
!3155 = !DILocation(line: 2099, column: 54, scope: !2923)
!3156 = !DILocation(line: 2099, column: 34, scope: !2923)
!3157 = !DILocation(line: 2100, column: 11, scope: !2923)
!3158 = !DILocation(line: 2103, column: 26, scope: !2923)
!3159 = !DILocation(line: 2104, column: 11, scope: !2923)
!3160 = !DILocation(line: 2106, column: 9, scope: !2923)
!3161 = !DILocation(line: 2108, column: 9, scope: !2923)
!3162 = !DILocation(line: 2111, column: 11, scope: !2923)
!3163 = distinct !{!3163, !2906, !3164}
!3164 = !DILocation(line: 2113, column: 5, scope: !894)
!3165 = !DILocation(line: 2115, column: 9, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2115, column: 7)
!3167 = !DILocation(line: 2115, column: 7, scope: !894)
!3168 = !DILocalVariable(name: "ls_block_size", scope: !3169, file: !3, line: 2117, type: !146)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 2116, column: 5)
!3170 = !DILocation(line: 2117, column: 19, scope: !3169)
!3171 = !DILocation(line: 2117, column: 35, scope: !3169)
!3172 = !DILocation(line: 2118, column: 22, scope: !3169)
!3173 = !DILocation(line: 2118, column: 7, scope: !3169)
!3174 = !DILocation(line: 2120, column: 11, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 2120, column: 11)
!3176 = !DILocation(line: 2120, column: 25, scope: !3175)
!3177 = !DILocation(line: 2120, column: 28, scope: !3175)
!3178 = !DILocation(line: 2120, column: 11, scope: !3169)
!3179 = !DILocation(line: 2122, column: 36, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 2121, column: 9)
!3181 = !DILocation(line: 2122, column: 34, scope: !3180)
!3182 = !DILocation(line: 2123, column: 36, scope: !3180)
!3183 = !DILocation(line: 2123, column: 34, scope: !3180)
!3184 = !DILocation(line: 2124, column: 9, scope: !3180)
!3185 = !DILocation(line: 2125, column: 11, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3169, file: !3, line: 2125, column: 11)
!3187 = !DILocation(line: 2125, column: 11, scope: !3169)
!3188 = !DILocation(line: 2127, column: 29, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 2126, column: 9)
!3190 = !DILocation(line: 2128, column: 29, scope: !3189)
!3191 = !DILocation(line: 2129, column: 9, scope: !3189)
!3192 = !DILocation(line: 2130, column: 5, scope: !3169)
!3193 = !DILocation(line: 2133, column: 13, scope: !894)
!3194 = !DILocation(line: 2133, column: 25, scope: !894)
!3195 = !DILocation(line: 2133, column: 11, scope: !894)
!3196 = !DILocation(line: 2136, column: 14, scope: !894)
!3197 = !DILocation(line: 2136, column: 26, scope: !894)
!3198 = !DILocation(line: 2136, column: 45, scope: !894)
!3199 = !DILocation(line: 2136, column: 11, scope: !894)
!3200 = !DILocalVariable(name: "qs", scope: !894, file: !3, line: 2138, type: !95)
!3201 = !DILocation(line: 2138, column: 22, scope: !894)
!3202 = !DILocation(line: 2138, column: 27, scope: !894)
!3203 = !DILocation(line: 2139, column: 33, scope: !894)
!3204 = !DILocation(line: 2139, column: 40, scope: !894)
!3205 = !DILocation(line: 2140, column: 33, scope: !894)
!3206 = !DILocation(line: 2140, column: 36, scope: !894)
!3207 = !DILocation(line: 2140, column: 43, scope: !894)
!3208 = !DILocation(line: 2141, column: 33, scope: !894)
!3209 = !DILocation(line: 2141, column: 37, scope: !894)
!3210 = !DILocation(line: 2141, column: 49, scope: !894)
!3211 = !DILocation(line: 2141, column: 52, scope: !894)
!3212 = !DILocation(line: 2141, column: 59, scope: !894)
!3213 = !DILocation(line: 2142, column: 33, scope: !894)
!3214 = !DILocation(line: 2142, column: 37, scope: !894)
!3215 = !DILocation(line: 2142, column: 40, scope: !894)
!3216 = !DILocation(line: 2143, column: 37, scope: !894)
!3217 = !DILocation(line: 2143, column: 40, scope: !894)
!3218 = !DILocation(line: 2143, column: 43, scope: !894)
!3219 = !DILocation(line: 2144, column: 37, scope: !894)
!3220 = !DILocation(line: 2144, column: 40, scope: !894)
!3221 = !DILocation(line: 2144, column: 43, scope: !894)
!3222 = !DILocation(line: 0, scope: !894)
!3223 = !DILocation(line: 2139, column: 31, scope: !894)
!3224 = !DILocation(line: 2145, column: 30, scope: !894)
!3225 = !DILocation(line: 2145, column: 28, scope: !894)
!3226 = !DILocation(line: 2146, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2146, column: 7)
!3228 = !DILocation(line: 2146, column: 10, scope: !3227)
!3229 = !DILocation(line: 2146, column: 7, scope: !894)
!3230 = !DILocation(line: 2147, column: 23, scope: !3227)
!3231 = !DILocation(line: 2147, column: 5, scope: !3227)
!3232 = !DILocation(line: 2148, column: 20, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2148, column: 7)
!3234 = !DILocation(line: 2148, column: 17, scope: !3233)
!3235 = !DILocation(line: 2148, column: 7, scope: !894)
!3236 = !DILocalVariable(name: "p", scope: !3237, file: !3, line: 2150, type: !146)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 2149, column: 5)
!3238 = !DILocation(line: 2150, column: 19, scope: !3237)
!3239 = !DILocation(line: 2151, column: 25, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2151, column: 7)
!3241 = !DILocation(line: 2151, column: 41, scope: !3240)
!3242 = !DILocation(line: 2151, column: 17, scope: !3240)
!3243 = !DILocation(line: 2151, column: 14, scope: !3240)
!3244 = !DILocation(line: 2151, column: 12, scope: !3240)
!3245 = !DILocation(line: 2151, column: 56, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 2151, column: 7)
!3247 = !DILocation(line: 2151, column: 55, scope: !3246)
!3248 = !DILocation(line: 2151, column: 7, scope: !3240)
!3249 = !DILocation(line: 2152, column: 27, scope: !3246)
!3250 = !DILocation(line: 2152, column: 54, scope: !3246)
!3251 = !DILocation(line: 2152, column: 53, scope: !3246)
!3252 = !DILocation(line: 2152, column: 9, scope: !3246)
!3253 = !DILocation(line: 2151, column: 60, scope: !3246)
!3254 = !DILocation(line: 2151, column: 7, scope: !3246)
!3255 = distinct !{!3255, !3248, !3256}
!3256 = !DILocation(line: 2152, column: 58, scope: !3240)
!3257 = !DILocation(line: 2153, column: 5, scope: !3237)
!3258 = !DILocation(line: 2155, column: 29, scope: !894)
!3259 = !DILocation(line: 2155, column: 27, scope: !894)
!3260 = !DILocation(line: 2156, column: 21, scope: !894)
!3261 = !DILocation(line: 2156, column: 3, scope: !894)
!3262 = !DILocation(line: 2161, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2161, column: 7)
!3264 = !DILocation(line: 2161, column: 13, scope: !3263)
!3265 = !DILocation(line: 2161, column: 17, scope: !3263)
!3266 = !DILocation(line: 2161, column: 24, scope: !3263)
!3267 = !DILocation(line: 2161, column: 39, scope: !3263)
!3268 = !DILocation(line: 2161, column: 42, scope: !3263)
!3269 = !DILocation(line: 2161, column: 7, scope: !894)
!3270 = !DILocation(line: 2162, column: 11, scope: !3263)
!3271 = !DILocation(line: 2162, column: 5, scope: !3263)
!3272 = !DILocation(line: 2172, column: 8, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2172, column: 7)
!3274 = !DILocation(line: 2172, column: 18, scope: !3273)
!3275 = !DILocation(line: 2172, column: 32, scope: !3273)
!3276 = !DILocation(line: 2172, column: 35, scope: !3273)
!3277 = !DILocation(line: 2172, column: 45, scope: !3273)
!3278 = !DILocation(line: 2173, column: 7, scope: !3273)
!3279 = !DILocation(line: 2173, column: 11, scope: !3273)
!3280 = !DILocation(line: 2173, column: 31, scope: !3273)
!3281 = !DILocation(line: 2173, column: 34, scope: !3273)
!3282 = !DILocation(line: 2173, column: 41, scope: !3273)
!3283 = !DILocation(line: 2172, column: 7, scope: !894)
!3284 = !DILocation(line: 2175, column: 17, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 2174, column: 5)
!3286 = !DILocation(line: 2176, column: 5, scope: !3285)
!3287 = !DILocation(line: 2178, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !894, file: !3, line: 2178, column: 7)
!3289 = !DILocation(line: 2178, column: 14, scope: !3288)
!3290 = !DILocation(line: 2178, column: 7, scope: !894)
!3291 = !DILocalVariable(name: "style", scope: !3292, file: !3, line: 2180, type: !143)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 2179, column: 5)
!3293 = !DILocation(line: 2180, column: 13, scope: !3292)
!3294 = !DILocation(line: 2180, column: 21, scope: !3292)
!3295 = !DILocation(line: 2183, column: 13, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2183, column: 11)
!3297 = !DILocation(line: 2183, column: 11, scope: !3292)
!3298 = !DILocation(line: 2184, column: 24, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 2184, column: 13)
!3300 = !DILocation(line: 2184, column: 22, scope: !3299)
!3301 = !DILocation(line: 2184, column: 13, scope: !3296)
!3302 = !DILocation(line: 2185, column: 19, scope: !3299)
!3303 = !DILocation(line: 2185, column: 17, scope: !3299)
!3304 = !DILocation(line: 2185, column: 11, scope: !3299)
!3305 = !DILocation(line: 2184, column: 45, scope: !3299)
!3306 = !DILocation(line: 2187, column: 7, scope: !3292)
!3307 = !DILocation(line: 2187, column: 14, scope: !3292)
!3308 = !DILocation(line: 2189, column: 17, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 2189, column: 15)
!3310 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2188, column: 9)
!3311 = !DILocation(line: 2189, column: 15, scope: !3310)
!3312 = !DILocation(line: 2190, column: 20, scope: !3309)
!3313 = !DILocation(line: 2190, column: 13, scope: !3309)
!3314 = !DILocation(line: 2191, column: 17, scope: !3310)
!3315 = distinct !{!3315, !3306, !3316}
!3316 = !DILocation(line: 2192, column: 9, scope: !3292)
!3317 = !DILocation(line: 2194, column: 12, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2194, column: 11)
!3319 = !DILocation(line: 2194, column: 11, scope: !3318)
!3320 = !DILocation(line: 2194, column: 18, scope: !3318)
!3321 = !DILocation(line: 2194, column: 11, scope: !3292)
!3322 = !DILocalVariable(name: "p0", scope: !3323, file: !3, line: 2196, type: !143)
!3323 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2195, column: 9)
!3324 = !DILocation(line: 2196, column: 17, scope: !3323)
!3325 = !DILocation(line: 2196, column: 22, scope: !3323)
!3326 = !DILocation(line: 2196, column: 28, scope: !3323)
!3327 = !DILocalVariable(name: "p1", scope: !3323, file: !3, line: 2197, type: !143)
!3328 = !DILocation(line: 2197, column: 17, scope: !3323)
!3329 = !DILocation(line: 2197, column: 30, scope: !3323)
!3330 = !DILocation(line: 2197, column: 22, scope: !3323)
!3331 = !DILocation(line: 2198, column: 17, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 2198, column: 15)
!3333 = !DILocation(line: 2198, column: 15, scope: !3323)
!3334 = !DILocation(line: 2199, column: 18, scope: !3332)
!3335 = !DILocation(line: 2199, column: 16, scope: !3332)
!3336 = !DILocation(line: 2199, column: 13, scope: !3332)
!3337 = !DILocation(line: 2202, column: 27, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 2202, column: 19)
!3339 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 2201, column: 13)
!3340 = !DILocation(line: 2202, column: 30, scope: !3338)
!3341 = !DILocation(line: 2202, column: 19, scope: !3338)
!3342 = !DILocation(line: 2202, column: 19, scope: !3339)
!3343 = !DILocation(line: 2203, column: 17, scope: !3338)
!3344 = !DILocation(line: 2205, column: 18, scope: !3339)
!3345 = !DILocation(line: 2205, column: 21, scope: !3339)
!3346 = !DILocation(line: 2207, column: 33, scope: !3323)
!3347 = !DILocation(line: 2207, column: 31, scope: !3323)
!3348 = !DILocation(line: 2208, column: 33, scope: !3323)
!3349 = !DILocation(line: 2208, column: 31, scope: !3323)
!3350 = !DILocation(line: 2209, column: 9, scope: !3323)
!3351 = !DILocalVariable(name: "res", scope: !3352, file: !3, line: 2212, type: !564)
!3352 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 2211, column: 9)
!3353 = !DILocation(line: 2212, column: 21, scope: !3352)
!3354 = !DILocation(line: 2212, column: 37, scope: !3352)
!3355 = !DILocation(line: 2212, column: 27, scope: !3352)
!3356 = !DILocation(line: 2215, column: 15, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 2215, column: 15)
!3358 = !DILocation(line: 2215, column: 19, scope: !3357)
!3359 = !DILocation(line: 2215, column: 15, scope: !3352)
!3360 = !DILocation(line: 2220, column: 47, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 2216, column: 13)
!3362 = !DILocation(line: 2220, column: 54, scope: !3361)
!3363 = !DILocation(line: 2220, column: 15, scope: !3361)
!3364 = !DILocation(line: 2227, column: 15, scope: !3361)
!3365 = !DILocalVariable(name: "p", scope: !3361, file: !3, line: 2228, type: !567)
!3366 = !DILocation(line: 2228, column: 34, scope: !3361)
!3367 = !DILocation(line: 2229, column: 15, scope: !3361)
!3368 = !DILocation(line: 2229, column: 23, scope: !3361)
!3369 = !DILocation(line: 2229, column: 22, scope: !3361)
!3370 = !DILocation(line: 2230, column: 26, scope: !3361)
!3371 = !DILocation(line: 2230, column: 56, scope: !3361)
!3372 = !DILocation(line: 2230, column: 54, scope: !3361)
!3373 = !DILocation(line: 2230, column: 17, scope: !3361)
!3374 = distinct !{!3374, !3367, !3375}
!3375 = !DILocation(line: 2230, column: 58, scope: !3361)
!3376 = !DILocation(line: 2231, column: 15, scope: !3361)
!3377 = !DILocation(line: 2233, column: 15, scope: !3361)
!3378 = !DILocation(line: 2235, column: 19, scope: !3352)
!3379 = !DILocation(line: 2235, column: 11, scope: !3352)
!3380 = !DILocation(line: 2238, column: 57, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 2236, column: 13)
!3382 = !DILocation(line: 2238, column: 35, scope: !3381)
!3383 = !DILocation(line: 2240, column: 15, scope: !3381)
!3384 = !DILocation(line: 2243, column: 57, scope: !3381)
!3385 = !DILocation(line: 2243, column: 35, scope: !3381)
!3386 = !DILocation(line: 2244, column: 15, scope: !3381)
!3387 = !DILocation(line: 2247, column: 35, scope: !3381)
!3388 = !DILocation(line: 2248, column: 35, scope: !3381)
!3389 = !DILocation(line: 2249, column: 15, scope: !3381)
!3390 = !DILocation(line: 2252, column: 19, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 2252, column: 19)
!3392 = !DILocation(line: 2252, column: 19, scope: !3381)
!3393 = !DILocalVariable(name: "i", scope: !3394, file: !3, line: 2254, type: !27)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 2254, column: 19)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 2253, column: 17)
!3396 = !DILocation(line: 2254, column: 28, scope: !3394)
!3397 = !DILocation(line: 2254, column: 24, scope: !3394)
!3398 = !DILocation(line: 2254, column: 35, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2254, column: 19)
!3400 = !DILocation(line: 2254, column: 37, scope: !3399)
!3401 = !DILocation(line: 2254, column: 19, scope: !3394)
!3402 = !DILocation(line: 2256, column: 57, scope: !3399)
!3403 = !DILocation(line: 2256, column: 40, scope: !3399)
!3404 = !DILocation(line: 2256, column: 23, scope: !3399)
!3405 = !DILocation(line: 2255, column: 38, scope: !3399)
!3406 = !DILocation(line: 2255, column: 21, scope: !3399)
!3407 = !DILocation(line: 2255, column: 41, scope: !3399)
!3408 = !DILocation(line: 2254, column: 43, scope: !3399)
!3409 = !DILocation(line: 2254, column: 19, scope: !3399)
!3410 = distinct !{!3410, !3401, !3411}
!3411 = !DILocation(line: 2256, column: 68, scope: !3394)
!3412 = !DILocation(line: 2257, column: 17, scope: !3395)
!3413 = !DILocation(line: 2258, column: 13, scope: !3381)
!3414 = !DILocation(line: 2261, column: 7, scope: !3292)
!3415 = !DILocation(line: 2262, column: 5, scope: !3292)
!3416 = !DILocation(line: 2264, column: 10, scope: !894)
!3417 = !DILocation(line: 2264, column: 3, scope: !894)
!3418 = !DILocation(line: 2265, column: 1, scope: !894)
!3419 = distinct !DISubprogram(name: "parse_ls_color", scope: !3, file: !3, line: 2510, type: !341, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3420 = !DILocalVariable(name: "p", scope: !3419, file: !3, line: 2512, type: !146)
!3421 = !DILocation(line: 2512, column: 15, scope: !3419)
!3422 = !DILocalVariable(name: "buf", scope: !3419, file: !3, line: 2513, type: !143)
!3423 = !DILocation(line: 2513, column: 9, scope: !3419)
!3424 = !DILocalVariable(name: "ind_no", scope: !3419, file: !3, line: 2514, type: !27)
!3425 = !DILocation(line: 2514, column: 7, scope: !3419)
!3426 = !DILocalVariable(name: "label", scope: !3419, file: !3, line: 2515, type: !592)
!3427 = !DILocation(line: 2515, column: 8, scope: !3419)
!3428 = !DILocalVariable(name: "ext", scope: !3419, file: !3, line: 2516, type: !593)
!3429 = !DILocation(line: 2516, column: 26, scope: !3419)
!3430 = !DILocation(line: 2518, column: 12, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2518, column: 7)
!3432 = !DILocation(line: 2518, column: 10, scope: !3431)
!3433 = !DILocation(line: 2518, column: 34, scope: !3431)
!3434 = !DILocation(line: 2518, column: 42, scope: !3431)
!3435 = !DILocation(line: 2518, column: 46, scope: !3431)
!3436 = !DILocation(line: 2518, column: 45, scope: !3431)
!3437 = !DILocation(line: 2518, column: 48, scope: !3431)
!3438 = !DILocation(line: 2518, column: 7, scope: !3419)
!3439 = !DILocalVariable(name: "colorterm", scope: !3440, file: !3, line: 2524, type: !146)
!3440 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 2519, column: 5)
!3441 = !DILocation(line: 2524, column: 19, scope: !3440)
!3442 = !DILocation(line: 2524, column: 31, scope: !3440)
!3443 = !DILocation(line: 2525, column: 14, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 2525, column: 11)
!3445 = !DILocation(line: 2525, column: 24, scope: !3444)
!3446 = !DILocation(line: 2525, column: 28, scope: !3444)
!3447 = !DILocation(line: 2525, column: 27, scope: !3444)
!3448 = !DILocation(line: 2525, column: 39, scope: !3444)
!3449 = !DILocation(line: 2525, column: 44, scope: !3444)
!3450 = !DILocation(line: 2525, column: 11, scope: !3440)
!3451 = !DILocation(line: 2526, column: 26, scope: !3444)
!3452 = !DILocation(line: 2526, column: 9, scope: !3444)
!3453 = !DILocation(line: 2527, column: 7, scope: !3440)
!3454 = !DILocation(line: 2530, column: 7, scope: !3419)
!3455 = !DILocation(line: 2531, column: 11, scope: !3419)
!3456 = !DILocation(line: 2531, column: 3, scope: !3419)
!3457 = !DILocation(line: 2537, column: 30, scope: !3419)
!3458 = !DILocation(line: 2537, column: 21, scope: !3419)
!3459 = !DILocation(line: 2537, column: 19, scope: !3419)
!3460 = !DILocation(line: 2537, column: 7, scope: !3419)
!3461 = !DILocalVariable(name: "state", scope: !3419, file: !3, line: 2539, type: !129)
!3462 = !DILocation(line: 2539, column: 20, scope: !3419)
!3463 = !DILocation(line: 2540, column: 3, scope: !3419)
!3464 = !DILocation(line: 2542, column: 15, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2541, column: 5)
!3466 = !DILocation(line: 2542, column: 7, scope: !3465)
!3467 = !DILocation(line: 2545, column: 20, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 2543, column: 9)
!3469 = !DILocation(line: 2545, column: 19, scope: !3468)
!3470 = !DILocation(line: 2545, column: 11, scope: !3468)
!3471 = !DILocation(line: 2548, column: 15, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2546, column: 13)
!3473 = !DILocation(line: 2549, column: 15, scope: !3472)
!3474 = !DILocation(line: 2557, column: 21, scope: !3472)
!3475 = !DILocation(line: 2557, column: 19, scope: !3472)
!3476 = !DILocation(line: 2558, column: 27, scope: !3472)
!3477 = !DILocation(line: 2558, column: 15, scope: !3472)
!3478 = !DILocation(line: 2558, column: 20, scope: !3472)
!3479 = !DILocation(line: 2558, column: 25, scope: !3472)
!3480 = !{!3481, !2443, i64 32}
!3481 = !{!"color_ext_type", !2707, i64 0, !2707, i64 16, !2443, i64 32}
!3482 = !DILocation(line: 2559, column: 32, scope: !3472)
!3483 = !DILocation(line: 2559, column: 30, scope: !3472)
!3484 = !DILocation(line: 2561, column: 15, scope: !3472)
!3485 = !DILocation(line: 2562, column: 33, scope: !3472)
!3486 = !DILocation(line: 2562, column: 15, scope: !3472)
!3487 = !DILocation(line: 2562, column: 20, scope: !3472)
!3488 = !DILocation(line: 2562, column: 24, scope: !3472)
!3489 = !DILocation(line: 2562, column: 31, scope: !3472)
!3490 = !{!3481, !2443, i64 8}
!3491 = !DILocation(line: 2564, column: 59, scope: !3472)
!3492 = !DILocation(line: 2564, column: 64, scope: !3472)
!3493 = !DILocation(line: 2564, column: 68, scope: !3472)
!3494 = !DILocation(line: 2564, column: 24, scope: !3472)
!3495 = !DILocation(line: 2564, column: 21, scope: !3472)
!3496 = !DILocation(line: 2566, column: 15, scope: !3472)
!3497 = !DILocation(line: 2569, column: 21, scope: !3472)
!3498 = !DILocation(line: 2570, column: 15, scope: !3472)
!3499 = !DILocation(line: 2573, column: 29, scope: !3472)
!3500 = !DILocation(line: 2573, column: 26, scope: !3472)
!3501 = !DILocation(line: 2573, column: 15, scope: !3472)
!3502 = !DILocation(line: 2573, column: 24, scope: !3472)
!3503 = !DILocation(line: 2574, column: 21, scope: !3472)
!3504 = !DILocation(line: 2575, column: 15, scope: !3472)
!3505 = !DILocation(line: 2577, column: 11, scope: !3468)
!3506 = !DILocation(line: 2580, column: 16, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2580, column: 15)
!3508 = !DILocation(line: 2580, column: 15, scope: !3507)
!3509 = !DILocation(line: 2580, column: 15, scope: !3468)
!3510 = !DILocation(line: 2582, column: 29, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 2581, column: 13)
!3512 = !DILocation(line: 2582, column: 26, scope: !3511)
!3513 = !DILocation(line: 2582, column: 15, scope: !3511)
!3514 = !DILocation(line: 2582, column: 24, scope: !3511)
!3515 = !DILocation(line: 2583, column: 21, scope: !3511)
!3516 = !DILocation(line: 2584, column: 13, scope: !3511)
!3517 = !DILocation(line: 2586, column: 19, scope: !3507)
!3518 = !DILocation(line: 2587, column: 11, scope: !3468)
!3519 = !DILocation(line: 2590, column: 17, scope: !3468)
!3520 = !DILocation(line: 2591, column: 18, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2591, column: 15)
!3522 = !DILocation(line: 2591, column: 15, scope: !3521)
!3523 = !DILocation(line: 2591, column: 22, scope: !3521)
!3524 = !DILocation(line: 2591, column: 15, scope: !3468)
!3525 = !DILocation(line: 2593, column: 27, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 2593, column: 15)
!3527 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2592, column: 13)
!3528 = !DILocation(line: 2593, column: 20, scope: !3526)
!3529 = !DILocation(line: 2593, column: 47, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 2593, column: 15)
!3531 = !DILocation(line: 2593, column: 32, scope: !3530)
!3532 = !DILocation(line: 2593, column: 55, scope: !3530)
!3533 = !DILocation(line: 2593, column: 15, scope: !3526)
!3534 = !DILocation(line: 2595, column: 23, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 2595, column: 23)
!3536 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 2594, column: 17)
!3537 = !DILocation(line: 2595, column: 23, scope: !3536)
!3538 = !DILocation(line: 2597, column: 56, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 2596, column: 21)
!3540 = !DILocation(line: 2597, column: 39, scope: !3539)
!3541 = !DILocation(line: 2597, column: 23, scope: !3539)
!3542 = !DILocation(line: 2597, column: 47, scope: !3539)
!3543 = !DILocation(line: 2597, column: 54, scope: !3539)
!3544 = !DILocation(line: 2599, column: 67, scope: !3539)
!3545 = !DILocation(line: 2599, column: 51, scope: !3539)
!3546 = !DILocation(line: 2599, column: 75, scope: !3539)
!3547 = !DILocation(line: 2598, column: 32, scope: !3539)
!3548 = !DILocation(line: 2598, column: 29, scope: !3539)
!3549 = !DILocation(line: 2601, column: 23, scope: !3539)
!3550 = !DILocation(line: 2603, column: 17, scope: !3536)
!3551 = !DILocation(line: 2593, column: 64, scope: !3530)
!3552 = !DILocation(line: 2593, column: 15, scope: !3530)
!3553 = distinct !{!3553, !3533, !3554}
!3554 = !DILocation(line: 2603, column: 17, scope: !3526)
!3555 = !DILocation(line: 2604, column: 19, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 2604, column: 19)
!3557 = !DILocation(line: 2604, column: 25, scope: !3556)
!3558 = !DILocation(line: 2604, column: 19, scope: !3527)
!3559 = !DILocation(line: 2605, column: 30, scope: !3556)
!3560 = !DILocation(line: 2605, column: 67, scope: !3556)
!3561 = !DILocation(line: 2605, column: 60, scope: !3556)
!3562 = !DILocation(line: 2605, column: 17, scope: !3556)
!3563 = !DILocation(line: 2606, column: 13, scope: !3527)
!3564 = !DILocation(line: 2607, column: 11, scope: !3468)
!3565 = !DILocation(line: 2610, column: 18, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 2610, column: 15)
!3567 = !DILocation(line: 2610, column: 15, scope: !3566)
!3568 = !DILocation(line: 2610, column: 22, scope: !3566)
!3569 = !DILocation(line: 2610, column: 15, scope: !3468)
!3570 = !DILocation(line: 2612, column: 33, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2611, column: 13)
!3572 = !DILocation(line: 2612, column: 15, scope: !3571)
!3573 = !DILocation(line: 2612, column: 20, scope: !3571)
!3574 = !DILocation(line: 2612, column: 24, scope: !3571)
!3575 = !DILocation(line: 2612, column: 31, scope: !3571)
!3576 = !{!3481, !2443, i64 24}
!3577 = !DILocation(line: 2613, column: 60, scope: !3571)
!3578 = !DILocation(line: 2613, column: 65, scope: !3571)
!3579 = !DILocation(line: 2613, column: 69, scope: !3571)
!3580 = !DILocation(line: 2613, column: 24, scope: !3571)
!3581 = !DILocation(line: 2613, column: 21, scope: !3571)
!3582 = !DILocation(line: 2615, column: 13, scope: !3571)
!3583 = !DILocation(line: 2617, column: 19, scope: !3566)
!3584 = !DILocation(line: 2618, column: 11, scope: !3468)
!3585 = !DILocation(line: 2621, column: 11, scope: !3468)
!3586 = !DILocation(line: 2624, column: 11, scope: !3468)
!3587 = distinct !{!3587, !3463, !3588}
!3588 = !DILocation(line: 2626, column: 5, scope: !3419)
!3589 = !DILabel(scope: !3419, name: "done", file: !3, line: 2627)
!3590 = !DILocation(line: 2627, column: 2, scope: !3419)
!3591 = !DILocation(line: 2629, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2629, column: 7)
!3593 = !DILocation(line: 2629, column: 13, scope: !3592)
!3594 = !DILocation(line: 2629, column: 7, scope: !3419)
!3595 = !DILocalVariable(name: "e", scope: !3596, file: !3, line: 2631, type: !593)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2630, column: 5)
!3597 = !DILocation(line: 2631, column: 30, scope: !3596)
!3598 = !DILocalVariable(name: "e2", scope: !3596, file: !3, line: 2632, type: !593)
!3599 = !DILocation(line: 2632, column: 30, scope: !3596)
!3600 = !DILocation(line: 2635, column: 14, scope: !3596)
!3601 = !DILocation(line: 2634, column: 7, scope: !3596)
!3602 = !DILocation(line: 2636, column: 13, scope: !3596)
!3603 = !DILocation(line: 2636, column: 7, scope: !3596)
!3604 = !DILocation(line: 2637, column: 16, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 2637, column: 7)
!3606 = !DILocation(line: 2637, column: 14, scope: !3605)
!3607 = !DILocation(line: 2637, column: 12, scope: !3605)
!3608 = !DILocation(line: 2637, column: 32, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 2637, column: 7)
!3610 = !DILocation(line: 2637, column: 34, scope: !3609)
!3611 = !DILocation(line: 2637, column: 7, scope: !3605)
!3612 = !DILocation(line: 2639, column: 16, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2638, column: 9)
!3614 = !DILocation(line: 2639, column: 14, scope: !3613)
!3615 = !DILocation(line: 2640, column: 15, scope: !3613)
!3616 = !DILocation(line: 2640, column: 18, scope: !3613)
!3617 = !DILocation(line: 2640, column: 13, scope: !3613)
!3618 = !DILocation(line: 2641, column: 17, scope: !3613)
!3619 = !DILocation(line: 2641, column: 11, scope: !3613)
!3620 = !DILocation(line: 2637, column: 7, scope: !3609)
!3621 = distinct !{!3621, !3611, !3622}
!3622 = !DILocation(line: 2642, column: 9, scope: !3605)
!3623 = !DILocation(line: 2643, column: 24, scope: !3596)
!3624 = !DILocation(line: 2644, column: 5, scope: !3596)
!3625 = !DILocation(line: 2646, column: 31, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 2646, column: 7)
!3627 = !DILocation(line: 2646, column: 35, scope: !3626)
!3628 = !DILocation(line: 2647, column: 7, scope: !3626)
!3629 = !DILocation(line: 2647, column: 11, scope: !3626)
!3630 = !DILocation(line: 2646, column: 7, scope: !3419)
!3631 = !DILocation(line: 2648, column: 31, scope: !3626)
!3632 = !DILocation(line: 2648, column: 5, scope: !3626)
!3633 = !DILocation(line: 2649, column: 1, scope: !3419)
!3634 = distinct !DISubprogram(name: "is_colored", scope: !3, file: !3, line: 1256, type: !331, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3635 = !DILocalVariable(name: "type", arg: 1, scope: !3634, file: !3, line: 1256, type: !53)
!3636 = !DILocation(line: 1256, column: 31, scope: !3634)
!3637 = !DILocalVariable(name: "len", scope: !3634, file: !3, line: 1258, type: !149)
!3638 = !DILocation(line: 1258, column: 10, scope: !3634)
!3639 = !DILocation(line: 1258, column: 32, scope: !3634)
!3640 = !DILocation(line: 1258, column: 16, scope: !3634)
!3641 = !DILocation(line: 1258, column: 38, scope: !3634)
!3642 = !DILocalVariable(name: "s", scope: !3634, file: !3, line: 1259, type: !146)
!3643 = !DILocation(line: 1259, column: 15, scope: !3634)
!3644 = !DILocation(line: 1259, column: 35, scope: !3634)
!3645 = !DILocation(line: 1259, column: 19, scope: !3634)
!3646 = !DILocation(line: 1259, column: 41, scope: !3634)
!3647 = !DILocation(line: 1260, column: 13, scope: !3634)
!3648 = !DILocation(line: 1260, column: 17, scope: !3634)
!3649 = !DILocation(line: 1261, column: 13, scope: !3634)
!3650 = !DILocation(line: 1261, column: 17, scope: !3634)
!3651 = !DILocation(line: 1261, column: 21, scope: !3634)
!3652 = !DILocation(line: 1261, column: 26, scope: !3634)
!3653 = !DILocation(line: 1261, column: 29, scope: !3634)
!3654 = !DILocation(line: 1261, column: 50, scope: !3634)
!3655 = !DILocation(line: 1262, column: 13, scope: !3634)
!3656 = !DILocation(line: 1262, column: 17, scope: !3634)
!3657 = !DILocation(line: 1262, column: 21, scope: !3634)
!3658 = !DILocation(line: 1262, column: 26, scope: !3634)
!3659 = !DILocation(line: 1262, column: 29, scope: !3634)
!3660 = !DILocation(line: 1262, column: 51, scope: !3634)
!3661 = !DILocation(line: 0, scope: !3634)
!3662 = !DILocation(line: 1260, column: 10, scope: !3634)
!3663 = !DILocation(line: 1260, column: 3, scope: !3634)
!3664 = distinct !DISubprogram(name: "dev_ino_hash", scope: !3, file: !3, line: 1192, type: !333, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3665 = !DILocalVariable(name: "x", arg: 1, scope: !3664, file: !3, line: 1192, type: !181)
!3666 = !DILocation(line: 1192, column: 27, scope: !3664)
!3667 = !DILocalVariable(name: "table_size", arg: 2, scope: !3664, file: !3, line: 1192, type: !149)
!3668 = !DILocation(line: 1192, column: 37, scope: !3664)
!3669 = !DILocalVariable(name: "p", scope: !3664, file: !3, line: 1194, type: !335)
!3670 = !DILocation(line: 1194, column: 25, scope: !3664)
!3671 = !DILocation(line: 1194, column: 29, scope: !3664)
!3672 = !DILocation(line: 1195, column: 22, scope: !3664)
!3673 = !DILocation(line: 1195, column: 25, scope: !3664)
!3674 = !{!3675, !2467, i64 0}
!3675 = !{!"dev_ino", !2467, i64 0, !2467, i64 8}
!3676 = !DILocation(line: 1195, column: 34, scope: !3664)
!3677 = !DILocation(line: 1195, column: 32, scope: !3664)
!3678 = !DILocation(line: 1195, column: 3, scope: !3664)
!3679 = distinct !DISubprogram(name: "dev_ino_compare", scope: !3, file: !3, line: 1199, type: !337, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3680 = !DILocalVariable(name: "x", arg: 1, scope: !3679, file: !3, line: 1199, type: !181)
!3681 = !DILocation(line: 1199, column: 30, scope: !3679)
!3682 = !DILocalVariable(name: "y", arg: 2, scope: !3679, file: !3, line: 1199, type: !181)
!3683 = !DILocation(line: 1199, column: 45, scope: !3679)
!3684 = !DILocalVariable(name: "a", scope: !3679, file: !3, line: 1201, type: !335)
!3685 = !DILocation(line: 1201, column: 25, scope: !3679)
!3686 = !DILocation(line: 1201, column: 29, scope: !3679)
!3687 = !DILocalVariable(name: "b", scope: !3679, file: !3, line: 1202, type: !335)
!3688 = !DILocation(line: 1202, column: 25, scope: !3679)
!3689 = !DILocation(line: 1202, column: 29, scope: !3679)
!3690 = !DILocation(line: 1203, column: 10, scope: !3679)
!3691 = !{!3675, !2467, i64 8}
!3692 = !DILocation(line: 0, scope: !3679)
!3693 = !DILocation(line: 1203, column: 3, scope: !3679)
!3694 = distinct !DISubprogram(name: "dev_ino_free", scope: !3, file: !3, line: 1207, type: !339, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3695 = !DILocalVariable(name: "x", arg: 1, scope: !3694, file: !3, line: 1207, type: !167)
!3696 = !DILocation(line: 1207, column: 21, scope: !3694)
!3697 = !DILocation(line: 1209, column: 9, scope: !3694)
!3698 = !DILocation(line: 1209, column: 3, scope: !3694)
!3699 = !DILocation(line: 1210, column: 1, scope: !3694)
!3700 = distinct !DISubprogram(name: "file_escape_init", scope: !3, file: !3, line: 1085, type: !341, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3701 = !DILocalVariable(name: "i", scope: !3702, file: !3, line: 1087, type: !27)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 1087, column: 3)
!3703 = !DILocation(line: 1087, column: 12, scope: !3702)
!3704 = !DILocation(line: 1087, column: 8, scope: !3702)
!3705 = !DILocation(line: 1087, column: 19, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 1087, column: 3)
!3707 = !DILocation(line: 1087, column: 21, scope: !3706)
!3708 = !DILocation(line: 1087, column: 3, scope: !3702)
!3709 = !DILocation(line: 1088, column: 30, scope: !3706)
!3710 = !DILocation(line: 1088, column: 19, scope: !3706)
!3711 = !DILocation(line: 1088, column: 33, scope: !3706)
!3712 = !DILocation(line: 1088, column: 36, scope: !3706)
!3713 = !DILocation(line: 1088, column: 38, scope: !3706)
!3714 = !DILocation(line: 1088, column: 45, scope: !3706)
!3715 = !DILocation(line: 1088, column: 48, scope: !3706)
!3716 = !DILocation(line: 1088, column: 50, scope: !3706)
!3717 = !DILocation(line: 1088, column: 57, scope: !3706)
!3718 = !DILocation(line: 1088, column: 60, scope: !3706)
!3719 = !DILocation(line: 1088, column: 62, scope: !3706)
!3720 = !DILocation(line: 1088, column: 69, scope: !3706)
!3721 = !DILocation(line: 1088, column: 72, scope: !3706)
!3722 = !DILocation(line: 1088, column: 74, scope: !3706)
!3723 = !DILocation(line: 1088, column: 13, scope: !3706)
!3724 = !DILocation(line: 1088, column: 5, scope: !3706)
!3725 = !DILocation(line: 1088, column: 16, scope: !3706)
!3726 = !DILocation(line: 1087, column: 29, scope: !3706)
!3727 = !DILocation(line: 1087, column: 3, scope: !3706)
!3728 = distinct !{!3728, !3708, !3729}
!3729 = !DILocation(line: 1088, column: 77, scope: !3702)
!3730 = !DILocation(line: 1089, column: 1, scope: !3700)
!3731 = distinct !DISubprogram(name: "clear_files", scope: !3, file: !3, line: 2990, type: !341, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3732 = !DILocalVariable(name: "i", scope: !3733, file: !3, line: 2992, type: !149)
!3733 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 2992, column: 3)
!3734 = !DILocation(line: 2992, column: 15, scope: !3733)
!3735 = !DILocation(line: 2992, column: 8, scope: !3733)
!3736 = !DILocation(line: 2992, column: 22, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 2992, column: 3)
!3738 = !DILocation(line: 2992, column: 26, scope: !3737)
!3739 = !DILocation(line: 2992, column: 24, scope: !3737)
!3740 = !DILocation(line: 2992, column: 3, scope: !3733)
!3741 = !DILocalVariable(name: "f", scope: !3742, file: !3, line: 2994, type: !252)
!3742 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 2993, column: 5)
!3743 = !DILocation(line: 2994, column: 24, scope: !3742)
!3744 = !DILocation(line: 2994, column: 28, scope: !3742)
!3745 = !DILocation(line: 2994, column: 40, scope: !3742)
!3746 = !DILocation(line: 2995, column: 17, scope: !3742)
!3747 = !DILocation(line: 2995, column: 7, scope: !3742)
!3748 = !DILocation(line: 2996, column: 5, scope: !3742)
!3749 = !DILocation(line: 2992, column: 39, scope: !3737)
!3750 = !DILocation(line: 2992, column: 3, scope: !3737)
!3751 = distinct !{!3751, !3740, !3752}
!3752 = !DILocation(line: 2996, column: 5, scope: !3733)
!3753 = !DILocation(line: 2998, column: 14, scope: !3731)
!3754 = !DILocation(line: 2999, column: 19, scope: !3731)
!3755 = !DILocation(line: 3000, column: 15, scope: !3731)
!3756 = !DILocation(line: 3001, column: 22, scope: !3731)
!3757 = !DILocation(line: 3002, column: 20, scope: !3731)
!3758 = !DILocation(line: 3003, column: 15, scope: !3731)
!3759 = !DILocation(line: 3004, column: 15, scope: !3731)
!3760 = !DILocation(line: 3005, column: 15, scope: !3731)
!3761 = !DILocation(line: 3006, column: 16, scope: !3731)
!3762 = !DILocation(line: 3007, column: 18, scope: !3731)
!3763 = !DILocation(line: 3008, column: 29, scope: !3731)
!3764 = !DILocation(line: 3009, column: 29, scope: !3731)
!3765 = !DILocation(line: 3010, column: 19, scope: !3731)
!3766 = !DILocation(line: 3011, column: 1, scope: !3731)
!3767 = distinct !DISubprogram(name: "gobble_file", scope: !3, file: !3, line: 3111, type: !667, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!3768 = !DILocalVariable(name: "name", arg: 1, scope: !3767, file: !3, line: 3111, type: !146)
!3769 = !DILocation(line: 3111, column: 26, scope: !3767)
!3770 = !DILocalVariable(name: "type", arg: 2, scope: !3767, file: !3, line: 3111, type: !36)
!3771 = !DILocation(line: 3111, column: 46, scope: !3767)
!3772 = !DILocalVariable(name: "inode", arg: 3, scope: !3767, file: !3, line: 3111, type: !258)
!3773 = !DILocation(line: 3111, column: 58, scope: !3767)
!3774 = !DILocalVariable(name: "command_line_arg", arg: 4, scope: !3767, file: !3, line: 3112, type: !141)
!3775 = !DILocation(line: 3112, column: 19, scope: !3767)
!3776 = !DILocalVariable(name: "dirname", arg: 5, scope: !3767, file: !3, line: 3112, type: !146)
!3777 = !DILocation(line: 3112, column: 49, scope: !3767)
!3778 = !DILocalVariable(name: "blocks", scope: !3767, file: !3, line: 3114, type: !168)
!3779 = !DILocation(line: 3114, column: 13, scope: !3767)
!3780 = !DILocalVariable(name: "f", scope: !3767, file: !3, line: 3115, type: !252)
!3781 = !DILocation(line: 3115, column: 20, scope: !3767)
!3782 = !DILocation(line: 3119, column: 3, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3119, column: 3)
!3784 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3119, column: 3)
!3785 = !DILocation(line: 3119, column: 3, scope: !3784)
!3786 = !DILocation(line: 3121, column: 7, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3121, column: 7)
!3788 = !DILocation(line: 3121, column: 21, scope: !3787)
!3789 = !DILocation(line: 3121, column: 18, scope: !3787)
!3790 = !DILocation(line: 3121, column: 7, scope: !3767)
!3791 = !DILocation(line: 3123, column: 29, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 3122, column: 5)
!3793 = !DILocation(line: 3123, column: 39, scope: !3792)
!3794 = !DILocation(line: 3123, column: 18, scope: !3792)
!3795 = !DILocation(line: 3123, column: 16, scope: !3792)
!3796 = !DILocation(line: 3124, column: 19, scope: !3792)
!3797 = !DILocation(line: 3125, column: 5, scope: !3792)
!3798 = !DILocation(line: 3127, column: 8, scope: !3767)
!3799 = !DILocation(line: 3127, column: 17, scope: !3767)
!3800 = !DILocation(line: 3127, column: 5, scope: !3767)
!3801 = !DILocation(line: 3128, column: 11, scope: !3767)
!3802 = !DILocation(line: 3128, column: 3, scope: !3767)
!3803 = !DILocation(line: 3129, column: 20, scope: !3767)
!3804 = !DILocation(line: 3129, column: 3, scope: !3767)
!3805 = !DILocation(line: 3129, column: 6, scope: !3767)
!3806 = !DILocation(line: 3129, column: 11, scope: !3767)
!3807 = !DILocation(line: 3129, column: 18, scope: !3767)
!3808 = !{!3809, !2467, i64 32}
!3809 = !{!"fileinfo", !2443, i64 0, !2443, i64 8, !2443, i64 16, !3810, i64 24, !2438, i64 168, !2437, i64 172, !2443, i64 176, !2462, i64 184, !2462, i64 185, !2438, i64 188, !2462, i64 192, !2437, i64 196}
!3810 = !{!"stat", !2467, i64 0, !2467, i64 8, !2467, i64 16, !2437, i64 24, !2437, i64 28, !2437, i64 32, !2437, i64 36, !2467, i64 40, !2467, i64 48, !2467, i64 56, !2467, i64 64, !2466, i64 72, !2466, i64 88, !2466, i64 104, !2438, i64 120}
!3811 = !DILocation(line: 3130, column: 17, scope: !3767)
!3812 = !DILocation(line: 3130, column: 3, scope: !3767)
!3813 = !DILocation(line: 3130, column: 6, scope: !3767)
!3814 = !DILocation(line: 3130, column: 15, scope: !3767)
!3815 = !{!3809, !2438, i64 168}
!3816 = !DILocation(line: 3132, column: 3, scope: !3767)
!3817 = !DILocation(line: 3132, column: 6, scope: !3767)
!3818 = !DILocation(line: 3132, column: 13, scope: !3767)
!3819 = !{!3809, !2437, i64 196}
!3820 = !DILocation(line: 3133, column: 10, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3133, column: 7)
!3822 = !DILocation(line: 3133, column: 27, scope: !3821)
!3823 = !DILocation(line: 3133, column: 30, scope: !3821)
!3824 = !DILocation(line: 3133, column: 7, scope: !3767)
!3825 = !DILocation(line: 3136, column: 34, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 3134, column: 5)
!3827 = !DILocation(line: 3136, column: 19, scope: !3826)
!3828 = !DILocation(line: 3136, column: 7, scope: !3826)
!3829 = !DILocation(line: 3136, column: 10, scope: !3826)
!3830 = !DILocation(line: 3136, column: 17, scope: !3826)
!3831 = !DILocation(line: 3137, column: 11, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 3137, column: 11)
!3833 = !DILocation(line: 3137, column: 14, scope: !3832)
!3834 = !DILocation(line: 3137, column: 11, scope: !3826)
!3835 = !DILocation(line: 3138, column: 25, scope: !3832)
!3836 = !DILocation(line: 3138, column: 9, scope: !3832)
!3837 = !DILocation(line: 3139, column: 5, scope: !3826)
!3838 = !DILocation(line: 3141, column: 7, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3141, column: 7)
!3840 = !DILocation(line: 3142, column: 7, scope: !3839)
!3841 = !DILocation(line: 3142, column: 10, scope: !3839)
!3842 = !DILocation(line: 3143, column: 7, scope: !3839)
!3843 = !DILocation(line: 3143, column: 10, scope: !3839)
!3844 = !DILocation(line: 3147, column: 7, scope: !3839)
!3845 = !DILocation(line: 3147, column: 11, scope: !3839)
!3846 = !DILocation(line: 3147, column: 16, scope: !3839)
!3847 = !DILocation(line: 3147, column: 29, scope: !3839)
!3848 = !DILocation(line: 3147, column: 32, scope: !3839)
!3849 = !DILocation(line: 3148, column: 11, scope: !3839)
!3850 = !DILocation(line: 3148, column: 15, scope: !3839)
!3851 = !DILocation(line: 3149, column: 15, scope: !3839)
!3852 = !DILocation(line: 3149, column: 18, scope: !3839)
!3853 = !DILocation(line: 3150, column: 15, scope: !3839)
!3854 = !DILocation(line: 3150, column: 18, scope: !3839)
!3855 = !DILocation(line: 3153, column: 7, scope: !3839)
!3856 = !DILocation(line: 3153, column: 12, scope: !3839)
!3857 = !DILocation(line: 3153, column: 24, scope: !3839)
!3858 = !DILocation(line: 3153, column: 27, scope: !3839)
!3859 = !DILocation(line: 3154, column: 11, scope: !3839)
!3860 = !DILocation(line: 3154, column: 15, scope: !3839)
!3861 = !DILocation(line: 3154, column: 20, scope: !3839)
!3862 = !DILocation(line: 3154, column: 37, scope: !3839)
!3863 = !DILocation(line: 3154, column: 40, scope: !3839)
!3864 = !DILocation(line: 3154, column: 45, scope: !3839)
!3865 = !DILocation(line: 3155, column: 11, scope: !3839)
!3866 = !DILocation(line: 3155, column: 15, scope: !3839)
!3867 = !DILocation(line: 3155, column: 27, scope: !3839)
!3868 = !DILocation(line: 3156, column: 15, scope: !3839)
!3869 = !DILocation(line: 3156, column: 18, scope: !3839)
!3870 = !DILocation(line: 3156, column: 44, scope: !3839)
!3871 = !DILocation(line: 3156, column: 47, scope: !3839)
!3872 = !DILocation(line: 3159, column: 7, scope: !3839)
!3873 = !DILocation(line: 3159, column: 11, scope: !3839)
!3874 = !DILocation(line: 3159, column: 23, scope: !3839)
!3875 = !DILocation(line: 3159, column: 26, scope: !3839)
!3876 = !DILocation(line: 3159, column: 32, scope: !3839)
!3877 = !DILocation(line: 3160, column: 7, scope: !3839)
!3878 = !DILocation(line: 3160, column: 11, scope: !3839)
!3879 = !DILocation(line: 3161, column: 11, scope: !3839)
!3880 = !DILocation(line: 3161, column: 15, scope: !3839)
!3881 = !DILocation(line: 3161, column: 20, scope: !3839)
!3882 = !DILocation(line: 3161, column: 31, scope: !3839)
!3883 = !DILocation(line: 3161, column: 34, scope: !3839)
!3884 = !DILocation(line: 3165, column: 15, scope: !3839)
!3885 = !DILocation(line: 3165, column: 19, scope: !3839)
!3886 = !DILocation(line: 3165, column: 24, scope: !3839)
!3887 = !DILocation(line: 3165, column: 34, scope: !3839)
!3888 = !DILocation(line: 3165, column: 38, scope: !3839)
!3889 = !DILocation(line: 3165, column: 54, scope: !3839)
!3890 = !DILocation(line: 3172, column: 38, scope: !3839)
!3891 = !DILocation(line: 3172, column: 42, scope: !3839)
!3892 = !DILocation(line: 3173, column: 42, scope: !3839)
!3893 = !DILocation(line: 3173, column: 46, scope: !3839)
!3894 = !DILocation(line: 3174, column: 46, scope: !3839)
!3895 = !DILocation(line: 3174, column: 49, scope: !3839)
!3896 = !DILocation(line: 3175, column: 46, scope: !3839)
!3897 = !DILocation(line: 3175, column: 49, scope: !3839)
!3898 = !DILocation(line: 3176, column: 46, scope: !3839)
!3899 = !DILocation(line: 3176, column: 49, scope: !3839)
!3900 = !DILocation(line: 3141, column: 7, scope: !3767)
!3901 = !DILocalVariable(name: "full_name", scope: !3902, file: !3, line: 3181, type: !143)
!3902 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 3179, column: 5)
!3903 = !DILocation(line: 3181, column: 13, scope: !3902)
!3904 = !DILocalVariable(name: "do_deref", scope: !3902, file: !3, line: 3182, type: !141)
!3905 = !DILocation(line: 3182, column: 12, scope: !3902)
!3906 = !DILocalVariable(name: "err", scope: !3902, file: !3, line: 3183, type: !27)
!3907 = !DILocation(line: 3183, column: 11, scope: !3902)
!3908 = !DILocation(line: 3185, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3185, column: 11)
!3910 = !DILocation(line: 3185, column: 19, scope: !3909)
!3911 = !DILocation(line: 3185, column: 26, scope: !3909)
!3912 = !DILocation(line: 3185, column: 29, scope: !3909)
!3913 = !DILocation(line: 3185, column: 40, scope: !3909)
!3914 = !DILocation(line: 3185, column: 11, scope: !3902)
!3915 = !DILocation(line: 3186, column: 30, scope: !3909)
!3916 = !DILocation(line: 3186, column: 19, scope: !3909)
!3917 = !DILocation(line: 3186, column: 9, scope: !3909)
!3918 = !DILocation(line: 3189, column: 39, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 3188, column: 9)
!3920 = !DILocation(line: 3189, column: 31, scope: !3919)
!3921 = !DILocation(line: 3189, column: 55, scope: !3919)
!3922 = !DILocation(line: 3189, column: 47, scope: !3919)
!3923 = !DILocation(line: 3189, column: 45, scope: !3919)
!3924 = !DILocation(line: 3189, column: 64, scope: !3919)
!3925 = !DILocation(line: 3189, column: 23, scope: !3919)
!3926 = !DILocation(line: 3189, column: 21, scope: !3919)
!3927 = !DILocation(line: 3190, column: 19, scope: !3919)
!3928 = !DILocation(line: 3190, column: 30, scope: !3919)
!3929 = !DILocation(line: 3190, column: 39, scope: !3919)
!3930 = !DILocation(line: 3190, column: 11, scope: !3919)
!3931 = !DILocation(line: 3193, column: 11, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3193, column: 11)
!3933 = !DILocation(line: 3193, column: 11, scope: !3902)
!3934 = !DILocation(line: 3195, column: 58, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3194, column: 9)
!3936 = !DILocation(line: 3195, column: 30, scope: !3935)
!3937 = !DILocation(line: 3195, column: 11, scope: !3935)
!3938 = !DILocation(line: 3195, column: 14, scope: !3935)
!3939 = !DILocation(line: 3195, column: 28, scope: !3935)
!3940 = !{!3809, !2443, i64 16}
!3941 = !DILocation(line: 3197, column: 17, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 3197, column: 15)
!3943 = !DILocation(line: 3197, column: 20, scope: !3942)
!3944 = !DILocation(line: 3197, column: 15, scope: !3935)
!3945 = !DILocation(line: 3198, column: 27, scope: !3942)
!3946 = !DILocation(line: 3199, column: 27, scope: !3942)
!3947 = !DILocation(line: 3199, column: 57, scope: !3942)
!3948 = !DILocation(line: 3198, column: 13, scope: !3942)
!3949 = !DILocation(line: 3200, column: 9, scope: !3935)
!3950 = !DILocation(line: 3202, column: 15, scope: !3902)
!3951 = !DILocation(line: 3202, column: 7, scope: !3902)
!3952 = !DILocation(line: 3205, column: 23, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3203, column: 9)
!3954 = !DILocation(line: 3205, column: 35, scope: !3953)
!3955 = !DILocation(line: 3205, column: 38, scope: !3953)
!3956 = !DILocation(line: 3205, column: 17, scope: !3953)
!3957 = !DILocation(line: 3205, column: 15, scope: !3953)
!3958 = !DILocation(line: 3206, column: 20, scope: !3953)
!3959 = !DILocation(line: 3207, column: 11, scope: !3953)
!3960 = !DILocation(line: 3211, column: 15, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 3211, column: 15)
!3962 = !DILocation(line: 3211, column: 15, scope: !3953)
!3963 = !DILocalVariable(name: "need_lstat", scope: !3964, file: !3, line: 3213, type: !141)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 3212, column: 13)
!3965 = !DILocation(line: 3213, column: 20, scope: !3964)
!3966 = !DILocation(line: 3214, column: 27, scope: !3964)
!3967 = !DILocation(line: 3214, column: 39, scope: !3964)
!3968 = !DILocation(line: 3214, column: 42, scope: !3964)
!3969 = !DILocation(line: 3214, column: 21, scope: !3964)
!3970 = !DILocation(line: 3214, column: 19, scope: !3964)
!3971 = !DILocation(line: 3215, column: 24, scope: !3964)
!3972 = !DILocation(line: 3217, column: 19, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 3217, column: 19)
!3974 = !DILocation(line: 3217, column: 31, scope: !3973)
!3975 = !DILocation(line: 3217, column: 19, scope: !3964)
!3976 = !DILocation(line: 3218, column: 17, scope: !3973)
!3977 = !DILocation(line: 3220, column: 29, scope: !3964)
!3978 = !DILocation(line: 3220, column: 33, scope: !3964)
!3979 = !DILocation(line: 3221, column: 31, scope: !3964)
!3980 = !DILocation(line: 3221, column: 37, scope: !3964)
!3981 = !DILocation(line: 3222, column: 33, scope: !3964)
!3982 = !{!3809, !2437, i64 48}
!3983 = !DILocation(line: 3222, column: 31, scope: !3964)
!3984 = !DILocation(line: 3220, column: 28, scope: !3964)
!3985 = !DILocation(line: 3220, column: 26, scope: !3964)
!3986 = !DILocation(line: 3223, column: 20, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 3223, column: 19)
!3988 = !DILocation(line: 3223, column: 19, scope: !3964)
!3989 = !DILocation(line: 3224, column: 17, scope: !3987)
!3990 = !DILocation(line: 3230, column: 13, scope: !3964)
!3991 = !DILocation(line: 3231, column: 11, scope: !3953)
!3992 = !DILocation(line: 3234, column: 24, scope: !3953)
!3993 = !DILocation(line: 3234, column: 36, scope: !3953)
!3994 = !DILocation(line: 3234, column: 39, scope: !3953)
!3995 = !DILocation(line: 3234, column: 17, scope: !3953)
!3996 = !DILocation(line: 3234, column: 15, scope: !3953)
!3997 = !DILocation(line: 3235, column: 20, scope: !3953)
!3998 = !DILocation(line: 3236, column: 11, scope: !3953)
!3999 = !DILocation(line: 3239, column: 11, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3239, column: 11)
!4001 = !DILocation(line: 3239, column: 15, scope: !4000)
!4002 = !DILocation(line: 3239, column: 11, scope: !3902)
!4003 = !DILocation(line: 3244, column: 25, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 3240, column: 9)
!4005 = !DILocation(line: 3245, column: 25, scope: !4004)
!4006 = !DILocation(line: 3245, column: 48, scope: !4004)
!4007 = !DILocation(line: 3244, column: 11, scope: !4004)
!4008 = !DILocation(line: 3246, column: 15, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3246, column: 15)
!4010 = !DILocation(line: 3246, column: 15, scope: !4004)
!4011 = !DILocation(line: 3247, column: 13, scope: !4009)
!4012 = !DILocation(line: 3249, column: 30, scope: !4004)
!4013 = !DILocation(line: 3249, column: 21, scope: !4004)
!4014 = !DILocation(line: 3249, column: 11, scope: !4004)
!4015 = !DILocation(line: 3249, column: 14, scope: !4004)
!4016 = !DILocation(line: 3249, column: 19, scope: !4004)
!4017 = !{!3809, !2443, i64 0}
!4018 = !DILocation(line: 3250, column: 21, scope: !4004)
!4019 = !DILocation(line: 3252, column: 11, scope: !4004)
!4020 = !DILocation(line: 3255, column: 7, scope: !3902)
!4021 = !DILocation(line: 3255, column: 10, scope: !3902)
!4022 = !DILocation(line: 3255, column: 18, scope: !3902)
!4023 = !{!3809, !2462, i64 184}
!4024 = !DILocation(line: 3258, column: 12, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3258, column: 11)
!4026 = !DILocation(line: 3258, column: 17, scope: !4025)
!4027 = !DILocation(line: 3258, column: 27, scope: !4025)
!4028 = !DILocation(line: 3258, column: 30, scope: !4025)
!4029 = !DILocation(line: 3259, column: 11, scope: !4025)
!4030 = !DILocation(line: 3259, column: 14, scope: !4025)
!4031 = !DILocation(line: 3259, column: 31, scope: !4025)
!4032 = !DILocation(line: 3259, column: 34, scope: !4025)
!4033 = !DILocation(line: 3258, column: 11, scope: !3902)
!4034 = !DILocation(line: 3260, column: 51, scope: !4025)
!4035 = !DILocation(line: 3260, column: 62, scope: !4025)
!4036 = !DILocation(line: 3260, column: 29, scope: !4025)
!4037 = !DILocation(line: 3260, column: 9, scope: !4025)
!4038 = !DILocation(line: 3260, column: 12, scope: !4025)
!4039 = !DILocation(line: 3260, column: 27, scope: !4025)
!4040 = !{!3809, !2462, i64 192}
!4041 = !DILocation(line: 3262, column: 11, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3262, column: 11)
!4043 = !DILocation(line: 3262, column: 18, scope: !4042)
!4044 = !DILocation(line: 3262, column: 33, scope: !4042)
!4045 = !DILocation(line: 3262, column: 36, scope: !4042)
!4046 = !DILocation(line: 3262, column: 11, scope: !3902)
!4047 = !DILocalVariable(name: "have_scontext", scope: !4048, file: !3, line: 3264, type: !141)
!4048 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 3263, column: 9)
!4049 = !DILocation(line: 3264, column: 16, scope: !4048)
!4050 = !DILocalVariable(name: "have_acl", scope: !4048, file: !3, line: 3265, type: !141)
!4051 = !DILocation(line: 3265, column: 16, scope: !4048)
!4052 = !DILocalVariable(name: "attr_len", scope: !4048, file: !3, line: 3266, type: !27)
!4053 = !DILocation(line: 3266, column: 15, scope: !4048)
!4054 = !DILocation(line: 3266, column: 44, scope: !4048)
!4055 = !DILocation(line: 3266, column: 55, scope: !4048)
!4056 = !DILocation(line: 3266, column: 58, scope: !4048)
!4057 = !DILocation(line: 3266, column: 26, scope: !4048)
!4058 = !DILocation(line: 3267, column: 18, scope: !4048)
!4059 = !DILocation(line: 3267, column: 27, scope: !4048)
!4060 = !DILocation(line: 3267, column: 15, scope: !4048)
!4061 = !DILocation(line: 3269, column: 15, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3269, column: 15)
!4063 = !DILocation(line: 3269, column: 19, scope: !4062)
!4064 = !DILocation(line: 3269, column: 15, scope: !4048)
!4065 = !DILocation(line: 3271, column: 19, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 3271, column: 19)
!4067 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 3270, column: 13)
!4068 = !DILocation(line: 3271, column: 19, scope: !4067)
!4069 = !DILocation(line: 3272, column: 35, scope: !4066)
!4070 = !{!3809, !2443, i64 176}
!4071 = !DILocation(line: 3272, column: 33, scope: !4066)
!4072 = !DILocation(line: 3272, column: 31, scope: !4066)
!4073 = !DILocation(line: 3272, column: 17, scope: !4066)
!4074 = !DILocation(line: 3274, column: 35, scope: !4066)
!4075 = !DILocation(line: 3274, column: 33, scope: !4066)
!4076 = !DILocation(line: 3274, column: 31, scope: !4066)
!4077 = !DILocation(line: 3275, column: 13, scope: !4067)
!4078 = !DILocation(line: 3278, column: 15, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 3277, column: 13)
!4080 = !DILocation(line: 3278, column: 18, scope: !4079)
!4081 = !DILocation(line: 3278, column: 27, scope: !4079)
!4082 = !DILocation(line: 3284, column: 31, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 3284, column: 19)
!4084 = !DILocation(line: 3284, column: 19, scope: !4083)
!4085 = !DILocation(line: 3284, column: 38, scope: !4083)
!4086 = !DILocation(line: 3284, column: 41, scope: !4083)
!4087 = !DILocation(line: 3284, column: 47, scope: !4083)
!4088 = !DILocation(line: 3284, column: 19, scope: !4079)
!4089 = !DILocation(line: 3285, column: 21, scope: !4083)
!4090 = !DILocation(line: 3285, column: 17, scope: !4083)
!4091 = !DILocation(line: 3288, column: 15, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3288, column: 15)
!4093 = !DILocation(line: 3288, column: 19, scope: !4092)
!4094 = !DILocation(line: 3288, column: 24, scope: !4092)
!4095 = !DILocation(line: 3288, column: 27, scope: !4092)
!4096 = !DILocation(line: 3288, column: 34, scope: !4092)
!4097 = !DILocation(line: 3288, column: 15, scope: !4048)
!4098 = !DILocalVariable(name: "n", scope: !4099, file: !3, line: 3290, type: !27)
!4099 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 3289, column: 13)
!4100 = !DILocation(line: 3290, column: 19, scope: !4099)
!4101 = !DILocation(line: 3290, column: 43, scope: !4099)
!4102 = !DILocation(line: 3290, column: 54, scope: !4099)
!4103 = !DILocation(line: 3290, column: 23, scope: !4099)
!4104 = !DILocation(line: 3291, column: 22, scope: !4099)
!4105 = !DILocation(line: 3291, column: 24, scope: !4099)
!4106 = !DILocation(line: 3291, column: 19, scope: !4099)
!4107 = !DILocation(line: 3292, column: 31, scope: !4099)
!4108 = !DILocation(line: 3292, column: 29, scope: !4099)
!4109 = !DILocation(line: 3292, column: 24, scope: !4099)
!4110 = !DILocation(line: 3293, column: 13, scope: !4099)
!4111 = !DILocation(line: 3295, column: 27, scope: !4048)
!4112 = !DILocation(line: 3295, column: 41, scope: !4048)
!4113 = !DILocation(line: 3295, column: 45, scope: !4048)
!4114 = !DILocation(line: 3295, column: 26, scope: !4048)
!4115 = !DILocation(line: 3297, column: 29, scope: !4048)
!4116 = !DILocation(line: 3297, column: 43, scope: !4048)
!4117 = !DILocation(line: 3297, column: 47, scope: !4048)
!4118 = !DILocation(line: 3297, column: 46, scope: !4048)
!4119 = !DILocation(line: 0, scope: !4048)
!4120 = !DILocation(line: 3295, column: 11, scope: !4048)
!4121 = !DILocation(line: 3295, column: 14, scope: !4048)
!4122 = !DILocation(line: 3295, column: 23, scope: !4048)
!4123 = !{!3809, !2438, i64 188}
!4124 = !DILocation(line: 3300, column: 26, scope: !4048)
!4125 = !DILocation(line: 3300, column: 29, scope: !4048)
!4126 = !DILocation(line: 3300, column: 38, scope: !4048)
!4127 = !DILocation(line: 3300, column: 23, scope: !4048)
!4128 = !DILocation(line: 3302, column: 15, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 3302, column: 15)
!4130 = !DILocation(line: 3302, column: 15, scope: !4048)
!4131 = !DILocation(line: 3303, column: 23, scope: !4129)
!4132 = !DILocation(line: 3303, column: 36, scope: !4129)
!4133 = !DILocation(line: 3303, column: 13, scope: !4129)
!4134 = !DILocation(line: 3304, column: 9, scope: !4048)
!4135 = !DILocation(line: 3306, column: 11, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3306, column: 11)
!4137 = !DILocation(line: 3307, column: 11, scope: !4136)
!4138 = !DILocation(line: 3307, column: 15, scope: !4136)
!4139 = !DILocation(line: 3307, column: 22, scope: !4136)
!4140 = !DILocation(line: 3307, column: 37, scope: !4136)
!4141 = !DILocation(line: 3307, column: 40, scope: !4136)
!4142 = !DILocation(line: 3306, column: 11, scope: !3902)
!4143 = !DILocalVariable(name: "linkstats", scope: !4144, file: !3, line: 3309, type: !191)
!4144 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 3308, column: 9)
!4145 = !DILocation(line: 3309, column: 23, scope: !4144)
!4146 = !DILocation(line: 3311, column: 26, scope: !4144)
!4147 = !DILocation(line: 3311, column: 37, scope: !4144)
!4148 = !DILocation(line: 3311, column: 40, scope: !4144)
!4149 = !DILocation(line: 3311, column: 11, scope: !4144)
!4150 = !DILocalVariable(name: "linkname", scope: !4144, file: !3, line: 3312, type: !143)
!4151 = !DILocation(line: 3312, column: 17, scope: !4144)
!4152 = !DILocation(line: 3312, column: 44, scope: !4144)
!4153 = !DILocation(line: 3312, column: 55, scope: !4144)
!4154 = !DILocation(line: 3312, column: 58, scope: !4144)
!4155 = !{!3809, !2443, i64 8}
!4156 = !DILocation(line: 3312, column: 28, scope: !4144)
!4157 = !DILocation(line: 3316, column: 15, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 3316, column: 15)
!4159 = !DILocation(line: 3316, column: 24, scope: !4158)
!4160 = !DILocation(line: 3316, column: 27, scope: !4158)
!4161 = !DILocation(line: 3316, column: 30, scope: !4158)
!4162 = !DILocation(line: 3316, column: 37, scope: !4158)
!4163 = !DILocation(line: 3316, column: 42, scope: !4158)
!4164 = !DILocation(line: 3316, column: 60, scope: !4158)
!4165 = !DILocation(line: 3316, column: 63, scope: !4158)
!4166 = !DILocation(line: 3316, column: 45, scope: !4158)
!4167 = !DILocation(line: 3316, column: 15, scope: !4144)
!4168 = !DILocation(line: 3317, column: 13, scope: !4158)
!4169 = !DILocation(line: 3317, column: 16, scope: !4158)
!4170 = !DILocation(line: 3317, column: 23, scope: !4158)
!4171 = !DILocation(line: 3321, column: 15, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 3321, column: 15)
!4173 = !DILocation(line: 3322, column: 15, scope: !4172)
!4174 = !DILocation(line: 3322, column: 32, scope: !4172)
!4175 = !DILocation(line: 3322, column: 29, scope: !4172)
!4176 = !DILocation(line: 3322, column: 48, scope: !4172)
!4177 = !DILocation(line: 3322, column: 51, scope: !4172)
!4178 = !DILocation(line: 3323, column: 15, scope: !4172)
!4179 = !DILocation(line: 3323, column: 24, scope: !4172)
!4180 = !DILocation(line: 3323, column: 18, scope: !4172)
!4181 = !DILocation(line: 3323, column: 46, scope: !4172)
!4182 = !DILocation(line: 3321, column: 15, scope: !4144)
!4183 = !DILocation(line: 3325, column: 15, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 3324, column: 13)
!4185 = !DILocation(line: 3325, column: 18, scope: !4184)
!4186 = !DILocation(line: 3325, column: 25, scope: !4184)
!4187 = !{!3809, !2462, i64 185}
!4188 = !DILocation(line: 3326, column: 39, scope: !4184)
!4189 = !{!3810, !2437, i64 24}
!4190 = !DILocation(line: 3326, column: 15, scope: !4184)
!4191 = !DILocation(line: 3326, column: 18, scope: !4184)
!4192 = !DILocation(line: 3326, column: 27, scope: !4184)
!4193 = !{!3809, !2437, i64 172}
!4194 = !DILocation(line: 3327, column: 13, scope: !4184)
!4195 = !DILocation(line: 3328, column: 17, scope: !4144)
!4196 = !DILocation(line: 3328, column: 11, scope: !4144)
!4197 = !DILocation(line: 3329, column: 9, scope: !4144)
!4198 = !DILocation(line: 3331, column: 11, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3331, column: 11)
!4200 = !DILocation(line: 3331, column: 11, scope: !3902)
!4201 = !DILocation(line: 3332, column: 9, scope: !4199)
!4202 = !DILocation(line: 3332, column: 12, scope: !4199)
!4203 = !DILocation(line: 3332, column: 21, scope: !4199)
!4204 = !DILocation(line: 3333, column: 16, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 3333, column: 16)
!4206 = !DILocation(line: 3333, column: 16, scope: !4199)
!4207 = !DILocation(line: 3335, column: 15, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 3335, column: 15)
!4209 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 3334, column: 9)
!4210 = !DILocation(line: 3335, column: 32, scope: !4208)
!4211 = !DILocation(line: 3335, column: 36, scope: !4208)
!4212 = !DILocation(line: 3335, column: 15, scope: !4209)
!4213 = !DILocation(line: 3336, column: 13, scope: !4208)
!4214 = !DILocation(line: 3336, column: 16, scope: !4208)
!4215 = !DILocation(line: 3336, column: 25, scope: !4208)
!4216 = !DILocation(line: 3338, column: 13, scope: !4208)
!4217 = !DILocation(line: 3338, column: 16, scope: !4208)
!4218 = !DILocation(line: 3338, column: 25, scope: !4208)
!4219 = !DILocation(line: 3339, column: 9, scope: !4209)
!4220 = !DILocation(line: 3341, column: 9, scope: !4205)
!4221 = !DILocation(line: 3341, column: 12, scope: !4205)
!4222 = !DILocation(line: 3341, column: 21, scope: !4205)
!4223 = !DILocation(line: 3343, column: 16, scope: !3902)
!4224 = !{!3809, !2467, i64 88}
!4225 = !DILocation(line: 3343, column: 14, scope: !3902)
!4226 = !DILocation(line: 3344, column: 11, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3344, column: 11)
!4228 = !DILocation(line: 3344, column: 18, scope: !4227)
!4229 = !DILocation(line: 3344, column: 33, scope: !4227)
!4230 = !DILocation(line: 3344, column: 36, scope: !4227)
!4231 = !DILocation(line: 3344, column: 11, scope: !3902)
!4232 = !DILocalVariable(name: "buf", scope: !4233, file: !3, line: 3346, type: !622)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 3345, column: 9)
!4234 = !DILocation(line: 3346, column: 16, scope: !4233)
!4235 = !DILocalVariable(name: "len", scope: !4233, file: !3, line: 3347, type: !27)
!4236 = !DILocation(line: 3347, column: 15, scope: !4233)
!4237 = !DILocation(line: 3347, column: 47, scope: !4233)
!4238 = !DILocation(line: 3347, column: 55, scope: !4233)
!4239 = !DILocation(line: 3347, column: 60, scope: !4233)
!4240 = !DILocation(line: 3348, column: 62, scope: !4233)
!4241 = !DILocation(line: 3347, column: 31, scope: !4233)
!4242 = !DILocation(line: 3347, column: 21, scope: !4233)
!4243 = !DILocation(line: 3350, column: 15, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 3350, column: 15)
!4245 = !DILocation(line: 3350, column: 34, scope: !4244)
!4246 = !DILocation(line: 3350, column: 32, scope: !4244)
!4247 = !DILocation(line: 3350, column: 15, scope: !4233)
!4248 = !DILocation(line: 3351, column: 32, scope: !4244)
!4249 = !DILocation(line: 3351, column: 30, scope: !4244)
!4250 = !DILocation(line: 3351, column: 13, scope: !4244)
!4251 = !DILocation(line: 3352, column: 9, scope: !4233)
!4252 = !DILocation(line: 3354, column: 11, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3354, column: 11)
!4254 = !DILocation(line: 3354, column: 18, scope: !4253)
!4255 = !DILocation(line: 3354, column: 11, scope: !3902)
!4256 = !DILocation(line: 3356, column: 15, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3356, column: 15)
!4258 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 3355, column: 9)
!4259 = !DILocation(line: 3356, column: 15, scope: !4258)
!4260 = !DILocalVariable(name: "len", scope: !4261, file: !3, line: 3358, type: !27)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 3357, column: 13)
!4262 = !DILocation(line: 3358, column: 19, scope: !4261)
!4263 = !DILocation(line: 3358, column: 44, scope: !4261)
!4264 = !DILocation(line: 3358, column: 47, scope: !4261)
!4265 = !DILocation(line: 3358, column: 52, scope: !4261)
!4266 = !{!3809, !2437, i64 52}
!4267 = !DILocation(line: 3358, column: 25, scope: !4261)
!4268 = !DILocation(line: 3359, column: 19, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 3359, column: 19)
!4270 = !DILocation(line: 3359, column: 33, scope: !4269)
!4271 = !DILocation(line: 3359, column: 31, scope: !4269)
!4272 = !DILocation(line: 3359, column: 19, scope: !4261)
!4273 = !DILocation(line: 3360, column: 31, scope: !4269)
!4274 = !DILocation(line: 3360, column: 29, scope: !4269)
!4275 = !DILocation(line: 3360, column: 17, scope: !4269)
!4276 = !DILocation(line: 3361, column: 13, scope: !4261)
!4277 = !DILocation(line: 3363, column: 15, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3363, column: 15)
!4279 = !DILocation(line: 3363, column: 15, scope: !4258)
!4280 = !DILocalVariable(name: "len", scope: !4281, file: !3, line: 3365, type: !27)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 3364, column: 13)
!4282 = !DILocation(line: 3365, column: 19, scope: !4281)
!4283 = !DILocation(line: 3365, column: 45, scope: !4281)
!4284 = !DILocation(line: 3365, column: 48, scope: !4281)
!4285 = !DILocation(line: 3365, column: 53, scope: !4281)
!4286 = !{!3809, !2437, i64 56}
!4287 = !DILocation(line: 3365, column: 25, scope: !4281)
!4288 = !DILocation(line: 3366, column: 19, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 3366, column: 19)
!4290 = !DILocation(line: 3366, column: 33, scope: !4289)
!4291 = !DILocation(line: 3366, column: 31, scope: !4289)
!4292 = !DILocation(line: 3366, column: 19, scope: !4281)
!4293 = !DILocation(line: 3367, column: 31, scope: !4289)
!4294 = !DILocation(line: 3367, column: 29, scope: !4289)
!4295 = !DILocation(line: 3367, column: 17, scope: !4289)
!4296 = !DILocation(line: 3368, column: 13, scope: !4281)
!4297 = !DILocation(line: 3370, column: 15, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 3370, column: 15)
!4299 = !DILocation(line: 3370, column: 15, scope: !4258)
!4300 = !DILocalVariable(name: "len", scope: !4301, file: !3, line: 3372, type: !27)
!4301 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 3371, column: 13)
!4302 = !DILocation(line: 3372, column: 19, scope: !4301)
!4303 = !DILocation(line: 3372, column: 44, scope: !4301)
!4304 = !DILocation(line: 3372, column: 47, scope: !4301)
!4305 = !DILocation(line: 3372, column: 52, scope: !4301)
!4306 = !DILocation(line: 3372, column: 25, scope: !4301)
!4307 = !DILocation(line: 3373, column: 19, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 3373, column: 19)
!4309 = !DILocation(line: 3373, column: 34, scope: !4308)
!4310 = !DILocation(line: 3373, column: 32, scope: !4308)
!4311 = !DILocation(line: 3373, column: 19, scope: !4301)
!4312 = !DILocation(line: 3374, column: 32, scope: !4308)
!4313 = !DILocation(line: 3374, column: 30, scope: !4308)
!4314 = !DILocation(line: 3374, column: 17, scope: !4308)
!4315 = !DILocation(line: 3375, column: 13, scope: !4301)
!4316 = !DILocation(line: 3376, column: 9, scope: !4258)
!4317 = !DILocation(line: 3378, column: 11, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3378, column: 11)
!4319 = !DILocation(line: 3378, column: 11, scope: !3902)
!4320 = !DILocalVariable(name: "len", scope: !4321, file: !3, line: 3380, type: !27)
!4321 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 3379, column: 9)
!4322 = !DILocation(line: 3380, column: 15, scope: !4321)
!4323 = !DILocation(line: 3380, column: 29, scope: !4321)
!4324 = !DILocation(line: 3380, column: 32, scope: !4321)
!4325 = !DILocation(line: 3380, column: 21, scope: !4321)
!4326 = !DILocation(line: 3381, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 3381, column: 15)
!4328 = !DILocation(line: 3381, column: 32, scope: !4327)
!4329 = !DILocation(line: 3381, column: 30, scope: !4327)
!4330 = !DILocation(line: 3381, column: 15, scope: !4321)
!4331 = !DILocation(line: 3382, column: 30, scope: !4327)
!4332 = !DILocation(line: 3382, column: 28, scope: !4327)
!4333 = !DILocation(line: 3382, column: 13, scope: !4327)
!4334 = !DILocation(line: 3383, column: 9, scope: !4321)
!4335 = !DILocation(line: 3385, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3385, column: 11)
!4337 = !DILocation(line: 3385, column: 18, scope: !4336)
!4338 = !DILocation(line: 3385, column: 11, scope: !3902)
!4339 = !DILocalVariable(name: "b", scope: !4340, file: !3, line: 3387, type: !669)
!4340 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3386, column: 9)
!4341 = !DILocation(line: 3387, column: 16, scope: !4340)
!4342 = !DILocalVariable(name: "b_len", scope: !4340, file: !3, line: 3388, type: !27)
!4343 = !DILocation(line: 3388, column: 15, scope: !4340)
!4344 = !DILocation(line: 3388, column: 42, scope: !4340)
!4345 = !DILocation(line: 3388, column: 45, scope: !4340)
!4346 = !DILocation(line: 3388, column: 50, scope: !4340)
!4347 = !{!3809, !2467, i64 40}
!4348 = !DILocation(line: 3388, column: 60, scope: !4340)
!4349 = !DILocation(line: 3388, column: 31, scope: !4340)
!4350 = !DILocation(line: 3388, column: 23, scope: !4340)
!4351 = !DILocation(line: 3389, column: 15, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3389, column: 15)
!4353 = !DILocation(line: 3389, column: 29, scope: !4352)
!4354 = !DILocation(line: 3389, column: 27, scope: !4352)
!4355 = !DILocation(line: 3389, column: 15, scope: !4340)
!4356 = !DILocation(line: 3390, column: 27, scope: !4352)
!4357 = !DILocation(line: 3390, column: 25, scope: !4352)
!4358 = !DILocation(line: 3390, column: 13, scope: !4352)
!4359 = !DILocation(line: 3392, column: 15, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 3392, column: 15)
!4361 = !DILocation(line: 3392, column: 41, scope: !4360)
!4362 = !DILocation(line: 3392, column: 44, scope: !4360)
!4363 = !DILocation(line: 3392, column: 15, scope: !4340)
!4364 = !DILocalVariable(name: "buf", scope: !4365, file: !3, line: 3394, type: !669)
!4365 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 3393, column: 13)
!4366 = !DILocation(line: 3394, column: 20, scope: !4365)
!4367 = !DILocalVariable(name: "len", scope: !4365, file: !3, line: 3395, type: !27)
!4368 = !DILocation(line: 3395, column: 19, scope: !4365)
!4369 = !DILocation(line: 3395, column: 44, scope: !4365)
!4370 = !{!3809, !2467, i64 64}
!4371 = !DILocation(line: 3395, column: 69, scope: !4365)
!4372 = !DILocation(line: 3395, column: 33, scope: !4365)
!4373 = !DILocation(line: 3395, column: 25, scope: !4365)
!4374 = !DILocation(line: 3396, column: 19, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3396, column: 19)
!4376 = !DILocation(line: 3396, column: 47, scope: !4375)
!4377 = !DILocation(line: 3396, column: 45, scope: !4375)
!4378 = !DILocation(line: 3396, column: 19, scope: !4365)
!4379 = !DILocation(line: 3397, column: 45, scope: !4375)
!4380 = !DILocation(line: 3397, column: 43, scope: !4375)
!4381 = !DILocation(line: 3397, column: 17, scope: !4375)
!4382 = !DILocation(line: 3398, column: 40, scope: !4365)
!4383 = !DILocation(line: 3398, column: 65, scope: !4365)
!4384 = !DILocation(line: 3398, column: 29, scope: !4365)
!4385 = !DILocation(line: 3398, column: 21, scope: !4365)
!4386 = !DILocation(line: 3398, column: 19, scope: !4365)
!4387 = !DILocation(line: 3399, column: 19, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3399, column: 19)
!4389 = !DILocation(line: 3399, column: 47, scope: !4388)
!4390 = !DILocation(line: 3399, column: 45, scope: !4388)
!4391 = !DILocation(line: 3399, column: 19, scope: !4365)
!4392 = !DILocation(line: 3400, column: 45, scope: !4388)
!4393 = !DILocation(line: 3400, column: 43, scope: !4388)
!4394 = !DILocation(line: 3400, column: 17, scope: !4388)
!4395 = !DILocation(line: 3401, column: 21, scope: !4365)
!4396 = !DILocation(line: 3401, column: 47, scope: !4365)
!4397 = !DILocation(line: 3401, column: 53, scope: !4365)
!4398 = !DILocation(line: 3401, column: 51, scope: !4365)
!4399 = !DILocation(line: 3401, column: 19, scope: !4365)
!4400 = !DILocation(line: 3402, column: 19, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 3402, column: 19)
!4402 = !DILocation(line: 3402, column: 37, scope: !4401)
!4403 = !DILocation(line: 3402, column: 35, scope: !4401)
!4404 = !DILocation(line: 3402, column: 19, scope: !4365)
!4405 = !DILocation(line: 3403, column: 35, scope: !4401)
!4406 = !DILocation(line: 3403, column: 33, scope: !4401)
!4407 = !DILocation(line: 3403, column: 17, scope: !4401)
!4408 = !DILocation(line: 3404, column: 13, scope: !4365)
!4409 = !DILocalVariable(name: "buf", scope: !4410, file: !3, line: 3407, type: !622)
!4410 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 3406, column: 13)
!4411 = !DILocation(line: 3407, column: 20, scope: !4410)
!4412 = !DILocalVariable(name: "size", scope: !4410, file: !3, line: 3408, type: !168)
!4413 = !DILocation(line: 3408, column: 25, scope: !4410)
!4414 = !DILocation(line: 3408, column: 52, scope: !4410)
!4415 = !DILocation(line: 3408, column: 55, scope: !4410)
!4416 = !DILocation(line: 3408, column: 60, scope: !4410)
!4417 = !{!3809, !2467, i64 72}
!4418 = !DILocation(line: 3408, column: 32, scope: !4410)
!4419 = !DILocalVariable(name: "len", scope: !4410, file: !3, line: 3409, type: !27)
!4420 = !DILocation(line: 3409, column: 19, scope: !4410)
!4421 = !DILocation(line: 3409, column: 51, scope: !4410)
!4422 = !DILocation(line: 3409, column: 57, scope: !4410)
!4423 = !DILocation(line: 3410, column: 51, scope: !4410)
!4424 = !DILocation(line: 3411, column: 54, scope: !4410)
!4425 = !DILocation(line: 3409, column: 35, scope: !4410)
!4426 = !DILocation(line: 3409, column: 25, scope: !4410)
!4427 = !DILocation(line: 3413, column: 19, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 3413, column: 19)
!4429 = !DILocation(line: 3413, column: 37, scope: !4428)
!4430 = !DILocation(line: 3413, column: 35, scope: !4428)
!4431 = !DILocation(line: 3413, column: 19, scope: !4410)
!4432 = !DILocation(line: 3414, column: 35, scope: !4428)
!4433 = !DILocation(line: 3414, column: 33, scope: !4428)
!4434 = !DILocation(line: 3414, column: 17, scope: !4428)
!4435 = !DILocation(line: 3416, column: 9, scope: !4340)
!4436 = !DILocation(line: 3417, column: 5, scope: !3902)
!4437 = !DILocation(line: 3419, column: 7, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3419, column: 7)
!4439 = !DILocation(line: 3419, column: 7, scope: !3767)
!4440 = !DILocalVariable(name: "buf", scope: !4441, file: !3, line: 3421, type: !669)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 3420, column: 5)
!4442 = !DILocation(line: 3421, column: 12, scope: !4441)
!4443 = !DILocalVariable(name: "len", scope: !4441, file: !3, line: 3422, type: !27)
!4444 = !DILocation(line: 3422, column: 11, scope: !4441)
!4445 = !DILocation(line: 3422, column: 36, scope: !4441)
!4446 = !DILocation(line: 3422, column: 39, scope: !4441)
!4447 = !DILocation(line: 3422, column: 44, scope: !4441)
!4448 = !DILocation(line: 3422, column: 52, scope: !4441)
!4449 = !DILocation(line: 3422, column: 25, scope: !4441)
!4450 = !DILocation(line: 3422, column: 17, scope: !4441)
!4451 = !DILocation(line: 3423, column: 11, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 3423, column: 11)
!4453 = !DILocation(line: 3423, column: 32, scope: !4452)
!4454 = !DILocation(line: 3423, column: 30, scope: !4452)
!4455 = !DILocation(line: 3423, column: 11, scope: !4441)
!4456 = !DILocation(line: 3424, column: 30, scope: !4452)
!4457 = !DILocation(line: 3424, column: 28, scope: !4452)
!4458 = !DILocation(line: 3424, column: 9, scope: !4452)
!4459 = !DILocation(line: 3425, column: 5, scope: !4441)
!4460 = !DILocation(line: 3427, column: 22, scope: !3767)
!4461 = !DILocation(line: 3427, column: 13, scope: !3767)
!4462 = !DILocation(line: 3427, column: 3, scope: !3767)
!4463 = !DILocation(line: 3427, column: 6, scope: !3767)
!4464 = !DILocation(line: 3427, column: 11, scope: !3767)
!4465 = !DILocation(line: 3428, column: 13, scope: !3767)
!4466 = !DILocation(line: 3430, column: 10, scope: !3767)
!4467 = !DILocation(line: 3430, column: 3, scope: !3767)
!4468 = !DILocation(line: 3431, column: 1, scope: !3767)
!4469 = distinct !DISubprogram(name: "queue_directory", scope: !3, file: !3, line: 2704, type: !607, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4470 = !DILocalVariable(name: "name", arg: 1, scope: !4469, file: !3, line: 2704, type: !146)
!4471 = !DILocation(line: 2704, column: 30, scope: !4469)
!4472 = !DILocalVariable(name: "realname", arg: 2, scope: !4469, file: !3, line: 2704, type: !146)
!4473 = !DILocation(line: 2704, column: 48, scope: !4469)
!4474 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !4469, file: !3, line: 2704, type: !141)
!4475 = !DILocation(line: 2704, column: 63, scope: !4469)
!4476 = !DILocalVariable(name: "new", scope: !4469, file: !3, line: 2706, type: !237)
!4477 = !DILocation(line: 2706, column: 19, scope: !4469)
!4478 = !DILocation(line: 2706, column: 25, scope: !4469)
!4479 = !DILocation(line: 2707, column: 19, scope: !4469)
!4480 = !DILocation(line: 2707, column: 39, scope: !4469)
!4481 = !DILocation(line: 2707, column: 30, scope: !4469)
!4482 = !DILocation(line: 2707, column: 3, scope: !4469)
!4483 = !DILocation(line: 2707, column: 8, scope: !4469)
!4484 = !DILocation(line: 2707, column: 17, scope: !4469)
!4485 = !DILocation(line: 2708, column: 15, scope: !4469)
!4486 = !DILocation(line: 2708, column: 31, scope: !4469)
!4487 = !DILocation(line: 2708, column: 22, scope: !4469)
!4488 = !DILocation(line: 2708, column: 3, scope: !4469)
!4489 = !DILocation(line: 2708, column: 8, scope: !4469)
!4490 = !DILocation(line: 2708, column: 13, scope: !4469)
!4491 = !DILocation(line: 2709, column: 27, scope: !4469)
!4492 = !DILocation(line: 2709, column: 3, scope: !4469)
!4493 = !DILocation(line: 2709, column: 8, scope: !4469)
!4494 = !DILocation(line: 2709, column: 25, scope: !4469)
!4495 = !DILocation(line: 2710, column: 15, scope: !4469)
!4496 = !DILocation(line: 2710, column: 3, scope: !4469)
!4497 = !DILocation(line: 2710, column: 8, scope: !4469)
!4498 = !DILocation(line: 2710, column: 13, scope: !4469)
!4499 = !DILocation(line: 2711, column: 18, scope: !4469)
!4500 = !DILocation(line: 2711, column: 16, scope: !4469)
!4501 = !DILocation(line: 2712, column: 1, scope: !4469)
!4502 = distinct !DISubprogram(name: "sort_files", scope: !3, file: !3, line: 3792, type: !341, scopeLine: 3793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4503 = !DILocalVariable(name: "use_strcmp", scope: !4502, file: !3, line: 3794, type: !141)
!4504 = !DILocation(line: 3794, column: 8, scope: !4502)
!4505 = !DILocation(line: 3796, column: 7, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3796, column: 7)
!4507 = !DILocation(line: 3796, column: 27, scope: !4506)
!4508 = !DILocation(line: 3796, column: 40, scope: !4506)
!4509 = !DILocation(line: 3796, column: 51, scope: !4506)
!4510 = !DILocation(line: 3796, column: 38, scope: !4506)
!4511 = !DILocation(line: 3796, column: 25, scope: !4506)
!4512 = !DILocation(line: 3796, column: 7, scope: !4502)
!4513 = !DILocation(line: 3798, column: 13, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 3797, column: 5)
!4515 = !DILocation(line: 3798, column: 7, scope: !4514)
!4516 = !DILocation(line: 3799, column: 31, scope: !4514)
!4517 = !DILocation(line: 3799, column: 21, scope: !4514)
!4518 = !DILocation(line: 3799, column: 19, scope: !4514)
!4519 = !DILocation(line: 3800, column: 31, scope: !4514)
!4520 = !DILocation(line: 3800, column: 29, scope: !4514)
!4521 = !DILocation(line: 3800, column: 25, scope: !4514)
!4522 = !DILocation(line: 3801, column: 5, scope: !4514)
!4523 = !DILocation(line: 3803, column: 3, scope: !4502)
!4524 = !DILocation(line: 3805, column: 7, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3805, column: 7)
!4526 = !DILocation(line: 3805, column: 17, scope: !4525)
!4527 = !DILocation(line: 3805, column: 7, scope: !4502)
!4528 = !DILocation(line: 3806, column: 5, scope: !4525)
!4529 = !DILocation(line: 3813, column: 9, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 3813, column: 7)
!4531 = !DILocation(line: 3813, column: 7, scope: !4502)
!4532 = !DILocation(line: 3814, column: 16, scope: !4530)
!4533 = !DILocation(line: 3814, column: 5, scope: !4530)
!4534 = !DILocation(line: 3817, column: 18, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 3816, column: 5)
!4536 = !DILocation(line: 3818, column: 7, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 3818, column: 7)
!4538 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 3818, column: 7)
!4539 = !DILocation(line: 3818, column: 7, scope: !4538)
!4540 = !DILocation(line: 3819, column: 7, scope: !4535)
!4541 = !DILocation(line: 3823, column: 27, scope: !4502)
!4542 = !DILocation(line: 3823, column: 40, scope: !4502)
!4543 = !DILocation(line: 3824, column: 26, scope: !4502)
!4544 = !DILocation(line: 3824, column: 39, scope: !4502)
!4545 = !DILocation(line: 3824, column: 49, scope: !4502)
!4546 = !DILocation(line: 3824, column: 64, scope: !4502)
!4547 = !DILocation(line: 3824, column: 36, scope: !4502)
!4548 = !DILocation(line: 3824, column: 11, scope: !4502)
!4549 = !DILocation(line: 3825, column: 26, scope: !4502)
!4550 = !DILocation(line: 3825, column: 38, scope: !4502)
!4551 = !DILocation(line: 3826, column: 26, scope: !4502)
!4552 = !DILocation(line: 3823, column: 3, scope: !4502)
!4553 = !DILocation(line: 3827, column: 1, scope: !4502)
!4554 = distinct !DISubprogram(name: "extract_dirs_from_files", scope: !3, file: !3, line: 3512, type: !700, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4555 = !DILocalVariable(name: "dirname", arg: 1, scope: !4554, file: !3, line: 3512, type: !146)
!4556 = !DILocation(line: 3512, column: 38, scope: !4554)
!4557 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !4554, file: !3, line: 3512, type: !141)
!4558 = !DILocation(line: 3512, column: 52, scope: !4554)
!4559 = !DILocalVariable(name: "i", scope: !4554, file: !3, line: 3514, type: !149)
!4560 = !DILocation(line: 3514, column: 10, scope: !4554)
!4561 = !DILocalVariable(name: "j", scope: !4554, file: !3, line: 3515, type: !149)
!4562 = !DILocation(line: 3515, column: 10, scope: !4554)
!4563 = !DILocalVariable(name: "ignore_dot_and_dot_dot", scope: !4554, file: !3, line: 3516, type: !141)
!4564 = !DILocation(line: 3516, column: 8, scope: !4554)
!4565 = !DILocation(line: 3516, column: 34, scope: !4554)
!4566 = !DILocation(line: 3516, column: 42, scope: !4554)
!4567 = !DILocation(line: 3518, column: 7, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3518, column: 7)
!4569 = !DILocation(line: 3518, column: 15, scope: !4568)
!4570 = !DILocation(line: 3518, column: 18, scope: !4568)
!4571 = !DILocation(line: 3518, column: 7, scope: !4554)
!4572 = !DILocation(line: 3523, column: 30, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 3519, column: 5)
!4574 = !DILocation(line: 3523, column: 7, scope: !4573)
!4575 = !DILocation(line: 3524, column: 5, scope: !4573)
!4576 = !DILocation(line: 3528, column: 12, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3528, column: 3)
!4578 = !DILocation(line: 3528, column: 10, scope: !4577)
!4579 = !DILocation(line: 3528, column: 8, scope: !4577)
!4580 = !DILocation(line: 3528, column: 25, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 3528, column: 3)
!4582 = !DILocation(line: 3528, column: 28, scope: !4581)
!4583 = !DILocation(line: 3528, column: 3, scope: !4577)
!4584 = !DILocalVariable(name: "f", scope: !4585, file: !3, line: 3530, type: !252)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 3529, column: 5)
!4586 = !DILocation(line: 3530, column: 24, scope: !4585)
!4587 = !DILocation(line: 3530, column: 28, scope: !4585)
!4588 = !DILocation(line: 3530, column: 40, scope: !4585)
!4589 = !DILocation(line: 3532, column: 25, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 3532, column: 11)
!4591 = !DILocation(line: 3532, column: 11, scope: !4590)
!4592 = !DILocation(line: 3533, column: 11, scope: !4590)
!4593 = !DILocation(line: 3533, column: 17, scope: !4590)
!4594 = !DILocation(line: 3534, column: 15, scope: !4590)
!4595 = !DILocation(line: 3534, column: 47, scope: !4590)
!4596 = !DILocation(line: 3534, column: 50, scope: !4590)
!4597 = !DILocation(line: 3534, column: 20, scope: !4590)
!4598 = !DILocation(line: 3532, column: 11, scope: !4585)
!4599 = !DILocation(line: 3536, column: 16, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3536, column: 15)
!4601 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 3535, column: 9)
!4602 = !DILocation(line: 3536, column: 24, scope: !4600)
!4603 = !DILocation(line: 3536, column: 27, scope: !4600)
!4604 = !DILocation(line: 3536, column: 30, scope: !4600)
!4605 = !DILocation(line: 3536, column: 38, scope: !4600)
!4606 = !DILocation(line: 3536, column: 15, scope: !4601)
!4607 = !DILocation(line: 3537, column: 30, scope: !4600)
!4608 = !DILocation(line: 3537, column: 33, scope: !4600)
!4609 = !DILocation(line: 3537, column: 39, scope: !4600)
!4610 = !DILocation(line: 3537, column: 42, scope: !4600)
!4611 = !DILocation(line: 3537, column: 52, scope: !4600)
!4612 = !DILocation(line: 3537, column: 13, scope: !4600)
!4613 = !DILocalVariable(name: "name", scope: !4614, file: !3, line: 3540, type: !143)
!4614 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 3539, column: 13)
!4615 = !DILocation(line: 3540, column: 21, scope: !4614)
!4616 = !DILocation(line: 3540, column: 46, scope: !4614)
!4617 = !DILocation(line: 3540, column: 55, scope: !4614)
!4618 = !DILocation(line: 3540, column: 58, scope: !4614)
!4619 = !DILocation(line: 3540, column: 28, scope: !4614)
!4620 = !DILocation(line: 3541, column: 32, scope: !4614)
!4621 = !DILocation(line: 3541, column: 38, scope: !4614)
!4622 = !DILocation(line: 3541, column: 41, scope: !4614)
!4623 = !DILocation(line: 3541, column: 51, scope: !4614)
!4624 = !DILocation(line: 3541, column: 15, scope: !4614)
!4625 = !DILocation(line: 3542, column: 21, scope: !4614)
!4626 = !DILocation(line: 3542, column: 15, scope: !4614)
!4627 = !DILocation(line: 3544, column: 15, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 3544, column: 15)
!4629 = !DILocation(line: 3544, column: 18, scope: !4628)
!4630 = !DILocation(line: 3544, column: 27, scope: !4628)
!4631 = !DILocation(line: 3544, column: 15, scope: !4601)
!4632 = !DILocation(line: 3545, column: 23, scope: !4628)
!4633 = !DILocation(line: 3545, column: 13, scope: !4628)
!4634 = !DILocation(line: 3546, column: 9, scope: !4601)
!4635 = !DILocation(line: 3528, column: 3, scope: !4581)
!4636 = distinct !{!4636, !4583, !4637}
!4637 = !DILocation(line: 3547, column: 5, scope: !4577)
!4638 = !DILocation(line: 3552, column: 10, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3552, column: 3)
!4640 = !DILocation(line: 3552, column: 17, scope: !4639)
!4641 = !DILocation(line: 3552, column: 8, scope: !4639)
!4642 = !DILocation(line: 3552, column: 22, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 3552, column: 3)
!4644 = !DILocation(line: 3552, column: 26, scope: !4643)
!4645 = !DILocation(line: 3552, column: 24, scope: !4643)
!4646 = !DILocation(line: 3552, column: 3, scope: !4639)
!4647 = !DILocalVariable(name: "f", scope: !4648, file: !3, line: 3554, type: !252)
!4648 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 3553, column: 5)
!4649 = !DILocation(line: 3554, column: 24, scope: !4648)
!4650 = !DILocation(line: 3554, column: 28, scope: !4648)
!4651 = !DILocation(line: 3554, column: 40, scope: !4648)
!4652 = !DILocation(line: 3555, column: 24, scope: !4648)
!4653 = !DILocation(line: 3555, column: 7, scope: !4648)
!4654 = !DILocation(line: 3555, column: 19, scope: !4648)
!4655 = !DILocation(line: 3555, column: 22, scope: !4648)
!4656 = !DILocation(line: 3556, column: 13, scope: !4648)
!4657 = !DILocation(line: 3556, column: 16, scope: !4648)
!4658 = !DILocation(line: 3556, column: 25, scope: !4648)
!4659 = !DILocation(line: 3556, column: 12, scope: !4648)
!4660 = !DILocation(line: 3556, column: 9, scope: !4648)
!4661 = !DILocation(line: 3557, column: 5, scope: !4648)
!4662 = !DILocation(line: 3552, column: 39, scope: !4643)
!4663 = !DILocation(line: 3552, column: 3, scope: !4643)
!4664 = distinct !{!4664, !4646, !4665}
!4665 = !DILocation(line: 3557, column: 5, scope: !4639)
!4666 = !DILocation(line: 3558, column: 16, scope: !4554)
!4667 = !DILocation(line: 3558, column: 14, scope: !4554)
!4668 = !DILocation(line: 3559, column: 1, scope: !4554)
!4669 = distinct !DISubprogram(name: "print_current_files", scope: !3, file: !3, line: 3832, type: !341, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4670 = !DILocalVariable(name: "i", scope: !4669, file: !3, line: 3834, type: !149)
!4671 = !DILocation(line: 3834, column: 10, scope: !4669)
!4672 = !DILocation(line: 3836, column: 11, scope: !4669)
!4673 = !DILocation(line: 3836, column: 3, scope: !4669)
!4674 = !DILocation(line: 3839, column: 14, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3839, column: 7)
!4676 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 3837, column: 5)
!4677 = !DILocation(line: 3839, column: 12, scope: !4675)
!4678 = !DILocation(line: 3839, column: 19, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 3839, column: 7)
!4680 = !DILocation(line: 3839, column: 23, scope: !4679)
!4681 = !DILocation(line: 3839, column: 21, scope: !4679)
!4682 = !DILocation(line: 3839, column: 7, scope: !4675)
!4683 = !DILocation(line: 3841, column: 39, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 3840, column: 9)
!4685 = !DILocation(line: 3841, column: 51, scope: !4684)
!4686 = !DILocation(line: 3841, column: 11, scope: !4684)
!4687 = !DILocation(line: 3842, column: 11, scope: !4684)
!4688 = !DILocation(line: 3843, column: 9, scope: !4684)
!4689 = !DILocation(line: 3839, column: 36, scope: !4679)
!4690 = !DILocation(line: 3839, column: 7, scope: !4679)
!4691 = distinct !{!4691, !4682, !4692}
!4692 = !DILocation(line: 3843, column: 9, scope: !4675)
!4693 = !DILocation(line: 3844, column: 7, scope: !4676)
!4694 = !DILocation(line: 3847, column: 13, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3847, column: 11)
!4696 = !DILocation(line: 3847, column: 11, scope: !4676)
!4697 = !DILocation(line: 3848, column: 9, scope: !4695)
!4698 = !DILocation(line: 3850, column: 9, scope: !4695)
!4699 = !DILocation(line: 3851, column: 7, scope: !4676)
!4700 = !DILocation(line: 3854, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3854, column: 11)
!4702 = !DILocation(line: 3854, column: 11, scope: !4676)
!4703 = !DILocation(line: 3855, column: 9, scope: !4701)
!4704 = !DILocation(line: 3857, column: 9, scope: !4701)
!4705 = !DILocation(line: 3858, column: 7, scope: !4676)
!4706 = !DILocation(line: 3861, column: 7, scope: !4676)
!4707 = !DILocation(line: 3862, column: 7, scope: !4676)
!4708 = !DILocation(line: 3865, column: 14, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3865, column: 7)
!4710 = !DILocation(line: 3865, column: 12, scope: !4709)
!4711 = !DILocation(line: 3865, column: 19, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 3865, column: 7)
!4713 = !DILocation(line: 3865, column: 23, scope: !4712)
!4714 = !DILocation(line: 3865, column: 21, scope: !4712)
!4715 = !DILocation(line: 3865, column: 7, scope: !4709)
!4716 = !DILocation(line: 3867, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 3866, column: 9)
!4718 = !DILocation(line: 3868, column: 30, scope: !4717)
!4719 = !DILocation(line: 3868, column: 42, scope: !4717)
!4720 = !DILocation(line: 3868, column: 11, scope: !4717)
!4721 = !DILocation(line: 3869, column: 11, scope: !4717)
!4722 = !DILocation(line: 3869, column: 11, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 3869, column: 11)
!4724 = !DILocation(line: 3870, column: 9, scope: !4717)
!4725 = !DILocation(line: 3865, column: 36, scope: !4712)
!4726 = !DILocation(line: 3865, column: 7, scope: !4712)
!4727 = distinct !{!4727, !4715, !4728}
!4728 = !DILocation(line: 3870, column: 9, scope: !4709)
!4729 = !DILocation(line: 3871, column: 7, scope: !4676)
!4730 = !DILocation(line: 3873, column: 1, scope: !4669)
!4731 = distinct !DISubprogram(name: "dev_ino_pop", scope: !3, file: !3, line: 1022, type: !346, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4732 = !DILocalVariable(name: "vdi", scope: !4731, file: !3, line: 1024, type: !167)
!4733 = !DILocation(line: 1024, column: 9, scope: !4731)
!4734 = !DILocalVariable(name: "di", scope: !4731, file: !3, line: 1025, type: !253)
!4735 = !DILocation(line: 1025, column: 19, scope: !4731)
!4736 = !DILocalVariable(name: "dev_ino_size", scope: !4731, file: !3, line: 1026, type: !27)
!4737 = !DILocation(line: 1026, column: 7, scope: !4731)
!4738 = !DILocation(line: 1027, column: 3, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 1027, column: 3)
!4740 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1027, column: 3)
!4741 = !DILocalVariable(name: "__o", scope: !4742, file: !3, line: 1027, type: !348)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1027, column: 3)
!4743 = !DILocation(line: 1027, column: 3, scope: !4742)
!4744 = !{!4745, !2443, i64 24}
!4745 = !{!"obstack", !2467, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2438, i64 40, !2467, i64 48, !2438, i64 56, !2438, i64 64, !2443, i64 72, !2437, i64 80, !2437, i64 80, !2437, i64 80}
!4746 = !{!4745, !2443, i64 16}
!4747 = !DILocation(line: 1027, column: 3, scope: !4740)
!4748 = !DILocation(line: 1028, column: 3, scope: !4731)
!4749 = !DILocation(line: 1029, column: 9, scope: !4731)
!4750 = !DILocation(line: 1029, column: 7, scope: !4731)
!4751 = !DILocation(line: 1030, column: 8, scope: !4731)
!4752 = !DILocation(line: 1030, column: 6, scope: !4731)
!4753 = !DILocation(line: 1031, column: 11, scope: !4731)
!4754 = !DILocation(line: 1031, column: 10, scope: !4731)
!4755 = !{i64 0, i64 8, !2579, i64 8, i64 8, !2579}
!4756 = !DILocation(line: 1031, column: 3, scope: !4731)
!4757 = distinct !DISubprogram(name: "free_pending_ent", scope: !3, file: !3, line: 1248, type: !395, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!4758 = !DILocalVariable(name: "p", arg: 1, scope: !4757, file: !3, line: 1248, type: !237)
!4759 = !DILocation(line: 1248, column: 35, scope: !4757)
!4760 = !DILocation(line: 1250, column: 9, scope: !4757)
!4761 = !DILocation(line: 1250, column: 12, scope: !4757)
!4762 = !DILocation(line: 1250, column: 3, scope: !4757)
!4763 = !DILocation(line: 1251, column: 9, scope: !4757)
!4764 = !DILocation(line: 1251, column: 12, scope: !4757)
!4765 = !DILocation(line: 1251, column: 3, scope: !4757)
!4766 = !DILocation(line: 1252, column: 9, scope: !4757)
!4767 = !DILocation(line: 1252, column: 3, scope: !4757)
!4768 = !DILocation(line: 1253, column: 1, scope: !4757)
!4769 = !DILocalVariable(name: "name", arg: 1, scope: !979, file: !3, line: 2720, type: !146)
!4770 = !DILocation(line: 2720, column: 24, scope: !979)
!4771 = !DILocalVariable(name: "realname", arg: 2, scope: !979, file: !3, line: 2720, type: !146)
!4772 = !DILocation(line: 2720, column: 42, scope: !979)
!4773 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !979, file: !3, line: 2720, type: !141)
!4774 = !DILocation(line: 2720, column: 57, scope: !979)
!4775 = !DILocalVariable(name: "dirp", scope: !979, file: !3, line: 2722, type: !609)
!4776 = !DILocation(line: 2722, column: 8, scope: !979)
!4777 = !DILocalVariable(name: "next", scope: !979, file: !3, line: 2723, type: !613)
!4778 = !DILocation(line: 2723, column: 18, scope: !979)
!4779 = !DILocalVariable(name: "total_blocks", scope: !979, file: !3, line: 2724, type: !168)
!4780 = !DILocation(line: 2724, column: 13, scope: !979)
!4781 = !DILocation(line: 2727, column: 3, scope: !979)
!4782 = !DILocation(line: 2727, column: 9, scope: !979)
!4783 = !DILocation(line: 2728, column: 19, scope: !979)
!4784 = !DILocation(line: 2728, column: 10, scope: !979)
!4785 = !DILocation(line: 2728, column: 8, scope: !979)
!4786 = !DILocation(line: 2729, column: 8, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2729, column: 7)
!4788 = !DILocation(line: 2729, column: 7, scope: !979)
!4789 = !DILocation(line: 2731, column: 21, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 2730, column: 5)
!4791 = !DILocation(line: 2731, column: 39, scope: !4790)
!4792 = !DILocation(line: 2731, column: 70, scope: !4790)
!4793 = !DILocation(line: 2731, column: 7, scope: !4790)
!4794 = !DILocation(line: 2732, column: 7, scope: !4790)
!4795 = !DILocation(line: 2735, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2735, column: 7)
!4797 = !DILocation(line: 2735, column: 7, scope: !979)
!4798 = !DILocalVariable(name: "dir_stat", scope: !4799, file: !3, line: 2737, type: !191)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2736, column: 5)
!4800 = !DILocation(line: 2737, column: 19, scope: !4799)
!4801 = !DILocalVariable(name: "fd", scope: !4799, file: !3, line: 2738, type: !27)
!4802 = !DILocation(line: 2738, column: 11, scope: !4799)
!4803 = !DILocation(line: 2738, column: 23, scope: !4799)
!4804 = !DILocation(line: 2738, column: 16, scope: !4799)
!4805 = !DILocation(line: 2741, column: 17, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2741, column: 11)
!4807 = !DILocation(line: 2741, column: 14, scope: !4806)
!4808 = !DILocation(line: 2741, column: 12, scope: !4806)
!4809 = !DILocation(line: 2742, column: 21, scope: !4806)
!4810 = !DILocation(line: 2742, column: 14, scope: !4806)
!4811 = !DILocation(line: 2743, column: 20, scope: !4806)
!4812 = !DILocation(line: 2743, column: 14, scope: !4806)
!4813 = !DILocation(line: 2743, column: 38, scope: !4806)
!4814 = !DILocation(line: 2741, column: 11, scope: !4799)
!4815 = !DILocation(line: 2745, column: 25, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 2744, column: 9)
!4817 = !DILocation(line: 2746, column: 25, scope: !4816)
!4818 = !DILocation(line: 2746, column: 71, scope: !4816)
!4819 = !DILocation(line: 2745, column: 11, scope: !4816)
!4820 = !DILocation(line: 2747, column: 21, scope: !4816)
!4821 = !DILocation(line: 2747, column: 11, scope: !4816)
!4822 = !DILocation(line: 2748, column: 11, scope: !4816)
!4823 = !DILocation(line: 2753, column: 31, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2753, column: 11)
!4825 = !{!3810, !2467, i64 0}
!4826 = !DILocation(line: 2753, column: 48, scope: !4824)
!4827 = !{!3810, !2467, i64 8}
!4828 = !DILocation(line: 2753, column: 11, scope: !4824)
!4829 = !DILocation(line: 2753, column: 11, scope: !4799)
!4830 = !DILocation(line: 2755, column: 24, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2754, column: 9)
!4832 = !DILocation(line: 2756, column: 18, scope: !4831)
!4833 = !DILocation(line: 2755, column: 11, scope: !4831)
!4834 = !DILocation(line: 2757, column: 21, scope: !4831)
!4835 = !DILocation(line: 2757, column: 11, scope: !4831)
!4836 = !DILocation(line: 2758, column: 11, scope: !4831)
!4837 = !DILocation(line: 2759, column: 11, scope: !4831)
!4838 = !DILocation(line: 2762, column: 30, scope: !4799)
!4839 = !DILocation(line: 2762, column: 47, scope: !4799)
!4840 = !DILocation(line: 2762, column: 7, scope: !4799)
!4841 = !DILocation(line: 2763, column: 5, scope: !4799)
!4842 = !DILocation(line: 2765, column: 3, scope: !979)
!4843 = !DILocation(line: 2767, column: 7, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2767, column: 7)
!4845 = !DILocation(line: 2767, column: 17, scope: !4844)
!4846 = !DILocation(line: 2767, column: 20, scope: !4844)
!4847 = !DILocation(line: 2767, column: 7, scope: !979)
!4848 = !DILocation(line: 2769, column: 12, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2769, column: 11)
!4850 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 2768, column: 5)
!4851 = !DILocation(line: 2769, column: 11, scope: !4850)
!4852 = !DILocation(line: 2770, column: 9, scope: !4849)
!4853 = !DILocation(line: 2770, column: 9, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 2770, column: 9)
!4855 = !DILocation(line: 2771, column: 13, scope: !4850)
!4856 = !DILocation(line: 2772, column: 7, scope: !4850)
!4857 = !DILocation(line: 2772, column: 7, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 2772, column: 7)
!4859 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2772, column: 7)
!4860 = !DILocation(line: 2772, column: 7, scope: !4859)
!4861 = !DILocation(line: 2772, column: 7, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2772, column: 7)
!4863 = !DILocalVariable(name: "absolute_name", scope: !4850, file: !3, line: 2774, type: !143)
!4864 = !DILocation(line: 2774, column: 13, scope: !4850)
!4865 = !DILocation(line: 2775, column: 11, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2775, column: 11)
!4867 = !DILocation(line: 2775, column: 11, scope: !4850)
!4868 = !DILocation(line: 2777, column: 55, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2776, column: 9)
!4870 = !DILocation(line: 2777, column: 27, scope: !4869)
!4871 = !DILocation(line: 2777, column: 25, scope: !4869)
!4872 = !DILocation(line: 2778, column: 17, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2778, column: 15)
!4874 = !DILocation(line: 2778, column: 15, scope: !4869)
!4875 = !DILocation(line: 2779, column: 27, scope: !4873)
!4876 = !DILocation(line: 2780, column: 27, scope: !4873)
!4877 = !DILocation(line: 2780, column: 57, scope: !4873)
!4878 = !DILocation(line: 2779, column: 13, scope: !4873)
!4879 = !DILocation(line: 2781, column: 9, scope: !4869)
!4880 = !DILocation(line: 2782, column: 19, scope: !4850)
!4881 = !DILocation(line: 2782, column: 30, scope: !4850)
!4882 = !DILocation(line: 2782, column: 41, scope: !4850)
!4883 = !DILocation(line: 2782, column: 47, scope: !4850)
!4884 = !DILocation(line: 2783, column: 50, scope: !4850)
!4885 = !DILocation(line: 2782, column: 7, scope: !4850)
!4886 = !DILocation(line: 2785, column: 13, scope: !4850)
!4887 = !DILocation(line: 2785, column: 7, scope: !4850)
!4888 = !DILocation(line: 2787, column: 7, scope: !4850)
!4889 = !DILocation(line: 2787, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2787, column: 7)
!4891 = !DILocation(line: 2788, column: 5, scope: !4850)
!4892 = !DILocation(line: 2793, column: 3, scope: !979)
!4893 = !DILocation(line: 2797, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2794, column: 5)
!4895 = !DILocation(line: 2797, column: 13, scope: !4894)
!4896 = !DILocation(line: 2798, column: 23, scope: !4894)
!4897 = !DILocation(line: 2798, column: 14, scope: !4894)
!4898 = !DILocation(line: 2798, column: 12, scope: !4894)
!4899 = !DILocation(line: 2799, column: 11, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2799, column: 11)
!4901 = !DILocation(line: 2799, column: 11, scope: !4894)
!4902 = !DILocation(line: 2801, column: 31, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 2801, column: 15)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2800, column: 9)
!4905 = !DILocation(line: 2801, column: 37, scope: !4903)
!4906 = !DILocation(line: 2801, column: 17, scope: !4903)
!4907 = !DILocation(line: 2801, column: 15, scope: !4904)
!4908 = !DILocalVariable(name: "type", scope: !4909, file: !3, line: 2803, type: !36)
!4909 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2802, column: 13)
!4910 = !DILocation(line: 2803, column: 29, scope: !4909)
!4911 = !DILocation(line: 2806, column: 23, scope: !4909)
!4912 = !DILocation(line: 2806, column: 29, scope: !4909)
!4913 = !{!4914, !2438, i64 18}
!4914 = !{!"dirent", !2467, i64 0, !2467, i64 8, !2863, i64 16, !2438, i64 18, !2438, i64 19}
!4915 = !DILocation(line: 2806, column: 15, scope: !4909)
!4916 = !DILocation(line: 2808, column: 36, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2807, column: 17)
!4918 = !DILocation(line: 2808, column: 49, scope: !4917)
!4919 = !DILocation(line: 2809, column: 36, scope: !4917)
!4920 = !DILocation(line: 2809, column: 48, scope: !4917)
!4921 = !DILocation(line: 2810, column: 36, scope: !4917)
!4922 = !DILocation(line: 2810, column: 50, scope: !4917)
!4923 = !DILocation(line: 2811, column: 36, scope: !4917)
!4924 = !DILocation(line: 2811, column: 45, scope: !4917)
!4925 = !DILocation(line: 2812, column: 36, scope: !4917)
!4926 = !DILocation(line: 2812, column: 53, scope: !4917)
!4927 = !DILocation(line: 2813, column: 36, scope: !4917)
!4928 = !DILocation(line: 2813, column: 47, scope: !4917)
!4929 = !DILocation(line: 2814, column: 36, scope: !4917)
!4930 = !DILocation(line: 2814, column: 45, scope: !4917)
!4931 = !DILocation(line: 2816, column: 36, scope: !4917)
!4932 = !DILocation(line: 2816, column: 49, scope: !4917)
!4933 = !DILocation(line: 2820, column: 44, scope: !4909)
!4934 = !DILocation(line: 2820, column: 50, scope: !4909)
!4935 = !DILocation(line: 2820, column: 58, scope: !4909)
!4936 = !DILocation(line: 2822, column: 51, scope: !4909)
!4937 = !DILocation(line: 2820, column: 31, scope: !4909)
!4938 = !DILocation(line: 2820, column: 28, scope: !4909)
!4939 = !DILocation(line: 2828, column: 19, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2828, column: 19)
!4941 = !DILocation(line: 2828, column: 26, scope: !4940)
!4942 = !DILocation(line: 2828, column: 42, scope: !4940)
!4943 = !DILocation(line: 2828, column: 45, scope: !4940)
!4944 = !DILocation(line: 2828, column: 55, scope: !4940)
!4945 = !DILocation(line: 2829, column: 23, scope: !4940)
!4946 = !DILocation(line: 2829, column: 27, scope: !4940)
!4947 = !DILocation(line: 2829, column: 44, scope: !4940)
!4948 = !DILocation(line: 2829, column: 48, scope: !4940)
!4949 = !DILocation(line: 2828, column: 19, scope: !4909)
!4950 = !DILocation(line: 2834, column: 19, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2830, column: 17)
!4952 = !DILocation(line: 2835, column: 19, scope: !4951)
!4953 = !DILocation(line: 2836, column: 19, scope: !4951)
!4954 = !DILocation(line: 2837, column: 17, scope: !4951)
!4955 = !DILocation(line: 2838, column: 13, scope: !4909)
!4956 = !DILocation(line: 2839, column: 9, scope: !4904)
!4957 = !DILocation(line: 2840, column: 16, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2840, column: 16)
!4959 = !DILocation(line: 2840, column: 22, scope: !4958)
!4960 = !DILocation(line: 2840, column: 16, scope: !4900)
!4961 = !DILocation(line: 2842, column: 25, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 2841, column: 9)
!4963 = !DILocation(line: 2842, column: 43, scope: !4962)
!4964 = !DILocation(line: 2842, column: 70, scope: !4962)
!4965 = !DILocation(line: 2842, column: 11, scope: !4962)
!4966 = !DILocation(line: 2843, column: 15, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2843, column: 15)
!4968 = !DILocation(line: 2843, column: 21, scope: !4967)
!4969 = !DILocation(line: 2843, column: 15, scope: !4962)
!4970 = !DILocation(line: 2844, column: 13, scope: !4967)
!4971 = !DILocation(line: 2845, column: 9, scope: !4962)
!4972 = !DILocation(line: 2847, column: 9, scope: !4958)
!4973 = !DILocation(line: 2852, column: 7, scope: !4894)
!4974 = distinct !{!4974, !4892, !4975}
!4975 = !DILocation(line: 2853, column: 5, scope: !979)
!4976 = !DILocation(line: 2855, column: 17, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2855, column: 7)
!4978 = !DILocation(line: 2855, column: 7, scope: !4977)
!4979 = !DILocation(line: 2855, column: 23, scope: !4977)
!4980 = !DILocation(line: 2855, column: 7, scope: !979)
!4981 = !DILocation(line: 2857, column: 21, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2856, column: 5)
!4983 = !DILocation(line: 2857, column: 39, scope: !4982)
!4984 = !DILocation(line: 2857, column: 66, scope: !4982)
!4985 = !DILocation(line: 2857, column: 7, scope: !4982)
!4986 = !DILocation(line: 2859, column: 5, scope: !4982)
!4987 = !DILocation(line: 2862, column: 3, scope: !979)
!4988 = !DILocation(line: 2867, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2867, column: 7)
!4990 = !DILocation(line: 2867, column: 7, scope: !979)
!4991 = !DILocation(line: 2868, column: 30, scope: !4989)
!4992 = !DILocation(line: 2868, column: 5, scope: !4989)
!4993 = !DILocation(line: 2870, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2870, column: 7)
!4995 = !DILocation(line: 2870, column: 14, scope: !4994)
!4996 = !DILocation(line: 2870, column: 29, scope: !4994)
!4997 = !DILocation(line: 2870, column: 32, scope: !4994)
!4998 = !DILocation(line: 2870, column: 7, scope: !979)
!4999 = !DILocalVariable(name: "p", scope: !5000, file: !3, line: 2872, type: !146)
!5000 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2871, column: 5)
!5001 = !DILocation(line: 2872, column: 19, scope: !5000)
!5002 = !DILocalVariable(name: "buf", scope: !5000, file: !3, line: 2873, type: !622)
!5003 = !DILocation(line: 2873, column: 12, scope: !5000)
!5004 = !DILocation(line: 2875, column: 7, scope: !5000)
!5005 = !DILocation(line: 2875, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 2875, column: 7)
!5007 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2875, column: 7)
!5008 = !DILocation(line: 2875, column: 7, scope: !5007)
!5009 = !DILocation(line: 2875, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 2875, column: 7)
!5011 = !DILocation(line: 2876, column: 11, scope: !5000)
!5012 = !DILocation(line: 2876, column: 9, scope: !5000)
!5013 = !DILocation(line: 2877, column: 7, scope: !5000)
!5014 = !DILocation(line: 2877, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2877, column: 7)
!5016 = !DILocation(line: 2878, column: 7, scope: !5000)
!5017 = !DILocation(line: 2878, column: 7, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2878, column: 7)
!5019 = !DILocation(line: 2879, column: 27, scope: !5000)
!5020 = !DILocation(line: 2879, column: 41, scope: !5000)
!5021 = !DILocation(line: 2879, column: 46, scope: !5000)
!5022 = !DILocation(line: 2880, column: 42, scope: !5000)
!5023 = !DILocation(line: 2879, column: 11, scope: !5000)
!5024 = !DILocation(line: 2879, column: 9, scope: !5000)
!5025 = !DILocation(line: 2881, column: 7, scope: !5000)
!5026 = !DILocation(line: 2881, column: 7, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2881, column: 7)
!5028 = !DILocation(line: 2882, column: 7, scope: !5000)
!5029 = !DILocation(line: 2882, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 2882, column: 7)
!5031 = !DILocation(line: 2883, column: 5, scope: !5000)
!5032 = !DILocation(line: 2885, column: 7, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !979, file: !3, line: 2885, column: 7)
!5034 = !DILocation(line: 2885, column: 7, scope: !979)
!5035 = !DILocation(line: 2886, column: 5, scope: !5033)
!5036 = !DILocation(line: 2887, column: 1, scope: !979)
!5037 = distinct !DISubprogram(name: "restore_default_color", scope: !3, file: !3, line: 1266, type: !341, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5038 = !DILocation(line: 1268, column: 3, scope: !5037)
!5039 = !DILocation(line: 1269, column: 3, scope: !5037)
!5040 = !DILocation(line: 1270, column: 1, scope: !5037)
!5041 = distinct !DISubprogram(name: "signal_restore", scope: !3, file: !3, line: 1444, type: !341, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5042 = !DILocation(line: 1446, column: 3, scope: !5041)
!5043 = !DILocation(line: 1447, column: 1, scope: !5041)
!5044 = distinct !DISubprogram(name: "dired_dump_obstack", scope: !3, file: !3, line: 1051, type: !508, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5045 = !DILocalVariable(name: "prefix", arg: 1, scope: !5044, file: !3, line: 1051, type: !146)
!5046 = !DILocation(line: 1051, column: 33, scope: !5044)
!5047 = !DILocalVariable(name: "os", arg: 2, scope: !5044, file: !3, line: 1051, type: !510)
!5048 = !DILocation(line: 1051, column: 57, scope: !5044)
!5049 = !DILocalVariable(name: "n_pos", scope: !5044, file: !3, line: 1053, type: !149)
!5050 = !DILocation(line: 1053, column: 10, scope: !5044)
!5051 = !DILocalVariable(name: "__o", scope: !5052, file: !3, line: 1055, type: !348)
!5052 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 1055, column: 11)
!5053 = !DILocation(line: 1055, column: 11, scope: !5052)
!5054 = !DILocation(line: 1055, column: 36, scope: !5044)
!5055 = !DILocation(line: 1055, column: 9, scope: !5044)
!5056 = !DILocation(line: 1056, column: 7, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 1056, column: 7)
!5058 = !DILocation(line: 1056, column: 13, scope: !5057)
!5059 = !DILocation(line: 1056, column: 7, scope: !5044)
!5060 = !DILocalVariable(name: "pos", scope: !5061, file: !3, line: 1058, type: !148)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 1057, column: 5)
!5062 = !DILocation(line: 1058, column: 15, scope: !5061)
!5063 = !DILocalVariable(name: "__o1", scope: !5064, file: !3, line: 1058, type: !510)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1058, column: 32)
!5065 = !DILocation(line: 1058, column: 32, scope: !5064)
!5066 = !DILocalVariable(name: "__value", scope: !5064, file: !3, line: 1058, type: !167)
!5067 = !DILocation(line: 1058, column: 32, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1058, column: 32)
!5069 = !{!4745, !2467, i64 48}
!5070 = !DILocation(line: 1058, column: 32, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1058, column: 32)
!5072 = !{!4745, !2443, i64 8}
!5073 = !{!4745, !2443, i64 32}
!5074 = !DILocation(line: 1058, column: 21, scope: !5061)
!5075 = !DILocation(line: 1059, column: 7, scope: !5061)
!5076 = !DILocalVariable(name: "i", scope: !5077, file: !3, line: 1060, type: !149)
!5077 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1060, column: 7)
!5078 = !DILocation(line: 1060, column: 19, scope: !5077)
!5079 = !DILocation(line: 1060, column: 12, scope: !5077)
!5080 = !DILocation(line: 1060, column: 26, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 1060, column: 7)
!5082 = !DILocation(line: 1060, column: 30, scope: !5081)
!5083 = !DILocation(line: 1060, column: 28, scope: !5081)
!5084 = !DILocation(line: 1060, column: 7, scope: !5077)
!5085 = !DILocation(line: 1061, column: 45, scope: !5081)
!5086 = !DILocation(line: 1061, column: 49, scope: !5081)
!5087 = !DILocation(line: 1061, column: 9, scope: !5081)
!5088 = !DILocation(line: 1060, column: 38, scope: !5081)
!5089 = !DILocation(line: 1060, column: 7, scope: !5081)
!5090 = distinct !{!5090, !5084, !5091}
!5091 = !DILocation(line: 1061, column: 51, scope: !5077)
!5092 = !DILocation(line: 1062, column: 7, scope: !5061)
!5093 = !DILocation(line: 1063, column: 5, scope: !5061)
!5094 = !DILocation(line: 1064, column: 1, scope: !5044)
!5095 = !DILocalVariable(name: "init", arg: 1, scope: !889, file: !3, line: 1355, type: !141)
!5096 = !DILocation(line: 1355, column: 20, scope: !889)
!5097 = !DILocalVariable(name: "j", scope: !889, file: !3, line: 1387, type: !27)
!5098 = !DILocation(line: 1387, column: 7, scope: !889)
!5099 = !DILocation(line: 1389, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !889, file: !3, line: 1389, column: 7)
!5101 = !DILocation(line: 1389, column: 7, scope: !889)
!5102 = !DILocalVariable(name: "act", scope: !5103, file: !3, line: 1392, type: !419)
!5103 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1390, column: 5)
!5104 = !DILocation(line: 1392, column: 24, scope: !5103)
!5105 = !DILocation(line: 1394, column: 7, scope: !5103)
!5106 = !DILocation(line: 1395, column: 14, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1395, column: 7)
!5108 = !DILocation(line: 1395, column: 12, scope: !5107)
!5109 = !DILocation(line: 1395, column: 19, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1395, column: 7)
!5111 = !DILocation(line: 1395, column: 21, scope: !5110)
!5112 = !DILocation(line: 1395, column: 7, scope: !5107)
!5113 = !DILocation(line: 1397, column: 26, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1396, column: 9)
!5115 = !DILocation(line: 1397, column: 22, scope: !5114)
!5116 = !DILocation(line: 1397, column: 11, scope: !5114)
!5117 = !DILocation(line: 1398, column: 19, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1398, column: 15)
!5119 = !DILocation(line: 1398, column: 30, scope: !5118)
!5120 = !DILocation(line: 1398, column: 15, scope: !5114)
!5121 = !DILocation(line: 1399, column: 45, scope: !5118)
!5122 = !DILocation(line: 1399, column: 41, scope: !5118)
!5123 = !DILocation(line: 1399, column: 13, scope: !5118)
!5124 = !DILocation(line: 1400, column: 9, scope: !5114)
!5125 = !DILocation(line: 1395, column: 31, scope: !5110)
!5126 = !DILocation(line: 1395, column: 7, scope: !5110)
!5127 = distinct !{!5127, !5112, !5128}
!5128 = !DILocation(line: 1400, column: 9, scope: !5107)
!5129 = !DILocation(line: 1402, column: 11, scope: !5103)
!5130 = !DILocation(line: 1402, column: 21, scope: !5103)
!5131 = !{i64 0, i64 128, !2497}
!5132 = !DILocation(line: 1403, column: 11, scope: !5103)
!5133 = !DILocation(line: 1403, column: 20, scope: !5103)
!5134 = !{!5135, !2437, i64 136}
!5135 = !{!"sigaction", !2438, i64 0, !5136, i64 8, !2437, i64 136, !2443, i64 144}
!5136 = !{!"", !2438, i64 0}
!5137 = !DILocation(line: 1405, column: 14, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 1405, column: 7)
!5139 = !DILocation(line: 1405, column: 12, scope: !5138)
!5140 = !DILocation(line: 1405, column: 19, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1405, column: 7)
!5142 = !DILocation(line: 1405, column: 21, scope: !5141)
!5143 = !DILocation(line: 1405, column: 7, scope: !5138)
!5144 = !DILocation(line: 1406, column: 47, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1406, column: 13)
!5146 = !DILocation(line: 1406, column: 43, scope: !5145)
!5147 = !DILocation(line: 1406, column: 13, scope: !5145)
!5148 = !DILocation(line: 1406, column: 13, scope: !5141)
!5149 = !DILocation(line: 1408, column: 34, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 1407, column: 11)
!5151 = !DILocation(line: 1408, column: 30, scope: !5150)
!5152 = !DILocation(line: 1408, column: 37, scope: !5150)
!5153 = !DILocation(line: 1408, column: 17, scope: !5150)
!5154 = !DILocation(line: 1408, column: 28, scope: !5150)
!5155 = !DILocation(line: 1409, column: 28, scope: !5150)
!5156 = !DILocation(line: 1409, column: 24, scope: !5150)
!5157 = !DILocation(line: 1409, column: 13, scope: !5150)
!5158 = !DILocation(line: 1410, column: 11, scope: !5150)
!5159 = !DILocation(line: 1406, column: 49, scope: !5145)
!5160 = !DILocation(line: 1405, column: 31, scope: !5141)
!5161 = !DILocation(line: 1405, column: 7, scope: !5141)
!5162 = distinct !{!5162, !5143, !5163}
!5163 = !DILocation(line: 1410, column: 11, scope: !5138)
!5164 = !DILocation(line: 1422, column: 5, scope: !5103)
!5165 = !DILocation(line: 1426, column: 14, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1426, column: 7)
!5167 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1424, column: 5)
!5168 = !DILocation(line: 1426, column: 12, scope: !5166)
!5169 = !DILocation(line: 1426, column: 19, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 1426, column: 7)
!5171 = !DILocation(line: 1426, column: 21, scope: !5170)
!5172 = !DILocation(line: 1426, column: 7, scope: !5166)
!5173 = !DILocation(line: 1427, column: 47, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1427, column: 13)
!5175 = !DILocation(line: 1427, column: 43, scope: !5174)
!5176 = !DILocation(line: 1427, column: 13, scope: !5174)
!5177 = !DILocation(line: 1427, column: 13, scope: !5170)
!5178 = !DILocation(line: 1428, column: 23, scope: !5174)
!5179 = !DILocation(line: 1428, column: 19, scope: !5174)
!5180 = !DILocation(line: 1428, column: 11, scope: !5174)
!5181 = !DILocation(line: 1427, column: 49, scope: !5174)
!5182 = !DILocation(line: 1426, column: 31, scope: !5170)
!5183 = !DILocation(line: 1426, column: 7, scope: !5170)
!5184 = distinct !{!5184, !5172, !5185}
!5185 = !DILocation(line: 1428, column: 34, scope: !5166)
!5186 = !DILocation(line: 1435, column: 1, scope: !889)
!5187 = distinct !DISubprogram(name: "stophandler", scope: !3, file: !3, line: 1297, type: !174, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5188 = !DILocalVariable(name: "sig", arg: 1, scope: !5187, file: !3, line: 1297, type: !27)
!5189 = !DILocation(line: 1297, column: 18, scope: !5187)
!5190 = !DILocation(line: 1301, column: 9, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1301, column: 7)
!5192 = !DILocation(line: 1301, column: 7, scope: !5187)
!5193 = !DILocation(line: 1302, column: 22, scope: !5191)
!5194 = !DILocation(line: 1302, column: 5, scope: !5191)
!5195 = !DILocation(line: 1303, column: 1, scope: !5187)
!5196 = distinct !DISubprogram(name: "sighandler", scope: !3, file: !3, line: 1286, type: !174, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5197 = !DILocalVariable(name: "sig", arg: 1, scope: !5196, file: !3, line: 1286, type: !27)
!5198 = !DILocation(line: 1286, column: 17, scope: !5196)
!5199 = !DILocation(line: 1290, column: 9, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1290, column: 7)
!5201 = !DILocation(line: 1290, column: 7, scope: !5196)
!5202 = !DILocation(line: 1291, column: 24, scope: !5200)
!5203 = !DILocation(line: 1291, column: 22, scope: !5200)
!5204 = !DILocation(line: 1291, column: 5, scope: !5200)
!5205 = !DILocation(line: 1292, column: 1, scope: !5196)
!5206 = distinct !DISubprogram(name: "put_indicator", scope: !3, file: !3, line: 4793, type: !397, scopeLine: 4794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5207 = !DILocalVariable(name: "ind", arg: 1, scope: !5206, file: !3, line: 4793, type: !399)
!5208 = !DILocation(line: 4793, column: 38, scope: !5206)
!5209 = !DILocation(line: 4795, column: 9, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 4795, column: 7)
!5211 = !DILocation(line: 4795, column: 7, scope: !5206)
!5212 = !DILocation(line: 4797, column: 18, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 4796, column: 5)
!5214 = !DILocation(line: 4803, column: 16, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 4803, column: 11)
!5216 = !DILocation(line: 4803, column: 13, scope: !5215)
!5217 = !DILocation(line: 4803, column: 11, scope: !5213)
!5218 = !DILocation(line: 4804, column: 9, scope: !5215)
!5219 = !DILocation(line: 4806, column: 7, scope: !5213)
!5220 = !DILocation(line: 4807, column: 5, scope: !5213)
!5221 = !DILocation(line: 4809, column: 3, scope: !5206)
!5222 = !DILocation(line: 4810, column: 1, scope: !5206)
!5223 = distinct !DISubprogram(name: "signal_init", scope: !3, file: !3, line: 1438, type: !341, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5224 = !DILocation(line: 1440, column: 3, scope: !5223)
!5225 = !DILocation(line: 1441, column: 1, scope: !5223)
!5226 = distinct !DISubprogram(name: "prep_non_filename_text", scope: !3, file: !3, line: 4576, type: !341, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5227 = !DILocation(line: 4578, column: 30, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 4578, column: 7)
!5229 = !DILocation(line: 4578, column: 37, scope: !5228)
!5230 = !DILocation(line: 4578, column: 7, scope: !5226)
!5231 = !DILocation(line: 4579, column: 5, scope: !5228)
!5232 = !DILocation(line: 4582, column: 7, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 4581, column: 5)
!5234 = !DILocation(line: 4583, column: 7, scope: !5233)
!5235 = !DILocation(line: 4584, column: 7, scope: !5233)
!5236 = !DILocation(line: 4586, column: 1, scope: !5226)
!5237 = distinct !DISubprogram(name: "file_failure", scope: !3, file: !3, line: 2687, type: !625, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5238 = !DILocalVariable(name: "serious", arg: 1, scope: !5237, file: !3, line: 2687, type: !141)
!5239 = !DILocation(line: 2687, column: 20, scope: !5237)
!5240 = !DILocalVariable(name: "message", arg: 2, scope: !5237, file: !3, line: 2687, type: !146)
!5241 = !DILocation(line: 2687, column: 41, scope: !5237)
!5242 = !DILocalVariable(name: "file", arg: 3, scope: !5237, file: !3, line: 2687, type: !146)
!5243 = !DILocation(line: 2687, column: 62, scope: !5237)
!5244 = !DILocation(line: 2689, column: 13, scope: !5237)
!5245 = !DILocation(line: 2689, column: 20, scope: !5237)
!5246 = !DILocation(line: 2689, column: 29, scope: !5237)
!5247 = !DILocation(line: 2689, column: 3, scope: !5237)
!5248 = !DILocation(line: 2690, column: 20, scope: !5237)
!5249 = !DILocation(line: 2690, column: 3, scope: !5237)
!5250 = !DILocation(line: 2691, column: 1, scope: !5237)
!5251 = distinct !DISubprogram(name: "visit_dir", scope: !3, file: !3, line: 1217, type: !627, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5252 = !DILocalVariable(name: "dev", arg: 1, scope: !5251, file: !3, line: 1217, type: !260)
!5253 = !DILocation(line: 1217, column: 18, scope: !5251)
!5254 = !DILocalVariable(name: "ino", arg: 2, scope: !5251, file: !3, line: 1217, type: !258)
!5255 = !DILocation(line: 1217, column: 29, scope: !5251)
!5256 = !DILocalVariable(name: "ent", scope: !5251, file: !3, line: 1219, type: !253)
!5257 = !DILocation(line: 1219, column: 19, scope: !5251)
!5258 = !DILocalVariable(name: "ent_from_table", scope: !5251, file: !3, line: 1220, type: !253)
!5259 = !DILocation(line: 1220, column: 19, scope: !5251)
!5260 = !DILocalVariable(name: "found_match", scope: !5251, file: !3, line: 1221, type: !141)
!5261 = !DILocation(line: 1221, column: 8, scope: !5251)
!5262 = !DILocation(line: 1223, column: 9, scope: !5251)
!5263 = !DILocation(line: 1223, column: 7, scope: !5251)
!5264 = !DILocation(line: 1224, column: 17, scope: !5251)
!5265 = !DILocation(line: 1224, column: 3, scope: !5251)
!5266 = !DILocation(line: 1224, column: 8, scope: !5251)
!5267 = !DILocation(line: 1224, column: 15, scope: !5251)
!5268 = !DILocation(line: 1225, column: 17, scope: !5251)
!5269 = !DILocation(line: 1225, column: 3, scope: !5251)
!5270 = !DILocation(line: 1225, column: 8, scope: !5251)
!5271 = !DILocation(line: 1225, column: 15, scope: !5251)
!5272 = !DILocation(line: 1228, column: 33, scope: !5251)
!5273 = !DILocation(line: 1228, column: 49, scope: !5251)
!5274 = !DILocation(line: 1228, column: 20, scope: !5251)
!5275 = !DILocation(line: 1228, column: 18, scope: !5251)
!5276 = !DILocation(line: 1230, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1230, column: 7)
!5278 = !DILocation(line: 1230, column: 22, scope: !5277)
!5279 = !DILocation(line: 1230, column: 7, scope: !5251)
!5280 = !DILocation(line: 1233, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1231, column: 5)
!5282 = !DILocation(line: 1236, column: 18, scope: !5251)
!5283 = !DILocation(line: 1236, column: 36, scope: !5251)
!5284 = !DILocation(line: 1236, column: 33, scope: !5251)
!5285 = !DILocation(line: 1236, column: 15, scope: !5251)
!5286 = !DILocation(line: 1238, column: 7, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1238, column: 7)
!5288 = !DILocation(line: 1238, column: 7, scope: !5251)
!5289 = !DILocation(line: 1241, column: 13, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 1239, column: 5)
!5291 = !DILocation(line: 1241, column: 7, scope: !5290)
!5292 = !DILocation(line: 1242, column: 5, scope: !5290)
!5293 = !DILocation(line: 1244, column: 10, scope: !5251)
!5294 = !DILocation(line: 1244, column: 3, scope: !5251)
!5295 = distinct !DISubprogram(name: "set_exit_status", scope: !3, file: !3, line: 2674, type: !401, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5296 = !DILocalVariable(name: "serious", arg: 1, scope: !5295, file: !3, line: 2674, type: !141)
!5297 = !DILocation(line: 2674, column: 23, scope: !5295)
!5298 = !DILocation(line: 2676, column: 7, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 2676, column: 7)
!5300 = !DILocation(line: 2676, column: 7, scope: !5295)
!5301 = !DILocation(line: 2677, column: 17, scope: !5299)
!5302 = !DILocation(line: 2677, column: 5, scope: !5299)
!5303 = !DILocation(line: 2678, column: 12, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2678, column: 12)
!5305 = !DILocation(line: 2678, column: 24, scope: !5304)
!5306 = !DILocation(line: 2678, column: 12, scope: !5299)
!5307 = !DILocation(line: 2679, column: 17, scope: !5304)
!5308 = !DILocation(line: 2679, column: 5, scope: !5304)
!5309 = !DILocation(line: 2680, column: 1, scope: !5295)
!5310 = distinct !DISubprogram(name: "dev_ino_push", scope: !3, file: !3, line: 1006, type: !629, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5311 = !DILocalVariable(name: "dev", arg: 1, scope: !5310, file: !3, line: 1006, type: !260)
!5312 = !DILocation(line: 1006, column: 21, scope: !5310)
!5313 = !DILocalVariable(name: "ino", arg: 2, scope: !5310, file: !3, line: 1006, type: !258)
!5314 = !DILocation(line: 1006, column: 32, scope: !5310)
!5315 = !DILocalVariable(name: "vdi", scope: !5310, file: !3, line: 1008, type: !167)
!5316 = !DILocation(line: 1008, column: 9, scope: !5310)
!5317 = !DILocalVariable(name: "di", scope: !5310, file: !3, line: 1009, type: !253)
!5318 = !DILocation(line: 1009, column: 19, scope: !5310)
!5319 = !DILocalVariable(name: "dev_ino_size", scope: !5310, file: !3, line: 1010, type: !27)
!5320 = !DILocation(line: 1010, column: 7, scope: !5310)
!5321 = !DILocalVariable(name: "__o", scope: !5322, file: !3, line: 1011, type: !510)
!5322 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1011, column: 3)
!5323 = !DILocation(line: 1011, column: 3, scope: !5322)
!5324 = !DILocalVariable(name: "__len", scope: !5322, file: !3, line: 1011, type: !149)
!5325 = !DILocalVariable(name: "__o1", scope: !5326, file: !3, line: 1011, type: !348)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1011, column: 3)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1011, column: 3)
!5328 = !DILocation(line: 1011, column: 3, scope: !5326)
!5329 = !DILocation(line: 1011, column: 3, scope: !5327)
!5330 = !DILocation(line: 1012, column: 9, scope: !5310)
!5331 = !DILocation(line: 1012, column: 7, scope: !5310)
!5332 = !DILocation(line: 1013, column: 8, scope: !5310)
!5333 = !DILocation(line: 1013, column: 6, scope: !5310)
!5334 = !DILocation(line: 1014, column: 5, scope: !5310)
!5335 = !DILocation(line: 1015, column: 16, scope: !5310)
!5336 = !DILocation(line: 1015, column: 3, scope: !5310)
!5337 = !DILocation(line: 1015, column: 7, scope: !5310)
!5338 = !DILocation(line: 1015, column: 14, scope: !5310)
!5339 = !DILocation(line: 1016, column: 16, scope: !5310)
!5340 = !DILocation(line: 1016, column: 3, scope: !5310)
!5341 = !DILocation(line: 1016, column: 7, scope: !5310)
!5342 = !DILocation(line: 1016, column: 14, scope: !5310)
!5343 = !DILocation(line: 1017, column: 1, scope: !5310)
!5344 = distinct !DISubprogram(name: "quote_name", scope: !3, file: !3, line: 4475, type: !631, scopeLine: 4478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5345 = !DILocalVariable(name: "name", arg: 1, scope: !5344, file: !3, line: 4475, type: !146)
!5346 = !DILocation(line: 4475, column: 25, scope: !5344)
!5347 = !DILocalVariable(name: "options", arg: 2, scope: !5344, file: !3, line: 4475, type: !633)
!5348 = !DILocation(line: 4475, column: 61, scope: !5344)
!5349 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !5344, file: !3, line: 4476, type: !27)
!5350 = !DILocation(line: 4476, column: 17, scope: !5344)
!5351 = !DILocalVariable(name: "color", arg: 4, scope: !5344, file: !3, line: 4476, type: !399)
!5352 = !DILocation(line: 4476, column: 62, scope: !5344)
!5353 = !DILocalVariable(name: "allow_pad", arg: 5, scope: !5344, file: !3, line: 4477, type: !141)
!5354 = !DILocation(line: 4477, column: 18, scope: !5344)
!5355 = !DILocalVariable(name: "stack", arg: 6, scope: !5344, file: !3, line: 4477, type: !510)
!5356 = !DILocation(line: 4477, column: 45, scope: !5344)
!5357 = !DILocalVariable(name: "absolute_name", arg: 7, scope: !5344, file: !3, line: 4477, type: !146)
!5358 = !DILocation(line: 4477, column: 64, scope: !5344)
!5359 = !DILocalVariable(name: "smallbuf", scope: !5344, file: !3, line: 4479, type: !635)
!5360 = !DILocation(line: 4479, column: 8, scope: !5344)
!5361 = !DILocalVariable(name: "buf", scope: !5344, file: !3, line: 4480, type: !143)
!5362 = !DILocation(line: 4480, column: 9, scope: !5344)
!5363 = !DILocation(line: 4480, column: 15, scope: !5344)
!5364 = !DILocalVariable(name: "len", scope: !5344, file: !3, line: 4481, type: !149)
!5365 = !DILocation(line: 4481, column: 10, scope: !5344)
!5366 = !DILocalVariable(name: "pad", scope: !5344, file: !3, line: 4482, type: !141)
!5367 = !DILocation(line: 4482, column: 8, scope: !5344)
!5368 = !DILocation(line: 4484, column: 57, scope: !5344)
!5369 = !DILocation(line: 4484, column: 63, scope: !5344)
!5370 = !DILocation(line: 4485, column: 25, scope: !5344)
!5371 = !DILocation(line: 4484, column: 9, scope: !5344)
!5372 = !DILocation(line: 4484, column: 7, scope: !5344)
!5373 = !DILocation(line: 4487, column: 7, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4487, column: 7)
!5375 = !DILocation(line: 4487, column: 11, scope: !5374)
!5376 = !DILocation(line: 4487, column: 14, scope: !5374)
!5377 = !DILocation(line: 4487, column: 7, scope: !5344)
!5378 = !DILocation(line: 4488, column: 7, scope: !5374)
!5379 = !DILocation(line: 4488, column: 7, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 4488, column: 7)
!5381 = !DILocation(line: 4490, column: 7, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4490, column: 7)
!5383 = !DILocation(line: 4490, column: 7, scope: !5344)
!5384 = !DILocation(line: 4491, column: 28, scope: !5382)
!5385 = !DILocation(line: 4491, column: 5, scope: !5382)
!5386 = !DILocalVariable(name: "skip_quotes", scope: !5344, file: !3, line: 4495, type: !141)
!5387 = !DILocation(line: 4495, column: 8, scope: !5344)
!5388 = !DILocation(line: 4497, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4497, column: 7)
!5390 = !DILocation(line: 4497, column: 7, scope: !5344)
!5391 = !DILocation(line: 4499, column: 11, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4499, column: 11)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 4498, column: 5)
!5394 = !DILocation(line: 4499, column: 39, scope: !5392)
!5395 = !DILocation(line: 4499, column: 42, scope: !5392)
!5396 = !DILocation(line: 4499, column: 58, scope: !5392)
!5397 = !DILocation(line: 4499, column: 63, scope: !5392)
!5398 = !DILocation(line: 4499, column: 11, scope: !5393)
!5399 = !DILocation(line: 4501, column: 23, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 4500, column: 9)
!5401 = !DILocation(line: 4502, column: 11, scope: !5400)
!5402 = !DILocation(line: 4503, column: 9, scope: !5400)
!5403 = !DILocalVariable(name: "h", scope: !5393, file: !3, line: 4504, type: !143)
!5404 = !DILocation(line: 4504, column: 13, scope: !5393)
!5405 = !DILocation(line: 4504, column: 30, scope: !5393)
!5406 = !DILocation(line: 4504, column: 17, scope: !5393)
!5407 = !DILocalVariable(name: "n", scope: !5393, file: !3, line: 4505, type: !143)
!5408 = !DILocation(line: 4505, column: 13, scope: !5393)
!5409 = !DILocation(line: 4505, column: 30, scope: !5393)
!5410 = !DILocation(line: 4505, column: 17, scope: !5393)
!5411 = !DILocation(line: 4511, column: 42, scope: !5393)
!5412 = !DILocation(line: 4511, column: 46, scope: !5393)
!5413 = !DILocation(line: 4511, column: 45, scope: !5393)
!5414 = !DILocation(line: 4511, column: 48, scope: !5393)
!5415 = !DILocation(line: 4511, column: 67, scope: !5393)
!5416 = !DILocation(line: 4511, column: 7, scope: !5393)
!5417 = !DILocation(line: 4512, column: 13, scope: !5393)
!5418 = !DILocation(line: 4512, column: 7, scope: !5393)
!5419 = !DILocation(line: 4513, column: 13, scope: !5393)
!5420 = !DILocation(line: 4513, column: 7, scope: !5393)
!5421 = !DILocation(line: 4514, column: 5, scope: !5393)
!5422 = !DILocation(line: 4516, column: 7, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4516, column: 7)
!5424 = !DILocation(line: 4516, column: 7, scope: !5344)
!5425 = !DILocation(line: 4517, column: 5, scope: !5423)
!5426 = !DILocation(line: 4517, column: 5, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 4517, column: 5)
!5428 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 4517, column: 5)
!5429 = !DILocation(line: 4517, column: 5, scope: !5428)
!5430 = !DILocalVariable(name: "__o", scope: !5431, file: !3, line: 4517, type: !510)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 4517, column: 5)
!5432 = !DILocation(line: 4517, column: 5, scope: !5431)
!5433 = !DILocalVariable(name: "__len", scope: !5431, file: !3, line: 4517, type: !149)
!5434 = !DILocalVariable(name: "__o1", scope: !5435, file: !3, line: 4517, type: !348)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 4517, column: 5)
!5436 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 4517, column: 5)
!5437 = !DILocation(line: 4517, column: 5, scope: !5435)
!5438 = !DILocation(line: 4517, column: 5, scope: !5436)
!5439 = !DILocation(line: 4519, column: 3, scope: !5344)
!5440 = !DILocation(line: 4521, column: 16, scope: !5344)
!5441 = !DILocation(line: 4521, column: 13, scope: !5344)
!5442 = !DILocation(line: 4523, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4523, column: 7)
!5444 = !DILocation(line: 4523, column: 7, scope: !5344)
!5445 = !DILocation(line: 4524, column: 5, scope: !5443)
!5446 = !DILocation(line: 4524, column: 5, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 4524, column: 5)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 4524, column: 5)
!5449 = !DILocation(line: 4524, column: 5, scope: !5448)
!5450 = !DILocalVariable(name: "__o", scope: !5451, file: !3, line: 4524, type: !510)
!5451 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 4524, column: 5)
!5452 = !DILocation(line: 4524, column: 5, scope: !5451)
!5453 = !DILocalVariable(name: "__len", scope: !5451, file: !3, line: 4524, type: !149)
!5454 = !DILocalVariable(name: "__o1", scope: !5455, file: !3, line: 4524, type: !348)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 4524, column: 5)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 4524, column: 5)
!5457 = !DILocation(line: 4524, column: 5, scope: !5455)
!5458 = !DILocation(line: 4524, column: 5, scope: !5456)
!5459 = !DILocation(line: 4526, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4526, column: 7)
!5461 = !DILocation(line: 4526, column: 7, scope: !5344)
!5462 = !DILocation(line: 4528, column: 7, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 4527, column: 5)
!5464 = !DILocation(line: 4529, column: 11, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 4529, column: 11)
!5466 = !DILocation(line: 4529, column: 11, scope: !5463)
!5467 = !DILocation(line: 4530, column: 9, scope: !5465)
!5468 = !DILocation(line: 4531, column: 5, scope: !5463)
!5469 = !DILocation(line: 4533, column: 7, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4533, column: 7)
!5471 = !DILocation(line: 4533, column: 14, scope: !5470)
!5472 = !DILocation(line: 4533, column: 11, scope: !5470)
!5473 = !DILocation(line: 4533, column: 23, scope: !5470)
!5474 = !DILocation(line: 4533, column: 26, scope: !5470)
!5475 = !DILocation(line: 4533, column: 33, scope: !5470)
!5476 = !DILocation(line: 4533, column: 30, scope: !5470)
!5477 = !DILocation(line: 4533, column: 7, scope: !5344)
!5478 = !DILocation(line: 4534, column: 11, scope: !5470)
!5479 = !DILocation(line: 4534, column: 5, scope: !5470)
!5480 = !DILocation(line: 4536, column: 10, scope: !5344)
!5481 = !DILocation(line: 4536, column: 16, scope: !5344)
!5482 = !DILocation(line: 4536, column: 14, scope: !5344)
!5483 = !DILocation(line: 4536, column: 3, scope: !5344)
!5484 = distinct !DISubprogram(name: "file_ignored", scope: !3, file: !3, line: 2919, type: !568, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5485 = !DILocalVariable(name: "name", arg: 1, scope: !5484, file: !3, line: 2919, type: !146)
!5486 = !DILocation(line: 2919, column: 27, scope: !5484)
!5487 = !DILocation(line: 2921, column: 12, scope: !5484)
!5488 = !DILocation(line: 2921, column: 24, scope: !5484)
!5489 = !DILocation(line: 2922, column: 12, scope: !5484)
!5490 = !DILocation(line: 2922, column: 15, scope: !5484)
!5491 = !DILocation(line: 2922, column: 23, scope: !5484)
!5492 = !DILocation(line: 2923, column: 12, scope: !5484)
!5493 = !DILocation(line: 2923, column: 16, scope: !5484)
!5494 = !DILocation(line: 2923, column: 28, scope: !5484)
!5495 = !DILocation(line: 2923, column: 46, scope: !5484)
!5496 = !DILocation(line: 2923, column: 51, scope: !5484)
!5497 = !DILocation(line: 2923, column: 61, scope: !5484)
!5498 = !DILocation(line: 2923, column: 69, scope: !5484)
!5499 = !DILocation(line: 2923, column: 58, scope: !5484)
!5500 = !DILocation(line: 2924, column: 11, scope: !5484)
!5501 = !DILocation(line: 2924, column: 15, scope: !5484)
!5502 = !DILocation(line: 2924, column: 27, scope: !5484)
!5503 = !DILocation(line: 2925, column: 15, scope: !5484)
!5504 = !DILocation(line: 2925, column: 34, scope: !5484)
!5505 = !DILocation(line: 2925, column: 49, scope: !5484)
!5506 = !DILocation(line: 2925, column: 18, scope: !5484)
!5507 = !DILocation(line: 2926, column: 11, scope: !5484)
!5508 = !DILocation(line: 2926, column: 30, scope: !5484)
!5509 = !DILocation(line: 2926, column: 47, scope: !5484)
!5510 = !DILocation(line: 2926, column: 14, scope: !5484)
!5511 = !DILocation(line: 2921, column: 3, scope: !5484)
!5512 = distinct !DISubprogram(name: "process_signals", scope: !3, file: !3, line: 1312, type: !341, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5513 = !DILocation(line: 1314, column: 3, scope: !5512)
!5514 = !DILocation(line: 1314, column: 10, scope: !5512)
!5515 = !DILocation(line: 1314, column: 27, scope: !5512)
!5516 = !DILocation(line: 1314, column: 30, scope: !5512)
!5517 = !DILocalVariable(name: "sig", scope: !5518, file: !3, line: 1316, type: !27)
!5518 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1315, column: 5)
!5519 = !DILocation(line: 1316, column: 11, scope: !5518)
!5520 = !DILocalVariable(name: "stops", scope: !5518, file: !3, line: 1317, type: !27)
!5521 = !DILocation(line: 1317, column: 11, scope: !5518)
!5522 = !DILocalVariable(name: "oldset", scope: !5518, file: !3, line: 1318, type: !403)
!5523 = !DILocation(line: 1318, column: 16, scope: !5518)
!5524 = !DILocation(line: 1320, column: 11, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1320, column: 11)
!5526 = !DILocation(line: 1320, column: 11, scope: !5518)
!5527 = !DILocation(line: 1321, column: 9, scope: !5525)
!5528 = !DILocation(line: 1322, column: 7, scope: !5518)
!5529 = !DILocation(line: 1324, column: 7, scope: !5518)
!5530 = !DILocation(line: 1328, column: 13, scope: !5518)
!5531 = !DILocation(line: 1328, column: 11, scope: !5518)
!5532 = !DILocation(line: 1329, column: 15, scope: !5518)
!5533 = !DILocation(line: 1329, column: 13, scope: !5518)
!5534 = !DILocation(line: 1334, column: 11, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1334, column: 11)
!5536 = !DILocation(line: 1334, column: 11, scope: !5518)
!5537 = !DILocation(line: 1336, column: 31, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1335, column: 9)
!5539 = !DILocation(line: 1336, column: 37, scope: !5538)
!5540 = !DILocation(line: 1336, column: 29, scope: !5538)
!5541 = !DILocation(line: 1337, column: 15, scope: !5538)
!5542 = !DILocation(line: 1338, column: 9, scope: !5538)
!5543 = !DILocation(line: 1340, column: 17, scope: !5535)
!5544 = !DILocation(line: 1340, column: 9, scope: !5535)
!5545 = !DILocation(line: 1343, column: 14, scope: !5518)
!5546 = !DILocation(line: 1343, column: 7, scope: !5518)
!5547 = !DILocation(line: 1344, column: 7, scope: !5518)
!5548 = distinct !{!5548, !5513, !5549}
!5549 = !DILocation(line: 1348, column: 5, scope: !5512)
!5550 = !DILocation(line: 1349, column: 1, scope: !5512)
!5551 = distinct !DISubprogram(name: "patterns_match", scope: !3, file: !3, line: 2907, type: !659, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5552 = !DILocalVariable(name: "patterns", arg: 1, scope: !5551, file: !3, line: 2907, type: !661)
!5553 = !DILocation(line: 2907, column: 46, scope: !5551)
!5554 = !DILocalVariable(name: "file", arg: 2, scope: !5551, file: !3, line: 2907, type: !146)
!5555 = !DILocation(line: 2907, column: 68, scope: !5551)
!5556 = !DILocalVariable(name: "p", scope: !5551, file: !3, line: 2909, type: !661)
!5557 = !DILocation(line: 2909, column: 32, scope: !5551)
!5558 = !DILocation(line: 2910, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 2910, column: 3)
!5560 = !DILocation(line: 2910, column: 10, scope: !5559)
!5561 = !DILocation(line: 2910, column: 8, scope: !5559)
!5562 = !DILocation(line: 2910, column: 22, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2910, column: 3)
!5564 = !DILocation(line: 2910, column: 3, scope: !5559)
!5565 = !DILocation(line: 2911, column: 18, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2911, column: 9)
!5567 = !DILocation(line: 2911, column: 21, scope: !5566)
!5568 = !DILocation(line: 2911, column: 30, scope: !5566)
!5569 = !DILocation(line: 2911, column: 9, scope: !5566)
!5570 = !DILocation(line: 2911, column: 48, scope: !5566)
!5571 = !DILocation(line: 2911, column: 9, scope: !5563)
!5572 = !DILocation(line: 2912, column: 7, scope: !5566)
!5573 = !DILocation(line: 2911, column: 51, scope: !5566)
!5574 = !DILocation(line: 2910, column: 29, scope: !5563)
!5575 = !DILocation(line: 2910, column: 32, scope: !5563)
!5576 = !DILocation(line: 2910, column: 27, scope: !5563)
!5577 = !DILocation(line: 2910, column: 3, scope: !5563)
!5578 = distinct !{!5578, !5564, !5579}
!5579 = !DILocation(line: 2912, column: 14, scope: !5559)
!5580 = !DILocation(line: 2913, column: 3, scope: !5551)
!5581 = !DILocation(line: 2914, column: 1, scope: !5551)
!5582 = distinct !DISubprogram(name: "quote_name_buf", scope: !3, file: !3, line: 4240, type: !638, scopeLine: 4243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5583 = !DILocalVariable(name: "inbuf", arg: 1, scope: !5582, file: !3, line: 4240, type: !142)
!5584 = !DILocation(line: 4240, column: 24, scope: !5582)
!5585 = !DILocalVariable(name: "bufsize", arg: 2, scope: !5582, file: !3, line: 4240, type: !149)
!5586 = !DILocation(line: 4240, column: 38, scope: !5582)
!5587 = !DILocalVariable(name: "name", arg: 3, scope: !5582, file: !3, line: 4240, type: !143)
!5588 = !DILocation(line: 4240, column: 53, scope: !5582)
!5589 = !DILocalVariable(name: "options", arg: 4, scope: !5582, file: !3, line: 4241, type: !633)
!5590 = !DILocation(line: 4241, column: 47, scope: !5582)
!5591 = !DILocalVariable(name: "needs_general_quoting", arg: 5, scope: !5582, file: !3, line: 4242, type: !27)
!5592 = !DILocation(line: 4242, column: 21, scope: !5582)
!5593 = !DILocalVariable(name: "width", arg: 6, scope: !5582, file: !3, line: 4242, type: !148)
!5594 = !DILocation(line: 4242, column: 52, scope: !5582)
!5595 = !DILocalVariable(name: "pad", arg: 7, scope: !5582, file: !3, line: 4242, type: !640)
!5596 = !DILocation(line: 4242, column: 65, scope: !5582)
!5597 = !DILocalVariable(name: "buf", scope: !5582, file: !3, line: 4244, type: !143)
!5598 = !DILocation(line: 4244, column: 9, scope: !5582)
!5599 = !DILocation(line: 4244, column: 16, scope: !5582)
!5600 = !DILocation(line: 4244, column: 15, scope: !5582)
!5601 = !DILocalVariable(name: "displayed_width", scope: !5582, file: !3, line: 4245, type: !149)
!5602 = !DILocation(line: 4245, column: 10, scope: !5582)
!5603 = !DILocalVariable(name: "len", scope: !5582, file: !3, line: 4246, type: !149)
!5604 = !DILocation(line: 4246, column: 10, scope: !5582)
!5605 = !DILocalVariable(name: "quoted", scope: !5582, file: !3, line: 4247, type: !141)
!5606 = !DILocation(line: 4247, column: 8, scope: !5582)
!5607 = !DILocalVariable(name: "qs", scope: !5582, file: !3, line: 4249, type: !95)
!5608 = !DILocation(line: 4249, column: 22, scope: !5582)
!5609 = !DILocation(line: 4249, column: 46, scope: !5582)
!5610 = !DILocation(line: 4249, column: 27, scope: !5582)
!5611 = !DILocalVariable(name: "needs_further_quoting", scope: !5582, file: !3, line: 4250, type: !141)
!5612 = !DILocation(line: 4250, column: 8, scope: !5582)
!5613 = !DILocation(line: 4250, column: 32, scope: !5582)
!5614 = !DILocation(line: 4251, column: 32, scope: !5582)
!5615 = !DILocation(line: 4251, column: 36, scope: !5582)
!5616 = !DILocation(line: 4251, column: 39, scope: !5582)
!5617 = !DILocation(line: 4252, column: 36, scope: !5582)
!5618 = !DILocation(line: 4252, column: 39, scope: !5582)
!5619 = !DILocation(line: 4252, column: 42, scope: !5582)
!5620 = !DILocation(line: 4253, column: 36, scope: !5582)
!5621 = !DILocation(line: 4253, column: 39, scope: !5582)
!5622 = !DILocation(line: 4253, column: 42, scope: !5582)
!5623 = !DILocation(line: 0, scope: !5582)
!5624 = !DILocation(line: 4255, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4255, column: 7)
!5626 = !DILocation(line: 4255, column: 29, scope: !5625)
!5627 = !DILocation(line: 4255, column: 7, scope: !5582)
!5628 = !DILocation(line: 4257, column: 30, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 4256, column: 5)
!5630 = !DILocation(line: 4257, column: 35, scope: !5629)
!5631 = !DILocation(line: 4257, column: 44, scope: !5629)
!5632 = !DILocation(line: 4257, column: 54, scope: !5629)
!5633 = !DILocation(line: 4257, column: 13, scope: !5629)
!5634 = !DILocation(line: 4257, column: 11, scope: !5629)
!5635 = !DILocation(line: 4258, column: 11, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 4258, column: 11)
!5637 = !DILocation(line: 4258, column: 22, scope: !5636)
!5638 = !DILocation(line: 4258, column: 19, scope: !5636)
!5639 = !DILocation(line: 4258, column: 11, scope: !5629)
!5640 = !DILocation(line: 4260, column: 26, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 4259, column: 9)
!5642 = !DILocation(line: 4260, column: 30, scope: !5641)
!5643 = !DILocation(line: 4260, column: 17, scope: !5641)
!5644 = !DILocation(line: 4260, column: 15, scope: !5641)
!5645 = !DILocation(line: 4261, column: 28, scope: !5641)
!5646 = !DILocation(line: 4261, column: 33, scope: !5641)
!5647 = !DILocation(line: 4261, column: 37, scope: !5641)
!5648 = !DILocation(line: 4261, column: 42, scope: !5641)
!5649 = !DILocation(line: 4261, column: 52, scope: !5641)
!5650 = !DILocation(line: 4261, column: 11, scope: !5641)
!5651 = !DILocation(line: 4262, column: 9, scope: !5641)
!5652 = !DILocation(line: 4264, column: 18, scope: !5629)
!5653 = !DILocation(line: 4264, column: 17, scope: !5629)
!5654 = !DILocation(line: 4264, column: 27, scope: !5629)
!5655 = !DILocation(line: 4264, column: 26, scope: !5629)
!5656 = !DILocation(line: 4264, column: 23, scope: !5629)
!5657 = !DILocation(line: 4264, column: 32, scope: !5629)
!5658 = !DILocation(line: 4264, column: 43, scope: !5629)
!5659 = !DILocation(line: 4264, column: 35, scope: !5629)
!5660 = !DILocation(line: 4264, column: 52, scope: !5629)
!5661 = !DILocation(line: 4264, column: 49, scope: !5629)
!5662 = !DILocation(line: 4264, column: 14, scope: !5629)
!5663 = !DILocation(line: 4265, column: 5, scope: !5629)
!5664 = !DILocation(line: 4266, column: 12, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 4266, column: 12)
!5666 = !DILocation(line: 4266, column: 12, scope: !5625)
!5667 = !DILocation(line: 4268, column: 21, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 4267, column: 5)
!5669 = !DILocation(line: 4268, column: 13, scope: !5668)
!5670 = !DILocation(line: 4268, column: 11, scope: !5668)
!5671 = !DILocation(line: 4269, column: 11, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 4269, column: 11)
!5673 = !DILocation(line: 4269, column: 22, scope: !5672)
!5674 = !DILocation(line: 4269, column: 19, scope: !5672)
!5675 = !DILocation(line: 4269, column: 11, scope: !5668)
!5676 = !DILocation(line: 4270, column: 24, scope: !5672)
!5677 = !DILocation(line: 4270, column: 28, scope: !5672)
!5678 = !DILocation(line: 4270, column: 15, scope: !5672)
!5679 = !DILocation(line: 4270, column: 13, scope: !5672)
!5680 = !DILocation(line: 4270, column: 9, scope: !5672)
!5681 = !DILocation(line: 4271, column: 15, scope: !5668)
!5682 = !DILocation(line: 4271, column: 20, scope: !5668)
!5683 = !DILocation(line: 4271, column: 26, scope: !5668)
!5684 = !DILocation(line: 4271, column: 30, scope: !5668)
!5685 = !DILocation(line: 4271, column: 7, scope: !5668)
!5686 = !DILocation(line: 4273, column: 14, scope: !5668)
!5687 = !DILocation(line: 4274, column: 5, scope: !5668)
!5688 = !DILocation(line: 4277, column: 21, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 4276, column: 5)
!5690 = !DILocation(line: 4277, column: 13, scope: !5689)
!5691 = !DILocation(line: 4277, column: 11, scope: !5689)
!5692 = !DILocation(line: 4278, column: 13, scope: !5689)
!5693 = !DILocation(line: 4278, column: 11, scope: !5689)
!5694 = !DILocation(line: 4279, column: 14, scope: !5689)
!5695 = !DILocation(line: 4282, column: 7, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4282, column: 7)
!5697 = !DILocation(line: 4282, column: 7, scope: !5582)
!5698 = !DILocation(line: 4284, column: 11, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 4284, column: 11)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 4283, column: 5)
!5701 = !DILocation(line: 4284, column: 22, scope: !5699)
!5702 = !DILocation(line: 4284, column: 11, scope: !5700)
!5703 = !DILocalVariable(name: "p", scope: !5704, file: !3, line: 4286, type: !146)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4285, column: 9)
!5705 = !DILocation(line: 4286, column: 23, scope: !5704)
!5706 = !DILocation(line: 4286, column: 27, scope: !5704)
!5707 = !DILocalVariable(name: "plimit", scope: !5704, file: !3, line: 4287, type: !146)
!5708 = !DILocation(line: 4287, column: 23, scope: !5704)
!5709 = !DILocation(line: 4287, column: 32, scope: !5704)
!5710 = !DILocation(line: 4287, column: 38, scope: !5704)
!5711 = !DILocation(line: 4287, column: 36, scope: !5704)
!5712 = !DILocalVariable(name: "q", scope: !5704, file: !3, line: 4288, type: !143)
!5713 = !DILocation(line: 4288, column: 17, scope: !5704)
!5714 = !DILocation(line: 4288, column: 21, scope: !5704)
!5715 = !DILocation(line: 4289, column: 27, scope: !5704)
!5716 = !DILocation(line: 4291, column: 11, scope: !5704)
!5717 = !DILocation(line: 4291, column: 18, scope: !5704)
!5718 = !DILocation(line: 4291, column: 22, scope: !5704)
!5719 = !DILocation(line: 4291, column: 20, scope: !5704)
!5720 = !DILocation(line: 4292, column: 22, scope: !5704)
!5721 = !DILocation(line: 4292, column: 21, scope: !5704)
!5722 = !DILocation(line: 4292, column: 13, scope: !5704)
!5723 = !DILocation(line: 4315, column: 28, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 4293, column: 15)
!5725 = !DILocation(line: 4315, column: 26, scope: !5724)
!5726 = !DILocation(line: 4315, column: 21, scope: !5724)
!5727 = !DILocation(line: 4315, column: 24, scope: !5724)
!5728 = !DILocation(line: 4316, column: 35, scope: !5724)
!5729 = !DILocation(line: 4317, column: 19, scope: !5724)
!5730 = !DILocalVariable(name: "mbstate", scope: !5731, file: !3, line: 4323, type: !641)
!5731 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 4322, column: 19)
!5732 = !DILocation(line: 4323, column: 31, scope: !5731)
!5733 = !DILocation(line: 4324, column: 21, scope: !5731)
!5734 = !DILocalVariable(name: "wc", scope: !5735, file: !3, line: 4326, type: !654)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 4325, column: 23)
!5736 = !DILocation(line: 4326, column: 33, scope: !5735)
!5737 = !DILocalVariable(name: "bytes", scope: !5735, file: !3, line: 4327, type: !149)
!5738 = !DILocation(line: 4327, column: 32, scope: !5735)
!5739 = !DILocalVariable(name: "w", scope: !5735, file: !3, line: 4328, type: !27)
!5740 = !DILocation(line: 4328, column: 29, scope: !5735)
!5741 = !DILocation(line: 4330, column: 47, scope: !5735)
!5742 = !DILocation(line: 4330, column: 50, scope: !5735)
!5743 = !DILocation(line: 4330, column: 59, scope: !5735)
!5744 = !DILocation(line: 4330, column: 57, scope: !5735)
!5745 = !DILocation(line: 4330, column: 33, scope: !5735)
!5746 = !DILocation(line: 4330, column: 31, scope: !5735)
!5747 = !DILocation(line: 4332, column: 29, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4332, column: 29)
!5749 = !DILocation(line: 4332, column: 35, scope: !5748)
!5750 = !DILocation(line: 4332, column: 29, scope: !5735)
!5751 = !DILocation(line: 4337, column: 30, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 4333, column: 27)
!5753 = !DILocation(line: 4338, column: 31, scope: !5752)
!5754 = !DILocation(line: 4338, column: 34, scope: !5752)
!5755 = !DILocation(line: 4339, column: 45, scope: !5752)
!5756 = !DILocation(line: 4340, column: 29, scope: !5752)
!5757 = !DILocation(line: 4343, column: 29, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4343, column: 29)
!5759 = !DILocation(line: 4343, column: 35, scope: !5758)
!5760 = !DILocation(line: 4343, column: 29, scope: !5735)
!5761 = !DILocation(line: 4348, column: 33, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 4344, column: 27)
!5763 = !DILocation(line: 4348, column: 31, scope: !5762)
!5764 = !DILocation(line: 4349, column: 31, scope: !5762)
!5765 = !DILocation(line: 4349, column: 34, scope: !5762)
!5766 = !DILocation(line: 4350, column: 45, scope: !5762)
!5767 = !DILocation(line: 4351, column: 29, scope: !5762)
!5768 = !DILocation(line: 4354, column: 29, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4354, column: 29)
!5770 = !DILocation(line: 4354, column: 35, scope: !5769)
!5771 = !DILocation(line: 4354, column: 29, scope: !5735)
!5772 = !DILocation(line: 4356, column: 33, scope: !5769)
!5773 = !DILocation(line: 4356, column: 27, scope: !5769)
!5774 = !DILocation(line: 4358, column: 38, scope: !5735)
!5775 = !DILocation(line: 4358, column: 29, scope: !5735)
!5776 = !DILocation(line: 4358, column: 27, scope: !5735)
!5777 = !DILocation(line: 4359, column: 29, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4359, column: 29)
!5779 = !DILocation(line: 4359, column: 31, scope: !5778)
!5780 = !DILocation(line: 4359, column: 29, scope: !5735)
!5781 = !DILocation(line: 4363, column: 29, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4360, column: 27)
!5783 = !DILocation(line: 4363, column: 36, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 4363, column: 29)
!5785 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 4363, column: 29)
!5786 = !DILocation(line: 4363, column: 42, scope: !5784)
!5787 = !DILocation(line: 4363, column: 29, scope: !5785)
!5788 = !DILocation(line: 4364, column: 40, scope: !5784)
!5789 = !DILocation(line: 4364, column: 38, scope: !5784)
!5790 = !DILocation(line: 4364, column: 33, scope: !5784)
!5791 = !DILocation(line: 4364, column: 36, scope: !5784)
!5792 = !DILocation(line: 4364, column: 31, scope: !5784)
!5793 = !DILocation(line: 4363, column: 47, scope: !5784)
!5794 = !DILocation(line: 4363, column: 29, scope: !5784)
!5795 = distinct !{!5795, !5787, !5796}
!5796 = !DILocation(line: 4364, column: 40, scope: !5785)
!5797 = !DILocation(line: 4365, column: 48, scope: !5782)
!5798 = !DILocation(line: 4365, column: 45, scope: !5782)
!5799 = !DILocation(line: 4366, column: 27, scope: !5782)
!5800 = !DILocation(line: 4372, column: 34, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 4368, column: 27)
!5802 = !DILocation(line: 4372, column: 31, scope: !5801)
!5803 = !DILocation(line: 4373, column: 31, scope: !5801)
!5804 = !DILocation(line: 4373, column: 34, scope: !5801)
!5805 = !DILocation(line: 4374, column: 45, scope: !5801)
!5806 = !DILocation(line: 4376, column: 23, scope: !5735)
!5807 = !DILocation(line: 4377, column: 30, scope: !5731)
!5808 = !DILocation(line: 4377, column: 28, scope: !5731)
!5809 = distinct !{!5809, !5733, !5810}
!5810 = !DILocation(line: 4377, column: 48, scope: !5731)
!5811 = !DILocation(line: 4379, column: 19, scope: !5724)
!5812 = distinct !{!5812, !5716, !5813}
!5813 = !DILocation(line: 4380, column: 15, scope: !5704)
!5814 = !DILocation(line: 4383, column: 17, scope: !5704)
!5815 = !DILocation(line: 4383, column: 21, scope: !5704)
!5816 = !DILocation(line: 4383, column: 19, scope: !5704)
!5817 = !DILocation(line: 4383, column: 15, scope: !5704)
!5818 = !DILocation(line: 4384, column: 9, scope: !5704)
!5819 = !DILocalVariable(name: "p", scope: !5820, file: !3, line: 4387, type: !143)
!5820 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4386, column: 9)
!5821 = !DILocation(line: 4387, column: 17, scope: !5820)
!5822 = !DILocation(line: 4387, column: 21, scope: !5820)
!5823 = !DILocalVariable(name: "plimit", scope: !5820, file: !3, line: 4388, type: !146)
!5824 = !DILocation(line: 4388, column: 23, scope: !5820)
!5825 = !DILocation(line: 4388, column: 32, scope: !5820)
!5826 = !DILocation(line: 4388, column: 38, scope: !5820)
!5827 = !DILocation(line: 4388, column: 36, scope: !5820)
!5828 = !DILocation(line: 4390, column: 11, scope: !5820)
!5829 = !DILocation(line: 4390, column: 18, scope: !5820)
!5830 = !DILocation(line: 4390, column: 22, scope: !5820)
!5831 = !DILocation(line: 4390, column: 20, scope: !5820)
!5832 = !DILocation(line: 4392, column: 21, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 4392, column: 19)
!5834 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 4391, column: 13)
!5835 = !{!2863, !2863, i64 0}
!5836 = !DILocation(line: 4392, column: 19, scope: !5834)
!5837 = !DILocation(line: 4393, column: 18, scope: !5833)
!5838 = !DILocation(line: 4393, column: 20, scope: !5833)
!5839 = !DILocation(line: 4393, column: 17, scope: !5833)
!5840 = !DILocation(line: 4394, column: 16, scope: !5834)
!5841 = distinct !{!5841, !5828, !5842}
!5842 = !DILocation(line: 4395, column: 13, scope: !5820)
!5843 = !DILocation(line: 4396, column: 29, scope: !5820)
!5844 = !DILocation(line: 4396, column: 27, scope: !5820)
!5845 = !DILocation(line: 4398, column: 5, scope: !5700)
!5846 = !DILocation(line: 4399, column: 12, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 4399, column: 12)
!5848 = !DILocation(line: 4399, column: 18, scope: !5847)
!5849 = !DILocation(line: 4399, column: 12, scope: !5696)
!5850 = !DILocation(line: 4401, column: 11, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 4401, column: 11)
!5852 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 4400, column: 5)
!5853 = !DILocation(line: 4401, column: 22, scope: !5851)
!5854 = !DILocation(line: 4401, column: 11, scope: !5852)
!5855 = !DILocation(line: 4402, column: 38, scope: !5851)
!5856 = !DILocation(line: 4402, column: 43, scope: !5851)
!5857 = !DILocation(line: 4402, column: 27, scope: !5851)
!5858 = !DILocation(line: 4402, column: 25, scope: !5851)
!5859 = !DILocation(line: 4402, column: 9, scope: !5851)
!5860 = !DILocalVariable(name: "p", scope: !5861, file: !3, line: 4405, type: !146)
!5861 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 4404, column: 9)
!5862 = !DILocation(line: 4405, column: 23, scope: !5861)
!5863 = !DILocation(line: 4405, column: 27, scope: !5861)
!5864 = !DILocalVariable(name: "plimit", scope: !5861, file: !3, line: 4406, type: !146)
!5865 = !DILocation(line: 4406, column: 23, scope: !5861)
!5866 = !DILocation(line: 4406, column: 32, scope: !5861)
!5867 = !DILocation(line: 4406, column: 38, scope: !5861)
!5868 = !DILocation(line: 4406, column: 36, scope: !5861)
!5869 = !DILocation(line: 4408, column: 27, scope: !5861)
!5870 = !DILocation(line: 4409, column: 11, scope: !5861)
!5871 = !DILocation(line: 4409, column: 18, scope: !5861)
!5872 = !DILocation(line: 4409, column: 22, scope: !5861)
!5873 = !DILocation(line: 4409, column: 20, scope: !5861)
!5874 = !DILocation(line: 4411, column: 19, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 4411, column: 19)
!5876 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 4410, column: 13)
!5877 = !DILocation(line: 4411, column: 19, scope: !5876)
!5878 = !DILocation(line: 4412, column: 32, scope: !5875)
!5879 = !DILocation(line: 4412, column: 17, scope: !5875)
!5880 = !DILocation(line: 4413, column: 16, scope: !5876)
!5881 = distinct !{!5881, !5870, !5882}
!5882 = !DILocation(line: 4414, column: 13, scope: !5861)
!5883 = !DILocation(line: 4416, column: 5, scope: !5852)
!5884 = !DILocation(line: 4421, column: 11, scope: !5582)
!5885 = !DILocation(line: 4421, column: 39, scope: !5582)
!5886 = !DILocation(line: 4421, column: 42, scope: !5582)
!5887 = !DILocation(line: 4421, column: 58, scope: !5582)
!5888 = !DILocation(line: 4421, column: 63, scope: !5582)
!5889 = !DILocation(line: 4421, column: 61, scope: !5582)
!5890 = !DILocation(line: 4421, column: 4, scope: !5582)
!5891 = !DILocation(line: 4421, column: 8, scope: !5582)
!5892 = !DILocation(line: 4423, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 4423, column: 7)
!5894 = !DILocation(line: 4423, column: 13, scope: !5893)
!5895 = !DILocation(line: 4423, column: 7, scope: !5582)
!5896 = !DILocation(line: 4424, column: 14, scope: !5893)
!5897 = !DILocation(line: 4424, column: 6, scope: !5893)
!5898 = !DILocation(line: 4424, column: 12, scope: !5893)
!5899 = !DILocation(line: 4424, column: 5, scope: !5893)
!5900 = !DILocation(line: 4426, column: 12, scope: !5582)
!5901 = !DILocation(line: 4426, column: 4, scope: !5582)
!5902 = !DILocation(line: 4426, column: 10, scope: !5582)
!5903 = !DILocation(line: 4428, column: 10, scope: !5582)
!5904 = !DILocation(line: 4428, column: 3, scope: !5582)
!5905 = distinct !DISubprogram(name: "print_color_indicator", scope: !3, file: !3, line: 4665, type: !655, scopeLine: 4666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5906 = !DILocalVariable(name: "ind", arg: 1, scope: !5905, file: !3, line: 4665, type: !399)
!5907 = !DILocation(line: 4665, column: 46, scope: !5905)
!5908 = !DILocation(line: 4667, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 4667, column: 7)
!5910 = !DILocation(line: 4667, column: 7, scope: !5905)
!5911 = !DILocation(line: 4670, column: 11, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 4670, column: 11)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 4668, column: 5)
!5914 = !DILocation(line: 4670, column: 11, scope: !5913)
!5915 = !DILocation(line: 4671, column: 9, scope: !5912)
!5916 = !DILocation(line: 4672, column: 7, scope: !5913)
!5917 = !DILocation(line: 4673, column: 22, scope: !5913)
!5918 = !DILocation(line: 4673, column: 7, scope: !5913)
!5919 = !DILocation(line: 4674, column: 7, scope: !5913)
!5920 = !DILocation(line: 4675, column: 5, scope: !5913)
!5921 = !DILocation(line: 4677, column: 10, scope: !5905)
!5922 = !DILocation(line: 4677, column: 14, scope: !5905)
!5923 = !DILocation(line: 4677, column: 3, scope: !5905)
!5924 = distinct !DISubprogram(name: "file_escape", scope: !3, file: !3, line: 4454, type: !657, scopeLine: 4455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5925 = !DILocalVariable(name: "str", arg: 1, scope: !5924, file: !3, line: 4454, type: !146)
!5926 = !DILocation(line: 4454, column: 26, scope: !5924)
!5927 = !DILocalVariable(name: "path", arg: 2, scope: !5924, file: !3, line: 4454, type: !141)
!5928 = !DILocation(line: 4454, column: 36, scope: !5924)
!5929 = !DILocalVariable(name: "esc", scope: !5924, file: !3, line: 4456, type: !143)
!5930 = !DILocation(line: 4456, column: 9, scope: !5924)
!5931 = !DILocation(line: 4456, column: 36, scope: !5924)
!5932 = !DILocation(line: 4456, column: 28, scope: !5924)
!5933 = !DILocation(line: 4456, column: 41, scope: !5924)
!5934 = !DILocation(line: 4456, column: 15, scope: !5924)
!5935 = !DILocalVariable(name: "p", scope: !5924, file: !3, line: 4457, type: !143)
!5936 = !DILocation(line: 4457, column: 9, scope: !5924)
!5937 = !DILocation(line: 4457, column: 13, scope: !5924)
!5938 = !DILocation(line: 4458, column: 3, scope: !5924)
!5939 = !DILocation(line: 4458, column: 11, scope: !5924)
!5940 = !DILocation(line: 4458, column: 10, scope: !5924)
!5941 = !DILocation(line: 4460, column: 11, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 4460, column: 11)
!5943 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 4459, column: 5)
!5944 = !DILocation(line: 4460, column: 16, scope: !5942)
!5945 = !DILocation(line: 4460, column: 19, scope: !5942)
!5946 = !DILocation(line: 4460, column: 11, scope: !5943)
!5947 = !DILocation(line: 4462, column: 13, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4461, column: 9)
!5949 = !DILocation(line: 4462, column: 16, scope: !5948)
!5950 = !DILocation(line: 4463, column: 14, scope: !5948)
!5951 = !DILocation(line: 4464, column: 9, scope: !5948)
!5952 = !DILocation(line: 4465, column: 35, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 4465, column: 16)
!5954 = !DILocation(line: 4465, column: 34, scope: !5953)
!5955 = !DILocation(line: 4465, column: 24, scope: !5953)
!5956 = !DILocation(line: 4465, column: 16, scope: !5953)
!5957 = !DILocation(line: 4465, column: 16, scope: !5942)
!5958 = !DILocation(line: 4466, column: 20, scope: !5953)
!5959 = !DILocation(line: 4466, column: 16, scope: !5953)
!5960 = !DILocation(line: 4466, column: 11, scope: !5953)
!5961 = !DILocation(line: 4466, column: 14, scope: !5953)
!5962 = !DILocation(line: 4466, column: 9, scope: !5953)
!5963 = !DILocation(line: 4468, column: 23, scope: !5953)
!5964 = !DILocation(line: 4468, column: 50, scope: !5953)
!5965 = !DILocation(line: 4468, column: 46, scope: !5953)
!5966 = !DILocation(line: 4468, column: 36, scope: !5953)
!5967 = !DILocation(line: 4468, column: 14, scope: !5953)
!5968 = !DILocation(line: 4468, column: 11, scope: !5953)
!5969 = distinct !{!5969, !5938, !5970}
!5970 = !DILocation(line: 4469, column: 5, scope: !5924)
!5971 = !DILocation(line: 4470, column: 4, scope: !5924)
!5972 = !DILocation(line: 4470, column: 6, scope: !5924)
!5973 = !DILocation(line: 4471, column: 10, scope: !5924)
!5974 = !DILocation(line: 4471, column: 3, scope: !5924)
!5975 = distinct !DISubprogram(name: "to_uchar", scope: !810, file: !810, line: 156, type: !589, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5976 = !DILocalVariable(name: "ch", arg: 1, scope: !5975, file: !810, line: 156, type: !144)
!5977 = !DILocation(line: 156, column: 44, scope: !5975)
!5978 = !DILocation(line: 156, column: 57, scope: !5975)
!5979 = !DILocation(line: 156, column: 50, scope: !5975)
!5980 = distinct !DISubprogram(name: "print_file_name_and_frills", scope: !3, file: !3, line: 4593, type: !735, scopeLine: 4594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!5981 = !DILocalVariable(name: "f", arg: 1, scope: !5980, file: !3, line: 4593, type: !183)
!5982 = !DILocation(line: 4593, column: 52, scope: !5980)
!5983 = !DILocalVariable(name: "start_col", arg: 2, scope: !5980, file: !3, line: 4593, type: !149)
!5984 = !DILocation(line: 4593, column: 62, scope: !5980)
!5985 = !DILocalVariable(name: "buf", scope: !5980, file: !3, line: 4595, type: !622)
!5986 = !DILocation(line: 4595, column: 8, scope: !5980)
!5987 = !DILocation(line: 4597, column: 3, scope: !5980)
!5988 = !DILocation(line: 4599, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4599, column: 7)
!5990 = !DILocation(line: 4599, column: 7, scope: !5980)
!5991 = !DILocation(line: 4600, column: 21, scope: !5989)
!5992 = !DILocation(line: 4600, column: 28, scope: !5989)
!5993 = !DILocation(line: 4600, column: 49, scope: !5989)
!5994 = !DILocation(line: 4601, column: 27, scope: !5989)
!5995 = !DILocation(line: 4601, column: 44, scope: !5989)
!5996 = !DILocation(line: 4601, column: 13, scope: !5989)
!5997 = !DILocation(line: 4600, column: 5, scope: !5989)
!5998 = !DILocation(line: 4603, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4603, column: 7)
!6000 = !DILocation(line: 4603, column: 7, scope: !5980)
!6001 = !DILocation(line: 4604, column: 21, scope: !5999)
!6002 = !DILocation(line: 4604, column: 28, scope: !5999)
!6003 = !DILocation(line: 4604, column: 49, scope: !5999)
!6004 = !DILocation(line: 4605, column: 15, scope: !5999)
!6005 = !DILocation(line: 4605, column: 18, scope: !5999)
!6006 = !DILocation(line: 4605, column: 13, scope: !5999)
!6007 = !DILocation(line: 4606, column: 31, scope: !5999)
!6008 = !DILocation(line: 4606, column: 53, scope: !5999)
!6009 = !DILocation(line: 4606, column: 58, scope: !5999)
!6010 = !DILocation(line: 4607, column: 46, scope: !5999)
!6011 = !DILocation(line: 4606, column: 15, scope: !5999)
!6012 = !DILocation(line: 4604, column: 5, scope: !5999)
!6013 = !DILocation(line: 4609, column: 7, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4609, column: 7)
!6015 = !DILocation(line: 4609, column: 7, scope: !5980)
!6016 = !DILocation(line: 4610, column: 21, scope: !6014)
!6017 = !DILocation(line: 4610, column: 28, scope: !6014)
!6018 = !DILocation(line: 4610, column: 49, scope: !6014)
!6019 = !DILocation(line: 4610, column: 65, scope: !6014)
!6020 = !DILocation(line: 4610, column: 68, scope: !6014)
!6021 = !DILocation(line: 4610, column: 5, scope: !6014)
!6022 = !DILocalVariable(name: "width", scope: !5980, file: !3, line: 4612, type: !149)
!6023 = !DILocation(line: 4612, column: 10, scope: !5980)
!6024 = !DILocation(line: 4612, column: 43, scope: !5980)
!6025 = !DILocation(line: 4612, column: 59, scope: !5980)
!6026 = !DILocation(line: 4612, column: 18, scope: !5980)
!6027 = !DILocation(line: 4614, column: 7, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4614, column: 7)
!6029 = !DILocation(line: 4614, column: 23, scope: !6028)
!6030 = !DILocation(line: 4614, column: 7, scope: !5980)
!6031 = !DILocation(line: 4615, column: 36, scope: !6028)
!6032 = !DILocation(line: 4615, column: 39, scope: !6028)
!6033 = !DILocation(line: 4615, column: 48, scope: !6028)
!6034 = !DILocation(line: 4615, column: 51, scope: !6028)
!6035 = !DILocation(line: 4615, column: 56, scope: !6028)
!6036 = !DILocation(line: 4615, column: 65, scope: !6028)
!6037 = !DILocation(line: 4615, column: 68, scope: !6028)
!6038 = !DILocation(line: 4615, column: 14, scope: !6028)
!6039 = !DILocation(line: 4615, column: 11, scope: !6028)
!6040 = !DILocation(line: 4615, column: 5, scope: !6028)
!6041 = !DILocation(line: 4617, column: 10, scope: !5980)
!6042 = !DILocation(line: 4617, column: 3, scope: !5980)
!6043 = distinct !DISubprogram(name: "print_with_separator", scope: !3, file: !3, line: 4923, type: !749, scopeLine: 4924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6044 = !DILocalVariable(name: "sep", arg: 1, scope: !6043, file: !3, line: 4923, type: !144)
!6045 = !DILocation(line: 4923, column: 28, scope: !6043)
!6046 = !DILocalVariable(name: "filesno", scope: !6043, file: !3, line: 4925, type: !149)
!6047 = !DILocation(line: 4925, column: 10, scope: !6043)
!6048 = !DILocalVariable(name: "pos", scope: !6043, file: !3, line: 4926, type: !149)
!6049 = !DILocation(line: 4926, column: 10, scope: !6043)
!6050 = !DILocation(line: 4928, column: 16, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 4928, column: 3)
!6052 = !DILocation(line: 4928, column: 8, scope: !6051)
!6053 = !DILocation(line: 4928, column: 21, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 4928, column: 3)
!6055 = !DILocation(line: 4928, column: 31, scope: !6054)
!6056 = !DILocation(line: 4928, column: 29, scope: !6054)
!6057 = !DILocation(line: 4928, column: 3, scope: !6051)
!6058 = !DILocalVariable(name: "f", scope: !6059, file: !3, line: 4930, type: !183)
!6059 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 4929, column: 5)
!6060 = !DILocation(line: 4930, column: 30, scope: !6059)
!6061 = !DILocation(line: 4930, column: 34, scope: !6059)
!6062 = !DILocation(line: 4930, column: 46, scope: !6059)
!6063 = !DILocalVariable(name: "len", scope: !6059, file: !3, line: 4931, type: !149)
!6064 = !DILocation(line: 4931, column: 14, scope: !6059)
!6065 = !DILocation(line: 4931, column: 20, scope: !6059)
!6066 = !DILocation(line: 4931, column: 66, scope: !6059)
!6067 = !DILocation(line: 4931, column: 34, scope: !6059)
!6068 = !DILocation(line: 4933, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 4933, column: 11)
!6070 = !DILocation(line: 4933, column: 19, scope: !6069)
!6071 = !DILocation(line: 4933, column: 11, scope: !6059)
!6072 = !DILocalVariable(name: "separator", scope: !6073, file: !3, line: 4935, type: !144)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 4934, column: 9)
!6074 = !DILocation(line: 4935, column: 16, scope: !6073)
!6075 = !DILocation(line: 4937, column: 17, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 4937, column: 15)
!6077 = !DILocation(line: 4938, column: 15, scope: !6076)
!6078 = !DILocation(line: 4938, column: 20, scope: !6076)
!6079 = !DILocation(line: 4938, column: 26, scope: !6076)
!6080 = !DILocation(line: 4938, column: 24, scope: !6076)
!6081 = !DILocation(line: 4938, column: 30, scope: !6076)
!6082 = !DILocation(line: 4938, column: 36, scope: !6076)
!6083 = !DILocation(line: 4938, column: 34, scope: !6076)
!6084 = !DILocation(line: 4939, column: 19, scope: !6076)
!6085 = !DILocation(line: 4939, column: 23, scope: !6076)
!6086 = !DILocation(line: 4939, column: 41, scope: !6076)
!6087 = !DILocation(line: 4939, column: 39, scope: !6076)
!6088 = !DILocation(line: 4939, column: 45, scope: !6076)
!6089 = !DILocation(line: 4939, column: 27, scope: !6076)
!6090 = !DILocation(line: 4937, column: 15, scope: !6073)
!6091 = !DILocation(line: 4941, column: 19, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4940, column: 13)
!6093 = !DILocation(line: 4942, column: 25, scope: !6092)
!6094 = !DILocation(line: 4943, column: 13, scope: !6092)
!6095 = !DILocation(line: 4946, column: 19, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 4945, column: 13)
!6097 = !DILocation(line: 4947, column: 25, scope: !6096)
!6098 = !DILocation(line: 4950, column: 11, scope: !6073)
!6099 = !DILocation(line: 4951, column: 11, scope: !6073)
!6100 = !DILocation(line: 4952, column: 9, scope: !6073)
!6101 = !DILocation(line: 4954, column: 35, scope: !6059)
!6102 = !DILocation(line: 4954, column: 38, scope: !6059)
!6103 = !DILocation(line: 4954, column: 7, scope: !6059)
!6104 = !DILocation(line: 4955, column: 14, scope: !6059)
!6105 = !DILocation(line: 4955, column: 11, scope: !6059)
!6106 = !DILocation(line: 4956, column: 5, scope: !6059)
!6107 = !DILocation(line: 4928, column: 50, scope: !6054)
!6108 = !DILocation(line: 4928, column: 3, scope: !6054)
!6109 = distinct !{!6109, !6057, !6110}
!6110 = !DILocation(line: 4956, column: 5, scope: !6051)
!6111 = !DILocation(line: 4957, column: 3, scope: !6043)
!6112 = !DILocation(line: 4958, column: 1, scope: !6043)
!6113 = distinct !DISubprogram(name: "print_many_per_line", scope: !3, file: !3, line: 4846, type: !341, scopeLine: 4847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6114 = !DILocalVariable(name: "row", scope: !6113, file: !3, line: 4848, type: !149)
!6115 = !DILocation(line: 4848, column: 10, scope: !6113)
!6116 = !DILocalVariable(name: "cols", scope: !6113, file: !3, line: 4849, type: !149)
!6117 = !DILocation(line: 4849, column: 10, scope: !6113)
!6118 = !DILocation(line: 4849, column: 17, scope: !6113)
!6119 = !DILocalVariable(name: "line_fmt", scope: !6113, file: !3, line: 4850, type: !755)
!6120 = !DILocation(line: 4850, column: 29, scope: !6113)
!6121 = !DILocation(line: 4850, column: 41, scope: !6113)
!6122 = !DILocation(line: 4850, column: 53, scope: !6113)
!6123 = !DILocation(line: 4850, column: 58, scope: !6113)
!6124 = !DILocalVariable(name: "rows", scope: !6113, file: !3, line: 4854, type: !149)
!6125 = !DILocation(line: 4854, column: 10, scope: !6113)
!6126 = !DILocation(line: 4854, column: 17, scope: !6113)
!6127 = !DILocation(line: 4854, column: 30, scope: !6113)
!6128 = !DILocation(line: 4854, column: 28, scope: !6113)
!6129 = !DILocation(line: 4854, column: 38, scope: !6113)
!6130 = !DILocation(line: 4854, column: 51, scope: !6113)
!6131 = !DILocation(line: 4854, column: 49, scope: !6113)
!6132 = !DILocation(line: 4854, column: 56, scope: !6113)
!6133 = !DILocation(line: 4854, column: 37, scope: !6113)
!6134 = !DILocation(line: 4854, column: 35, scope: !6113)
!6135 = !DILocation(line: 4856, column: 12, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 4856, column: 3)
!6137 = !DILocation(line: 4856, column: 8, scope: !6136)
!6138 = !DILocation(line: 4856, column: 17, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 4856, column: 3)
!6140 = !DILocation(line: 4856, column: 23, scope: !6139)
!6141 = !DILocation(line: 4856, column: 21, scope: !6139)
!6142 = !DILocation(line: 4856, column: 3, scope: !6136)
!6143 = !DILocalVariable(name: "col", scope: !6144, file: !3, line: 4858, type: !149)
!6144 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4857, column: 5)
!6145 = !DILocation(line: 4858, column: 14, scope: !6144)
!6146 = !DILocalVariable(name: "filesno", scope: !6144, file: !3, line: 4859, type: !149)
!6147 = !DILocation(line: 4859, column: 14, scope: !6144)
!6148 = !DILocation(line: 4859, column: 24, scope: !6144)
!6149 = !DILocalVariable(name: "pos", scope: !6144, file: !3, line: 4860, type: !149)
!6150 = !DILocation(line: 4860, column: 14, scope: !6144)
!6151 = !DILocation(line: 4863, column: 7, scope: !6144)
!6152 = !DILocalVariable(name: "f", scope: !6153, file: !3, line: 4865, type: !183)
!6153 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 4864, column: 9)
!6154 = !DILocation(line: 4865, column: 34, scope: !6153)
!6155 = !DILocation(line: 4865, column: 38, scope: !6153)
!6156 = !DILocation(line: 4865, column: 50, scope: !6153)
!6157 = !DILocalVariable(name: "name_length", scope: !6153, file: !3, line: 4866, type: !149)
!6158 = !DILocation(line: 4866, column: 18, scope: !6153)
!6159 = !DILocation(line: 4866, column: 64, scope: !6153)
!6160 = !DILocation(line: 4866, column: 32, scope: !6153)
!6161 = !DILocalVariable(name: "max_name_length", scope: !6153, file: !3, line: 4867, type: !149)
!6162 = !DILocation(line: 4867, column: 18, scope: !6153)
!6163 = !DILocation(line: 4867, column: 36, scope: !6153)
!6164 = !DILocation(line: 4867, column: 46, scope: !6153)
!6165 = !{!6166, !2443, i64 16}
!6166 = !{!"column_info", !2462, i64 0, !2467, i64 8, !2443, i64 16}
!6167 = !DILocation(line: 4867, column: 57, scope: !6153)
!6168 = !DILocation(line: 4868, column: 39, scope: !6153)
!6169 = !DILocation(line: 4868, column: 42, scope: !6153)
!6170 = !DILocation(line: 4868, column: 11, scope: !6153)
!6171 = !DILocation(line: 4870, column: 22, scope: !6153)
!6172 = !DILocation(line: 4870, column: 19, scope: !6153)
!6173 = !DILocation(line: 4871, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 4871, column: 15)
!6175 = !DILocation(line: 4871, column: 26, scope: !6174)
!6176 = !DILocation(line: 4871, column: 23, scope: !6174)
!6177 = !DILocation(line: 4871, column: 15, scope: !6153)
!6178 = !DILocation(line: 4872, column: 13, scope: !6174)
!6179 = !DILocation(line: 4874, column: 19, scope: !6153)
!6180 = !DILocation(line: 4874, column: 25, scope: !6153)
!6181 = !DILocation(line: 4874, column: 23, scope: !6153)
!6182 = !DILocation(line: 4874, column: 38, scope: !6153)
!6183 = !DILocation(line: 4874, column: 44, scope: !6153)
!6184 = !DILocation(line: 4874, column: 42, scope: !6153)
!6185 = !DILocation(line: 4874, column: 11, scope: !6153)
!6186 = !DILocation(line: 4875, column: 18, scope: !6153)
!6187 = !DILocation(line: 4875, column: 15, scope: !6153)
!6188 = distinct !{!6188, !6151, !6189}
!6189 = !DILocation(line: 4876, column: 9, scope: !6144)
!6190 = !DILocation(line: 4877, column: 7, scope: !6144)
!6191 = !DILocation(line: 4878, column: 5, scope: !6144)
!6192 = !DILocation(line: 4856, column: 32, scope: !6139)
!6193 = !DILocation(line: 4856, column: 3, scope: !6139)
!6194 = distinct !{!6194, !6142, !6195}
!6195 = !DILocation(line: 4878, column: 5, scope: !6136)
!6196 = !DILocation(line: 4879, column: 1, scope: !6113)
!6197 = distinct !DISubprogram(name: "print_horizontal", scope: !3, file: !3, line: 4882, type: !341, scopeLine: 4883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6198 = !DILocalVariable(name: "filesno", scope: !6197, file: !3, line: 4884, type: !149)
!6199 = !DILocation(line: 4884, column: 10, scope: !6197)
!6200 = !DILocalVariable(name: "pos", scope: !6197, file: !3, line: 4885, type: !149)
!6201 = !DILocation(line: 4885, column: 10, scope: !6197)
!6202 = !DILocalVariable(name: "cols", scope: !6197, file: !3, line: 4886, type: !149)
!6203 = !DILocation(line: 4886, column: 10, scope: !6197)
!6204 = !DILocation(line: 4886, column: 17, scope: !6197)
!6205 = !DILocalVariable(name: "line_fmt", scope: !6197, file: !3, line: 4887, type: !755)
!6206 = !DILocation(line: 4887, column: 29, scope: !6197)
!6207 = !DILocation(line: 4887, column: 41, scope: !6197)
!6208 = !DILocation(line: 4887, column: 53, scope: !6197)
!6209 = !DILocation(line: 4887, column: 58, scope: !6197)
!6210 = !DILocalVariable(name: "f", scope: !6197, file: !3, line: 4888, type: !183)
!6211 = !DILocation(line: 4888, column: 26, scope: !6197)
!6212 = !DILocation(line: 4888, column: 30, scope: !6197)
!6213 = !DILocalVariable(name: "name_length", scope: !6197, file: !3, line: 4889, type: !149)
!6214 = !DILocation(line: 4889, column: 10, scope: !6197)
!6215 = !DILocation(line: 4889, column: 56, scope: !6197)
!6216 = !DILocation(line: 4889, column: 24, scope: !6197)
!6217 = !DILocalVariable(name: "max_name_length", scope: !6197, file: !3, line: 4890, type: !149)
!6218 = !DILocation(line: 4890, column: 10, scope: !6197)
!6219 = !DILocation(line: 4890, column: 28, scope: !6197)
!6220 = !DILocation(line: 4890, column: 38, scope: !6197)
!6221 = !DILocation(line: 4893, column: 31, scope: !6197)
!6222 = !DILocation(line: 4893, column: 3, scope: !6197)
!6223 = !DILocation(line: 4896, column: 16, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 4896, column: 3)
!6225 = !DILocation(line: 4896, column: 8, scope: !6224)
!6226 = !DILocation(line: 4896, column: 21, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 4896, column: 3)
!6228 = !DILocation(line: 4896, column: 31, scope: !6227)
!6229 = !DILocation(line: 4896, column: 29, scope: !6227)
!6230 = !DILocation(line: 4896, column: 3, scope: !6224)
!6231 = !DILocalVariable(name: "col", scope: !6232, file: !3, line: 4898, type: !149)
!6232 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 4897, column: 5)
!6233 = !DILocation(line: 4898, column: 14, scope: !6232)
!6234 = !DILocation(line: 4898, column: 20, scope: !6232)
!6235 = !DILocation(line: 4898, column: 30, scope: !6232)
!6236 = !DILocation(line: 4898, column: 28, scope: !6232)
!6237 = !DILocation(line: 4900, column: 11, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 4900, column: 11)
!6239 = !DILocation(line: 4900, column: 15, scope: !6238)
!6240 = !DILocation(line: 4900, column: 11, scope: !6232)
!6241 = !DILocation(line: 4902, column: 11, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 4901, column: 9)
!6243 = !DILocation(line: 4903, column: 15, scope: !6242)
!6244 = !DILocation(line: 4904, column: 9, scope: !6242)
!6245 = !DILocation(line: 4907, column: 19, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 4906, column: 9)
!6247 = !DILocation(line: 4907, column: 25, scope: !6246)
!6248 = !DILocation(line: 4907, column: 23, scope: !6246)
!6249 = !DILocation(line: 4907, column: 38, scope: !6246)
!6250 = !DILocation(line: 4907, column: 44, scope: !6246)
!6251 = !DILocation(line: 4907, column: 42, scope: !6246)
!6252 = !DILocation(line: 4907, column: 11, scope: !6246)
!6253 = !DILocation(line: 4908, column: 18, scope: !6246)
!6254 = !DILocation(line: 4908, column: 15, scope: !6246)
!6255 = !DILocation(line: 4911, column: 11, scope: !6232)
!6256 = !DILocation(line: 4911, column: 23, scope: !6232)
!6257 = !DILocation(line: 4911, column: 9, scope: !6232)
!6258 = !DILocation(line: 4912, column: 35, scope: !6232)
!6259 = !DILocation(line: 4912, column: 38, scope: !6232)
!6260 = !DILocation(line: 4912, column: 7, scope: !6232)
!6261 = !DILocation(line: 4914, column: 53, scope: !6232)
!6262 = !DILocation(line: 4914, column: 21, scope: !6232)
!6263 = !DILocation(line: 4914, column: 19, scope: !6232)
!6264 = !DILocation(line: 4915, column: 25, scope: !6232)
!6265 = !DILocation(line: 4915, column: 35, scope: !6232)
!6266 = !DILocation(line: 4915, column: 43, scope: !6232)
!6267 = !DILocation(line: 4915, column: 23, scope: !6232)
!6268 = !DILocation(line: 4916, column: 5, scope: !6232)
!6269 = !DILocation(line: 4896, column: 43, scope: !6227)
!6270 = !DILocation(line: 4896, column: 3, scope: !6227)
!6271 = distinct !{!6271, !6230, !6272}
!6272 = !DILocation(line: 4916, column: 5, scope: !6224)
!6273 = !DILocation(line: 4917, column: 3, scope: !6197)
!6274 = !DILocation(line: 4918, column: 1, scope: !6197)
!6275 = distinct !DISubprogram(name: "set_normal_color", scope: !3, file: !3, line: 1273, type: !341, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6276 = !DILocation(line: 1275, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1275, column: 7)
!6278 = !DILocation(line: 1275, column: 24, scope: !6277)
!6279 = !DILocation(line: 1275, column: 27, scope: !6277)
!6280 = !DILocation(line: 1275, column: 7, scope: !6275)
!6281 = !DILocation(line: 1277, column: 7, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1276, column: 5)
!6283 = !DILocation(line: 1278, column: 7, scope: !6282)
!6284 = !DILocation(line: 1279, column: 7, scope: !6282)
!6285 = !DILocation(line: 1280, column: 5, scope: !6282)
!6286 = !DILocation(line: 1281, column: 1, scope: !6275)
!6287 = distinct !DISubprogram(name: "print_long_format", scope: !3, file: !3, line: 4020, type: !767, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6288 = !DILocalVariable(name: "f", arg: 1, scope: !6287, file: !3, line: 4020, type: !183)
!6289 = !DILocation(line: 4020, column: 43, scope: !6287)
!6290 = !DILocalVariable(name: "modebuf", scope: !6287, file: !3, line: 4022, type: !769)
!6291 = !DILocation(line: 4022, column: 8, scope: !6287)
!6292 = !DILocalVariable(name: "buf", scope: !6287, file: !3, line: 4023, type: !770)
!6293 = !DILocation(line: 4023, column: 8, scope: !6287)
!6294 = !DILocalVariable(name: "s", scope: !6287, file: !3, line: 4032, type: !149)
!6295 = !DILocation(line: 4032, column: 10, scope: !6287)
!6296 = !DILocalVariable(name: "p", scope: !6287, file: !3, line: 4033, type: !143)
!6297 = !DILocation(line: 4033, column: 9, scope: !6287)
!6298 = !DILocalVariable(name: "when_timespec", scope: !6287, file: !3, line: 4034, type: !214)
!6299 = !DILocation(line: 4034, column: 19, scope: !6287)
!6300 = !DILocalVariable(name: "when_local", scope: !6287, file: !3, line: 4035, type: !786)
!6301 = !DILocation(line: 4035, column: 13, scope: !6287)
!6302 = !DILocation(line: 4039, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4039, column: 7)
!6304 = !DILocation(line: 4039, column: 10, scope: !6303)
!6305 = !DILocation(line: 4039, column: 7, scope: !6287)
!6306 = !DILocation(line: 4040, column: 22, scope: !6303)
!6307 = !DILocation(line: 4040, column: 25, scope: !6303)
!6308 = !DILocation(line: 4040, column: 31, scope: !6303)
!6309 = !DILocation(line: 4040, column: 5, scope: !6303)
!6310 = !DILocation(line: 4043, column: 36, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 4042, column: 5)
!6312 = !DILocation(line: 4043, column: 39, scope: !6311)
!6313 = !DILocation(line: 4043, column: 20, scope: !6311)
!6314 = !DILocation(line: 4043, column: 7, scope: !6311)
!6315 = !DILocation(line: 4043, column: 18, scope: !6311)
!6316 = !DILocation(line: 4044, column: 15, scope: !6311)
!6317 = !DILocation(line: 4044, column: 23, scope: !6311)
!6318 = !DILocation(line: 4044, column: 7, scope: !6311)
!6319 = !DILocation(line: 4045, column: 7, scope: !6311)
!6320 = !DILocation(line: 4045, column: 19, scope: !6311)
!6321 = !DILocation(line: 4047, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4047, column: 7)
!6323 = !DILocation(line: 4047, column: 7, scope: !6287)
!6324 = !DILocation(line: 4048, column: 5, scope: !6322)
!6325 = !DILocation(line: 4048, column: 17, scope: !6322)
!6326 = !DILocation(line: 4049, column: 12, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 4049, column: 12)
!6328 = !DILocation(line: 4049, column: 15, scope: !6327)
!6329 = !DILocation(line: 4049, column: 24, scope: !6327)
!6330 = !DILocation(line: 4049, column: 12, scope: !6322)
!6331 = !DILocation(line: 4050, column: 5, scope: !6327)
!6332 = !DILocation(line: 4050, column: 17, scope: !6327)
!6333 = !DILocation(line: 4051, column: 12, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 4051, column: 12)
!6335 = !DILocation(line: 4051, column: 15, scope: !6334)
!6336 = !DILocation(line: 4051, column: 24, scope: !6334)
!6337 = !DILocation(line: 4051, column: 12, scope: !6327)
!6338 = !DILocation(line: 4052, column: 5, scope: !6334)
!6339 = !DILocation(line: 4052, column: 17, scope: !6334)
!6340 = !DILocation(line: 4054, column: 11, scope: !6287)
!6341 = !DILocation(line: 4054, column: 3, scope: !6287)
!6342 = !DILocation(line: 4057, column: 40, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4055, column: 5)
!6344 = !DILocation(line: 4057, column: 43, scope: !6343)
!6345 = !DILocation(line: 4057, column: 23, scope: !6343)
!6346 = !DILocation(line: 4058, column: 7, scope: !6343)
!6347 = !DILocation(line: 4060, column: 40, scope: !6343)
!6348 = !DILocation(line: 4060, column: 43, scope: !6343)
!6349 = !DILocation(line: 4060, column: 23, scope: !6343)
!6350 = !DILocation(line: 4061, column: 7, scope: !6343)
!6351 = !DILocation(line: 4063, column: 40, scope: !6343)
!6352 = !DILocation(line: 4063, column: 43, scope: !6343)
!6353 = !DILocation(line: 4063, column: 23, scope: !6343)
!6354 = !DILocation(line: 4064, column: 7, scope: !6343)
!6355 = !DILocation(line: 4066, column: 7, scope: !6343)
!6356 = !DILocation(line: 4069, column: 7, scope: !6287)
!6357 = !DILocation(line: 4069, column: 5, scope: !6287)
!6358 = !DILocation(line: 4071, column: 7, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4071, column: 7)
!6360 = !DILocation(line: 4071, column: 7, scope: !6287)
!6361 = !DILocalVariable(name: "hbuf", scope: !6362, file: !3, line: 4073, type: !669)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 4072, column: 5)
!6363 = !DILocation(line: 4073, column: 12, scope: !6362)
!6364 = !DILocation(line: 4074, column: 16, scope: !6362)
!6365 = !DILocation(line: 4074, column: 27, scope: !6362)
!6366 = !DILocation(line: 4075, column: 30, scope: !6362)
!6367 = !DILocation(line: 4075, column: 49, scope: !6362)
!6368 = !DILocation(line: 4075, column: 16, scope: !6362)
!6369 = !DILocation(line: 4074, column: 7, scope: !6362)
!6370 = !DILocation(line: 4078, column: 20, scope: !6362)
!6371 = !DILocation(line: 4078, column: 12, scope: !6362)
!6372 = !DILocation(line: 4078, column: 9, scope: !6362)
!6373 = !DILocation(line: 4079, column: 5, scope: !6362)
!6374 = !DILocation(line: 4081, column: 7, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4081, column: 7)
!6376 = !DILocation(line: 4081, column: 7, scope: !6287)
!6377 = !DILocalVariable(name: "hbuf", scope: !6378, file: !3, line: 4083, type: !622)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 4082, column: 5)
!6379 = !DILocation(line: 4083, column: 12, scope: !6378)
!6380 = !DILocalVariable(name: "blocks", scope: !6378, file: !3, line: 4084, type: !146)
!6381 = !DILocation(line: 4084, column: 19, scope: !6378)
!6382 = !DILocation(line: 4085, column: 12, scope: !6378)
!6383 = !DILocation(line: 4085, column: 15, scope: !6378)
!6384 = !DILocation(line: 4085, column: 10, scope: !6378)
!6385 = !DILocation(line: 4087, column: 28, scope: !6378)
!6386 = !DILocation(line: 4087, column: 50, scope: !6378)
!6387 = !DILocation(line: 4087, column: 56, scope: !6378)
!6388 = !DILocation(line: 4088, column: 43, scope: !6378)
!6389 = !DILocation(line: 4087, column: 12, scope: !6378)
!6390 = !DILocalVariable(name: "pad", scope: !6378, file: !3, line: 4089, type: !27)
!6391 = !DILocation(line: 4089, column: 11, scope: !6378)
!6392 = !DILocation(line: 4090, column: 18, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 4090, column: 7)
!6394 = !DILocation(line: 4090, column: 47, scope: !6393)
!6395 = !DILocation(line: 4090, column: 37, scope: !6393)
!6396 = !DILocation(line: 4090, column: 35, scope: !6393)
!6397 = !DILocation(line: 4090, column: 16, scope: !6393)
!6398 = !DILocation(line: 4090, column: 12, scope: !6393)
!6399 = !DILocation(line: 4090, column: 63, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 4090, column: 7)
!6401 = !DILocation(line: 4090, column: 61, scope: !6400)
!6402 = !DILocation(line: 4090, column: 7, scope: !6393)
!6403 = !DILocation(line: 4091, column: 11, scope: !6400)
!6404 = !DILocation(line: 4091, column: 14, scope: !6400)
!6405 = !DILocation(line: 4091, column: 9, scope: !6400)
!6406 = !DILocation(line: 4090, column: 71, scope: !6400)
!6407 = !DILocation(line: 4090, column: 7, scope: !6400)
!6408 = distinct !{!6408, !6402, !6409}
!6409 = !DILocation(line: 4091, column: 16, scope: !6393)
!6410 = !DILocation(line: 4092, column: 7, scope: !6378)
!6411 = !DILocation(line: 4092, column: 29, scope: !6378)
!6412 = !DILocation(line: 4092, column: 22, scope: !6378)
!6413 = !DILocation(line: 4092, column: 17, scope: !6378)
!6414 = !DILocation(line: 4092, column: 20, scope: !6378)
!6415 = !DILocation(line: 4093, column: 9, scope: !6378)
!6416 = distinct !{!6416, !6410, !6415}
!6417 = !DILocation(line: 4094, column: 7, scope: !6378)
!6418 = !DILocation(line: 4094, column: 13, scope: !6378)
!6419 = !DILocation(line: 4095, column: 5, scope: !6378)
!6420 = !DILocalVariable(name: "hbuf", scope: !6421, file: !3, line: 4100, type: !669)
!6421 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4099, column: 3)
!6422 = !DILocation(line: 4100, column: 10, scope: !6421)
!6423 = !DILocation(line: 4101, column: 14, scope: !6421)
!6424 = !DILocation(line: 4101, column: 28, scope: !6421)
!6425 = !DILocation(line: 4101, column: 37, scope: !6421)
!6426 = !DILocation(line: 4102, column: 16, scope: !6421)
!6427 = !DILocation(line: 4102, column: 19, scope: !6421)
!6428 = !DILocation(line: 4102, column: 14, scope: !6421)
!6429 = !DILocation(line: 4102, column: 46, scope: !6421)
!6430 = !DILocation(line: 4102, column: 49, scope: !6421)
!6431 = !DILocation(line: 4102, column: 54, scope: !6421)
!6432 = !DILocation(line: 4102, column: 64, scope: !6421)
!6433 = !DILocation(line: 4102, column: 35, scope: !6421)
!6434 = !DILocation(line: 4101, column: 5, scope: !6421)
!6435 = !DILocation(line: 4107, column: 16, scope: !6287)
!6436 = !DILocation(line: 4107, column: 8, scope: !6287)
!6437 = !DILocation(line: 4107, column: 5, scope: !6287)
!6438 = !DILocation(line: 4109, column: 3, scope: !6287)
!6439 = !DILocation(line: 4109, column: 3, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 4109, column: 3)
!6441 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4109, column: 3)
!6442 = !DILocation(line: 4109, column: 3, scope: !6441)
!6443 = !DILocation(line: 4109, column: 3, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 4109, column: 3)
!6445 = !DILocation(line: 4111, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4111, column: 7)
!6447 = !DILocation(line: 4111, column: 19, scope: !6446)
!6448 = !DILocation(line: 4111, column: 22, scope: !6446)
!6449 = !DILocation(line: 4111, column: 34, scope: !6446)
!6450 = !DILocation(line: 4111, column: 37, scope: !6446)
!6451 = !DILocation(line: 4111, column: 50, scope: !6446)
!6452 = !DILocation(line: 4111, column: 53, scope: !6446)
!6453 = !DILocation(line: 4111, column: 7, scope: !6287)
!6454 = !DILocation(line: 4113, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 4112, column: 5)
!6456 = !DILocation(line: 4113, column: 7, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4113, column: 7)
!6458 = !DILocation(line: 4115, column: 11, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4115, column: 11)
!6460 = !DILocation(line: 4115, column: 11, scope: !6455)
!6461 = !DILocation(line: 4116, column: 22, scope: !6459)
!6462 = !DILocation(line: 4116, column: 25, scope: !6459)
!6463 = !DILocation(line: 4116, column: 30, scope: !6459)
!6464 = !DILocation(line: 4116, column: 38, scope: !6459)
!6465 = !DILocation(line: 4116, column: 51, scope: !6459)
!6466 = !DILocation(line: 4116, column: 54, scope: !6459)
!6467 = !DILocation(line: 4116, column: 9, scope: !6459)
!6468 = !DILocation(line: 4118, column: 11, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4118, column: 11)
!6470 = !DILocation(line: 4118, column: 11, scope: !6455)
!6471 = !DILocation(line: 4119, column: 23, scope: !6469)
!6472 = !DILocation(line: 4119, column: 26, scope: !6469)
!6473 = !DILocation(line: 4119, column: 31, scope: !6469)
!6474 = !DILocation(line: 4119, column: 39, scope: !6469)
!6475 = !DILocation(line: 4119, column: 52, scope: !6469)
!6476 = !DILocation(line: 4119, column: 55, scope: !6469)
!6477 = !DILocation(line: 4119, column: 9, scope: !6469)
!6478 = !DILocation(line: 4121, column: 11, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4121, column: 11)
!6480 = !DILocation(line: 4121, column: 11, scope: !6455)
!6481 = !DILocation(line: 4122, column: 22, scope: !6479)
!6482 = !DILocation(line: 4122, column: 25, scope: !6479)
!6483 = !DILocation(line: 4122, column: 30, scope: !6479)
!6484 = !DILocation(line: 4122, column: 41, scope: !6479)
!6485 = !DILocation(line: 4122, column: 55, scope: !6479)
!6486 = !DILocation(line: 4122, column: 58, scope: !6479)
!6487 = !DILocation(line: 4122, column: 9, scope: !6479)
!6488 = !DILocation(line: 4124, column: 11, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4124, column: 11)
!6490 = !DILocation(line: 4124, column: 11, scope: !6455)
!6491 = !DILocation(line: 4125, column: 31, scope: !6489)
!6492 = !DILocation(line: 4125, column: 34, scope: !6489)
!6493 = !DILocation(line: 4125, column: 47, scope: !6489)
!6494 = !DILocation(line: 4125, column: 9, scope: !6489)
!6495 = !DILocation(line: 4127, column: 11, scope: !6455)
!6496 = !DILocation(line: 4127, column: 9, scope: !6455)
!6497 = !DILocation(line: 4128, column: 5, scope: !6455)
!6498 = !DILocation(line: 4130, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4130, column: 7)
!6500 = !DILocation(line: 4130, column: 10, scope: !6499)
!6501 = !DILocation(line: 4131, column: 7, scope: !6499)
!6502 = !DILocation(line: 4131, column: 11, scope: !6499)
!6503 = !DILocation(line: 4131, column: 37, scope: !6499)
!6504 = !DILocation(line: 4131, column: 40, scope: !6499)
!6505 = !DILocation(line: 4130, column: 7, scope: !6287)
!6506 = !DILocalVariable(name: "majorbuf", scope: !6507, file: !3, line: 4133, type: !669)
!6507 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4132, column: 5)
!6508 = !DILocation(line: 4133, column: 12, scope: !6507)
!6509 = !DILocalVariable(name: "minorbuf", scope: !6507, file: !3, line: 4134, type: !669)
!6510 = !DILocation(line: 4134, column: 12, scope: !6507)
!6511 = !DILocalVariable(name: "blanks_width", scope: !6507, file: !3, line: 4135, type: !27)
!6512 = !DILocation(line: 4135, column: 11, scope: !6507)
!6513 = !DILocation(line: 4135, column: 27, scope: !6507)
!6514 = !DILocation(line: 4136, column: 30, scope: !6507)
!6515 = !DILocation(line: 4136, column: 56, scope: !6507)
!6516 = !DILocation(line: 4137, column: 32, scope: !6507)
!6517 = !DILocation(line: 4137, column: 30, scope: !6507)
!6518 = !DILocation(line: 4136, column: 27, scope: !6507)
!6519 = !DILocation(line: 4138, column: 16, scope: !6507)
!6520 = !DILocation(line: 4139, column: 16, scope: !6507)
!6521 = !DILocation(line: 4139, column: 44, scope: !6507)
!6522 = !DILocation(line: 4139, column: 42, scope: !6507)
!6523 = !DILocation(line: 4140, column: 27, scope: !6507)
!6524 = !DILocation(line: 4140, column: 52, scope: !6507)
!6525 = !DILocation(line: 4140, column: 16, scope: !6507)
!6526 = !DILocation(line: 4141, column: 16, scope: !6507)
!6527 = !DILocation(line: 4142, column: 27, scope: !6507)
!6528 = !DILocation(line: 4142, column: 52, scope: !6507)
!6529 = !DILocation(line: 4142, column: 16, scope: !6507)
!6530 = !DILocation(line: 4138, column: 7, scope: !6507)
!6531 = !DILocation(line: 4143, column: 12, scope: !6507)
!6532 = !DILocation(line: 4143, column: 28, scope: !6507)
!6533 = !DILocation(line: 4143, column: 9, scope: !6507)
!6534 = !DILocation(line: 4144, column: 5, scope: !6507)
!6535 = !DILocalVariable(name: "hbuf", scope: !6536, file: !3, line: 4147, type: !622)
!6536 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4146, column: 5)
!6537 = !DILocation(line: 4147, column: 12, scope: !6536)
!6538 = !DILocalVariable(name: "size", scope: !6536, file: !3, line: 4148, type: !146)
!6539 = !DILocation(line: 4148, column: 19, scope: !6536)
!6540 = !DILocation(line: 4149, column: 12, scope: !6536)
!6541 = !DILocation(line: 4149, column: 15, scope: !6536)
!6542 = !DILocation(line: 4149, column: 10, scope: !6536)
!6543 = !DILocation(line: 4151, column: 48, scope: !6536)
!6544 = !DILocation(line: 4151, column: 51, scope: !6536)
!6545 = !DILocation(line: 4151, column: 56, scope: !6536)
!6546 = !DILocation(line: 4151, column: 28, scope: !6536)
!6547 = !DILocation(line: 4152, column: 28, scope: !6536)
!6548 = !DILocation(line: 4152, column: 34, scope: !6536)
!6549 = !DILocation(line: 4153, column: 28, scope: !6536)
!6550 = !DILocation(line: 4151, column: 12, scope: !6536)
!6551 = !DILocalVariable(name: "pad", scope: !6536, file: !3, line: 4154, type: !27)
!6552 = !DILocation(line: 4154, column: 11, scope: !6536)
!6553 = !DILocation(line: 4155, column: 18, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 4155, column: 7)
!6555 = !DILocation(line: 4155, column: 46, scope: !6554)
!6556 = !DILocation(line: 4155, column: 36, scope: !6554)
!6557 = !DILocation(line: 4155, column: 34, scope: !6554)
!6558 = !DILocation(line: 4155, column: 16, scope: !6554)
!6559 = !DILocation(line: 4155, column: 12, scope: !6554)
!6560 = !DILocation(line: 4155, column: 60, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 4155, column: 7)
!6562 = !DILocation(line: 4155, column: 58, scope: !6561)
!6563 = !DILocation(line: 4155, column: 7, scope: !6554)
!6564 = !DILocation(line: 4156, column: 11, scope: !6561)
!6565 = !DILocation(line: 4156, column: 14, scope: !6561)
!6566 = !DILocation(line: 4156, column: 9, scope: !6561)
!6567 = !DILocation(line: 4155, column: 68, scope: !6561)
!6568 = !DILocation(line: 4155, column: 7, scope: !6561)
!6569 = distinct !{!6569, !6563, !6570}
!6570 = !DILocation(line: 4156, column: 16, scope: !6554)
!6571 = !DILocation(line: 4157, column: 7, scope: !6536)
!6572 = !DILocation(line: 4157, column: 27, scope: !6536)
!6573 = !DILocation(line: 4157, column: 22, scope: !6536)
!6574 = !DILocation(line: 4157, column: 17, scope: !6536)
!6575 = !DILocation(line: 4157, column: 20, scope: !6536)
!6576 = !DILocation(line: 4158, column: 9, scope: !6536)
!6577 = distinct !{!6577, !6571, !6576}
!6578 = !DILocation(line: 4159, column: 7, scope: !6536)
!6579 = !DILocation(line: 4159, column: 13, scope: !6536)
!6580 = !DILocation(line: 4162, column: 5, scope: !6287)
!6581 = !DILocation(line: 4163, column: 4, scope: !6287)
!6582 = !DILocation(line: 4163, column: 6, scope: !6287)
!6583 = !DILocation(line: 4165, column: 7, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4165, column: 7)
!6585 = !DILocation(line: 4165, column: 10, scope: !6584)
!6586 = !DILocation(line: 4165, column: 18, scope: !6584)
!6587 = !DILocation(line: 4165, column: 35, scope: !6584)
!6588 = !DILocation(line: 4165, column: 59, scope: !6584)
!6589 = !DILocation(line: 4165, column: 21, scope: !6584)
!6590 = !DILocation(line: 4165, column: 7, scope: !6287)
!6591 = !DILocalVariable(name: "six_months_ago", scope: !6592, file: !3, line: 4167, type: !214)
!6592 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4166, column: 5)
!6593 = !DILocation(line: 4167, column: 23, scope: !6592)
!6594 = !DILocalVariable(name: "recent", scope: !6592, file: !3, line: 4168, type: !141)
!6595 = !DILocation(line: 4168, column: 12, scope: !6592)
!6596 = !DILocation(line: 4173, column: 11, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 4173, column: 11)
!6598 = !DILocation(line: 4173, column: 54, scope: !6597)
!6599 = !DILocation(line: 4173, column: 11, scope: !6592)
!6600 = !DILocation(line: 4174, column: 9, scope: !6597)
!6601 = !DILocation(line: 4180, column: 44, scope: !6592)
!6602 = !DILocation(line: 4180, column: 51, scope: !6592)
!6603 = !DILocation(line: 4180, column: 22, scope: !6592)
!6604 = !DILocation(line: 4180, column: 29, scope: !6592)
!6605 = !DILocation(line: 4181, column: 45, scope: !6592)
!6606 = !DILocation(line: 4181, column: 22, scope: !6592)
!6607 = !DILocation(line: 4181, column: 30, scope: !6592)
!6608 = !DILocation(line: 4183, column: 17, scope: !6592)
!6609 = !DILocation(line: 4183, column: 62, scope: !6592)
!6610 = !DILocation(line: 4184, column: 17, scope: !6592)
!6611 = !DILocation(line: 4184, column: 21, scope: !6592)
!6612 = !DILocation(line: 4184, column: 64, scope: !6592)
!6613 = !DILocation(line: 0, scope: !6592)
!6614 = !DILocation(line: 4183, column: 14, scope: !6592)
!6615 = !DILocation(line: 4188, column: 28, scope: !6592)
!6616 = !DILocation(line: 4188, column: 59, scope: !6592)
!6617 = !DILocation(line: 4189, column: 41, scope: !6592)
!6618 = !DILocation(line: 4189, column: 64, scope: !6592)
!6619 = !DILocation(line: 4189, column: 50, scope: !6592)
!6620 = !DILocation(line: 4188, column: 11, scope: !6592)
!6621 = !DILocation(line: 4188, column: 9, scope: !6592)
!6622 = !DILocation(line: 4190, column: 5, scope: !6592)
!6623 = !DILocation(line: 4192, column: 7, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4192, column: 7)
!6625 = !DILocation(line: 4192, column: 9, scope: !6624)
!6626 = !DILocation(line: 4192, column: 14, scope: !6624)
!6627 = !DILocation(line: 4192, column: 13, scope: !6624)
!6628 = !DILocation(line: 4192, column: 7, scope: !6287)
!6629 = !DILocation(line: 4194, column: 12, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 4193, column: 5)
!6631 = !DILocation(line: 4194, column: 9, scope: !6630)
!6632 = !DILocation(line: 4195, column: 9, scope: !6630)
!6633 = !DILocation(line: 4195, column: 12, scope: !6630)
!6634 = !DILocation(line: 4198, column: 8, scope: !6630)
!6635 = !DILocation(line: 4198, column: 10, scope: !6630)
!6636 = !DILocation(line: 4199, column: 5, scope: !6630)
!6637 = !DILocalVariable(name: "hbuf", scope: !6638, file: !3, line: 4204, type: !669)
!6638 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 4201, column: 5)
!6639 = !DILocation(line: 4204, column: 12, scope: !6638)
!6640 = !DILocation(line: 4205, column: 16, scope: !6638)
!6641 = !DILocation(line: 4205, column: 27, scope: !6638)
!6642 = !DILocation(line: 4206, column: 19, scope: !6638)
!6643 = !DILocation(line: 4206, column: 22, scope: !6638)
!6644 = !DILocation(line: 4206, column: 17, scope: !6638)
!6645 = !DILocation(line: 4208, column: 44, scope: !6638)
!6646 = !DILocation(line: 4208, column: 52, scope: !6638)
!6647 = !DILocation(line: 4208, column: 19, scope: !6638)
!6648 = !DILocation(line: 4205, column: 7, scope: !6638)
!6649 = !DILocation(line: 4210, column: 20, scope: !6638)
!6650 = !DILocation(line: 4210, column: 12, scope: !6638)
!6651 = !DILocation(line: 4210, column: 9, scope: !6638)
!6652 = !DILocation(line: 4213, column: 3, scope: !6287)
!6653 = !DILocation(line: 4213, column: 3, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4213, column: 3)
!6655 = !DILocalVariable(name: "w", scope: !6287, file: !3, line: 4214, type: !149)
!6656 = !DILocation(line: 4214, column: 10, scope: !6287)
!6657 = !DILocation(line: 4214, column: 39, scope: !6287)
!6658 = !DILocation(line: 4214, column: 65, scope: !6287)
!6659 = !DILocation(line: 4214, column: 69, scope: !6287)
!6660 = !DILocation(line: 4214, column: 67, scope: !6287)
!6661 = !DILocation(line: 4214, column: 14, scope: !6287)
!6662 = !DILocation(line: 4216, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4216, column: 7)
!6664 = !DILocation(line: 4216, column: 10, scope: !6663)
!6665 = !DILocation(line: 4216, column: 19, scope: !6663)
!6666 = !DILocation(line: 4216, column: 7, scope: !6287)
!6667 = !DILocation(line: 4218, column: 11, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 4218, column: 11)
!6669 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4217, column: 5)
!6670 = !DILocation(line: 4218, column: 14, scope: !6668)
!6671 = !DILocation(line: 4218, column: 11, scope: !6669)
!6672 = !DILocation(line: 4220, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 4219, column: 9)
!6674 = !DILocation(line: 4220, column: 11, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 4220, column: 11)
!6676 = !DILocation(line: 4221, column: 36, scope: !6673)
!6677 = !DILocation(line: 4221, column: 52, scope: !6673)
!6678 = !DILocation(line: 4221, column: 56, scope: !6673)
!6679 = !DILocation(line: 4221, column: 54, scope: !6673)
!6680 = !DILocation(line: 4221, column: 63, scope: !6673)
!6681 = !DILocation(line: 4221, column: 61, scope: !6673)
!6682 = !DILocation(line: 4221, column: 65, scope: !6673)
!6683 = !DILocation(line: 4221, column: 11, scope: !6673)
!6684 = !DILocation(line: 4222, column: 15, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 4222, column: 15)
!6686 = !DILocation(line: 4222, column: 31, scope: !6685)
!6687 = !DILocation(line: 4222, column: 15, scope: !6673)
!6688 = !DILocation(line: 4223, column: 41, scope: !6685)
!6689 = !DILocation(line: 4223, column: 44, scope: !6685)
!6690 = !DILocation(line: 4223, column: 13, scope: !6685)
!6691 = !DILocation(line: 4224, column: 9, scope: !6673)
!6692 = !DILocation(line: 4225, column: 5, scope: !6669)
!6693 = !DILocation(line: 4226, column: 12, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4226, column: 12)
!6695 = !DILocation(line: 4226, column: 28, scope: !6694)
!6696 = !DILocation(line: 4226, column: 12, scope: !6663)
!6697 = !DILocation(line: 4227, column: 27, scope: !6694)
!6698 = !DILocation(line: 4227, column: 30, scope: !6694)
!6699 = !DILocation(line: 4227, column: 39, scope: !6694)
!6700 = !DILocation(line: 4227, column: 42, scope: !6694)
!6701 = !DILocation(line: 4227, column: 47, scope: !6694)
!6702 = !DILocation(line: 4227, column: 56, scope: !6694)
!6703 = !DILocation(line: 4227, column: 59, scope: !6694)
!6704 = !DILocation(line: 4227, column: 5, scope: !6694)
!6705 = !DILocation(line: 4228, column: 1, scope: !6287)
!6706 = distinct !DISubprogram(name: "format_inode", scope: !3, file: !3, line: 4010, type: !737, scopeLine: 4011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6707 = !DILocalVariable(name: "buf", arg: 1, scope: !6706, file: !3, line: 4010, type: !143)
!6708 = !DILocation(line: 4010, column: 21, scope: !6706)
!6709 = !DILocalVariable(name: "buflen", arg: 2, scope: !6706, file: !3, line: 4010, type: !149)
!6710 = !DILocation(line: 4010, column: 33, scope: !6706)
!6711 = !DILocalVariable(name: "f", arg: 3, scope: !6706, file: !3, line: 4010, type: !183)
!6712 = !DILocation(line: 4010, column: 64, scope: !6706)
!6713 = !DILocation(line: 4012, column: 3, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 4012, column: 3)
!6715 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 4012, column: 3)
!6716 = !DILocation(line: 4012, column: 3, scope: !6715)
!6717 = !DILocation(line: 4013, column: 11, scope: !6706)
!6718 = !DILocation(line: 4013, column: 14, scope: !6706)
!6719 = !DILocation(line: 4013, column: 22, scope: !6706)
!6720 = !DILocation(line: 4013, column: 25, scope: !6706)
!6721 = !DILocation(line: 4013, column: 28, scope: !6706)
!6722 = !DILocation(line: 4013, column: 33, scope: !6706)
!6723 = !DILocation(line: 4013, column: 40, scope: !6706)
!6724 = !DILocation(line: 4014, column: 24, scope: !6706)
!6725 = !DILocation(line: 4014, column: 27, scope: !6706)
!6726 = !DILocation(line: 4014, column: 32, scope: !6706)
!6727 = !DILocation(line: 4014, column: 40, scope: !6706)
!6728 = !DILocation(line: 4014, column: 13, scope: !6706)
!6729 = !DILocation(line: 4013, column: 3, scope: !6706)
!6730 = distinct !DISubprogram(name: "format_user", scope: !3, file: !3, line: 3957, type: !776, scopeLine: 3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6731 = !DILocalVariable(name: "u", arg: 1, scope: !6730, file: !3, line: 3957, type: !692)
!6732 = !DILocation(line: 3957, column: 20, scope: !6730)
!6733 = !DILocalVariable(name: "width", arg: 2, scope: !6730, file: !3, line: 3957, type: !27)
!6734 = !DILocation(line: 3957, column: 27, scope: !6730)
!6735 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6730, file: !3, line: 3957, type: !141)
!6736 = !DILocation(line: 3957, column: 39, scope: !6730)
!6737 = !DILocation(line: 3959, column: 27, scope: !6730)
!6738 = !DILocation(line: 3959, column: 25, scope: !6730)
!6739 = !DILocation(line: 3960, column: 26, scope: !6730)
!6740 = !DILocation(line: 3960, column: 56, scope: !6730)
!6741 = !DILocation(line: 3960, column: 47, scope: !6730)
!6742 = !DILocation(line: 3960, column: 61, scope: !6730)
!6743 = !DILocation(line: 3960, column: 64, scope: !6730)
!6744 = !DILocation(line: 3959, column: 3, scope: !6730)
!6745 = !DILocation(line: 3961, column: 1, scope: !6730)
!6746 = distinct !DISubprogram(name: "format_group", scope: !3, file: !3, line: 3966, type: !778, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6747 = !DILocalVariable(name: "g", arg: 1, scope: !6746, file: !3, line: 3966, type: !697)
!6748 = !DILocation(line: 3966, column: 21, scope: !6746)
!6749 = !DILocalVariable(name: "width", arg: 2, scope: !6746, file: !3, line: 3966, type: !27)
!6750 = !DILocation(line: 3966, column: 28, scope: !6746)
!6751 = !DILocalVariable(name: "stat_ok", arg: 3, scope: !6746, file: !3, line: 3966, type: !141)
!6752 = !DILocation(line: 3966, column: 40, scope: !6746)
!6753 = !DILocation(line: 3968, column: 27, scope: !6746)
!6754 = !DILocation(line: 3968, column: 25, scope: !6746)
!6755 = !DILocation(line: 3969, column: 26, scope: !6746)
!6756 = !DILocation(line: 3969, column: 57, scope: !6746)
!6757 = !DILocation(line: 3969, column: 47, scope: !6746)
!6758 = !DILocation(line: 3969, column: 62, scope: !6746)
!6759 = !DILocation(line: 3969, column: 65, scope: !6746)
!6760 = !DILocation(line: 3968, column: 3, scope: !6746)
!6761 = !DILocation(line: 3970, column: 1, scope: !6746)
!6762 = distinct !DISubprogram(name: "format_user_or_group", scope: !3, file: !3, line: 3929, type: !780, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6763 = !DILocalVariable(name: "name", arg: 1, scope: !6762, file: !3, line: 3929, type: !146)
!6764 = !DILocation(line: 3929, column: 35, scope: !6762)
!6765 = !DILocalVariable(name: "id", arg: 2, scope: !6762, file: !3, line: 3929, type: !151)
!6766 = !DILocation(line: 3929, column: 59, scope: !6762)
!6767 = !DILocalVariable(name: "width", arg: 3, scope: !6762, file: !3, line: 3929, type: !27)
!6768 = !DILocation(line: 3929, column: 67, scope: !6762)
!6769 = !DILocalVariable(name: "len", scope: !6762, file: !3, line: 3931, type: !149)
!6770 = !DILocation(line: 3931, column: 10, scope: !6762)
!6771 = !DILocation(line: 3933, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3933, column: 7)
!6773 = !DILocation(line: 3933, column: 7, scope: !6762)
!6774 = !DILocalVariable(name: "width_gap", scope: !6775, file: !3, line: 3935, type: !27)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 3934, column: 5)
!6776 = !DILocation(line: 3935, column: 11, scope: !6775)
!6777 = !DILocation(line: 3935, column: 23, scope: !6775)
!6778 = !DILocation(line: 3935, column: 41, scope: !6775)
!6779 = !DILocation(line: 3935, column: 31, scope: !6775)
!6780 = !DILocation(line: 3935, column: 29, scope: !6775)
!6781 = !DILocalVariable(name: "pad", scope: !6775, file: !3, line: 3936, type: !27)
!6782 = !DILocation(line: 3936, column: 11, scope: !6775)
!6783 = !DILocation(line: 3936, column: 17, scope: !6775)
!6784 = !DILocation(line: 3937, column: 7, scope: !6775)
!6785 = !DILocation(line: 3938, column: 21, scope: !6775)
!6786 = !DILocation(line: 3938, column: 13, scope: !6775)
!6787 = !DILocation(line: 3938, column: 29, scope: !6775)
!6788 = !DILocation(line: 3938, column: 27, scope: !6775)
!6789 = !DILocation(line: 3938, column: 11, scope: !6775)
!6790 = !DILocation(line: 3940, column: 7, scope: !6775)
!6791 = !DILocation(line: 3941, column: 9, scope: !6775)
!6792 = !DILocation(line: 3942, column: 17, scope: !6775)
!6793 = distinct !{!6793, !6790, !6794}
!6794 = !DILocation(line: 3942, column: 19, scope: !6775)
!6795 = !DILocation(line: 3943, column: 5, scope: !6775)
!6796 = !DILocation(line: 3946, column: 24, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 3945, column: 5)
!6798 = !DILocation(line: 3946, column: 31, scope: !6797)
!6799 = !DILocation(line: 3946, column: 7, scope: !6797)
!6800 = !DILocation(line: 3947, column: 13, scope: !6797)
!6801 = !DILocation(line: 3947, column: 11, scope: !6797)
!6802 = !DILocation(line: 3950, column: 16, scope: !6762)
!6803 = !DILocation(line: 3950, column: 20, scope: !6762)
!6804 = !DILocation(line: 3950, column: 13, scope: !6762)
!6805 = !DILocation(line: 3951, column: 1, scope: !6762)
!6806 = distinct !DISubprogram(name: "unsigned_file_size", scope: !3, file: !3, line: 2934, type: !698, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6807 = !DILocalVariable(name: "size", arg: 1, scope: !6806, file: !3, line: 2934, type: !177)
!6808 = !DILocation(line: 2934, column: 27, scope: !6806)
!6809 = !DILocation(line: 2936, column: 10, scope: !6806)
!6810 = !DILocation(line: 2936, column: 18, scope: !6806)
!6811 = !DILocation(line: 2936, column: 23, scope: !6806)
!6812 = !DILocation(line: 2936, column: 17, scope: !6806)
!6813 = !DILocation(line: 2936, column: 28, scope: !6806)
!6814 = !DILocation(line: 2936, column: 15, scope: !6806)
!6815 = !DILocation(line: 2936, column: 3, scope: !6806)
!6816 = distinct !DISubprogram(name: "align_nstrftime", scope: !3, file: !3, line: 3880, type: !782, scopeLine: 3882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6817 = !DILocalVariable(name: "buf", arg: 1, scope: !6816, file: !3, line: 3880, type: !143)
!6818 = !DILocation(line: 3880, column: 24, scope: !6816)
!6819 = !DILocalVariable(name: "size", arg: 2, scope: !6816, file: !3, line: 3880, type: !149)
!6820 = !DILocation(line: 3880, column: 36, scope: !6816)
!6821 = !DILocalVariable(name: "recent", arg: 3, scope: !6816, file: !3, line: 3880, type: !141)
!6822 = !DILocation(line: 3880, column: 47, scope: !6816)
!6823 = !DILocalVariable(name: "tm", arg: 4, scope: !6816, file: !3, line: 3880, type: !784)
!6824 = !DILocation(line: 3880, column: 72, scope: !6816)
!6825 = !DILocalVariable(name: "tz", arg: 5, scope: !6816, file: !3, line: 3881, type: !248)
!6826 = !DILocation(line: 3881, column: 29, scope: !6816)
!6827 = !DILocalVariable(name: "ns", arg: 6, scope: !6816, file: !3, line: 3881, type: !27)
!6828 = !DILocation(line: 3881, column: 37, scope: !6816)
!6829 = !DILocalVariable(name: "nfmt", scope: !6816, file: !3, line: 3883, type: !146)
!6830 = !DILocation(line: 3883, column: 15, scope: !6816)
!6831 = !DILocation(line: 3883, column: 23, scope: !6816)
!6832 = !DILocation(line: 3884, column: 34, scope: !6816)
!6833 = !DILocation(line: 3884, column: 25, scope: !6816)
!6834 = !DILocation(line: 3884, column: 42, scope: !6816)
!6835 = !DILocation(line: 3884, column: 46, scope: !6816)
!6836 = !{!6837, !2437, i64 16}
!6837 = !{!"tm", !2437, i64 0, !2437, i64 4, !2437, i64 8, !2437, i64 12, !2437, i64 16, !2437, i64 20, !2437, i64 24, !2437, i64 28, !2437, i64 32, !2467, i64 40, !2443, i64 48}
!6838 = !DILocation(line: 3885, column: 42, scope: !6816)
!6839 = !DILocation(line: 3885, column: 25, scope: !6816)
!6840 = !DILocation(line: 3886, column: 21, scope: !6816)
!6841 = !DILocation(line: 3886, column: 26, scope: !6816)
!6842 = !DILocation(line: 3886, column: 32, scope: !6816)
!6843 = !DILocation(line: 3886, column: 38, scope: !6816)
!6844 = !DILocation(line: 3886, column: 42, scope: !6816)
!6845 = !DILocation(line: 3886, column: 46, scope: !6816)
!6846 = !DILocation(line: 3886, column: 10, scope: !6816)
!6847 = !DILocation(line: 3886, column: 3, scope: !6816)
!6848 = !DILocation(line: 3897, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 3897, column: 7)
!6850 = !DILocation(line: 3897, column: 13, scope: !6849)
!6851 = !DILocation(line: 3897, column: 7, scope: !1035)
!6852 = !DILocalVariable(name: "epoch", scope: !6853, file: !3, line: 3899, type: !162)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 3898, column: 5)
!6854 = !DILocation(line: 3899, column: 14, scope: !6853)
!6855 = !DILocalVariable(name: "tm", scope: !6853, file: !3, line: 3900, type: !786)
!6856 = !DILocation(line: 3900, column: 17, scope: !6853)
!6857 = !DILocalVariable(name: "buf", scope: !6853, file: !3, line: 3901, type: !802)
!6858 = !DILocation(line: 3901, column: 12, scope: !6853)
!6859 = !DILocation(line: 3910, column: 25, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3910, column: 11)
!6861 = !DILocation(line: 3910, column: 11, scope: !6860)
!6862 = !DILocation(line: 3910, column: 11, scope: !6853)
!6863 = !DILocalVariable(name: "len", scope: !6864, file: !3, line: 3912, type: !149)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 3911, column: 9)
!6865 = !DILocation(line: 3912, column: 18, scope: !6864)
!6866 = !DILocation(line: 3912, column: 41, scope: !6864)
!6867 = !DILocation(line: 3913, column: 46, scope: !6864)
!6868 = !DILocation(line: 3912, column: 24, scope: !6864)
!6869 = !DILocation(line: 3914, column: 15, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 3914, column: 15)
!6871 = !DILocation(line: 3914, column: 19, scope: !6870)
!6872 = !DILocation(line: 3914, column: 15, scope: !6864)
!6873 = !DILocation(line: 3915, column: 32, scope: !6870)
!6874 = !DILocation(line: 3915, column: 37, scope: !6870)
!6875 = !DILocation(line: 3915, column: 21, scope: !6870)
!6876 = !DILocation(line: 3915, column: 19, scope: !6870)
!6877 = !DILocation(line: 3915, column: 13, scope: !6870)
!6878 = !DILocation(line: 3916, column: 9, scope: !6864)
!6879 = !DILocation(line: 3918, column: 11, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3918, column: 11)
!6881 = !DILocation(line: 3918, column: 17, scope: !6880)
!6882 = !DILocation(line: 3918, column: 11, scope: !6853)
!6883 = !DILocation(line: 3919, column: 15, scope: !6880)
!6884 = !DILocation(line: 3919, column: 9, scope: !6880)
!6885 = !DILocation(line: 3920, column: 5, scope: !6853)
!6886 = !DILocation(line: 3922, column: 10, scope: !1035)
!6887 = !DILocation(line: 3922, column: 3, scope: !1035)
!6888 = distinct !DISubprogram(name: "timetostr", scope: !810, file: !810, line: 687, type: !805, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6889 = !DILocalVariable(name: "t", arg: 1, scope: !6888, file: !810, line: 687, type: !162)
!6890 = !DILocation(line: 687, column: 19, scope: !6888)
!6891 = !DILocalVariable(name: "buf", arg: 2, scope: !6888, file: !810, line: 687, type: !143)
!6892 = !DILocation(line: 687, column: 28, scope: !6888)
!6893 = !DILocation(line: 690, column: 24, scope: !6888)
!6894 = !DILocation(line: 690, column: 27, scope: !6888)
!6895 = !DILocation(line: 690, column: 13, scope: !6888)
!6896 = !DILocation(line: 689, column: 3, scope: !6888)
!6897 = distinct !DISubprogram(name: "print_name_with_quoting", scope: !3, file: !3, line: 4540, type: !739, scopeLine: 4544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6898 = !DILocalVariable(name: "f", arg: 1, scope: !6897, file: !3, line: 4540, type: !183)
!6899 = !DILocation(line: 4540, column: 49, scope: !6897)
!6900 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !6897, file: !3, line: 4541, type: !141)
!6901 = !DILocation(line: 4541, column: 31, scope: !6897)
!6902 = !DILocalVariable(name: "stack", arg: 3, scope: !6897, file: !3, line: 4542, type: !510)
!6903 = !DILocation(line: 4542, column: 42, scope: !6897)
!6904 = !DILocalVariable(name: "start_col", arg: 4, scope: !6897, file: !3, line: 4543, type: !149)
!6905 = !DILocation(line: 4543, column: 33, scope: !6897)
!6906 = !DILocalVariable(name: "name", scope: !6897, file: !3, line: 4545, type: !146)
!6907 = !DILocation(line: 4545, column: 15, scope: !6897)
!6908 = !DILocation(line: 4545, column: 22, scope: !6897)
!6909 = !DILocation(line: 4545, column: 39, scope: !6897)
!6910 = !DILocation(line: 4545, column: 42, scope: !6897)
!6911 = !DILocation(line: 4545, column: 53, scope: !6897)
!6912 = !DILocation(line: 4545, column: 56, scope: !6897)
!6913 = !DILocalVariable(name: "color", scope: !6897, file: !3, line: 4547, type: !399)
!6914 = !DILocation(line: 4547, column: 25, scope: !6897)
!6915 = !DILocation(line: 4547, column: 33, scope: !6897)
!6916 = !DILocation(line: 4548, column: 54, scope: !6897)
!6917 = !DILocation(line: 4548, column: 57, scope: !6897)
!6918 = !DILocation(line: 4548, column: 33, scope: !6897)
!6919 = !DILocalVariable(name: "used_color_this_time", scope: !6897, file: !3, line: 4550, type: !141)
!6920 = !DILocation(line: 4550, column: 8, scope: !6897)
!6921 = !DILocation(line: 4550, column: 32, scope: !6897)
!6922 = !DILocation(line: 4551, column: 32, scope: !6897)
!6923 = !DILocation(line: 4551, column: 36, scope: !6897)
!6924 = !DILocation(line: 4551, column: 42, scope: !6897)
!6925 = !DILocation(line: 4551, column: 45, scope: !6897)
!6926 = !DILocation(line: 0, scope: !6897)
!6927 = !DILocalVariable(name: "len", scope: !6897, file: !3, line: 4553, type: !149)
!6928 = !DILocation(line: 4553, column: 10, scope: !6897)
!6929 = !DILocation(line: 4553, column: 28, scope: !6897)
!6930 = !DILocation(line: 4553, column: 34, scope: !6897)
!6931 = !DILocation(line: 4553, column: 60, scope: !6897)
!6932 = !DILocation(line: 4553, column: 63, scope: !6897)
!6933 = !DILocation(line: 4554, column: 28, scope: !6897)
!6934 = !DILocation(line: 4554, column: 36, scope: !6897)
!6935 = !DILocation(line: 4554, column: 35, scope: !6897)
!6936 = !DILocation(line: 4554, column: 52, scope: !6897)
!6937 = !DILocation(line: 4554, column: 59, scope: !6897)
!6938 = !DILocation(line: 4554, column: 62, scope: !6897)
!6939 = !DILocation(line: 4553, column: 16, scope: !6897)
!6940 = !DILocation(line: 4556, column: 3, scope: !6897)
!6941 = !DILocation(line: 4557, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4557, column: 7)
!6943 = !DILocation(line: 4557, column: 7, scope: !6897)
!6944 = !DILocation(line: 4559, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 4558, column: 5)
!6946 = !DILocation(line: 4567, column: 11, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 4567, column: 11)
!6948 = !DILocation(line: 4568, column: 11, scope: !6947)
!6949 = !DILocation(line: 4568, column: 15, scope: !6947)
!6950 = !DILocation(line: 4568, column: 27, scope: !6947)
!6951 = !DILocation(line: 4568, column: 25, scope: !6947)
!6952 = !DILocation(line: 4568, column: 43, scope: !6947)
!6953 = !DILocation(line: 4568, column: 55, scope: !6947)
!6954 = !DILocation(line: 4568, column: 53, scope: !6947)
!6955 = !DILocation(line: 4568, column: 59, scope: !6947)
!6956 = !DILocation(line: 4568, column: 66, scope: !6947)
!6957 = !DILocation(line: 4568, column: 64, scope: !6947)
!6958 = !DILocation(line: 4568, column: 39, scope: !6947)
!6959 = !DILocation(line: 4567, column: 11, scope: !6945)
!6960 = !DILocation(line: 4569, column: 9, scope: !6947)
!6961 = !DILocation(line: 4570, column: 5, scope: !6945)
!6962 = !DILocation(line: 4572, column: 10, scope: !6897)
!6963 = !DILocation(line: 4572, column: 3, scope: !6897)
!6964 = distinct !DISubprogram(name: "print_type_indicator", scope: !3, file: !3, line: 4655, type: !745, scopeLine: 4656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6965 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6964, file: !3, line: 4655, type: !141)
!6966 = !DILocation(line: 4655, column: 28, scope: !6964)
!6967 = !DILocalVariable(name: "mode", arg: 2, scope: !6964, file: !3, line: 4655, type: !228)
!6968 = !DILocation(line: 4655, column: 44, scope: !6964)
!6969 = !DILocalVariable(name: "type", arg: 3, scope: !6964, file: !3, line: 4655, type: !36)
!6970 = !DILocation(line: 4655, column: 64, scope: !6964)
!6971 = !DILocalVariable(name: "c", scope: !6964, file: !3, line: 4657, type: !144)
!6972 = !DILocation(line: 4657, column: 8, scope: !6964)
!6973 = !DILocation(line: 4657, column: 32, scope: !6964)
!6974 = !DILocation(line: 4657, column: 41, scope: !6964)
!6975 = !DILocation(line: 4657, column: 47, scope: !6964)
!6976 = !DILocation(line: 4657, column: 12, scope: !6964)
!6977 = !DILocation(line: 4658, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4658, column: 7)
!6979 = !DILocation(line: 4658, column: 7, scope: !6964)
!6980 = !DILocation(line: 4659, column: 5, scope: !6978)
!6981 = !DILocation(line: 4659, column: 5, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 4659, column: 5)
!6983 = !DILocation(line: 4660, column: 12, scope: !6964)
!6984 = !DILocation(line: 4660, column: 11, scope: !6964)
!6985 = !DILocation(line: 4660, column: 10, scope: !6964)
!6986 = !DILocation(line: 4660, column: 3, scope: !6964)
!6987 = distinct !DISubprogram(name: "get_type_indicator", scope: !3, file: !3, line: 4623, type: !747, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!6988 = !DILocalVariable(name: "stat_ok", arg: 1, scope: !6987, file: !3, line: 4623, type: !141)
!6989 = !DILocation(line: 4623, column: 26, scope: !6987)
!6990 = !DILocalVariable(name: "mode", arg: 2, scope: !6987, file: !3, line: 4623, type: !228)
!6991 = !DILocation(line: 4623, column: 42, scope: !6987)
!6992 = !DILocalVariable(name: "type", arg: 3, scope: !6987, file: !3, line: 4623, type: !36)
!6993 = !DILocation(line: 4623, column: 62, scope: !6987)
!6994 = !DILocalVariable(name: "c", scope: !6987, file: !3, line: 4625, type: !144)
!6995 = !DILocation(line: 4625, column: 8, scope: !6987)
!6996 = !DILocation(line: 4627, column: 7, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 4627, column: 7)
!6998 = !DILocation(line: 4627, column: 7, scope: !6987)
!6999 = !DILocation(line: 4627, column: 17, scope: !6997)
!7000 = !DILocation(line: 4627, column: 34, scope: !6997)
!7001 = !DILocation(line: 4627, column: 39, scope: !6997)
!7002 = !DILocation(line: 4629, column: 11, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 4629, column: 11)
!7004 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 4628, column: 5)
!7005 = !DILocation(line: 4629, column: 19, scope: !7003)
!7006 = !DILocation(line: 4629, column: 22, scope: !7003)
!7007 = !DILocation(line: 4629, column: 38, scope: !7003)
!7008 = !DILocation(line: 4629, column: 50, scope: !7003)
!7009 = !DILocation(line: 4629, column: 54, scope: !7003)
!7010 = !DILocation(line: 4629, column: 59, scope: !7003)
!7011 = !DILocation(line: 4629, column: 11, scope: !7004)
!7012 = !DILocation(line: 4630, column: 11, scope: !7003)
!7013 = !DILocation(line: 4630, column: 9, scope: !7003)
!7014 = !DILocation(line: 4632, column: 11, scope: !7003)
!7015 = !DILocation(line: 4633, column: 5, scope: !7004)
!7016 = !DILocation(line: 4636, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 4636, column: 11)
!7018 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 4635, column: 5)
!7019 = !DILocation(line: 4636, column: 11, scope: !7018)
!7020 = !DILocation(line: 4636, column: 21, scope: !7017)
!7021 = !DILocation(line: 4636, column: 38, scope: !7017)
!7022 = !DILocation(line: 4636, column: 43, scope: !7017)
!7023 = !DILocation(line: 4636, column: 56, scope: !7017)
!7024 = !DILocation(line: 4636, column: 59, scope: !7017)
!7025 = !DILocation(line: 4636, column: 64, scope: !7017)
!7026 = !DILocation(line: 4637, column: 11, scope: !7017)
!7027 = !DILocation(line: 4637, column: 9, scope: !7017)
!7028 = !DILocation(line: 4638, column: 16, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 4638, column: 16)
!7030 = !DILocation(line: 4638, column: 32, scope: !7029)
!7031 = !DILocation(line: 4638, column: 16, scope: !7017)
!7032 = !DILocation(line: 4639, column: 11, scope: !7029)
!7033 = !DILocation(line: 4639, column: 9, scope: !7029)
!7034 = !DILocation(line: 4640, column: 16, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 4640, column: 16)
!7036 = !DILocation(line: 4640, column: 16, scope: !7029)
!7037 = !DILocation(line: 4640, column: 26, scope: !7035)
!7038 = !DILocation(line: 4640, column: 43, scope: !7035)
!7039 = !DILocation(line: 4640, column: 48, scope: !7035)
!7040 = !DILocation(line: 4641, column: 11, scope: !7035)
!7041 = !DILocation(line: 4641, column: 9, scope: !7035)
!7042 = !DILocation(line: 4642, column: 16, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4642, column: 16)
!7044 = !DILocation(line: 4642, column: 16, scope: !7035)
!7045 = !DILocation(line: 4642, column: 26, scope: !7043)
!7046 = !DILocation(line: 4642, column: 44, scope: !7043)
!7047 = !DILocation(line: 4642, column: 49, scope: !7043)
!7048 = !DILocation(line: 4643, column: 11, scope: !7043)
!7049 = !DILocation(line: 4643, column: 9, scope: !7043)
!7050 = !DILocation(line: 4644, column: 16, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 4644, column: 16)
!7052 = !DILocation(line: 4644, column: 16, scope: !7043)
!7053 = !DILocation(line: 4644, column: 26, scope: !7051)
!7054 = !DILocation(line: 4644, column: 44, scope: !7051)
!7055 = !DILocation(line: 4644, column: 49, scope: !7051)
!7056 = !DILocation(line: 4645, column: 11, scope: !7051)
!7057 = !DILocation(line: 4645, column: 9, scope: !7051)
!7058 = !DILocation(line: 4646, column: 16, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 4646, column: 16)
!7060 = !DILocation(line: 4646, column: 24, scope: !7059)
!7061 = !DILocation(line: 4646, column: 16, scope: !7051)
!7062 = !DILocation(line: 4647, column: 11, scope: !7059)
!7063 = !DILocation(line: 4647, column: 9, scope: !7059)
!7064 = !DILocation(line: 4649, column: 11, scope: !7059)
!7065 = !DILocation(line: 4651, column: 10, scope: !6987)
!7066 = !DILocation(line: 4651, column: 3, scope: !6987)
!7067 = !DILocalVariable(name: "f", arg: 1, scope: !1025, file: !3, line: 4682, type: !183)
!7068 = !DILocation(line: 4682, column: 45, scope: !1025)
!7069 = !DILocalVariable(name: "symlink_target", arg: 2, scope: !1025, file: !3, line: 4682, type: !141)
!7070 = !DILocation(line: 4682, column: 53, scope: !1025)
!7071 = !DILocalVariable(name: "type", scope: !1025, file: !3, line: 4684, type: !53)
!7072 = !DILocation(line: 4684, column: 21, scope: !1025)
!7073 = !DILocalVariable(name: "ext", scope: !1025, file: !3, line: 4685, type: !593)
!7074 = !DILocation(line: 4685, column: 26, scope: !1025)
!7075 = !DILocalVariable(name: "len", scope: !1025, file: !3, line: 4686, type: !149)
!7076 = !DILocation(line: 4686, column: 10, scope: !1025)
!7077 = !DILocalVariable(name: "name", scope: !1025, file: !3, line: 4688, type: !146)
!7078 = !DILocation(line: 4688, column: 15, scope: !1025)
!7079 = !DILocalVariable(name: "mode", scope: !1025, file: !3, line: 4689, type: !228)
!7080 = !DILocation(line: 4689, column: 10, scope: !1025)
!7081 = !DILocalVariable(name: "linkok", scope: !1025, file: !3, line: 4690, type: !27)
!7082 = !DILocation(line: 4690, column: 7, scope: !1025)
!7083 = !DILocation(line: 4691, column: 7, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4691, column: 7)
!7085 = !DILocation(line: 4691, column: 7, scope: !1025)
!7086 = !DILocation(line: 4693, column: 14, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 4692, column: 5)
!7088 = !DILocation(line: 4693, column: 17, scope: !7087)
!7089 = !DILocation(line: 4693, column: 12, scope: !7087)
!7090 = !DILocation(line: 4694, column: 14, scope: !7087)
!7091 = !DILocation(line: 4694, column: 17, scope: !7087)
!7092 = !DILocation(line: 4694, column: 12, scope: !7087)
!7093 = !DILocation(line: 4695, column: 16, scope: !7087)
!7094 = !DILocation(line: 4695, column: 19, scope: !7087)
!7095 = !DILocation(line: 4695, column: 14, scope: !7087)
!7096 = !DILocation(line: 4696, column: 5, scope: !7087)
!7097 = !DILocation(line: 4699, column: 14, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 4698, column: 5)
!7099 = !DILocation(line: 4699, column: 17, scope: !7098)
!7100 = !DILocation(line: 4699, column: 12, scope: !7098)
!7101 = !DILocation(line: 4700, column: 14, scope: !7098)
!7102 = !DILocation(line: 4700, column: 12, scope: !7098)
!7103 = !DILocation(line: 4701, column: 16, scope: !7098)
!7104 = !DILocation(line: 4701, column: 19, scope: !7098)
!7105 = !DILocation(line: 4701, column: 14, scope: !7098)
!7106 = !DILocation(line: 4706, column: 7, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4706, column: 7)
!7108 = !DILocation(line: 4706, column: 14, scope: !7107)
!7109 = !DILocation(line: 4706, column: 20, scope: !7107)
!7110 = !DILocation(line: 4706, column: 23, scope: !7107)
!7111 = !DILocation(line: 4706, column: 7, scope: !1025)
!7112 = !DILocation(line: 4707, column: 10, scope: !7107)
!7113 = !DILocation(line: 4707, column: 5, scope: !7107)
!7114 = !DILocation(line: 4708, column: 13, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 4708, column: 12)
!7116 = !DILocation(line: 4708, column: 16, scope: !7115)
!7117 = !DILocation(line: 4708, column: 12, scope: !7107)
!7118 = !DILocation(line: 4711, column: 33, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4709, column: 5)
!7120 = !DILocation(line: 4711, column: 36, scope: !7119)
!7121 = !DILocation(line: 4711, column: 14, scope: !7119)
!7122 = !DILocation(line: 4711, column: 12, scope: !7119)
!7123 = !DILocation(line: 4712, column: 5, scope: !7119)
!7124 = !DILocation(line: 4715, column: 11, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 4715, column: 11)
!7126 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 4714, column: 5)
!7127 = !DILocation(line: 4715, column: 11, scope: !7126)
!7128 = !DILocation(line: 4717, column: 16, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4716, column: 9)
!7130 = !DILocation(line: 4719, column: 16, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 4719, column: 15)
!7132 = !DILocation(line: 4719, column: 21, scope: !7131)
!7133 = !DILocation(line: 4719, column: 32, scope: !7131)
!7134 = !DILocation(line: 4719, column: 37, scope: !7131)
!7135 = !DILocation(line: 4719, column: 40, scope: !7131)
!7136 = !DILocation(line: 4719, column: 15, scope: !7129)
!7137 = !DILocation(line: 4720, column: 18, scope: !7131)
!7138 = !DILocation(line: 4720, column: 13, scope: !7131)
!7139 = !DILocation(line: 4721, column: 21, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 4721, column: 20)
!7141 = !DILocation(line: 4721, column: 26, scope: !7140)
!7142 = !DILocation(line: 4721, column: 37, scope: !7140)
!7143 = !DILocation(line: 4721, column: 42, scope: !7140)
!7144 = !DILocation(line: 4721, column: 45, scope: !7140)
!7145 = !DILocation(line: 4721, column: 20, scope: !7131)
!7146 = !DILocation(line: 4722, column: 18, scope: !7140)
!7147 = !DILocation(line: 4722, column: 13, scope: !7140)
!7148 = !DILocation(line: 4723, column: 20, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 4723, column: 20)
!7150 = !DILocation(line: 4723, column: 39, scope: !7149)
!7151 = !DILocation(line: 4723, column: 42, scope: !7149)
!7152 = !DILocation(line: 4723, column: 45, scope: !7149)
!7153 = !DILocation(line: 4723, column: 20, scope: !7140)
!7154 = !DILocation(line: 4724, column: 18, scope: !7149)
!7155 = !DILocation(line: 4724, column: 13, scope: !7149)
!7156 = !DILocation(line: 4725, column: 21, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4725, column: 20)
!7158 = !DILocation(line: 4725, column: 26, scope: !7157)
!7159 = !DILocation(line: 4725, column: 37, scope: !7157)
!7160 = !DILocation(line: 4725, column: 42, scope: !7157)
!7161 = !DILocation(line: 4725, column: 45, scope: !7157)
!7162 = !DILocation(line: 4725, column: 20, scope: !7149)
!7163 = !DILocation(line: 4726, column: 18, scope: !7157)
!7164 = !DILocation(line: 4726, column: 13, scope: !7157)
!7165 = !DILocation(line: 4727, column: 25, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 4727, column: 20)
!7167 = !DILocation(line: 4727, column: 28, scope: !7166)
!7168 = !DILocation(line: 4727, column: 33, scope: !7166)
!7169 = !DILocation(line: 4727, column: 23, scope: !7166)
!7170 = !DILocation(line: 4727, column: 43, scope: !7166)
!7171 = !DILocation(line: 4727, column: 46, scope: !7166)
!7172 = !DILocation(line: 4727, column: 20, scope: !7157)
!7173 = !DILocation(line: 4728, column: 18, scope: !7166)
!7174 = !DILocation(line: 4728, column: 13, scope: !7166)
!7175 = !DILocation(line: 4729, column: 9, scope: !7129)
!7176 = !DILocation(line: 4730, column: 16, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 4730, column: 16)
!7178 = !DILocation(line: 4730, column: 16, scope: !7125)
!7179 = !DILocation(line: 4732, column: 16, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4731, column: 9)
!7181 = !DILocation(line: 4734, column: 16, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 4734, column: 15)
!7183 = !DILocation(line: 4734, column: 21, scope: !7182)
!7184 = !DILocation(line: 4734, column: 32, scope: !7182)
!7185 = !DILocation(line: 4734, column: 36, scope: !7182)
!7186 = !DILocation(line: 4734, column: 41, scope: !7182)
!7187 = !DILocation(line: 4735, column: 15, scope: !7182)
!7188 = !DILocation(line: 4735, column: 18, scope: !7182)
!7189 = !DILocation(line: 4734, column: 15, scope: !7180)
!7190 = !DILocation(line: 4736, column: 18, scope: !7182)
!7191 = !DILocation(line: 4736, column: 13, scope: !7182)
!7192 = !DILocation(line: 4737, column: 21, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 4737, column: 20)
!7194 = !DILocation(line: 4737, column: 26, scope: !7193)
!7195 = !DILocation(line: 4737, column: 37, scope: !7193)
!7196 = !DILocation(line: 4737, column: 42, scope: !7193)
!7197 = !DILocation(line: 4737, column: 45, scope: !7193)
!7198 = !DILocation(line: 4737, column: 20, scope: !7182)
!7199 = !DILocation(line: 4738, column: 18, scope: !7193)
!7200 = !DILocation(line: 4738, column: 13, scope: !7193)
!7201 = !DILocation(line: 4739, column: 21, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 4739, column: 20)
!7203 = !DILocation(line: 4739, column: 26, scope: !7202)
!7204 = !DILocation(line: 4739, column: 37, scope: !7202)
!7205 = !DILocation(line: 4739, column: 42, scope: !7202)
!7206 = !DILocation(line: 4739, column: 45, scope: !7202)
!7207 = !DILocation(line: 4739, column: 20, scope: !7193)
!7208 = !DILocation(line: 4740, column: 18, scope: !7202)
!7209 = !DILocation(line: 4740, column: 13, scope: !7202)
!7210 = !DILocation(line: 4741, column: 9, scope: !7180)
!7211 = !DILocation(line: 4742, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4742, column: 16)
!7213 = !DILocation(line: 4742, column: 16, scope: !7177)
!7214 = !DILocation(line: 4743, column: 14, scope: !7212)
!7215 = !DILocation(line: 4743, column: 9, scope: !7212)
!7216 = !DILocation(line: 4744, column: 16, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 4744, column: 16)
!7218 = !DILocation(line: 4744, column: 16, scope: !7212)
!7219 = !DILocation(line: 4745, column: 14, scope: !7217)
!7220 = !DILocation(line: 4745, column: 9, scope: !7217)
!7221 = !DILocation(line: 4746, column: 16, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 4746, column: 16)
!7223 = !DILocation(line: 4746, column: 16, scope: !7217)
!7224 = !DILocation(line: 4747, column: 14, scope: !7222)
!7225 = !DILocation(line: 4747, column: 9, scope: !7222)
!7226 = !DILocation(line: 4748, column: 16, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 4748, column: 16)
!7228 = !DILocation(line: 4748, column: 16, scope: !7222)
!7229 = !DILocation(line: 4749, column: 14, scope: !7227)
!7230 = !DILocation(line: 4749, column: 9, scope: !7227)
!7231 = !DILocation(line: 4750, column: 16, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 4750, column: 16)
!7233 = !DILocation(line: 4750, column: 16, scope: !7227)
!7234 = !DILocation(line: 4751, column: 14, scope: !7232)
!7235 = !DILocation(line: 4751, column: 9, scope: !7232)
!7236 = !DILocation(line: 4757, column: 16, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 4755, column: 9)
!7238 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 4752, column: 16)
!7239 = !DILocation(line: 4762, column: 7, scope: !1025)
!7240 = !DILocation(line: 4763, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4763, column: 7)
!7242 = !DILocation(line: 4763, column: 12, scope: !7241)
!7243 = !DILocation(line: 4763, column: 7, scope: !1025)
!7244 = !DILocation(line: 4767, column: 21, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4764, column: 5)
!7246 = !DILocation(line: 4767, column: 13, scope: !7245)
!7247 = !DILocation(line: 4767, column: 11, scope: !7245)
!7248 = !DILocation(line: 4768, column: 15, scope: !7245)
!7249 = !DILocation(line: 4768, column: 12, scope: !7245)
!7250 = !DILocation(line: 4769, column: 18, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 4769, column: 7)
!7252 = !DILocation(line: 4769, column: 16, scope: !7251)
!7253 = !DILocation(line: 4769, column: 12, scope: !7251)
!7254 = !DILocation(line: 4769, column: 34, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 4769, column: 7)
!7256 = !DILocation(line: 4769, column: 38, scope: !7255)
!7257 = !DILocation(line: 4769, column: 7, scope: !7251)
!7258 = !DILocation(line: 4771, column: 15, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4771, column: 15)
!7260 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 4770, column: 9)
!7261 = !DILocation(line: 4771, column: 20, scope: !7259)
!7262 = !DILocation(line: 4771, column: 24, scope: !7259)
!7263 = !{!3481, !2467, i64 0}
!7264 = !DILocation(line: 4771, column: 31, scope: !7259)
!7265 = !DILocation(line: 4771, column: 28, scope: !7259)
!7266 = !DILocation(line: 4772, column: 15, scope: !7259)
!7267 = !DILocation(line: 4772, column: 33, scope: !7259)
!7268 = !DILocation(line: 4772, column: 40, scope: !7259)
!7269 = !DILocation(line: 4772, column: 45, scope: !7259)
!7270 = !DILocation(line: 4772, column: 49, scope: !7259)
!7271 = !DILocation(line: 4772, column: 38, scope: !7259)
!7272 = !DILocation(line: 4772, column: 54, scope: !7259)
!7273 = !DILocation(line: 4772, column: 59, scope: !7259)
!7274 = !DILocation(line: 4772, column: 63, scope: !7259)
!7275 = !DILocation(line: 4773, column: 33, scope: !7259)
!7276 = !DILocation(line: 4773, column: 38, scope: !7259)
!7277 = !DILocation(line: 4773, column: 42, scope: !7259)
!7278 = !DILocation(line: 4772, column: 18, scope: !7259)
!7279 = !DILocation(line: 4773, column: 47, scope: !7259)
!7280 = !DILocation(line: 4771, column: 15, scope: !7260)
!7281 = !DILocation(line: 4774, column: 13, scope: !7259)
!7282 = !DILocation(line: 4775, column: 9, scope: !7260)
!7283 = !DILocation(line: 4769, column: 53, scope: !7255)
!7284 = !DILocation(line: 4769, column: 58, scope: !7255)
!7285 = !DILocation(line: 4769, column: 51, scope: !7255)
!7286 = !DILocation(line: 4769, column: 7, scope: !7255)
!7287 = distinct !{!7287, !7257, !7288}
!7288 = !DILocation(line: 4775, column: 9, scope: !7251)
!7289 = !DILocation(line: 4776, column: 5, scope: !7245)
!7290 = !DILocation(line: 4779, column: 7, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !1025, file: !3, line: 4779, column: 7)
!7292 = !DILocation(line: 4779, column: 12, scope: !7291)
!7293 = !DILocation(line: 4779, column: 22, scope: !7291)
!7294 = !DILocation(line: 4779, column: 26, scope: !7291)
!7295 = !DILocation(line: 4779, column: 7, scope: !1025)
!7296 = !DILocation(line: 4781, column: 11, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 4781, column: 11)
!7298 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 4780, column: 5)
!7299 = !DILocation(line: 4781, column: 37, scope: !7297)
!7300 = !DILocation(line: 4781, column: 40, scope: !7297)
!7301 = !DILocation(line: 4781, column: 11, scope: !7298)
!7302 = !DILocation(line: 4782, column: 14, scope: !7297)
!7303 = !DILocation(line: 4782, column: 9, scope: !7297)
!7304 = !DILocation(line: 4783, column: 5, scope: !7298)
!7305 = !DILocalVariable(name: "s", scope: !1025, file: !3, line: 4785, type: !744)
!7306 = !DILocation(line: 4785, column: 31, scope: !1025)
!7307 = !DILocation(line: 4786, column: 7, scope: !1025)
!7308 = !DILocation(line: 4786, column: 15, scope: !1025)
!7309 = !DILocation(line: 4786, column: 20, scope: !1025)
!7310 = !DILocation(line: 4786, column: 44, scope: !1025)
!7311 = !DILocation(line: 4786, column: 28, scope: !1025)
!7312 = !DILocation(line: 4788, column: 10, scope: !1025)
!7313 = !DILocation(line: 4788, column: 13, scope: !1025)
!7314 = !DILocation(line: 4788, column: 22, scope: !1025)
!7315 = !DILocation(line: 4788, column: 3, scope: !1025)
!7316 = distinct !DISubprogram(name: "calculate_columns", scope: !3, file: !3, line: 5077, type: !763, scopeLine: 5078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7317 = !DILocalVariable(name: "by_columns", arg: 1, scope: !7316, file: !3, line: 5077, type: !141)
!7318 = !DILocation(line: 5077, column: 25, scope: !7316)
!7319 = !DILocalVariable(name: "filesno", scope: !7316, file: !3, line: 5079, type: !149)
!7320 = !DILocation(line: 5079, column: 10, scope: !7316)
!7321 = !DILocalVariable(name: "cols", scope: !7316, file: !3, line: 5080, type: !149)
!7322 = !DILocation(line: 5080, column: 10, scope: !7316)
!7323 = !DILocalVariable(name: "max_cols", scope: !7316, file: !3, line: 5085, type: !149)
!7324 = !DILocation(line: 5085, column: 10, scope: !7316)
!7325 = !DILocation(line: 5085, column: 21, scope: !7316)
!7326 = !DILocation(line: 5087, column: 3, scope: !7316)
!7327 = !DILocation(line: 5090, column: 16, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5090, column: 3)
!7329 = !DILocation(line: 5090, column: 8, scope: !7328)
!7330 = !DILocation(line: 5090, column: 21, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 5090, column: 3)
!7332 = !DILocation(line: 5090, column: 31, scope: !7331)
!7333 = !DILocation(line: 5090, column: 29, scope: !7331)
!7334 = !DILocation(line: 5090, column: 3, scope: !7328)
!7335 = !DILocalVariable(name: "f", scope: !7336, file: !3, line: 5092, type: !183)
!7336 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 5091, column: 5)
!7337 = !DILocation(line: 5092, column: 30, scope: !7336)
!7338 = !DILocation(line: 5092, column: 34, scope: !7336)
!7339 = !DILocation(line: 5092, column: 46, scope: !7336)
!7340 = !DILocalVariable(name: "name_length", scope: !7336, file: !3, line: 5093, type: !149)
!7341 = !DILocation(line: 5093, column: 14, scope: !7336)
!7342 = !DILocation(line: 5093, column: 60, scope: !7336)
!7343 = !DILocation(line: 5093, column: 28, scope: !7336)
!7344 = !DILocalVariable(name: "i", scope: !7345, file: !3, line: 5095, type: !149)
!7345 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 5095, column: 7)
!7346 = !DILocation(line: 5095, column: 19, scope: !7345)
!7347 = !DILocation(line: 5095, column: 12, scope: !7345)
!7348 = !DILocation(line: 5095, column: 26, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 5095, column: 7)
!7350 = !DILocation(line: 5095, column: 30, scope: !7349)
!7351 = !DILocation(line: 5095, column: 28, scope: !7349)
!7352 = !DILocation(line: 5095, column: 7, scope: !7345)
!7353 = !DILocation(line: 5097, column: 15, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 5097, column: 15)
!7355 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 5096, column: 9)
!7356 = !DILocation(line: 5097, column: 27, scope: !7354)
!7357 = !DILocation(line: 5097, column: 30, scope: !7354)
!7358 = !{!6166, !2462, i64 0}
!7359 = !DILocation(line: 5097, column: 15, scope: !7355)
!7360 = !DILocalVariable(name: "idx", scope: !7361, file: !3, line: 5099, type: !149)
!7361 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 5098, column: 13)
!7362 = !DILocation(line: 5099, column: 22, scope: !7361)
!7363 = !DILocation(line: 5099, column: 29, scope: !7361)
!7364 = !DILocation(line: 5100, column: 31, scope: !7361)
!7365 = !DILocation(line: 5100, column: 43, scope: !7361)
!7366 = !DILocation(line: 5100, column: 56, scope: !7361)
!7367 = !DILocation(line: 5100, column: 54, scope: !7361)
!7368 = !DILocation(line: 5100, column: 62, scope: !7361)
!7369 = !DILocation(line: 5100, column: 64, scope: !7361)
!7370 = !DILocation(line: 5100, column: 59, scope: !7361)
!7371 = !DILocation(line: 5100, column: 39, scope: !7361)
!7372 = !DILocation(line: 5101, column: 31, scope: !7361)
!7373 = !DILocation(line: 5101, column: 42, scope: !7361)
!7374 = !DILocation(line: 5101, column: 44, scope: !7361)
!7375 = !DILocation(line: 5101, column: 39, scope: !7361)
!7376 = !DILocalVariable(name: "real_length", scope: !7361, file: !3, line: 5102, type: !149)
!7377 = !DILocation(line: 5102, column: 22, scope: !7361)
!7378 = !DILocation(line: 5102, column: 36, scope: !7361)
!7379 = !DILocation(line: 5102, column: 51, scope: !7361)
!7380 = !DILocation(line: 5102, column: 58, scope: !7361)
!7381 = !DILocation(line: 5102, column: 55, scope: !7361)
!7382 = !DILocation(line: 5102, column: 50, scope: !7361)
!7383 = !DILocation(line: 5102, column: 48, scope: !7361)
!7384 = !DILocation(line: 5104, column: 19, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 5104, column: 19)
!7386 = !DILocation(line: 5104, column: 31, scope: !7385)
!7387 = !DILocation(line: 5104, column: 34, scope: !7385)
!7388 = !DILocation(line: 5104, column: 42, scope: !7385)
!7389 = !DILocation(line: 5104, column: 49, scope: !7385)
!7390 = !DILocation(line: 5104, column: 47, scope: !7385)
!7391 = !DILocation(line: 5104, column: 19, scope: !7361)
!7392 = !DILocation(line: 5106, column: 47, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 5105, column: 17)
!7394 = !DILocation(line: 5107, column: 49, scope: !7393)
!7395 = !DILocation(line: 5107, column: 61, scope: !7393)
!7396 = !DILocation(line: 5107, column: 64, scope: !7393)
!7397 = !DILocation(line: 5107, column: 72, scope: !7393)
!7398 = !DILocation(line: 5107, column: 47, scope: !7393)
!7399 = !DILocation(line: 5106, column: 19, scope: !7393)
!7400 = !DILocation(line: 5106, column: 31, scope: !7393)
!7401 = !DILocation(line: 5106, column: 34, scope: !7393)
!7402 = !DILocation(line: 5106, column: 43, scope: !7393)
!7403 = !{!6166, !2467, i64 8}
!7404 = !DILocation(line: 5108, column: 49, scope: !7393)
!7405 = !DILocation(line: 5108, column: 19, scope: !7393)
!7406 = !DILocation(line: 5108, column: 31, scope: !7393)
!7407 = !DILocation(line: 5108, column: 34, scope: !7393)
!7408 = !DILocation(line: 5108, column: 42, scope: !7393)
!7409 = !DILocation(line: 5108, column: 47, scope: !7393)
!7410 = !DILocation(line: 5109, column: 47, scope: !7393)
!7411 = !DILocation(line: 5109, column: 59, scope: !7393)
!7412 = !DILocation(line: 5109, column: 62, scope: !7393)
!7413 = !DILocation(line: 5110, column: 49, scope: !7393)
!7414 = !DILocation(line: 5110, column: 47, scope: !7393)
!7415 = !DILocation(line: 5109, column: 19, scope: !7393)
!7416 = !DILocation(line: 5109, column: 31, scope: !7393)
!7417 = !DILocation(line: 5109, column: 34, scope: !7393)
!7418 = !DILocation(line: 5109, column: 44, scope: !7393)
!7419 = !DILocation(line: 5111, column: 17, scope: !7393)
!7420 = !DILocation(line: 5112, column: 13, scope: !7361)
!7421 = !DILocation(line: 5113, column: 9, scope: !7355)
!7422 = !DILocation(line: 5095, column: 40, scope: !7349)
!7423 = !DILocation(line: 5095, column: 7, scope: !7349)
!7424 = distinct !{!7424, !7352, !7425}
!7425 = !DILocation(line: 5113, column: 9, scope: !7345)
!7426 = !DILocation(line: 5114, column: 5, scope: !7336)
!7427 = !DILocation(line: 5090, column: 43, scope: !7331)
!7428 = !DILocation(line: 5090, column: 3, scope: !7331)
!7429 = distinct !{!7429, !7334, !7430}
!7430 = !DILocation(line: 5114, column: 5, scope: !7328)
!7431 = !DILocation(line: 5117, column: 15, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5117, column: 3)
!7433 = !DILocation(line: 5117, column: 13, scope: !7432)
!7434 = !DILocation(line: 5117, column: 8, scope: !7432)
!7435 = !DILocation(line: 5117, column: 29, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 5117, column: 3)
!7437 = !DILocation(line: 5117, column: 27, scope: !7436)
!7438 = !DILocation(line: 5117, column: 3, scope: !7432)
!7439 = !DILocation(line: 5119, column: 11, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 5119, column: 11)
!7441 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 5118, column: 5)
!7442 = !DILocation(line: 5119, column: 23, scope: !7440)
!7443 = !DILocation(line: 5119, column: 28, scope: !7440)
!7444 = !DILocation(line: 5119, column: 33, scope: !7440)
!7445 = !DILocation(line: 5119, column: 11, scope: !7441)
!7446 = !DILocation(line: 5120, column: 9, scope: !7440)
!7447 = !DILocation(line: 5121, column: 5, scope: !7441)
!7448 = !DILocation(line: 5117, column: 35, scope: !7436)
!7449 = !DILocation(line: 5117, column: 3, scope: !7436)
!7450 = distinct !{!7450, !7438, !7451}
!7451 = !DILocation(line: 5121, column: 5, scope: !7432)
!7452 = !DILocation(line: 5123, column: 10, scope: !7316)
!7453 = !DILocation(line: 5123, column: 3, scope: !7316)
!7454 = distinct !DISubprogram(name: "length_of_file_name_and_frills", scope: !3, file: !3, line: 4813, type: !751, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7455 = !DILocalVariable(name: "f", arg: 1, scope: !7454, file: !3, line: 4813, type: !183)
!7456 = !DILocation(line: 4813, column: 56, scope: !7454)
!7457 = !DILocalVariable(name: "len", scope: !7454, file: !3, line: 4815, type: !149)
!7458 = !DILocation(line: 4815, column: 10, scope: !7454)
!7459 = !DILocalVariable(name: "buf", scope: !7454, file: !3, line: 4816, type: !622)
!7460 = !DILocation(line: 4816, column: 8, scope: !7454)
!7461 = !DILocation(line: 4818, column: 7, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4818, column: 7)
!7463 = !DILocation(line: 4818, column: 7, scope: !7454)
!7464 = !DILocation(line: 4819, column: 17, scope: !7462)
!7465 = !DILocation(line: 4819, column: 24, scope: !7462)
!7466 = !DILocation(line: 4820, column: 38, scope: !7462)
!7467 = !DILocation(line: 4820, column: 41, scope: !7462)
!7468 = !DILocation(line: 4820, column: 46, scope: !7462)
!7469 = !DILocation(line: 4820, column: 54, scope: !7462)
!7470 = !DILocation(line: 4820, column: 27, scope: !7462)
!7471 = !DILocation(line: 4820, column: 19, scope: !7462)
!7472 = !DILocation(line: 4821, column: 19, scope: !7462)
!7473 = !DILocation(line: 4819, column: 14, scope: !7462)
!7474 = !DILocation(line: 4819, column: 9, scope: !7462)
!7475 = !DILocation(line: 4819, column: 5, scope: !7462)
!7476 = !DILocation(line: 4823, column: 7, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4823, column: 7)
!7478 = !DILocation(line: 4823, column: 7, scope: !7454)
!7479 = !DILocation(line: 4824, column: 17, scope: !7477)
!7480 = !DILocation(line: 4824, column: 24, scope: !7477)
!7481 = !DILocation(line: 4825, column: 29, scope: !7477)
!7482 = !DILocation(line: 4825, column: 32, scope: !7477)
!7483 = !DILocation(line: 4825, column: 27, scope: !7477)
!7484 = !DILocation(line: 4826, column: 45, scope: !7477)
!7485 = !DILocation(line: 4826, column: 67, scope: !7477)
!7486 = !DILocation(line: 4827, column: 45, scope: !7477)
!7487 = !DILocation(line: 4828, column: 45, scope: !7477)
!7488 = !DILocation(line: 4826, column: 29, scope: !7477)
!7489 = !DILocation(line: 4825, column: 19, scope: !7477)
!7490 = !DILocation(line: 4829, column: 19, scope: !7477)
!7491 = !DILocation(line: 4824, column: 14, scope: !7477)
!7492 = !DILocation(line: 4824, column: 9, scope: !7477)
!7493 = !DILocation(line: 4824, column: 5, scope: !7477)
!7494 = !DILocation(line: 4831, column: 7, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4831, column: 7)
!7496 = !DILocation(line: 4831, column: 7, scope: !7454)
!7497 = !DILocation(line: 4832, column: 17, scope: !7495)
!7498 = !DILocation(line: 4832, column: 24, scope: !7495)
!7499 = !DILocation(line: 4832, column: 49, scope: !7495)
!7500 = !DILocation(line: 4832, column: 52, scope: !7495)
!7501 = !DILocation(line: 4832, column: 41, scope: !7495)
!7502 = !DILocation(line: 4832, column: 64, scope: !7495)
!7503 = !DILocation(line: 4832, column: 14, scope: !7495)
!7504 = !DILocation(line: 4832, column: 9, scope: !7495)
!7505 = !DILocation(line: 4832, column: 5, scope: !7495)
!7506 = !DILocation(line: 4834, column: 28, scope: !7454)
!7507 = !DILocation(line: 4834, column: 31, scope: !7454)
!7508 = !DILocation(line: 4834, column: 37, scope: !7454)
!7509 = !DILocation(line: 4834, column: 63, scope: !7454)
!7510 = !DILocation(line: 4834, column: 66, scope: !7454)
!7511 = !DILocation(line: 4834, column: 10, scope: !7454)
!7512 = !DILocation(line: 4834, column: 7, scope: !7454)
!7513 = !DILocation(line: 4836, column: 7, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4836, column: 7)
!7515 = !DILocation(line: 4836, column: 23, scope: !7514)
!7516 = !DILocation(line: 4836, column: 7, scope: !7454)
!7517 = !DILocalVariable(name: "c", scope: !7518, file: !3, line: 4838, type: !144)
!7518 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 4837, column: 5)
!7519 = !DILocation(line: 4838, column: 12, scope: !7518)
!7520 = !DILocation(line: 4838, column: 36, scope: !7518)
!7521 = !DILocation(line: 4838, column: 39, scope: !7518)
!7522 = !DILocation(line: 4838, column: 48, scope: !7518)
!7523 = !DILocation(line: 4838, column: 51, scope: !7518)
!7524 = !DILocation(line: 4838, column: 56, scope: !7518)
!7525 = !DILocation(line: 4838, column: 65, scope: !7518)
!7526 = !DILocation(line: 4838, column: 68, scope: !7518)
!7527 = !DILocation(line: 4838, column: 16, scope: !7518)
!7528 = !DILocation(line: 4839, column: 15, scope: !7518)
!7529 = !DILocation(line: 4839, column: 17, scope: !7518)
!7530 = !DILocation(line: 4839, column: 14, scope: !7518)
!7531 = !DILocation(line: 4839, column: 11, scope: !7518)
!7532 = !DILocation(line: 4840, column: 5, scope: !7518)
!7533 = !DILocation(line: 4842, column: 10, scope: !7454)
!7534 = !DILocation(line: 4842, column: 3, scope: !7454)
!7535 = distinct !DISubprogram(name: "indent", scope: !3, file: !3, line: 4964, type: !765, scopeLine: 4965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7536 = !DILocalVariable(name: "from", arg: 1, scope: !7535, file: !3, line: 4964, type: !149)
!7537 = !DILocation(line: 4964, column: 16, scope: !7535)
!7538 = !DILocalVariable(name: "to", arg: 2, scope: !7535, file: !3, line: 4964, type: !149)
!7539 = !DILocation(line: 4964, column: 29, scope: !7535)
!7540 = !DILocation(line: 4966, column: 3, scope: !7535)
!7541 = !DILocation(line: 4966, column: 10, scope: !7535)
!7542 = !DILocation(line: 4966, column: 17, scope: !7535)
!7543 = !DILocation(line: 4966, column: 15, scope: !7535)
!7544 = !DILocation(line: 4968, column: 11, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 4968, column: 11)
!7546 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 4967, column: 5)
!7547 = !DILocation(line: 4968, column: 19, scope: !7545)
!7548 = !DILocation(line: 4968, column: 24, scope: !7545)
!7549 = !DILocation(line: 4968, column: 27, scope: !7545)
!7550 = !DILocation(line: 4968, column: 32, scope: !7545)
!7551 = !DILocation(line: 4968, column: 30, scope: !7545)
!7552 = !DILocation(line: 4968, column: 43, scope: !7545)
!7553 = !DILocation(line: 4968, column: 48, scope: !7545)
!7554 = !DILocation(line: 4968, column: 55, scope: !7545)
!7555 = !DILocation(line: 4968, column: 53, scope: !7545)
!7556 = !DILocation(line: 4968, column: 40, scope: !7545)
!7557 = !DILocation(line: 4968, column: 11, scope: !7546)
!7558 = !DILocation(line: 4970, column: 11, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4969, column: 9)
!7560 = !DILocation(line: 4971, column: 19, scope: !7559)
!7561 = !DILocation(line: 4971, column: 29, scope: !7559)
!7562 = !DILocation(line: 4971, column: 36, scope: !7559)
!7563 = !DILocation(line: 4971, column: 34, scope: !7559)
!7564 = !DILocation(line: 4971, column: 27, scope: !7559)
!7565 = !DILocation(line: 4971, column: 16, scope: !7559)
!7566 = !DILocation(line: 4972, column: 9, scope: !7559)
!7567 = !DILocation(line: 4975, column: 11, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 4974, column: 9)
!7569 = !DILocation(line: 4976, column: 15, scope: !7568)
!7570 = distinct !{!7570, !7540, !7571}
!7571 = !DILocation(line: 4978, column: 5, scope: !7535)
!7572 = !DILocation(line: 4979, column: 1, scope: !7535)
!7573 = distinct !DISubprogram(name: "quote_name_width", scope: !3, file: !3, line: 4432, type: !753, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7574 = !DILocalVariable(name: "name", arg: 1, scope: !7573, file: !3, line: 4432, type: !146)
!7575 = !DILocation(line: 4432, column: 31, scope: !7573)
!7576 = !DILocalVariable(name: "options", arg: 2, scope: !7573, file: !3, line: 4432, type: !633)
!7577 = !DILocation(line: 4432, column: 67, scope: !7573)
!7578 = !DILocalVariable(name: "needs_general_quoting", arg: 3, scope: !7573, file: !3, line: 4433, type: !27)
!7579 = !DILocation(line: 4433, column: 23, scope: !7573)
!7580 = !DILocalVariable(name: "smallbuf", scope: !7573, file: !3, line: 4435, type: !635)
!7581 = !DILocation(line: 4435, column: 8, scope: !7573)
!7582 = !DILocalVariable(name: "buf", scope: !7573, file: !3, line: 4436, type: !143)
!7583 = !DILocation(line: 4436, column: 9, scope: !7573)
!7584 = !DILocation(line: 4436, column: 15, scope: !7573)
!7585 = !DILocalVariable(name: "width", scope: !7573, file: !3, line: 4437, type: !149)
!7586 = !DILocation(line: 4437, column: 10, scope: !7573)
!7587 = !DILocalVariable(name: "pad", scope: !7573, file: !3, line: 4438, type: !141)
!7588 = !DILocation(line: 4438, column: 8, scope: !7573)
!7589 = !DILocation(line: 4440, column: 51, scope: !7573)
!7590 = !DILocation(line: 4440, column: 57, scope: !7573)
!7591 = !DILocation(line: 4441, column: 19, scope: !7573)
!7592 = !DILocation(line: 4440, column: 3, scope: !7573)
!7593 = !DILocation(line: 4443, column: 7, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 4443, column: 7)
!7595 = !DILocation(line: 4443, column: 14, scope: !7594)
!7596 = !DILocation(line: 4443, column: 11, scope: !7594)
!7597 = !DILocation(line: 4443, column: 23, scope: !7594)
!7598 = !DILocation(line: 4443, column: 26, scope: !7594)
!7599 = !DILocation(line: 4443, column: 33, scope: !7594)
!7600 = !DILocation(line: 4443, column: 30, scope: !7594)
!7601 = !DILocation(line: 4443, column: 7, scope: !7573)
!7602 = !DILocation(line: 4444, column: 11, scope: !7594)
!7603 = !DILocation(line: 4444, column: 5, scope: !7594)
!7604 = !DILocation(line: 4446, column: 12, scope: !7573)
!7605 = !DILocation(line: 4446, column: 9, scope: !7573)
!7606 = !DILocation(line: 4448, column: 10, scope: !7573)
!7607 = !DILocation(line: 4448, column: 3, scope: !7573)
!7608 = !DILocalVariable(name: "i", scope: !1028, file: !3, line: 5011, type: !149)
!7609 = !DILocation(line: 5011, column: 10, scope: !1028)
!7610 = !DILocalVariable(name: "max_cols", scope: !1028, file: !3, line: 5012, type: !149)
!7611 = !DILocation(line: 5012, column: 10, scope: !1028)
!7612 = !DILocation(line: 5012, column: 21, scope: !1028)
!7613 = !DILocation(line: 5017, column: 7, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 5017, column: 7)
!7615 = !DILocation(line: 5017, column: 27, scope: !7614)
!7616 = !DILocation(line: 5017, column: 25, scope: !7614)
!7617 = !DILocation(line: 5017, column: 7, scope: !1028)
!7618 = !DILocalVariable(name: "new_column_info_alloc", scope: !7619, file: !3, line: 5019, type: !149)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 5018, column: 5)
!7620 = !DILocation(line: 5019, column: 14, scope: !7619)
!7621 = !DILocalVariable(name: "p", scope: !7619, file: !3, line: 5020, type: !148)
!7622 = !DILocation(line: 5020, column: 15, scope: !7619)
!7623 = !DILocation(line: 5022, column: 11, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5022, column: 11)
!7625 = !DILocation(line: 5022, column: 22, scope: !7624)
!7626 = !DILocation(line: 5022, column: 30, scope: !7624)
!7627 = !DILocation(line: 5022, column: 20, scope: !7624)
!7628 = !DILocation(line: 5022, column: 11, scope: !7619)
!7629 = !DILocation(line: 5029, column: 36, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 5023, column: 9)
!7631 = !DILocation(line: 5029, column: 49, scope: !7630)
!7632 = !DILocation(line: 5029, column: 25, scope: !7630)
!7633 = !DILocation(line: 5029, column: 23, scope: !7630)
!7634 = !DILocation(line: 5031, column: 39, scope: !7630)
!7635 = !DILocation(line: 5031, column: 37, scope: !7630)
!7636 = !DILocation(line: 5031, column: 33, scope: !7630)
!7637 = !DILocation(line: 5032, column: 9, scope: !7630)
!7638 = !DILocation(line: 5035, column: 36, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 5034, column: 9)
!7640 = !DILocation(line: 5035, column: 49, scope: !7639)
!7641 = !DILocation(line: 5035, column: 25, scope: !7639)
!7642 = !DILocation(line: 5035, column: 23, scope: !7639)
!7643 = !DILocation(line: 5036, column: 35, scope: !7639)
!7644 = !DILocation(line: 5036, column: 33, scope: !7639)
!7645 = !DILocalVariable(name: "column_info_growth", scope: !7646, file: !3, line: 5044, type: !149)
!7646 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5043, column: 7)
!7647 = !DILocation(line: 5044, column: 16, scope: !7646)
!7648 = !DILocation(line: 5044, column: 37, scope: !7646)
!7649 = !DILocation(line: 5044, column: 61, scope: !7646)
!7650 = !DILocation(line: 5044, column: 59, scope: !7646)
!7651 = !DILocalVariable(name: "s", scope: !7646, file: !3, line: 5045, type: !149)
!7652 = !DILocation(line: 5045, column: 16, scope: !7646)
!7653 = !DILocation(line: 5045, column: 20, scope: !7646)
!7654 = !DILocation(line: 5045, column: 38, scope: !7646)
!7655 = !DILocation(line: 5045, column: 44, scope: !7646)
!7656 = !DILocation(line: 5045, column: 42, scope: !7646)
!7657 = !DILocalVariable(name: "t", scope: !7646, file: !3, line: 5046, type: !149)
!7658 = !DILocation(line: 5046, column: 16, scope: !7646)
!7659 = !DILocation(line: 5046, column: 20, scope: !7646)
!7660 = !DILocation(line: 5046, column: 24, scope: !7646)
!7661 = !DILocation(line: 5046, column: 22, scope: !7646)
!7662 = !DILocation(line: 5047, column: 13, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 5047, column: 13)
!7664 = !DILocation(line: 5047, column: 17, scope: !7663)
!7665 = !DILocation(line: 5047, column: 15, scope: !7663)
!7666 = !DILocation(line: 5047, column: 39, scope: !7663)
!7667 = !DILocation(line: 5047, column: 42, scope: !7663)
!7668 = !DILocation(line: 5047, column: 46, scope: !7663)
!7669 = !DILocation(line: 5047, column: 44, scope: !7663)
!7670 = !DILocation(line: 5047, column: 68, scope: !7663)
!7671 = !DILocation(line: 5047, column: 65, scope: !7663)
!7672 = !DILocation(line: 5047, column: 13, scope: !7646)
!7673 = !DILocation(line: 5048, column: 11, scope: !7663)
!7674 = !DILocation(line: 5049, column: 23, scope: !7646)
!7675 = !DILocation(line: 5049, column: 25, scope: !7646)
!7676 = !DILocation(line: 5049, column: 13, scope: !7646)
!7677 = !DILocation(line: 5049, column: 11, scope: !7646)
!7678 = !DILocation(line: 5053, column: 16, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5053, column: 7)
!7680 = !DILocation(line: 5053, column: 14, scope: !7679)
!7681 = !DILocation(line: 5053, column: 12, scope: !7679)
!7682 = !DILocation(line: 5053, column: 35, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 5053, column: 7)
!7684 = !DILocation(line: 5053, column: 39, scope: !7683)
!7685 = !DILocation(line: 5053, column: 37, scope: !7683)
!7686 = !DILocation(line: 5053, column: 7, scope: !7679)
!7687 = !DILocation(line: 5055, column: 36, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 5054, column: 9)
!7689 = !DILocation(line: 5055, column: 11, scope: !7688)
!7690 = !DILocation(line: 5055, column: 23, scope: !7688)
!7691 = !DILocation(line: 5055, column: 26, scope: !7688)
!7692 = !DILocation(line: 5055, column: 34, scope: !7688)
!7693 = !DILocation(line: 5056, column: 16, scope: !7688)
!7694 = !DILocation(line: 5056, column: 18, scope: !7688)
!7695 = !DILocation(line: 5056, column: 13, scope: !7688)
!7696 = !DILocation(line: 5057, column: 9, scope: !7688)
!7697 = !DILocation(line: 5053, column: 63, scope: !7683)
!7698 = !DILocation(line: 5053, column: 7, scope: !7683)
!7699 = distinct !{!7699, !7686, !7700}
!7700 = !DILocation(line: 5057, column: 9, scope: !7679)
!7701 = !DILocation(line: 5059, column: 27, scope: !7619)
!7702 = !DILocation(line: 5059, column: 25, scope: !7619)
!7703 = !DILocation(line: 5060, column: 5, scope: !7619)
!7704 = !DILocation(line: 5062, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !1028, file: !3, line: 5062, column: 3)
!7706 = !DILocation(line: 5062, column: 8, scope: !7705)
!7707 = !DILocation(line: 5062, column: 15, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 5062, column: 3)
!7709 = !DILocation(line: 5062, column: 19, scope: !7708)
!7710 = !DILocation(line: 5062, column: 17, scope: !7708)
!7711 = !DILocation(line: 5062, column: 3, scope: !7705)
!7712 = !DILocalVariable(name: "j", scope: !7713, file: !3, line: 5064, type: !149)
!7713 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 5063, column: 5)
!7714 = !DILocation(line: 5064, column: 14, scope: !7713)
!7715 = !DILocation(line: 5066, column: 7, scope: !7713)
!7716 = !DILocation(line: 5066, column: 19, scope: !7713)
!7717 = !DILocation(line: 5066, column: 22, scope: !7713)
!7718 = !DILocation(line: 5066, column: 32, scope: !7713)
!7719 = !DILocation(line: 5067, column: 34, scope: !7713)
!7720 = !DILocation(line: 5067, column: 36, scope: !7713)
!7721 = !DILocation(line: 5067, column: 41, scope: !7713)
!7722 = !DILocation(line: 5067, column: 7, scope: !7713)
!7723 = !DILocation(line: 5067, column: 19, scope: !7713)
!7724 = !DILocation(line: 5067, column: 22, scope: !7713)
!7725 = !DILocation(line: 5067, column: 31, scope: !7713)
!7726 = !DILocation(line: 5068, column: 14, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 5068, column: 7)
!7728 = !DILocation(line: 5068, column: 12, scope: !7727)
!7729 = !DILocation(line: 5068, column: 19, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 5068, column: 7)
!7731 = !DILocation(line: 5068, column: 24, scope: !7730)
!7732 = !DILocation(line: 5068, column: 21, scope: !7730)
!7733 = !DILocation(line: 5068, column: 7, scope: !7727)
!7734 = !DILocation(line: 5069, column: 9, scope: !7730)
!7735 = !DILocation(line: 5069, column: 21, scope: !7730)
!7736 = !DILocation(line: 5069, column: 24, scope: !7730)
!7737 = !DILocation(line: 5069, column: 32, scope: !7730)
!7738 = !DILocation(line: 5069, column: 35, scope: !7730)
!7739 = !DILocation(line: 5068, column: 27, scope: !7730)
!7740 = !DILocation(line: 5068, column: 7, scope: !7730)
!7741 = distinct !{!7741, !7733, !7742}
!7742 = !DILocation(line: 5069, column: 37, scope: !7727)
!7743 = !DILocation(line: 5070, column: 5, scope: !7713)
!7744 = !DILocation(line: 5062, column: 29, scope: !7708)
!7745 = !DILocation(line: 5062, column: 3, scope: !7708)
!7746 = distinct !{!7746, !7711, !7747}
!7747 = !DILocation(line: 5070, column: 5, scope: !7705)
!7748 = !DILocation(line: 5071, column: 1, scope: !1028)
!7749 = distinct !DISubprogram(name: "is_directory", scope: !3, file: !3, line: 3435, type: !702, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7750 = !DILocalVariable(name: "f", arg: 1, scope: !7749, file: !3, line: 3435, type: !183)
!7751 = !DILocation(line: 3435, column: 38, scope: !7749)
!7752 = !DILocation(line: 3437, column: 10, scope: !7749)
!7753 = !DILocation(line: 3437, column: 13, scope: !7749)
!7754 = !DILocation(line: 3437, column: 22, scope: !7749)
!7755 = !DILocation(line: 3437, column: 35, scope: !7749)
!7756 = !DILocation(line: 3437, column: 38, scope: !7749)
!7757 = !DILocation(line: 3437, column: 41, scope: !7749)
!7758 = !DILocation(line: 3437, column: 50, scope: !7749)
!7759 = !DILocation(line: 3437, column: 3, scope: !7749)
!7760 = distinct !DISubprogram(name: "basename_is_dot_or_dotdot", scope: !3, file: !3, line: 3497, type: !568, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7761 = !DILocalVariable(name: "name", arg: 1, scope: !7760, file: !3, line: 3497, type: !146)
!7762 = !DILocation(line: 3497, column: 40, scope: !7760)
!7763 = !DILocalVariable(name: "base", scope: !7760, file: !3, line: 3499, type: !146)
!7764 = !DILocation(line: 3499, column: 15, scope: !7760)
!7765 = !DILocation(line: 3499, column: 38, scope: !7760)
!7766 = !DILocation(line: 3499, column: 22, scope: !7760)
!7767 = !DILocation(line: 3500, column: 25, scope: !7760)
!7768 = !DILocation(line: 3500, column: 10, scope: !7760)
!7769 = !DILocation(line: 3500, column: 3, scope: !7760)
!7770 = distinct !DISubprogram(name: "free_ent", scope: !3, file: !3, line: 2974, type: !664, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7771 = !DILocalVariable(name: "f", arg: 1, scope: !7770, file: !3, line: 2974, type: !252)
!7772 = !DILocation(line: 2974, column: 28, scope: !7770)
!7773 = !DILocation(line: 2976, column: 9, scope: !7770)
!7774 = !DILocation(line: 2976, column: 12, scope: !7770)
!7775 = !DILocation(line: 2976, column: 3, scope: !7770)
!7776 = !DILocation(line: 2977, column: 9, scope: !7770)
!7777 = !DILocation(line: 2977, column: 12, scope: !7770)
!7778 = !DILocation(line: 2977, column: 3, scope: !7770)
!7779 = !DILocation(line: 2978, column: 9, scope: !7770)
!7780 = !DILocation(line: 2978, column: 12, scope: !7770)
!7781 = !DILocation(line: 2978, column: 3, scope: !7770)
!7782 = !DILocation(line: 2979, column: 7, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 2979, column: 7)
!7784 = !DILocation(line: 2979, column: 10, scope: !7783)
!7785 = !DILocation(line: 2979, column: 19, scope: !7783)
!7786 = !DILocation(line: 2979, column: 7, scope: !7770)
!7787 = !DILocation(line: 2981, column: 11, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2981, column: 11)
!7789 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 2980, column: 5)
!7790 = !DILocation(line: 2981, column: 11, scope: !7789)
!7791 = !DILocation(line: 2982, column: 15, scope: !7788)
!7792 = !DILocation(line: 2982, column: 18, scope: !7788)
!7793 = !DILocation(line: 2982, column: 9, scope: !7788)
!7794 = !DILocation(line: 2984, column: 18, scope: !7788)
!7795 = !DILocation(line: 2984, column: 21, scope: !7788)
!7796 = !DILocation(line: 2984, column: 9, scope: !7788)
!7797 = !DILocation(line: 2985, column: 5, scope: !7789)
!7798 = !DILocation(line: 2986, column: 1, scope: !7770)
!7799 = distinct !DISubprogram(name: "is_smack_enabled", scope: !7800, file: !7800, line: 39, type: !602, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7800 = !DIFile(filename: "./lib/smack.h", directory: "/home/mbarbar/software/coreutils-8.31")
!7801 = !DILocation(line: 44, column: 3, scope: !7799)
!7802 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !810, file: !810, line: 265, type: !568, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7803 = !DILocalVariable(name: "file_name", arg: 1, scope: !7802, file: !810, line: 265, type: !146)
!7804 = !DILocation(line: 265, column: 28, scope: !7802)
!7805 = !DILocation(line: 267, column: 7, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !810, line: 267, column: 7)
!7807 = !DILocation(line: 267, column: 20, scope: !7806)
!7808 = !DILocation(line: 267, column: 7, scope: !7802)
!7809 = !DILocalVariable(name: "sep", scope: !7810, file: !810, line: 269, type: !144)
!7810 = distinct !DILexicalBlock(scope: !7806, file: !810, line: 268, column: 5)
!7811 = !DILocation(line: 269, column: 12, scope: !7810)
!7812 = !DILocation(line: 269, column: 18, scope: !7810)
!7813 = !DILocation(line: 269, column: 29, scope: !7810)
!7814 = !DILocation(line: 269, column: 42, scope: !7810)
!7815 = !DILocation(line: 269, column: 50, scope: !7810)
!7816 = !DILocation(line: 270, column: 17, scope: !7810)
!7817 = !DILocation(line: 270, column: 21, scope: !7810)
!7818 = !DILocation(line: 270, column: 24, scope: !7810)
!7819 = !DILocation(line: 270, column: 7, scope: !7810)
!7820 = !DILocation(line: 273, column: 5, scope: !7806)
!7821 = !DILocation(line: 274, column: 1, scope: !7802)
!7822 = distinct !DISubprogram(name: "initialize_ordering_vector", scope: !3, file: !3, line: 3783, type: !341, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7823 = !DILocalVariable(name: "i", scope: !7824, file: !3, line: 3785, type: !149)
!7824 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 3785, column: 3)
!7825 = !DILocation(line: 3785, column: 15, scope: !7824)
!7826 = !DILocation(line: 3785, column: 8, scope: !7824)
!7827 = !DILocation(line: 3785, column: 22, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 3785, column: 3)
!7829 = !DILocation(line: 3785, column: 26, scope: !7828)
!7830 = !DILocation(line: 3785, column: 24, scope: !7828)
!7831 = !DILocation(line: 3785, column: 3, scope: !7824)
!7832 = !DILocation(line: 3786, column: 23, scope: !7828)
!7833 = !DILocation(line: 3786, column: 32, scope: !7828)
!7834 = !DILocation(line: 3786, column: 22, scope: !7828)
!7835 = !DILocation(line: 3786, column: 5, scope: !7828)
!7836 = !DILocation(line: 3786, column: 17, scope: !7828)
!7837 = !DILocation(line: 3786, column: 20, scope: !7828)
!7838 = !DILocation(line: 3785, column: 39, scope: !7828)
!7839 = !DILocation(line: 3785, column: 3, scope: !7828)
!7840 = distinct !{!7840, !7831, !7841}
!7841 = !DILocation(line: 3786, column: 33, scope: !7824)
!7842 = !DILocation(line: 3787, column: 1, scope: !7822)
!7843 = distinct !DISubprogram(name: "xstrcoll_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7844 = !DILocalVariable(name: "a", arg: 1, scope: !7843, file: !3, line: 3691, type: !721)
!7845 = !DILocation(line: 3691, column: 1, scope: !7843)
!7846 = !DILocalVariable(name: "b", arg: 2, scope: !7843, file: !3, line: 3691, type: !721)
!7847 = distinct !DISubprogram(name: "xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7848 = !DILocalVariable(name: "a", arg: 1, scope: !7847, file: !3, line: 3691, type: !721)
!7849 = !DILocation(line: 3691, column: 1, scope: !7847)
!7850 = !DILocalVariable(name: "b", arg: 2, scope: !7847, file: !3, line: 3691, type: !721)
!7851 = !DILocalVariable(name: "a_is_dir", scope: !7852, file: !3, line: 3691, type: !141)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3691, column: 1)
!7853 = !DILocation(line: 3691, column: 1, scope: !7852)
!7854 = !DILocalVariable(name: "b_is_dir", scope: !7852, file: !3, line: 3691, type: !141)
!7855 = !DILocation(line: 3691, column: 1, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3691, column: 1)
!7857 = !DILocation(line: 3691, column: 1, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3691, column: 1)
!7859 = distinct !DISubprogram(name: "rev_xstrcoll_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7860 = !DILocalVariable(name: "a", arg: 1, scope: !7859, file: !3, line: 3691, type: !721)
!7861 = !DILocation(line: 3691, column: 1, scope: !7859)
!7862 = !DILocalVariable(name: "b", arg: 2, scope: !7859, file: !3, line: 3691, type: !721)
!7863 = distinct !DISubprogram(name: "rev_xstrcoll_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7864 = !DILocalVariable(name: "a", arg: 1, scope: !7863, file: !3, line: 3691, type: !721)
!7865 = !DILocation(line: 3691, column: 1, scope: !7863)
!7866 = !DILocalVariable(name: "b", arg: 2, scope: !7863, file: !3, line: 3691, type: !721)
!7867 = !DILocalVariable(name: "a_is_dir", scope: !7868, file: !3, line: 3691, type: !141)
!7868 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 3691, column: 1)
!7869 = !DILocation(line: 3691, column: 1, scope: !7868)
!7870 = !DILocalVariable(name: "b_is_dir", scope: !7868, file: !3, line: 3691, type: !141)
!7871 = !DILocation(line: 3691, column: 1, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3691, column: 1)
!7873 = !DILocation(line: 3691, column: 1, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3691, column: 1)
!7875 = distinct !DISubprogram(name: "strcmp_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7876 = !DILocalVariable(name: "a", arg: 1, scope: !7875, file: !3, line: 3691, type: !721)
!7877 = !DILocation(line: 3691, column: 1, scope: !7875)
!7878 = !DILocalVariable(name: "b", arg: 2, scope: !7875, file: !3, line: 3691, type: !721)
!7879 = distinct !DISubprogram(name: "strcmp_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7880 = !DILocalVariable(name: "a", arg: 1, scope: !7879, file: !3, line: 3691, type: !721)
!7881 = !DILocation(line: 3691, column: 1, scope: !7879)
!7882 = !DILocalVariable(name: "b", arg: 2, scope: !7879, file: !3, line: 3691, type: !721)
!7883 = !DILocalVariable(name: "a_is_dir", scope: !7884, file: !3, line: 3691, type: !141)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 3691, column: 1)
!7885 = !DILocation(line: 3691, column: 1, scope: !7884)
!7886 = !DILocalVariable(name: "b_is_dir", scope: !7884, file: !3, line: 3691, type: !141)
!7887 = !DILocation(line: 3691, column: 1, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 3691, column: 1)
!7889 = !DILocation(line: 3691, column: 1, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 3691, column: 1)
!7891 = distinct !DISubprogram(name: "rev_strcmp_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7892 = !DILocalVariable(name: "a", arg: 1, scope: !7891, file: !3, line: 3691, type: !721)
!7893 = !DILocation(line: 3691, column: 1, scope: !7891)
!7894 = !DILocalVariable(name: "b", arg: 2, scope: !7891, file: !3, line: 3691, type: !721)
!7895 = distinct !DISubprogram(name: "rev_strcmp_df_name", scope: !3, file: !3, line: 3691, type: !719, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7896 = !DILocalVariable(name: "a", arg: 1, scope: !7895, file: !3, line: 3691, type: !721)
!7897 = !DILocation(line: 3691, column: 1, scope: !7895)
!7898 = !DILocalVariable(name: "b", arg: 2, scope: !7895, file: !3, line: 3691, type: !721)
!7899 = !DILocalVariable(name: "a_is_dir", scope: !7900, file: !3, line: 3691, type: !141)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3691, column: 1)
!7901 = !DILocation(line: 3691, column: 1, scope: !7900)
!7902 = !DILocalVariable(name: "b_is_dir", scope: !7900, file: !3, line: 3691, type: !141)
!7903 = !DILocation(line: 3691, column: 1, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 3691, column: 1)
!7905 = !DILocation(line: 3691, column: 1, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 3691, column: 1)
!7907 = distinct !DISubprogram(name: "xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7908 = !DILocalVariable(name: "a", arg: 1, scope: !7907, file: !3, line: 3692, type: !721)
!7909 = !DILocation(line: 3692, column: 1, scope: !7907)
!7910 = !DILocalVariable(name: "b", arg: 2, scope: !7907, file: !3, line: 3692, type: !721)
!7911 = distinct !DISubprogram(name: "xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7912 = !DILocalVariable(name: "a", arg: 1, scope: !7911, file: !3, line: 3692, type: !721)
!7913 = !DILocation(line: 3692, column: 1, scope: !7911)
!7914 = !DILocalVariable(name: "b", arg: 2, scope: !7911, file: !3, line: 3692, type: !721)
!7915 = !DILocalVariable(name: "a_is_dir", scope: !7916, file: !3, line: 3692, type: !141)
!7916 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 3692, column: 1)
!7917 = !DILocation(line: 3692, column: 1, scope: !7916)
!7918 = !DILocalVariable(name: "b_is_dir", scope: !7916, file: !3, line: 3692, type: !141)
!7919 = !DILocation(line: 3692, column: 1, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 3692, column: 1)
!7921 = !DILocation(line: 3692, column: 1, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 3692, column: 1)
!7923 = distinct !DISubprogram(name: "rev_xstrcoll_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7924 = !DILocalVariable(name: "a", arg: 1, scope: !7923, file: !3, line: 3692, type: !721)
!7925 = !DILocation(line: 3692, column: 1, scope: !7923)
!7926 = !DILocalVariable(name: "b", arg: 2, scope: !7923, file: !3, line: 3692, type: !721)
!7927 = distinct !DISubprogram(name: "rev_xstrcoll_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7928 = !DILocalVariable(name: "a", arg: 1, scope: !7927, file: !3, line: 3692, type: !721)
!7929 = !DILocation(line: 3692, column: 1, scope: !7927)
!7930 = !DILocalVariable(name: "b", arg: 2, scope: !7927, file: !3, line: 3692, type: !721)
!7931 = !DILocalVariable(name: "a_is_dir", scope: !7932, file: !3, line: 3692, type: !141)
!7932 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 3692, column: 1)
!7933 = !DILocation(line: 3692, column: 1, scope: !7932)
!7934 = !DILocalVariable(name: "b_is_dir", scope: !7932, file: !3, line: 3692, type: !141)
!7935 = !DILocation(line: 3692, column: 1, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 3692, column: 1)
!7937 = !DILocation(line: 3692, column: 1, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 3692, column: 1)
!7939 = distinct !DISubprogram(name: "strcmp_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7940 = !DILocalVariable(name: "a", arg: 1, scope: !7939, file: !3, line: 3692, type: !721)
!7941 = !DILocation(line: 3692, column: 1, scope: !7939)
!7942 = !DILocalVariable(name: "b", arg: 2, scope: !7939, file: !3, line: 3692, type: !721)
!7943 = distinct !DISubprogram(name: "strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7944 = !DILocalVariable(name: "a", arg: 1, scope: !7943, file: !3, line: 3692, type: !721)
!7945 = !DILocation(line: 3692, column: 1, scope: !7943)
!7946 = !DILocalVariable(name: "b", arg: 2, scope: !7943, file: !3, line: 3692, type: !721)
!7947 = !DILocalVariable(name: "a_is_dir", scope: !7948, file: !3, line: 3692, type: !141)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 3692, column: 1)
!7949 = !DILocation(line: 3692, column: 1, scope: !7948)
!7950 = !DILocalVariable(name: "b_is_dir", scope: !7948, file: !3, line: 3692, type: !141)
!7951 = !DILocation(line: 3692, column: 1, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 3692, column: 1)
!7953 = !DILocation(line: 3692, column: 1, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 3692, column: 1)
!7955 = distinct !DISubprogram(name: "rev_strcmp_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7956 = !DILocalVariable(name: "a", arg: 1, scope: !7955, file: !3, line: 3692, type: !721)
!7957 = !DILocation(line: 3692, column: 1, scope: !7955)
!7958 = !DILocalVariable(name: "b", arg: 2, scope: !7955, file: !3, line: 3692, type: !721)
!7959 = distinct !DISubprogram(name: "rev_strcmp_df_extension", scope: !3, file: !3, line: 3692, type: !719, scopeLine: 3692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7960 = !DILocalVariable(name: "a", arg: 1, scope: !7959, file: !3, line: 3692, type: !721)
!7961 = !DILocation(line: 3692, column: 1, scope: !7959)
!7962 = !DILocalVariable(name: "b", arg: 2, scope: !7959, file: !3, line: 3692, type: !721)
!7963 = !DILocalVariable(name: "a_is_dir", scope: !7964, file: !3, line: 3692, type: !141)
!7964 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 3692, column: 1)
!7965 = !DILocation(line: 3692, column: 1, scope: !7964)
!7966 = !DILocalVariable(name: "b_is_dir", scope: !7964, file: !3, line: 3692, type: !141)
!7967 = !DILocation(line: 3692, column: 1, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3692, column: 1)
!7969 = !DILocation(line: 3692, column: 1, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3692, column: 1)
!7971 = distinct !DISubprogram(name: "xstrcoll_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7972 = !DILocalVariable(name: "a", arg: 1, scope: !7971, file: !3, line: 3690, type: !721)
!7973 = !DILocation(line: 3690, column: 1, scope: !7971)
!7974 = !DILocalVariable(name: "b", arg: 2, scope: !7971, file: !3, line: 3690, type: !721)
!7975 = distinct !DISubprogram(name: "xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7976 = !DILocalVariable(name: "a", arg: 1, scope: !7975, file: !3, line: 3690, type: !721)
!7977 = !DILocation(line: 3690, column: 1, scope: !7975)
!7978 = !DILocalVariable(name: "b", arg: 2, scope: !7975, file: !3, line: 3690, type: !721)
!7979 = !DILocalVariable(name: "a_is_dir", scope: !7980, file: !3, line: 3690, type: !141)
!7980 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 3690, column: 1)
!7981 = !DILocation(line: 3690, column: 1, scope: !7980)
!7982 = !DILocalVariable(name: "b_is_dir", scope: !7980, file: !3, line: 3690, type: !141)
!7983 = !DILocation(line: 3690, column: 1, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 3690, column: 1)
!7985 = !DILocation(line: 3690, column: 1, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 3690, column: 1)
!7987 = distinct !DISubprogram(name: "rev_xstrcoll_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7988 = !DILocalVariable(name: "a", arg: 1, scope: !7987, file: !3, line: 3690, type: !721)
!7989 = !DILocation(line: 3690, column: 1, scope: !7987)
!7990 = !DILocalVariable(name: "b", arg: 2, scope: !7987, file: !3, line: 3690, type: !721)
!7991 = distinct !DISubprogram(name: "rev_xstrcoll_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!7992 = !DILocalVariable(name: "a", arg: 1, scope: !7991, file: !3, line: 3690, type: !721)
!7993 = !DILocation(line: 3690, column: 1, scope: !7991)
!7994 = !DILocalVariable(name: "b", arg: 2, scope: !7991, file: !3, line: 3690, type: !721)
!7995 = !DILocalVariable(name: "a_is_dir", scope: !7996, file: !3, line: 3690, type: !141)
!7996 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 3690, column: 1)
!7997 = !DILocation(line: 3690, column: 1, scope: !7996)
!7998 = !DILocalVariable(name: "b_is_dir", scope: !7996, file: !3, line: 3690, type: !141)
!7999 = !DILocation(line: 3690, column: 1, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3690, column: 1)
!8001 = !DILocation(line: 3690, column: 1, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3690, column: 1)
!8003 = distinct !DISubprogram(name: "strcmp_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8004 = !DILocalVariable(name: "a", arg: 1, scope: !8003, file: !3, line: 3690, type: !721)
!8005 = !DILocation(line: 3690, column: 1, scope: !8003)
!8006 = !DILocalVariable(name: "b", arg: 2, scope: !8003, file: !3, line: 3690, type: !721)
!8007 = distinct !DISubprogram(name: "strcmp_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8008 = !DILocalVariable(name: "a", arg: 1, scope: !8007, file: !3, line: 3690, type: !721)
!8009 = !DILocation(line: 3690, column: 1, scope: !8007)
!8010 = !DILocalVariable(name: "b", arg: 2, scope: !8007, file: !3, line: 3690, type: !721)
!8011 = !DILocalVariable(name: "a_is_dir", scope: !8012, file: !3, line: 3690, type: !141)
!8012 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 3690, column: 1)
!8013 = !DILocation(line: 3690, column: 1, scope: !8012)
!8014 = !DILocalVariable(name: "b_is_dir", scope: !8012, file: !3, line: 3690, type: !141)
!8015 = !DILocation(line: 3690, column: 1, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3690, column: 1)
!8017 = !DILocation(line: 3690, column: 1, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3690, column: 1)
!8019 = distinct !DISubprogram(name: "rev_strcmp_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8020 = !DILocalVariable(name: "a", arg: 1, scope: !8019, file: !3, line: 3690, type: !721)
!8021 = !DILocation(line: 3690, column: 1, scope: !8019)
!8022 = !DILocalVariable(name: "b", arg: 2, scope: !8019, file: !3, line: 3690, type: !721)
!8023 = distinct !DISubprogram(name: "rev_strcmp_df_size", scope: !3, file: !3, line: 3690, type: !719, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8024 = !DILocalVariable(name: "a", arg: 1, scope: !8023, file: !3, line: 3690, type: !721)
!8025 = !DILocation(line: 3690, column: 1, scope: !8023)
!8026 = !DILocalVariable(name: "b", arg: 2, scope: !8023, file: !3, line: 3690, type: !721)
!8027 = !DILocalVariable(name: "a_is_dir", scope: !8028, file: !3, line: 3690, type: !141)
!8028 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 3690, column: 1)
!8029 = !DILocation(line: 3690, column: 1, scope: !8028)
!8030 = !DILocalVariable(name: "b_is_dir", scope: !8028, file: !3, line: 3690, type: !141)
!8031 = !DILocation(line: 3690, column: 1, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 3690, column: 1)
!8033 = !DILocation(line: 3690, column: 1, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 3690, column: 1)
!8035 = distinct !DISubprogram(name: "xstrcoll_version", scope: !3, file: !3, line: 3709, type: !719, scopeLine: 3710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8036 = !DILocalVariable(name: "a", arg: 1, scope: !8035, file: !3, line: 3709, type: !721)
!8037 = !DILocation(line: 3709, column: 32, scope: !8035)
!8038 = !DILocalVariable(name: "b", arg: 2, scope: !8035, file: !3, line: 3709, type: !721)
!8039 = !DILocation(line: 3709, column: 37, scope: !8035)
!8040 = !DILocation(line: 3710, column: 23, scope: !8035)
!8041 = !DILocation(line: 3710, column: 26, scope: !8035)
!8042 = !DILocation(line: 3710, column: 10, scope: !8035)
!8043 = !DILocation(line: 3710, column: 3, scope: !8035)
!8044 = distinct !DISubprogram(name: "xstrcoll_df_version", scope: !3, file: !3, line: 3713, type: !719, scopeLine: 3714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8045 = !DILocalVariable(name: "a", arg: 1, scope: !8044, file: !3, line: 3713, type: !721)
!8046 = !DILocation(line: 3713, column: 35, scope: !8044)
!8047 = !DILocalVariable(name: "b", arg: 2, scope: !8044, file: !3, line: 3713, type: !721)
!8048 = !DILocation(line: 3713, column: 40, scope: !8044)
!8049 = !DILocation(line: 3714, column: 3, scope: !8044)
!8050 = !DILocalVariable(name: "a_is_dir", scope: !8051, file: !3, line: 3714, type: !141)
!8051 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 3714, column: 3)
!8052 = !DILocation(line: 3714, column: 3, scope: !8051)
!8053 = !DILocalVariable(name: "b_is_dir", scope: !8051, file: !3, line: 3714, type: !141)
!8054 = !DILocation(line: 3714, column: 3, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 3714, column: 3)
!8056 = !DILocation(line: 3714, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 3714, column: 3)
!8058 = !DILocation(line: 3714, column: 46, scope: !8044)
!8059 = !DILocation(line: 3714, column: 49, scope: !8044)
!8060 = !DILocation(line: 3714, column: 33, scope: !8044)
!8061 = !DILocation(line: 3714, column: 26, scope: !8044)
!8062 = !DILocation(line: 3714, column: 53, scope: !8044)
!8063 = distinct !DISubprogram(name: "rev_xstrcoll_version", scope: !3, file: !3, line: 3711, type: !719, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8064 = !DILocalVariable(name: "a", arg: 1, scope: !8063, file: !3, line: 3711, type: !721)
!8065 = !DILocation(line: 3711, column: 36, scope: !8063)
!8066 = !DILocalVariable(name: "b", arg: 2, scope: !8063, file: !3, line: 3711, type: !721)
!8067 = !DILocation(line: 3711, column: 41, scope: !8063)
!8068 = !DILocation(line: 3712, column: 23, scope: !8063)
!8069 = !DILocation(line: 3712, column: 26, scope: !8063)
!8070 = !DILocation(line: 3712, column: 10, scope: !8063)
!8071 = !DILocation(line: 3712, column: 3, scope: !8063)
!8072 = distinct !DISubprogram(name: "rev_xstrcoll_df_version", scope: !3, file: !3, line: 3715, type: !719, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8073 = !DILocalVariable(name: "a", arg: 1, scope: !8072, file: !3, line: 3715, type: !721)
!8074 = !DILocation(line: 3715, column: 39, scope: !8072)
!8075 = !DILocalVariable(name: "b", arg: 2, scope: !8072, file: !3, line: 3715, type: !721)
!8076 = !DILocation(line: 3715, column: 44, scope: !8072)
!8077 = !DILocation(line: 3716, column: 3, scope: !8072)
!8078 = !DILocalVariable(name: "a_is_dir", scope: !8079, file: !3, line: 3716, type: !141)
!8079 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3716, column: 3)
!8080 = !DILocation(line: 3716, column: 3, scope: !8079)
!8081 = !DILocalVariable(name: "b_is_dir", scope: !8079, file: !3, line: 3716, type: !141)
!8082 = !DILocation(line: 3716, column: 3, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 3716, column: 3)
!8084 = !DILocation(line: 3716, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 3716, column: 3)
!8086 = !DILocation(line: 3716, column: 46, scope: !8072)
!8087 = !DILocation(line: 3716, column: 49, scope: !8072)
!8088 = !DILocation(line: 3716, column: 33, scope: !8072)
!8089 = !DILocation(line: 3716, column: 26, scope: !8072)
!8090 = !DILocation(line: 3716, column: 53, scope: !8072)
!8091 = distinct !DISubprogram(name: "xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8092 = !DILocalVariable(name: "a", arg: 1, scope: !8091, file: !3, line: 3688, type: !721)
!8093 = !DILocation(line: 3688, column: 1, scope: !8091)
!8094 = !DILocalVariable(name: "b", arg: 2, scope: !8091, file: !3, line: 3688, type: !721)
!8095 = distinct !DISubprogram(name: "xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8096 = !DILocalVariable(name: "a", arg: 1, scope: !8095, file: !3, line: 3688, type: !721)
!8097 = !DILocation(line: 3688, column: 1, scope: !8095)
!8098 = !DILocalVariable(name: "b", arg: 2, scope: !8095, file: !3, line: 3688, type: !721)
!8099 = !DILocalVariable(name: "a_is_dir", scope: !8100, file: !3, line: 3688, type: !141)
!8100 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3688, column: 1)
!8101 = !DILocation(line: 3688, column: 1, scope: !8100)
!8102 = !DILocalVariable(name: "b_is_dir", scope: !8100, file: !3, line: 3688, type: !141)
!8103 = !DILocation(line: 3688, column: 1, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3688, column: 1)
!8105 = !DILocation(line: 3688, column: 1, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3688, column: 1)
!8107 = distinct !DISubprogram(name: "rev_xstrcoll_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8108 = !DILocalVariable(name: "a", arg: 1, scope: !8107, file: !3, line: 3688, type: !721)
!8109 = !DILocation(line: 3688, column: 1, scope: !8107)
!8110 = !DILocalVariable(name: "b", arg: 2, scope: !8107, file: !3, line: 3688, type: !721)
!8111 = distinct !DISubprogram(name: "rev_xstrcoll_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8112 = !DILocalVariable(name: "a", arg: 1, scope: !8111, file: !3, line: 3688, type: !721)
!8113 = !DILocation(line: 3688, column: 1, scope: !8111)
!8114 = !DILocalVariable(name: "b", arg: 2, scope: !8111, file: !3, line: 3688, type: !721)
!8115 = !DILocalVariable(name: "a_is_dir", scope: !8116, file: !3, line: 3688, type: !141)
!8116 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 3688, column: 1)
!8117 = !DILocation(line: 3688, column: 1, scope: !8116)
!8118 = !DILocalVariable(name: "b_is_dir", scope: !8116, file: !3, line: 3688, type: !141)
!8119 = !DILocation(line: 3688, column: 1, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3688, column: 1)
!8121 = !DILocation(line: 3688, column: 1, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 3688, column: 1)
!8123 = distinct !DISubprogram(name: "strcmp_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8124 = !DILocalVariable(name: "a", arg: 1, scope: !8123, file: !3, line: 3688, type: !721)
!8125 = !DILocation(line: 3688, column: 1, scope: !8123)
!8126 = !DILocalVariable(name: "b", arg: 2, scope: !8123, file: !3, line: 3688, type: !721)
!8127 = distinct !DISubprogram(name: "strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8128 = !DILocalVariable(name: "a", arg: 1, scope: !8127, file: !3, line: 3688, type: !721)
!8129 = !DILocation(line: 3688, column: 1, scope: !8127)
!8130 = !DILocalVariable(name: "b", arg: 2, scope: !8127, file: !3, line: 3688, type: !721)
!8131 = !DILocalVariable(name: "a_is_dir", scope: !8132, file: !3, line: 3688, type: !141)
!8132 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 3688, column: 1)
!8133 = !DILocation(line: 3688, column: 1, scope: !8132)
!8134 = !DILocalVariable(name: "b_is_dir", scope: !8132, file: !3, line: 3688, type: !141)
!8135 = !DILocation(line: 3688, column: 1, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3688, column: 1)
!8137 = !DILocation(line: 3688, column: 1, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3688, column: 1)
!8139 = distinct !DISubprogram(name: "rev_strcmp_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8140 = !DILocalVariable(name: "a", arg: 1, scope: !8139, file: !3, line: 3688, type: !721)
!8141 = !DILocation(line: 3688, column: 1, scope: !8139)
!8142 = !DILocalVariable(name: "b", arg: 2, scope: !8139, file: !3, line: 3688, type: !721)
!8143 = distinct !DISubprogram(name: "rev_strcmp_df_mtime", scope: !3, file: !3, line: 3688, type: !719, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8144 = !DILocalVariable(name: "a", arg: 1, scope: !8143, file: !3, line: 3688, type: !721)
!8145 = !DILocation(line: 3688, column: 1, scope: !8143)
!8146 = !DILocalVariable(name: "b", arg: 2, scope: !8143, file: !3, line: 3688, type: !721)
!8147 = !DILocalVariable(name: "a_is_dir", scope: !8148, file: !3, line: 3688, type: !141)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 3688, column: 1)
!8149 = !DILocation(line: 3688, column: 1, scope: !8148)
!8150 = !DILocalVariable(name: "b_is_dir", scope: !8148, file: !3, line: 3688, type: !141)
!8151 = !DILocation(line: 3688, column: 1, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3688, column: 1)
!8153 = !DILocation(line: 3688, column: 1, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3688, column: 1)
!8155 = distinct !DISubprogram(name: "xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8156 = !DILocalVariable(name: "a", arg: 1, scope: !8155, file: !3, line: 3687, type: !721)
!8157 = !DILocation(line: 3687, column: 1, scope: !8155)
!8158 = !DILocalVariable(name: "b", arg: 2, scope: !8155, file: !3, line: 3687, type: !721)
!8159 = distinct !DISubprogram(name: "xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8160 = !DILocalVariable(name: "a", arg: 1, scope: !8159, file: !3, line: 3687, type: !721)
!8161 = !DILocation(line: 3687, column: 1, scope: !8159)
!8162 = !DILocalVariable(name: "b", arg: 2, scope: !8159, file: !3, line: 3687, type: !721)
!8163 = !DILocalVariable(name: "a_is_dir", scope: !8164, file: !3, line: 3687, type: !141)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 3687, column: 1)
!8165 = !DILocation(line: 3687, column: 1, scope: !8164)
!8166 = !DILocalVariable(name: "b_is_dir", scope: !8164, file: !3, line: 3687, type: !141)
!8167 = !DILocation(line: 3687, column: 1, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3687, column: 1)
!8169 = !DILocation(line: 3687, column: 1, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3687, column: 1)
!8171 = distinct !DISubprogram(name: "rev_xstrcoll_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8172 = !DILocalVariable(name: "a", arg: 1, scope: !8171, file: !3, line: 3687, type: !721)
!8173 = !DILocation(line: 3687, column: 1, scope: !8171)
!8174 = !DILocalVariable(name: "b", arg: 2, scope: !8171, file: !3, line: 3687, type: !721)
!8175 = distinct !DISubprogram(name: "rev_xstrcoll_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8176 = !DILocalVariable(name: "a", arg: 1, scope: !8175, file: !3, line: 3687, type: !721)
!8177 = !DILocation(line: 3687, column: 1, scope: !8175)
!8178 = !DILocalVariable(name: "b", arg: 2, scope: !8175, file: !3, line: 3687, type: !721)
!8179 = !DILocalVariable(name: "a_is_dir", scope: !8180, file: !3, line: 3687, type: !141)
!8180 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3687, column: 1)
!8181 = !DILocation(line: 3687, column: 1, scope: !8180)
!8182 = !DILocalVariable(name: "b_is_dir", scope: !8180, file: !3, line: 3687, type: !141)
!8183 = !DILocation(line: 3687, column: 1, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3687, column: 1)
!8185 = !DILocation(line: 3687, column: 1, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3687, column: 1)
!8187 = distinct !DISubprogram(name: "strcmp_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8188 = !DILocalVariable(name: "a", arg: 1, scope: !8187, file: !3, line: 3687, type: !721)
!8189 = !DILocation(line: 3687, column: 1, scope: !8187)
!8190 = !DILocalVariable(name: "b", arg: 2, scope: !8187, file: !3, line: 3687, type: !721)
!8191 = distinct !DISubprogram(name: "strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8192 = !DILocalVariable(name: "a", arg: 1, scope: !8191, file: !3, line: 3687, type: !721)
!8193 = !DILocation(line: 3687, column: 1, scope: !8191)
!8194 = !DILocalVariable(name: "b", arg: 2, scope: !8191, file: !3, line: 3687, type: !721)
!8195 = !DILocalVariable(name: "a_is_dir", scope: !8196, file: !3, line: 3687, type: !141)
!8196 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 3687, column: 1)
!8197 = !DILocation(line: 3687, column: 1, scope: !8196)
!8198 = !DILocalVariable(name: "b_is_dir", scope: !8196, file: !3, line: 3687, type: !141)
!8199 = !DILocation(line: 3687, column: 1, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 3687, column: 1)
!8201 = !DILocation(line: 3687, column: 1, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 3687, column: 1)
!8203 = distinct !DISubprogram(name: "rev_strcmp_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8204 = !DILocalVariable(name: "a", arg: 1, scope: !8203, file: !3, line: 3687, type: !721)
!8205 = !DILocation(line: 3687, column: 1, scope: !8203)
!8206 = !DILocalVariable(name: "b", arg: 2, scope: !8203, file: !3, line: 3687, type: !721)
!8207 = distinct !DISubprogram(name: "rev_strcmp_df_ctime", scope: !3, file: !3, line: 3687, type: !719, scopeLine: 3687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8208 = !DILocalVariable(name: "a", arg: 1, scope: !8207, file: !3, line: 3687, type: !721)
!8209 = !DILocation(line: 3687, column: 1, scope: !8207)
!8210 = !DILocalVariable(name: "b", arg: 2, scope: !8207, file: !3, line: 3687, type: !721)
!8211 = !DILocalVariable(name: "a_is_dir", scope: !8212, file: !3, line: 3687, type: !141)
!8212 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3687, column: 1)
!8213 = !DILocation(line: 3687, column: 1, scope: !8212)
!8214 = !DILocalVariable(name: "b_is_dir", scope: !8212, file: !3, line: 3687, type: !141)
!8215 = !DILocation(line: 3687, column: 1, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3687, column: 1)
!8217 = !DILocation(line: 3687, column: 1, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3687, column: 1)
!8219 = distinct !DISubprogram(name: "xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8220 = !DILocalVariable(name: "a", arg: 1, scope: !8219, file: !3, line: 3689, type: !721)
!8221 = !DILocation(line: 3689, column: 1, scope: !8219)
!8222 = !DILocalVariable(name: "b", arg: 2, scope: !8219, file: !3, line: 3689, type: !721)
!8223 = distinct !DISubprogram(name: "xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8224 = !DILocalVariable(name: "a", arg: 1, scope: !8223, file: !3, line: 3689, type: !721)
!8225 = !DILocation(line: 3689, column: 1, scope: !8223)
!8226 = !DILocalVariable(name: "b", arg: 2, scope: !8223, file: !3, line: 3689, type: !721)
!8227 = !DILocalVariable(name: "a_is_dir", scope: !8228, file: !3, line: 3689, type: !141)
!8228 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3689, column: 1)
!8229 = !DILocation(line: 3689, column: 1, scope: !8228)
!8230 = !DILocalVariable(name: "b_is_dir", scope: !8228, file: !3, line: 3689, type: !141)
!8231 = !DILocation(line: 3689, column: 1, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 3689, column: 1)
!8233 = !DILocation(line: 3689, column: 1, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 3689, column: 1)
!8235 = distinct !DISubprogram(name: "rev_xstrcoll_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8236 = !DILocalVariable(name: "a", arg: 1, scope: !8235, file: !3, line: 3689, type: !721)
!8237 = !DILocation(line: 3689, column: 1, scope: !8235)
!8238 = !DILocalVariable(name: "b", arg: 2, scope: !8235, file: !3, line: 3689, type: !721)
!8239 = distinct !DISubprogram(name: "rev_xstrcoll_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8240 = !DILocalVariable(name: "a", arg: 1, scope: !8239, file: !3, line: 3689, type: !721)
!8241 = !DILocation(line: 3689, column: 1, scope: !8239)
!8242 = !DILocalVariable(name: "b", arg: 2, scope: !8239, file: !3, line: 3689, type: !721)
!8243 = !DILocalVariable(name: "a_is_dir", scope: !8244, file: !3, line: 3689, type: !141)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 3689, column: 1)
!8245 = !DILocation(line: 3689, column: 1, scope: !8244)
!8246 = !DILocalVariable(name: "b_is_dir", scope: !8244, file: !3, line: 3689, type: !141)
!8247 = !DILocation(line: 3689, column: 1, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3689, column: 1)
!8249 = !DILocation(line: 3689, column: 1, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3689, column: 1)
!8251 = distinct !DISubprogram(name: "strcmp_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8252 = !DILocalVariable(name: "a", arg: 1, scope: !8251, file: !3, line: 3689, type: !721)
!8253 = !DILocation(line: 3689, column: 1, scope: !8251)
!8254 = !DILocalVariable(name: "b", arg: 2, scope: !8251, file: !3, line: 3689, type: !721)
!8255 = distinct !DISubprogram(name: "strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8256 = !DILocalVariable(name: "a", arg: 1, scope: !8255, file: !3, line: 3689, type: !721)
!8257 = !DILocation(line: 3689, column: 1, scope: !8255)
!8258 = !DILocalVariable(name: "b", arg: 2, scope: !8255, file: !3, line: 3689, type: !721)
!8259 = !DILocalVariable(name: "a_is_dir", scope: !8260, file: !3, line: 3689, type: !141)
!8260 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 3689, column: 1)
!8261 = !DILocation(line: 3689, column: 1, scope: !8260)
!8262 = !DILocalVariable(name: "b_is_dir", scope: !8260, file: !3, line: 3689, type: !141)
!8263 = !DILocation(line: 3689, column: 1, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 3689, column: 1)
!8265 = !DILocation(line: 3689, column: 1, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 3689, column: 1)
!8267 = distinct !DISubprogram(name: "rev_strcmp_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8268 = !DILocalVariable(name: "a", arg: 1, scope: !8267, file: !3, line: 3689, type: !721)
!8269 = !DILocation(line: 3689, column: 1, scope: !8267)
!8270 = !DILocalVariable(name: "b", arg: 2, scope: !8267, file: !3, line: 3689, type: !721)
!8271 = distinct !DISubprogram(name: "rev_strcmp_df_atime", scope: !3, file: !3, line: 3689, type: !719, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8272 = !DILocalVariable(name: "a", arg: 1, scope: !8271, file: !3, line: 3689, type: !721)
!8273 = !DILocation(line: 3689, column: 1, scope: !8271)
!8274 = !DILocalVariable(name: "b", arg: 2, scope: !8271, file: !3, line: 3689, type: !721)
!8275 = !DILocalVariable(name: "a_is_dir", scope: !8276, file: !3, line: 3689, type: !141)
!8276 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 3689, column: 1)
!8277 = !DILocation(line: 3689, column: 1, scope: !8276)
!8278 = !DILocalVariable(name: "b_is_dir", scope: !8276, file: !3, line: 3689, type: !141)
!8279 = !DILocation(line: 3689, column: 1, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 3689, column: 1)
!8281 = !DILocation(line: 3689, column: 1, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 3689, column: 1)
!8283 = distinct !DISubprogram(name: "is_linked_directory", scope: !3, file: !3, line: 3442, type: !702, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8284 = !DILocalVariable(name: "f", arg: 1, scope: !8283, file: !3, line: 3442, type: !183)
!8285 = !DILocation(line: 3442, column: 45, scope: !8283)
!8286 = !DILocation(line: 3444, column: 10, scope: !8283)
!8287 = !DILocation(line: 3444, column: 13, scope: !8283)
!8288 = !DILocation(line: 3444, column: 22, scope: !8283)
!8289 = !DILocation(line: 3444, column: 35, scope: !8283)
!8290 = !DILocation(line: 3444, column: 38, scope: !8283)
!8291 = !DILocation(line: 3444, column: 41, scope: !8283)
!8292 = !DILocation(line: 3444, column: 50, scope: !8283)
!8293 = !DILocation(line: 3445, column: 10, scope: !8283)
!8294 = !DILocation(line: 3445, column: 13, scope: !8283)
!8295 = !DILocation(line: 3444, column: 3, scope: !8283)
!8296 = distinct !DISubprogram(name: "cmp_atime", scope: !3, file: !3, line: 3651, type: !728, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8297 = !DILocalVariable(name: "a", arg: 1, scope: !8296, file: !3, line: 3651, type: !183)
!8298 = !DILocation(line: 3651, column: 35, scope: !8296)
!8299 = !DILocalVariable(name: "b", arg: 2, scope: !8296, file: !3, line: 3651, type: !183)
!8300 = !DILocation(line: 3651, column: 61, scope: !8296)
!8301 = !DILocalVariable(name: "cmp", arg: 3, scope: !8296, file: !3, line: 3652, type: !730)
!8302 = !DILocation(line: 3652, column: 18, scope: !8296)
!8303 = !DILocalVariable(name: "diff", scope: !8296, file: !3, line: 3654, type: !27)
!8304 = !DILocation(line: 3654, column: 7, scope: !8296)
!8305 = !DILocation(line: 3654, column: 45, scope: !8296)
!8306 = !DILocation(line: 3654, column: 48, scope: !8296)
!8307 = !DILocation(line: 3654, column: 28, scope: !8296)
!8308 = !DILocation(line: 3655, column: 45, scope: !8296)
!8309 = !DILocation(line: 3655, column: 48, scope: !8296)
!8310 = !DILocation(line: 3655, column: 28, scope: !8296)
!8311 = !DILocation(line: 3654, column: 14, scope: !8296)
!8312 = !DILocation(line: 3656, column: 10, scope: !8296)
!8313 = !DILocation(line: 3656, column: 17, scope: !8296)
!8314 = !DILocation(line: 3656, column: 24, scope: !8296)
!8315 = !DILocation(line: 3656, column: 29, scope: !8296)
!8316 = !DILocation(line: 3656, column: 32, scope: !8296)
!8317 = !DILocation(line: 3656, column: 38, scope: !8296)
!8318 = !DILocation(line: 3656, column: 41, scope: !8296)
!8319 = !DILocation(line: 3656, column: 3, scope: !8296)
!8320 = distinct !DISubprogram(name: "xstrcoll", scope: !3, file: !3, line: 3567, type: !731, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8321 = !DILocalVariable(name: "a", arg: 1, scope: !8320, file: !3, line: 3567, type: !146)
!8322 = !DILocation(line: 3567, column: 23, scope: !8320)
!8323 = !DILocalVariable(name: "b", arg: 2, scope: !8320, file: !3, line: 3567, type: !146)
!8324 = !DILocation(line: 3567, column: 38, scope: !8320)
!8325 = !DILocalVariable(name: "diff", scope: !8320, file: !3, line: 3569, type: !27)
!8326 = !DILocation(line: 3569, column: 7, scope: !8320)
!8327 = !DILocation(line: 3570, column: 3, scope: !8320)
!8328 = !DILocation(line: 3570, column: 9, scope: !8320)
!8329 = !DILocation(line: 3571, column: 19, scope: !8320)
!8330 = !DILocation(line: 3571, column: 22, scope: !8320)
!8331 = !DILocation(line: 3571, column: 10, scope: !8320)
!8332 = !DILocation(line: 3571, column: 8, scope: !8320)
!8333 = !DILocation(line: 3572, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 3572, column: 7)
!8335 = !DILocation(line: 3572, column: 7, scope: !8320)
!8336 = !DILocation(line: 3574, column: 17, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3573, column: 5)
!8338 = !DILocation(line: 3574, column: 24, scope: !8337)
!8339 = !DILocation(line: 3575, column: 26, scope: !8337)
!8340 = !DILocation(line: 3575, column: 14, scope: !8337)
!8341 = !DILocation(line: 3575, column: 42, scope: !8337)
!8342 = !DILocation(line: 3575, column: 30, scope: !8337)
!8343 = !DILocation(line: 3574, column: 7, scope: !8337)
!8344 = !DILocation(line: 3576, column: 7, scope: !8337)
!8345 = !DILocation(line: 3577, column: 7, scope: !8337)
!8346 = !DILocation(line: 3579, column: 10, scope: !8320)
!8347 = !DILocation(line: 3579, column: 3, scope: !8320)
!8348 = distinct !DISubprogram(name: "cmp_ctime", scope: !3, file: !3, line: 3633, type: !728, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8349 = !DILocalVariable(name: "a", arg: 1, scope: !8348, file: !3, line: 3633, type: !183)
!8350 = !DILocation(line: 3633, column: 35, scope: !8348)
!8351 = !DILocalVariable(name: "b", arg: 2, scope: !8348, file: !3, line: 3633, type: !183)
!8352 = !DILocation(line: 3633, column: 61, scope: !8348)
!8353 = !DILocalVariable(name: "cmp", arg: 3, scope: !8348, file: !3, line: 3634, type: !730)
!8354 = !DILocation(line: 3634, column: 18, scope: !8348)
!8355 = !DILocalVariable(name: "diff", scope: !8348, file: !3, line: 3636, type: !27)
!8356 = !DILocation(line: 3636, column: 7, scope: !8348)
!8357 = !DILocation(line: 3636, column: 45, scope: !8348)
!8358 = !DILocation(line: 3636, column: 48, scope: !8348)
!8359 = !DILocation(line: 3636, column: 28, scope: !8348)
!8360 = !DILocation(line: 3637, column: 45, scope: !8348)
!8361 = !DILocation(line: 3637, column: 48, scope: !8348)
!8362 = !DILocation(line: 3637, column: 28, scope: !8348)
!8363 = !DILocation(line: 3636, column: 14, scope: !8348)
!8364 = !DILocation(line: 3638, column: 10, scope: !8348)
!8365 = !DILocation(line: 3638, column: 17, scope: !8348)
!8366 = !DILocation(line: 3638, column: 24, scope: !8348)
!8367 = !DILocation(line: 3638, column: 29, scope: !8348)
!8368 = !DILocation(line: 3638, column: 32, scope: !8348)
!8369 = !DILocation(line: 3638, column: 38, scope: !8348)
!8370 = !DILocation(line: 3638, column: 41, scope: !8348)
!8371 = !DILocation(line: 3638, column: 3, scope: !8348)
!8372 = distinct !DISubprogram(name: "cmp_mtime", scope: !3, file: !3, line: 3642, type: !728, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8373 = !DILocalVariable(name: "a", arg: 1, scope: !8372, file: !3, line: 3642, type: !183)
!8374 = !DILocation(line: 3642, column: 35, scope: !8372)
!8375 = !DILocalVariable(name: "b", arg: 2, scope: !8372, file: !3, line: 3642, type: !183)
!8376 = !DILocation(line: 3642, column: 61, scope: !8372)
!8377 = !DILocalVariable(name: "cmp", arg: 3, scope: !8372, file: !3, line: 3643, type: !730)
!8378 = !DILocation(line: 3643, column: 18, scope: !8372)
!8379 = !DILocalVariable(name: "diff", scope: !8372, file: !3, line: 3645, type: !27)
!8380 = !DILocation(line: 3645, column: 7, scope: !8372)
!8381 = !DILocation(line: 3645, column: 45, scope: !8372)
!8382 = !DILocation(line: 3645, column: 48, scope: !8372)
!8383 = !DILocation(line: 3645, column: 28, scope: !8372)
!8384 = !DILocation(line: 3646, column: 45, scope: !8372)
!8385 = !DILocation(line: 3646, column: 48, scope: !8372)
!8386 = !DILocation(line: 3646, column: 28, scope: !8372)
!8387 = !DILocation(line: 3645, column: 14, scope: !8372)
!8388 = !DILocation(line: 3647, column: 10, scope: !8372)
!8389 = !DILocation(line: 3647, column: 17, scope: !8372)
!8390 = !DILocation(line: 3647, column: 24, scope: !8372)
!8391 = !DILocation(line: 3647, column: 29, scope: !8372)
!8392 = !DILocation(line: 3647, column: 32, scope: !8372)
!8393 = !DILocation(line: 3647, column: 38, scope: !8372)
!8394 = !DILocation(line: 3647, column: 41, scope: !8372)
!8395 = !DILocation(line: 3647, column: 3, scope: !8372)
!8396 = distinct !DISubprogram(name: "cmp_version", scope: !3, file: !3, line: 3704, type: !733, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8397 = !DILocalVariable(name: "a", arg: 1, scope: !8396, file: !3, line: 3704, type: !183)
!8398 = !DILocation(line: 3704, column: 37, scope: !8396)
!8399 = !DILocalVariable(name: "b", arg: 2, scope: !8396, file: !3, line: 3704, type: !183)
!8400 = !DILocation(line: 3704, column: 63, scope: !8396)
!8401 = !DILocation(line: 3706, column: 22, scope: !8396)
!8402 = !DILocation(line: 3706, column: 25, scope: !8396)
!8403 = !DILocation(line: 3706, column: 31, scope: !8396)
!8404 = !DILocation(line: 3706, column: 34, scope: !8396)
!8405 = !DILocation(line: 3706, column: 10, scope: !8396)
!8406 = !DILocation(line: 3706, column: 3, scope: !8396)
!8407 = distinct !DISubprogram(name: "cmp_size", scope: !3, file: !3, line: 3660, type: !728, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8408 = !DILocalVariable(name: "a", arg: 1, scope: !8407, file: !3, line: 3660, type: !183)
!8409 = !DILocation(line: 3660, column: 34, scope: !8407)
!8410 = !DILocalVariable(name: "b", arg: 2, scope: !8407, file: !3, line: 3660, type: !183)
!8411 = !DILocation(line: 3660, column: 60, scope: !8407)
!8412 = !DILocalVariable(name: "cmp", arg: 3, scope: !8407, file: !3, line: 3661, type: !730)
!8413 = !DILocation(line: 3661, column: 17, scope: !8407)
!8414 = !DILocalVariable(name: "diff", scope: !8407, file: !3, line: 3663, type: !27)
!8415 = !DILocation(line: 3663, column: 7, scope: !8407)
!8416 = !DILocation(line: 3663, column: 14, scope: !8407)
!8417 = !DILocation(line: 3664, column: 10, scope: !8407)
!8418 = !DILocation(line: 3664, column: 17, scope: !8407)
!8419 = !DILocation(line: 3664, column: 24, scope: !8407)
!8420 = !DILocation(line: 3664, column: 29, scope: !8407)
!8421 = !DILocation(line: 3664, column: 32, scope: !8407)
!8422 = !DILocation(line: 3664, column: 38, scope: !8407)
!8423 = !DILocation(line: 3664, column: 41, scope: !8407)
!8424 = !DILocation(line: 3664, column: 3, scope: !8407)
!8425 = distinct !DISubprogram(name: "cmp_extension", scope: !3, file: !3, line: 3678, type: !728, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8426 = !DILocalVariable(name: "a", arg: 1, scope: !8425, file: !3, line: 3678, type: !183)
!8427 = !DILocation(line: 3678, column: 39, scope: !8425)
!8428 = !DILocalVariable(name: "b", arg: 2, scope: !8425, file: !3, line: 3678, type: !183)
!8429 = !DILocation(line: 3678, column: 65, scope: !8425)
!8430 = !DILocalVariable(name: "cmp", arg: 3, scope: !8425, file: !3, line: 3679, type: !730)
!8431 = !DILocation(line: 3679, column: 22, scope: !8425)
!8432 = !DILocalVariable(name: "base1", scope: !8425, file: !3, line: 3681, type: !146)
!8433 = !DILocation(line: 3681, column: 15, scope: !8425)
!8434 = !DILocation(line: 3681, column: 32, scope: !8425)
!8435 = !DILocation(line: 3681, column: 35, scope: !8425)
!8436 = !DILocation(line: 3681, column: 23, scope: !8425)
!8437 = !DILocalVariable(name: "base2", scope: !8425, file: !3, line: 3682, type: !146)
!8438 = !DILocation(line: 3682, column: 15, scope: !8425)
!8439 = !DILocation(line: 3682, column: 32, scope: !8425)
!8440 = !DILocation(line: 3682, column: 35, scope: !8425)
!8441 = !DILocation(line: 3682, column: 23, scope: !8425)
!8442 = !DILocalVariable(name: "diff", scope: !8425, file: !3, line: 3683, type: !27)
!8443 = !DILocation(line: 3683, column: 7, scope: !8425)
!8444 = !DILocation(line: 3683, column: 14, scope: !8425)
!8445 = !DILocation(line: 3683, column: 19, scope: !8425)
!8446 = !DILocation(line: 3683, column: 27, scope: !8425)
!8447 = !DILocation(line: 3683, column: 39, scope: !8425)
!8448 = !DILocation(line: 3683, column: 47, scope: !8425)
!8449 = !DILocation(line: 3684, column: 10, scope: !8425)
!8450 = !DILocation(line: 3684, column: 17, scope: !8425)
!8451 = !DILocation(line: 3684, column: 24, scope: !8425)
!8452 = !DILocation(line: 3684, column: 29, scope: !8425)
!8453 = !DILocation(line: 3684, column: 32, scope: !8425)
!8454 = !DILocation(line: 3684, column: 38, scope: !8425)
!8455 = !DILocation(line: 3684, column: 41, scope: !8425)
!8456 = !DILocation(line: 3684, column: 3, scope: !8425)
!8457 = distinct !DISubprogram(name: "cmp_name", scope: !3, file: !3, line: 3668, type: !728, scopeLine: 3670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8458 = !DILocalVariable(name: "a", arg: 1, scope: !8457, file: !3, line: 3668, type: !183)
!8459 = !DILocation(line: 3668, column: 34, scope: !8457)
!8460 = !DILocalVariable(name: "b", arg: 2, scope: !8457, file: !3, line: 3668, type: !183)
!8461 = !DILocation(line: 3668, column: 60, scope: !8457)
!8462 = !DILocalVariable(name: "cmp", arg: 3, scope: !8457, file: !3, line: 3669, type: !730)
!8463 = !DILocation(line: 3669, column: 17, scope: !8457)
!8464 = !DILocation(line: 3671, column: 10, scope: !8457)
!8465 = !DILocation(line: 3671, column: 15, scope: !8457)
!8466 = !DILocation(line: 3671, column: 18, scope: !8457)
!8467 = !DILocation(line: 3671, column: 24, scope: !8457)
!8468 = !DILocation(line: 3671, column: 27, scope: !8457)
!8469 = !DILocation(line: 3671, column: 3, scope: !8457)
!8470 = distinct !DISubprogram(name: "needs_quoting", scope: !3, file: !3, line: 3099, type: !568, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8471 = !DILocalVariable(name: "name", arg: 1, scope: !8470, file: !3, line: 3099, type: !146)
!8472 = !DILocation(line: 3099, column: 28, scope: !8470)
!8473 = !DILocalVariable(name: "test", scope: !8470, file: !3, line: 3101, type: !666)
!8474 = !DILocation(line: 3101, column: 8, scope: !8470)
!8475 = !DILocalVariable(name: "len", scope: !8470, file: !3, line: 3102, type: !149)
!8476 = !DILocation(line: 3102, column: 10, scope: !8470)
!8477 = !DILocation(line: 3102, column: 33, scope: !8470)
!8478 = !DILocation(line: 3102, column: 53, scope: !8470)
!8479 = !DILocation(line: 3103, column: 33, scope: !8470)
!8480 = !DILocation(line: 3102, column: 16, scope: !8470)
!8481 = !DILocation(line: 3104, column: 11, scope: !8470)
!8482 = !DILocation(line: 3104, column: 10, scope: !8470)
!8483 = !DILocation(line: 3104, column: 19, scope: !8470)
!8484 = !DILocation(line: 3104, column: 16, scope: !8470)
!8485 = !DILocation(line: 3104, column: 25, scope: !8470)
!8486 = !DILocation(line: 3104, column: 36, scope: !8470)
!8487 = !DILocation(line: 3104, column: 28, scope: !8470)
!8488 = !DILocation(line: 3104, column: 45, scope: !8470)
!8489 = !DILocation(line: 3104, column: 42, scope: !8470)
!8490 = !DILocation(line: 3104, column: 3, scope: !8470)
!8491 = distinct !DISubprogram(name: "attach", scope: !3, file: !3, line: 4986, type: !672, scopeLine: 4987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8492 = !DILocalVariable(name: "dest", arg: 1, scope: !8491, file: !3, line: 4986, type: !143)
!8493 = !DILocation(line: 4986, column: 15, scope: !8491)
!8494 = !DILocalVariable(name: "dirname", arg: 2, scope: !8491, file: !3, line: 4986, type: !146)
!8495 = !DILocation(line: 4986, column: 33, scope: !8491)
!8496 = !DILocalVariable(name: "name", arg: 3, scope: !8491, file: !3, line: 4986, type: !146)
!8497 = !DILocation(line: 4986, column: 54, scope: !8491)
!8498 = !DILocalVariable(name: "dirnamep", scope: !8491, file: !3, line: 4988, type: !146)
!8499 = !DILocation(line: 4988, column: 15, scope: !8491)
!8500 = !DILocation(line: 4988, column: 26, scope: !8491)
!8501 = !DILocation(line: 4991, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 4991, column: 7)
!8503 = !DILocation(line: 4991, column: 18, scope: !8502)
!8504 = !DILocation(line: 4991, column: 25, scope: !8502)
!8505 = !DILocation(line: 4991, column: 28, scope: !8502)
!8506 = !DILocation(line: 4991, column: 39, scope: !8502)
!8507 = !DILocation(line: 4991, column: 7, scope: !8491)
!8508 = !DILocation(line: 4993, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 4992, column: 5)
!8510 = !DILocation(line: 4993, column: 15, scope: !8509)
!8511 = !DILocation(line: 4993, column: 14, scope: !8509)
!8512 = !DILocation(line: 4994, column: 28, scope: !8509)
!8513 = !DILocation(line: 4994, column: 19, scope: !8509)
!8514 = !DILocation(line: 4994, column: 14, scope: !8509)
!8515 = !DILocation(line: 4994, column: 17, scope: !8509)
!8516 = distinct !{!8516, !8508, !8512}
!8517 = !DILocation(line: 4996, column: 11, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 4996, column: 11)
!8519 = !DILocation(line: 4996, column: 22, scope: !8518)
!8520 = !DILocation(line: 4996, column: 20, scope: !8518)
!8521 = !DILocation(line: 4996, column: 30, scope: !8518)
!8522 = !DILocation(line: 4996, column: 33, scope: !8518)
!8523 = !DILocation(line: 4996, column: 46, scope: !8518)
!8524 = !DILocation(line: 4996, column: 11, scope: !8509)
!8525 = !DILocation(line: 4997, column: 14, scope: !8518)
!8526 = !DILocation(line: 4997, column: 17, scope: !8518)
!8527 = !DILocation(line: 4997, column: 9, scope: !8518)
!8528 = !DILocation(line: 4998, column: 5, scope: !8509)
!8529 = !DILocation(line: 4999, column: 3, scope: !8491)
!8530 = !DILocation(line: 4999, column: 11, scope: !8491)
!8531 = !DILocation(line: 4999, column: 10, scope: !8491)
!8532 = !DILocation(line: 5000, column: 20, scope: !8491)
!8533 = !DILocation(line: 5000, column: 15, scope: !8491)
!8534 = !DILocation(line: 5000, column: 10, scope: !8491)
!8535 = !DILocation(line: 5000, column: 13, scope: !8491)
!8536 = distinct !{!8536, !8529, !8532}
!8537 = !DILocation(line: 5001, column: 4, scope: !8491)
!8538 = !DILocation(line: 5001, column: 9, scope: !8491)
!8539 = !DILocation(line: 5002, column: 1, scope: !8491)
!8540 = !DILocalVariable(name: "file", arg: 1, scope: !1010, file: !3, line: 3080, type: !146)
!8541 = !DILocation(line: 3080, column: 35, scope: !1010)
!8542 = !DILocalVariable(name: "f", arg: 2, scope: !1010, file: !3, line: 3080, type: !252)
!8543 = !DILocation(line: 3080, column: 58, scope: !1010)
!8544 = !DILocation(line: 3086, column: 7, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 3086, column: 7)
!8546 = !DILocation(line: 3086, column: 10, scope: !8545)
!8547 = !DILocation(line: 3086, column: 15, scope: !8545)
!8548 = !{!3809, !2467, i64 24}
!8549 = !DILocation(line: 3086, column: 25, scope: !8545)
!8550 = !DILocation(line: 3086, column: 22, scope: !8545)
!8551 = !DILocation(line: 3086, column: 7, scope: !1010)
!8552 = !DILocation(line: 3088, column: 7, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 3087, column: 5)
!8554 = !DILocation(line: 3088, column: 13, scope: !8553)
!8555 = !DILocation(line: 3089, column: 7, scope: !8553)
!8556 = !DILocalVariable(name: "b", scope: !1010, file: !3, line: 3092, type: !141)
!8557 = !DILocation(line: 3092, column: 8, scope: !1010)
!8558 = !DILocation(line: 3092, column: 28, scope: !1010)
!8559 = !DILocation(line: 3092, column: 12, scope: !1010)
!8560 = !DILocation(line: 3093, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !1010, file: !3, line: 3093, column: 8)
!8562 = !DILocation(line: 3093, column: 11, scope: !8561)
!8563 = !DILocation(line: 3093, column: 33, scope: !8561)
!8564 = !DILocation(line: 3093, column: 14, scope: !8561)
!8565 = !DILocation(line: 3093, column: 8, scope: !1010)
!8566 = !DILocation(line: 3094, column: 26, scope: !8561)
!8567 = !DILocation(line: 3094, column: 29, scope: !8561)
!8568 = !DILocation(line: 3094, column: 34, scope: !8561)
!8569 = !DILocation(line: 3094, column: 24, scope: !8561)
!8570 = !DILocation(line: 3094, column: 5, scope: !8561)
!8571 = !DILocation(line: 3095, column: 10, scope: !1010)
!8572 = !DILocation(line: 3095, column: 3, scope: !1010)
!8573 = !DILocation(line: 3096, column: 1, scope: !1010)
!8574 = !DILocalVariable(name: "file", arg: 1, scope: !1013, file: !3, line: 3025, type: !146)
!8575 = !DILocation(line: 3025, column: 31, scope: !1013)
!8576 = !DILocalVariable(name: "f", arg: 2, scope: !1013, file: !3, line: 3025, type: !252)
!8577 = !DILocation(line: 3025, column: 54, scope: !1013)
!8578 = !DILocalVariable(name: "deref", arg: 3, scope: !1013, file: !3, line: 3025, type: !141)
!8579 = !DILocation(line: 3025, column: 62, scope: !1013)
!8580 = !DILocation(line: 3031, column: 7, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !1013, file: !3, line: 3031, column: 7)
!8582 = !DILocation(line: 3031, column: 10, scope: !8581)
!8583 = !DILocation(line: 3031, column: 15, scope: !8581)
!8584 = !DILocation(line: 3031, column: 25, scope: !8581)
!8585 = !DILocation(line: 3031, column: 22, scope: !8581)
!8586 = !DILocation(line: 3031, column: 7, scope: !1013)
!8587 = !DILocation(line: 3033, column: 7, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 3032, column: 5)
!8589 = !DILocation(line: 3033, column: 13, scope: !8588)
!8590 = !DILocation(line: 3034, column: 7, scope: !8588)
!8591 = !DILocalVariable(name: "r", scope: !1013, file: !3, line: 3036, type: !27)
!8592 = !DILocation(line: 3036, column: 7, scope: !1013)
!8593 = !DILocation(line: 3043, column: 10, scope: !1013)
!8594 = !DILocation(line: 3044, column: 24, scope: !1013)
!8595 = !DILocation(line: 3044, column: 31, scope: !1013)
!8596 = !DILocation(line: 3044, column: 34, scope: !1013)
!8597 = !DILocation(line: 3044, column: 12, scope: !1013)
!8598 = !DILocation(line: 3045, column: 25, scope: !1013)
!8599 = !DILocation(line: 3045, column: 32, scope: !1013)
!8600 = !DILocation(line: 3045, column: 35, scope: !1013)
!8601 = !DILocation(line: 3045, column: 12, scope: !1013)
!8602 = !DILocation(line: 3043, column: 7, scope: !1013)
!8603 = !DILocation(line: 3046, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !1013, file: !3, line: 3046, column: 7)
!8605 = !DILocation(line: 3046, column: 9, scope: !8604)
!8606 = !DILocation(line: 3046, column: 13, scope: !8604)
!8607 = !DILocation(line: 3046, column: 35, scope: !8604)
!8608 = !DILocation(line: 3046, column: 16, scope: !8604)
!8609 = !DILocation(line: 3046, column: 7, scope: !1013)
!8610 = !DILocation(line: 3047, column: 26, scope: !8604)
!8611 = !DILocation(line: 3047, column: 29, scope: !8604)
!8612 = !DILocation(line: 3047, column: 34, scope: !8604)
!8613 = !DILocation(line: 3047, column: 24, scope: !8604)
!8614 = !DILocation(line: 3047, column: 5, scope: !8604)
!8615 = !DILocation(line: 3048, column: 10, scope: !1013)
!8616 = !DILocation(line: 3048, column: 3, scope: !1013)
!8617 = !DILocation(line: 3049, column: 1, scope: !1013)
!8618 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !810, file: !810, line: 762, type: !680, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8619 = !DILocalVariable(name: "err", arg: 1, scope: !8618, file: !810, line: 762, type: !27)
!8620 = !DILocation(line: 762, column: 17, scope: !8618)
!8621 = !DILocation(line: 764, column: 10, scope: !8618)
!8622 = !DILocation(line: 764, column: 14, scope: !8618)
!8623 = !DILocation(line: 764, column: 28, scope: !8618)
!8624 = !DILocation(line: 764, column: 3, scope: !8618)
!8625 = !DILocalVariable(name: "file", arg: 1, scope: !1016, file: !3, line: 3055, type: !146)
!8626 = !DILocation(line: 3055, column: 33, scope: !1016)
!8627 = !DILocalVariable(name: "f", arg: 2, scope: !1016, file: !3, line: 3055, type: !252)
!8628 = !DILocation(line: 3055, column: 56, scope: !1016)
!8629 = !DILocation(line: 3061, column: 7, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 3061, column: 7)
!8631 = !DILocation(line: 3061, column: 10, scope: !8630)
!8632 = !DILocation(line: 3061, column: 15, scope: !8630)
!8633 = !DILocation(line: 3061, column: 25, scope: !8630)
!8634 = !DILocation(line: 3061, column: 22, scope: !8630)
!8635 = !DILocation(line: 3061, column: 7, scope: !1016)
!8636 = !DILocation(line: 3063, column: 7, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 3062, column: 5)
!8638 = !DILocation(line: 3063, column: 13, scope: !8637)
!8639 = !DILocation(line: 3064, column: 7, scope: !8637)
!8640 = !DILocation(line: 3069, column: 3, scope: !1016)
!8641 = !DILocation(line: 3069, column: 9, scope: !1016)
!8642 = !DILocalVariable(name: "n", scope: !1016, file: !3, line: 3070, type: !27)
!8643 = !DILocation(line: 3070, column: 7, scope: !1016)
!8644 = !DILocation(line: 3070, column: 25, scope: !1016)
!8645 = !DILocation(line: 3070, column: 32, scope: !1016)
!8646 = !DILocation(line: 3070, column: 35, scope: !1016)
!8647 = !DILocation(line: 3070, column: 11, scope: !1016)
!8648 = !DILocation(line: 3071, column: 7, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !1016, file: !3, line: 3071, column: 7)
!8650 = !DILocation(line: 3071, column: 9, scope: !8649)
!8651 = !DILocation(line: 3071, column: 14, scope: !8649)
!8652 = !DILocation(line: 3071, column: 36, scope: !8649)
!8653 = !DILocation(line: 3071, column: 17, scope: !8649)
!8654 = !DILocation(line: 3071, column: 7, scope: !1016)
!8655 = !DILocation(line: 3072, column: 26, scope: !8649)
!8656 = !DILocation(line: 3072, column: 29, scope: !8649)
!8657 = !DILocation(line: 3072, column: 34, scope: !8649)
!8658 = !DILocation(line: 3072, column: 24, scope: !8649)
!8659 = !DILocation(line: 3072, column: 5, scope: !8649)
!8660 = !DILocation(line: 3073, column: 10, scope: !1016)
!8661 = !DILocation(line: 3073, column: 3, scope: !1016)
!8662 = !DILocation(line: 3074, column: 1, scope: !1016)
!8663 = distinct !DISubprogram(name: "get_link_name", scope: !3, file: !3, line: 3453, type: !686, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8664 = !DILocalVariable(name: "filename", arg: 1, scope: !8663, file: !3, line: 3453, type: !146)
!8665 = !DILocation(line: 3453, column: 28, scope: !8663)
!8666 = !DILocalVariable(name: "f", arg: 2, scope: !8663, file: !3, line: 3453, type: !252)
!8667 = !DILocation(line: 3453, column: 55, scope: !8663)
!8668 = !DILocalVariable(name: "command_line_arg", arg: 3, scope: !8663, file: !3, line: 3453, type: !141)
!8669 = !DILocation(line: 3453, column: 63, scope: !8663)
!8670 = !DILocation(line: 3455, column: 38, scope: !8663)
!8671 = !DILocation(line: 3455, column: 48, scope: !8663)
!8672 = !DILocation(line: 3455, column: 51, scope: !8663)
!8673 = !DILocation(line: 3455, column: 56, scope: !8663)
!8674 = !DILocation(line: 3455, column: 17, scope: !8663)
!8675 = !DILocation(line: 3455, column: 3, scope: !8663)
!8676 = !DILocation(line: 3455, column: 6, scope: !8663)
!8677 = !DILocation(line: 3455, column: 15, scope: !8663)
!8678 = !DILocation(line: 3456, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 3456, column: 7)
!8680 = !DILocation(line: 3456, column: 10, scope: !8679)
!8681 = !DILocation(line: 3456, column: 19, scope: !8679)
!8682 = !DILocation(line: 3456, column: 7, scope: !8663)
!8683 = !DILocation(line: 3457, column: 19, scope: !8679)
!8684 = !DILocation(line: 3457, column: 37, scope: !8679)
!8685 = !DILocation(line: 3458, column: 19, scope: !8679)
!8686 = !DILocation(line: 3457, column: 5, scope: !8679)
!8687 = !DILocation(line: 3459, column: 1, scope: !8663)
!8688 = distinct !DISubprogram(name: "make_link_name", scope: !3, file: !3, line: 3467, type: !688, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8689 = !DILocalVariable(name: "name", arg: 1, scope: !8688, file: !3, line: 3467, type: !146)
!8690 = !DILocation(line: 3467, column: 29, scope: !8688)
!8691 = !DILocalVariable(name: "linkname", arg: 2, scope: !8688, file: !3, line: 3467, type: !146)
!8692 = !DILocation(line: 3467, column: 47, scope: !8688)
!8693 = !DILocation(line: 3469, column: 8, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3469, column: 7)
!8695 = !DILocation(line: 3469, column: 7, scope: !8688)
!8696 = !DILocation(line: 3470, column: 5, scope: !8694)
!8697 = !DILocation(line: 3472, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3472, column: 7)
!8699 = !DILocation(line: 3472, column: 7, scope: !8688)
!8700 = !DILocation(line: 3473, column: 21, scope: !8698)
!8701 = !DILocation(line: 3473, column: 12, scope: !8698)
!8702 = !DILocation(line: 3473, column: 5, scope: !8698)
!8703 = !DILocalVariable(name: "prefix_len", scope: !8688, file: !3, line: 3477, type: !149)
!8704 = !DILocation(line: 3477, column: 10, scope: !8688)
!8705 = !DILocation(line: 3477, column: 32, scope: !8688)
!8706 = !DILocation(line: 3477, column: 23, scope: !8688)
!8707 = !DILocation(line: 3478, column: 7, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3478, column: 7)
!8709 = !DILocation(line: 3478, column: 18, scope: !8708)
!8710 = !DILocation(line: 3478, column: 7, scope: !8688)
!8711 = !DILocation(line: 3479, column: 21, scope: !8708)
!8712 = !DILocation(line: 3479, column: 12, scope: !8708)
!8713 = !DILocation(line: 3479, column: 5, scope: !8708)
!8714 = !DILocalVariable(name: "p", scope: !8688, file: !3, line: 3481, type: !143)
!8715 = !DILocation(line: 3481, column: 9, scope: !8688)
!8716 = !DILocation(line: 3481, column: 22, scope: !8688)
!8717 = !DILocation(line: 3481, column: 33, scope: !8688)
!8718 = !DILocation(line: 3481, column: 47, scope: !8688)
!8719 = !DILocation(line: 3481, column: 39, scope: !8688)
!8720 = !DILocation(line: 3481, column: 37, scope: !8688)
!8721 = !DILocation(line: 3481, column: 57, scope: !8688)
!8722 = !DILocation(line: 3481, column: 13, scope: !8688)
!8723 = !DILocation(line: 3486, column: 10, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3486, column: 8)
!8725 = !DILocation(line: 3486, column: 8, scope: !8688)
!8726 = !DILocation(line: 3487, column: 5, scope: !8724)
!8727 = !DILocation(line: 3489, column: 20, scope: !8688)
!8728 = !DILocation(line: 3489, column: 23, scope: !8688)
!8729 = !DILocation(line: 3489, column: 29, scope: !8688)
!8730 = !DILocation(line: 3489, column: 11, scope: !8688)
!8731 = !DILocation(line: 3489, column: 42, scope: !8688)
!8732 = !DILocation(line: 3489, column: 3, scope: !8688)
!8733 = !DILocation(line: 3490, column: 10, scope: !8688)
!8734 = !DILocation(line: 3490, column: 3, scope: !8688)
!8735 = !DILocation(line: 3491, column: 1, scope: !8688)
!8736 = distinct !DISubprogram(name: "format_user_width", scope: !3, file: !3, line: 3993, type: !690, scopeLine: 3994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8737 = !DILocalVariable(name: "u", arg: 1, scope: !8736, file: !3, line: 3993, type: !692)
!8738 = !DILocation(line: 3993, column: 26, scope: !8736)
!8739 = !DILocation(line: 3995, column: 38, scope: !8736)
!8740 = !DILocation(line: 3995, column: 68, scope: !8736)
!8741 = !DILocation(line: 3995, column: 59, scope: !8736)
!8742 = !DILocation(line: 3995, column: 72, scope: !8736)
!8743 = !DILocation(line: 3995, column: 10, scope: !8736)
!8744 = !DILocation(line: 3995, column: 3, scope: !8736)
!8745 = distinct !DISubprogram(name: "format_group_width", scope: !3, file: !3, line: 4001, type: !695, scopeLine: 4002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8746 = !DILocalVariable(name: "g", arg: 1, scope: !8745, file: !3, line: 4001, type: !697)
!8747 = !DILocation(line: 4001, column: 27, scope: !8745)
!8748 = !DILocation(line: 4003, column: 38, scope: !8745)
!8749 = !DILocation(line: 4003, column: 69, scope: !8745)
!8750 = !DILocation(line: 4003, column: 59, scope: !8745)
!8751 = !DILocation(line: 4003, column: 73, scope: !8745)
!8752 = !DILocation(line: 4003, column: 10, scope: !8745)
!8753 = !DILocation(line: 4003, column: 3, scope: !8745)
!8754 = distinct !DISubprogram(name: "format_user_or_group_width", scope: !3, file: !3, line: 3975, type: !693, scopeLine: 3976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8755 = !DILocalVariable(name: "name", arg: 1, scope: !8754, file: !3, line: 3975, type: !146)
!8756 = !DILocation(line: 3975, column: 41, scope: !8754)
!8757 = !DILocalVariable(name: "id", arg: 2, scope: !8754, file: !3, line: 3975, type: !151)
!8758 = !DILocation(line: 3975, column: 65, scope: !8754)
!8759 = !DILocation(line: 3977, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 3977, column: 7)
!8761 = !DILocation(line: 3977, column: 7, scope: !8754)
!8762 = !DILocalVariable(name: "len", scope: !8763, file: !3, line: 3979, type: !27)
!8763 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 3978, column: 5)
!8764 = !DILocation(line: 3979, column: 11, scope: !8763)
!8765 = !DILocation(line: 3979, column: 27, scope: !8763)
!8766 = !DILocation(line: 3979, column: 17, scope: !8763)
!8767 = !DILocation(line: 3980, column: 14, scope: !8763)
!8768 = !DILocation(line: 3980, column: 7, scope: !8763)
!8769 = !DILocalVariable(name: "buf", scope: !8770, file: !3, line: 3984, type: !669)
!8770 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 3983, column: 5)
!8771 = !DILocation(line: 3984, column: 12, scope: !8770)
!8772 = !DILocation(line: 3985, column: 16, scope: !8770)
!8773 = !DILocation(line: 3985, column: 28, scope: !8770)
!8774 = !DILocation(line: 3985, column: 7, scope: !8770)
!8775 = !DILocation(line: 3986, column: 22, scope: !8770)
!8776 = !DILocation(line: 3986, column: 14, scope: !8770)
!8777 = !DILocation(line: 3986, column: 7, scope: !8770)
!8778 = !DILocation(line: 3988, column: 1, scope: !8754)
!8779 = distinct !DISubprogram(name: "errno_unsupported", scope: !3, file: !3, line: 3016, type: !680, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8780 = !DILocalVariable(name: "err", arg: 1, scope: !8779, file: !3, line: 3016, type: !27)
!8781 = !DILocation(line: 3016, column: 24, scope: !8779)
!8782 = !DILocation(line: 3018, column: 11, scope: !8779)
!8783 = !DILocation(line: 3018, column: 15, scope: !8779)
!8784 = !DILocation(line: 3018, column: 25, scope: !8779)
!8785 = !DILocation(line: 3018, column: 28, scope: !8779)
!8786 = !DILocation(line: 3018, column: 32, scope: !8779)
!8787 = !DILocation(line: 3018, column: 42, scope: !8779)
!8788 = !DILocation(line: 3018, column: 57, scope: !8779)
!8789 = !DILocation(line: 3018, column: 45, scope: !8779)
!8790 = !DILocation(line: 3018, column: 3, scope: !8779)
!8791 = distinct !DISubprogram(name: "has_capability", scope: !3, file: !3, line: 2942, type: !568, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8792 = !DILocalVariable(name: "name", arg: 1, scope: !8791, file: !3, line: 2942, type: !146)
!8793 = !DILocation(line: 2942, column: 29, scope: !8791)
!8794 = !DILocalVariable(name: "result", scope: !8791, file: !3, line: 2944, type: !143)
!8795 = !DILocation(line: 2944, column: 9, scope: !8791)
!8796 = !DILocalVariable(name: "has_cap", scope: !8791, file: !3, line: 2945, type: !141)
!8797 = !DILocation(line: 2945, column: 8, scope: !8791)
!8798 = !DILocalVariable(name: "cap_d", scope: !8791, file: !3, line: 2947, type: !676)
!8799 = !DILocation(line: 2947, column: 9, scope: !8791)
!8800 = !DILocation(line: 2947, column: 31, scope: !8791)
!8801 = !DILocation(line: 2947, column: 17, scope: !8791)
!8802 = !DILocation(line: 2948, column: 7, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2948, column: 7)
!8804 = !DILocation(line: 2948, column: 13, scope: !8803)
!8805 = !DILocation(line: 2948, column: 7, scope: !8791)
!8806 = !DILocation(line: 2949, column: 5, scope: !8803)
!8807 = !DILocation(line: 2951, column: 25, scope: !8791)
!8808 = !DILocation(line: 2951, column: 12, scope: !8791)
!8809 = !DILocation(line: 2951, column: 10, scope: !8791)
!8810 = !DILocation(line: 2952, column: 13, scope: !8791)
!8811 = !DILocation(line: 2952, column: 3, scope: !8791)
!8812 = !DILocation(line: 2953, column: 8, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 2953, column: 7)
!8814 = !DILocation(line: 2953, column: 7, scope: !8791)
!8815 = !DILocation(line: 2954, column: 5, scope: !8813)
!8816 = !DILocation(line: 2957, column: 16, scope: !8791)
!8817 = !DILocation(line: 2957, column: 15, scope: !8791)
!8818 = !DILocation(line: 2957, column: 14, scope: !8791)
!8819 = !DILocation(line: 2957, column: 13, scope: !8791)
!8820 = !DILocation(line: 2957, column: 11, scope: !8791)
!8821 = !DILocation(line: 2959, column: 13, scope: !8791)
!8822 = !DILocation(line: 2959, column: 3, scope: !8791)
!8823 = !DILocation(line: 2960, column: 10, scope: !8791)
!8824 = !DILocation(line: 2960, column: 3, scope: !8791)
!8825 = !DILocation(line: 2961, column: 1, scope: !8791)
!8826 = distinct !DISubprogram(name: "known_term_type", scope: !3, file: !3, line: 2489, type: !602, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!8827 = !DILocalVariable(name: "term", scope: !8826, file: !3, line: 2491, type: !146)
!8828 = !DILocation(line: 2491, column: 15, scope: !8826)
!8829 = !DILocation(line: 2491, column: 22, scope: !8826)
!8830 = !DILocation(line: 2492, column: 9, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2492, column: 7)
!8832 = !DILocation(line: 2492, column: 14, scope: !8831)
!8833 = !DILocation(line: 2492, column: 20, scope: !8831)
!8834 = !DILocation(line: 2492, column: 19, scope: !8831)
!8835 = !DILocation(line: 2492, column: 7, scope: !8826)
!8836 = !DILocation(line: 2493, column: 5, scope: !8831)
!8837 = !DILocalVariable(name: "line", scope: !8826, file: !3, line: 2495, type: !146)
!8838 = !DILocation(line: 2495, column: 15, scope: !8826)
!8839 = !DILocation(line: 2496, column: 3, scope: !8826)
!8840 = !DILocation(line: 2496, column: 10, scope: !8826)
!8841 = !DILocation(line: 2496, column: 15, scope: !8826)
!8842 = !DILocation(line: 2496, column: 24, scope: !8826)
!8843 = !DILocation(line: 2498, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2498, column: 11)
!8845 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2497, column: 5)
!8846 = !DILocation(line: 2498, column: 39, scope: !8844)
!8847 = !DILocation(line: 2498, column: 11, scope: !8845)
!8848 = !DILocation(line: 2500, column: 24, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2500, column: 15)
!8850 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 2499, column: 9)
!8851 = !DILocation(line: 2500, column: 29, scope: !8849)
!8852 = !DILocation(line: 2500, column: 34, scope: !8849)
!8853 = !DILocation(line: 2500, column: 15, scope: !8849)
!8854 = !DILocation(line: 2500, column: 43, scope: !8849)
!8855 = !DILocation(line: 2500, column: 15, scope: !8850)
!8856 = !DILocation(line: 2501, column: 13, scope: !8849)
!8857 = !DILocation(line: 2502, column: 9, scope: !8850)
!8858 = !DILocation(line: 2503, column: 23, scope: !8845)
!8859 = !DILocation(line: 2503, column: 15, scope: !8845)
!8860 = !DILocation(line: 2503, column: 29, scope: !8845)
!8861 = !DILocation(line: 2503, column: 12, scope: !8845)
!8862 = distinct !{!8862, !8839, !8863}
!8863 = !DILocation(line: 2504, column: 5, scope: !8826)
!8864 = !DILocation(line: 2506, column: 3, scope: !8826)
!8865 = !DILocation(line: 2507, column: 1, scope: !8826)
!8866 = !DILocalVariable(name: "dest", arg: 1, scope: !138, file: !3, line: 2281, type: !142)
!8867 = !DILocation(line: 2281, column: 26, scope: !138)
!8868 = !DILocalVariable(name: "src", arg: 2, scope: !138, file: !3, line: 2281, type: !145)
!8869 = !DILocation(line: 2281, column: 45, scope: !138)
!8870 = !DILocalVariable(name: "equals_end", arg: 3, scope: !138, file: !3, line: 2281, type: !141)
!8871 = !DILocation(line: 2281, column: 55, scope: !138)
!8872 = !DILocalVariable(name: "output_count", arg: 4, scope: !138, file: !3, line: 2282, type: !148)
!8873 = !DILocation(line: 2282, column: 27, scope: !138)
!8874 = !DILocalVariable(name: "num", scope: !138, file: !3, line: 2284, type: !144)
!8875 = !DILocation(line: 2284, column: 8, scope: !138)
!8876 = !DILocalVariable(name: "count", scope: !138, file: !3, line: 2285, type: !149)
!8877 = !DILocation(line: 2285, column: 10, scope: !138)
!8878 = !DILocalVariable(name: "state", scope: !138, file: !3, line: 2288, type: !137)
!8879 = !DILocation(line: 2288, column: 5, scope: !138)
!8880 = !DILocalVariable(name: "p", scope: !138, file: !3, line: 2289, type: !146)
!8881 = !DILocation(line: 2289, column: 15, scope: !138)
!8882 = !DILocalVariable(name: "q", scope: !138, file: !3, line: 2290, type: !143)
!8883 = !DILocation(line: 2290, column: 9, scope: !138)
!8884 = !DILocation(line: 2292, column: 8, scope: !138)
!8885 = !DILocation(line: 2292, column: 7, scope: !138)
!8886 = !DILocation(line: 2292, column: 5, scope: !138)
!8887 = !DILocation(line: 2293, column: 8, scope: !138)
!8888 = !DILocation(line: 2293, column: 7, scope: !138)
!8889 = !DILocation(line: 2293, column: 5, scope: !138)
!8890 = !DILocation(line: 2295, column: 9, scope: !138)
!8891 = !DILocation(line: 2296, column: 7, scope: !138)
!8892 = !DILocation(line: 2298, column: 9, scope: !138)
!8893 = !DILocation(line: 2299, column: 3, scope: !138)
!8894 = !DILocation(line: 2299, column: 10, scope: !138)
!8895 = !DILocation(line: 2299, column: 16, scope: !138)
!8896 = !DILocation(line: 2301, column: 15, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !138, file: !3, line: 2300, column: 5)
!8898 = !DILocation(line: 2301, column: 7, scope: !8897)
!8899 = !DILocation(line: 2304, column: 20, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2302, column: 9)
!8901 = !DILocation(line: 2304, column: 19, scope: !8900)
!8902 = !DILocation(line: 2304, column: 11, scope: !8900)
!8903 = !DILocation(line: 2308, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2305, column: 13)
!8905 = !DILocation(line: 2309, column: 15, scope: !8904)
!8906 = !DILocation(line: 2311, column: 21, scope: !8904)
!8907 = !DILocation(line: 2312, column: 15, scope: !8904)
!8908 = !DILocation(line: 2313, column: 15, scope: !8904)
!8909 = !DILocation(line: 2315, column: 21, scope: !8904)
!8910 = !DILocation(line: 2316, column: 15, scope: !8904)
!8911 = !DILocation(line: 2317, column: 15, scope: !8904)
!8912 = !DILocation(line: 2319, column: 19, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 2319, column: 19)
!8914 = !DILocation(line: 2319, column: 19, scope: !8904)
!8915 = !DILocation(line: 2321, column: 25, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 2320, column: 17)
!8917 = !DILocation(line: 2322, column: 19, scope: !8916)
!8918 = !DILocation(line: 2324, column: 15, scope: !8904)
!8919 = !DILocation(line: 2326, column: 27, scope: !8904)
!8920 = !DILocation(line: 2326, column: 24, scope: !8904)
!8921 = !DILocation(line: 2326, column: 18, scope: !8904)
!8922 = !DILocation(line: 2326, column: 22, scope: !8904)
!8923 = !DILocation(line: 2327, column: 15, scope: !8904)
!8924 = !DILocation(line: 2328, column: 15, scope: !8904)
!8925 = !DILocation(line: 2330, column: 11, scope: !8900)
!8926 = !DILocation(line: 2333, column: 20, scope: !8900)
!8927 = !DILocation(line: 2333, column: 19, scope: !8900)
!8928 = !DILocation(line: 2333, column: 11, scope: !8900)
!8929 = !DILocation(line: 2343, column: 21, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2334, column: 13)
!8931 = !DILocation(line: 2344, column: 22, scope: !8930)
!8932 = !DILocation(line: 2344, column: 21, scope: !8930)
!8933 = !DILocation(line: 2344, column: 24, scope: !8930)
!8934 = !DILocation(line: 2344, column: 19, scope: !8930)
!8935 = !DILocation(line: 2345, column: 15, scope: !8930)
!8936 = !DILocation(line: 2348, column: 21, scope: !8930)
!8937 = !DILocation(line: 2349, column: 19, scope: !8930)
!8938 = !DILocation(line: 2350, column: 15, scope: !8930)
!8939 = !DILocation(line: 2352, column: 19, scope: !8930)
!8940 = !DILocation(line: 2353, column: 15, scope: !8930)
!8941 = !DILocation(line: 2355, column: 19, scope: !8930)
!8942 = !DILocation(line: 2356, column: 15, scope: !8930)
!8943 = !DILocation(line: 2358, column: 19, scope: !8930)
!8944 = !DILocation(line: 2359, column: 15, scope: !8930)
!8945 = !DILocation(line: 2361, column: 19, scope: !8930)
!8946 = !DILocation(line: 2362, column: 15, scope: !8930)
!8947 = !DILocation(line: 2364, column: 19, scope: !8930)
!8948 = !DILocation(line: 2365, column: 15, scope: !8930)
!8949 = !DILocation(line: 2367, column: 19, scope: !8930)
!8950 = !DILocation(line: 2368, column: 15, scope: !8930)
!8951 = !DILocation(line: 2370, column: 19, scope: !8930)
!8952 = !DILocation(line: 2371, column: 15, scope: !8930)
!8953 = !DILocation(line: 2373, column: 19, scope: !8930)
!8954 = !DILocation(line: 2374, column: 15, scope: !8930)
!8955 = !DILocation(line: 2376, column: 19, scope: !8930)
!8956 = !DILocation(line: 2377, column: 15, scope: !8930)
!8957 = !DILocation(line: 2379, column: 19, scope: !8930)
!8958 = !DILocation(line: 2380, column: 15, scope: !8930)
!8959 = !DILocation(line: 2382, column: 21, scope: !8930)
!8960 = !DILocation(line: 2383, column: 15, scope: !8930)
!8961 = !DILocation(line: 2385, column: 22, scope: !8930)
!8962 = !DILocation(line: 2385, column: 21, scope: !8930)
!8963 = !DILocation(line: 2385, column: 19, scope: !8930)
!8964 = !DILocation(line: 2386, column: 15, scope: !8930)
!8965 = !DILocation(line: 2388, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2388, column: 15)
!8967 = !DILocation(line: 2388, column: 21, scope: !8966)
!8968 = !DILocation(line: 2388, column: 15, scope: !8900)
!8969 = !DILocation(line: 2390, column: 24, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2389, column: 13)
!8971 = !DILocation(line: 2390, column: 18, scope: !8970)
!8972 = !DILocation(line: 2390, column: 22, scope: !8970)
!8973 = !DILocation(line: 2391, column: 15, scope: !8970)
!8974 = !DILocation(line: 2392, column: 21, scope: !8970)
!8975 = !DILocation(line: 2393, column: 13, scope: !8970)
!8976 = !DILocation(line: 2394, column: 11, scope: !8900)
!8977 = !DILocation(line: 2395, column: 11, scope: !8900)
!8978 = !DILocation(line: 2398, column: 16, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2398, column: 15)
!8980 = !DILocation(line: 2398, column: 15, scope: !8979)
!8981 = !DILocation(line: 2398, column: 18, scope: !8979)
!8982 = !DILocation(line: 2398, column: 24, scope: !8979)
!8983 = !DILocation(line: 2398, column: 28, scope: !8979)
!8984 = !DILocation(line: 2398, column: 27, scope: !8979)
!8985 = !DILocation(line: 2398, column: 30, scope: !8979)
!8986 = !DILocation(line: 2398, column: 15, scope: !8900)
!8987 = !DILocation(line: 2400, column: 24, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2399, column: 13)
!8989 = !DILocation(line: 2400, column: 18, scope: !8988)
!8990 = !DILocation(line: 2400, column: 22, scope: !8988)
!8991 = !DILocation(line: 2401, column: 15, scope: !8988)
!8992 = !DILocation(line: 2402, column: 21, scope: !8988)
!8993 = !DILocation(line: 2403, column: 13, scope: !8988)
!8994 = !DILocation(line: 2405, column: 20, scope: !8979)
!8995 = !DILocation(line: 2405, column: 24, scope: !8979)
!8996 = !DILocation(line: 2405, column: 36, scope: !8979)
!8997 = !DILocation(line: 2405, column: 33, scope: !8979)
!8998 = !DILocation(line: 2405, column: 40, scope: !8979)
!8999 = !DILocation(line: 2405, column: 30, scope: !8979)
!9000 = !DILocation(line: 2405, column: 19, scope: !8979)
!9001 = !DILocation(line: 2405, column: 17, scope: !8979)
!9002 = !DILocation(line: 2406, column: 11, scope: !8900)
!9003 = !DILocation(line: 2409, column: 20, scope: !8900)
!9004 = !DILocation(line: 2409, column: 19, scope: !8900)
!9005 = !DILocation(line: 2409, column: 11, scope: !8900)
!9006 = !DILocation(line: 2421, column: 22, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2410, column: 13)
!9008 = !DILocation(line: 2421, column: 26, scope: !9007)
!9009 = !DILocation(line: 2421, column: 38, scope: !9007)
!9010 = !DILocation(line: 2421, column: 35, scope: !9007)
!9011 = !DILocation(line: 2421, column: 42, scope: !9007)
!9012 = !DILocation(line: 2421, column: 32, scope: !9007)
!9013 = !DILocation(line: 2421, column: 21, scope: !9007)
!9014 = !DILocation(line: 2421, column: 19, scope: !9007)
!9015 = !DILocation(line: 2422, column: 15, scope: !9007)
!9016 = !DILocation(line: 2429, column: 22, scope: !9007)
!9017 = !DILocation(line: 2429, column: 26, scope: !9007)
!9018 = !DILocation(line: 2429, column: 38, scope: !9007)
!9019 = !DILocation(line: 2429, column: 35, scope: !9007)
!9020 = !DILocation(line: 2429, column: 42, scope: !9007)
!9021 = !DILocation(line: 2429, column: 32, scope: !9007)
!9022 = !DILocation(line: 2429, column: 49, scope: !9007)
!9023 = !DILocation(line: 2429, column: 21, scope: !9007)
!9024 = !DILocation(line: 2429, column: 19, scope: !9007)
!9025 = !DILocation(line: 2430, column: 15, scope: !9007)
!9026 = !DILocation(line: 2437, column: 22, scope: !9007)
!9027 = !DILocation(line: 2437, column: 26, scope: !9007)
!9028 = !DILocation(line: 2437, column: 38, scope: !9007)
!9029 = !DILocation(line: 2437, column: 35, scope: !9007)
!9030 = !DILocation(line: 2437, column: 42, scope: !9007)
!9031 = !DILocation(line: 2437, column: 32, scope: !9007)
!9032 = !DILocation(line: 2437, column: 49, scope: !9007)
!9033 = !DILocation(line: 2437, column: 21, scope: !9007)
!9034 = !DILocation(line: 2437, column: 19, scope: !9007)
!9035 = !DILocation(line: 2438, column: 15, scope: !9007)
!9036 = !DILocation(line: 2440, column: 24, scope: !9007)
!9037 = !DILocation(line: 2440, column: 18, scope: !9007)
!9038 = !DILocation(line: 2440, column: 22, scope: !9007)
!9039 = !DILocation(line: 2441, column: 15, scope: !9007)
!9040 = !DILocation(line: 2442, column: 21, scope: !9007)
!9041 = !DILocation(line: 2443, column: 15, scope: !9007)
!9042 = !DILocation(line: 2445, column: 11, scope: !8900)
!9043 = !DILocation(line: 2448, column: 17, scope: !8900)
!9044 = !DILocation(line: 2449, column: 16, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2449, column: 15)
!9046 = !DILocation(line: 2449, column: 15, scope: !9045)
!9047 = !DILocation(line: 2449, column: 18, scope: !9045)
!9048 = !DILocation(line: 2449, column: 25, scope: !9045)
!9049 = !DILocation(line: 2449, column: 29, scope: !9045)
!9050 = !DILocation(line: 2449, column: 28, scope: !9045)
!9051 = !DILocation(line: 2449, column: 31, scope: !9045)
!9052 = !DILocation(line: 2449, column: 15, scope: !8900)
!9053 = !DILocation(line: 2451, column: 27, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2450, column: 13)
!9055 = !DILocation(line: 2451, column: 24, scope: !9054)
!9056 = !DILocation(line: 2451, column: 31, scope: !9054)
!9057 = !DILocation(line: 2451, column: 18, scope: !9054)
!9058 = !DILocation(line: 2451, column: 22, scope: !9054)
!9059 = !DILocation(line: 2452, column: 15, scope: !9054)
!9060 = !DILocation(line: 2453, column: 13, scope: !9054)
!9061 = !DILocation(line: 2454, column: 21, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2454, column: 20)
!9063 = !DILocation(line: 2454, column: 20, scope: !9062)
!9064 = !DILocation(line: 2454, column: 23, scope: !9062)
!9065 = !DILocation(line: 2454, column: 20, scope: !9045)
!9066 = !DILocation(line: 2456, column: 18, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2455, column: 13)
!9068 = !DILocation(line: 2456, column: 22, scope: !9067)
!9069 = !DILocation(line: 2457, column: 15, scope: !9067)
!9070 = !DILocation(line: 2458, column: 13, scope: !9067)
!9071 = !DILocation(line: 2460, column: 19, scope: !9062)
!9072 = !DILocation(line: 2461, column: 11, scope: !8900)
!9073 = !DILocation(line: 2464, column: 11, scope: !8900)
!9074 = distinct !{!9074, !8893, !9075}
!9075 = !DILocation(line: 2466, column: 5, scope: !138)
!9076 = !DILocation(line: 2468, column: 11, scope: !138)
!9077 = !DILocation(line: 2468, column: 4, scope: !138)
!9078 = !DILocation(line: 2468, column: 9, scope: !138)
!9079 = !DILocation(line: 2469, column: 10, scope: !138)
!9080 = !DILocation(line: 2469, column: 4, scope: !138)
!9081 = !DILocation(line: 2469, column: 8, scope: !138)
!9082 = !DILocation(line: 2470, column: 19, scope: !138)
!9083 = !DILocation(line: 2470, column: 4, scope: !138)
!9084 = !DILocation(line: 2470, column: 17, scope: !138)
!9085 = !DILocation(line: 2472, column: 10, scope: !138)
!9086 = !DILocation(line: 2472, column: 16, scope: !138)
!9087 = !DILocation(line: 2472, column: 3, scope: !138)
!9088 = distinct !DISubprogram(name: "getenv_quoting_style", scope: !3, file: !3, line: 2655, type: !341, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9089 = !DILocalVariable(name: "q_style", scope: !9088, file: !3, line: 2657, type: !146)
!9090 = !DILocation(line: 2657, column: 15, scope: !9088)
!9091 = !DILocation(line: 2657, column: 25, scope: !9088)
!9092 = !DILocation(line: 2658, column: 7, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 2658, column: 7)
!9094 = !DILocation(line: 2658, column: 7, scope: !9088)
!9095 = !DILocalVariable(name: "i", scope: !9096, file: !3, line: 2660, type: !27)
!9096 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 2659, column: 5)
!9097 = !DILocation(line: 2660, column: 11, scope: !9096)
!9098 = !DILocation(line: 2660, column: 15, scope: !9096)
!9099 = !DILocation(line: 2661, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 2661, column: 11)
!9101 = !DILocation(line: 2661, column: 13, scope: !9100)
!9102 = !DILocation(line: 2661, column: 11, scope: !9096)
!9103 = !DILocation(line: 2662, column: 53, scope: !9100)
!9104 = !DILocation(line: 2662, column: 34, scope: !9100)
!9105 = !DILocation(line: 2662, column: 9, scope: !9100)
!9106 = !DILocation(line: 2665, column: 8, scope: !9100)
!9107 = !DILocation(line: 2666, column: 23, scope: !9100)
!9108 = !DILocation(line: 2666, column: 16, scope: !9100)
!9109 = !DILocation(line: 2664, column: 9, scope: !9100)
!9110 = !DILocation(line: 2667, column: 5, scope: !9096)
!9111 = !DILocation(line: 2668, column: 1, scope: !9088)
!9112 = distinct !DISubprogram(name: "set_line_length", scope: !3, file: !3, line: 1663, type: !568, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9113 = !DILocalVariable(name: "spec", arg: 1, scope: !9112, file: !3, line: 1663, type: !146)
!9114 = !DILocation(line: 1663, column: 30, scope: !9112)
!9115 = !DILocalVariable(name: "val", scope: !9112, file: !3, line: 1665, type: !168)
!9116 = !DILocation(line: 1665, column: 13, scope: !9112)
!9117 = !DILocation(line: 1669, column: 23, scope: !9112)
!9118 = !DILocation(line: 1669, column: 11, scope: !9112)
!9119 = !DILocation(line: 1669, column: 3, scope: !9112)
!9120 = !DILocation(line: 1672, column: 21, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1670, column: 5)
!9122 = !DILocation(line: 1672, column: 19, scope: !9121)
!9123 = !DILocation(line: 1673, column: 7, scope: !9121)
!9124 = !DILocation(line: 1676, column: 19, scope: !9121)
!9125 = !DILocation(line: 1677, column: 7, scope: !9121)
!9126 = !DILocation(line: 1680, column: 7, scope: !9121)
!9127 = !DILocation(line: 1682, column: 1, scope: !9112)
!9128 = distinct !DISubprogram(name: "add_ignore_pattern", scope: !3, file: !3, line: 2893, type: !570, scopeLine: 2894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9129 = !DILocalVariable(name: "pattern", arg: 1, scope: !9128, file: !3, line: 2893, type: !146)
!9130 = !DILocation(line: 2893, column: 33, scope: !9128)
!9131 = !DILocalVariable(name: "ignore", scope: !9128, file: !3, line: 2895, type: !511)
!9132 = !DILocation(line: 2895, column: 26, scope: !9128)
!9133 = !DILocation(line: 2897, column: 12, scope: !9128)
!9134 = !DILocation(line: 2897, column: 10, scope: !9128)
!9135 = !DILocation(line: 2898, column: 21, scope: !9128)
!9136 = !DILocation(line: 2898, column: 3, scope: !9128)
!9137 = !DILocation(line: 2898, column: 11, scope: !9128)
!9138 = !DILocation(line: 2898, column: 19, scope: !9128)
!9139 = !DILocation(line: 2900, column: 18, scope: !9128)
!9140 = !DILocation(line: 2900, column: 3, scope: !9128)
!9141 = !DILocation(line: 2900, column: 11, scope: !9128)
!9142 = !DILocation(line: 2900, column: 16, scope: !9128)
!9143 = !DILocation(line: 2901, column: 21, scope: !9128)
!9144 = !DILocation(line: 2901, column: 19, scope: !9128)
!9145 = !DILocation(line: 2902, column: 1, scope: !9128)
!9146 = distinct !DISubprogram(name: "bad_cast", scope: !810, file: !810, line: 695, type: !572, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9147 = !DILocalVariable(name: "s", arg: 1, scope: !9146, file: !810, line: 695, type: !146)
!9148 = !DILocation(line: 695, column: 23, scope: !9146)
!9149 = !DILocation(line: 697, column: 19, scope: !9146)
!9150 = !DILocation(line: 697, column: 3, scope: !9146)
!9151 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 5127, type: !174, scopeLine: 5128, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9152 = !DILocalVariable(name: "status", arg: 1, scope: !9151, file: !3, line: 5127, type: !27)
!9153 = !DILocation(line: 5127, column: 12, scope: !9151)
!9154 = !DILocation(line: 5129, column: 7, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 5129, column: 7)
!9156 = !DILocation(line: 5129, column: 14, scope: !9155)
!9157 = !DILocation(line: 5129, column: 7, scope: !9151)
!9158 = !DILocation(line: 5130, column: 5, scope: !9155)
!9159 = !DILocation(line: 5130, column: 5, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 5130, column: 5)
!9161 = !DILocation(line: 5133, column: 15, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 5132, column: 5)
!9163 = !DILocation(line: 5133, column: 55, scope: !9162)
!9164 = !DILocation(line: 5133, column: 7, scope: !9162)
!9165 = !DILocation(line: 5134, column: 7, scope: !9162)
!9166 = !DILocation(line: 5139, column: 7, scope: !9162)
!9167 = !DILocation(line: 5141, column: 7, scope: !9162)
!9168 = !DILocation(line: 5147, column: 7, scope: !9162)
!9169 = !DILocation(line: 5151, column: 7, scope: !9162)
!9170 = !DILocation(line: 5158, column: 7, scope: !9162)
!9171 = !DILocation(line: 5167, column: 7, scope: !9162)
!9172 = !DILocation(line: 5175, column: 7, scope: !9162)
!9173 = !DILocation(line: 5178, column: 7, scope: !9162)
!9174 = !DILocation(line: 5184, column: 7, scope: !9162)
!9175 = !DILocation(line: 5187, column: 7, scope: !9162)
!9176 = !DILocation(line: 5191, column: 7, scope: !9162)
!9177 = !DILocation(line: 5201, column: 7, scope: !9162)
!9178 = !DILocation(line: 5205, column: 7, scope: !9162)
!9179 = !DILocation(line: 5214, column: 7, scope: !9162)
!9180 = !DILocation(line: 5218, column: 7, scope: !9162)
!9181 = !DILocation(line: 5226, column: 7, scope: !9162)
!9182 = !DILocation(line: 5233, column: 7, scope: !9162)
!9183 = !DILocation(line: 5244, column: 7, scope: !9162)
!9184 = !DILocation(line: 5249, column: 7, scope: !9162)
!9185 = !DILocation(line: 5260, column: 7, scope: !9162)
!9186 = !DILocation(line: 5263, column: 7, scope: !9162)
!9187 = !DILocation(line: 5267, column: 7, scope: !9162)
!9188 = !DILocation(line: 5274, column: 7, scope: !9162)
!9189 = !DILocation(line: 5282, column: 7, scope: !9162)
!9190 = !DILocation(line: 5283, column: 7, scope: !9162)
!9191 = !DILocation(line: 5284, column: 7, scope: !9162)
!9192 = !DILocation(line: 5285, column: 7, scope: !9162)
!9193 = !DILocation(line: 5293, column: 7, scope: !9162)
!9194 = !DILocation(line: 5300, column: 7, scope: !9162)
!9195 = !DILocation(line: 5307, column: 28, scope: !9162)
!9196 = !DILocation(line: 5307, column: 7, scope: !9162)
!9197 = !DILocation(line: 5309, column: 9, scope: !9151)
!9198 = !DILocation(line: 5309, column: 3, scope: !9151)
!9199 = distinct !DISubprogram(name: "abformat_init", scope: !3, file: !3, line: 1152, type: !341, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9200 = !DILocalVariable(name: "pb", scope: !9199, file: !3, line: 1154, type: !561)
!9201 = !DILocation(line: 1154, column: 15, scope: !9199)
!9202 = !DILocalVariable(name: "recent", scope: !9203, file: !3, line: 1155, type: !27)
!9203 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1155, column: 3)
!9204 = !DILocation(line: 1155, column: 12, scope: !9203)
!9205 = !DILocation(line: 1155, column: 8, scope: !9203)
!9206 = !DILocation(line: 1155, column: 24, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 1155, column: 3)
!9208 = !DILocation(line: 1155, column: 31, scope: !9207)
!9209 = !DILocation(line: 1155, column: 3, scope: !9203)
!9210 = !DILocation(line: 1156, column: 52, scope: !9207)
!9211 = !DILocation(line: 1156, column: 35, scope: !9207)
!9212 = !DILocation(line: 1156, column: 18, scope: !9207)
!9213 = !DILocation(line: 1156, column: 8, scope: !9207)
!9214 = !DILocation(line: 1156, column: 5, scope: !9207)
!9215 = !DILocation(line: 1156, column: 16, scope: !9207)
!9216 = !DILocation(line: 1155, column: 42, scope: !9207)
!9217 = !DILocation(line: 1155, column: 3, scope: !9207)
!9218 = distinct !{!9218, !9209, !9219}
!9219 = !DILocation(line: 1156, column: 59, scope: !9203)
!9220 = !DILocation(line: 1157, column: 10, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1157, column: 7)
!9222 = !DILocation(line: 1157, column: 16, scope: !9221)
!9223 = !DILocation(line: 1157, column: 19, scope: !9221)
!9224 = !DILocation(line: 1157, column: 7, scope: !9199)
!9225 = !DILocation(line: 1158, column: 5, scope: !9221)
!9226 = !DILocalVariable(name: "abmon", scope: !9199, file: !3, line: 1160, type: !574)
!9227 = !DILocation(line: 1160, column: 8, scope: !9199)
!9228 = !DILocation(line: 1161, column: 21, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1161, column: 7)
!9230 = !DILocation(line: 1161, column: 9, scope: !9229)
!9231 = !DILocation(line: 1161, column: 7, scope: !9199)
!9232 = !DILocation(line: 1162, column: 5, scope: !9229)
!9233 = !DILocalVariable(name: "recent", scope: !9234, file: !3, line: 1164, type: !27)
!9234 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 1164, column: 3)
!9235 = !DILocation(line: 1164, column: 12, scope: !9234)
!9236 = !DILocation(line: 1164, column: 8, scope: !9234)
!9237 = !DILocation(line: 1164, column: 24, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1164, column: 3)
!9239 = !DILocation(line: 1164, column: 31, scope: !9238)
!9240 = !DILocation(line: 1164, column: 3, scope: !9234)
!9241 = !DILocalVariable(name: "fmt", scope: !9242, file: !3, line: 1166, type: !146)
!9242 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 1165, column: 5)
!9243 = !DILocation(line: 1166, column: 19, scope: !9242)
!9244 = !DILocation(line: 1166, column: 42, scope: !9242)
!9245 = !DILocation(line: 1166, column: 25, scope: !9242)
!9246 = !DILocalVariable(name: "i", scope: !9247, file: !3, line: 1167, type: !27)
!9247 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1167, column: 7)
!9248 = !DILocation(line: 1167, column: 16, scope: !9247)
!9249 = !DILocation(line: 1167, column: 12, scope: !9247)
!9250 = !DILocation(line: 1167, column: 23, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1167, column: 7)
!9252 = !DILocation(line: 1167, column: 25, scope: !9251)
!9253 = !DILocation(line: 1167, column: 7, scope: !9247)
!9254 = !DILocalVariable(name: "nfmt", scope: !9255, file: !3, line: 1169, type: !143)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 1168, column: 9)
!9256 = !DILocation(line: 1169, column: 17, scope: !9255)
!9257 = !DILocation(line: 1169, column: 33, scope: !9255)
!9258 = !DILocation(line: 1169, column: 24, scope: !9255)
!9259 = !DILocation(line: 1169, column: 41, scope: !9255)
!9260 = !DILocalVariable(name: "nbytes", scope: !9255, file: !3, line: 1170, type: !27)
!9261 = !DILocation(line: 1170, column: 15, scope: !9255)
!9262 = !DILocation(line: 1172, column: 20, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1172, column: 15)
!9264 = !DILocation(line: 1172, column: 17, scope: !9263)
!9265 = !DILocation(line: 1172, column: 15, scope: !9255)
!9266 = !DILocation(line: 1173, column: 32, scope: !9263)
!9267 = !DILocation(line: 1173, column: 59, scope: !9263)
!9268 = !DILocation(line: 1173, column: 22, scope: !9263)
!9269 = !DILocation(line: 1173, column: 20, scope: !9263)
!9270 = !DILocation(line: 1173, column: 13, scope: !9263)
!9271 = !DILocation(line: 1176, column: 25, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 1176, column: 19)
!9273 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 1175, column: 13)
!9274 = !DILocation(line: 1176, column: 22, scope: !9272)
!9275 = !DILocation(line: 1176, column: 35, scope: !9272)
!9276 = !DILocation(line: 1176, column: 33, scope: !9272)
!9277 = !DILocation(line: 1176, column: 39, scope: !9272)
!9278 = !DILocation(line: 1176, column: 19, scope: !9273)
!9279 = !DILocation(line: 1177, column: 17, scope: !9272)
!9280 = !DILocalVariable(name: "prefix_len", scope: !9273, file: !3, line: 1178, type: !27)
!9281 = !DILocation(line: 1178, column: 19, scope: !9273)
!9282 = !DILocation(line: 1178, column: 35, scope: !9273)
!9283 = !DILocation(line: 1178, column: 32, scope: !9273)
!9284 = !DILocation(line: 1178, column: 45, scope: !9273)
!9285 = !DILocation(line: 1178, column: 43, scope: !9273)
!9286 = !DILocation(line: 1179, column: 34, scope: !9273)
!9287 = !DILocation(line: 1180, column: 34, scope: !9273)
!9288 = !DILocation(line: 1180, column: 46, scope: !9273)
!9289 = !DILocation(line: 1180, column: 57, scope: !9273)
!9290 = !DILocation(line: 1180, column: 51, scope: !9273)
!9291 = !DILocation(line: 1180, column: 64, scope: !9273)
!9292 = !DILocation(line: 1180, column: 61, scope: !9273)
!9293 = !DILocation(line: 1180, column: 72, scope: !9273)
!9294 = !DILocation(line: 1179, column: 24, scope: !9273)
!9295 = !DILocation(line: 1179, column: 22, scope: !9273)
!9296 = !DILocation(line: 1183, column: 23, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1183, column: 15)
!9298 = !DILocation(line: 1183, column: 20, scope: !9297)
!9299 = !DILocation(line: 1183, column: 30, scope: !9297)
!9300 = !DILocation(line: 1183, column: 33, scope: !9297)
!9301 = !DILocation(line: 1183, column: 40, scope: !9297)
!9302 = !DILocation(line: 1183, column: 15, scope: !9255)
!9303 = !DILocation(line: 1184, column: 13, scope: !9297)
!9304 = !DILocation(line: 1185, column: 9, scope: !9255)
!9305 = !DILocation(line: 1167, column: 32, scope: !9251)
!9306 = !DILocation(line: 1167, column: 7, scope: !9251)
!9307 = distinct !{!9307, !9253, !9308}
!9308 = !DILocation(line: 1185, column: 9, scope: !9247)
!9309 = !DILocation(line: 1186, column: 5, scope: !9242)
!9310 = !DILocation(line: 1164, column: 42, scope: !9238)
!9311 = !DILocation(line: 1164, column: 3, scope: !9238)
!9312 = distinct !{!9312, !9240, !9313}
!9313 = !DILocation(line: 1186, column: 5, scope: !9234)
!9314 = !DILocation(line: 1188, column: 16, scope: !9199)
!9315 = !DILocation(line: 1189, column: 1, scope: !9199)
!9316 = distinct !DISubprogram(name: "first_percent_b", scope: !3, file: !3, line: 1071, type: !579, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9317 = !DILocalVariable(name: "fmt", arg: 1, scope: !9316, file: !3, line: 1071, type: !146)
!9318 = !DILocation(line: 1071, column: 30, scope: !9316)
!9319 = !DILocation(line: 1073, column: 3, scope: !9316)
!9320 = !DILocation(line: 1073, column: 11, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1073, column: 3)
!9322 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1073, column: 3)
!9323 = !DILocation(line: 1073, column: 10, scope: !9321)
!9324 = !DILocation(line: 1073, column: 3, scope: !9322)
!9325 = !DILocation(line: 1074, column: 9, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1074, column: 9)
!9327 = !DILocation(line: 1074, column: 16, scope: !9326)
!9328 = !DILocation(line: 1074, column: 9, scope: !9321)
!9329 = !DILocation(line: 1075, column: 15, scope: !9326)
!9330 = !DILocation(line: 1075, column: 7, scope: !9326)
!9331 = !DILocation(line: 1077, column: 26, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1076, column: 9)
!9333 = !DILocation(line: 1077, column: 19, scope: !9332)
!9334 = !DILocation(line: 1078, column: 22, scope: !9332)
!9335 = !DILocation(line: 1078, column: 26, scope: !9332)
!9336 = !DILocation(line: 1079, column: 9, scope: !9332)
!9337 = !DILocation(line: 1074, column: 19, scope: !9326)
!9338 = !DILocation(line: 1073, column: 19, scope: !9321)
!9339 = !DILocation(line: 1073, column: 3, scope: !9321)
!9340 = distinct !{!9340, !9324, !9341}
!9341 = !DILocation(line: 1079, column: 9, scope: !9322)
!9342 = !DILocation(line: 1080, column: 3, scope: !9316)
!9343 = !DILocation(line: 1081, column: 1, scope: !9316)
!9344 = distinct !DISubprogram(name: "abmon_init", scope: !3, file: !3, line: 1117, type: !581, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9345 = !DILocalVariable(name: "abmon", arg: 1, scope: !9344, file: !3, line: 1117, type: !583)
!9346 = !DILocation(line: 1117, column: 18, scope: !9344)
!9347 = !DILocalVariable(name: "required_mon_width", scope: !9344, file: !3, line: 1122, type: !149)
!9348 = !DILocation(line: 1122, column: 10, scope: !9344)
!9349 = !DILocalVariable(name: "curr_max_width", scope: !9344, file: !3, line: 1123, type: !149)
!9350 = !DILocation(line: 1123, column: 10, scope: !9344)
!9351 = !DILocation(line: 1124, column: 3, scope: !9344)
!9352 = !DILocation(line: 1126, column: 24, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1125, column: 5)
!9354 = !DILocation(line: 1126, column: 22, scope: !9353)
!9355 = !DILocation(line: 1127, column: 26, scope: !9353)
!9356 = !DILocalVariable(name: "i", scope: !9357, file: !3, line: 1128, type: !27)
!9357 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1128, column: 7)
!9358 = !DILocation(line: 1128, column: 16, scope: !9357)
!9359 = !DILocation(line: 1128, column: 12, scope: !9357)
!9360 = !DILocation(line: 1128, column: 23, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 1128, column: 7)
!9362 = !DILocation(line: 1128, column: 25, scope: !9361)
!9363 = !DILocation(line: 1128, column: 7, scope: !9357)
!9364 = !DILocalVariable(name: "width", scope: !9365, file: !3, line: 1130, type: !149)
!9365 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1129, column: 9)
!9366 = !DILocation(line: 1130, column: 18, scope: !9365)
!9367 = !DILocation(line: 1130, column: 26, scope: !9365)
!9368 = !DILocalVariable(name: "abbr", scope: !9365, file: !3, line: 1131, type: !146)
!9369 = !DILocation(line: 1131, column: 23, scope: !9365)
!9370 = !DILocation(line: 1131, column: 53, scope: !9365)
!9371 = !DILocation(line: 1131, column: 51, scope: !9365)
!9372 = !DILocation(line: 1131, column: 30, scope: !9365)
!9373 = !DILocation(line: 1132, column: 23, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1132, column: 15)
!9375 = !DILocation(line: 1132, column: 15, scope: !9374)
!9376 = !DILocation(line: 1132, column: 15, scope: !9365)
!9377 = !DILocation(line: 1133, column: 13, scope: !9374)
!9378 = !DILocalVariable(name: "alignment", scope: !9365, file: !3, line: 1134, type: !586)
!9379 = !DILocation(line: 1134, column: 23, scope: !9365)
!9380 = !DILocation(line: 1134, column: 35, scope: !9365)
!9381 = !DILocalVariable(name: "req", scope: !9365, file: !3, line: 1136, type: !149)
!9382 = !DILocation(line: 1136, column: 18, scope: !9365)
!9383 = !DILocation(line: 1136, column: 34, scope: !9365)
!9384 = !DILocation(line: 1136, column: 40, scope: !9365)
!9385 = !DILocation(line: 1136, column: 46, scope: !9365)
!9386 = !DILocation(line: 1137, column: 42, scope: !9365)
!9387 = !DILocation(line: 1136, column: 24, scope: !9365)
!9388 = !DILocation(line: 1138, column: 18, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1138, column: 15)
!9390 = !DILocation(line: 1138, column: 22, scope: !9389)
!9391 = !DILocation(line: 1138, column: 15, scope: !9365)
!9392 = !DILocation(line: 1139, column: 13, scope: !9389)
!9393 = !DILocation(line: 1140, column: 32, scope: !9365)
!9394 = !DILocation(line: 1140, column: 30, scope: !9365)
!9395 = !DILocation(line: 1141, column: 9, scope: !9365)
!9396 = !DILocation(line: 1128, column: 32, scope: !9361)
!9397 = !DILocation(line: 1128, column: 7, scope: !9361)
!9398 = distinct !{!9398, !9363, !9399}
!9399 = !DILocation(line: 1141, column: 9, scope: !9357)
!9400 = !DILocation(line: 1142, column: 5, scope: !9353)
!9401 = !DILocation(line: 1143, column: 10, scope: !9344)
!9402 = !DILocation(line: 1143, column: 27, scope: !9344)
!9403 = !DILocation(line: 1143, column: 25, scope: !9344)
!9404 = distinct !{!9404, !9351, !9405}
!9405 = !DILocation(line: 1143, column: 45, scope: !9344)
!9406 = !DILocation(line: 1145, column: 3, scope: !9344)
!9407 = !DILocation(line: 1147, column: 1, scope: !9344)
!9408 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !810, file: !810, line: 585, type: !341, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9409 = !DILocation(line: 587, column: 3, scope: !9408)
!9410 = !DILocation(line: 590, column: 1, scope: !9408)
!9411 = distinct !DISubprogram(name: "emit_size_note", scope: !810, file: !810, line: 593, type: !341, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !152)
!9412 = !DILocation(line: 595, column: 3, scope: !9411)
!9413 = !DILocation(line: 600, column: 1, scope: !9411)
!9414 = !DILocalVariable(name: "program", arg: 1, scope: !811, file: !810, line: 631, type: !146)
!9415 = !DILocation(line: 631, column: 34, scope: !811)
!9416 = !DILocalVariable(name: "infomap", scope: !811, file: !810, line: 633, type: !807)
!9417 = !DILocation(line: 633, column: 67, scope: !811)
!9418 = !DILocalVariable(name: "node", scope: !811, file: !810, line: 643, type: !146)
!9419 = !DILocation(line: 643, column: 15, scope: !811)
!9420 = !DILocation(line: 643, column: 22, scope: !811)
!9421 = !DILocalVariable(name: "map_prog", scope: !811, file: !810, line: 644, type: !815)
!9422 = !DILocation(line: 644, column: 25, scope: !811)
!9423 = !DILocation(line: 644, column: 36, scope: !811)
!9424 = !DILocation(line: 646, column: 3, scope: !811)
!9425 = !DILocation(line: 646, column: 10, scope: !811)
!9426 = !DILocation(line: 646, column: 20, scope: !811)
!9427 = !{!9428, !2443, i64 0}
!9428 = !{!"infomap", !2443, i64 0, !2443, i64 8}
!9429 = !DILocation(line: 646, column: 28, scope: !811)
!9430 = !DILocation(line: 646, column: 33, scope: !811)
!9431 = !DILocation(line: 646, column: 31, scope: !811)
!9432 = !DILocation(line: 0, scope: !811)
!9433 = !DILocation(line: 647, column: 13, scope: !811)
!9434 = distinct !{!9434, !9424, !9433}
!9435 = !DILocation(line: 649, column: 7, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !811, file: !810, line: 649, column: 7)
!9437 = !DILocation(line: 649, column: 17, scope: !9436)
!9438 = !{!9428, !2443, i64 8}
!9439 = !DILocation(line: 649, column: 7, scope: !811)
!9440 = !DILocation(line: 650, column: 12, scope: !9436)
!9441 = !DILocation(line: 650, column: 22, scope: !9436)
!9442 = !DILocation(line: 650, column: 10, scope: !9436)
!9443 = !DILocation(line: 650, column: 5, scope: !9436)
!9444 = !DILocation(line: 652, column: 11, scope: !811)
!9445 = !DILocation(line: 652, column: 3, scope: !811)
!9446 = !DILocalVariable(name: "lc_messages", scope: !811, file: !810, line: 656, type: !146)
!9447 = !DILocation(line: 656, column: 15, scope: !811)
!9448 = !DILocation(line: 656, column: 29, scope: !811)
!9449 = !DILocation(line: 657, column: 7, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !811, file: !810, line: 657, column: 7)
!9451 = !DILocation(line: 657, column: 19, scope: !9450)
!9452 = !DILocation(line: 657, column: 22, scope: !9450)
!9453 = !DILocation(line: 657, column: 7, scope: !811)
!9454 = !DILocation(line: 663, column: 7, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9450, file: !810, line: 658, column: 5)
!9456 = !DILocation(line: 665, column: 5, scope: !9455)
!9457 = !DILocation(line: 666, column: 11, scope: !811)
!9458 = !DILocation(line: 667, column: 24, scope: !811)
!9459 = !DILocation(line: 666, column: 3, scope: !811)
!9460 = !DILocation(line: 668, column: 11, scope: !811)
!9461 = !DILocation(line: 669, column: 11, scope: !811)
!9462 = !DILocation(line: 669, column: 17, scope: !811)
!9463 = !DILocation(line: 669, column: 25, scope: !811)
!9464 = !DILocation(line: 669, column: 22, scope: !811)
!9465 = !DILocation(line: 668, column: 3, scope: !811)
!9466 = !DILocation(line: 670, column: 1, scope: !811)
!9467 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9468, file: !9468, line: 52, type: !1483, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1647, retainedNodes: !152)
!9468 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9469 = !DILocalVariable(name: "file", arg: 1, scope: !9467, file: !9468, line: 52, type: !146)
!9470 = !DILocation(line: 52, column: 34, scope: !9467)
!9471 = !DILocalVariable(name: "size", arg: 2, scope: !9467, file: !9468, line: 52, type: !149)
!9472 = !DILocation(line: 52, column: 47, scope: !9467)
!9473 = !DILocalVariable(name: "symlink_max", scope: !9467, file: !9468, line: 57, type: !149)
!9474 = !DILocation(line: 57, column: 10, scope: !9467)
!9475 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9467, file: !9468, line: 58, type: !149)
!9476 = !DILocation(line: 58, column: 10, scope: !9467)
!9477 = !DILocalVariable(name: "initial_limit", scope: !9467, file: !9468, line: 59, type: !149)
!9478 = !DILocation(line: 59, column: 10, scope: !9467)
!9479 = !DILocation(line: 59, column: 27, scope: !9467)
!9480 = !DILocation(line: 59, column: 41, scope: !9467)
!9481 = !DILocation(line: 59, column: 39, scope: !9467)
!9482 = !DILocation(line: 60, column: 29, scope: !9467)
!9483 = !DILocation(line: 60, column: 41, scope: !9467)
!9484 = !DILocation(line: 61, column: 29, scope: !9467)
!9485 = !DILocalVariable(name: "buf_size", scope: !9467, file: !9468, line: 64, type: !149)
!9486 = !DILocation(line: 64, column: 10, scope: !9467)
!9487 = !DILocation(line: 64, column: 21, scope: !9467)
!9488 = !DILocation(line: 64, column: 28, scope: !9467)
!9489 = !DILocation(line: 64, column: 26, scope: !9467)
!9490 = !DILocation(line: 64, column: 44, scope: !9467)
!9491 = !DILocation(line: 64, column: 49, scope: !9467)
!9492 = !DILocation(line: 64, column: 55, scope: !9467)
!9493 = !DILocation(line: 66, column: 3, scope: !9467)
!9494 = !DILocalVariable(name: "r", scope: !9495, file: !9468, line: 68, type: !1650)
!9495 = distinct !DILexicalBlock(scope: !9467, file: !9468, line: 67, column: 5)
!9496 = !DILocation(line: 68, column: 15, scope: !9495)
!9497 = !DILocalVariable(name: "link_length", scope: !9495, file: !9468, line: 69, type: !149)
!9498 = !DILocation(line: 69, column: 14, scope: !9495)
!9499 = !DILocalVariable(name: "buffer", scope: !9495, file: !9468, line: 70, type: !143)
!9500 = !DILocation(line: 70, column: 13, scope: !9495)
!9501 = !DILocation(line: 70, column: 30, scope: !9495)
!9502 = !DILocation(line: 70, column: 22, scope: !9495)
!9503 = !DILocation(line: 72, column: 11, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9495, file: !9468, line: 72, column: 11)
!9505 = !DILocation(line: 72, column: 18, scope: !9504)
!9506 = !DILocation(line: 72, column: 11, scope: !9495)
!9507 = !DILocation(line: 73, column: 9, scope: !9504)
!9508 = !DILocation(line: 74, column: 21, scope: !9495)
!9509 = !DILocation(line: 74, column: 27, scope: !9495)
!9510 = !DILocation(line: 74, column: 35, scope: !9495)
!9511 = !DILocation(line: 74, column: 11, scope: !9495)
!9512 = !DILocation(line: 74, column: 9, scope: !9495)
!9513 = !DILocation(line: 75, column: 21, scope: !9495)
!9514 = !DILocation(line: 75, column: 19, scope: !9495)
!9515 = !DILocation(line: 79, column: 11, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9495, file: !9468, line: 79, column: 11)
!9517 = !DILocation(line: 79, column: 13, scope: !9516)
!9518 = !DILocation(line: 79, column: 17, scope: !9516)
!9519 = !DILocation(line: 79, column: 20, scope: !9516)
!9520 = !DILocation(line: 79, column: 26, scope: !9516)
!9521 = !DILocation(line: 79, column: 11, scope: !9495)
!9522 = !DILocalVariable(name: "saved_errno", scope: !9523, file: !9468, line: 81, type: !27)
!9523 = distinct !DILexicalBlock(scope: !9516, file: !9468, line: 80, column: 9)
!9524 = !DILocation(line: 81, column: 15, scope: !9523)
!9525 = !DILocation(line: 81, column: 29, scope: !9523)
!9526 = !DILocation(line: 82, column: 17, scope: !9523)
!9527 = !DILocation(line: 82, column: 11, scope: !9523)
!9528 = !DILocation(line: 83, column: 19, scope: !9523)
!9529 = !DILocation(line: 83, column: 11, scope: !9523)
!9530 = !DILocation(line: 83, column: 17, scope: !9523)
!9531 = !DILocation(line: 84, column: 11, scope: !9523)
!9532 = !DILocation(line: 87, column: 11, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9495, file: !9468, line: 87, column: 11)
!9534 = !DILocation(line: 87, column: 25, scope: !9533)
!9535 = !DILocation(line: 87, column: 23, scope: !9533)
!9536 = !DILocation(line: 87, column: 11, scope: !9495)
!9537 = !DILocation(line: 89, column: 11, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9533, file: !9468, line: 88, column: 9)
!9539 = !DILocation(line: 89, column: 18, scope: !9538)
!9540 = !DILocation(line: 89, column: 31, scope: !9538)
!9541 = !DILocation(line: 90, column: 18, scope: !9538)
!9542 = !DILocation(line: 90, column: 11, scope: !9538)
!9543 = !DILocation(line: 93, column: 13, scope: !9495)
!9544 = !DILocation(line: 93, column: 7, scope: !9495)
!9545 = !DILocation(line: 94, column: 11, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9495, file: !9468, line: 94, column: 11)
!9547 = !DILocation(line: 94, column: 20, scope: !9546)
!9548 = !DILocation(line: 94, column: 11, scope: !9495)
!9549 = !DILocation(line: 95, column: 18, scope: !9546)
!9550 = !DILocation(line: 95, column: 9, scope: !9546)
!9551 = !DILocation(line: 96, column: 16, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9546, file: !9468, line: 96, column: 16)
!9553 = !DILocation(line: 96, column: 25, scope: !9552)
!9554 = !DILocation(line: 96, column: 16, scope: !9546)
!9555 = !DILocation(line: 97, column: 18, scope: !9552)
!9556 = !DILocation(line: 97, column: 9, scope: !9552)
!9557 = !DILocation(line: 100, column: 11, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9552, file: !9468, line: 99, column: 9)
!9559 = !DILocation(line: 100, column: 17, scope: !9558)
!9560 = !DILocation(line: 101, column: 11, scope: !9558)
!9561 = distinct !{!9561, !9493, !9562}
!9562 = !DILocation(line: 103, column: 5, scope: !9467)
!9563 = !DILocation(line: 104, column: 1, scope: !9467)
!9564 = distinct !DISubprogram(name: "__argmatch_die", scope: !1097, file: !1097, line: 62, type: !341, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9565 = !DILocation(line: 64, column: 3, scope: !9564)
!9566 = !DILocation(line: 65, column: 1, scope: !9564)
!9567 = distinct !DISubprogram(name: "argmatch", scope: !1097, file: !1097, line: 84, type: !1052, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9568 = !DILocalVariable(name: "arg", arg: 1, scope: !9567, file: !1097, line: 84, type: !146)
!9569 = !DILocation(line: 84, column: 23, scope: !9567)
!9570 = !DILocalVariable(name: "arglist", arg: 2, scope: !9567, file: !1097, line: 84, type: !567)
!9571 = !DILocation(line: 84, column: 47, scope: !9567)
!9572 = !DILocalVariable(name: "vallist", arg: 3, scope: !9567, file: !1097, line: 85, type: !146)
!9573 = !DILocation(line: 85, column: 23, scope: !9567)
!9574 = !DILocalVariable(name: "valsize", arg: 4, scope: !9567, file: !1097, line: 85, type: !149)
!9575 = !DILocation(line: 85, column: 39, scope: !9567)
!9576 = !DILocalVariable(name: "i", scope: !9567, file: !1097, line: 87, type: !149)
!9577 = !DILocation(line: 87, column: 10, scope: !9567)
!9578 = !DILocalVariable(name: "arglen", scope: !9567, file: !1097, line: 88, type: !149)
!9579 = !DILocation(line: 88, column: 10, scope: !9567)
!9580 = !DILocalVariable(name: "matchind", scope: !9567, file: !1097, line: 89, type: !564)
!9581 = !DILocation(line: 89, column: 13, scope: !9567)
!9582 = !DILocalVariable(name: "ambiguous", scope: !9567, file: !1097, line: 90, type: !141)
!9583 = !DILocation(line: 90, column: 8, scope: !9567)
!9584 = !DILocation(line: 92, column: 20, scope: !9567)
!9585 = !DILocation(line: 92, column: 12, scope: !9567)
!9586 = !DILocation(line: 92, column: 10, scope: !9567)
!9587 = !DILocation(line: 95, column: 10, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9567, file: !1097, line: 95, column: 3)
!9589 = !DILocation(line: 95, column: 8, scope: !9588)
!9590 = !DILocation(line: 95, column: 15, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9588, file: !1097, line: 95, column: 3)
!9592 = !DILocation(line: 95, column: 23, scope: !9591)
!9593 = !DILocation(line: 95, column: 3, scope: !9588)
!9594 = !DILocation(line: 97, column: 21, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !1097, line: 97, column: 11)
!9596 = distinct !DILexicalBlock(scope: !9591, file: !1097, line: 96, column: 5)
!9597 = !DILocation(line: 97, column: 29, scope: !9595)
!9598 = !DILocation(line: 97, column: 33, scope: !9595)
!9599 = !DILocation(line: 97, column: 38, scope: !9595)
!9600 = !DILocation(line: 97, column: 12, scope: !9595)
!9601 = !DILocation(line: 97, column: 11, scope: !9596)
!9602 = !DILocation(line: 99, column: 23, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !1097, line: 99, column: 15)
!9604 = distinct !DILexicalBlock(scope: !9595, file: !1097, line: 98, column: 9)
!9605 = !DILocation(line: 99, column: 31, scope: !9603)
!9606 = !DILocation(line: 99, column: 15, scope: !9603)
!9607 = !DILocation(line: 99, column: 38, scope: !9603)
!9608 = !DILocation(line: 99, column: 35, scope: !9603)
!9609 = !DILocation(line: 99, column: 15, scope: !9604)
!9610 = !DILocation(line: 101, column: 20, scope: !9603)
!9611 = !DILocation(line: 101, column: 13, scope: !9603)
!9612 = !DILocation(line: 102, column: 20, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9603, file: !1097, line: 102, column: 20)
!9614 = !DILocation(line: 102, column: 29, scope: !9613)
!9615 = !DILocation(line: 102, column: 20, scope: !9603)
!9616 = !DILocation(line: 104, column: 24, scope: !9613)
!9617 = !DILocation(line: 104, column: 22, scope: !9613)
!9618 = !DILocation(line: 104, column: 13, scope: !9613)
!9619 = !DILocation(line: 108, column: 19, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !1097, line: 108, column: 19)
!9621 = distinct !DILexicalBlock(scope: !9613, file: !1097, line: 106, column: 13)
!9622 = !DILocation(line: 108, column: 27, scope: !9620)
!9623 = !DILocation(line: 109, column: 19, scope: !9620)
!9624 = !DILocation(line: 109, column: 30, scope: !9620)
!9625 = !DILocation(line: 109, column: 40, scope: !9620)
!9626 = !DILocation(line: 109, column: 50, scope: !9620)
!9627 = !DILocation(line: 109, column: 48, scope: !9620)
!9628 = !DILocation(line: 109, column: 38, scope: !9620)
!9629 = !DILocation(line: 110, column: 30, scope: !9620)
!9630 = !DILocation(line: 110, column: 40, scope: !9620)
!9631 = !DILocation(line: 110, column: 50, scope: !9620)
!9632 = !DILocation(line: 110, column: 48, scope: !9620)
!9633 = !DILocation(line: 110, column: 38, scope: !9620)
!9634 = !DILocation(line: 110, column: 53, scope: !9620)
!9635 = !DILocation(line: 109, column: 22, scope: !9620)
!9636 = !DILocation(line: 108, column: 19, scope: !9621)
!9637 = !DILocation(line: 114, column: 29, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9620, file: !1097, line: 111, column: 17)
!9639 = !DILocation(line: 115, column: 17, scope: !9638)
!9640 = !DILocation(line: 117, column: 9, scope: !9604)
!9641 = !DILocation(line: 118, column: 5, scope: !9596)
!9642 = !DILocation(line: 95, column: 28, scope: !9591)
!9643 = !DILocation(line: 95, column: 3, scope: !9591)
!9644 = distinct !{!9644, !9593, !9645}
!9645 = !DILocation(line: 118, column: 5, scope: !9588)
!9646 = !DILocation(line: 119, column: 7, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9567, file: !1097, line: 119, column: 7)
!9648 = !DILocation(line: 119, column: 7, scope: !9567)
!9649 = !DILocation(line: 120, column: 5, scope: !9647)
!9650 = !DILocation(line: 122, column: 12, scope: !9647)
!9651 = !DILocation(line: 122, column: 5, scope: !9647)
!9652 = !DILocation(line: 123, column: 1, scope: !9567)
!9653 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1097, file: !1097, line: 131, type: !1054, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9654 = !DILocalVariable(name: "context", arg: 1, scope: !9653, file: !1097, line: 131, type: !146)
!9655 = !DILocation(line: 131, column: 31, scope: !9653)
!9656 = !DILocalVariable(name: "value", arg: 2, scope: !9653, file: !1097, line: 131, type: !146)
!9657 = !DILocation(line: 131, column: 52, scope: !9653)
!9658 = !DILocalVariable(name: "problem", arg: 3, scope: !9653, file: !1097, line: 131, type: !564)
!9659 = !DILocation(line: 131, column: 69, scope: !9653)
!9660 = !DILocalVariable(name: "format", scope: !9653, file: !1097, line: 133, type: !146)
!9661 = !DILocation(line: 133, column: 15, scope: !9653)
!9662 = !DILocation(line: 133, column: 25, scope: !9653)
!9663 = !DILocation(line: 133, column: 33, scope: !9653)
!9664 = !DILocation(line: 134, column: 27, scope: !9653)
!9665 = !DILocation(line: 135, column: 27, scope: !9653)
!9666 = !DILocation(line: 137, column: 16, scope: !9653)
!9667 = !DILocation(line: 137, column: 69, scope: !9653)
!9668 = !DILocation(line: 137, column: 24, scope: !9653)
!9669 = !DILocation(line: 138, column: 22, scope: !9653)
!9670 = !DILocation(line: 138, column: 10, scope: !9653)
!9671 = !DILocation(line: 137, column: 3, scope: !9653)
!9672 = !DILocation(line: 139, column: 1, scope: !9653)
!9673 = distinct !DISubprogram(name: "argmatch_valid", scope: !1097, file: !1097, line: 146, type: !1056, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9674 = !DILocalVariable(name: "arglist", arg: 1, scope: !9673, file: !1097, line: 146, type: !567)
!9675 = !DILocation(line: 146, column: 36, scope: !9673)
!9676 = !DILocalVariable(name: "vallist", arg: 2, scope: !9673, file: !1097, line: 147, type: !146)
!9677 = !DILocation(line: 147, column: 29, scope: !9673)
!9678 = !DILocalVariable(name: "valsize", arg: 3, scope: !9673, file: !1097, line: 147, type: !149)
!9679 = !DILocation(line: 147, column: 45, scope: !9673)
!9680 = !DILocalVariable(name: "i", scope: !9673, file: !1097, line: 149, type: !149)
!9681 = !DILocation(line: 149, column: 10, scope: !9673)
!9682 = !DILocalVariable(name: "last_val", scope: !9673, file: !1097, line: 150, type: !146)
!9683 = !DILocation(line: 150, column: 15, scope: !9673)
!9684 = !DILocation(line: 154, column: 3, scope: !9673)
!9685 = !DILocation(line: 155, column: 10, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9673, file: !1097, line: 155, column: 3)
!9687 = !DILocation(line: 155, column: 8, scope: !9686)
!9688 = !DILocation(line: 155, column: 15, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9686, file: !1097, line: 155, column: 3)
!9690 = !DILocation(line: 155, column: 23, scope: !9689)
!9691 = !DILocation(line: 155, column: 3, scope: !9686)
!9692 = !DILocation(line: 156, column: 10, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9689, file: !1097, line: 156, column: 9)
!9694 = !DILocation(line: 156, column: 12, scope: !9693)
!9695 = !DILocation(line: 157, column: 9, scope: !9693)
!9696 = !DILocation(line: 157, column: 20, scope: !9693)
!9697 = !DILocation(line: 157, column: 30, scope: !9693)
!9698 = !DILocation(line: 157, column: 40, scope: !9693)
!9699 = !DILocation(line: 157, column: 50, scope: !9693)
!9700 = !DILocation(line: 157, column: 48, scope: !9693)
!9701 = !DILocation(line: 157, column: 38, scope: !9693)
!9702 = !DILocation(line: 157, column: 53, scope: !9693)
!9703 = !DILocation(line: 157, column: 12, scope: !9693)
!9704 = !DILocation(line: 156, column: 9, scope: !9689)
!9705 = !DILocation(line: 159, column: 18, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9693, file: !1097, line: 158, column: 7)
!9707 = !DILocation(line: 159, column: 45, scope: !9706)
!9708 = !DILocation(line: 159, column: 53, scope: !9706)
!9709 = !DILocation(line: 159, column: 38, scope: !9706)
!9710 = !DILocation(line: 159, column: 9, scope: !9706)
!9711 = !DILocation(line: 160, column: 20, scope: !9706)
!9712 = !DILocation(line: 160, column: 30, scope: !9706)
!9713 = !DILocation(line: 160, column: 40, scope: !9706)
!9714 = !DILocation(line: 160, column: 38, scope: !9706)
!9715 = !DILocation(line: 160, column: 28, scope: !9706)
!9716 = !DILocation(line: 160, column: 18, scope: !9706)
!9717 = !DILocation(line: 161, column: 7, scope: !9706)
!9718 = !DILocation(line: 164, column: 18, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9693, file: !1097, line: 163, column: 7)
!9720 = !DILocation(line: 164, column: 41, scope: !9719)
!9721 = !DILocation(line: 164, column: 49, scope: !9719)
!9722 = !DILocation(line: 164, column: 34, scope: !9719)
!9723 = !DILocation(line: 164, column: 9, scope: !9719)
!9724 = !DILocation(line: 157, column: 60, scope: !9693)
!9725 = !DILocation(line: 155, column: 28, scope: !9689)
!9726 = !DILocation(line: 155, column: 3, scope: !9689)
!9727 = distinct !{!9727, !9691, !9728}
!9728 = !DILocation(line: 165, column: 7, scope: !9686)
!9729 = !DILocation(line: 166, column: 3, scope: !9673)
!9730 = !DILocation(line: 167, column: 1, scope: !9673)
!9731 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1097, file: !1097, line: 176, type: !1092, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9732 = !DILocalVariable(name: "context", arg: 1, scope: !9731, file: !1097, line: 176, type: !146)
!9733 = !DILocation(line: 176, column: 35, scope: !9731)
!9734 = !DILocalVariable(name: "arg", arg: 2, scope: !9731, file: !1097, line: 177, type: !146)
!9735 = !DILocation(line: 177, column: 35, scope: !9731)
!9736 = !DILocalVariable(name: "arglist", arg: 3, scope: !9731, file: !1097, line: 177, type: !567)
!9737 = !DILocation(line: 177, column: 59, scope: !9731)
!9738 = !DILocalVariable(name: "vallist", arg: 4, scope: !9731, file: !1097, line: 178, type: !146)
!9739 = !DILocation(line: 178, column: 35, scope: !9731)
!9740 = !DILocalVariable(name: "valsize", arg: 5, scope: !9731, file: !1097, line: 178, type: !149)
!9741 = !DILocation(line: 178, column: 51, scope: !9731)
!9742 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !9731, file: !1097, line: 179, type: !535)
!9743 = !DILocation(line: 179, column: 40, scope: !9731)
!9744 = !DILocalVariable(name: "res", scope: !9731, file: !1097, line: 181, type: !564)
!9745 = !DILocation(line: 181, column: 13, scope: !9731)
!9746 = !DILocation(line: 181, column: 29, scope: !9731)
!9747 = !DILocation(line: 181, column: 34, scope: !9731)
!9748 = !DILocation(line: 181, column: 43, scope: !9731)
!9749 = !DILocation(line: 181, column: 52, scope: !9731)
!9750 = !DILocation(line: 181, column: 19, scope: !9731)
!9751 = !DILocation(line: 182, column: 7, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9731, file: !1097, line: 182, column: 7)
!9753 = !DILocation(line: 182, column: 11, scope: !9752)
!9754 = !DILocation(line: 182, column: 7, scope: !9731)
!9755 = !DILocation(line: 184, column: 12, scope: !9752)
!9756 = !DILocation(line: 184, column: 5, scope: !9752)
!9757 = !DILocation(line: 187, column: 21, scope: !9731)
!9758 = !DILocation(line: 187, column: 30, scope: !9731)
!9759 = !DILocation(line: 187, column: 35, scope: !9731)
!9760 = !DILocation(line: 187, column: 3, scope: !9731)
!9761 = !DILocation(line: 188, column: 19, scope: !9731)
!9762 = !DILocation(line: 188, column: 28, scope: !9731)
!9763 = !DILocation(line: 188, column: 37, scope: !9731)
!9764 = !DILocation(line: 188, column: 3, scope: !9731)
!9765 = !DILocation(line: 189, column: 5, scope: !9731)
!9766 = !DILocation(line: 189, column: 3, scope: !9731)
!9767 = !DILocation(line: 191, column: 3, scope: !9731)
!9768 = !DILocation(line: 192, column: 1, scope: !9731)
!9769 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1097, file: !1097, line: 197, type: !1094, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !152)
!9770 = !DILocalVariable(name: "value", arg: 1, scope: !9769, file: !1097, line: 197, type: !146)
!9771 = !DILocation(line: 197, column: 35, scope: !9769)
!9772 = !DILocalVariable(name: "arglist", arg: 2, scope: !9769, file: !1097, line: 198, type: !567)
!9773 = !DILocation(line: 198, column: 42, scope: !9769)
!9774 = !DILocalVariable(name: "vallist", arg: 3, scope: !9769, file: !1097, line: 199, type: !146)
!9775 = !DILocation(line: 199, column: 35, scope: !9769)
!9776 = !DILocalVariable(name: "valsize", arg: 4, scope: !9769, file: !1097, line: 199, type: !149)
!9777 = !DILocation(line: 199, column: 51, scope: !9769)
!9778 = !DILocalVariable(name: "i", scope: !9769, file: !1097, line: 201, type: !149)
!9779 = !DILocation(line: 201, column: 10, scope: !9769)
!9780 = !DILocation(line: 203, column: 10, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9769, file: !1097, line: 203, column: 3)
!9782 = !DILocation(line: 203, column: 8, scope: !9781)
!9783 = !DILocation(line: 203, column: 15, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9781, file: !1097, line: 203, column: 3)
!9785 = !DILocation(line: 203, column: 23, scope: !9784)
!9786 = !DILocation(line: 203, column: 3, scope: !9781)
!9787 = !DILocation(line: 204, column: 18, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9784, file: !1097, line: 204, column: 9)
!9789 = !DILocation(line: 204, column: 25, scope: !9788)
!9790 = !DILocation(line: 204, column: 35, scope: !9788)
!9791 = !DILocation(line: 204, column: 45, scope: !9788)
!9792 = !DILocation(line: 204, column: 43, scope: !9788)
!9793 = !DILocation(line: 204, column: 33, scope: !9788)
!9794 = !DILocation(line: 204, column: 48, scope: !9788)
!9795 = !DILocation(line: 204, column: 10, scope: !9788)
!9796 = !DILocation(line: 204, column: 9, scope: !9784)
!9797 = !DILocation(line: 205, column: 14, scope: !9788)
!9798 = !DILocation(line: 205, column: 22, scope: !9788)
!9799 = !DILocation(line: 205, column: 7, scope: !9788)
!9800 = !DILocation(line: 204, column: 55, scope: !9788)
!9801 = !DILocation(line: 203, column: 28, scope: !9784)
!9802 = !DILocation(line: 203, column: 3, scope: !9784)
!9803 = distinct !{!9803, !9786, !9804}
!9804 = !DILocation(line: 205, column: 23, scope: !9781)
!9805 = !DILocation(line: 206, column: 3, scope: !9769)
!9806 = !DILocation(line: 207, column: 1, scope: !9769)
!9807 = distinct !DISubprogram(name: "c_isalnum", scope: !9808, file: !9808, line: 169, type: !680, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9808 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!9809 = !DILocalVariable(name: "c", arg: 1, scope: !9807, file: !9808, line: 169, type: !27)
!9810 = !DILocation(line: 169, column: 16, scope: !9807)
!9811 = !DILocation(line: 171, column: 11, scope: !9807)
!9812 = !DILocation(line: 171, column: 3, scope: !9807)
!9813 = !DILocation(line: 176, column: 7, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9807, file: !9808, line: 172, column: 5)
!9815 = !DILocation(line: 178, column: 7, scope: !9814)
!9816 = !DILocation(line: 180, column: 1, scope: !9807)
!9817 = distinct !DISubprogram(name: "c_isalpha", scope: !9808, file: !9808, line: 183, type: !680, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9818 = !DILocalVariable(name: "c", arg: 1, scope: !9817, file: !9808, line: 183, type: !27)
!9819 = !DILocation(line: 183, column: 16, scope: !9817)
!9820 = !DILocation(line: 185, column: 11, scope: !9817)
!9821 = !DILocation(line: 185, column: 3, scope: !9817)
!9822 = !DILocation(line: 189, column: 7, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9817, file: !9808, line: 186, column: 5)
!9824 = !DILocation(line: 191, column: 7, scope: !9823)
!9825 = !DILocation(line: 193, column: 1, scope: !9817)
!9826 = distinct !DISubprogram(name: "c_isascii", scope: !9808, file: !9808, line: 198, type: !680, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9827 = !DILocalVariable(name: "c", arg: 1, scope: !9826, file: !9808, line: 198, type: !27)
!9828 = !DILocation(line: 198, column: 16, scope: !9826)
!9829 = !DILocation(line: 200, column: 11, scope: !9826)
!9830 = !DILocation(line: 200, column: 3, scope: !9826)
!9831 = !DILocation(line: 208, column: 7, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9826, file: !9808, line: 201, column: 5)
!9833 = !DILocation(line: 210, column: 7, scope: !9832)
!9834 = !DILocation(line: 212, column: 1, scope: !9826)
!9835 = distinct !DISubprogram(name: "c_isblank", scope: !9808, file: !9808, line: 215, type: !680, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9836 = !DILocalVariable(name: "c", arg: 1, scope: !9835, file: !9808, line: 215, type: !27)
!9837 = !DILocation(line: 215, column: 16, scope: !9835)
!9838 = !DILocation(line: 217, column: 10, scope: !9835)
!9839 = !DILocation(line: 217, column: 12, scope: !9835)
!9840 = !DILocation(line: 217, column: 19, scope: !9835)
!9841 = !DILocation(line: 217, column: 22, scope: !9835)
!9842 = !DILocation(line: 217, column: 24, scope: !9835)
!9843 = !DILocation(line: 217, column: 3, scope: !9835)
!9844 = distinct !DISubprogram(name: "c_iscntrl", scope: !9808, file: !9808, line: 221, type: !680, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9845 = !DILocalVariable(name: "c", arg: 1, scope: !9844, file: !9808, line: 221, type: !27)
!9846 = !DILocation(line: 221, column: 16, scope: !9844)
!9847 = !DILocation(line: 223, column: 11, scope: !9844)
!9848 = !DILocation(line: 223, column: 3, scope: !9844)
!9849 = !DILocation(line: 226, column: 7, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9844, file: !9808, line: 224, column: 5)
!9851 = !DILocation(line: 228, column: 7, scope: !9850)
!9852 = !DILocation(line: 230, column: 1, scope: !9844)
!9853 = distinct !DISubprogram(name: "c_isdigit", scope: !9808, file: !9808, line: 233, type: !680, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9854 = !DILocalVariable(name: "c", arg: 1, scope: !9853, file: !9808, line: 233, type: !27)
!9855 = !DILocation(line: 233, column: 16, scope: !9853)
!9856 = !DILocation(line: 235, column: 11, scope: !9853)
!9857 = !DILocation(line: 235, column: 3, scope: !9853)
!9858 = !DILocation(line: 238, column: 7, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9853, file: !9808, line: 236, column: 5)
!9860 = !DILocation(line: 240, column: 7, scope: !9859)
!9861 = !DILocation(line: 242, column: 1, scope: !9853)
!9862 = distinct !DISubprogram(name: "c_isgraph", scope: !9808, file: !9808, line: 245, type: !680, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9863 = !DILocalVariable(name: "c", arg: 1, scope: !9862, file: !9808, line: 245, type: !27)
!9864 = !DILocation(line: 245, column: 16, scope: !9862)
!9865 = !DILocation(line: 247, column: 11, scope: !9862)
!9866 = !DILocation(line: 247, column: 3, scope: !9862)
!9867 = !DILocation(line: 253, column: 7, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9862, file: !9808, line: 248, column: 5)
!9869 = !DILocation(line: 255, column: 7, scope: !9868)
!9870 = !DILocation(line: 257, column: 1, scope: !9862)
!9871 = distinct !DISubprogram(name: "c_islower", scope: !9808, file: !9808, line: 260, type: !680, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9872 = !DILocalVariable(name: "c", arg: 1, scope: !9871, file: !9808, line: 260, type: !27)
!9873 = !DILocation(line: 260, column: 16, scope: !9871)
!9874 = !DILocation(line: 262, column: 11, scope: !9871)
!9875 = !DILocation(line: 262, column: 3, scope: !9871)
!9876 = !DILocation(line: 265, column: 7, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9871, file: !9808, line: 263, column: 5)
!9878 = !DILocation(line: 267, column: 7, scope: !9877)
!9879 = !DILocation(line: 269, column: 1, scope: !9871)
!9880 = distinct !DISubprogram(name: "c_isprint", scope: !9808, file: !9808, line: 272, type: !680, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9881 = !DILocalVariable(name: "c", arg: 1, scope: !9880, file: !9808, line: 272, type: !27)
!9882 = !DILocation(line: 272, column: 16, scope: !9880)
!9883 = !DILocation(line: 274, column: 11, scope: !9880)
!9884 = !DILocation(line: 274, column: 3, scope: !9880)
!9885 = !DILocation(line: 281, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9880, file: !9808, line: 275, column: 5)
!9887 = !DILocation(line: 283, column: 7, scope: !9886)
!9888 = !DILocation(line: 285, column: 1, scope: !9880)
!9889 = distinct !DISubprogram(name: "c_ispunct", scope: !9808, file: !9808, line: 288, type: !680, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9890 = !DILocalVariable(name: "c", arg: 1, scope: !9889, file: !9808, line: 288, type: !27)
!9891 = !DILocation(line: 288, column: 16, scope: !9889)
!9892 = !DILocation(line: 290, column: 11, scope: !9889)
!9893 = !DILocation(line: 290, column: 3, scope: !9889)
!9894 = !DILocation(line: 293, column: 7, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9889, file: !9808, line: 291, column: 5)
!9896 = !DILocation(line: 295, column: 7, scope: !9895)
!9897 = !DILocation(line: 297, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "c_isspace", scope: !9808, file: !9808, line: 300, type: !680, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9899 = !DILocalVariable(name: "c", arg: 1, scope: !9898, file: !9808, line: 300, type: !27)
!9900 = !DILocation(line: 300, column: 16, scope: !9898)
!9901 = !DILocation(line: 302, column: 11, scope: !9898)
!9902 = !DILocation(line: 302, column: 3, scope: !9898)
!9903 = !DILocation(line: 305, column: 7, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9898, file: !9808, line: 303, column: 5)
!9905 = !DILocation(line: 307, column: 7, scope: !9904)
!9906 = !DILocation(line: 309, column: 1, scope: !9898)
!9907 = distinct !DISubprogram(name: "c_isupper", scope: !9808, file: !9808, line: 312, type: !680, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9908 = !DILocalVariable(name: "c", arg: 1, scope: !9907, file: !9808, line: 312, type: !27)
!9909 = !DILocation(line: 312, column: 16, scope: !9907)
!9910 = !DILocation(line: 314, column: 11, scope: !9907)
!9911 = !DILocation(line: 314, column: 3, scope: !9907)
!9912 = !DILocation(line: 317, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9907, file: !9808, line: 315, column: 5)
!9914 = !DILocation(line: 319, column: 7, scope: !9913)
!9915 = !DILocation(line: 321, column: 1, scope: !9907)
!9916 = distinct !DISubprogram(name: "c_isxdigit", scope: !9808, file: !9808, line: 324, type: !680, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9917 = !DILocalVariable(name: "c", arg: 1, scope: !9916, file: !9808, line: 324, type: !27)
!9918 = !DILocation(line: 324, column: 17, scope: !9916)
!9919 = !DILocation(line: 326, column: 11, scope: !9916)
!9920 = !DILocation(line: 326, column: 3, scope: !9916)
!9921 = !DILocation(line: 330, column: 7, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9916, file: !9808, line: 327, column: 5)
!9923 = !DILocation(line: 332, column: 7, scope: !9922)
!9924 = !DILocation(line: 334, column: 1, scope: !9916)
!9925 = distinct !DISubprogram(name: "c_tolower", scope: !9808, file: !9808, line: 337, type: !1655, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9926 = !DILocalVariable(name: "c", arg: 1, scope: !9925, file: !9808, line: 337, type: !27)
!9927 = !DILocation(line: 337, column: 16, scope: !9925)
!9928 = !DILocation(line: 339, column: 11, scope: !9925)
!9929 = !DILocation(line: 339, column: 3, scope: !9925)
!9930 = !DILocation(line: 342, column: 14, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9925, file: !9808, line: 340, column: 5)
!9932 = !DILocation(line: 342, column: 16, scope: !9931)
!9933 = !DILocation(line: 342, column: 22, scope: !9931)
!9934 = !DILocation(line: 342, column: 7, scope: !9931)
!9935 = !DILocation(line: 344, column: 14, scope: !9931)
!9936 = !DILocation(line: 344, column: 7, scope: !9931)
!9937 = !DILocation(line: 346, column: 1, scope: !9925)
!9938 = distinct !DISubprogram(name: "c_toupper", scope: !9808, file: !9808, line: 349, type: !1655, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1652, retainedNodes: !152)
!9939 = !DILocalVariable(name: "c", arg: 1, scope: !9938, file: !9808, line: 349, type: !27)
!9940 = !DILocation(line: 349, column: 16, scope: !9938)
!9941 = !DILocation(line: 351, column: 11, scope: !9938)
!9942 = !DILocation(line: 351, column: 3, scope: !9938)
!9943 = !DILocation(line: 354, column: 14, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9938, file: !9808, line: 352, column: 5)
!9945 = !DILocation(line: 354, column: 16, scope: !9944)
!9946 = !DILocation(line: 354, column: 22, scope: !9944)
!9947 = !DILocation(line: 354, column: 7, scope: !9944)
!9948 = !DILocation(line: 356, column: 14, scope: !9944)
!9949 = !DILocation(line: 356, column: 7, scope: !9944)
!9950 = !DILocation(line: 358, column: 1, scope: !9938)
!9951 = distinct !DISubprogram(name: "c_strncasecmp", scope: !9952, file: !9952, line: 27, type: !1662, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1657, retainedNodes: !152)
!9952 = !DIFile(filename: "lib/c-strncasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9953 = !DILocalVariable(name: "s1", arg: 1, scope: !9951, file: !9952, line: 27, type: !146)
!9954 = !DILocation(line: 27, column: 28, scope: !9951)
!9955 = !DILocalVariable(name: "s2", arg: 2, scope: !9951, file: !9952, line: 27, type: !146)
!9956 = !DILocation(line: 27, column: 44, scope: !9951)
!9957 = !DILocalVariable(name: "n", arg: 3, scope: !9951, file: !9952, line: 27, type: !149)
!9958 = !DILocation(line: 27, column: 55, scope: !9951)
!9959 = !DILocalVariable(name: "p1", scope: !9951, file: !9952, line: 29, type: !1660)
!9960 = !DILocation(line: 29, column: 33, scope: !9951)
!9961 = !DILocation(line: 29, column: 62, scope: !9951)
!9962 = !DILocalVariable(name: "p2", scope: !9951, file: !9952, line: 30, type: !1660)
!9963 = !DILocation(line: 30, column: 33, scope: !9951)
!9964 = !DILocation(line: 30, column: 62, scope: !9951)
!9965 = !DILocalVariable(name: "c1", scope: !9951, file: !9952, line: 31, type: !591)
!9966 = !DILocation(line: 31, column: 17, scope: !9951)
!9967 = !DILocalVariable(name: "c2", scope: !9951, file: !9952, line: 31, type: !591)
!9968 = !DILocation(line: 31, column: 21, scope: !9951)
!9969 = !DILocation(line: 33, column: 7, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9951, file: !9952, line: 33, column: 7)
!9971 = !DILocation(line: 33, column: 13, scope: !9970)
!9972 = !DILocation(line: 33, column: 10, scope: !9970)
!9973 = !DILocation(line: 33, column: 16, scope: !9970)
!9974 = !DILocation(line: 33, column: 19, scope: !9970)
!9975 = !DILocation(line: 33, column: 21, scope: !9970)
!9976 = !DILocation(line: 33, column: 7, scope: !9951)
!9977 = !DILocation(line: 34, column: 5, scope: !9970)
!9978 = !DILocation(line: 36, column: 3, scope: !9951)
!9979 = !DILocation(line: 38, column: 24, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9951, file: !9952, line: 37, column: 5)
!9981 = !DILocation(line: 38, column: 23, scope: !9980)
!9982 = !DILocation(line: 38, column: 12, scope: !9980)
!9983 = !DILocation(line: 38, column: 10, scope: !9980)
!9984 = !DILocation(line: 39, column: 24, scope: !9980)
!9985 = !DILocation(line: 39, column: 23, scope: !9980)
!9986 = !DILocation(line: 39, column: 12, scope: !9980)
!9987 = !DILocation(line: 39, column: 10, scope: !9980)
!9988 = !DILocation(line: 41, column: 11, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9980, file: !9952, line: 41, column: 11)
!9990 = !DILocation(line: 41, column: 15, scope: !9989)
!9991 = !DILocation(line: 41, column: 20, scope: !9989)
!9992 = !DILocation(line: 41, column: 23, scope: !9989)
!9993 = !DILocation(line: 41, column: 26, scope: !9989)
!9994 = !DILocation(line: 41, column: 11, scope: !9980)
!9995 = !DILocation(line: 42, column: 9, scope: !9989)
!9996 = !DILocation(line: 44, column: 7, scope: !9980)
!9997 = !DILocation(line: 45, column: 7, scope: !9980)
!9998 = !DILocation(line: 46, column: 5, scope: !9980)
!9999 = !DILocation(line: 47, column: 10, scope: !9951)
!10000 = !DILocation(line: 47, column: 16, scope: !9951)
!10001 = !DILocation(line: 47, column: 13, scope: !9951)
!10002 = distinct !{!10002, !9978, !10003}
!10003 = !DILocation(line: 47, column: 18, scope: !9951)
!10004 = !DILocation(line: 50, column: 12, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9951, file: !9952, line: 49, column: 7)
!10006 = !DILocation(line: 50, column: 17, scope: !10005)
!10007 = !DILocation(line: 50, column: 15, scope: !10005)
!10008 = !DILocation(line: 50, column: 5, scope: !10005)
!10009 = !DILocation(line: 56, column: 1, scope: !9951)
!10010 = distinct !DISubprogram(name: "canonicalize_filename_mode", scope: !10011, file: !10011, line: 99, type: !1675, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1664, retainedNodes: !152)
!10011 = !DIFile(filename: "lib/canonicalize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10012 = !DILocalVariable(name: "name", arg: 1, scope: !10010, file: !10011, line: 99, type: !146)
!10013 = !DILocation(line: 99, column: 41, scope: !10010)
!10014 = !DILocalVariable(name: "can_mode", arg: 2, scope: !10010, file: !10011, line: 99, type: !1677)
!10015 = !DILocation(line: 99, column: 67, scope: !10010)
!10016 = !DILocalVariable(name: "rname", scope: !10010, file: !10011, line: 101, type: !143)
!10017 = !DILocation(line: 101, column: 9, scope: !10010)
!10018 = !DILocalVariable(name: "dest", scope: !10010, file: !10011, line: 101, type: !143)
!10019 = !DILocation(line: 101, column: 17, scope: !10010)
!10020 = !DILocalVariable(name: "extra_buf", scope: !10010, file: !10011, line: 101, type: !143)
!10021 = !DILocation(line: 101, column: 24, scope: !10010)
!10022 = !DILocalVariable(name: "start", scope: !10010, file: !10011, line: 102, type: !146)
!10023 = !DILocation(line: 102, column: 15, scope: !10010)
!10024 = !DILocalVariable(name: "end", scope: !10010, file: !10011, line: 103, type: !146)
!10025 = !DILocation(line: 103, column: 15, scope: !10010)
!10026 = !DILocalVariable(name: "rname_limit", scope: !10010, file: !10011, line: 104, type: !146)
!10027 = !DILocation(line: 104, column: 15, scope: !10010)
!10028 = !DILocalVariable(name: "extra_len", scope: !10010, file: !10011, line: 105, type: !149)
!10029 = !DILocation(line: 105, column: 10, scope: !10010)
!10030 = !DILocalVariable(name: "ht", scope: !10010, file: !10011, line: 106, type: !244)
!10031 = !DILocation(line: 106, column: 15, scope: !10010)
!10032 = !DILocalVariable(name: "saved_errno", scope: !10010, file: !10011, line: 107, type: !27)
!10033 = !DILocation(line: 107, column: 7, scope: !10010)
!10034 = !DILocalVariable(name: "can_flags", scope: !10010, file: !10011, line: 108, type: !27)
!10035 = !DILocation(line: 108, column: 7, scope: !10010)
!10036 = !DILocation(line: 108, column: 19, scope: !10010)
!10037 = !DILocation(line: 108, column: 28, scope: !10010)
!10038 = !DILocalVariable(name: "logical", scope: !10010, file: !10011, line: 109, type: !141)
!10039 = !DILocation(line: 109, column: 8, scope: !10010)
!10040 = !DILocation(line: 109, column: 18, scope: !10010)
!10041 = !DILocation(line: 109, column: 28, scope: !10010)
!10042 = !DILocalVariable(name: "prefix_len", scope: !10010, file: !10011, line: 110, type: !149)
!10043 = !DILocation(line: 110, column: 10, scope: !10010)
!10044 = !DILocation(line: 112, column: 12, scope: !10010)
!10045 = !DILocation(line: 114, column: 7, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 114, column: 7)
!10047 = !DILocation(line: 114, column: 7, scope: !10010)
!10048 = !DILocation(line: 116, column: 7, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10046, file: !10011, line: 115, column: 5)
!10050 = !DILocation(line: 116, column: 13, scope: !10049)
!10051 = !DILocation(line: 117, column: 7, scope: !10049)
!10052 = !DILocation(line: 120, column: 7, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 120, column: 7)
!10054 = !DILocation(line: 120, column: 12, scope: !10053)
!10055 = !DILocation(line: 120, column: 7, scope: !10010)
!10056 = !DILocation(line: 122, column: 7, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10053, file: !10011, line: 121, column: 5)
!10058 = !DILocation(line: 122, column: 13, scope: !10057)
!10059 = !DILocation(line: 123, column: 7, scope: !10057)
!10060 = !DILocation(line: 126, column: 7, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 126, column: 7)
!10062 = !DILocation(line: 126, column: 15, scope: !10061)
!10063 = !DILocation(line: 126, column: 7, scope: !10010)
!10064 = !DILocation(line: 128, column: 7, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !10011, line: 127, column: 5)
!10066 = !DILocation(line: 128, column: 13, scope: !10065)
!10067 = !DILocation(line: 129, column: 7, scope: !10065)
!10068 = !DILocation(line: 134, column: 14, scope: !10010)
!10069 = !DILocation(line: 136, column: 8, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 136, column: 7)
!10071 = !DILocation(line: 136, column: 7, scope: !10010)
!10072 = !DILocation(line: 138, column: 15, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10070, file: !10011, line: 137, column: 5)
!10074 = !DILocation(line: 138, column: 13, scope: !10073)
!10075 = !DILocation(line: 139, column: 12, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10073, file: !10011, line: 139, column: 11)
!10077 = !DILocation(line: 139, column: 11, scope: !10073)
!10078 = !DILocation(line: 140, column: 9, scope: !10076)
!10079 = !DILocation(line: 141, column: 22, scope: !10073)
!10080 = !DILocation(line: 141, column: 14, scope: !10073)
!10081 = !DILocation(line: 141, column: 12, scope: !10073)
!10082 = !DILocation(line: 142, column: 11, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10073, file: !10011, line: 142, column: 11)
!10084 = !DILocation(line: 142, column: 18, scope: !10083)
!10085 = !DILocation(line: 142, column: 16, scope: !10083)
!10086 = !DILocation(line: 142, column: 24, scope: !10083)
!10087 = !DILocation(line: 142, column: 11, scope: !10073)
!10088 = !DILocalVariable(name: "p", scope: !10089, file: !10011, line: 144, type: !143)
!10089 = distinct !DILexicalBlock(scope: !10083, file: !10011, line: 143, column: 9)
!10090 = !DILocation(line: 144, column: 17, scope: !10089)
!10091 = !DILocation(line: 144, column: 31, scope: !10089)
!10092 = !DILocation(line: 144, column: 21, scope: !10089)
!10093 = !DILocation(line: 145, column: 18, scope: !10089)
!10094 = !DILocation(line: 145, column: 23, scope: !10089)
!10095 = !DILocation(line: 145, column: 30, scope: !10089)
!10096 = !DILocation(line: 145, column: 28, scope: !10089)
!10097 = !DILocation(line: 145, column: 20, scope: !10089)
!10098 = !DILocation(line: 145, column: 16, scope: !10089)
!10099 = !DILocation(line: 146, column: 19, scope: !10089)
!10100 = !DILocation(line: 146, column: 17, scope: !10089)
!10101 = !DILocation(line: 147, column: 25, scope: !10089)
!10102 = !DILocation(line: 147, column: 31, scope: !10089)
!10103 = !DILocation(line: 147, column: 23, scope: !10089)
!10104 = !DILocation(line: 148, column: 9, scope: !10089)
!10105 = !DILocation(line: 151, column: 25, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10083, file: !10011, line: 150, column: 9)
!10107 = !DILocation(line: 151, column: 23, scope: !10106)
!10108 = !DILocation(line: 153, column: 15, scope: !10073)
!10109 = !DILocation(line: 153, column: 13, scope: !10073)
!10110 = !DILocation(line: 154, column: 18, scope: !10073)
!10111 = !DILocation(line: 155, column: 5, scope: !10073)
!10112 = !DILocation(line: 158, column: 15, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10070, file: !10011, line: 157, column: 5)
!10114 = !DILocation(line: 158, column: 13, scope: !10113)
!10115 = !DILocation(line: 159, column: 21, scope: !10113)
!10116 = !DILocation(line: 159, column: 27, scope: !10113)
!10117 = !DILocation(line: 159, column: 19, scope: !10113)
!10118 = !DILocation(line: 160, column: 14, scope: !10113)
!10119 = !DILocation(line: 160, column: 12, scope: !10113)
!10120 = !DILocation(line: 161, column: 11, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10113, file: !10011, line: 161, column: 11)
!10122 = !DILocation(line: 161, column: 11, scope: !10113)
!10123 = !DILocation(line: 163, column: 19, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10121, file: !10011, line: 162, column: 9)
!10125 = !DILocation(line: 163, column: 26, scope: !10124)
!10126 = !DILocation(line: 163, column: 32, scope: !10124)
!10127 = !DILocation(line: 163, column: 11, scope: !10124)
!10128 = !DILocation(line: 164, column: 19, scope: !10124)
!10129 = !DILocation(line: 164, column: 16, scope: !10124)
!10130 = !DILocation(line: 165, column: 9, scope: !10124)
!10131 = !DILocation(line: 166, column: 12, scope: !10113)
!10132 = !DILocation(line: 166, column: 15, scope: !10113)
!10133 = !DILocation(line: 173, column: 15, scope: !10113)
!10134 = !DILocation(line: 173, column: 22, scope: !10113)
!10135 = !DILocation(line: 173, column: 20, scope: !10113)
!10136 = !DILocation(line: 173, column: 13, scope: !10113)
!10137 = !DILocation(line: 176, column: 3, scope: !10010)
!10138 = !DILocation(line: 176, column: 12, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10140, file: !10011, line: 176, column: 3)
!10140 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 176, column: 3)
!10141 = !DILocation(line: 176, column: 11, scope: !10139)
!10142 = !DILocation(line: 176, column: 3, scope: !10140)
!10143 = !DILocation(line: 179, column: 7, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10139, file: !10011, line: 177, column: 5)
!10145 = !DILocation(line: 179, column: 14, scope: !10144)
!10146 = !DILocation(line: 180, column: 9, scope: !10144)
!10147 = distinct !{!10147, !10143, !10148}
!10148 = !DILocation(line: 180, column: 11, scope: !10144)
!10149 = !DILocation(line: 183, column: 18, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10144, file: !10011, line: 183, column: 7)
!10151 = !DILocation(line: 183, column: 16, scope: !10150)
!10152 = !DILocation(line: 183, column: 12, scope: !10150)
!10153 = !DILocation(line: 183, column: 26, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10150, file: !10011, line: 183, column: 7)
!10155 = !DILocation(line: 183, column: 25, scope: !10154)
!10156 = !DILocation(line: 183, column: 30, scope: !10154)
!10157 = !DILocation(line: 183, column: 34, scope: !10154)
!10158 = !DILocation(line: 183, column: 33, scope: !10154)
!10159 = !DILocation(line: 0, scope: !10154)
!10160 = !DILocation(line: 183, column: 7, scope: !10150)
!10161 = !DILocation(line: 183, column: 50, scope: !10154)
!10162 = !DILocation(line: 183, column: 7, scope: !10154)
!10163 = distinct !{!10163, !10160, !10164}
!10164 = !DILocation(line: 184, column: 24, scope: !10150)
!10165 = !DILocation(line: 186, column: 11, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10144, file: !10011, line: 186, column: 11)
!10167 = !DILocation(line: 186, column: 17, scope: !10166)
!10168 = !DILocation(line: 186, column: 15, scope: !10166)
!10169 = !DILocation(line: 186, column: 23, scope: !10166)
!10170 = !DILocation(line: 186, column: 11, scope: !10144)
!10171 = !DILocation(line: 187, column: 9, scope: !10166)
!10172 = !DILocation(line: 188, column: 16, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10166, file: !10011, line: 188, column: 16)
!10174 = !DILocation(line: 188, column: 22, scope: !10173)
!10175 = !DILocation(line: 188, column: 20, scope: !10173)
!10176 = !DILocation(line: 188, column: 28, scope: !10173)
!10177 = !DILocation(line: 188, column: 33, scope: !10173)
!10178 = !DILocation(line: 188, column: 36, scope: !10173)
!10179 = !DILocation(line: 188, column: 45, scope: !10173)
!10180 = !DILocation(line: 188, column: 16, scope: !10166)
!10181 = !DILocation(line: 190, column: 16, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10173, file: !10011, line: 190, column: 16)
!10183 = !DILocation(line: 190, column: 22, scope: !10182)
!10184 = !DILocation(line: 190, column: 20, scope: !10182)
!10185 = !DILocation(line: 190, column: 28, scope: !10182)
!10186 = !DILocation(line: 190, column: 33, scope: !10182)
!10187 = !DILocation(line: 190, column: 36, scope: !10182)
!10188 = !DILocation(line: 190, column: 45, scope: !10182)
!10189 = !DILocation(line: 190, column: 52, scope: !10182)
!10190 = !DILocation(line: 190, column: 55, scope: !10182)
!10191 = !DILocation(line: 190, column: 64, scope: !10182)
!10192 = !DILocation(line: 190, column: 16, scope: !10173)
!10193 = !DILocation(line: 193, column: 15, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10195, file: !10011, line: 193, column: 15)
!10195 = distinct !DILexicalBlock(scope: !10182, file: !10011, line: 191, column: 9)
!10196 = !DILocation(line: 193, column: 22, scope: !10194)
!10197 = !DILocation(line: 193, column: 30, scope: !10194)
!10198 = !DILocation(line: 193, column: 28, scope: !10194)
!10199 = !DILocation(line: 193, column: 41, scope: !10194)
!10200 = !DILocation(line: 193, column: 20, scope: !10194)
!10201 = !DILocation(line: 193, column: 15, scope: !10195)
!10202 = !DILocation(line: 194, column: 18, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10194, file: !10011, line: 194, column: 13)
!10204 = !DILocation(line: 194, column: 26, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10203, file: !10011, line: 194, column: 13)
!10206 = !DILocation(line: 194, column: 33, scope: !10205)
!10207 = !DILocation(line: 194, column: 31, scope: !10205)
!10208 = !DILocation(line: 194, column: 39, scope: !10205)
!10209 = !DILocation(line: 194, column: 43, scope: !10205)
!10210 = !DILocation(line: 194, column: 42, scope: !10205)
!10211 = !DILocation(line: 0, scope: !10205)
!10212 = !DILocation(line: 194, column: 13, scope: !10203)
!10213 = !DILocation(line: 195, column: 15, scope: !10205)
!10214 = !DILocation(line: 194, column: 63, scope: !10205)
!10215 = !DILocation(line: 194, column: 13, scope: !10205)
!10216 = distinct !{!10216, !10212, !10217}
!10217 = !DILocation(line: 195, column: 15, scope: !10203)
!10218 = !DILocation(line: 199, column: 9, scope: !10195)
!10219 = !DILocalVariable(name: "st", scope: !10220, file: !10011, line: 202, type: !1683)
!10220 = distinct !DILexicalBlock(scope: !10182, file: !10011, line: 201, column: 9)
!10221 = !DILocation(line: 202, column: 23, scope: !10220)
!10222 = !DILocation(line: 204, column: 16, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10220, file: !10011, line: 204, column: 15)
!10224 = !DILocation(line: 204, column: 15, scope: !10220)
!10225 = !DILocation(line: 205, column: 18, scope: !10223)
!10226 = !DILocation(line: 205, column: 21, scope: !10223)
!10227 = !DILocation(line: 205, column: 13, scope: !10223)
!10228 = !DILocation(line: 207, column: 15, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10220, file: !10011, line: 207, column: 15)
!10230 = !DILocation(line: 207, column: 23, scope: !10229)
!10231 = !DILocation(line: 207, column: 29, scope: !10229)
!10232 = !DILocation(line: 207, column: 27, scope: !10229)
!10233 = !DILocation(line: 207, column: 20, scope: !10229)
!10234 = !DILocation(line: 207, column: 39, scope: !10229)
!10235 = !DILocation(line: 207, column: 36, scope: !10229)
!10236 = !DILocation(line: 207, column: 15, scope: !10220)
!10237 = !DILocalVariable(name: "dest_offset", scope: !10238, file: !10011, line: 209, type: !564)
!10238 = distinct !DILexicalBlock(scope: !10229, file: !10011, line: 208, column: 13)
!10239 = !DILocation(line: 209, column: 25, scope: !10238)
!10240 = !DILocation(line: 209, column: 39, scope: !10238)
!10241 = !DILocation(line: 209, column: 46, scope: !10238)
!10242 = !DILocation(line: 209, column: 44, scope: !10238)
!10243 = !DILocalVariable(name: "new_size", scope: !10238, file: !10011, line: 210, type: !149)
!10244 = !DILocation(line: 210, column: 22, scope: !10238)
!10245 = !DILocation(line: 210, column: 33, scope: !10238)
!10246 = !DILocation(line: 210, column: 47, scope: !10238)
!10247 = !DILocation(line: 210, column: 45, scope: !10238)
!10248 = !DILocation(line: 212, column: 19, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10238, file: !10011, line: 212, column: 19)
!10250 = !DILocation(line: 212, column: 25, scope: !10249)
!10251 = !DILocation(line: 212, column: 23, scope: !10249)
!10252 = !DILocation(line: 212, column: 31, scope: !10249)
!10253 = !DILocation(line: 212, column: 35, scope: !10249)
!10254 = !DILocation(line: 212, column: 19, scope: !10238)
!10255 = !DILocation(line: 213, column: 29, scope: !10249)
!10256 = !DILocation(line: 213, column: 35, scope: !10249)
!10257 = !DILocation(line: 213, column: 33, scope: !10249)
!10258 = !DILocation(line: 213, column: 41, scope: !10249)
!10259 = !DILocation(line: 213, column: 26, scope: !10249)
!10260 = !DILocation(line: 213, column: 17, scope: !10249)
!10261 = !DILocation(line: 215, column: 26, scope: !10249)
!10262 = !DILocation(line: 216, column: 33, scope: !10238)
!10263 = !DILocation(line: 216, column: 40, scope: !10238)
!10264 = !DILocation(line: 216, column: 23, scope: !10238)
!10265 = !DILocation(line: 216, column: 21, scope: !10238)
!10266 = !DILocation(line: 217, column: 29, scope: !10238)
!10267 = !DILocation(line: 217, column: 37, scope: !10238)
!10268 = !DILocation(line: 217, column: 35, scope: !10238)
!10269 = !DILocation(line: 217, column: 27, scope: !10238)
!10270 = !DILocation(line: 219, column: 22, scope: !10238)
!10271 = !DILocation(line: 219, column: 30, scope: !10238)
!10272 = !DILocation(line: 219, column: 28, scope: !10238)
!10273 = !DILocation(line: 219, column: 20, scope: !10238)
!10274 = !DILocation(line: 220, column: 13, scope: !10238)
!10275 = !DILocation(line: 222, column: 26, scope: !10220)
!10276 = !DILocation(line: 222, column: 32, scope: !10220)
!10277 = !DILocation(line: 222, column: 39, scope: !10220)
!10278 = !DILocation(line: 222, column: 45, scope: !10220)
!10279 = !DILocation(line: 222, column: 43, scope: !10220)
!10280 = !DILocation(line: 222, column: 18, scope: !10220)
!10281 = !DILocation(line: 222, column: 16, scope: !10220)
!10282 = !DILocation(line: 223, column: 19, scope: !10220)
!10283 = !DILocation(line: 223, column: 25, scope: !10220)
!10284 = !DILocation(line: 223, column: 23, scope: !10220)
!10285 = !DILocation(line: 223, column: 16, scope: !10220)
!10286 = !DILocation(line: 224, column: 12, scope: !10220)
!10287 = !DILocation(line: 224, column: 17, scope: !10220)
!10288 = !DILocation(line: 226, column: 15, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10220, file: !10011, line: 226, column: 15)
!10290 = !DILocation(line: 226, column: 23, scope: !10289)
!10291 = !DILocation(line: 226, column: 27, scope: !10289)
!10292 = !DILocation(line: 226, column: 36, scope: !10289)
!10293 = !DILocation(line: 226, column: 15, scope: !10220)
!10294 = !DILocation(line: 231, column: 18, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10289, file: !10011, line: 227, column: 13)
!10296 = !DILocation(line: 231, column: 26, scope: !10295)
!10297 = !DILocation(line: 232, column: 13, scope: !10295)
!10298 = !DILocation(line: 233, column: 21, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10289, file: !10011, line: 233, column: 20)
!10300 = !DILocation(line: 233, column: 37, scope: !10299)
!10301 = !DILocation(line: 233, column: 31, scope: !10299)
!10302 = !DILocation(line: 233, column: 58, scope: !10299)
!10303 = !DILocation(line: 233, column: 51, scope: !10299)
!10304 = !DILocation(line: 233, column: 71, scope: !10299)
!10305 = !DILocation(line: 233, column: 20, scope: !10289)
!10306 = !DILocation(line: 236, column: 29, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10299, file: !10011, line: 234, column: 13)
!10308 = !DILocation(line: 236, column: 27, scope: !10307)
!10309 = !DILocation(line: 237, column: 19, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10307, file: !10011, line: 237, column: 19)
!10311 = !DILocation(line: 237, column: 28, scope: !10310)
!10312 = !DILocation(line: 237, column: 19, scope: !10307)
!10313 = !DILocation(line: 238, column: 17, scope: !10310)
!10314 = !DILocation(line: 239, column: 19, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10307, file: !10011, line: 239, column: 19)
!10316 = !DILocation(line: 239, column: 28, scope: !10315)
!10317 = !DILocation(line: 239, column: 19, scope: !10307)
!10318 = !DILocation(line: 241, column: 23, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !10011, line: 241, column: 23)
!10320 = distinct !DILexicalBlock(scope: !10315, file: !10011, line: 240, column: 17)
!10321 = !DILocation(line: 241, column: 35, scope: !10319)
!10322 = !DILocation(line: 241, column: 27, scope: !10319)
!10323 = !DILocation(line: 241, column: 50, scope: !10319)
!10324 = !DILocation(line: 241, column: 53, scope: !10319)
!10325 = !DILocation(line: 241, column: 65, scope: !10319)
!10326 = !DILocation(line: 241, column: 23, scope: !10320)
!10327 = !DILocation(line: 242, column: 21, scope: !10319)
!10328 = !DILocation(line: 243, column: 19, scope: !10320)
!10329 = !DILocation(line: 245, column: 18, scope: !10307)
!10330 = !DILocation(line: 245, column: 26, scope: !10307)
!10331 = !DILocation(line: 246, column: 13, scope: !10307)
!10332 = !DILocation(line: 248, column: 15, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10220, file: !10011, line: 248, column: 15)
!10334 = !DILocation(line: 248, column: 15, scope: !10220)
!10335 = !DILocalVariable(name: "buf", scope: !10336, file: !10011, line: 250, type: !143)
!10336 = distinct !DILexicalBlock(scope: !10333, file: !10011, line: 249, column: 13)
!10337 = !DILocation(line: 250, column: 21, scope: !10336)
!10338 = !DILocalVariable(name: "n", scope: !10336, file: !10011, line: 251, type: !149)
!10339 = !DILocation(line: 251, column: 22, scope: !10336)
!10340 = !DILocalVariable(name: "len", scope: !10336, file: !10011, line: 251, type: !149)
!10341 = !DILocation(line: 251, column: 25, scope: !10336)
!10342 = !DILocation(line: 257, column: 37, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10336, file: !10011, line: 257, column: 19)
!10344 = !DILocation(line: 257, column: 19, scope: !10343)
!10345 = !DILocation(line: 257, column: 19, scope: !10336)
!10346 = !DILocation(line: 259, column: 23, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !10011, line: 259, column: 23)
!10348 = distinct !DILexicalBlock(scope: !10343, file: !10011, line: 258, column: 17)
!10349 = !DILocation(line: 259, column: 32, scope: !10347)
!10350 = !DILocation(line: 259, column: 23, scope: !10348)
!10351 = !DILocation(line: 260, column: 21, scope: !10347)
!10352 = !DILocation(line: 261, column: 31, scope: !10348)
!10353 = !DILocation(line: 262, column: 19, scope: !10348)
!10354 = !DILocation(line: 265, column: 42, scope: !10336)
!10355 = !DILocation(line: 265, column: 52, scope: !10336)
!10356 = !{!3810, !2467, i64 48}
!10357 = !DILocation(line: 265, column: 21, scope: !10336)
!10358 = !DILocation(line: 265, column: 19, scope: !10336)
!10359 = !DILocation(line: 266, column: 20, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10336, file: !10011, line: 266, column: 19)
!10361 = !DILocation(line: 266, column: 19, scope: !10336)
!10362 = !DILocation(line: 268, column: 23, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !10011, line: 268, column: 23)
!10364 = distinct !DILexicalBlock(scope: !10360, file: !10011, line: 267, column: 17)
!10365 = !DILocation(line: 268, column: 32, scope: !10363)
!10366 = !DILocation(line: 268, column: 47, scope: !10363)
!10367 = !DILocation(line: 268, column: 50, scope: !10363)
!10368 = !DILocation(line: 268, column: 56, scope: !10363)
!10369 = !DILocation(line: 268, column: 23, scope: !10364)
!10370 = !DILocation(line: 269, column: 21, scope: !10363)
!10371 = !DILocation(line: 270, column: 33, scope: !10364)
!10372 = !DILocation(line: 270, column: 31, scope: !10364)
!10373 = !DILocation(line: 271, column: 19, scope: !10364)
!10374 = !DILocation(line: 274, column: 27, scope: !10336)
!10375 = !DILocation(line: 274, column: 19, scope: !10336)
!10376 = !DILocation(line: 274, column: 17, scope: !10336)
!10377 = !DILocation(line: 275, column: 29, scope: !10336)
!10378 = !DILocation(line: 275, column: 21, scope: !10336)
!10379 = !DILocation(line: 275, column: 19, scope: !10336)
!10380 = !DILocation(line: 277, column: 20, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10336, file: !10011, line: 277, column: 19)
!10382 = !DILocation(line: 277, column: 19, scope: !10336)
!10383 = !DILocation(line: 280, column: 23, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10381, file: !10011, line: 278, column: 17)
!10385 = !DILocation(line: 280, column: 27, scope: !10384)
!10386 = !DILocation(line: 280, column: 25, scope: !10384)
!10387 = !DILocation(line: 280, column: 31, scope: !10384)
!10388 = !DILocation(line: 280, column: 36, scope: !10384)
!10389 = !DILocation(line: 280, column: 21, scope: !10384)
!10390 = !DILocation(line: 280, column: 51, scope: !10384)
!10391 = !DILocation(line: 280, column: 55, scope: !10384)
!10392 = !DILocation(line: 280, column: 53, scope: !10384)
!10393 = !DILocation(line: 280, column: 59, scope: !10384)
!10394 = !DILocation(line: 279, column: 29, scope: !10384)
!10395 = !DILocation(line: 281, column: 40, scope: !10384)
!10396 = !DILocation(line: 281, column: 31, scope: !10384)
!10397 = !DILocation(line: 281, column: 29, scope: !10384)
!10398 = !DILocation(line: 282, column: 17, scope: !10384)
!10399 = !DILocation(line: 283, column: 25, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10381, file: !10011, line: 283, column: 24)
!10401 = !DILocation(line: 283, column: 29, scope: !10400)
!10402 = !DILocation(line: 283, column: 27, scope: !10400)
!10403 = !DILocation(line: 283, column: 33, scope: !10400)
!10404 = !DILocation(line: 283, column: 40, scope: !10400)
!10405 = !DILocation(line: 283, column: 38, scope: !10400)
!10406 = !DILocation(line: 283, column: 24, scope: !10381)
!10407 = !DILocation(line: 285, column: 31, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10400, file: !10011, line: 284, column: 17)
!10409 = !DILocation(line: 285, column: 35, scope: !10408)
!10410 = !DILocation(line: 285, column: 33, scope: !10408)
!10411 = !DILocation(line: 285, column: 39, scope: !10408)
!10412 = !DILocation(line: 285, column: 29, scope: !10408)
!10413 = !DILocation(line: 286, column: 41, scope: !10408)
!10414 = !DILocation(line: 286, column: 52, scope: !10408)
!10415 = !DILocation(line: 286, column: 31, scope: !10408)
!10416 = !DILocation(line: 286, column: 29, scope: !10408)
!10417 = !DILocation(line: 287, column: 17, scope: !10408)
!10418 = !DILocation(line: 290, column: 25, scope: !10336)
!10419 = !DILocation(line: 290, column: 35, scope: !10336)
!10420 = !DILocation(line: 290, column: 39, scope: !10336)
!10421 = !DILocation(line: 290, column: 44, scope: !10336)
!10422 = !DILocation(line: 290, column: 48, scope: !10336)
!10423 = !DILocation(line: 290, column: 15, scope: !10336)
!10424 = !DILocation(line: 291, column: 36, scope: !10336)
!10425 = !DILocation(line: 291, column: 47, scope: !10336)
!10426 = !DILocation(line: 291, column: 52, scope: !10336)
!10427 = !DILocation(line: 291, column: 28, scope: !10336)
!10428 = !DILocation(line: 291, column: 26, scope: !10336)
!10429 = !DILocation(line: 291, column: 20, scope: !10336)
!10430 = !DILocation(line: 293, column: 19, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10336, file: !10011, line: 293, column: 19)
!10432 = !DILocation(line: 293, column: 19, scope: !10336)
!10433 = !DILocalVariable(name: "pfxlen", scope: !10434, file: !10011, line: 295, type: !149)
!10434 = distinct !DILexicalBlock(scope: !10431, file: !10011, line: 294, column: 17)
!10435 = !DILocation(line: 295, column: 26, scope: !10434)
!10436 = !DILocation(line: 297, column: 23, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !10011, line: 297, column: 23)
!10438 = !DILocation(line: 297, column: 23, scope: !10434)
!10439 = !DILocation(line: 298, column: 29, scope: !10437)
!10440 = !DILocation(line: 298, column: 36, scope: !10437)
!10441 = !DILocation(line: 298, column: 41, scope: !10437)
!10442 = !DILocation(line: 298, column: 21, scope: !10437)
!10443 = !DILocation(line: 299, column: 26, scope: !10434)
!10444 = !DILocation(line: 299, column: 34, scope: !10434)
!10445 = !DILocation(line: 299, column: 32, scope: !10434)
!10446 = !DILocation(line: 299, column: 24, scope: !10434)
!10447 = !DILocation(line: 300, column: 24, scope: !10434)
!10448 = !DILocation(line: 300, column: 27, scope: !10434)
!10449 = !DILocation(line: 308, column: 32, scope: !10434)
!10450 = !DILocation(line: 308, column: 30, scope: !10434)
!10451 = !DILocation(line: 309, column: 17, scope: !10434)
!10452 = !DILocation(line: 314, column: 23, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !10011, line: 314, column: 23)
!10454 = distinct !DILexicalBlock(scope: !10431, file: !10011, line: 311, column: 17)
!10455 = !DILocation(line: 314, column: 30, scope: !10453)
!10456 = !DILocation(line: 314, column: 38, scope: !10453)
!10457 = !DILocation(line: 314, column: 36, scope: !10453)
!10458 = !DILocation(line: 314, column: 49, scope: !10453)
!10459 = !DILocation(line: 314, column: 28, scope: !10453)
!10460 = !DILocation(line: 314, column: 23, scope: !10454)
!10461 = !DILocation(line: 315, column: 26, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10453, file: !10011, line: 315, column: 21)
!10463 = !DILocation(line: 315, column: 34, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10462, file: !10011, line: 315, column: 21)
!10465 = !DILocation(line: 315, column: 41, scope: !10464)
!10466 = !DILocation(line: 315, column: 39, scope: !10464)
!10467 = !DILocation(line: 315, column: 47, scope: !10464)
!10468 = !DILocation(line: 315, column: 51, scope: !10464)
!10469 = !DILocation(line: 315, column: 50, scope: !10464)
!10470 = !DILocation(line: 0, scope: !10464)
!10471 = !DILocation(line: 315, column: 21, scope: !10462)
!10472 = !DILocation(line: 316, column: 23, scope: !10464)
!10473 = !DILocation(line: 315, column: 71, scope: !10464)
!10474 = !DILocation(line: 315, column: 21, scope: !10464)
!10475 = distinct !{!10475, !10471, !10476}
!10476 = !DILocation(line: 316, column: 23, scope: !10462)
!10477 = !DILocation(line: 322, column: 21, scope: !10336)
!10478 = !DILocation(line: 322, column: 15, scope: !10336)
!10479 = !DILocation(line: 323, column: 13, scope: !10336)
!10480 = !DILocation(line: 326, column: 20, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !10011, line: 326, column: 19)
!10482 = distinct !DILexicalBlock(scope: !10333, file: !10011, line: 325, column: 13)
!10483 = !DILocation(line: 326, column: 41, scope: !10481)
!10484 = !DILocation(line: 326, column: 45, scope: !10481)
!10485 = !DILocation(line: 326, column: 44, scope: !10481)
!10486 = !DILocation(line: 326, column: 49, scope: !10481)
!10487 = !DILocation(line: 326, column: 53, scope: !10481)
!10488 = !DILocation(line: 326, column: 62, scope: !10481)
!10489 = !DILocation(line: 326, column: 19, scope: !10482)
!10490 = !DILocation(line: 328, column: 31, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10481, file: !10011, line: 327, column: 17)
!10492 = !DILocation(line: 329, column: 19, scope: !10491)
!10493 = !DILocation(line: 333, column: 5, scope: !10144)
!10494 = !DILocation(line: 176, column: 27, scope: !10139)
!10495 = !DILocation(line: 176, column: 25, scope: !10139)
!10496 = !DILocation(line: 176, column: 3, scope: !10139)
!10497 = distinct !{!10497, !10142, !10498}
!10498 = !DILocation(line: 333, column: 5, scope: !10140)
!10499 = !DILocation(line: 334, column: 7, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 334, column: 7)
!10501 = !DILocation(line: 334, column: 14, scope: !10500)
!10502 = !DILocation(line: 334, column: 22, scope: !10500)
!10503 = !DILocation(line: 334, column: 20, scope: !10500)
!10504 = !DILocation(line: 334, column: 33, scope: !10500)
!10505 = !DILocation(line: 334, column: 12, scope: !10500)
!10506 = !DILocation(line: 334, column: 37, scope: !10500)
!10507 = !DILocation(line: 334, column: 40, scope: !10500)
!10508 = !DILocation(line: 334, column: 7, scope: !10010)
!10509 = !DILocation(line: 335, column: 5, scope: !10500)
!10510 = !DILocation(line: 339, column: 4, scope: !10010)
!10511 = !DILocation(line: 339, column: 9, scope: !10010)
!10512 = !DILocation(line: 340, column: 7, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 340, column: 7)
!10514 = !DILocation(line: 340, column: 22, scope: !10513)
!10515 = !DILocation(line: 340, column: 27, scope: !10513)
!10516 = !DILocation(line: 340, column: 19, scope: !10513)
!10517 = !DILocation(line: 340, column: 7, scope: !10010)
!10518 = !DILocation(line: 341, column: 23, scope: !10513)
!10519 = !DILocation(line: 341, column: 30, scope: !10513)
!10520 = !DILocation(line: 341, column: 37, scope: !10513)
!10521 = !DILocation(line: 341, column: 35, scope: !10513)
!10522 = !DILocation(line: 341, column: 43, scope: !10513)
!10523 = !DILocation(line: 341, column: 13, scope: !10513)
!10524 = !DILocation(line: 341, column: 11, scope: !10513)
!10525 = !DILocation(line: 341, column: 5, scope: !10513)
!10526 = !DILocation(line: 343, column: 9, scope: !10010)
!10527 = !DILocation(line: 343, column: 3, scope: !10010)
!10528 = !DILocation(line: 344, column: 7, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 344, column: 7)
!10530 = !DILocation(line: 344, column: 7, scope: !10010)
!10531 = !DILocation(line: 345, column: 16, scope: !10529)
!10532 = !DILocation(line: 345, column: 5, scope: !10529)
!10533 = !DILocation(line: 346, column: 10, scope: !10010)
!10534 = !DILocation(line: 346, column: 3, scope: !10010)
!10535 = !DILabel(scope: !10010, name: "error", file: !10011, line: 348)
!10536 = !DILocation(line: 348, column: 1, scope: !10010)
!10537 = !DILocation(line: 349, column: 9, scope: !10010)
!10538 = !DILocation(line: 349, column: 3, scope: !10010)
!10539 = !DILocation(line: 350, column: 9, scope: !10010)
!10540 = !DILocation(line: 350, column: 3, scope: !10010)
!10541 = !DILocation(line: 351, column: 7, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10010, file: !10011, line: 351, column: 7)
!10543 = !DILocation(line: 351, column: 7, scope: !10010)
!10544 = !DILocation(line: 352, column: 16, scope: !10542)
!10545 = !DILocation(line: 352, column: 5, scope: !10542)
!10546 = !DILocation(line: 353, column: 11, scope: !10010)
!10547 = !DILocation(line: 353, column: 3, scope: !10010)
!10548 = !DILocation(line: 353, column: 9, scope: !10010)
!10549 = !DILocation(line: 354, column: 3, scope: !10010)
!10550 = !DILocation(line: 355, column: 1, scope: !10010)
!10551 = distinct !DISubprogram(name: "seen_triple", scope: !10011, file: !10011, line: 70, type: !1678, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1664, retainedNodes: !152)
!10552 = !DILocalVariable(name: "ht", arg: 1, scope: !10551, file: !10011, line: 70, type: !1680)
!10553 = !DILocation(line: 70, column: 27, scope: !10551)
!10554 = !DILocalVariable(name: "filename", arg: 2, scope: !10551, file: !10011, line: 70, type: !146)
!10555 = !DILocation(line: 70, column: 43, scope: !10551)
!10556 = !DILocalVariable(name: "st", arg: 3, scope: !10551, file: !10011, line: 70, type: !1681)
!10557 = !DILocation(line: 70, column: 72, scope: !10551)
!10558 = !DILocation(line: 72, column: 8, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10551, file: !10011, line: 72, column: 7)
!10560 = !DILocation(line: 72, column: 7, scope: !10559)
!10561 = !DILocation(line: 72, column: 11, scope: !10559)
!10562 = !DILocation(line: 72, column: 7, scope: !10551)
!10563 = !DILocalVariable(name: "initial_capacity", scope: !10564, file: !10011, line: 74, type: !149)
!10564 = distinct !DILexicalBlock(scope: !10559, file: !10011, line: 73, column: 5)
!10565 = !DILocation(line: 74, column: 14, scope: !10564)
!10566 = !DILocation(line: 75, column: 30, scope: !10564)
!10567 = !DILocation(line: 75, column: 13, scope: !10564)
!10568 = !DILocation(line: 75, column: 8, scope: !10564)
!10569 = !DILocation(line: 75, column: 11, scope: !10564)
!10570 = !DILocation(line: 80, column: 12, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10564, file: !10011, line: 80, column: 11)
!10572 = !DILocation(line: 80, column: 11, scope: !10571)
!10573 = !DILocation(line: 80, column: 15, scope: !10571)
!10574 = !DILocation(line: 80, column: 11, scope: !10564)
!10575 = !DILocation(line: 81, column: 9, scope: !10571)
!10576 = !DILocation(line: 82, column: 5, scope: !10564)
!10577 = !DILocation(line: 84, column: 19, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10551, file: !10011, line: 84, column: 7)
!10579 = !DILocation(line: 84, column: 18, scope: !10578)
!10580 = !DILocation(line: 84, column: 23, scope: !10578)
!10581 = !DILocation(line: 84, column: 33, scope: !10578)
!10582 = !DILocation(line: 84, column: 7, scope: !10578)
!10583 = !DILocation(line: 84, column: 7, scope: !10551)
!10584 = !DILocation(line: 85, column: 5, scope: !10578)
!10585 = !DILocation(line: 87, column: 17, scope: !10551)
!10586 = !DILocation(line: 87, column: 16, scope: !10551)
!10587 = !DILocation(line: 87, column: 21, scope: !10551)
!10588 = !DILocation(line: 87, column: 31, scope: !10551)
!10589 = !DILocation(line: 87, column: 3, scope: !10551)
!10590 = !DILocation(line: 88, column: 3, scope: !10551)
!10591 = !DILocation(line: 89, column: 1, scope: !10551)
!10592 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !1140, file: !1140, line: 51, type: !570, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10593 = !DILocalVariable(name: "file", arg: 1, scope: !10592, file: !1140, line: 51, type: !146)
!10594 = !DILocation(line: 51, column: 41, scope: !10592)
!10595 = !DILocation(line: 53, column: 15, scope: !10592)
!10596 = !DILocation(line: 53, column: 13, scope: !10592)
!10597 = !DILocation(line: 54, column: 1, scope: !10592)
!10598 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !1140, file: !1140, line: 88, type: !401, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10599 = !DILocalVariable(name: "ignore", arg: 1, scope: !10598, file: !1140, line: 88, type: !141)
!10600 = !DILocation(line: 88, column: 37, scope: !10598)
!10601 = !DILocation(line: 90, column: 18, scope: !10598)
!10602 = !DILocation(line: 90, column: 16, scope: !10598)
!10603 = !DILocation(line: 91, column: 1, scope: !10598)
!10604 = distinct !DISubprogram(name: "close_stdout", scope: !1140, file: !1140, line: 117, type: !341, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1100, retainedNodes: !152)
!10605 = !DILocation(line: 119, column: 21, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10604, file: !1140, line: 119, column: 7)
!10607 = !DILocation(line: 119, column: 7, scope: !10606)
!10608 = !DILocation(line: 119, column: 29, scope: !10606)
!10609 = !DILocation(line: 120, column: 7, scope: !10606)
!10610 = !DILocation(line: 120, column: 12, scope: !10606)
!10611 = !DILocation(line: 120, column: 25, scope: !10606)
!10612 = !DILocation(line: 120, column: 28, scope: !10606)
!10613 = !DILocation(line: 120, column: 34, scope: !10606)
!10614 = !DILocation(line: 119, column: 7, scope: !10604)
!10615 = !DILocalVariable(name: "write_error", scope: !10616, file: !1140, line: 122, type: !146)
!10616 = distinct !DILexicalBlock(scope: !10606, file: !1140, line: 121, column: 5)
!10617 = !DILocation(line: 122, column: 19, scope: !10616)
!10618 = !DILocation(line: 122, column: 33, scope: !10616)
!10619 = !DILocation(line: 123, column: 11, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10616, file: !1140, line: 123, column: 11)
!10621 = !DILocation(line: 123, column: 11, scope: !10616)
!10622 = !DILocation(line: 124, column: 19, scope: !10620)
!10623 = !DILocation(line: 124, column: 52, scope: !10620)
!10624 = !DILocation(line: 124, column: 36, scope: !10620)
!10625 = !DILocation(line: 125, column: 16, scope: !10620)
!10626 = !DILocation(line: 124, column: 9, scope: !10620)
!10627 = !DILocation(line: 127, column: 19, scope: !10620)
!10628 = !DILocation(line: 127, column: 32, scope: !10620)
!10629 = !DILocation(line: 127, column: 9, scope: !10620)
!10630 = !DILocation(line: 129, column: 14, scope: !10616)
!10631 = !DILocation(line: 129, column: 7, scope: !10616)
!10632 = !DILocation(line: 134, column: 42, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10604, file: !1140, line: 134, column: 7)
!10634 = !DILocation(line: 134, column: 28, scope: !10633)
!10635 = !DILocation(line: 134, column: 50, scope: !10633)
!10636 = !DILocation(line: 134, column: 7, scope: !10604)
!10637 = !DILocation(line: 135, column: 12, scope: !10633)
!10638 = !DILocation(line: 135, column: 5, scope: !10633)
!10639 = !DILocation(line: 136, column: 1, scope: !10604)
!10640 = distinct !DISubprogram(name: "dir_len", scope: !10641, file: !10641, line: 32, type: !1707, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1704, retainedNodes: !152)
!10641 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10642 = !DILocalVariable(name: "file", arg: 1, scope: !10640, file: !10641, line: 32, type: !146)
!10643 = !DILocation(line: 32, column: 22, scope: !10640)
!10644 = !DILocalVariable(name: "prefix_length", scope: !10640, file: !10641, line: 34, type: !149)
!10645 = !DILocation(line: 34, column: 10, scope: !10640)
!10646 = !DILocalVariable(name: "length", scope: !10640, file: !10641, line: 35, type: !149)
!10647 = !DILocation(line: 35, column: 10, scope: !10640)
!10648 = !DILocation(line: 38, column: 21, scope: !10640)
!10649 = !DILocation(line: 38, column: 35, scope: !10640)
!10650 = !DILocation(line: 41, column: 24, scope: !10640)
!10651 = !DILocation(line: 38, column: 20, scope: !10640)
!10652 = !DILocation(line: 38, column: 17, scope: !10640)
!10653 = !DILocation(line: 48, column: 33, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10640, file: !10641, line: 48, column: 3)
!10655 = !DILocation(line: 48, column: 17, scope: !10654)
!10656 = !DILocation(line: 48, column: 41, scope: !10654)
!10657 = !DILocation(line: 48, column: 39, scope: !10654)
!10658 = !DILocation(line: 48, column: 15, scope: !10654)
!10659 = !DILocation(line: 48, column: 8, scope: !10654)
!10660 = !DILocation(line: 49, column: 8, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10654, file: !10641, line: 48, column: 3)
!10662 = !DILocation(line: 49, column: 24, scope: !10661)
!10663 = !DILocation(line: 49, column: 22, scope: !10661)
!10664 = !DILocation(line: 48, column: 3, scope: !10654)
!10665 = !DILocation(line: 50, column: 11, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10661, file: !10641, line: 50, column: 9)
!10667 = !DILocation(line: 50, column: 9, scope: !10661)
!10668 = !DILocation(line: 51, column: 7, scope: !10666)
!10669 = !DILocation(line: 49, column: 38, scope: !10661)
!10670 = !DILocation(line: 48, column: 3, scope: !10661)
!10671 = distinct !{!10671, !10664, !10672}
!10672 = !DILocation(line: 51, column: 7, scope: !10654)
!10673 = !DILocation(line: 52, column: 10, scope: !10640)
!10674 = !DILocation(line: 52, column: 3, scope: !10640)
!10675 = distinct !DISubprogram(name: "mdir_name", scope: !10641, file: !10641, line: 71, type: !572, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1704, retainedNodes: !152)
!10676 = !DILocalVariable(name: "file", arg: 1, scope: !10675, file: !10641, line: 71, type: !146)
!10677 = !DILocation(line: 71, column: 24, scope: !10675)
!10678 = !DILocalVariable(name: "length", scope: !10675, file: !10641, line: 73, type: !149)
!10679 = !DILocation(line: 73, column: 10, scope: !10675)
!10680 = !DILocation(line: 73, column: 28, scope: !10675)
!10681 = !DILocation(line: 73, column: 19, scope: !10675)
!10682 = !DILocalVariable(name: "append_dot", scope: !10675, file: !10641, line: 74, type: !141)
!10683 = !DILocation(line: 74, column: 8, scope: !10675)
!10684 = !DILocation(line: 74, column: 22, scope: !10675)
!10685 = !DILocation(line: 74, column: 29, scope: !10675)
!10686 = !DILocation(line: 75, column: 22, scope: !10675)
!10687 = !DILocalVariable(name: "dir", scope: !10675, file: !10641, line: 78, type: !143)
!10688 = !DILocation(line: 78, column: 9, scope: !10675)
!10689 = !DILocation(line: 78, column: 23, scope: !10675)
!10690 = !DILocation(line: 78, column: 32, scope: !10675)
!10691 = !DILocation(line: 78, column: 30, scope: !10675)
!10692 = !DILocation(line: 78, column: 43, scope: !10675)
!10693 = !DILocation(line: 78, column: 15, scope: !10675)
!10694 = !DILocation(line: 79, column: 8, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10675, file: !10641, line: 79, column: 7)
!10696 = !DILocation(line: 79, column: 7, scope: !10675)
!10697 = !DILocation(line: 80, column: 5, scope: !10695)
!10698 = !DILocation(line: 81, column: 11, scope: !10675)
!10699 = !DILocation(line: 81, column: 16, scope: !10675)
!10700 = !DILocation(line: 81, column: 22, scope: !10675)
!10701 = !DILocation(line: 81, column: 3, scope: !10675)
!10702 = !DILocation(line: 82, column: 7, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10675, file: !10641, line: 82, column: 7)
!10704 = !DILocation(line: 82, column: 7, scope: !10675)
!10705 = !DILocation(line: 83, column: 5, scope: !10703)
!10706 = !DILocation(line: 83, column: 15, scope: !10703)
!10707 = !DILocation(line: 83, column: 19, scope: !10703)
!10708 = !DILocation(line: 84, column: 3, scope: !10675)
!10709 = !DILocation(line: 84, column: 7, scope: !10675)
!10710 = !DILocation(line: 84, column: 15, scope: !10675)
!10711 = !DILocation(line: 85, column: 10, scope: !10675)
!10712 = !DILocation(line: 85, column: 3, scope: !10675)
!10713 = !DILocation(line: 86, column: 1, scope: !10675)
!10714 = distinct !DISubprogram(name: "last_component", scope: !10715, file: !10715, line: 30, type: !572, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10715 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10716 = !DILocalVariable(name: "name", arg: 1, scope: !10714, file: !10715, line: 30, type: !146)
!10717 = !DILocation(line: 30, column: 29, scope: !10714)
!10718 = !DILocalVariable(name: "base", scope: !10714, file: !10715, line: 32, type: !146)
!10719 = !DILocation(line: 32, column: 15, scope: !10714)
!10720 = !DILocation(line: 32, column: 22, scope: !10714)
!10721 = !DILocation(line: 32, column: 27, scope: !10714)
!10722 = !DILocalVariable(name: "p", scope: !10714, file: !10715, line: 33, type: !146)
!10723 = !DILocation(line: 33, column: 15, scope: !10714)
!10724 = !DILocalVariable(name: "saw_slash", scope: !10714, file: !10715, line: 34, type: !141)
!10725 = !DILocation(line: 34, column: 8, scope: !10714)
!10726 = !DILocation(line: 36, column: 3, scope: !10714)
!10727 = !DILocation(line: 36, column: 10, scope: !10714)
!10728 = !DILocation(line: 37, column: 9, scope: !10714)
!10729 = distinct !{!10729, !10726, !10728}
!10730 = !DILocation(line: 39, column: 12, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10714, file: !10715, line: 39, column: 3)
!10732 = !DILocation(line: 39, column: 10, scope: !10731)
!10733 = !DILocation(line: 39, column: 8, scope: !10731)
!10734 = !DILocation(line: 39, column: 19, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10731, file: !10715, line: 39, column: 3)
!10736 = !DILocation(line: 39, column: 18, scope: !10735)
!10737 = !DILocation(line: 39, column: 3, scope: !10731)
!10738 = !DILocation(line: 41, column: 11, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !10715, line: 41, column: 11)
!10740 = distinct !DILexicalBlock(scope: !10735, file: !10715, line: 40, column: 5)
!10741 = !DILocation(line: 41, column: 11, scope: !10740)
!10742 = !DILocation(line: 42, column: 19, scope: !10739)
!10743 = !DILocation(line: 42, column: 9, scope: !10739)
!10744 = !DILocation(line: 43, column: 16, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10739, file: !10715, line: 43, column: 16)
!10746 = !DILocation(line: 43, column: 16, scope: !10739)
!10747 = !DILocation(line: 45, column: 18, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10745, file: !10715, line: 44, column: 9)
!10749 = !DILocation(line: 45, column: 16, scope: !10748)
!10750 = !DILocation(line: 46, column: 21, scope: !10748)
!10751 = !DILocation(line: 47, column: 9, scope: !10748)
!10752 = !DILocation(line: 48, column: 5, scope: !10740)
!10753 = !DILocation(line: 39, column: 23, scope: !10735)
!10754 = !DILocation(line: 39, column: 3, scope: !10735)
!10755 = distinct !{!10755, !10737, !10756}
!10756 = !DILocation(line: 48, column: 5, scope: !10731)
!10757 = !DILocation(line: 50, column: 19, scope: !10714)
!10758 = !DILocation(line: 50, column: 3, scope: !10714)
!10759 = distinct !DISubprogram(name: "base_len", scope: !10715, file: !10715, line: 58, type: !1707, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !152)
!10760 = !DILocalVariable(name: "name", arg: 1, scope: !10759, file: !10715, line: 58, type: !146)
!10761 = !DILocation(line: 58, column: 23, scope: !10759)
!10762 = !DILocalVariable(name: "len", scope: !10759, file: !10715, line: 60, type: !149)
!10763 = !DILocation(line: 60, column: 10, scope: !10759)
!10764 = !DILocalVariable(name: "prefix_len", scope: !10759, file: !10715, line: 61, type: !149)
!10765 = !DILocation(line: 61, column: 10, scope: !10759)
!10766 = !DILocation(line: 63, column: 22, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10759, file: !10715, line: 63, column: 3)
!10768 = !DILocation(line: 63, column: 14, scope: !10767)
!10769 = !DILocation(line: 63, column: 12, scope: !10767)
!10770 = !DILocation(line: 63, column: 8, scope: !10767)
!10771 = !DILocation(line: 63, column: 34, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10767, file: !10715, line: 63, column: 3)
!10773 = !DILocation(line: 63, column: 32, scope: !10772)
!10774 = !DILocation(line: 63, column: 38, scope: !10772)
!10775 = !DILocation(line: 63, column: 41, scope: !10772)
!10776 = !DILocation(line: 0, scope: !10772)
!10777 = !DILocation(line: 63, column: 3, scope: !10767)
!10778 = !DILocation(line: 64, column: 5, scope: !10772)
!10779 = !DILocation(line: 63, column: 70, scope: !10772)
!10780 = !DILocation(line: 63, column: 3, scope: !10772)
!10781 = distinct !{!10781, !10777, !10782}
!10782 = !DILocation(line: 64, column: 5, scope: !10767)
!10783 = !DILocation(line: 74, column: 10, scope: !10759)
!10784 = !DILocation(line: 74, column: 3, scope: !10759)
!10785 = distinct !DISubprogram(name: "file_has_acl", scope: !10786, file: !10786, line: 45, type: !1715, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !152)
!10786 = !DIFile(filename: "lib/file-has-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10787 = !DILocalVariable(name: "name", arg: 1, scope: !10785, file: !10786, line: 45, type: !146)
!10788 = !DILocation(line: 45, column: 27, scope: !10785)
!10789 = !DILocalVariable(name: "sb", arg: 2, scope: !10785, file: !10786, line: 45, type: !1717)
!10790 = !DILocation(line: 45, column: 52, scope: !10785)
!10791 = !DILocation(line: 48, column: 9, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10785, file: !10786, line: 48, column: 7)
!10793 = !DILocation(line: 48, column: 7, scope: !10785)
!10794 = !DILocalVariable(name: "ret", scope: !10795, file: !10786, line: 53, type: !1650)
!10795 = distinct !DILexicalBlock(scope: !10792, file: !10786, line: 49, column: 5)
!10796 = !DILocation(line: 53, column: 15, scope: !10795)
!10797 = !DILocation(line: 55, column: 23, scope: !10795)
!10798 = !DILocation(line: 55, column: 13, scope: !10795)
!10799 = !DILocation(line: 55, column: 11, scope: !10795)
!10800 = !DILocation(line: 56, column: 11, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10795, file: !10786, line: 56, column: 11)
!10802 = !DILocation(line: 56, column: 15, scope: !10801)
!10803 = !DILocation(line: 56, column: 19, scope: !10801)
!10804 = !DILocation(line: 56, column: 22, scope: !10801)
!10805 = !DILocation(line: 56, column: 28, scope: !10801)
!10806 = !DILocation(line: 56, column: 11, scope: !10795)
!10807 = !DILocation(line: 57, column: 13, scope: !10801)
!10808 = !DILocation(line: 57, column: 9, scope: !10801)
!10809 = !DILocation(line: 58, column: 16, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10801, file: !10786, line: 58, column: 16)
!10811 = !DILocation(line: 58, column: 20, scope: !10810)
!10812 = !DILocation(line: 58, column: 16, scope: !10801)
!10813 = !DILocation(line: 59, column: 9, scope: !10810)
!10814 = !DILocation(line: 61, column: 11, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10795, file: !10786, line: 61, column: 11)
!10816 = !DILocation(line: 61, column: 15, scope: !10815)
!10817 = !DILocation(line: 61, column: 20, scope: !10815)
!10818 = !DILocation(line: 61, column: 23, scope: !10815)
!10819 = !DILocation(line: 61, column: 11, scope: !10795)
!10820 = !DILocation(line: 63, column: 27, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10815, file: !10786, line: 62, column: 9)
!10822 = !DILocation(line: 63, column: 17, scope: !10821)
!10823 = !DILocation(line: 63, column: 15, scope: !10821)
!10824 = !DILocation(line: 64, column: 15, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 64, column: 15)
!10826 = !DILocation(line: 64, column: 19, scope: !10825)
!10827 = !DILocation(line: 64, column: 23, scope: !10825)
!10828 = !DILocation(line: 64, column: 26, scope: !10825)
!10829 = !DILocation(line: 64, column: 32, scope: !10825)
!10830 = !DILocation(line: 64, column: 15, scope: !10821)
!10831 = !DILocation(line: 65, column: 17, scope: !10825)
!10832 = !DILocation(line: 65, column: 13, scope: !10825)
!10833 = !DILocation(line: 66, column: 20, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10825, file: !10786, line: 66, column: 20)
!10835 = !DILocation(line: 66, column: 24, scope: !10834)
!10836 = !DILocation(line: 66, column: 20, scope: !10825)
!10837 = !DILocation(line: 67, column: 13, scope: !10834)
!10838 = !DILocation(line: 68, column: 9, scope: !10821)
!10839 = !DILocation(line: 70, column: 11, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10795, file: !10786, line: 70, column: 11)
!10841 = !DILocation(line: 70, column: 15, scope: !10840)
!10842 = !DILocation(line: 70, column: 11, scope: !10795)
!10843 = !DILocation(line: 71, column: 35, scope: !10840)
!10844 = !DILocation(line: 71, column: 18, scope: !10840)
!10845 = !DILocation(line: 71, column: 16, scope: !10840)
!10846 = !DILocation(line: 71, column: 9, scope: !10840)
!10847 = !DILocation(line: 72, column: 14, scope: !10795)
!10848 = !DILocation(line: 72, column: 7, scope: !10795)
!10849 = !DILocation(line: 509, column: 3, scope: !10785)
!10850 = !DILocation(line: 510, column: 1, scope: !10785)
!10851 = distinct !DISubprogram(name: "record_file", scope: !10852, file: !10852, line: 29, type: !1743, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1740, retainedNodes: !152)
!10852 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10853 = !DILocalVariable(name: "ht", arg: 1, scope: !10851, file: !10852, line: 29, type: !244)
!10854 = !DILocation(line: 29, column: 26, scope: !10851)
!10855 = !DILocalVariable(name: "file", arg: 2, scope: !10851, file: !10852, line: 29, type: !146)
!10856 = !DILocation(line: 29, column: 42, scope: !10851)
!10857 = !DILocalVariable(name: "stats", arg: 3, scope: !10851, file: !10852, line: 29, type: !1745)
!10858 = !DILocation(line: 29, column: 67, scope: !10851)
!10859 = !DILocalVariable(name: "ent", scope: !10851, file: !10852, line: 31, type: !1768)
!10860 = !DILocation(line: 31, column: 20, scope: !10851)
!10861 = !DILocation(line: 33, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10851, file: !10852, line: 33, column: 7)
!10863 = !DILocation(line: 33, column: 10, scope: !10862)
!10864 = !DILocation(line: 33, column: 7, scope: !10851)
!10865 = !DILocation(line: 34, column: 5, scope: !10862)
!10866 = !DILocation(line: 36, column: 9, scope: !10851)
!10867 = !DILocation(line: 36, column: 7, scope: !10851)
!10868 = !DILocation(line: 37, column: 24, scope: !10851)
!10869 = !DILocation(line: 37, column: 15, scope: !10851)
!10870 = !DILocation(line: 37, column: 3, scope: !10851)
!10871 = !DILocation(line: 37, column: 8, scope: !10851)
!10872 = !DILocation(line: 37, column: 13, scope: !10851)
!10873 = !{!10874, !2443, i64 0}
!10874 = !{!"F_triple", !2443, i64 0, !2467, i64 8, !2467, i64 16}
!10875 = !DILocation(line: 38, column: 17, scope: !10851)
!10876 = !DILocation(line: 38, column: 24, scope: !10851)
!10877 = !DILocation(line: 38, column: 3, scope: !10851)
!10878 = !DILocation(line: 38, column: 8, scope: !10851)
!10879 = !DILocation(line: 38, column: 15, scope: !10851)
!10880 = !{!10874, !2467, i64 8}
!10881 = !DILocation(line: 39, column: 17, scope: !10851)
!10882 = !DILocation(line: 39, column: 24, scope: !10851)
!10883 = !DILocation(line: 39, column: 3, scope: !10851)
!10884 = !DILocation(line: 39, column: 8, scope: !10851)
!10885 = !DILocation(line: 39, column: 15, scope: !10851)
!10886 = !{!10874, !2467, i64 16}
!10887 = !DILocalVariable(name: "ent_from_table", scope: !10888, file: !10852, line: 42, type: !1768)
!10888 = distinct !DILexicalBlock(scope: !10851, file: !10852, line: 41, column: 3)
!10889 = !DILocation(line: 42, column: 22, scope: !10888)
!10890 = !DILocation(line: 42, column: 52, scope: !10888)
!10891 = !DILocation(line: 42, column: 56, scope: !10888)
!10892 = !DILocation(line: 42, column: 39, scope: !10888)
!10893 = !DILocation(line: 43, column: 9, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10888, file: !10852, line: 43, column: 9)
!10895 = !DILocation(line: 43, column: 24, scope: !10894)
!10896 = !DILocation(line: 43, column: 9, scope: !10888)
!10897 = !DILocation(line: 46, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !10852, line: 44, column: 7)
!10899 = !DILocation(line: 49, column: 9, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10888, file: !10852, line: 49, column: 9)
!10901 = !DILocation(line: 49, column: 27, scope: !10900)
!10902 = !DILocation(line: 49, column: 24, scope: !10900)
!10903 = !DILocation(line: 49, column: 9, scope: !10888)
!10904 = !DILocation(line: 53, column: 22, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10900, file: !10852, line: 50, column: 7)
!10906 = !DILocation(line: 53, column: 9, scope: !10905)
!10907 = !DILocation(line: 54, column: 7, scope: !10905)
!10908 = !DILocation(line: 56, column: 1, scope: !10851)
!10909 = distinct !DISubprogram(name: "seen_file", scope: !10852, file: !10852, line: 61, type: !1775, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1740, retainedNodes: !152)
!10910 = !DILocalVariable(name: "ht", arg: 1, scope: !10909, file: !10852, line: 61, type: !1777)
!10911 = !DILocation(line: 61, column: 30, scope: !10909)
!10912 = !DILocalVariable(name: "file", arg: 2, scope: !10909, file: !10852, line: 61, type: !146)
!10913 = !DILocation(line: 61, column: 46, scope: !10909)
!10914 = !DILocalVariable(name: "stats", arg: 3, scope: !10909, file: !10852, line: 62, type: !1745)
!10915 = !DILocation(line: 62, column: 31, scope: !10909)
!10916 = !DILocalVariable(name: "new_ent", scope: !10909, file: !10852, line: 64, type: !1769)
!10917 = !DILocation(line: 64, column: 19, scope: !10909)
!10918 = !DILocation(line: 66, column: 7, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10909, file: !10852, line: 66, column: 7)
!10920 = !DILocation(line: 66, column: 10, scope: !10919)
!10921 = !DILocation(line: 66, column: 7, scope: !10909)
!10922 = !DILocation(line: 67, column: 5, scope: !10919)
!10923 = !DILocation(line: 69, column: 27, scope: !10909)
!10924 = !DILocation(line: 69, column: 11, scope: !10909)
!10925 = !DILocation(line: 69, column: 16, scope: !10909)
!10926 = !DILocation(line: 70, column: 20, scope: !10909)
!10927 = !DILocation(line: 70, column: 27, scope: !10909)
!10928 = !DILocation(line: 70, column: 11, scope: !10909)
!10929 = !DILocation(line: 70, column: 18, scope: !10909)
!10930 = !DILocation(line: 71, column: 20, scope: !10909)
!10931 = !DILocation(line: 71, column: 27, scope: !10909)
!10932 = !DILocation(line: 71, column: 11, scope: !10909)
!10933 = !DILocation(line: 71, column: 18, scope: !10909)
!10934 = !DILocation(line: 73, column: 25, scope: !10909)
!10935 = !DILocation(line: 73, column: 29, scope: !10909)
!10936 = !DILocation(line: 73, column: 12, scope: !10909)
!10937 = !DILocation(line: 73, column: 11, scope: !10909)
!10938 = !DILocation(line: 73, column: 10, scope: !10909)
!10939 = !DILocation(line: 73, column: 3, scope: !10909)
!10940 = !DILocation(line: 74, column: 1, scope: !10909)
!10941 = distinct !DISubprogram(name: "strmode", scope: !10942, file: !10942, line: 96, type: !1782, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!10942 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10943 = !DILocalVariable(name: "mode", arg: 1, scope: !10941, file: !10942, line: 96, type: !228)
!10944 = !DILocation(line: 96, column: 17, scope: !10941)
!10945 = !DILocalVariable(name: "str", arg: 2, scope: !10941, file: !10942, line: 96, type: !143)
!10946 = !DILocation(line: 96, column: 29, scope: !10941)
!10947 = !DILocation(line: 98, column: 22, scope: !10941)
!10948 = !DILocation(line: 98, column: 12, scope: !10941)
!10949 = !DILocation(line: 98, column: 3, scope: !10941)
!10950 = !DILocation(line: 98, column: 10, scope: !10941)
!10951 = !DILocation(line: 99, column: 12, scope: !10941)
!10952 = !DILocation(line: 99, column: 17, scope: !10941)
!10953 = !DILocation(line: 99, column: 3, scope: !10941)
!10954 = !DILocation(line: 99, column: 10, scope: !10941)
!10955 = !DILocation(line: 100, column: 12, scope: !10941)
!10956 = !DILocation(line: 100, column: 17, scope: !10941)
!10957 = !DILocation(line: 100, column: 3, scope: !10941)
!10958 = !DILocation(line: 100, column: 10, scope: !10941)
!10959 = !DILocation(line: 101, column: 13, scope: !10941)
!10960 = !DILocation(line: 101, column: 18, scope: !10941)
!10961 = !DILocation(line: 102, column: 16, scope: !10941)
!10962 = !DILocation(line: 102, column: 21, scope: !10941)
!10963 = !DILocation(line: 103, column: 16, scope: !10941)
!10964 = !DILocation(line: 103, column: 21, scope: !10941)
!10965 = !DILocation(line: 101, column: 12, scope: !10941)
!10966 = !DILocation(line: 101, column: 3, scope: !10941)
!10967 = !DILocation(line: 101, column: 10, scope: !10941)
!10968 = !DILocation(line: 104, column: 12, scope: !10941)
!10969 = !DILocation(line: 104, column: 17, scope: !10941)
!10970 = !DILocation(line: 104, column: 3, scope: !10941)
!10971 = !DILocation(line: 104, column: 10, scope: !10941)
!10972 = !DILocation(line: 105, column: 12, scope: !10941)
!10973 = !DILocation(line: 105, column: 17, scope: !10941)
!10974 = !DILocation(line: 105, column: 3, scope: !10941)
!10975 = !DILocation(line: 105, column: 10, scope: !10941)
!10976 = !DILocation(line: 106, column: 13, scope: !10941)
!10977 = !DILocation(line: 106, column: 18, scope: !10941)
!10978 = !DILocation(line: 107, column: 16, scope: !10941)
!10979 = !DILocation(line: 107, column: 21, scope: !10941)
!10980 = !DILocation(line: 108, column: 16, scope: !10941)
!10981 = !DILocation(line: 108, column: 21, scope: !10941)
!10982 = !DILocation(line: 106, column: 12, scope: !10941)
!10983 = !DILocation(line: 106, column: 3, scope: !10941)
!10984 = !DILocation(line: 106, column: 10, scope: !10941)
!10985 = !DILocation(line: 109, column: 12, scope: !10941)
!10986 = !DILocation(line: 109, column: 17, scope: !10941)
!10987 = !DILocation(line: 109, column: 3, scope: !10941)
!10988 = !DILocation(line: 109, column: 10, scope: !10941)
!10989 = !DILocation(line: 110, column: 12, scope: !10941)
!10990 = !DILocation(line: 110, column: 17, scope: !10941)
!10991 = !DILocation(line: 110, column: 3, scope: !10941)
!10992 = !DILocation(line: 110, column: 10, scope: !10941)
!10993 = !DILocation(line: 111, column: 13, scope: !10941)
!10994 = !DILocation(line: 111, column: 18, scope: !10941)
!10995 = !DILocation(line: 112, column: 16, scope: !10941)
!10996 = !DILocation(line: 112, column: 21, scope: !10941)
!10997 = !DILocation(line: 113, column: 16, scope: !10941)
!10998 = !DILocation(line: 113, column: 21, scope: !10941)
!10999 = !DILocation(line: 111, column: 12, scope: !10941)
!11000 = !DILocation(line: 111, column: 3, scope: !10941)
!11001 = !DILocation(line: 111, column: 10, scope: !10941)
!11002 = !DILocation(line: 114, column: 3, scope: !10941)
!11003 = !DILocation(line: 114, column: 11, scope: !10941)
!11004 = !DILocation(line: 115, column: 3, scope: !10941)
!11005 = !DILocation(line: 115, column: 11, scope: !10941)
!11006 = !DILocation(line: 116, column: 1, scope: !10941)
!11007 = distinct !DISubprogram(name: "ftypelet", scope: !10942, file: !10942, line: 54, type: !1809, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!11008 = !DILocalVariable(name: "bits", arg: 1, scope: !11007, file: !10942, line: 54, type: !228)
!11009 = !DILocation(line: 54, column: 18, scope: !11007)
!11010 = !DILocation(line: 57, column: 7, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 57, column: 7)
!11012 = !DILocation(line: 57, column: 7, scope: !11007)
!11013 = !DILocation(line: 58, column: 5, scope: !11011)
!11014 = !DILocation(line: 59, column: 7, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 59, column: 7)
!11016 = !DILocation(line: 59, column: 7, scope: !11007)
!11017 = !DILocation(line: 60, column: 5, scope: !11015)
!11018 = !DILocation(line: 63, column: 7, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 63, column: 7)
!11020 = !DILocation(line: 63, column: 7, scope: !11007)
!11021 = !DILocation(line: 64, column: 5, scope: !11019)
!11022 = !DILocation(line: 65, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 65, column: 7)
!11024 = !DILocation(line: 65, column: 7, scope: !11007)
!11025 = !DILocation(line: 66, column: 5, scope: !11023)
!11026 = !DILocation(line: 67, column: 7, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 67, column: 7)
!11028 = !DILocation(line: 67, column: 7, scope: !11007)
!11029 = !DILocation(line: 68, column: 5, scope: !11027)
!11030 = !DILocation(line: 69, column: 7, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 69, column: 7)
!11032 = !DILocation(line: 69, column: 7, scope: !11007)
!11033 = !DILocation(line: 70, column: 5, scope: !11031)
!11034 = !DILocation(line: 73, column: 7, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11007, file: !10942, line: 73, column: 7)
!11036 = !DILocation(line: 73, column: 7, scope: !11007)
!11037 = !DILocation(line: 74, column: 5, scope: !11035)
!11038 = !DILocation(line: 90, column: 3, scope: !11007)
!11039 = !DILocation(line: 91, column: 1, scope: !11007)
!11040 = distinct !DISubprogram(name: "filemodestring", scope: !10942, file: !10942, line: 166, type: !1784, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !152)
!11041 = !DILocalVariable(name: "statp", arg: 1, scope: !11040, file: !10942, line: 166, type: !1786)
!11042 = !DILocation(line: 166, column: 36, scope: !11040)
!11043 = !DILocalVariable(name: "str", arg: 2, scope: !11040, file: !10942, line: 166, type: !143)
!11044 = !DILocation(line: 166, column: 49, scope: !11040)
!11045 = !DILocation(line: 168, column: 12, scope: !11040)
!11046 = !DILocation(line: 168, column: 19, scope: !11040)
!11047 = !DILocation(line: 168, column: 28, scope: !11040)
!11048 = !DILocation(line: 168, column: 3, scope: !11040)
!11049 = !DILocation(line: 170, column: 7, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11040, file: !10942, line: 170, column: 7)
!11051 = !DILocation(line: 170, column: 7, scope: !11040)
!11052 = !DILocation(line: 171, column: 5, scope: !11050)
!11053 = !DILocation(line: 171, column: 12, scope: !11050)
!11054 = !DILocation(line: 174, column: 12, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !10942, line: 174, column: 12)
!11056 = distinct !DILexicalBlock(scope: !11050, file: !10942, line: 172, column: 12)
!11057 = !DILocation(line: 174, column: 12, scope: !11056)
!11058 = !DILocation(line: 175, column: 5, scope: !11055)
!11059 = !DILocation(line: 175, column: 12, scope: !11055)
!11060 = !DILocation(line: 176, column: 12, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11055, file: !10942, line: 176, column: 12)
!11062 = !DILocation(line: 176, column: 12, scope: !11055)
!11063 = !DILocation(line: 177, column: 5, scope: !11061)
!11064 = !DILocation(line: 177, column: 12, scope: !11061)
!11065 = !DILocation(line: 180, column: 1, scope: !11040)
!11066 = distinct !DISubprogram(name: "file_name_concat", scope: !11067, file: !11067, line: 35, type: !1814, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1811, retainedNodes: !152)
!11067 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11068 = !DILocalVariable(name: "dir", arg: 1, scope: !11066, file: !11067, line: 35, type: !146)
!11069 = !DILocation(line: 35, column: 31, scope: !11066)
!11070 = !DILocalVariable(name: "base", arg: 2, scope: !11066, file: !11067, line: 35, type: !146)
!11071 = !DILocation(line: 35, column: 48, scope: !11066)
!11072 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11066, file: !11067, line: 35, type: !142)
!11073 = !DILocation(line: 35, column: 61, scope: !11066)
!11074 = !DILocalVariable(name: "p", scope: !11066, file: !11067, line: 37, type: !143)
!11075 = !DILocation(line: 37, column: 9, scope: !11066)
!11076 = !DILocation(line: 37, column: 32, scope: !11066)
!11077 = !DILocation(line: 37, column: 37, scope: !11066)
!11078 = !DILocation(line: 37, column: 43, scope: !11066)
!11079 = !DILocation(line: 37, column: 13, scope: !11066)
!11080 = !DILocation(line: 38, column: 7, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11066, file: !11067, line: 38, column: 7)
!11082 = !DILocation(line: 38, column: 9, scope: !11081)
!11083 = !DILocation(line: 38, column: 7, scope: !11066)
!11084 = !DILocation(line: 39, column: 5, scope: !11081)
!11085 = !DILocation(line: 40, column: 10, scope: !11066)
!11086 = !DILocation(line: 40, column: 3, scope: !11066)
!11087 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11088, file: !11088, line: 47, type: !1814, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1816, retainedNodes: !152)
!11088 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11089 = !DILocalVariable(name: "dir", arg: 1, scope: !11087, file: !11088, line: 47, type: !146)
!11090 = !DILocation(line: 47, column: 32, scope: !11087)
!11091 = !DILocalVariable(name: "base", arg: 2, scope: !11087, file: !11088, line: 47, type: !146)
!11092 = !DILocation(line: 47, column: 49, scope: !11087)
!11093 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11087, file: !11088, line: 47, type: !142)
!11094 = !DILocation(line: 47, column: 62, scope: !11087)
!11095 = !DILocalVariable(name: "dirbase", scope: !11087, file: !11088, line: 49, type: !146)
!11096 = !DILocation(line: 49, column: 15, scope: !11087)
!11097 = !DILocation(line: 49, column: 41, scope: !11087)
!11098 = !DILocation(line: 49, column: 25, scope: !11087)
!11099 = !DILocalVariable(name: "dirbaselen", scope: !11087, file: !11088, line: 50, type: !149)
!11100 = !DILocation(line: 50, column: 10, scope: !11087)
!11101 = !DILocation(line: 50, column: 33, scope: !11087)
!11102 = !DILocation(line: 50, column: 23, scope: !11087)
!11103 = !DILocalVariable(name: "dirlen", scope: !11087, file: !11088, line: 51, type: !149)
!11104 = !DILocation(line: 51, column: 10, scope: !11087)
!11105 = !DILocation(line: 51, column: 19, scope: !11087)
!11106 = !DILocation(line: 51, column: 29, scope: !11087)
!11107 = !DILocation(line: 51, column: 27, scope: !11087)
!11108 = !DILocation(line: 51, column: 35, scope: !11087)
!11109 = !DILocation(line: 51, column: 33, scope: !11087)
!11110 = !DILocalVariable(name: "baselen", scope: !11087, file: !11088, line: 52, type: !149)
!11111 = !DILocation(line: 52, column: 10, scope: !11087)
!11112 = !DILocation(line: 52, column: 28, scope: !11087)
!11113 = !DILocation(line: 52, column: 20, scope: !11087)
!11114 = !DILocalVariable(name: "sep", scope: !11087, file: !11088, line: 53, type: !144)
!11115 = !DILocation(line: 53, column: 8, scope: !11087)
!11116 = !DILocation(line: 54, column: 7, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11087, file: !11088, line: 54, column: 7)
!11118 = !DILocation(line: 54, column: 7, scope: !11087)
!11119 = !DILocation(line: 57, column: 13, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !11088, line: 57, column: 11)
!11121 = distinct !DILexicalBlock(scope: !11117, file: !11088, line: 55, column: 5)
!11122 = !DILocation(line: 57, column: 39, scope: !11120)
!11123 = !DILocation(line: 57, column: 44, scope: !11120)
!11124 = !DILocation(line: 57, column: 11, scope: !11121)
!11125 = !DILocation(line: 58, column: 13, scope: !11120)
!11126 = !DILocation(line: 58, column: 9, scope: !11120)
!11127 = !DILocation(line: 59, column: 5, scope: !11121)
!11128 = !DILocation(line: 60, column: 12, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11117, file: !11088, line: 60, column: 12)
!11130 = !DILocation(line: 60, column: 12, scope: !11117)
!11131 = !DILocation(line: 67, column: 11, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11129, file: !11088, line: 61, column: 5)
!11133 = !DILocation(line: 68, column: 5, scope: !11132)
!11134 = !DILocalVariable(name: "p_concat", scope: !11087, file: !11088, line: 70, type: !143)
!11135 = !DILocation(line: 70, column: 9, scope: !11087)
!11136 = !DILocation(line: 70, column: 28, scope: !11087)
!11137 = !DILocation(line: 70, column: 38, scope: !11087)
!11138 = !DILocation(line: 70, column: 42, scope: !11087)
!11139 = !DILocation(line: 70, column: 37, scope: !11087)
!11140 = !DILocation(line: 70, column: 35, scope: !11087)
!11141 = !DILocation(line: 70, column: 54, scope: !11087)
!11142 = !DILocation(line: 70, column: 52, scope: !11087)
!11143 = !DILocation(line: 70, column: 62, scope: !11087)
!11144 = !DILocation(line: 70, column: 20, scope: !11087)
!11145 = !DILocalVariable(name: "p", scope: !11087, file: !11088, line: 71, type: !143)
!11146 = !DILocation(line: 71, column: 9, scope: !11087)
!11147 = !DILocation(line: 73, column: 7, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11087, file: !11088, line: 73, column: 7)
!11149 = !DILocation(line: 73, column: 16, scope: !11148)
!11150 = !DILocation(line: 73, column: 7, scope: !11087)
!11151 = !DILocation(line: 74, column: 5, scope: !11148)
!11152 = !DILocation(line: 76, column: 16, scope: !11087)
!11153 = !DILocation(line: 76, column: 26, scope: !11087)
!11154 = !DILocation(line: 76, column: 31, scope: !11087)
!11155 = !DILocation(line: 76, column: 7, scope: !11087)
!11156 = !DILocation(line: 76, column: 5, scope: !11087)
!11157 = !DILocation(line: 77, column: 8, scope: !11087)
!11158 = !DILocation(line: 77, column: 4, scope: !11087)
!11159 = !DILocation(line: 77, column: 6, scope: !11087)
!11160 = !DILocation(line: 78, column: 8, scope: !11087)
!11161 = !DILocation(line: 78, column: 12, scope: !11087)
!11162 = !DILocation(line: 78, column: 5, scope: !11087)
!11163 = !DILocation(line: 80, column: 7, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11087, file: !11088, line: 80, column: 7)
!11165 = !DILocation(line: 80, column: 7, scope: !11087)
!11166 = !DILocation(line: 81, column: 23, scope: !11164)
!11167 = !DILocation(line: 81, column: 6, scope: !11164)
!11168 = !DILocation(line: 81, column: 21, scope: !11164)
!11169 = !DILocation(line: 81, column: 5, scope: !11164)
!11170 = !DILocation(line: 83, column: 16, scope: !11087)
!11171 = !DILocation(line: 83, column: 19, scope: !11087)
!11172 = !DILocation(line: 83, column: 25, scope: !11087)
!11173 = !DILocation(line: 83, column: 7, scope: !11087)
!11174 = !DILocation(line: 83, column: 5, scope: !11087)
!11175 = !DILocation(line: 84, column: 4, scope: !11087)
!11176 = !DILocation(line: 84, column: 6, scope: !11087)
!11177 = !DILocation(line: 86, column: 10, scope: !11087)
!11178 = !DILocation(line: 86, column: 3, scope: !11087)
!11179 = !DILocation(line: 87, column: 1, scope: !11087)
!11180 = distinct !DISubprogram(name: "filevercmp", scope: !11181, file: !11181, line: 125, type: !731, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11181 = !DIFile(filename: "lib/filevercmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11182 = !DILocalVariable(name: "s1", arg: 1, scope: !11180, file: !11181, line: 125, type: !146)
!11183 = !DILocation(line: 125, column: 25, scope: !11180)
!11184 = !DILocalVariable(name: "s2", arg: 2, scope: !11180, file: !11181, line: 125, type: !146)
!11185 = !DILocation(line: 125, column: 41, scope: !11180)
!11186 = !DILocalVariable(name: "s1_pos", scope: !11180, file: !11181, line: 127, type: !146)
!11187 = !DILocation(line: 127, column: 15, scope: !11180)
!11188 = !DILocalVariable(name: "s2_pos", scope: !11180, file: !11181, line: 128, type: !146)
!11189 = !DILocation(line: 128, column: 15, scope: !11180)
!11190 = !DILocalVariable(name: "s1_suffix", scope: !11180, file: !11181, line: 129, type: !146)
!11191 = !DILocation(line: 129, column: 15, scope: !11180)
!11192 = !DILocalVariable(name: "s2_suffix", scope: !11180, file: !11181, line: 129, type: !146)
!11193 = !DILocation(line: 129, column: 27, scope: !11180)
!11194 = !DILocalVariable(name: "s1_len", scope: !11180, file: !11181, line: 130, type: !149)
!11195 = !DILocation(line: 130, column: 10, scope: !11180)
!11196 = !DILocalVariable(name: "s2_len", scope: !11180, file: !11181, line: 130, type: !149)
!11197 = !DILocation(line: 130, column: 18, scope: !11180)
!11198 = !DILocalVariable(name: "result", scope: !11180, file: !11181, line: 131, type: !27)
!11199 = !DILocation(line: 131, column: 7, scope: !11180)
!11200 = !DILocalVariable(name: "simple_cmp", scope: !11180, file: !11181, line: 134, type: !27)
!11201 = !DILocation(line: 134, column: 7, scope: !11180)
!11202 = !DILocation(line: 134, column: 28, scope: !11180)
!11203 = !DILocation(line: 134, column: 32, scope: !11180)
!11204 = !DILocation(line: 134, column: 20, scope: !11180)
!11205 = !DILocation(line: 135, column: 7, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 135, column: 7)
!11207 = !DILocation(line: 135, column: 18, scope: !11206)
!11208 = !DILocation(line: 135, column: 7, scope: !11180)
!11209 = !DILocation(line: 136, column: 5, scope: !11206)
!11210 = !DILocation(line: 139, column: 9, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 139, column: 7)
!11212 = !DILocation(line: 139, column: 8, scope: !11211)
!11213 = !DILocation(line: 139, column: 7, scope: !11180)
!11214 = !DILocation(line: 140, column: 5, scope: !11211)
!11215 = !DILocation(line: 141, column: 9, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 141, column: 7)
!11217 = !DILocation(line: 141, column: 8, scope: !11216)
!11218 = !DILocation(line: 141, column: 7, scope: !11180)
!11219 = !DILocation(line: 142, column: 5, scope: !11216)
!11220 = !DILocation(line: 143, column: 25, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 143, column: 7)
!11222 = !DILocation(line: 143, column: 12, scope: !11221)
!11223 = !DILocation(line: 143, column: 9, scope: !11221)
!11224 = !DILocation(line: 143, column: 7, scope: !11180)
!11225 = !DILocation(line: 144, column: 5, scope: !11221)
!11226 = !DILocation(line: 145, column: 25, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 145, column: 7)
!11228 = !DILocation(line: 145, column: 12, scope: !11227)
!11229 = !DILocation(line: 145, column: 9, scope: !11227)
!11230 = !DILocation(line: 145, column: 7, scope: !11180)
!11231 = !DILocation(line: 146, column: 5, scope: !11227)
!11232 = !DILocation(line: 147, column: 26, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 147, column: 7)
!11234 = !DILocation(line: 147, column: 12, scope: !11233)
!11235 = !DILocation(line: 147, column: 9, scope: !11233)
!11236 = !DILocation(line: 147, column: 7, scope: !11180)
!11237 = !DILocation(line: 148, column: 5, scope: !11233)
!11238 = !DILocation(line: 149, column: 26, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 149, column: 7)
!11240 = !DILocation(line: 149, column: 12, scope: !11239)
!11241 = !DILocation(line: 149, column: 9, scope: !11239)
!11242 = !DILocation(line: 149, column: 7, scope: !11180)
!11243 = !DILocation(line: 150, column: 5, scope: !11239)
!11244 = !DILocation(line: 153, column: 8, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 153, column: 7)
!11246 = !DILocation(line: 153, column: 7, scope: !11245)
!11247 = !DILocation(line: 153, column: 11, scope: !11245)
!11248 = !DILocation(line: 153, column: 18, scope: !11245)
!11249 = !DILocation(line: 153, column: 22, scope: !11245)
!11250 = !DILocation(line: 153, column: 21, scope: !11245)
!11251 = !DILocation(line: 153, column: 25, scope: !11245)
!11252 = !DILocation(line: 153, column: 7, scope: !11180)
!11253 = !DILocation(line: 154, column: 5, scope: !11245)
!11254 = !DILocation(line: 155, column: 8, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 155, column: 7)
!11256 = !DILocation(line: 155, column: 7, scope: !11255)
!11257 = !DILocation(line: 155, column: 11, scope: !11255)
!11258 = !DILocation(line: 155, column: 18, scope: !11255)
!11259 = !DILocation(line: 155, column: 22, scope: !11255)
!11260 = !DILocation(line: 155, column: 21, scope: !11255)
!11261 = !DILocation(line: 155, column: 25, scope: !11255)
!11262 = !DILocation(line: 155, column: 7, scope: !11180)
!11263 = !DILocation(line: 156, column: 5, scope: !11255)
!11264 = !DILocation(line: 157, column: 8, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 157, column: 7)
!11266 = !DILocation(line: 157, column: 7, scope: !11265)
!11267 = !DILocation(line: 157, column: 11, scope: !11265)
!11268 = !DILocation(line: 157, column: 18, scope: !11265)
!11269 = !DILocation(line: 157, column: 22, scope: !11265)
!11270 = !DILocation(line: 157, column: 21, scope: !11265)
!11271 = !DILocation(line: 157, column: 25, scope: !11265)
!11272 = !DILocation(line: 157, column: 7, scope: !11180)
!11273 = !DILocation(line: 159, column: 9, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11265, file: !11181, line: 158, column: 5)
!11275 = !DILocation(line: 160, column: 9, scope: !11274)
!11276 = !DILocation(line: 161, column: 5, scope: !11274)
!11277 = !DILocation(line: 164, column: 12, scope: !11180)
!11278 = !DILocation(line: 164, column: 10, scope: !11180)
!11279 = !DILocation(line: 165, column: 12, scope: !11180)
!11280 = !DILocation(line: 165, column: 10, scope: !11180)
!11281 = !DILocation(line: 166, column: 15, scope: !11180)
!11282 = !DILocation(line: 166, column: 13, scope: !11180)
!11283 = !DILocation(line: 167, column: 15, scope: !11180)
!11284 = !DILocation(line: 167, column: 13, scope: !11180)
!11285 = !DILocation(line: 168, column: 13, scope: !11180)
!11286 = !DILocation(line: 168, column: 25, scope: !11180)
!11287 = !DILocation(line: 168, column: 37, scope: !11180)
!11288 = !DILocation(line: 168, column: 47, scope: !11180)
!11289 = !DILocation(line: 168, column: 45, scope: !11180)
!11290 = !DILocation(line: 168, column: 10, scope: !11180)
!11291 = !DILocation(line: 169, column: 13, scope: !11180)
!11292 = !DILocation(line: 169, column: 25, scope: !11180)
!11293 = !DILocation(line: 169, column: 37, scope: !11180)
!11294 = !DILocation(line: 169, column: 47, scope: !11180)
!11295 = !DILocation(line: 169, column: 45, scope: !11180)
!11296 = !DILocation(line: 169, column: 10, scope: !11180)
!11297 = !DILocation(line: 172, column: 8, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11180, file: !11181, line: 172, column: 7)
!11299 = !DILocation(line: 172, column: 18, scope: !11298)
!11300 = !DILocation(line: 172, column: 21, scope: !11298)
!11301 = !DILocation(line: 172, column: 32, scope: !11298)
!11302 = !DILocation(line: 172, column: 36, scope: !11298)
!11303 = !DILocation(line: 172, column: 46, scope: !11298)
!11304 = !DILocation(line: 172, column: 43, scope: !11298)
!11305 = !DILocation(line: 173, column: 7, scope: !11298)
!11306 = !DILocation(line: 173, column: 24, scope: !11298)
!11307 = !DILocation(line: 173, column: 28, scope: !11298)
!11308 = !DILocation(line: 173, column: 32, scope: !11298)
!11309 = !DILocation(line: 173, column: 15, scope: !11298)
!11310 = !DILocation(line: 173, column: 12, scope: !11298)
!11311 = !DILocation(line: 172, column: 7, scope: !11180)
!11312 = !DILocation(line: 175, column: 16, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11298, file: !11181, line: 174, column: 5)
!11314 = !DILocation(line: 175, column: 25, scope: !11313)
!11315 = !DILocation(line: 175, column: 23, scope: !11313)
!11316 = !DILocation(line: 175, column: 14, scope: !11313)
!11317 = !DILocation(line: 176, column: 16, scope: !11313)
!11318 = !DILocation(line: 176, column: 25, scope: !11313)
!11319 = !DILocation(line: 176, column: 23, scope: !11313)
!11320 = !DILocation(line: 176, column: 14, scope: !11313)
!11321 = !DILocation(line: 177, column: 5, scope: !11313)
!11322 = !DILocation(line: 179, column: 23, scope: !11180)
!11323 = !DILocation(line: 179, column: 27, scope: !11180)
!11324 = !DILocation(line: 179, column: 35, scope: !11180)
!11325 = !DILocation(line: 179, column: 39, scope: !11180)
!11326 = !DILocation(line: 179, column: 12, scope: !11180)
!11327 = !DILocation(line: 179, column: 10, scope: !11180)
!11328 = !DILocation(line: 180, column: 10, scope: !11180)
!11329 = !DILocation(line: 180, column: 17, scope: !11180)
!11330 = !DILocation(line: 180, column: 24, scope: !11180)
!11331 = !DILocation(line: 180, column: 37, scope: !11180)
!11332 = !DILocation(line: 180, column: 3, scope: !11180)
!11333 = !DILocation(line: 181, column: 1, scope: !11180)
!11334 = distinct !DISubprogram(name: "match_suffix", scope: !11181, file: !11181, line: 34, type: !1822, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11335 = !DILocalVariable(name: "str", arg: 1, scope: !11334, file: !11181, line: 34, type: !145)
!11336 = !DILocation(line: 34, column: 28, scope: !11334)
!11337 = !DILocalVariable(name: "match", scope: !11334, file: !11181, line: 36, type: !146)
!11338 = !DILocation(line: 36, column: 15, scope: !11334)
!11339 = !DILocalVariable(name: "read_alpha", scope: !11334, file: !11181, line: 37, type: !141)
!11340 = !DILocation(line: 37, column: 8, scope: !11334)
!11341 = !DILocation(line: 38, column: 3, scope: !11334)
!11342 = !DILocation(line: 38, column: 12, scope: !11334)
!11343 = !DILocation(line: 38, column: 11, scope: !11334)
!11344 = !DILocation(line: 38, column: 10, scope: !11334)
!11345 = !DILocation(line: 40, column: 11, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !11181, line: 40, column: 11)
!11347 = distinct !DILexicalBlock(scope: !11334, file: !11181, line: 39, column: 5)
!11348 = !DILocation(line: 40, column: 11, scope: !11347)
!11349 = !DILocation(line: 42, column: 22, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11346, file: !11181, line: 41, column: 9)
!11351 = !DILocation(line: 43, column: 29, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11350, file: !11181, line: 43, column: 15)
!11353 = !DILocation(line: 43, column: 28, scope: !11352)
!11354 = !DILocation(line: 43, column: 27, scope: !11352)
!11355 = !DILocation(line: 43, column: 16, scope: !11352)
!11356 = !DILocation(line: 43, column: 34, scope: !11352)
!11357 = !DILocation(line: 43, column: 46, scope: !11352)
!11358 = !DILocation(line: 43, column: 45, scope: !11352)
!11359 = !DILocation(line: 43, column: 44, scope: !11352)
!11360 = !DILocation(line: 43, column: 41, scope: !11352)
!11361 = !DILocation(line: 43, column: 15, scope: !11350)
!11362 = !DILocation(line: 44, column: 19, scope: !11352)
!11363 = !DILocation(line: 44, column: 13, scope: !11352)
!11364 = !DILocation(line: 45, column: 9, scope: !11350)
!11365 = !DILocation(line: 46, column: 25, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11346, file: !11181, line: 46, column: 16)
!11367 = !DILocation(line: 46, column: 24, scope: !11366)
!11368 = !DILocation(line: 46, column: 23, scope: !11366)
!11369 = !DILocation(line: 46, column: 20, scope: !11366)
!11370 = !DILocation(line: 46, column: 16, scope: !11346)
!11371 = !DILocation(line: 48, column: 22, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11366, file: !11181, line: 47, column: 9)
!11373 = !DILocation(line: 49, column: 16, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11372, file: !11181, line: 49, column: 15)
!11375 = !DILocation(line: 49, column: 15, scope: !11372)
!11376 = !DILocation(line: 50, column: 22, scope: !11374)
!11377 = !DILocation(line: 50, column: 21, scope: !11374)
!11378 = !DILocation(line: 50, column: 19, scope: !11374)
!11379 = !DILocation(line: 50, column: 13, scope: !11374)
!11380 = !DILocation(line: 51, column: 9, scope: !11372)
!11381 = !DILocation(line: 52, column: 30, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11366, file: !11181, line: 52, column: 16)
!11383 = !DILocation(line: 52, column: 29, scope: !11382)
!11384 = !DILocation(line: 52, column: 28, scope: !11382)
!11385 = !DILocation(line: 52, column: 17, scope: !11382)
!11386 = !DILocation(line: 52, column: 35, scope: !11382)
!11387 = !DILocation(line: 52, column: 47, scope: !11382)
!11388 = !DILocation(line: 52, column: 46, scope: !11382)
!11389 = !DILocation(line: 52, column: 45, scope: !11382)
!11390 = !DILocation(line: 52, column: 42, scope: !11382)
!11391 = !DILocation(line: 52, column: 16, scope: !11366)
!11392 = !DILocation(line: 53, column: 15, scope: !11382)
!11393 = !DILocation(line: 53, column: 9, scope: !11382)
!11394 = !DILocation(line: 54, column: 9, scope: !11347)
!11395 = !DILocation(line: 54, column: 13, scope: !11347)
!11396 = distinct !{!11396, !11341, !11397}
!11397 = !DILocation(line: 55, column: 5, scope: !11334)
!11398 = !DILocation(line: 56, column: 10, scope: !11334)
!11399 = !DILocation(line: 56, column: 3, scope: !11334)
!11400 = distinct !DISubprogram(name: "verrevcmp", scope: !11181, file: !11181, line: 84, type: !1824, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11401 = !DILocalVariable(name: "s1", arg: 1, scope: !11400, file: !11181, line: 84, type: !146)
!11402 = !DILocation(line: 84, column: 24, scope: !11400)
!11403 = !DILocalVariable(name: "s1_len", arg: 2, scope: !11400, file: !11181, line: 84, type: !149)
!11404 = !DILocation(line: 84, column: 35, scope: !11400)
!11405 = !DILocalVariable(name: "s2", arg: 3, scope: !11400, file: !11181, line: 84, type: !146)
!11406 = !DILocation(line: 84, column: 55, scope: !11400)
!11407 = !DILocalVariable(name: "s2_len", arg: 4, scope: !11400, file: !11181, line: 84, type: !149)
!11408 = !DILocation(line: 84, column: 66, scope: !11400)
!11409 = !DILocalVariable(name: "s1_pos", scope: !11400, file: !11181, line: 86, type: !149)
!11410 = !DILocation(line: 86, column: 10, scope: !11400)
!11411 = !DILocalVariable(name: "s2_pos", scope: !11400, file: !11181, line: 87, type: !149)
!11412 = !DILocation(line: 87, column: 10, scope: !11400)
!11413 = !DILocation(line: 88, column: 3, scope: !11400)
!11414 = !DILocation(line: 88, column: 10, scope: !11400)
!11415 = !DILocation(line: 88, column: 19, scope: !11400)
!11416 = !DILocation(line: 88, column: 17, scope: !11400)
!11417 = !DILocation(line: 88, column: 26, scope: !11400)
!11418 = !DILocation(line: 88, column: 29, scope: !11400)
!11419 = !DILocation(line: 88, column: 38, scope: !11400)
!11420 = !DILocation(line: 88, column: 36, scope: !11400)
!11421 = !DILocalVariable(name: "first_diff", scope: !11422, file: !11181, line: 90, type: !27)
!11422 = distinct !DILexicalBlock(scope: !11400, file: !11181, line: 89, column: 5)
!11423 = !DILocation(line: 90, column: 11, scope: !11422)
!11424 = !DILocation(line: 91, column: 7, scope: !11422)
!11425 = !DILocation(line: 91, column: 15, scope: !11422)
!11426 = !DILocation(line: 91, column: 24, scope: !11422)
!11427 = !DILocation(line: 91, column: 22, scope: !11422)
!11428 = !DILocation(line: 91, column: 31, scope: !11422)
!11429 = !DILocation(line: 91, column: 46, scope: !11422)
!11430 = !DILocation(line: 91, column: 49, scope: !11422)
!11431 = !DILocation(line: 91, column: 35, scope: !11422)
!11432 = !DILocation(line: 92, column: 14, scope: !11422)
!11433 = !DILocation(line: 92, column: 18, scope: !11422)
!11434 = !DILocation(line: 92, column: 27, scope: !11422)
!11435 = !DILocation(line: 92, column: 25, scope: !11422)
!11436 = !DILocation(line: 92, column: 34, scope: !11422)
!11437 = !DILocation(line: 92, column: 49, scope: !11422)
!11438 = !DILocation(line: 92, column: 52, scope: !11422)
!11439 = !DILocation(line: 92, column: 38, scope: !11422)
!11440 = !DILocation(line: 92, column: 37, scope: !11422)
!11441 = !DILocation(line: 0, scope: !11422)
!11442 = !DILocalVariable(name: "s1_c", scope: !11443, file: !11181, line: 94, type: !27)
!11443 = distinct !DILexicalBlock(scope: !11422, file: !11181, line: 93, column: 9)
!11444 = !DILocation(line: 94, column: 15, scope: !11443)
!11445 = !DILocation(line: 94, column: 23, scope: !11443)
!11446 = !DILocation(line: 94, column: 33, scope: !11443)
!11447 = !DILocation(line: 94, column: 30, scope: !11443)
!11448 = !DILocation(line: 94, column: 22, scope: !11443)
!11449 = !DILocation(line: 94, column: 54, scope: !11443)
!11450 = !DILocation(line: 94, column: 57, scope: !11443)
!11451 = !DILocation(line: 94, column: 47, scope: !11443)
!11452 = !DILocalVariable(name: "s2_c", scope: !11443, file: !11181, line: 95, type: !27)
!11453 = !DILocation(line: 95, column: 15, scope: !11443)
!11454 = !DILocation(line: 95, column: 23, scope: !11443)
!11455 = !DILocation(line: 95, column: 33, scope: !11443)
!11456 = !DILocation(line: 95, column: 30, scope: !11443)
!11457 = !DILocation(line: 95, column: 22, scope: !11443)
!11458 = !DILocation(line: 95, column: 54, scope: !11443)
!11459 = !DILocation(line: 95, column: 57, scope: !11443)
!11460 = !DILocation(line: 95, column: 47, scope: !11443)
!11461 = !DILocation(line: 96, column: 15, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11443, file: !11181, line: 96, column: 15)
!11463 = !DILocation(line: 96, column: 23, scope: !11462)
!11464 = !DILocation(line: 96, column: 20, scope: !11462)
!11465 = !DILocation(line: 96, column: 15, scope: !11443)
!11466 = !DILocation(line: 97, column: 20, scope: !11462)
!11467 = !DILocation(line: 97, column: 27, scope: !11462)
!11468 = !DILocation(line: 97, column: 25, scope: !11462)
!11469 = !DILocation(line: 97, column: 13, scope: !11462)
!11470 = !DILocation(line: 98, column: 17, scope: !11443)
!11471 = !DILocation(line: 99, column: 17, scope: !11443)
!11472 = distinct !{!11472, !11424, !11473}
!11473 = !DILocation(line: 100, column: 9, scope: !11422)
!11474 = !DILocation(line: 101, column: 7, scope: !11422)
!11475 = !DILocation(line: 101, column: 14, scope: !11422)
!11476 = !DILocation(line: 101, column: 17, scope: !11422)
!11477 = !DILocation(line: 101, column: 25, scope: !11422)
!11478 = !DILocation(line: 102, column: 15, scope: !11422)
!11479 = distinct !{!11479, !11474, !11478}
!11480 = !DILocation(line: 103, column: 7, scope: !11422)
!11481 = !DILocation(line: 103, column: 14, scope: !11422)
!11482 = !DILocation(line: 103, column: 17, scope: !11422)
!11483 = !DILocation(line: 103, column: 25, scope: !11422)
!11484 = !DILocation(line: 104, column: 15, scope: !11422)
!11485 = distinct !{!11485, !11480, !11484}
!11486 = !DILocation(line: 105, column: 7, scope: !11422)
!11487 = !DILocation(line: 105, column: 25, scope: !11422)
!11488 = !DILocation(line: 105, column: 28, scope: !11422)
!11489 = !DILocation(line: 105, column: 14, scope: !11422)
!11490 = !DILocation(line: 105, column: 37, scope: !11422)
!11491 = !DILocation(line: 105, column: 51, scope: !11422)
!11492 = !DILocation(line: 105, column: 54, scope: !11422)
!11493 = !DILocation(line: 105, column: 40, scope: !11422)
!11494 = !DILocation(line: 107, column: 16, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !11181, line: 107, column: 15)
!11496 = distinct !DILexicalBlock(scope: !11422, file: !11181, line: 106, column: 9)
!11497 = !DILocation(line: 107, column: 15, scope: !11496)
!11498 = !DILocation(line: 108, column: 26, scope: !11495)
!11499 = !DILocation(line: 108, column: 29, scope: !11495)
!11500 = !DILocation(line: 108, column: 39, scope: !11495)
!11501 = !DILocation(line: 108, column: 42, scope: !11495)
!11502 = !DILocation(line: 108, column: 37, scope: !11495)
!11503 = !DILocation(line: 108, column: 24, scope: !11495)
!11504 = !DILocation(line: 108, column: 13, scope: !11495)
!11505 = !DILocation(line: 109, column: 17, scope: !11496)
!11506 = !DILocation(line: 110, column: 17, scope: !11496)
!11507 = distinct !{!11507, !11486, !11508}
!11508 = !DILocation(line: 111, column: 9, scope: !11422)
!11509 = !DILocation(line: 112, column: 22, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11422, file: !11181, line: 112, column: 11)
!11511 = !DILocation(line: 112, column: 25, scope: !11510)
!11512 = !DILocation(line: 112, column: 11, scope: !11510)
!11513 = !DILocation(line: 112, column: 11, scope: !11422)
!11514 = !DILocation(line: 113, column: 9, scope: !11510)
!11515 = !DILocation(line: 114, column: 22, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11422, file: !11181, line: 114, column: 11)
!11517 = !DILocation(line: 114, column: 25, scope: !11516)
!11518 = !DILocation(line: 114, column: 11, scope: !11516)
!11519 = !DILocation(line: 114, column: 11, scope: !11422)
!11520 = !DILocation(line: 115, column: 9, scope: !11516)
!11521 = !DILocation(line: 116, column: 11, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11422, file: !11181, line: 116, column: 11)
!11523 = !DILocation(line: 116, column: 11, scope: !11422)
!11524 = !DILocation(line: 117, column: 16, scope: !11522)
!11525 = !DILocation(line: 117, column: 9, scope: !11522)
!11526 = distinct !{!11526, !11413, !11527}
!11527 = !DILocation(line: 118, column: 5, scope: !11400)
!11528 = !DILocation(line: 119, column: 3, scope: !11400)
!11529 = !DILocation(line: 120, column: 1, scope: !11400)
!11530 = distinct !DISubprogram(name: "order", scope: !11181, file: !11181, line: 61, type: !1826, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1819, retainedNodes: !152)
!11531 = !DILocalVariable(name: "c", arg: 1, scope: !11530, file: !11181, line: 61, type: !591)
!11532 = !DILocation(line: 61, column: 22, scope: !11530)
!11533 = !DILocation(line: 63, column: 18, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11530, file: !11181, line: 63, column: 7)
!11535 = !DILocation(line: 63, column: 7, scope: !11534)
!11536 = !DILocation(line: 63, column: 7, scope: !11530)
!11537 = !DILocation(line: 64, column: 5, scope: !11534)
!11538 = !DILocation(line: 65, column: 23, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11534, file: !11181, line: 65, column: 12)
!11540 = !DILocation(line: 65, column: 12, scope: !11539)
!11541 = !DILocation(line: 65, column: 12, scope: !11534)
!11542 = !DILocation(line: 66, column: 12, scope: !11539)
!11543 = !DILocation(line: 66, column: 5, scope: !11539)
!11544 = !DILocation(line: 67, column: 12, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11539, file: !11181, line: 67, column: 12)
!11546 = !DILocation(line: 67, column: 14, scope: !11545)
!11547 = !DILocation(line: 67, column: 12, scope: !11539)
!11548 = !DILocation(line: 68, column: 5, scope: !11545)
!11549 = !DILocation(line: 70, column: 18, scope: !11545)
!11550 = !DILocation(line: 70, column: 12, scope: !11545)
!11551 = !DILocation(line: 70, column: 20, scope: !11545)
!11552 = !DILocation(line: 70, column: 32, scope: !11545)
!11553 = !DILocation(line: 70, column: 5, scope: !11545)
!11554 = !DILocation(line: 71, column: 1, scope: !11530)
!11555 = distinct !DISubprogram(name: "gettime", scope: !11556, file: !11556, line: 29, type: !1831, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1828, retainedNodes: !152)
!11556 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11557 = !DILocalVariable(name: "ts", arg: 1, scope: !11555, file: !11556, line: 29, type: !1833)
!11558 = !DILocation(line: 29, column: 27, scope: !11555)
!11559 = !DILocation(line: 32, column: 34, scope: !11555)
!11560 = !DILocation(line: 32, column: 3, scope: !11555)
!11561 = !DILocation(line: 39, column: 1, scope: !11555)
!11562 = distinct !DISubprogram(name: "current_timespec", scope: !11556, file: !11556, line: 44, type: !1838, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1828, retainedNodes: !152)
!11563 = !DILocalVariable(name: "ts", scope: !11562, file: !11556, line: 46, type: !1834)
!11564 = !DILocation(line: 46, column: 19, scope: !11562)
!11565 = !DILocation(line: 47, column: 3, scope: !11562)
!11566 = !DILocation(line: 48, column: 3, scope: !11562)
!11567 = distinct !DISubprogram(name: "hard_locale", scope: !11568, file: !11568, line: 38, type: !680, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !152)
!11568 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11569 = !DILocalVariable(name: "category", arg: 1, scope: !11567, file: !11568, line: 38, type: !27)
!11570 = !DILocation(line: 38, column: 18, scope: !11567)
!11571 = !DILocalVariable(name: "hard", scope: !11567, file: !11568, line: 40, type: !141)
!11572 = !DILocation(line: 40, column: 8, scope: !11567)
!11573 = !DILocalVariable(name: "p", scope: !11567, file: !11568, line: 41, type: !146)
!11574 = !DILocation(line: 41, column: 15, scope: !11567)
!11575 = !DILocation(line: 41, column: 30, scope: !11567)
!11576 = !DILocation(line: 41, column: 19, scope: !11567)
!11577 = !DILocation(line: 43, column: 7, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11567, file: !11568, line: 43, column: 7)
!11579 = !DILocation(line: 43, column: 7, scope: !11567)
!11580 = !DILocation(line: 47, column: 23, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !11568, line: 47, column: 15)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !11568, line: 46, column: 9)
!11583 = distinct !DILexicalBlock(scope: !11584, file: !11568, line: 45, column: 11)
!11584 = distinct !DILexicalBlock(scope: !11578, file: !11568, line: 44, column: 5)
!11585 = !DILocation(line: 47, column: 15, scope: !11581)
!11586 = !DILocation(line: 47, column: 31, scope: !11581)
!11587 = !DILocation(line: 47, column: 36, scope: !11581)
!11588 = !DILocation(line: 47, column: 47, scope: !11581)
!11589 = !DILocation(line: 47, column: 39, scope: !11581)
!11590 = !DILocation(line: 47, column: 59, scope: !11581)
!11591 = !DILocation(line: 47, column: 15, scope: !11582)
!11592 = !DILocation(line: 48, column: 18, scope: !11581)
!11593 = !DILocation(line: 48, column: 13, scope: !11581)
!11594 = !DILocation(line: 69, column: 5, scope: !11584)
!11595 = !DILocation(line: 71, column: 10, scope: !11567)
!11596 = !DILocation(line: 71, column: 3, scope: !11567)
!11597 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !1159, file: !1159, line: 150, type: !1153, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11598 = !DILocalVariable(name: "table", arg: 1, scope: !11597, file: !1159, line: 150, type: !1155)
!11599 = !DILocation(line: 150, column: 39, scope: !11597)
!11600 = !DILocation(line: 152, column: 10, scope: !11597)
!11601 = !DILocation(line: 152, column: 17, scope: !11597)
!11602 = !{!11603, !2467, i64 16}
!11603 = !{!"hash_table", !2443, i64 0, !2443, i64 8, !2467, i64 16, !2467, i64 24, !2467, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72}
!11604 = !DILocation(line: 152, column: 3, scope: !11597)
!11605 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !1159, file: !1159, line: 158, type: !1153, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11606 = !DILocalVariable(name: "table", arg: 1, scope: !11605, file: !1159, line: 158, type: !1155)
!11607 = !DILocation(line: 158, column: 44, scope: !11605)
!11608 = !DILocation(line: 160, column: 10, scope: !11605)
!11609 = !DILocation(line: 160, column: 17, scope: !11605)
!11610 = !{!11603, !2467, i64 24}
!11611 = !DILocation(line: 160, column: 3, scope: !11605)
!11612 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !1159, file: !1159, line: 166, type: !1153, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11613 = !DILocalVariable(name: "table", arg: 1, scope: !11612, file: !1159, line: 166, type: !1155)
!11614 = !DILocation(line: 166, column: 39, scope: !11612)
!11615 = !DILocation(line: 168, column: 10, scope: !11612)
!11616 = !DILocation(line: 168, column: 17, scope: !11612)
!11617 = !{!11603, !2467, i64 32}
!11618 = !DILocation(line: 168, column: 3, scope: !11612)
!11619 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !1159, file: !1159, line: 174, type: !1153, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11620 = !DILocalVariable(name: "table", arg: 1, scope: !11619, file: !1159, line: 174, type: !1155)
!11621 = !DILocation(line: 174, column: 47, scope: !11619)
!11622 = !DILocalVariable(name: "bucket", scope: !11619, file: !1159, line: 176, type: !1168)
!11623 = !DILocation(line: 176, column: 28, scope: !11619)
!11624 = !DILocalVariable(name: "max_bucket_length", scope: !11619, file: !1159, line: 177, type: !149)
!11625 = !DILocation(line: 177, column: 10, scope: !11619)
!11626 = !DILocation(line: 179, column: 17, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11619, file: !1159, line: 179, column: 3)
!11628 = !DILocation(line: 179, column: 24, scope: !11627)
!11629 = !{!11603, !2443, i64 0}
!11630 = !DILocation(line: 179, column: 15, scope: !11627)
!11631 = !DILocation(line: 179, column: 8, scope: !11627)
!11632 = !DILocation(line: 179, column: 32, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11627, file: !1159, line: 179, column: 3)
!11634 = !DILocation(line: 179, column: 41, scope: !11633)
!11635 = !DILocation(line: 179, column: 48, scope: !11633)
!11636 = !{!11603, !2443, i64 8}
!11637 = !DILocation(line: 179, column: 39, scope: !11633)
!11638 = !DILocation(line: 179, column: 3, scope: !11627)
!11639 = !DILocation(line: 181, column: 11, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !1159, line: 181, column: 11)
!11641 = distinct !DILexicalBlock(scope: !11633, file: !1159, line: 180, column: 5)
!11642 = !DILocation(line: 181, column: 19, scope: !11640)
!11643 = !{!11644, !2443, i64 0}
!11644 = !{!"hash_entry", !2443, i64 0, !2443, i64 8}
!11645 = !DILocation(line: 181, column: 11, scope: !11641)
!11646 = !DILocalVariable(name: "cursor", scope: !11647, file: !1159, line: 183, type: !1168)
!11647 = distinct !DILexicalBlock(scope: !11640, file: !1159, line: 182, column: 9)
!11648 = !DILocation(line: 183, column: 36, scope: !11647)
!11649 = !DILocation(line: 183, column: 45, scope: !11647)
!11650 = !DILocalVariable(name: "bucket_length", scope: !11647, file: !1159, line: 184, type: !149)
!11651 = !DILocation(line: 184, column: 18, scope: !11647)
!11652 = !DILocation(line: 186, column: 11, scope: !11647)
!11653 = !DILocation(line: 186, column: 27, scope: !11647)
!11654 = !DILocation(line: 186, column: 35, scope: !11647)
!11655 = !{!11644, !2443, i64 8}
!11656 = !DILocation(line: 186, column: 25, scope: !11647)
!11657 = !DILocation(line: 186, column: 41, scope: !11647)
!11658 = !DILocation(line: 187, column: 26, scope: !11647)
!11659 = distinct !{!11659, !11652, !11658}
!11660 = !DILocation(line: 189, column: 15, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11647, file: !1159, line: 189, column: 15)
!11662 = !DILocation(line: 189, column: 31, scope: !11661)
!11663 = !DILocation(line: 189, column: 29, scope: !11661)
!11664 = !DILocation(line: 189, column: 15, scope: !11647)
!11665 = !DILocation(line: 190, column: 33, scope: !11661)
!11666 = !DILocation(line: 190, column: 31, scope: !11661)
!11667 = !DILocation(line: 190, column: 13, scope: !11661)
!11668 = !DILocation(line: 191, column: 9, scope: !11647)
!11669 = !DILocation(line: 192, column: 5, scope: !11641)
!11670 = !DILocation(line: 179, column: 68, scope: !11633)
!11671 = !DILocation(line: 179, column: 3, scope: !11633)
!11672 = distinct !{!11672, !11638, !11673}
!11673 = !DILocation(line: 192, column: 5, scope: !11627)
!11674 = !DILocation(line: 194, column: 10, scope: !11619)
!11675 = !DILocation(line: 194, column: 3, scope: !11619)
!11676 = distinct !DISubprogram(name: "hash_table_ok", scope: !1159, file: !1159, line: 201, type: !1194, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11677 = !DILocalVariable(name: "table", arg: 1, scope: !11676, file: !1159, line: 201, type: !1155)
!11678 = !DILocation(line: 201, column: 34, scope: !11676)
!11679 = !DILocalVariable(name: "bucket", scope: !11676, file: !1159, line: 203, type: !1168)
!11680 = !DILocation(line: 203, column: 28, scope: !11676)
!11681 = !DILocalVariable(name: "n_buckets_used", scope: !11676, file: !1159, line: 204, type: !149)
!11682 = !DILocation(line: 204, column: 10, scope: !11676)
!11683 = !DILocalVariable(name: "n_entries", scope: !11676, file: !1159, line: 205, type: !149)
!11684 = !DILocation(line: 205, column: 10, scope: !11676)
!11685 = !DILocation(line: 207, column: 17, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11676, file: !1159, line: 207, column: 3)
!11687 = !DILocation(line: 207, column: 24, scope: !11686)
!11688 = !DILocation(line: 207, column: 15, scope: !11686)
!11689 = !DILocation(line: 207, column: 8, scope: !11686)
!11690 = !DILocation(line: 207, column: 32, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11686, file: !1159, line: 207, column: 3)
!11692 = !DILocation(line: 207, column: 41, scope: !11691)
!11693 = !DILocation(line: 207, column: 48, scope: !11691)
!11694 = !DILocation(line: 207, column: 39, scope: !11691)
!11695 = !DILocation(line: 207, column: 3, scope: !11686)
!11696 = !DILocation(line: 209, column: 11, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !1159, line: 209, column: 11)
!11698 = distinct !DILexicalBlock(scope: !11691, file: !1159, line: 208, column: 5)
!11699 = !DILocation(line: 209, column: 19, scope: !11697)
!11700 = !DILocation(line: 209, column: 11, scope: !11698)
!11701 = !DILocalVariable(name: "cursor", scope: !11702, file: !1159, line: 211, type: !1168)
!11702 = distinct !DILexicalBlock(scope: !11697, file: !1159, line: 210, column: 9)
!11703 = !DILocation(line: 211, column: 36, scope: !11702)
!11704 = !DILocation(line: 211, column: 45, scope: !11702)
!11705 = !DILocation(line: 214, column: 25, scope: !11702)
!11706 = !DILocation(line: 215, column: 20, scope: !11702)
!11707 = !DILocation(line: 218, column: 11, scope: !11702)
!11708 = !DILocation(line: 218, column: 27, scope: !11702)
!11709 = !DILocation(line: 218, column: 35, scope: !11702)
!11710 = !DILocation(line: 218, column: 25, scope: !11702)
!11711 = !DILocation(line: 218, column: 41, scope: !11702)
!11712 = !DILocation(line: 219, column: 22, scope: !11702)
!11713 = distinct !{!11713, !11707, !11712}
!11714 = !DILocation(line: 220, column: 9, scope: !11702)
!11715 = !DILocation(line: 221, column: 5, scope: !11698)
!11716 = !DILocation(line: 207, column: 68, scope: !11691)
!11717 = !DILocation(line: 207, column: 3, scope: !11691)
!11718 = distinct !{!11718, !11695, !11719}
!11719 = !DILocation(line: 221, column: 5, scope: !11686)
!11720 = !DILocation(line: 223, column: 7, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11676, file: !1159, line: 223, column: 7)
!11722 = !DILocation(line: 223, column: 25, scope: !11721)
!11723 = !DILocation(line: 223, column: 32, scope: !11721)
!11724 = !DILocation(line: 223, column: 22, scope: !11721)
!11725 = !DILocation(line: 223, column: 47, scope: !11721)
!11726 = !DILocation(line: 223, column: 50, scope: !11721)
!11727 = !DILocation(line: 223, column: 63, scope: !11721)
!11728 = !DILocation(line: 223, column: 70, scope: !11721)
!11729 = !DILocation(line: 223, column: 60, scope: !11721)
!11730 = !DILocation(line: 223, column: 7, scope: !11676)
!11731 = !DILocation(line: 224, column: 5, scope: !11721)
!11732 = !DILocation(line: 226, column: 3, scope: !11676)
!11733 = !DILocation(line: 227, column: 1, scope: !11676)
!11734 = distinct !DISubprogram(name: "hash_print_statistics", scope: !1159, file: !1159, line: 230, type: !1196, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11735 = !DILocalVariable(name: "table", arg: 1, scope: !11734, file: !1159, line: 230, type: !1155)
!11736 = !DILocation(line: 230, column: 42, scope: !11734)
!11737 = !DILocalVariable(name: "stream", arg: 2, scope: !11734, file: !1159, line: 230, type: !1198)
!11738 = !DILocation(line: 230, column: 55, scope: !11734)
!11739 = !DILocalVariable(name: "n_entries", scope: !11734, file: !1159, line: 232, type: !149)
!11740 = !DILocation(line: 232, column: 10, scope: !11734)
!11741 = !DILocation(line: 232, column: 42, scope: !11734)
!11742 = !DILocation(line: 232, column: 22, scope: !11734)
!11743 = !DILocalVariable(name: "n_buckets", scope: !11734, file: !1159, line: 233, type: !149)
!11744 = !DILocation(line: 233, column: 10, scope: !11734)
!11745 = !DILocation(line: 233, column: 42, scope: !11734)
!11746 = !DILocation(line: 233, column: 22, scope: !11734)
!11747 = !DILocalVariable(name: "n_buckets_used", scope: !11734, file: !1159, line: 234, type: !149)
!11748 = !DILocation(line: 234, column: 10, scope: !11734)
!11749 = !DILocation(line: 234, column: 52, scope: !11734)
!11750 = !DILocation(line: 234, column: 27, scope: !11734)
!11751 = !DILocalVariable(name: "max_bucket_length", scope: !11734, file: !1159, line: 235, type: !149)
!11752 = !DILocation(line: 235, column: 10, scope: !11734)
!11753 = !DILocation(line: 235, column: 58, scope: !11734)
!11754 = !DILocation(line: 235, column: 30, scope: !11734)
!11755 = !DILocation(line: 237, column: 12, scope: !11734)
!11756 = !DILocation(line: 237, column: 68, scope: !11734)
!11757 = !DILocation(line: 237, column: 3, scope: !11734)
!11758 = !DILocation(line: 238, column: 12, scope: !11734)
!11759 = !DILocation(line: 238, column: 68, scope: !11734)
!11760 = !DILocation(line: 238, column: 3, scope: !11734)
!11761 = !DILocation(line: 239, column: 12, scope: !11734)
!11762 = !DILocation(line: 240, column: 32, scope: !11734)
!11763 = !DILocation(line: 241, column: 21, scope: !11734)
!11764 = !DILocation(line: 241, column: 19, scope: !11734)
!11765 = !DILocation(line: 241, column: 39, scope: !11734)
!11766 = !DILocation(line: 241, column: 37, scope: !11734)
!11767 = !DILocation(line: 239, column: 3, scope: !11734)
!11768 = !DILocation(line: 242, column: 12, scope: !11734)
!11769 = !DILocation(line: 243, column: 32, scope: !11734)
!11770 = !DILocation(line: 242, column: 3, scope: !11734)
!11771 = !DILocation(line: 244, column: 1, scope: !11734)
!11772 = distinct !DISubprogram(name: "hash_lookup", scope: !1159, file: !1159, line: 261, type: !1232, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11773 = !DILocalVariable(name: "table", arg: 1, scope: !11772, file: !1159, line: 261, type: !1155)
!11774 = !DILocation(line: 261, column: 32, scope: !11772)
!11775 = !DILocalVariable(name: "entry", arg: 2, scope: !11772, file: !1159, line: 261, type: !181)
!11776 = !DILocation(line: 261, column: 51, scope: !11772)
!11777 = !DILocalVariable(name: "bucket", scope: !11772, file: !1159, line: 263, type: !1168)
!11778 = !DILocation(line: 263, column: 28, scope: !11772)
!11779 = !DILocation(line: 263, column: 50, scope: !11772)
!11780 = !DILocation(line: 263, column: 57, scope: !11772)
!11781 = !DILocation(line: 263, column: 37, scope: !11772)
!11782 = !DILocalVariable(name: "cursor", scope: !11772, file: !1159, line: 264, type: !1168)
!11783 = !DILocation(line: 264, column: 28, scope: !11772)
!11784 = !DILocation(line: 266, column: 7, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11772, file: !1159, line: 266, column: 7)
!11786 = !DILocation(line: 266, column: 15, scope: !11785)
!11787 = !DILocation(line: 266, column: 20, scope: !11785)
!11788 = !DILocation(line: 266, column: 7, scope: !11772)
!11789 = !DILocation(line: 267, column: 5, scope: !11785)
!11790 = !DILocation(line: 269, column: 17, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11772, file: !1159, line: 269, column: 3)
!11792 = !DILocation(line: 269, column: 15, scope: !11791)
!11793 = !DILocation(line: 269, column: 8, scope: !11791)
!11794 = !DILocation(line: 269, column: 25, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11791, file: !1159, line: 269, column: 3)
!11796 = !DILocation(line: 269, column: 3, scope: !11791)
!11797 = !DILocation(line: 270, column: 9, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11795, file: !1159, line: 270, column: 9)
!11799 = !DILocation(line: 270, column: 18, scope: !11798)
!11800 = !DILocation(line: 270, column: 26, scope: !11798)
!11801 = !DILocation(line: 270, column: 15, scope: !11798)
!11802 = !DILocation(line: 270, column: 31, scope: !11798)
!11803 = !DILocation(line: 270, column: 34, scope: !11798)
!11804 = !DILocation(line: 270, column: 41, scope: !11798)
!11805 = !{!11603, !2443, i64 56}
!11806 = !DILocation(line: 270, column: 53, scope: !11798)
!11807 = !DILocation(line: 270, column: 60, scope: !11798)
!11808 = !DILocation(line: 270, column: 68, scope: !11798)
!11809 = !DILocation(line: 270, column: 9, scope: !11795)
!11810 = !DILocation(line: 271, column: 14, scope: !11798)
!11811 = !DILocation(line: 271, column: 22, scope: !11798)
!11812 = !DILocation(line: 271, column: 7, scope: !11798)
!11813 = !DILocation(line: 270, column: 72, scope: !11798)
!11814 = !DILocation(line: 269, column: 42, scope: !11795)
!11815 = !DILocation(line: 269, column: 50, scope: !11795)
!11816 = !DILocation(line: 269, column: 40, scope: !11795)
!11817 = !DILocation(line: 269, column: 3, scope: !11795)
!11818 = distinct !{!11818, !11796, !11819}
!11819 = !DILocation(line: 271, column: 22, scope: !11791)
!11820 = !DILocation(line: 273, column: 3, scope: !11772)
!11821 = !DILocation(line: 274, column: 1, scope: !11772)
!11822 = distinct !DISubprogram(name: "safe_hasher", scope: !1159, file: !1159, line: 249, type: !1260, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11823 = !DILocalVariable(name: "table", arg: 1, scope: !11822, file: !1159, line: 249, type: !1155)
!11824 = !DILocation(line: 249, column: 32, scope: !11822)
!11825 = !DILocalVariable(name: "key", arg: 2, scope: !11822, file: !1159, line: 249, type: !181)
!11826 = !DILocation(line: 249, column: 51, scope: !11822)
!11827 = !DILocalVariable(name: "n", scope: !11822, file: !1159, line: 251, type: !149)
!11828 = !DILocation(line: 251, column: 10, scope: !11822)
!11829 = !DILocation(line: 251, column: 14, scope: !11822)
!11830 = !DILocation(line: 251, column: 21, scope: !11822)
!11831 = !{!11603, !2443, i64 48}
!11832 = !DILocation(line: 251, column: 29, scope: !11822)
!11833 = !DILocation(line: 251, column: 34, scope: !11822)
!11834 = !DILocation(line: 251, column: 41, scope: !11822)
!11835 = !DILocation(line: 252, column: 10, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11822, file: !1159, line: 252, column: 7)
!11837 = !DILocation(line: 252, column: 14, scope: !11836)
!11838 = !DILocation(line: 252, column: 21, scope: !11836)
!11839 = !DILocation(line: 252, column: 12, scope: !11836)
!11840 = !DILocation(line: 252, column: 7, scope: !11822)
!11841 = !DILocation(line: 253, column: 5, scope: !11836)
!11842 = !DILocation(line: 254, column: 10, scope: !11822)
!11843 = !DILocation(line: 254, column: 17, scope: !11822)
!11844 = !DILocation(line: 254, column: 26, scope: !11822)
!11845 = !DILocation(line: 254, column: 24, scope: !11822)
!11846 = !DILocation(line: 254, column: 3, scope: !11822)
!11847 = distinct !DISubprogram(name: "hash_get_first", scope: !1159, file: !1159, line: 288, type: !1234, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11848 = !DILocalVariable(name: "table", arg: 1, scope: !11847, file: !1159, line: 288, type: !1155)
!11849 = !DILocation(line: 288, column: 35, scope: !11847)
!11850 = !DILocalVariable(name: "bucket", scope: !11847, file: !1159, line: 290, type: !1168)
!11851 = !DILocation(line: 290, column: 28, scope: !11847)
!11852 = !DILocation(line: 292, column: 7, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11847, file: !1159, line: 292, column: 7)
!11854 = !DILocation(line: 292, column: 14, scope: !11853)
!11855 = !DILocation(line: 292, column: 24, scope: !11853)
!11856 = !DILocation(line: 292, column: 7, scope: !11847)
!11857 = !DILocation(line: 293, column: 5, scope: !11853)
!11858 = !DILocation(line: 295, column: 17, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11847, file: !1159, line: 295, column: 3)
!11860 = !DILocation(line: 295, column: 24, scope: !11859)
!11861 = !DILocation(line: 295, column: 15, scope: !11859)
!11862 = !DILocation(line: 295, column: 8, scope: !11859)
!11863 = !DILocation(line: 296, column: 12, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !1159, line: 296, column: 9)
!11865 = distinct !DILexicalBlock(scope: !11859, file: !1159, line: 295, column: 3)
!11866 = !DILocation(line: 296, column: 21, scope: !11864)
!11867 = !DILocation(line: 296, column: 28, scope: !11864)
!11868 = !DILocation(line: 296, column: 19, scope: !11864)
!11869 = !DILocation(line: 296, column: 9, scope: !11865)
!11870 = !DILocation(line: 297, column: 7, scope: !11864)
!11871 = !DILocation(line: 298, column: 14, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11864, file: !1159, line: 298, column: 14)
!11873 = !DILocation(line: 298, column: 22, scope: !11872)
!11874 = !DILocation(line: 298, column: 14, scope: !11864)
!11875 = !DILocation(line: 299, column: 14, scope: !11872)
!11876 = !DILocation(line: 299, column: 22, scope: !11872)
!11877 = !DILocation(line: 299, column: 7, scope: !11872)
!11878 = !DILocation(line: 296, column: 40, scope: !11864)
!11879 = !DILocation(line: 295, column: 40, scope: !11865)
!11880 = !DILocation(line: 295, column: 3, scope: !11865)
!11881 = distinct !{!11881, !11882, !11883}
!11882 = !DILocation(line: 295, column: 3, scope: !11859)
!11883 = !DILocation(line: 299, column: 22, scope: !11859)
!11884 = !DILocation(line: 300, column: 1, scope: !11847)
!11885 = distinct !DISubprogram(name: "hash_get_next", scope: !1159, file: !1159, line: 307, type: !1232, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11886 = !DILocalVariable(name: "table", arg: 1, scope: !11885, file: !1159, line: 307, type: !1155)
!11887 = !DILocation(line: 307, column: 34, scope: !11885)
!11888 = !DILocalVariable(name: "entry", arg: 2, scope: !11885, file: !1159, line: 307, type: !181)
!11889 = !DILocation(line: 307, column: 53, scope: !11885)
!11890 = !DILocalVariable(name: "bucket", scope: !11885, file: !1159, line: 309, type: !1168)
!11891 = !DILocation(line: 309, column: 28, scope: !11885)
!11892 = !DILocation(line: 309, column: 50, scope: !11885)
!11893 = !DILocation(line: 309, column: 57, scope: !11885)
!11894 = !DILocation(line: 309, column: 37, scope: !11885)
!11895 = !DILocalVariable(name: "cursor", scope: !11885, file: !1159, line: 310, type: !1168)
!11896 = !DILocation(line: 310, column: 28, scope: !11885)
!11897 = !DILocation(line: 313, column: 12, scope: !11885)
!11898 = !DILocation(line: 313, column: 10, scope: !11885)
!11899 = !DILocation(line: 314, column: 3, scope: !11885)
!11900 = !DILocation(line: 316, column: 11, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !1159, line: 316, column: 11)
!11902 = distinct !DILexicalBlock(scope: !11885, file: !1159, line: 315, column: 5)
!11903 = !DILocation(line: 316, column: 19, scope: !11901)
!11904 = !DILocation(line: 316, column: 27, scope: !11901)
!11905 = !DILocation(line: 316, column: 24, scope: !11901)
!11906 = !DILocation(line: 316, column: 33, scope: !11901)
!11907 = !DILocation(line: 316, column: 36, scope: !11901)
!11908 = !DILocation(line: 316, column: 44, scope: !11901)
!11909 = !DILocation(line: 316, column: 11, scope: !11902)
!11910 = !DILocation(line: 317, column: 16, scope: !11901)
!11911 = !DILocation(line: 317, column: 24, scope: !11901)
!11912 = !DILocation(line: 317, column: 30, scope: !11901)
!11913 = !DILocation(line: 317, column: 9, scope: !11901)
!11914 = !DILocation(line: 318, column: 16, scope: !11902)
!11915 = !DILocation(line: 318, column: 24, scope: !11902)
!11916 = !DILocation(line: 318, column: 14, scope: !11902)
!11917 = !DILocation(line: 319, column: 5, scope: !11902)
!11918 = !DILocation(line: 320, column: 10, scope: !11885)
!11919 = !DILocation(line: 320, column: 17, scope: !11885)
!11920 = distinct !{!11920, !11899, !11921}
!11921 = !DILocation(line: 320, column: 24, scope: !11885)
!11922 = !DILocation(line: 323, column: 3, scope: !11885)
!11923 = !DILocation(line: 323, column: 10, scope: !11885)
!11924 = !DILocation(line: 323, column: 21, scope: !11885)
!11925 = !DILocation(line: 323, column: 28, scope: !11885)
!11926 = !DILocation(line: 323, column: 19, scope: !11885)
!11927 = !DILocation(line: 324, column: 9, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11885, file: !1159, line: 324, column: 9)
!11929 = !DILocation(line: 324, column: 17, scope: !11928)
!11930 = !DILocation(line: 324, column: 9, scope: !11885)
!11931 = !DILocation(line: 325, column: 14, scope: !11928)
!11932 = !DILocation(line: 325, column: 22, scope: !11928)
!11933 = !DILocation(line: 325, column: 7, scope: !11928)
!11934 = distinct !{!11934, !11922, !11935}
!11935 = !DILocation(line: 325, column: 22, scope: !11885)
!11936 = !DILocation(line: 328, column: 3, scope: !11885)
!11937 = !DILocation(line: 329, column: 1, scope: !11885)
!11938 = distinct !DISubprogram(name: "hash_get_entries", scope: !1159, file: !1159, line: 336, type: !1236, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!11939 = !DILocalVariable(name: "table", arg: 1, scope: !11938, file: !1159, line: 336, type: !1155)
!11940 = !DILocation(line: 336, column: 37, scope: !11938)
!11941 = !DILocalVariable(name: "buffer", arg: 2, scope: !11938, file: !1159, line: 336, type: !663)
!11942 = !DILocation(line: 336, column: 51, scope: !11938)
!11943 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11938, file: !1159, line: 337, type: !149)
!11944 = !DILocation(line: 337, column: 26, scope: !11938)
!11945 = !DILocalVariable(name: "counter", scope: !11938, file: !1159, line: 339, type: !149)
!11946 = !DILocation(line: 339, column: 10, scope: !11938)
!11947 = !DILocalVariable(name: "bucket", scope: !11938, file: !1159, line: 340, type: !1168)
!11948 = !DILocation(line: 340, column: 28, scope: !11938)
!11949 = !DILocalVariable(name: "cursor", scope: !11938, file: !1159, line: 341, type: !1168)
!11950 = !DILocation(line: 341, column: 28, scope: !11938)
!11951 = !DILocation(line: 343, column: 17, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11938, file: !1159, line: 343, column: 3)
!11953 = !DILocation(line: 343, column: 24, scope: !11952)
!11954 = !DILocation(line: 343, column: 15, scope: !11952)
!11955 = !DILocation(line: 343, column: 8, scope: !11952)
!11956 = !DILocation(line: 343, column: 32, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11952, file: !1159, line: 343, column: 3)
!11958 = !DILocation(line: 343, column: 41, scope: !11957)
!11959 = !DILocation(line: 343, column: 48, scope: !11957)
!11960 = !DILocation(line: 343, column: 39, scope: !11957)
!11961 = !DILocation(line: 343, column: 3, scope: !11952)
!11962 = !DILocation(line: 345, column: 11, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !1159, line: 345, column: 11)
!11964 = distinct !DILexicalBlock(scope: !11957, file: !1159, line: 344, column: 5)
!11965 = !DILocation(line: 345, column: 19, scope: !11963)
!11966 = !DILocation(line: 345, column: 11, scope: !11964)
!11967 = !DILocation(line: 347, column: 25, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !1159, line: 347, column: 11)
!11969 = distinct !DILexicalBlock(scope: !11963, file: !1159, line: 346, column: 9)
!11970 = !DILocation(line: 347, column: 23, scope: !11968)
!11971 = !DILocation(line: 347, column: 16, scope: !11968)
!11972 = !DILocation(line: 347, column: 33, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11968, file: !1159, line: 347, column: 11)
!11974 = !DILocation(line: 347, column: 11, scope: !11968)
!11975 = !DILocation(line: 349, column: 19, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !1159, line: 349, column: 19)
!11977 = distinct !DILexicalBlock(scope: !11973, file: !1159, line: 348, column: 13)
!11978 = !DILocation(line: 349, column: 30, scope: !11976)
!11979 = !DILocation(line: 349, column: 27, scope: !11976)
!11980 = !DILocation(line: 349, column: 19, scope: !11977)
!11981 = !DILocation(line: 350, column: 24, scope: !11976)
!11982 = !DILocation(line: 350, column: 17, scope: !11976)
!11983 = !DILocation(line: 351, column: 35, scope: !11977)
!11984 = !DILocation(line: 351, column: 43, scope: !11977)
!11985 = !DILocation(line: 351, column: 15, scope: !11977)
!11986 = !DILocation(line: 351, column: 29, scope: !11977)
!11987 = !DILocation(line: 351, column: 33, scope: !11977)
!11988 = !DILocation(line: 352, column: 13, scope: !11977)
!11989 = !DILocation(line: 347, column: 50, scope: !11973)
!11990 = !DILocation(line: 347, column: 58, scope: !11973)
!11991 = !DILocation(line: 347, column: 48, scope: !11973)
!11992 = !DILocation(line: 347, column: 11, scope: !11973)
!11993 = distinct !{!11993, !11974, !11994}
!11994 = !DILocation(line: 352, column: 13, scope: !11968)
!11995 = !DILocation(line: 353, column: 9, scope: !11969)
!11996 = !DILocation(line: 354, column: 5, scope: !11964)
!11997 = !DILocation(line: 343, column: 68, scope: !11957)
!11998 = !DILocation(line: 343, column: 3, scope: !11957)
!11999 = distinct !{!11999, !11961, !12000}
!12000 = !DILocation(line: 354, column: 5, scope: !11952)
!12001 = !DILocation(line: 356, column: 10, scope: !11938)
!12002 = !DILocation(line: 356, column: 3, scope: !11938)
!12003 = !DILocation(line: 357, column: 1, scope: !11938)
!12004 = distinct !DISubprogram(name: "hash_do_for_each", scope: !1159, file: !1159, line: 368, type: !1238, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12005 = !DILocalVariable(name: "table", arg: 1, scope: !12004, file: !1159, line: 368, type: !1155)
!12006 = !DILocation(line: 368, column: 37, scope: !12004)
!12007 = !DILocalVariable(name: "processor", arg: 2, scope: !12004, file: !1159, line: 368, type: !1240)
!12008 = !DILocation(line: 368, column: 59, scope: !12004)
!12009 = !DILocalVariable(name: "processor_data", arg: 3, scope: !12004, file: !1159, line: 369, type: !167)
!12010 = !DILocation(line: 369, column: 25, scope: !12004)
!12011 = !DILocalVariable(name: "counter", scope: !12004, file: !1159, line: 371, type: !149)
!12012 = !DILocation(line: 371, column: 10, scope: !12004)
!12013 = !DILocalVariable(name: "bucket", scope: !12004, file: !1159, line: 372, type: !1168)
!12014 = !DILocation(line: 372, column: 28, scope: !12004)
!12015 = !DILocalVariable(name: "cursor", scope: !12004, file: !1159, line: 373, type: !1168)
!12016 = !DILocation(line: 373, column: 28, scope: !12004)
!12017 = !DILocation(line: 375, column: 17, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12004, file: !1159, line: 375, column: 3)
!12019 = !DILocation(line: 375, column: 24, scope: !12018)
!12020 = !DILocation(line: 375, column: 15, scope: !12018)
!12021 = !DILocation(line: 375, column: 8, scope: !12018)
!12022 = !DILocation(line: 375, column: 32, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12018, file: !1159, line: 375, column: 3)
!12024 = !DILocation(line: 375, column: 41, scope: !12023)
!12025 = !DILocation(line: 375, column: 48, scope: !12023)
!12026 = !DILocation(line: 375, column: 39, scope: !12023)
!12027 = !DILocation(line: 375, column: 3, scope: !12018)
!12028 = !DILocation(line: 377, column: 11, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !1159, line: 377, column: 11)
!12030 = distinct !DILexicalBlock(scope: !12023, file: !1159, line: 376, column: 5)
!12031 = !DILocation(line: 377, column: 19, scope: !12029)
!12032 = !DILocation(line: 377, column: 11, scope: !12030)
!12033 = !DILocation(line: 379, column: 25, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !1159, line: 379, column: 11)
!12035 = distinct !DILexicalBlock(scope: !12029, file: !1159, line: 378, column: 9)
!12036 = !DILocation(line: 379, column: 23, scope: !12034)
!12037 = !DILocation(line: 379, column: 16, scope: !12034)
!12038 = !DILocation(line: 379, column: 33, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12034, file: !1159, line: 379, column: 11)
!12040 = !DILocation(line: 379, column: 11, scope: !12034)
!12041 = !DILocation(line: 381, column: 21, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !1159, line: 381, column: 19)
!12043 = distinct !DILexicalBlock(scope: !12039, file: !1159, line: 380, column: 13)
!12044 = !DILocation(line: 381, column: 32, scope: !12042)
!12045 = !DILocation(line: 381, column: 40, scope: !12042)
!12046 = !DILocation(line: 381, column: 46, scope: !12042)
!12047 = !DILocation(line: 381, column: 19, scope: !12043)
!12048 = !DILocation(line: 382, column: 24, scope: !12042)
!12049 = !DILocation(line: 382, column: 17, scope: !12042)
!12050 = !DILocation(line: 383, column: 22, scope: !12043)
!12051 = !DILocation(line: 384, column: 13, scope: !12043)
!12052 = !DILocation(line: 379, column: 50, scope: !12039)
!12053 = !DILocation(line: 379, column: 58, scope: !12039)
!12054 = !DILocation(line: 379, column: 48, scope: !12039)
!12055 = !DILocation(line: 379, column: 11, scope: !12039)
!12056 = distinct !{!12056, !12040, !12057}
!12057 = !DILocation(line: 384, column: 13, scope: !12034)
!12058 = !DILocation(line: 385, column: 9, scope: !12035)
!12059 = !DILocation(line: 386, column: 5, scope: !12030)
!12060 = !DILocation(line: 375, column: 68, scope: !12023)
!12061 = !DILocation(line: 375, column: 3, scope: !12023)
!12062 = distinct !{!12062, !12027, !12063}
!12063 = !DILocation(line: 386, column: 5, scope: !12018)
!12064 = !DILocation(line: 388, column: 10, scope: !12004)
!12065 = !DILocation(line: 388, column: 3, scope: !12004)
!12066 = !DILocation(line: 389, column: 1, scope: !12004)
!12067 = distinct !DISubprogram(name: "hash_string", scope: !1159, file: !1159, line: 428, type: !1244, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12068 = !DILocalVariable(name: "string", arg: 1, scope: !12067, file: !1159, line: 428, type: !146)
!12069 = !DILocation(line: 428, column: 26, scope: !12067)
!12070 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12067, file: !1159, line: 428, type: !149)
!12071 = !DILocation(line: 428, column: 41, scope: !12067)
!12072 = !DILocalVariable(name: "value", scope: !12067, file: !1159, line: 430, type: !149)
!12073 = !DILocation(line: 430, column: 10, scope: !12067)
!12074 = !DILocalVariable(name: "ch", scope: !12067, file: !1159, line: 431, type: !591)
!12075 = !DILocation(line: 431, column: 17, scope: !12067)
!12076 = !DILocation(line: 433, column: 3, scope: !12067)
!12077 = !DILocation(line: 433, column: 17, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !1159, line: 433, column: 3)
!12079 = distinct !DILexicalBlock(scope: !12067, file: !1159, line: 433, column: 3)
!12080 = !DILocation(line: 433, column: 16, scope: !12078)
!12081 = !DILocation(line: 433, column: 14, scope: !12078)
!12082 = !DILocation(line: 433, column: 3, scope: !12079)
!12083 = !DILocation(line: 434, column: 14, scope: !12078)
!12084 = !DILocation(line: 434, column: 20, scope: !12078)
!12085 = !DILocation(line: 434, column: 27, scope: !12078)
!12086 = !DILocation(line: 434, column: 25, scope: !12078)
!12087 = !DILocation(line: 434, column: 33, scope: !12078)
!12088 = !DILocation(line: 434, column: 31, scope: !12078)
!12089 = !DILocation(line: 434, column: 11, scope: !12078)
!12090 = !DILocation(line: 434, column: 5, scope: !12078)
!12091 = !DILocation(line: 433, column: 32, scope: !12078)
!12092 = !DILocation(line: 433, column: 3, scope: !12078)
!12093 = distinct !{!12093, !12082, !12094}
!12094 = !DILocation(line: 434, column: 33, scope: !12079)
!12095 = !DILocation(line: 435, column: 10, scope: !12067)
!12096 = !DILocation(line: 435, column: 3, scope: !12067)
!12097 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !1159, file: !1159, line: 479, type: !1246, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12098 = !DILocalVariable(name: "tuning", arg: 1, scope: !12097, file: !1159, line: 479, type: !1248)
!12099 = !DILocation(line: 479, column: 33, scope: !12097)
!12100 = !DILocation(line: 481, column: 4, scope: !12097)
!12101 = !DILocation(line: 481, column: 13, scope: !12097)
!12102 = !{i64 0, i64 4, !12103, i64 4, i64 4, !12103, i64 8, i64 4, !12103, i64 12, i64 4, !12103, i64 16, i64 1, !2461}
!12103 = !{!12104, !12104, i64 0}
!12104 = !{!"float", !2438, i64 0}
!12105 = !DILocation(line: 482, column: 1, scope: !12097)
!12106 = distinct !DISubprogram(name: "hash_initialize", scope: !1159, file: !1159, line: 594, type: !1249, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12107 = !DILocalVariable(name: "candidate", arg: 1, scope: !12106, file: !1159, line: 594, type: !149)
!12108 = !DILocation(line: 594, column: 25, scope: !12106)
!12109 = !DILocalVariable(name: "tuning", arg: 2, scope: !12106, file: !1159, line: 594, type: !1174)
!12110 = !DILocation(line: 594, column: 55, scope: !12106)
!12111 = !DILocalVariable(name: "hasher", arg: 3, scope: !12106, file: !1159, line: 595, type: !1186)
!12112 = !DILocation(line: 595, column: 30, scope: !12106)
!12113 = !DILocalVariable(name: "comparator", arg: 4, scope: !12106, file: !1159, line: 595, type: !1189)
!12114 = !DILocation(line: 595, column: 54, scope: !12106)
!12115 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12106, file: !1159, line: 596, type: !1192)
!12116 = !DILocation(line: 596, column: 34, scope: !12106)
!12117 = !DILocalVariable(name: "table", scope: !12106, file: !1159, line: 598, type: !1251)
!12118 = !DILocation(line: 598, column: 15, scope: !12106)
!12119 = !DILocation(line: 600, column: 7, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 600, column: 7)
!12121 = !DILocation(line: 600, column: 14, scope: !12120)
!12122 = !DILocation(line: 600, column: 7, scope: !12106)
!12123 = !DILocation(line: 601, column: 12, scope: !12120)
!12124 = !DILocation(line: 601, column: 5, scope: !12120)
!12125 = !DILocation(line: 602, column: 7, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 602, column: 7)
!12127 = !DILocation(line: 602, column: 18, scope: !12126)
!12128 = !DILocation(line: 602, column: 7, scope: !12106)
!12129 = !DILocation(line: 603, column: 16, scope: !12126)
!12130 = !DILocation(line: 603, column: 5, scope: !12126)
!12131 = !DILocation(line: 605, column: 11, scope: !12106)
!12132 = !DILocation(line: 605, column: 9, scope: !12106)
!12133 = !DILocation(line: 606, column: 7, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 606, column: 7)
!12135 = !DILocation(line: 606, column: 13, scope: !12134)
!12136 = !DILocation(line: 606, column: 7, scope: !12106)
!12137 = !DILocation(line: 607, column: 5, scope: !12134)
!12138 = !DILocation(line: 609, column: 8, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 609, column: 7)
!12140 = !DILocation(line: 609, column: 7, scope: !12106)
!12141 = !DILocation(line: 610, column: 12, scope: !12139)
!12142 = !DILocation(line: 610, column: 5, scope: !12139)
!12143 = !DILocation(line: 611, column: 19, scope: !12106)
!12144 = !DILocation(line: 611, column: 3, scope: !12106)
!12145 = !DILocation(line: 611, column: 10, scope: !12106)
!12146 = !DILocation(line: 611, column: 17, scope: !12106)
!12147 = !{!11603, !2443, i64 40}
!12148 = !DILocation(line: 612, column: 22, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 612, column: 7)
!12150 = !DILocation(line: 612, column: 8, scope: !12149)
!12151 = !DILocation(line: 612, column: 7, scope: !12106)
!12152 = !DILocation(line: 619, column: 7, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !1159, line: 613, column: 5)
!12154 = !DILocation(line: 622, column: 43, scope: !12106)
!12155 = !DILocation(line: 622, column: 54, scope: !12106)
!12156 = !DILocation(line: 622, column: 22, scope: !12106)
!12157 = !DILocation(line: 622, column: 3, scope: !12106)
!12158 = !DILocation(line: 622, column: 10, scope: !12106)
!12159 = !DILocation(line: 622, column: 20, scope: !12106)
!12160 = !DILocation(line: 623, column: 8, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 623, column: 7)
!12162 = !DILocation(line: 623, column: 15, scope: !12161)
!12163 = !DILocation(line: 623, column: 7, scope: !12106)
!12164 = !DILocation(line: 624, column: 5, scope: !12161)
!12165 = !DILocation(line: 626, column: 27, scope: !12106)
!12166 = !DILocation(line: 626, column: 34, scope: !12106)
!12167 = !DILocation(line: 626, column: 19, scope: !12106)
!12168 = !DILocation(line: 626, column: 3, scope: !12106)
!12169 = !DILocation(line: 626, column: 10, scope: !12106)
!12170 = !DILocation(line: 626, column: 17, scope: !12106)
!12171 = !DILocation(line: 627, column: 7, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12106, file: !1159, line: 627, column: 7)
!12173 = !DILocation(line: 627, column: 14, scope: !12172)
!12174 = !DILocation(line: 627, column: 21, scope: !12172)
!12175 = !DILocation(line: 627, column: 7, scope: !12106)
!12176 = !DILocation(line: 628, column: 5, scope: !12172)
!12177 = !DILocation(line: 629, column: 25, scope: !12106)
!12178 = !DILocation(line: 629, column: 32, scope: !12106)
!12179 = !DILocation(line: 629, column: 41, scope: !12106)
!12180 = !DILocation(line: 629, column: 48, scope: !12106)
!12181 = !DILocation(line: 629, column: 39, scope: !12106)
!12182 = !DILocation(line: 629, column: 3, scope: !12106)
!12183 = !DILocation(line: 629, column: 10, scope: !12106)
!12184 = !DILocation(line: 629, column: 23, scope: !12106)
!12185 = !DILocation(line: 630, column: 3, scope: !12106)
!12186 = !DILocation(line: 630, column: 10, scope: !12106)
!12187 = !DILocation(line: 630, column: 25, scope: !12106)
!12188 = !DILocation(line: 631, column: 3, scope: !12106)
!12189 = !DILocation(line: 631, column: 10, scope: !12106)
!12190 = !DILocation(line: 631, column: 20, scope: !12106)
!12191 = !DILocation(line: 633, column: 19, scope: !12106)
!12192 = !DILocation(line: 633, column: 3, scope: !12106)
!12193 = !DILocation(line: 633, column: 10, scope: !12106)
!12194 = !DILocation(line: 633, column: 17, scope: !12106)
!12195 = !DILocation(line: 634, column: 23, scope: !12106)
!12196 = !DILocation(line: 634, column: 3, scope: !12106)
!12197 = !DILocation(line: 634, column: 10, scope: !12106)
!12198 = !DILocation(line: 634, column: 21, scope: !12106)
!12199 = !DILocation(line: 635, column: 23, scope: !12106)
!12200 = !DILocation(line: 635, column: 3, scope: !12106)
!12201 = !DILocation(line: 635, column: 10, scope: !12106)
!12202 = !DILocation(line: 635, column: 21, scope: !12106)
!12203 = !{!11603, !2443, i64 64}
!12204 = !DILocation(line: 637, column: 3, scope: !12106)
!12205 = !DILocation(line: 637, column: 10, scope: !12106)
!12206 = !DILocation(line: 637, column: 26, scope: !12106)
!12207 = !{!11603, !2443, i64 72}
!12208 = !DILocation(line: 641, column: 10, scope: !12106)
!12209 = !DILocation(line: 641, column: 3, scope: !12106)
!12210 = !DILabel(scope: !12106, name: "fail", file: !1159, line: 643)
!12211 = !DILocation(line: 643, column: 2, scope: !12106)
!12212 = !DILocation(line: 644, column: 9, scope: !12106)
!12213 = !DILocation(line: 644, column: 3, scope: !12106)
!12214 = !DILocation(line: 645, column: 3, scope: !12106)
!12215 = !DILocation(line: 646, column: 1, scope: !12106)
!12216 = distinct !DISubprogram(name: "raw_hasher", scope: !1159, file: !1159, line: 486, type: !333, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12217 = !DILocalVariable(name: "data", arg: 1, scope: !12216, file: !1159, line: 486, type: !181)
!12218 = !DILocation(line: 486, column: 25, scope: !12216)
!12219 = !DILocalVariable(name: "n", arg: 2, scope: !12216, file: !1159, line: 486, type: !149)
!12220 = !DILocation(line: 486, column: 38, scope: !12216)
!12221 = !DILocalVariable(name: "val", scope: !12216, file: !1159, line: 493, type: !149)
!12222 = !DILocation(line: 493, column: 10, scope: !12216)
!12223 = !DILocation(line: 493, column: 34, scope: !12216)
!12224 = !DILocation(line: 493, column: 25, scope: !12216)
!12225 = !DILocation(line: 493, column: 16, scope: !12216)
!12226 = !DILocation(line: 494, column: 10, scope: !12216)
!12227 = !DILocation(line: 494, column: 16, scope: !12216)
!12228 = !DILocation(line: 494, column: 14, scope: !12216)
!12229 = !DILocation(line: 494, column: 3, scope: !12216)
!12230 = distinct !DISubprogram(name: "raw_comparator", scope: !1159, file: !1159, line: 499, type: !337, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12231 = !DILocalVariable(name: "a", arg: 1, scope: !12230, file: !1159, line: 499, type: !181)
!12232 = !DILocation(line: 499, column: 29, scope: !12230)
!12233 = !DILocalVariable(name: "b", arg: 2, scope: !12230, file: !1159, line: 499, type: !181)
!12234 = !DILocation(line: 499, column: 44, scope: !12230)
!12235 = !DILocation(line: 501, column: 10, scope: !12230)
!12236 = !DILocation(line: 501, column: 15, scope: !12230)
!12237 = !DILocation(line: 501, column: 12, scope: !12230)
!12238 = !DILocation(line: 501, column: 3, scope: !12230)
!12239 = distinct !DISubprogram(name: "check_tuning", scope: !1159, file: !1159, line: 512, type: !1262, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12240 = !DILocalVariable(name: "table", arg: 1, scope: !12239, file: !1159, line: 512, type: !1251)
!12241 = !DILocation(line: 512, column: 27, scope: !12239)
!12242 = !DILocalVariable(name: "tuning", scope: !12239, file: !1159, line: 514, type: !1174)
!12243 = !DILocation(line: 514, column: 22, scope: !12239)
!12244 = !DILocation(line: 514, column: 31, scope: !12239)
!12245 = !DILocation(line: 514, column: 38, scope: !12239)
!12246 = !DILocalVariable(name: "epsilon", scope: !12239, file: !1159, line: 515, type: !1180)
!12247 = !DILocation(line: 515, column: 9, scope: !12239)
!12248 = !DILocation(line: 516, column: 7, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12239, file: !1159, line: 516, column: 7)
!12250 = !DILocation(line: 516, column: 14, scope: !12249)
!12251 = !DILocation(line: 516, column: 7, scope: !12239)
!12252 = !DILocation(line: 517, column: 5, scope: !12249)
!12253 = !DILocation(line: 524, column: 11, scope: !12239)
!12254 = !DILocation(line: 526, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12239, file: !1159, line: 526, column: 7)
!12256 = !DILocation(line: 526, column: 17, scope: !12255)
!12257 = !DILocation(line: 526, column: 25, scope: !12255)
!12258 = !{!12259, !12104, i64 8}
!12259 = !{!"hash_tuning", !12104, i64 0, !12104, i64 4, !12104, i64 8, !12104, i64 12, !2462, i64 16}
!12260 = !DILocation(line: 526, column: 15, scope: !12255)
!12261 = !DILocation(line: 527, column: 7, scope: !12255)
!12262 = !DILocation(line: 527, column: 10, scope: !12255)
!12263 = !DILocation(line: 527, column: 18, scope: !12255)
!12264 = !DILocation(line: 527, column: 41, scope: !12255)
!12265 = !DILocation(line: 527, column: 39, scope: !12255)
!12266 = !DILocation(line: 527, column: 35, scope: !12255)
!12267 = !DILocation(line: 528, column: 7, scope: !12255)
!12268 = !DILocation(line: 528, column: 14, scope: !12255)
!12269 = !DILocation(line: 528, column: 12, scope: !12255)
!12270 = !DILocation(line: 528, column: 24, scope: !12255)
!12271 = !DILocation(line: 528, column: 32, scope: !12255)
!12272 = !{!12259, !12104, i64 12}
!12273 = !DILocation(line: 528, column: 22, scope: !12255)
!12274 = !DILocation(line: 529, column: 7, scope: !12255)
!12275 = !DILocation(line: 529, column: 15, scope: !12255)
!12276 = !DILocation(line: 529, column: 23, scope: !12255)
!12277 = !{!12259, !12104, i64 0}
!12278 = !DILocation(line: 529, column: 12, scope: !12255)
!12279 = !DILocation(line: 530, column: 7, scope: !12255)
!12280 = !DILocation(line: 530, column: 10, scope: !12255)
!12281 = !DILocation(line: 530, column: 18, scope: !12255)
!12282 = !DILocation(line: 530, column: 37, scope: !12255)
!12283 = !DILocation(line: 530, column: 35, scope: !12255)
!12284 = !DILocation(line: 530, column: 47, scope: !12255)
!12285 = !DILocation(line: 530, column: 55, scope: !12255)
!12286 = !{!12259, !12104, i64 4}
!12287 = !DILocation(line: 530, column: 45, scope: !12255)
!12288 = !DILocation(line: 531, column: 7, scope: !12255)
!12289 = !DILocation(line: 531, column: 10, scope: !12255)
!12290 = !DILocation(line: 531, column: 18, scope: !12255)
!12291 = !DILocation(line: 531, column: 32, scope: !12255)
!12292 = !DILocation(line: 532, column: 7, scope: !12255)
!12293 = !DILocation(line: 532, column: 10, scope: !12255)
!12294 = !DILocation(line: 532, column: 18, scope: !12255)
!12295 = !DILocation(line: 532, column: 37, scope: !12255)
!12296 = !DILocation(line: 532, column: 35, scope: !12255)
!12297 = !DILocation(line: 532, column: 47, scope: !12255)
!12298 = !DILocation(line: 532, column: 55, scope: !12255)
!12299 = !DILocation(line: 532, column: 45, scope: !12255)
!12300 = !DILocation(line: 526, column: 7, scope: !12239)
!12301 = !DILocation(line: 533, column: 5, scope: !12255)
!12302 = !DILocation(line: 535, column: 3, scope: !12239)
!12303 = !DILocation(line: 535, column: 10, scope: !12239)
!12304 = !DILocation(line: 535, column: 17, scope: !12239)
!12305 = !DILocation(line: 536, column: 3, scope: !12239)
!12306 = !DILocation(line: 537, column: 1, scope: !12239)
!12307 = distinct !DISubprogram(name: "compute_bucket_size", scope: !1159, file: !1159, line: 544, type: !1264, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12308 = !DILocalVariable(name: "candidate", arg: 1, scope: !12307, file: !1159, line: 544, type: !149)
!12309 = !DILocation(line: 544, column: 29, scope: !12307)
!12310 = !DILocalVariable(name: "tuning", arg: 2, scope: !12307, file: !1159, line: 544, type: !1174)
!12311 = !DILocation(line: 544, column: 59, scope: !12307)
!12312 = !DILocation(line: 546, column: 8, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12307, file: !1159, line: 546, column: 7)
!12314 = !DILocation(line: 546, column: 16, scope: !12313)
!12315 = !{!12259, !2462, i64 16}
!12316 = !DILocation(line: 546, column: 7, scope: !12307)
!12317 = !DILocalVariable(name: "new_candidate", scope: !12318, file: !1159, line: 548, type: !1180)
!12318 = distinct !DILexicalBlock(scope: !12313, file: !1159, line: 547, column: 5)
!12319 = !DILocation(line: 548, column: 13, scope: !12318)
!12320 = !DILocation(line: 548, column: 29, scope: !12318)
!12321 = !DILocation(line: 548, column: 41, scope: !12318)
!12322 = !DILocation(line: 548, column: 49, scope: !12318)
!12323 = !DILocation(line: 548, column: 39, scope: !12318)
!12324 = !DILocation(line: 549, column: 23, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12318, file: !1159, line: 549, column: 11)
!12326 = !DILocation(line: 549, column: 20, scope: !12325)
!12327 = !DILocation(line: 549, column: 11, scope: !12318)
!12328 = !DILocation(line: 550, column: 9, scope: !12325)
!12329 = !DILocation(line: 551, column: 19, scope: !12318)
!12330 = !DILocation(line: 551, column: 17, scope: !12318)
!12331 = !DILocation(line: 552, column: 5, scope: !12318)
!12332 = !DILocation(line: 553, column: 27, scope: !12307)
!12333 = !DILocation(line: 553, column: 15, scope: !12307)
!12334 = !DILocation(line: 553, column: 13, scope: !12307)
!12335 = !DILocation(line: 554, column: 7, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12307, file: !1159, line: 554, column: 7)
!12337 = !DILocation(line: 554, column: 7, scope: !12307)
!12338 = !DILocation(line: 555, column: 5, scope: !12336)
!12339 = !DILocation(line: 556, column: 10, scope: !12307)
!12340 = !DILocation(line: 556, column: 3, scope: !12307)
!12341 = !DILocation(line: 557, column: 1, scope: !12307)
!12342 = distinct !DISubprogram(name: "next_prime", scope: !1159, file: !1159, line: 463, type: !1266, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12343 = !DILocalVariable(name: "candidate", arg: 1, scope: !12342, file: !1159, line: 463, type: !149)
!12344 = !DILocation(line: 463, column: 20, scope: !12342)
!12345 = !DILocation(line: 466, column: 7, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12342, file: !1159, line: 466, column: 7)
!12347 = !DILocation(line: 466, column: 17, scope: !12346)
!12348 = !DILocation(line: 466, column: 7, scope: !12342)
!12349 = !DILocation(line: 467, column: 15, scope: !12346)
!12350 = !DILocation(line: 467, column: 5, scope: !12346)
!12351 = !DILocation(line: 470, column: 13, scope: !12342)
!12352 = !DILocation(line: 472, column: 3, scope: !12342)
!12353 = !DILocation(line: 472, column: 22, scope: !12342)
!12354 = !DILocation(line: 472, column: 19, scope: !12342)
!12355 = !DILocation(line: 472, column: 32, scope: !12342)
!12356 = !DILocation(line: 472, column: 46, scope: !12342)
!12357 = !DILocation(line: 472, column: 36, scope: !12342)
!12358 = !DILocation(line: 472, column: 35, scope: !12342)
!12359 = !DILocation(line: 0, scope: !12342)
!12360 = !DILocation(line: 473, column: 15, scope: !12342)
!12361 = distinct !{!12361, !12352, !12362}
!12362 = !DILocation(line: 473, column: 18, scope: !12342)
!12363 = !DILocation(line: 475, column: 10, scope: !12342)
!12364 = !DILocation(line: 475, column: 3, scope: !12342)
!12365 = distinct !DISubprogram(name: "is_prime", scope: !1159, file: !1159, line: 444, type: !1268, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12366 = !DILocalVariable(name: "candidate", arg: 1, scope: !12365, file: !1159, line: 444, type: !149)
!12367 = !DILocation(line: 444, column: 18, scope: !12365)
!12368 = !DILocalVariable(name: "divisor", scope: !12365, file: !1159, line: 446, type: !149)
!12369 = !DILocation(line: 446, column: 10, scope: !12365)
!12370 = !DILocalVariable(name: "square", scope: !12365, file: !1159, line: 447, type: !149)
!12371 = !DILocation(line: 447, column: 10, scope: !12365)
!12372 = !DILocation(line: 447, column: 19, scope: !12365)
!12373 = !DILocation(line: 447, column: 29, scope: !12365)
!12374 = !DILocation(line: 447, column: 27, scope: !12365)
!12375 = !DILocation(line: 449, column: 3, scope: !12365)
!12376 = !DILocation(line: 449, column: 10, scope: !12365)
!12377 = !DILocation(line: 449, column: 19, scope: !12365)
!12378 = !DILocation(line: 449, column: 17, scope: !12365)
!12379 = !DILocation(line: 449, column: 29, scope: !12365)
!12380 = !DILocation(line: 449, column: 33, scope: !12365)
!12381 = !DILocation(line: 449, column: 45, scope: !12365)
!12382 = !DILocation(line: 449, column: 43, scope: !12365)
!12383 = !DILocation(line: 0, scope: !12365)
!12384 = !DILocation(line: 451, column: 14, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12365, file: !1159, line: 450, column: 5)
!12386 = !DILocation(line: 452, column: 21, scope: !12385)
!12387 = !DILocation(line: 452, column: 19, scope: !12385)
!12388 = !DILocation(line: 452, column: 14, scope: !12385)
!12389 = !DILocation(line: 453, column: 14, scope: !12385)
!12390 = distinct !{!12390, !12375, !12391}
!12391 = !DILocation(line: 454, column: 5, scope: !12365)
!12392 = !DILocation(line: 456, column: 11, scope: !12365)
!12393 = !DILocation(line: 456, column: 23, scope: !12365)
!12394 = !DILocation(line: 456, column: 21, scope: !12365)
!12395 = !DILocation(line: 456, column: 10, scope: !12365)
!12396 = !DILocation(line: 456, column: 3, scope: !12365)
!12397 = distinct !DISubprogram(name: "hash_clear", scope: !1159, file: !1159, line: 653, type: !1252, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12398 = !DILocalVariable(name: "table", arg: 1, scope: !12397, file: !1159, line: 653, type: !1251)
!12399 = !DILocation(line: 653, column: 25, scope: !12397)
!12400 = !DILocalVariable(name: "bucket", scope: !12397, file: !1159, line: 655, type: !1162)
!12401 = !DILocation(line: 655, column: 22, scope: !12397)
!12402 = !DILocation(line: 657, column: 17, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12397, file: !1159, line: 657, column: 3)
!12404 = !DILocation(line: 657, column: 24, scope: !12403)
!12405 = !DILocation(line: 657, column: 15, scope: !12403)
!12406 = !DILocation(line: 657, column: 8, scope: !12403)
!12407 = !DILocation(line: 657, column: 32, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12403, file: !1159, line: 657, column: 3)
!12409 = !DILocation(line: 657, column: 41, scope: !12408)
!12410 = !DILocation(line: 657, column: 48, scope: !12408)
!12411 = !DILocation(line: 657, column: 39, scope: !12408)
!12412 = !DILocation(line: 657, column: 3, scope: !12403)
!12413 = !DILocation(line: 659, column: 11, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !1159, line: 659, column: 11)
!12415 = distinct !DILexicalBlock(scope: !12408, file: !1159, line: 658, column: 5)
!12416 = !DILocation(line: 659, column: 19, scope: !12414)
!12417 = !DILocation(line: 659, column: 11, scope: !12415)
!12418 = !DILocalVariable(name: "cursor", scope: !12419, file: !1159, line: 661, type: !1162)
!12419 = distinct !DILexicalBlock(scope: !12414, file: !1159, line: 660, column: 9)
!12420 = !DILocation(line: 661, column: 30, scope: !12419)
!12421 = !DILocalVariable(name: "next", scope: !12419, file: !1159, line: 662, type: !1162)
!12422 = !DILocation(line: 662, column: 30, scope: !12419)
!12423 = !DILocation(line: 665, column: 25, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12419, file: !1159, line: 665, column: 11)
!12425 = !DILocation(line: 665, column: 33, scope: !12424)
!12426 = !DILocation(line: 665, column: 23, scope: !12424)
!12427 = !DILocation(line: 665, column: 16, scope: !12424)
!12428 = !DILocation(line: 665, column: 39, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12424, file: !1159, line: 665, column: 11)
!12430 = !DILocation(line: 665, column: 11, scope: !12424)
!12431 = !DILocation(line: 667, column: 19, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !1159, line: 667, column: 19)
!12433 = distinct !DILexicalBlock(scope: !12429, file: !1159, line: 666, column: 13)
!12434 = !DILocation(line: 667, column: 26, scope: !12432)
!12435 = !DILocation(line: 667, column: 19, scope: !12433)
!12436 = !DILocation(line: 668, column: 17, scope: !12432)
!12437 = !DILocation(line: 668, column: 24, scope: !12432)
!12438 = !DILocation(line: 668, column: 36, scope: !12432)
!12439 = !DILocation(line: 668, column: 44, scope: !12432)
!12440 = !DILocation(line: 669, column: 15, scope: !12433)
!12441 = !DILocation(line: 669, column: 23, scope: !12433)
!12442 = !DILocation(line: 669, column: 28, scope: !12433)
!12443 = !DILocation(line: 671, column: 22, scope: !12433)
!12444 = !DILocation(line: 671, column: 30, scope: !12433)
!12445 = !DILocation(line: 671, column: 20, scope: !12433)
!12446 = !DILocation(line: 674, column: 30, scope: !12433)
!12447 = !DILocation(line: 674, column: 37, scope: !12433)
!12448 = !DILocation(line: 674, column: 15, scope: !12433)
!12449 = !DILocation(line: 674, column: 23, scope: !12433)
!12450 = !DILocation(line: 674, column: 28, scope: !12433)
!12451 = !DILocation(line: 675, column: 40, scope: !12433)
!12452 = !DILocation(line: 675, column: 15, scope: !12433)
!12453 = !DILocation(line: 675, column: 22, scope: !12433)
!12454 = !DILocation(line: 675, column: 38, scope: !12433)
!12455 = !DILocation(line: 676, column: 13, scope: !12433)
!12456 = !DILocation(line: 665, column: 56, scope: !12429)
!12457 = !DILocation(line: 665, column: 54, scope: !12429)
!12458 = !DILocation(line: 665, column: 11, scope: !12429)
!12459 = distinct !{!12459, !12430, !12460}
!12460 = !DILocation(line: 676, column: 13, scope: !12424)
!12461 = !DILocation(line: 679, column: 15, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12419, file: !1159, line: 679, column: 15)
!12463 = !DILocation(line: 679, column: 22, scope: !12462)
!12464 = !DILocation(line: 679, column: 15, scope: !12419)
!12465 = !DILocation(line: 680, column: 13, scope: !12462)
!12466 = !DILocation(line: 680, column: 20, scope: !12462)
!12467 = !DILocation(line: 680, column: 32, scope: !12462)
!12468 = !DILocation(line: 680, column: 40, scope: !12462)
!12469 = !DILocation(line: 681, column: 11, scope: !12419)
!12470 = !DILocation(line: 681, column: 19, scope: !12419)
!12471 = !DILocation(line: 681, column: 24, scope: !12419)
!12472 = !DILocation(line: 682, column: 11, scope: !12419)
!12473 = !DILocation(line: 682, column: 19, scope: !12419)
!12474 = !DILocation(line: 682, column: 24, scope: !12419)
!12475 = !DILocation(line: 683, column: 9, scope: !12419)
!12476 = !DILocation(line: 684, column: 5, scope: !12415)
!12477 = !DILocation(line: 657, column: 68, scope: !12408)
!12478 = !DILocation(line: 657, column: 3, scope: !12408)
!12479 = distinct !{!12479, !12412, !12480}
!12480 = !DILocation(line: 684, column: 5, scope: !12403)
!12481 = !DILocation(line: 686, column: 3, scope: !12397)
!12482 = !DILocation(line: 686, column: 10, scope: !12397)
!12483 = !DILocation(line: 686, column: 25, scope: !12397)
!12484 = !DILocation(line: 687, column: 3, scope: !12397)
!12485 = !DILocation(line: 687, column: 10, scope: !12397)
!12486 = !DILocation(line: 687, column: 20, scope: !12397)
!12487 = !DILocation(line: 688, column: 1, scope: !12397)
!12488 = distinct !DISubprogram(name: "hash_free", scope: !1159, file: !1159, line: 696, type: !1252, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12489 = !DILocalVariable(name: "table", arg: 1, scope: !12488, file: !1159, line: 696, type: !1251)
!12490 = !DILocation(line: 696, column: 24, scope: !12488)
!12491 = !DILocalVariable(name: "bucket", scope: !12488, file: !1159, line: 698, type: !1162)
!12492 = !DILocation(line: 698, column: 22, scope: !12488)
!12493 = !DILocalVariable(name: "cursor", scope: !12488, file: !1159, line: 699, type: !1162)
!12494 = !DILocation(line: 699, column: 22, scope: !12488)
!12495 = !DILocalVariable(name: "next", scope: !12488, file: !1159, line: 700, type: !1162)
!12496 = !DILocation(line: 700, column: 22, scope: !12488)
!12497 = !DILocation(line: 703, column: 7, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12488, file: !1159, line: 703, column: 7)
!12499 = !DILocation(line: 703, column: 14, scope: !12498)
!12500 = !DILocation(line: 703, column: 25, scope: !12498)
!12501 = !DILocation(line: 703, column: 28, scope: !12498)
!12502 = !DILocation(line: 703, column: 35, scope: !12498)
!12503 = !DILocation(line: 703, column: 7, scope: !12488)
!12504 = !DILocation(line: 705, column: 21, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !1159, line: 705, column: 7)
!12506 = distinct !DILexicalBlock(scope: !12498, file: !1159, line: 704, column: 5)
!12507 = !DILocation(line: 705, column: 28, scope: !12505)
!12508 = !DILocation(line: 705, column: 19, scope: !12505)
!12509 = !DILocation(line: 705, column: 12, scope: !12505)
!12510 = !DILocation(line: 705, column: 36, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12505, file: !1159, line: 705, column: 7)
!12512 = !DILocation(line: 705, column: 45, scope: !12511)
!12513 = !DILocation(line: 705, column: 52, scope: !12511)
!12514 = !DILocation(line: 705, column: 43, scope: !12511)
!12515 = !DILocation(line: 705, column: 7, scope: !12505)
!12516 = !DILocation(line: 707, column: 15, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !1159, line: 707, column: 15)
!12518 = distinct !DILexicalBlock(scope: !12511, file: !1159, line: 706, column: 9)
!12519 = !DILocation(line: 707, column: 23, scope: !12517)
!12520 = !DILocation(line: 707, column: 15, scope: !12518)
!12521 = !DILocation(line: 709, column: 29, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !1159, line: 709, column: 15)
!12523 = distinct !DILexicalBlock(scope: !12517, file: !1159, line: 708, column: 13)
!12524 = !DILocation(line: 709, column: 27, scope: !12522)
!12525 = !DILocation(line: 709, column: 20, scope: !12522)
!12526 = !DILocation(line: 709, column: 37, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12522, file: !1159, line: 709, column: 15)
!12528 = !DILocation(line: 709, column: 15, scope: !12522)
!12529 = !DILocation(line: 710, column: 17, scope: !12527)
!12530 = !DILocation(line: 710, column: 24, scope: !12527)
!12531 = !DILocation(line: 710, column: 36, scope: !12527)
!12532 = !DILocation(line: 710, column: 44, scope: !12527)
!12533 = !DILocation(line: 709, column: 54, scope: !12527)
!12534 = !DILocation(line: 709, column: 62, scope: !12527)
!12535 = !DILocation(line: 709, column: 52, scope: !12527)
!12536 = !DILocation(line: 709, column: 15, scope: !12527)
!12537 = distinct !{!12537, !12528, !12538}
!12538 = !DILocation(line: 710, column: 48, scope: !12522)
!12539 = !DILocation(line: 711, column: 13, scope: !12523)
!12540 = !DILocation(line: 712, column: 9, scope: !12518)
!12541 = !DILocation(line: 705, column: 72, scope: !12511)
!12542 = !DILocation(line: 705, column: 7, scope: !12511)
!12543 = distinct !{!12543, !12515, !12544}
!12544 = !DILocation(line: 712, column: 9, scope: !12505)
!12545 = !DILocation(line: 713, column: 5, scope: !12506)
!12546 = !DILocation(line: 722, column: 17, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12488, file: !1159, line: 722, column: 3)
!12548 = !DILocation(line: 722, column: 24, scope: !12547)
!12549 = !DILocation(line: 722, column: 15, scope: !12547)
!12550 = !DILocation(line: 722, column: 8, scope: !12547)
!12551 = !DILocation(line: 722, column: 32, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12547, file: !1159, line: 722, column: 3)
!12553 = !DILocation(line: 722, column: 41, scope: !12552)
!12554 = !DILocation(line: 722, column: 48, scope: !12552)
!12555 = !DILocation(line: 722, column: 39, scope: !12552)
!12556 = !DILocation(line: 722, column: 3, scope: !12547)
!12557 = !DILocation(line: 724, column: 21, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12559, file: !1159, line: 724, column: 7)
!12559 = distinct !DILexicalBlock(scope: !12552, file: !1159, line: 723, column: 5)
!12560 = !DILocation(line: 724, column: 29, scope: !12558)
!12561 = !DILocation(line: 724, column: 19, scope: !12558)
!12562 = !DILocation(line: 724, column: 12, scope: !12558)
!12563 = !DILocation(line: 724, column: 35, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12558, file: !1159, line: 724, column: 7)
!12565 = !DILocation(line: 724, column: 7, scope: !12558)
!12566 = !DILocation(line: 726, column: 18, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12564, file: !1159, line: 725, column: 9)
!12568 = !DILocation(line: 726, column: 26, scope: !12567)
!12569 = !DILocation(line: 726, column: 16, scope: !12567)
!12570 = !DILocation(line: 727, column: 17, scope: !12567)
!12571 = !DILocation(line: 727, column: 11, scope: !12567)
!12572 = !DILocation(line: 728, column: 9, scope: !12567)
!12573 = !DILocation(line: 724, column: 52, scope: !12564)
!12574 = !DILocation(line: 724, column: 50, scope: !12564)
!12575 = !DILocation(line: 724, column: 7, scope: !12564)
!12576 = distinct !{!12576, !12565, !12577}
!12577 = !DILocation(line: 728, column: 9, scope: !12558)
!12578 = !DILocation(line: 729, column: 5, scope: !12559)
!12579 = !DILocation(line: 722, column: 68, scope: !12552)
!12580 = !DILocation(line: 722, column: 3, scope: !12552)
!12581 = distinct !{!12581, !12556, !12582}
!12582 = !DILocation(line: 729, column: 5, scope: !12547)
!12583 = !DILocation(line: 732, column: 17, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12488, file: !1159, line: 732, column: 3)
!12585 = !DILocation(line: 732, column: 24, scope: !12584)
!12586 = !DILocation(line: 732, column: 15, scope: !12584)
!12587 = !DILocation(line: 732, column: 8, scope: !12584)
!12588 = !DILocation(line: 732, column: 41, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12584, file: !1159, line: 732, column: 3)
!12590 = !DILocation(line: 732, column: 3, scope: !12584)
!12591 = !DILocation(line: 734, column: 14, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12589, file: !1159, line: 733, column: 5)
!12593 = !DILocation(line: 734, column: 22, scope: !12592)
!12594 = !DILocation(line: 734, column: 12, scope: !12592)
!12595 = !DILocation(line: 735, column: 13, scope: !12592)
!12596 = !DILocation(line: 735, column: 7, scope: !12592)
!12597 = !DILocation(line: 736, column: 5, scope: !12592)
!12598 = !DILocation(line: 732, column: 58, scope: !12589)
!12599 = !DILocation(line: 732, column: 56, scope: !12589)
!12600 = !DILocation(line: 732, column: 3, scope: !12589)
!12601 = distinct !{!12601, !12590, !12602}
!12602 = !DILocation(line: 736, column: 5, scope: !12584)
!12603 = !DILocation(line: 741, column: 9, scope: !12488)
!12604 = !DILocation(line: 741, column: 16, scope: !12488)
!12605 = !DILocation(line: 741, column: 3, scope: !12488)
!12606 = !DILocation(line: 742, column: 9, scope: !12488)
!12607 = !DILocation(line: 742, column: 3, scope: !12488)
!12608 = !DILocation(line: 743, column: 1, scope: !12488)
!12609 = distinct !DISubprogram(name: "hash_rehash", scope: !1159, file: !1159, line: 943, type: !1254, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12610 = !DILocalVariable(name: "table", arg: 1, scope: !12609, file: !1159, line: 943, type: !1251)
!12611 = !DILocation(line: 943, column: 26, scope: !12609)
!12612 = !DILocalVariable(name: "candidate", arg: 2, scope: !12609, file: !1159, line: 943, type: !149)
!12613 = !DILocation(line: 943, column: 40, scope: !12609)
!12614 = !DILocalVariable(name: "storage", scope: !12609, file: !1159, line: 945, type: !1157)
!12615 = !DILocation(line: 945, column: 14, scope: !12609)
!12616 = !DILocalVariable(name: "new_table", scope: !12609, file: !1159, line: 946, type: !1251)
!12617 = !DILocation(line: 946, column: 15, scope: !12609)
!12618 = !DILocalVariable(name: "new_size", scope: !12609, file: !1159, line: 947, type: !149)
!12619 = !DILocation(line: 947, column: 10, scope: !12609)
!12620 = !DILocation(line: 947, column: 42, scope: !12609)
!12621 = !DILocation(line: 947, column: 53, scope: !12609)
!12622 = !DILocation(line: 947, column: 60, scope: !12609)
!12623 = !DILocation(line: 947, column: 21, scope: !12609)
!12624 = !DILocation(line: 949, column: 8, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12609, file: !1159, line: 949, column: 7)
!12626 = !DILocation(line: 949, column: 7, scope: !12609)
!12627 = !DILocation(line: 950, column: 5, scope: !12625)
!12628 = !DILocation(line: 951, column: 7, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12609, file: !1159, line: 951, column: 7)
!12630 = !DILocation(line: 951, column: 19, scope: !12629)
!12631 = !DILocation(line: 951, column: 26, scope: !12629)
!12632 = !DILocation(line: 951, column: 16, scope: !12629)
!12633 = !DILocation(line: 951, column: 7, scope: !12609)
!12634 = !DILocation(line: 952, column: 5, scope: !12629)
!12635 = !DILocation(line: 953, column: 13, scope: !12609)
!12636 = !DILocation(line: 954, column: 31, scope: !12609)
!12637 = !DILocation(line: 954, column: 23, scope: !12609)
!12638 = !DILocation(line: 954, column: 3, scope: !12609)
!12639 = !DILocation(line: 954, column: 14, scope: !12609)
!12640 = !DILocation(line: 954, column: 21, scope: !12609)
!12641 = !DILocation(line: 955, column: 7, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12609, file: !1159, line: 955, column: 7)
!12643 = !DILocation(line: 955, column: 18, scope: !12642)
!12644 = !DILocation(line: 955, column: 25, scope: !12642)
!12645 = !DILocation(line: 955, column: 7, scope: !12609)
!12646 = !DILocation(line: 956, column: 5, scope: !12642)
!12647 = !DILocation(line: 957, column: 26, scope: !12609)
!12648 = !DILocation(line: 957, column: 3, scope: !12609)
!12649 = !DILocation(line: 957, column: 14, scope: !12609)
!12650 = !DILocation(line: 957, column: 24, scope: !12609)
!12651 = !DILocation(line: 958, column: 29, scope: !12609)
!12652 = !DILocation(line: 958, column: 40, scope: !12609)
!12653 = !DILocation(line: 958, column: 49, scope: !12609)
!12654 = !DILocation(line: 958, column: 47, scope: !12609)
!12655 = !DILocation(line: 958, column: 3, scope: !12609)
!12656 = !DILocation(line: 958, column: 14, scope: !12609)
!12657 = !DILocation(line: 958, column: 27, scope: !12609)
!12658 = !DILocation(line: 959, column: 3, scope: !12609)
!12659 = !DILocation(line: 959, column: 14, scope: !12609)
!12660 = !DILocation(line: 959, column: 29, scope: !12609)
!12661 = !DILocation(line: 960, column: 3, scope: !12609)
!12662 = !DILocation(line: 960, column: 14, scope: !12609)
!12663 = !DILocation(line: 960, column: 24, scope: !12609)
!12664 = !DILocation(line: 961, column: 23, scope: !12609)
!12665 = !DILocation(line: 961, column: 30, scope: !12609)
!12666 = !DILocation(line: 961, column: 3, scope: !12609)
!12667 = !DILocation(line: 961, column: 14, scope: !12609)
!12668 = !DILocation(line: 961, column: 21, scope: !12609)
!12669 = !DILocation(line: 962, column: 23, scope: !12609)
!12670 = !DILocation(line: 962, column: 30, scope: !12609)
!12671 = !DILocation(line: 962, column: 3, scope: !12609)
!12672 = !DILocation(line: 962, column: 14, scope: !12609)
!12673 = !DILocation(line: 962, column: 21, scope: !12609)
!12674 = !DILocation(line: 963, column: 27, scope: !12609)
!12675 = !DILocation(line: 963, column: 34, scope: !12609)
!12676 = !DILocation(line: 963, column: 3, scope: !12609)
!12677 = !DILocation(line: 963, column: 14, scope: !12609)
!12678 = !DILocation(line: 963, column: 25, scope: !12609)
!12679 = !DILocation(line: 964, column: 27, scope: !12609)
!12680 = !DILocation(line: 964, column: 34, scope: !12609)
!12681 = !DILocation(line: 964, column: 3, scope: !12609)
!12682 = !DILocation(line: 964, column: 14, scope: !12609)
!12683 = !DILocation(line: 964, column: 25, scope: !12609)
!12684 = !DILocation(line: 984, column: 32, scope: !12609)
!12685 = !DILocation(line: 984, column: 39, scope: !12609)
!12686 = !DILocation(line: 984, column: 3, scope: !12609)
!12687 = !DILocation(line: 984, column: 14, scope: !12609)
!12688 = !DILocation(line: 984, column: 30, scope: !12609)
!12689 = !DILocation(line: 986, column: 25, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12609, file: !1159, line: 986, column: 7)
!12691 = !DILocation(line: 986, column: 36, scope: !12690)
!12692 = !DILocation(line: 986, column: 7, scope: !12690)
!12693 = !DILocation(line: 986, column: 7, scope: !12609)
!12694 = !DILocation(line: 989, column: 13, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12690, file: !1159, line: 987, column: 5)
!12696 = !DILocation(line: 989, column: 20, scope: !12695)
!12697 = !DILocation(line: 989, column: 7, scope: !12695)
!12698 = !DILocation(line: 990, column: 23, scope: !12695)
!12699 = !DILocation(line: 990, column: 34, scope: !12695)
!12700 = !DILocation(line: 990, column: 7, scope: !12695)
!12701 = !DILocation(line: 990, column: 14, scope: !12695)
!12702 = !DILocation(line: 990, column: 21, scope: !12695)
!12703 = !DILocation(line: 991, column: 29, scope: !12695)
!12704 = !DILocation(line: 991, column: 40, scope: !12695)
!12705 = !DILocation(line: 991, column: 7, scope: !12695)
!12706 = !DILocation(line: 991, column: 14, scope: !12695)
!12707 = !DILocation(line: 991, column: 27, scope: !12695)
!12708 = !DILocation(line: 992, column: 26, scope: !12695)
!12709 = !DILocation(line: 992, column: 37, scope: !12695)
!12710 = !DILocation(line: 992, column: 7, scope: !12695)
!12711 = !DILocation(line: 992, column: 14, scope: !12695)
!12712 = !DILocation(line: 992, column: 24, scope: !12695)
!12713 = !DILocation(line: 993, column: 31, scope: !12695)
!12714 = !DILocation(line: 993, column: 42, scope: !12695)
!12715 = !DILocation(line: 993, column: 7, scope: !12695)
!12716 = !DILocation(line: 993, column: 14, scope: !12695)
!12717 = !DILocation(line: 993, column: 29, scope: !12695)
!12718 = !DILocation(line: 994, column: 32, scope: !12695)
!12719 = !DILocation(line: 994, column: 43, scope: !12695)
!12720 = !DILocation(line: 994, column: 7, scope: !12695)
!12721 = !DILocation(line: 994, column: 14, scope: !12695)
!12722 = !DILocation(line: 994, column: 30, scope: !12695)
!12723 = !DILocation(line: 996, column: 7, scope: !12695)
!12724 = !DILocation(line: 1012, column: 28, scope: !12609)
!12725 = !DILocation(line: 1012, column: 39, scope: !12609)
!12726 = !DILocation(line: 1012, column: 3, scope: !12609)
!12727 = !DILocation(line: 1012, column: 10, scope: !12609)
!12728 = !DILocation(line: 1012, column: 26, scope: !12609)
!12729 = !DILocation(line: 1013, column: 28, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12609, file: !1159, line: 1013, column: 7)
!12731 = !DILocation(line: 1013, column: 35, scope: !12730)
!12732 = !DILocation(line: 1013, column: 10, scope: !12730)
!12733 = !DILocation(line: 1014, column: 10, scope: !12730)
!12734 = !DILocation(line: 1014, column: 31, scope: !12730)
!12735 = !DILocation(line: 1014, column: 38, scope: !12730)
!12736 = !DILocation(line: 1014, column: 13, scope: !12730)
!12737 = !DILocation(line: 1013, column: 7, scope: !12609)
!12738 = !DILocation(line: 1015, column: 5, scope: !12730)
!12739 = !DILocation(line: 1017, column: 9, scope: !12609)
!12740 = !DILocation(line: 1017, column: 20, scope: !12609)
!12741 = !DILocation(line: 1017, column: 3, scope: !12609)
!12742 = !DILocation(line: 1018, column: 3, scope: !12609)
!12743 = !DILocation(line: 1019, column: 1, scope: !12609)
!12744 = distinct !DISubprogram(name: "transfer_entries", scope: !1159, file: !1159, line: 860, type: !1270, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12745 = !DILocalVariable(name: "dst", arg: 1, scope: !12744, file: !1159, line: 860, type: !1251)
!12746 = !DILocation(line: 860, column: 31, scope: !12744)
!12747 = !DILocalVariable(name: "src", arg: 2, scope: !12744, file: !1159, line: 860, type: !1251)
!12748 = !DILocation(line: 860, column: 48, scope: !12744)
!12749 = !DILocalVariable(name: "safe", arg: 3, scope: !12744, file: !1159, line: 860, type: !141)
!12750 = !DILocation(line: 860, column: 58, scope: !12744)
!12751 = !DILocalVariable(name: "bucket", scope: !12744, file: !1159, line: 862, type: !1162)
!12752 = !DILocation(line: 862, column: 22, scope: !12744)
!12753 = !DILocalVariable(name: "cursor", scope: !12744, file: !1159, line: 863, type: !1162)
!12754 = !DILocation(line: 863, column: 22, scope: !12744)
!12755 = !DILocalVariable(name: "next", scope: !12744, file: !1159, line: 864, type: !1162)
!12756 = !DILocation(line: 864, column: 22, scope: !12744)
!12757 = !DILocation(line: 865, column: 17, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12744, file: !1159, line: 865, column: 3)
!12759 = !DILocation(line: 865, column: 22, scope: !12758)
!12760 = !DILocation(line: 865, column: 15, scope: !12758)
!12761 = !DILocation(line: 865, column: 8, scope: !12758)
!12762 = !DILocation(line: 865, column: 30, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12758, file: !1159, line: 865, column: 3)
!12764 = !DILocation(line: 865, column: 39, scope: !12763)
!12765 = !DILocation(line: 865, column: 44, scope: !12763)
!12766 = !DILocation(line: 865, column: 37, scope: !12763)
!12767 = !DILocation(line: 865, column: 3, scope: !12758)
!12768 = !DILocation(line: 866, column: 9, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12763, file: !1159, line: 866, column: 9)
!12770 = !DILocation(line: 866, column: 17, scope: !12769)
!12771 = !DILocation(line: 866, column: 9, scope: !12763)
!12772 = !DILocalVariable(name: "data", scope: !12773, file: !1159, line: 868, type: !167)
!12773 = distinct !DILexicalBlock(scope: !12769, file: !1159, line: 867, column: 7)
!12774 = !DILocation(line: 868, column: 15, scope: !12773)
!12775 = !DILocalVariable(name: "new_bucket", scope: !12773, file: !1159, line: 869, type: !1162)
!12776 = !DILocation(line: 869, column: 28, scope: !12773)
!12777 = !DILocation(line: 877, column: 23, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12773, file: !1159, line: 877, column: 9)
!12779 = !DILocation(line: 877, column: 31, scope: !12778)
!12780 = !DILocation(line: 877, column: 21, scope: !12778)
!12781 = !DILocation(line: 877, column: 14, scope: !12778)
!12782 = !DILocation(line: 877, column: 37, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12778, file: !1159, line: 877, column: 9)
!12784 = !DILocation(line: 877, column: 9, scope: !12778)
!12785 = !DILocation(line: 879, column: 20, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12783, file: !1159, line: 878, column: 11)
!12787 = !DILocation(line: 879, column: 28, scope: !12786)
!12788 = !DILocation(line: 879, column: 18, scope: !12786)
!12789 = !DILocation(line: 880, column: 39, scope: !12786)
!12790 = !DILocation(line: 880, column: 44, scope: !12786)
!12791 = !DILocation(line: 880, column: 26, scope: !12786)
!12792 = !DILocation(line: 880, column: 24, scope: !12786)
!12793 = !DILocation(line: 882, column: 20, scope: !12786)
!12794 = !DILocation(line: 882, column: 28, scope: !12786)
!12795 = !DILocation(line: 882, column: 18, scope: !12786)
!12796 = !DILocation(line: 884, column: 17, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12786, file: !1159, line: 884, column: 17)
!12798 = !DILocation(line: 884, column: 29, scope: !12797)
!12799 = !DILocation(line: 884, column: 17, scope: !12786)
!12800 = !DILocation(line: 888, column: 32, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12797, file: !1159, line: 885, column: 15)
!12802 = !DILocation(line: 888, column: 44, scope: !12801)
!12803 = !DILocation(line: 888, column: 17, scope: !12801)
!12804 = !DILocation(line: 888, column: 25, scope: !12801)
!12805 = !DILocation(line: 888, column: 30, scope: !12801)
!12806 = !DILocation(line: 889, column: 36, scope: !12801)
!12807 = !DILocation(line: 889, column: 17, scope: !12801)
!12808 = !DILocation(line: 889, column: 29, scope: !12801)
!12809 = !DILocation(line: 889, column: 34, scope: !12801)
!12810 = !DILocation(line: 890, column: 15, scope: !12801)
!12811 = !DILocation(line: 895, column: 36, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12797, file: !1159, line: 892, column: 15)
!12813 = !DILocation(line: 895, column: 17, scope: !12812)
!12814 = !DILocation(line: 895, column: 29, scope: !12812)
!12815 = !DILocation(line: 895, column: 34, scope: !12812)
!12816 = !DILocation(line: 896, column: 17, scope: !12812)
!12817 = !DILocation(line: 896, column: 22, scope: !12812)
!12818 = !DILocation(line: 896, column: 36, scope: !12812)
!12819 = !DILocation(line: 897, column: 29, scope: !12812)
!12820 = !DILocation(line: 897, column: 34, scope: !12812)
!12821 = !DILocation(line: 897, column: 17, scope: !12812)
!12822 = !DILocation(line: 899, column: 11, scope: !12786)
!12823 = !DILocation(line: 877, column: 54, scope: !12783)
!12824 = !DILocation(line: 877, column: 52, scope: !12783)
!12825 = !DILocation(line: 877, column: 9, scope: !12783)
!12826 = distinct !{!12826, !12784, !12827}
!12827 = !DILocation(line: 899, column: 11, scope: !12778)
!12828 = !DILocation(line: 903, column: 16, scope: !12773)
!12829 = !DILocation(line: 903, column: 24, scope: !12773)
!12830 = !DILocation(line: 903, column: 14, scope: !12773)
!12831 = !DILocation(line: 904, column: 9, scope: !12773)
!12832 = !DILocation(line: 904, column: 17, scope: !12773)
!12833 = !DILocation(line: 904, column: 22, scope: !12773)
!12834 = !DILocation(line: 905, column: 13, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12773, file: !1159, line: 905, column: 13)
!12836 = !DILocation(line: 905, column: 13, scope: !12773)
!12837 = !DILocation(line: 906, column: 11, scope: !12835)
!12838 = !DILocation(line: 907, column: 35, scope: !12773)
!12839 = !DILocation(line: 907, column: 40, scope: !12773)
!12840 = !DILocation(line: 907, column: 22, scope: !12773)
!12841 = !DILocation(line: 907, column: 20, scope: !12773)
!12842 = !DILocation(line: 909, column: 13, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12773, file: !1159, line: 909, column: 13)
!12844 = !DILocation(line: 909, column: 25, scope: !12843)
!12845 = !DILocation(line: 909, column: 13, scope: !12773)
!12846 = !DILocalVariable(name: "new_entry", scope: !12847, file: !1159, line: 913, type: !1162)
!12847 = distinct !DILexicalBlock(scope: !12843, file: !1159, line: 910, column: 11)
!12848 = !DILocation(line: 913, column: 32, scope: !12847)
!12849 = !DILocation(line: 913, column: 60, scope: !12847)
!12850 = !DILocation(line: 913, column: 44, scope: !12847)
!12851 = !DILocation(line: 915, column: 17, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12847, file: !1159, line: 915, column: 17)
!12853 = !DILocation(line: 915, column: 27, scope: !12852)
!12854 = !DILocation(line: 915, column: 17, scope: !12847)
!12855 = !DILocation(line: 916, column: 15, scope: !12852)
!12856 = !DILocation(line: 918, column: 31, scope: !12847)
!12857 = !DILocation(line: 918, column: 13, scope: !12847)
!12858 = !DILocation(line: 918, column: 24, scope: !12847)
!12859 = !DILocation(line: 918, column: 29, scope: !12847)
!12860 = !DILocation(line: 919, column: 31, scope: !12847)
!12861 = !DILocation(line: 919, column: 43, scope: !12847)
!12862 = !DILocation(line: 919, column: 13, scope: !12847)
!12863 = !DILocation(line: 919, column: 24, scope: !12847)
!12864 = !DILocation(line: 919, column: 29, scope: !12847)
!12865 = !DILocation(line: 920, column: 32, scope: !12847)
!12866 = !DILocation(line: 920, column: 13, scope: !12847)
!12867 = !DILocation(line: 920, column: 25, scope: !12847)
!12868 = !DILocation(line: 920, column: 30, scope: !12847)
!12869 = !DILocation(line: 921, column: 11, scope: !12847)
!12870 = !DILocation(line: 925, column: 32, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12843, file: !1159, line: 923, column: 11)
!12872 = !DILocation(line: 925, column: 13, scope: !12871)
!12873 = !DILocation(line: 925, column: 25, scope: !12871)
!12874 = !DILocation(line: 925, column: 30, scope: !12871)
!12875 = !DILocation(line: 926, column: 13, scope: !12871)
!12876 = !DILocation(line: 926, column: 18, scope: !12871)
!12877 = !DILocation(line: 926, column: 32, scope: !12871)
!12878 = !DILocation(line: 928, column: 9, scope: !12773)
!12879 = !DILocation(line: 928, column: 17, scope: !12773)
!12880 = !DILocation(line: 928, column: 22, scope: !12773)
!12881 = !DILocation(line: 929, column: 9, scope: !12773)
!12882 = !DILocation(line: 929, column: 14, scope: !12773)
!12883 = !DILocation(line: 929, column: 28, scope: !12773)
!12884 = !DILocation(line: 930, column: 7, scope: !12773)
!12885 = !DILocation(line: 865, column: 64, scope: !12763)
!12886 = !DILocation(line: 865, column: 3, scope: !12763)
!12887 = distinct !{!12887, !12767, !12888}
!12888 = !DILocation(line: 930, column: 7, scope: !12758)
!12889 = !DILocation(line: 931, column: 3, scope: !12744)
!12890 = !DILocation(line: 932, column: 1, scope: !12744)
!12891 = distinct !DISubprogram(name: "free_entry", scope: !1159, file: !1159, line: 776, type: !1272, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12892 = !DILocalVariable(name: "table", arg: 1, scope: !12891, file: !1159, line: 776, type: !1251)
!12893 = !DILocation(line: 776, column: 25, scope: !12891)
!12894 = !DILocalVariable(name: "entry", arg: 2, scope: !12891, file: !1159, line: 776, type: !1162)
!12895 = !DILocation(line: 776, column: 51, scope: !12891)
!12896 = !DILocation(line: 778, column: 3, scope: !12891)
!12897 = !DILocation(line: 778, column: 10, scope: !12891)
!12898 = !DILocation(line: 778, column: 15, scope: !12891)
!12899 = !DILocation(line: 779, column: 17, scope: !12891)
!12900 = !DILocation(line: 779, column: 24, scope: !12891)
!12901 = !DILocation(line: 779, column: 3, scope: !12891)
!12902 = !DILocation(line: 779, column: 10, scope: !12891)
!12903 = !DILocation(line: 779, column: 15, scope: !12891)
!12904 = !DILocation(line: 780, column: 28, scope: !12891)
!12905 = !DILocation(line: 780, column: 3, scope: !12891)
!12906 = !DILocation(line: 780, column: 10, scope: !12891)
!12907 = !DILocation(line: 780, column: 26, scope: !12891)
!12908 = !DILocation(line: 781, column: 1, scope: !12891)
!12909 = distinct !DISubprogram(name: "allocate_entry", scope: !1159, file: !1159, line: 751, type: !1277, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12910 = !DILocalVariable(name: "table", arg: 1, scope: !12909, file: !1159, line: 751, type: !1251)
!12911 = !DILocation(line: 751, column: 29, scope: !12909)
!12912 = !DILocalVariable(name: "new", scope: !12909, file: !1159, line: 753, type: !1162)
!12913 = !DILocation(line: 753, column: 22, scope: !12909)
!12914 = !DILocation(line: 755, column: 7, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12909, file: !1159, line: 755, column: 7)
!12916 = !DILocation(line: 755, column: 14, scope: !12915)
!12917 = !DILocation(line: 755, column: 7, scope: !12909)
!12918 = !DILocation(line: 757, column: 13, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !1159, line: 756, column: 5)
!12920 = !DILocation(line: 757, column: 20, scope: !12919)
!12921 = !DILocation(line: 757, column: 11, scope: !12919)
!12922 = !DILocation(line: 758, column: 32, scope: !12919)
!12923 = !DILocation(line: 758, column: 37, scope: !12919)
!12924 = !DILocation(line: 758, column: 7, scope: !12919)
!12925 = !DILocation(line: 758, column: 14, scope: !12919)
!12926 = !DILocation(line: 758, column: 30, scope: !12919)
!12927 = !DILocation(line: 759, column: 5, scope: !12919)
!12928 = !DILocation(line: 765, column: 13, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12915, file: !1159, line: 761, column: 5)
!12930 = !DILocation(line: 765, column: 11, scope: !12929)
!12931 = !DILocation(line: 769, column: 10, scope: !12909)
!12932 = !DILocation(line: 769, column: 3, scope: !12909)
!12933 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !1159, file: !1159, line: 1038, type: !1256, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!12934 = !DILocalVariable(name: "table", arg: 1, scope: !12933, file: !1159, line: 1038, type: !1251)
!12935 = !DILocation(line: 1038, column: 36, scope: !12933)
!12936 = !DILocalVariable(name: "entry", arg: 2, scope: !12933, file: !1159, line: 1038, type: !181)
!12937 = !DILocation(line: 1038, column: 55, scope: !12933)
!12938 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12933, file: !1159, line: 1039, type: !180)
!12939 = !DILocation(line: 1039, column: 37, scope: !12933)
!12940 = !DILocalVariable(name: "data", scope: !12933, file: !1159, line: 1041, type: !167)
!12941 = !DILocation(line: 1041, column: 9, scope: !12933)
!12942 = !DILocalVariable(name: "bucket", scope: !12933, file: !1159, line: 1042, type: !1162)
!12943 = !DILocation(line: 1042, column: 22, scope: !12933)
!12944 = !DILocation(line: 1047, column: 9, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12933, file: !1159, line: 1047, column: 7)
!12946 = !DILocation(line: 1047, column: 7, scope: !12933)
!12947 = !DILocation(line: 1048, column: 5, scope: !12945)
!12948 = !DILocation(line: 1051, column: 32, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12933, file: !1159, line: 1051, column: 7)
!12950 = !DILocation(line: 1051, column: 39, scope: !12949)
!12951 = !DILocation(line: 1051, column: 15, scope: !12949)
!12952 = !DILocation(line: 1051, column: 13, scope: !12949)
!12953 = !DILocation(line: 1051, column: 63, scope: !12949)
!12954 = !DILocation(line: 1051, column: 7, scope: !12933)
!12955 = !DILocation(line: 1053, column: 11, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12957, file: !1159, line: 1053, column: 11)
!12957 = distinct !DILexicalBlock(scope: !12949, file: !1159, line: 1052, column: 5)
!12958 = !DILocation(line: 1053, column: 11, scope: !12957)
!12959 = !DILocation(line: 1054, column: 24, scope: !12956)
!12960 = !DILocation(line: 1054, column: 10, scope: !12956)
!12961 = !DILocation(line: 1054, column: 22, scope: !12956)
!12962 = !DILocation(line: 1054, column: 9, scope: !12956)
!12963 = !DILocation(line: 1055, column: 7, scope: !12957)
!12964 = !DILocation(line: 1063, column: 7, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12933, file: !1159, line: 1063, column: 7)
!12966 = !DILocation(line: 1063, column: 14, scope: !12965)
!12967 = !DILocation(line: 1064, column: 9, scope: !12965)
!12968 = !DILocation(line: 1064, column: 16, scope: !12965)
!12969 = !DILocation(line: 1064, column: 24, scope: !12965)
!12970 = !DILocation(line: 1064, column: 43, scope: !12965)
!12971 = !DILocation(line: 1064, column: 50, scope: !12965)
!12972 = !DILocation(line: 1064, column: 41, scope: !12965)
!12973 = !DILocation(line: 1064, column: 7, scope: !12965)
!12974 = !DILocation(line: 1063, column: 7, scope: !12933)
!12975 = !DILocation(line: 1068, column: 21, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12965, file: !1159, line: 1065, column: 5)
!12977 = !DILocation(line: 1068, column: 7, scope: !12976)
!12978 = !DILocation(line: 1069, column: 11, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12976, file: !1159, line: 1069, column: 11)
!12980 = !DILocation(line: 1069, column: 18, scope: !12979)
!12981 = !DILocation(line: 1070, column: 13, scope: !12979)
!12982 = !DILocation(line: 1070, column: 20, scope: !12979)
!12983 = !DILocation(line: 1070, column: 28, scope: !12979)
!12984 = !DILocation(line: 1070, column: 47, scope: !12979)
!12985 = !DILocation(line: 1070, column: 54, scope: !12979)
!12986 = !DILocation(line: 1070, column: 45, scope: !12979)
!12987 = !DILocation(line: 1070, column: 11, scope: !12979)
!12988 = !DILocation(line: 1069, column: 11, scope: !12976)
!12989 = !DILocalVariable(name: "tuning", scope: !12990, file: !1159, line: 1072, type: !1174)
!12990 = distinct !DILexicalBlock(scope: !12979, file: !1159, line: 1071, column: 9)
!12991 = !DILocation(line: 1072, column: 30, scope: !12990)
!12992 = !DILocation(line: 1072, column: 39, scope: !12990)
!12993 = !DILocation(line: 1072, column: 46, scope: !12990)
!12994 = !DILocalVariable(name: "candidate", scope: !12990, file: !1159, line: 1073, type: !1180)
!12995 = !DILocation(line: 1073, column: 17, scope: !12990)
!12996 = !DILocation(line: 1074, column: 14, scope: !12990)
!12997 = !DILocation(line: 1074, column: 22, scope: !12990)
!12998 = !DILocation(line: 1075, column: 17, scope: !12990)
!12999 = !DILocation(line: 1075, column: 24, scope: !12990)
!13000 = !DILocation(line: 1075, column: 36, scope: !12990)
!13001 = !DILocation(line: 1075, column: 44, scope: !12990)
!13002 = !DILocation(line: 1075, column: 34, scope: !12990)
!13003 = !DILocation(line: 1076, column: 17, scope: !12990)
!13004 = !DILocation(line: 1076, column: 24, scope: !12990)
!13005 = !DILocation(line: 1076, column: 36, scope: !12990)
!13006 = !DILocation(line: 1076, column: 44, scope: !12990)
!13007 = !DILocation(line: 1076, column: 34, scope: !12990)
!13008 = !DILocation(line: 1077, column: 19, scope: !12990)
!13009 = !DILocation(line: 1077, column: 27, scope: !12990)
!13010 = !DILocation(line: 1077, column: 17, scope: !12990)
!13011 = !DILocation(line: 1079, column: 27, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !12990, file: !1159, line: 1079, column: 15)
!13013 = !DILocation(line: 1079, column: 24, scope: !13012)
!13014 = !DILocation(line: 1079, column: 15, scope: !12990)
!13015 = !DILocation(line: 1080, column: 13, scope: !13012)
!13016 = !DILocation(line: 1083, column: 29, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !12990, file: !1159, line: 1083, column: 15)
!13018 = !DILocation(line: 1083, column: 36, scope: !13017)
!13019 = !DILocation(line: 1083, column: 16, scope: !13017)
!13020 = !DILocation(line: 1083, column: 15, scope: !12990)
!13021 = !DILocation(line: 1084, column: 13, scope: !13017)
!13022 = !DILocation(line: 1087, column: 32, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !12990, file: !1159, line: 1087, column: 15)
!13024 = !DILocation(line: 1087, column: 39, scope: !13023)
!13025 = !DILocation(line: 1087, column: 15, scope: !13023)
!13026 = !DILocation(line: 1087, column: 62, scope: !13023)
!13027 = !DILocation(line: 1087, column: 15, scope: !12990)
!13028 = !DILocation(line: 1088, column: 13, scope: !13023)
!13029 = !DILocation(line: 1089, column: 9, scope: !12990)
!13030 = !DILocation(line: 1090, column: 5, scope: !12976)
!13031 = !DILocation(line: 1094, column: 7, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12933, file: !1159, line: 1094, column: 7)
!13033 = !DILocation(line: 1094, column: 15, scope: !13032)
!13034 = !DILocation(line: 1094, column: 7, scope: !12933)
!13035 = !DILocalVariable(name: "new_entry", scope: !13036, file: !1159, line: 1096, type: !1162)
!13036 = distinct !DILexicalBlock(scope: !13032, file: !1159, line: 1095, column: 5)
!13037 = !DILocation(line: 1096, column: 26, scope: !13036)
!13038 = !DILocation(line: 1096, column: 54, scope: !13036)
!13039 = !DILocation(line: 1096, column: 38, scope: !13036)
!13040 = !DILocation(line: 1098, column: 11, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13036, file: !1159, line: 1098, column: 11)
!13042 = !DILocation(line: 1098, column: 21, scope: !13041)
!13043 = !DILocation(line: 1098, column: 11, scope: !13036)
!13044 = !DILocation(line: 1099, column: 9, scope: !13041)
!13045 = !DILocation(line: 1103, column: 34, scope: !13036)
!13046 = !DILocation(line: 1103, column: 7, scope: !13036)
!13047 = !DILocation(line: 1103, column: 18, scope: !13036)
!13048 = !DILocation(line: 1103, column: 23, scope: !13036)
!13049 = !DILocation(line: 1104, column: 25, scope: !13036)
!13050 = !DILocation(line: 1104, column: 33, scope: !13036)
!13051 = !DILocation(line: 1104, column: 7, scope: !13036)
!13052 = !DILocation(line: 1104, column: 18, scope: !13036)
!13053 = !DILocation(line: 1104, column: 23, scope: !13036)
!13054 = !DILocation(line: 1105, column: 22, scope: !13036)
!13055 = !DILocation(line: 1105, column: 7, scope: !13036)
!13056 = !DILocation(line: 1105, column: 15, scope: !13036)
!13057 = !DILocation(line: 1105, column: 20, scope: !13036)
!13058 = !DILocation(line: 1106, column: 7, scope: !13036)
!13059 = !DILocation(line: 1106, column: 14, scope: !13036)
!13060 = !DILocation(line: 1106, column: 23, scope: !13036)
!13061 = !DILocation(line: 1107, column: 7, scope: !13036)
!13062 = !DILocation(line: 1112, column: 27, scope: !12933)
!13063 = !DILocation(line: 1112, column: 3, scope: !12933)
!13064 = !DILocation(line: 1112, column: 11, scope: !12933)
!13065 = !DILocation(line: 1112, column: 16, scope: !12933)
!13066 = !DILocation(line: 1113, column: 3, scope: !12933)
!13067 = !DILocation(line: 1113, column: 10, scope: !12933)
!13068 = !DILocation(line: 1113, column: 19, scope: !12933)
!13069 = !DILocation(line: 1114, column: 3, scope: !12933)
!13070 = !DILocation(line: 1114, column: 10, scope: !12933)
!13071 = !DILocation(line: 1114, column: 24, scope: !12933)
!13072 = !DILocation(line: 1116, column: 3, scope: !12933)
!13073 = !DILocation(line: 1117, column: 1, scope: !12933)
!13074 = distinct !DISubprogram(name: "hash_find_entry", scope: !1159, file: !1159, line: 790, type: !1274, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13075 = !DILocalVariable(name: "table", arg: 1, scope: !13074, file: !1159, line: 790, type: !1251)
!13076 = !DILocation(line: 790, column: 30, scope: !13074)
!13077 = !DILocalVariable(name: "entry", arg: 2, scope: !13074, file: !1159, line: 790, type: !181)
!13078 = !DILocation(line: 790, column: 49, scope: !13074)
!13079 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13074, file: !1159, line: 791, type: !1276)
!13080 = !DILocation(line: 791, column: 38, scope: !13074)
!13081 = !DILocalVariable(name: "delete", arg: 4, scope: !13074, file: !1159, line: 791, type: !141)
!13082 = !DILocation(line: 791, column: 56, scope: !13074)
!13083 = !DILocalVariable(name: "bucket", scope: !13074, file: !1159, line: 793, type: !1162)
!13084 = !DILocation(line: 793, column: 22, scope: !13074)
!13085 = !DILocation(line: 793, column: 44, scope: !13074)
!13086 = !DILocation(line: 793, column: 51, scope: !13074)
!13087 = !DILocation(line: 793, column: 31, scope: !13074)
!13088 = !DILocalVariable(name: "cursor", scope: !13074, file: !1159, line: 794, type: !1162)
!13089 = !DILocation(line: 794, column: 22, scope: !13074)
!13090 = !DILocation(line: 796, column: 18, scope: !13074)
!13091 = !DILocation(line: 796, column: 4, scope: !13074)
!13092 = !DILocation(line: 796, column: 16, scope: !13074)
!13093 = !DILocation(line: 799, column: 7, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13074, file: !1159, line: 799, column: 7)
!13095 = !DILocation(line: 799, column: 15, scope: !13094)
!13096 = !DILocation(line: 799, column: 20, scope: !13094)
!13097 = !DILocation(line: 799, column: 7, scope: !13074)
!13098 = !DILocation(line: 800, column: 5, scope: !13094)
!13099 = !DILocation(line: 803, column: 7, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13074, file: !1159, line: 803, column: 7)
!13101 = !DILocation(line: 803, column: 16, scope: !13100)
!13102 = !DILocation(line: 803, column: 24, scope: !13100)
!13103 = !DILocation(line: 803, column: 13, scope: !13100)
!13104 = !DILocation(line: 803, column: 29, scope: !13100)
!13105 = !DILocation(line: 803, column: 32, scope: !13100)
!13106 = !DILocation(line: 803, column: 39, scope: !13100)
!13107 = !DILocation(line: 803, column: 51, scope: !13100)
!13108 = !DILocation(line: 803, column: 58, scope: !13100)
!13109 = !DILocation(line: 803, column: 66, scope: !13100)
!13110 = !DILocation(line: 803, column: 7, scope: !13074)
!13111 = !DILocalVariable(name: "data", scope: !13112, file: !1159, line: 805, type: !167)
!13112 = distinct !DILexicalBlock(scope: !13100, file: !1159, line: 804, column: 5)
!13113 = !DILocation(line: 805, column: 13, scope: !13112)
!13114 = !DILocation(line: 805, column: 20, scope: !13112)
!13115 = !DILocation(line: 805, column: 28, scope: !13112)
!13116 = !DILocation(line: 807, column: 11, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13112, file: !1159, line: 807, column: 11)
!13118 = !DILocation(line: 807, column: 11, scope: !13112)
!13119 = !DILocation(line: 809, column: 15, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !1159, line: 809, column: 15)
!13121 = distinct !DILexicalBlock(scope: !13117, file: !1159, line: 808, column: 9)
!13122 = !DILocation(line: 809, column: 23, scope: !13120)
!13123 = !DILocation(line: 809, column: 15, scope: !13121)
!13124 = !DILocalVariable(name: "next", scope: !13125, file: !1159, line: 811, type: !1162)
!13125 = distinct !DILexicalBlock(scope: !13120, file: !1159, line: 810, column: 13)
!13126 = !DILocation(line: 811, column: 34, scope: !13125)
!13127 = !DILocation(line: 811, column: 41, scope: !13125)
!13128 = !DILocation(line: 811, column: 49, scope: !13125)
!13129 = !DILocation(line: 815, column: 16, scope: !13125)
!13130 = !DILocation(line: 815, column: 26, scope: !13125)
!13131 = !DILocation(line: 815, column: 25, scope: !13125)
!13132 = !{i64 0, i64 8, !2442, i64 8, i64 8, !2442}
!13133 = !DILocation(line: 816, column: 27, scope: !13125)
!13134 = !DILocation(line: 816, column: 34, scope: !13125)
!13135 = !DILocation(line: 816, column: 15, scope: !13125)
!13136 = !DILocation(line: 817, column: 13, scope: !13125)
!13137 = !DILocation(line: 820, column: 15, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13120, file: !1159, line: 819, column: 13)
!13139 = !DILocation(line: 820, column: 23, scope: !13138)
!13140 = !DILocation(line: 820, column: 28, scope: !13138)
!13141 = !DILocation(line: 822, column: 9, scope: !13121)
!13142 = !DILocation(line: 824, column: 14, scope: !13112)
!13143 = !DILocation(line: 824, column: 7, scope: !13112)
!13144 = !DILocation(line: 828, column: 17, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13074, file: !1159, line: 828, column: 3)
!13146 = !DILocation(line: 828, column: 15, scope: !13145)
!13147 = !DILocation(line: 828, column: 8, scope: !13145)
!13148 = !DILocation(line: 828, column: 25, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13145, file: !1159, line: 828, column: 3)
!13150 = !DILocation(line: 828, column: 33, scope: !13149)
!13151 = !DILocation(line: 828, column: 3, scope: !13145)
!13152 = !DILocation(line: 830, column: 11, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13154, file: !1159, line: 830, column: 11)
!13154 = distinct !DILexicalBlock(scope: !13149, file: !1159, line: 829, column: 5)
!13155 = !DILocation(line: 830, column: 20, scope: !13153)
!13156 = !DILocation(line: 830, column: 28, scope: !13153)
!13157 = !DILocation(line: 830, column: 34, scope: !13153)
!13158 = !DILocation(line: 830, column: 17, scope: !13153)
!13159 = !DILocation(line: 831, column: 11, scope: !13153)
!13160 = !DILocation(line: 831, column: 14, scope: !13153)
!13161 = !DILocation(line: 831, column: 21, scope: !13153)
!13162 = !DILocation(line: 831, column: 33, scope: !13153)
!13163 = !DILocation(line: 831, column: 40, scope: !13153)
!13164 = !DILocation(line: 831, column: 48, scope: !13153)
!13165 = !DILocation(line: 831, column: 54, scope: !13153)
!13166 = !DILocation(line: 830, column: 11, scope: !13154)
!13167 = !DILocalVariable(name: "data", scope: !13168, file: !1159, line: 833, type: !167)
!13168 = distinct !DILexicalBlock(scope: !13153, file: !1159, line: 832, column: 9)
!13169 = !DILocation(line: 833, column: 17, scope: !13168)
!13170 = !DILocation(line: 833, column: 24, scope: !13168)
!13171 = !DILocation(line: 833, column: 32, scope: !13168)
!13172 = !DILocation(line: 833, column: 38, scope: !13168)
!13173 = !DILocation(line: 835, column: 15, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13168, file: !1159, line: 835, column: 15)
!13175 = !DILocation(line: 835, column: 15, scope: !13168)
!13176 = !DILocalVariable(name: "next", scope: !13177, file: !1159, line: 837, type: !1162)
!13177 = distinct !DILexicalBlock(scope: !13174, file: !1159, line: 836, column: 13)
!13178 = !DILocation(line: 837, column: 34, scope: !13177)
!13179 = !DILocation(line: 837, column: 41, scope: !13177)
!13180 = !DILocation(line: 837, column: 49, scope: !13177)
!13181 = !DILocation(line: 841, column: 30, scope: !13177)
!13182 = !DILocation(line: 841, column: 36, scope: !13177)
!13183 = !DILocation(line: 841, column: 15, scope: !13177)
!13184 = !DILocation(line: 841, column: 23, scope: !13177)
!13185 = !DILocation(line: 841, column: 28, scope: !13177)
!13186 = !DILocation(line: 842, column: 27, scope: !13177)
!13187 = !DILocation(line: 842, column: 34, scope: !13177)
!13188 = !DILocation(line: 842, column: 15, scope: !13177)
!13189 = !DILocation(line: 843, column: 13, scope: !13177)
!13190 = !DILocation(line: 845, column: 18, scope: !13168)
!13191 = !DILocation(line: 845, column: 11, scope: !13168)
!13192 = !DILocation(line: 847, column: 5, scope: !13154)
!13193 = !DILocation(line: 828, column: 48, scope: !13149)
!13194 = !DILocation(line: 828, column: 56, scope: !13149)
!13195 = !DILocation(line: 828, column: 46, scope: !13149)
!13196 = !DILocation(line: 828, column: 3, scope: !13149)
!13197 = distinct !{!13197, !13151, !13198}
!13198 = !DILocation(line: 847, column: 5, scope: !13145)
!13199 = !DILocation(line: 850, column: 3, scope: !13074)
!13200 = !DILocation(line: 851, column: 1, scope: !13074)
!13201 = distinct !DISubprogram(name: "hash_insert", scope: !1159, file: !1159, line: 1126, type: !1258, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13202 = !DILocalVariable(name: "table", arg: 1, scope: !13201, file: !1159, line: 1126, type: !1251)
!13203 = !DILocation(line: 1126, column: 26, scope: !13201)
!13204 = !DILocalVariable(name: "entry", arg: 2, scope: !13201, file: !1159, line: 1126, type: !181)
!13205 = !DILocation(line: 1126, column: 45, scope: !13201)
!13206 = !DILocalVariable(name: "matched_ent", scope: !13201, file: !1159, line: 1128, type: !181)
!13207 = !DILocation(line: 1128, column: 15, scope: !13201)
!13208 = !DILocalVariable(name: "err", scope: !13201, file: !1159, line: 1129, type: !27)
!13209 = !DILocation(line: 1129, column: 7, scope: !13201)
!13210 = !DILocation(line: 1129, column: 36, scope: !13201)
!13211 = !DILocation(line: 1129, column: 43, scope: !13201)
!13212 = !DILocation(line: 1129, column: 13, scope: !13201)
!13213 = !DILocation(line: 1130, column: 11, scope: !13201)
!13214 = !DILocation(line: 1130, column: 15, scope: !13201)
!13215 = !DILocation(line: 1132, column: 23, scope: !13201)
!13216 = !DILocation(line: 1132, column: 27, scope: !13201)
!13217 = !DILocation(line: 1132, column: 34, scope: !13201)
!13218 = !DILocation(line: 1132, column: 48, scope: !13201)
!13219 = !DILocation(line: 1130, column: 3, scope: !13201)
!13220 = distinct !DISubprogram(name: "hash_delete", scope: !1159, file: !1159, line: 1140, type: !1258, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1150, retainedNodes: !152)
!13221 = !DILocalVariable(name: "table", arg: 1, scope: !13220, file: !1159, line: 1140, type: !1251)
!13222 = !DILocation(line: 1140, column: 26, scope: !13220)
!13223 = !DILocalVariable(name: "entry", arg: 2, scope: !13220, file: !1159, line: 1140, type: !181)
!13224 = !DILocation(line: 1140, column: 45, scope: !13220)
!13225 = !DILocalVariable(name: "data", scope: !13220, file: !1159, line: 1142, type: !167)
!13226 = !DILocation(line: 1142, column: 9, scope: !13220)
!13227 = !DILocalVariable(name: "bucket", scope: !13220, file: !1159, line: 1143, type: !1162)
!13228 = !DILocation(line: 1143, column: 22, scope: !13220)
!13229 = !DILocation(line: 1145, column: 27, scope: !13220)
!13230 = !DILocation(line: 1145, column: 34, scope: !13220)
!13231 = !DILocation(line: 1145, column: 10, scope: !13220)
!13232 = !DILocation(line: 1145, column: 8, scope: !13220)
!13233 = !DILocation(line: 1146, column: 8, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13220, file: !1159, line: 1146, column: 7)
!13235 = !DILocation(line: 1146, column: 7, scope: !13220)
!13236 = !DILocation(line: 1147, column: 5, scope: !13234)
!13237 = !DILocation(line: 1149, column: 3, scope: !13220)
!13238 = !DILocation(line: 1149, column: 10, scope: !13220)
!13239 = !DILocation(line: 1149, column: 19, scope: !13220)
!13240 = !DILocation(line: 1150, column: 8, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13220, file: !1159, line: 1150, column: 7)
!13242 = !DILocation(line: 1150, column: 16, scope: !13241)
!13243 = !DILocation(line: 1150, column: 7, scope: !13220)
!13244 = !DILocation(line: 1152, column: 7, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13241, file: !1159, line: 1151, column: 5)
!13246 = !DILocation(line: 1152, column: 14, scope: !13245)
!13247 = !DILocation(line: 1152, column: 28, scope: !13245)
!13248 = !DILocation(line: 1157, column: 11, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13245, file: !1159, line: 1157, column: 11)
!13250 = !DILocation(line: 1157, column: 18, scope: !13249)
!13251 = !DILocation(line: 1158, column: 13, scope: !13249)
!13252 = !DILocation(line: 1158, column: 20, scope: !13249)
!13253 = !DILocation(line: 1158, column: 28, scope: !13249)
!13254 = !DILocation(line: 1158, column: 47, scope: !13249)
!13255 = !DILocation(line: 1158, column: 54, scope: !13249)
!13256 = !DILocation(line: 1158, column: 45, scope: !13249)
!13257 = !DILocation(line: 1158, column: 11, scope: !13249)
!13258 = !DILocation(line: 1157, column: 11, scope: !13245)
!13259 = !DILocation(line: 1162, column: 25, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13249, file: !1159, line: 1159, column: 9)
!13261 = !DILocation(line: 1162, column: 11, scope: !13260)
!13262 = !DILocation(line: 1163, column: 15, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13260, file: !1159, line: 1163, column: 15)
!13264 = !DILocation(line: 1163, column: 22, scope: !13263)
!13265 = !DILocation(line: 1164, column: 17, scope: !13263)
!13266 = !DILocation(line: 1164, column: 24, scope: !13263)
!13267 = !DILocation(line: 1164, column: 32, scope: !13263)
!13268 = !DILocation(line: 1164, column: 51, scope: !13263)
!13269 = !DILocation(line: 1164, column: 58, scope: !13263)
!13270 = !DILocation(line: 1164, column: 49, scope: !13263)
!13271 = !DILocation(line: 1164, column: 15, scope: !13263)
!13272 = !DILocation(line: 1163, column: 15, scope: !13260)
!13273 = !DILocalVariable(name: "tuning", scope: !13274, file: !1159, line: 1166, type: !1174)
!13274 = distinct !DILexicalBlock(scope: !13263, file: !1159, line: 1165, column: 13)
!13275 = !DILocation(line: 1166, column: 34, scope: !13274)
!13276 = !DILocation(line: 1166, column: 43, scope: !13274)
!13277 = !DILocation(line: 1166, column: 50, scope: !13274)
!13278 = !DILocalVariable(name: "candidate", scope: !13274, file: !1159, line: 1167, type: !149)
!13279 = !DILocation(line: 1167, column: 22, scope: !13274)
!13280 = !DILocation(line: 1168, column: 18, scope: !13274)
!13281 = !DILocation(line: 1168, column: 26, scope: !13274)
!13282 = !DILocation(line: 1169, column: 20, scope: !13274)
!13283 = !DILocation(line: 1169, column: 27, scope: !13274)
!13284 = !DILocation(line: 1169, column: 39, scope: !13274)
!13285 = !DILocation(line: 1169, column: 47, scope: !13274)
!13286 = !DILocation(line: 1169, column: 37, scope: !13274)
!13287 = !DILocation(line: 1170, column: 21, scope: !13274)
!13288 = !DILocation(line: 1170, column: 28, scope: !13274)
!13289 = !DILocation(line: 1170, column: 40, scope: !13274)
!13290 = !DILocation(line: 1170, column: 48, scope: !13274)
!13291 = !DILocation(line: 1170, column: 38, scope: !13274)
!13292 = !DILocation(line: 1171, column: 23, scope: !13274)
!13293 = !DILocation(line: 1171, column: 31, scope: !13274)
!13294 = !DILocation(line: 1171, column: 21, scope: !13274)
!13295 = !DILocation(line: 1168, column: 17, scope: !13274)
!13296 = !DILocation(line: 1173, column: 33, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13274, file: !1159, line: 1173, column: 19)
!13298 = !DILocation(line: 1173, column: 40, scope: !13297)
!13299 = !DILocation(line: 1173, column: 20, scope: !13297)
!13300 = !DILocation(line: 1173, column: 19, scope: !13274)
!13301 = !DILocalVariable(name: "cursor", scope: !13302, file: !1159, line: 1181, type: !1162)
!13302 = distinct !DILexicalBlock(scope: !13297, file: !1159, line: 1174, column: 17)
!13303 = !DILocation(line: 1181, column: 38, scope: !13302)
!13304 = !DILocation(line: 1181, column: 47, scope: !13302)
!13305 = !DILocation(line: 1181, column: 54, scope: !13302)
!13306 = !DILocalVariable(name: "next", scope: !13302, file: !1159, line: 1182, type: !1162)
!13307 = !DILocation(line: 1182, column: 38, scope: !13302)
!13308 = !DILocation(line: 1183, column: 19, scope: !13302)
!13309 = !DILocation(line: 1183, column: 26, scope: !13302)
!13310 = !DILocation(line: 1185, column: 30, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13302, file: !1159, line: 1184, column: 21)
!13312 = !DILocation(line: 1185, column: 38, scope: !13311)
!13313 = !DILocation(line: 1185, column: 28, scope: !13311)
!13314 = !DILocation(line: 1186, column: 29, scope: !13311)
!13315 = !DILocation(line: 1186, column: 23, scope: !13311)
!13316 = !DILocation(line: 1187, column: 32, scope: !13311)
!13317 = !DILocation(line: 1187, column: 30, scope: !13311)
!13318 = distinct !{!13318, !13308, !13319}
!13319 = !DILocation(line: 1188, column: 21, scope: !13302)
!13320 = !DILocation(line: 1189, column: 19, scope: !13302)
!13321 = !DILocation(line: 1189, column: 26, scope: !13302)
!13322 = !DILocation(line: 1189, column: 42, scope: !13302)
!13323 = !DILocation(line: 1191, column: 17, scope: !13302)
!13324 = !DILocation(line: 1192, column: 13, scope: !13274)
!13325 = !DILocation(line: 1193, column: 9, scope: !13260)
!13326 = !DILocation(line: 1194, column: 5, scope: !13245)
!13327 = !DILocation(line: 1196, column: 10, scope: !13220)
!13328 = !DILocation(line: 1196, column: 3, scope: !13220)
!13329 = !DILocation(line: 1197, column: 1, scope: !13220)
!13330 = distinct !DISubprogram(name: "triple_hash", scope: !13331, file: !13331, line: 34, type: !333, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13331 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13332 = !DILocalVariable(name: "x", arg: 1, scope: !13330, file: !13331, line: 34, type: !181)
!13333 = !DILocation(line: 34, column: 26, scope: !13330)
!13334 = !DILocalVariable(name: "table_size", arg: 2, scope: !13330, file: !13331, line: 34, type: !149)
!13335 = !DILocation(line: 34, column: 36, scope: !13330)
!13336 = !DILocalVariable(name: "p", scope: !13330, file: !13331, line: 36, type: !1846)
!13337 = !DILocation(line: 36, column: 26, scope: !13330)
!13338 = !DILocation(line: 36, column: 30, scope: !13330)
!13339 = !DILocalVariable(name: "tmp", scope: !13330, file: !13331, line: 37, type: !149)
!13340 = !DILocation(line: 37, column: 10, scope: !13330)
!13341 = !DILocation(line: 37, column: 26, scope: !13330)
!13342 = !DILocation(line: 37, column: 29, scope: !13330)
!13343 = !DILocation(line: 37, column: 35, scope: !13330)
!13344 = !DILocation(line: 37, column: 16, scope: !13330)
!13345 = !DILocation(line: 40, column: 11, scope: !13330)
!13346 = !DILocation(line: 40, column: 17, scope: !13330)
!13347 = !DILocation(line: 40, column: 20, scope: !13330)
!13348 = !DILocation(line: 40, column: 15, scope: !13330)
!13349 = !DILocation(line: 40, column: 30, scope: !13330)
!13350 = !DILocation(line: 40, column: 28, scope: !13330)
!13351 = !DILocation(line: 40, column: 3, scope: !13330)
!13352 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13331, file: !13331, line: 45, type: !333, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13353 = !DILocalVariable(name: "x", arg: 1, scope: !13352, file: !13331, line: 45, type: !181)
!13354 = !DILocation(line: 45, column: 34, scope: !13352)
!13355 = !DILocalVariable(name: "table_size", arg: 2, scope: !13352, file: !13331, line: 45, type: !149)
!13356 = !DILocation(line: 45, column: 44, scope: !13352)
!13357 = !DILocalVariable(name: "p", scope: !13352, file: !13331, line: 47, type: !1846)
!13358 = !DILocation(line: 47, column: 26, scope: !13352)
!13359 = !DILocation(line: 47, column: 30, scope: !13352)
!13360 = !DILocation(line: 50, column: 10, scope: !13352)
!13361 = !DILocation(line: 50, column: 13, scope: !13352)
!13362 = !DILocation(line: 50, column: 22, scope: !13352)
!13363 = !DILocation(line: 50, column: 20, scope: !13352)
!13364 = !DILocation(line: 50, column: 3, scope: !13352)
!13365 = distinct !DISubprogram(name: "triple_compare", scope: !13331, file: !13331, line: 55, type: !337, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13366 = !DILocalVariable(name: "x", arg: 1, scope: !13365, file: !13331, line: 55, type: !181)
!13367 = !DILocation(line: 55, column: 29, scope: !13365)
!13368 = !DILocalVariable(name: "y", arg: 2, scope: !13365, file: !13331, line: 55, type: !181)
!13369 = !DILocation(line: 55, column: 44, scope: !13365)
!13370 = !DILocalVariable(name: "a", scope: !13365, file: !13331, line: 57, type: !1846)
!13371 = !DILocation(line: 57, column: 26, scope: !13365)
!13372 = !DILocation(line: 57, column: 30, scope: !13365)
!13373 = !DILocalVariable(name: "b", scope: !13365, file: !13331, line: 58, type: !1846)
!13374 = !DILocation(line: 58, column: 26, scope: !13365)
!13375 = !DILocation(line: 58, column: 30, scope: !13365)
!13376 = !DILocation(line: 59, column: 11, scope: !13365)
!13377 = !DILocation(line: 59, column: 31, scope: !13365)
!13378 = !DILocation(line: 59, column: 45, scope: !13365)
!13379 = !DILocation(line: 59, column: 48, scope: !13365)
!13380 = !DILocation(line: 59, column: 54, scope: !13365)
!13381 = !DILocation(line: 59, column: 57, scope: !13365)
!13382 = !DILocation(line: 59, column: 34, scope: !13365)
!13383 = !DILocation(line: 0, scope: !13365)
!13384 = !DILocation(line: 59, column: 10, scope: !13365)
!13385 = !DILocation(line: 59, column: 3, scope: !13365)
!13386 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13331, file: !13331, line: 63, type: !337, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13387 = !DILocalVariable(name: "x", arg: 1, scope: !13386, file: !13331, line: 63, type: !181)
!13388 = !DILocation(line: 63, column: 37, scope: !13386)
!13389 = !DILocalVariable(name: "y", arg: 2, scope: !13386, file: !13331, line: 63, type: !181)
!13390 = !DILocation(line: 63, column: 52, scope: !13386)
!13391 = !DILocalVariable(name: "a", scope: !13386, file: !13331, line: 65, type: !1846)
!13392 = !DILocation(line: 65, column: 26, scope: !13386)
!13393 = !DILocation(line: 65, column: 30, scope: !13386)
!13394 = !DILocalVariable(name: "b", scope: !13386, file: !13331, line: 66, type: !1846)
!13395 = !DILocation(line: 66, column: 26, scope: !13386)
!13396 = !DILocation(line: 66, column: 30, scope: !13386)
!13397 = !DILocation(line: 67, column: 11, scope: !13386)
!13398 = !DILocation(line: 67, column: 31, scope: !13386)
!13399 = !DILocation(line: 67, column: 34, scope: !13386)
!13400 = !DILocation(line: 0, scope: !13386)
!13401 = !DILocation(line: 67, column: 10, scope: !13386)
!13402 = !DILocation(line: 67, column: 3, scope: !13386)
!13403 = distinct !DISubprogram(name: "triple_free", scope: !13331, file: !13331, line: 72, type: !339, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !152)
!13404 = !DILocalVariable(name: "x", arg: 1, scope: !13403, file: !13331, line: 72, type: !167)
!13405 = !DILocation(line: 72, column: 20, scope: !13403)
!13406 = !DILocalVariable(name: "a", scope: !13403, file: !13331, line: 74, type: !1853)
!13407 = !DILocation(line: 74, column: 20, scope: !13403)
!13408 = !DILocation(line: 74, column: 24, scope: !13403)
!13409 = !DILocation(line: 75, column: 9, scope: !13403)
!13410 = !DILocation(line: 75, column: 12, scope: !13403)
!13411 = !DILocation(line: 75, column: 3, scope: !13403)
!13412 = !DILocation(line: 76, column: 9, scope: !13403)
!13413 = !DILocation(line: 76, column: 3, scope: !13403)
!13414 = !DILocation(line: 77, column: 1, scope: !13403)
!13415 = distinct !DISubprogram(name: "human_readable", scope: !1339, file: !1339, line: 153, type: !1286, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!13416 = !DILocalVariable(name: "n", arg: 1, scope: !13415, file: !1339, line: 153, type: !168)
!13417 = !DILocation(line: 153, column: 27, scope: !13415)
!13418 = !DILocalVariable(name: "buf", arg: 2, scope: !13415, file: !1339, line: 153, type: !143)
!13419 = !DILocation(line: 153, column: 36, scope: !13415)
!13420 = !DILocalVariable(name: "opts", arg: 3, scope: !13415, file: !1339, line: 153, type: !27)
!13421 = !DILocation(line: 153, column: 45, scope: !13415)
!13422 = !DILocalVariable(name: "from_block_size", arg: 4, scope: !13415, file: !1339, line: 154, type: !168)
!13423 = !DILocation(line: 154, column: 27, scope: !13415)
!13424 = !DILocalVariable(name: "to_block_size", arg: 5, scope: !13415, file: !1339, line: 154, type: !168)
!13425 = !DILocation(line: 154, column: 54, scope: !13415)
!13426 = !DILocalVariable(name: "inexact_style", scope: !13415, file: !1339, line: 156, type: !27)
!13427 = !DILocation(line: 156, column: 7, scope: !13415)
!13428 = !DILocation(line: 157, column: 5, scope: !13415)
!13429 = !DILocation(line: 157, column: 10, scope: !13415)
!13430 = !DILocalVariable(name: "base", scope: !13415, file: !1339, line: 158, type: !6)
!13431 = !DILocation(line: 158, column: 16, scope: !13415)
!13432 = !DILocation(line: 158, column: 23, scope: !13415)
!13433 = !DILocation(line: 158, column: 28, scope: !13415)
!13434 = !DILocalVariable(name: "amt", scope: !13415, file: !1339, line: 159, type: !168)
!13435 = !DILocation(line: 159, column: 13, scope: !13415)
!13436 = !DILocalVariable(name: "tenths", scope: !13415, file: !1339, line: 160, type: !27)
!13437 = !DILocation(line: 160, column: 7, scope: !13415)
!13438 = !DILocalVariable(name: "exponent", scope: !13415, file: !1339, line: 161, type: !27)
!13439 = !DILocation(line: 161, column: 7, scope: !13415)
!13440 = !DILocalVariable(name: "exponent_max", scope: !13415, file: !1339, line: 162, type: !27)
!13441 = !DILocation(line: 162, column: 7, scope: !13415)
!13442 = !DILocalVariable(name: "p", scope: !13415, file: !1339, line: 163, type: !143)
!13443 = !DILocation(line: 163, column: 9, scope: !13415)
!13444 = !DILocalVariable(name: "psuffix", scope: !13415, file: !1339, line: 164, type: !143)
!13445 = !DILocation(line: 164, column: 9, scope: !13415)
!13446 = !DILocalVariable(name: "integerlim", scope: !13415, file: !1339, line: 165, type: !146)
!13447 = !DILocation(line: 165, column: 15, scope: !13415)
!13448 = !DILocalVariable(name: "rounding", scope: !13415, file: !1339, line: 171, type: !27)
!13449 = !DILocation(line: 171, column: 7, scope: !13415)
!13450 = !DILocalVariable(name: "decimal_point", scope: !13415, file: !1339, line: 173, type: !146)
!13451 = !DILocation(line: 173, column: 15, scope: !13415)
!13452 = !DILocalVariable(name: "decimal_pointlen", scope: !13415, file: !1339, line: 174, type: !149)
!13453 = !DILocation(line: 174, column: 10, scope: !13415)
!13454 = !DILocalVariable(name: "grouping", scope: !13415, file: !1339, line: 175, type: !146)
!13455 = !DILocation(line: 175, column: 15, scope: !13415)
!13456 = !DILocalVariable(name: "thousands_sep", scope: !13415, file: !1339, line: 176, type: !146)
!13457 = !DILocation(line: 176, column: 15, scope: !13415)
!13458 = !DILocalVariable(name: "l", scope: !13415, file: !1339, line: 177, type: !1288)
!13459 = !DILocation(line: 177, column: 23, scope: !13415)
!13460 = !DILocation(line: 177, column: 27, scope: !13415)
!13461 = !DILocalVariable(name: "pointlen", scope: !13415, file: !1339, line: 178, type: !149)
!13462 = !DILocation(line: 178, column: 10, scope: !13415)
!13463 = !DILocation(line: 178, column: 29, scope: !13415)
!13464 = !DILocation(line: 178, column: 32, scope: !13415)
!13465 = !{!13466, !2443, i64 0}
!13466 = !{!"lconv", !2443, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72, !2438, i64 80, !2438, i64 81, !2438, i64 82, !2438, i64 83, !2438, i64 84, !2438, i64 85, !2438, i64 86, !2438, i64 87, !2438, i64 88, !2438, i64 89, !2438, i64 90, !2438, i64 91, !2438, i64 92, !2438, i64 93}
!13467 = !DILocation(line: 178, column: 21, scope: !13415)
!13468 = !DILocation(line: 179, column: 11, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 179, column: 7)
!13470 = !DILocation(line: 179, column: 9, scope: !13469)
!13471 = !DILocation(line: 179, column: 20, scope: !13469)
!13472 = !DILocation(line: 179, column: 23, scope: !13469)
!13473 = !DILocation(line: 179, column: 32, scope: !13469)
!13474 = !DILocation(line: 179, column: 7, scope: !13415)
!13475 = !DILocation(line: 181, column: 23, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13469, file: !1339, line: 180, column: 5)
!13477 = !DILocation(line: 181, column: 26, scope: !13476)
!13478 = !DILocation(line: 181, column: 21, scope: !13476)
!13479 = !DILocation(line: 182, column: 26, scope: !13476)
!13480 = !DILocation(line: 182, column: 24, scope: !13476)
!13481 = !DILocation(line: 183, column: 5, scope: !13476)
!13482 = !DILocation(line: 184, column: 14, scope: !13415)
!13483 = !DILocation(line: 184, column: 17, scope: !13415)
!13484 = !{!13466, !2443, i64 16}
!13485 = !DILocation(line: 184, column: 12, scope: !13415)
!13486 = !DILocation(line: 185, column: 15, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 185, column: 7)
!13488 = !DILocation(line: 185, column: 18, scope: !13487)
!13489 = !{!13466, !2443, i64 8}
!13490 = !DILocation(line: 185, column: 7, scope: !13487)
!13491 = !DILocation(line: 185, column: 33, scope: !13487)
!13492 = !DILocation(line: 185, column: 7, scope: !13415)
!13493 = !DILocation(line: 186, column: 21, scope: !13487)
!13494 = !DILocation(line: 186, column: 24, scope: !13487)
!13495 = !DILocation(line: 186, column: 19, scope: !13487)
!13496 = !DILocation(line: 186, column: 5, scope: !13487)
!13497 = !DILocation(line: 189, column: 13, scope: !13415)
!13498 = !DILocation(line: 189, column: 17, scope: !13415)
!13499 = !DILocation(line: 189, column: 42, scope: !13415)
!13500 = !DILocation(line: 189, column: 46, scope: !13415)
!13501 = !DILocation(line: 189, column: 11, scope: !13415)
!13502 = !DILocation(line: 190, column: 7, scope: !13415)
!13503 = !DILocation(line: 190, column: 5, scope: !13415)
!13504 = !DILocation(line: 195, column: 7, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 195, column: 7)
!13506 = !DILocation(line: 195, column: 24, scope: !13505)
!13507 = !DILocation(line: 195, column: 21, scope: !13505)
!13508 = !DILocation(line: 195, column: 7, scope: !13415)
!13509 = !DILocation(line: 197, column: 11, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13511, file: !1339, line: 197, column: 11)
!13511 = distinct !DILexicalBlock(scope: !13505, file: !1339, line: 196, column: 5)
!13512 = !DILocation(line: 197, column: 29, scope: !13510)
!13513 = !DILocation(line: 197, column: 27, scope: !13510)
!13514 = !DILocation(line: 197, column: 43, scope: !13510)
!13515 = !DILocation(line: 197, column: 11, scope: !13511)
!13516 = !DILocalVariable(name: "multiplier", scope: !13517, file: !1339, line: 199, type: !168)
!13517 = distinct !DILexicalBlock(scope: !13510, file: !1339, line: 198, column: 9)
!13518 = !DILocation(line: 199, column: 21, scope: !13517)
!13519 = !DILocation(line: 199, column: 34, scope: !13517)
!13520 = !DILocation(line: 199, column: 52, scope: !13517)
!13521 = !DILocation(line: 199, column: 50, scope: !13517)
!13522 = !DILocation(line: 200, column: 17, scope: !13517)
!13523 = !DILocation(line: 200, column: 21, scope: !13517)
!13524 = !DILocation(line: 200, column: 19, scope: !13517)
!13525 = !DILocation(line: 200, column: 15, scope: !13517)
!13526 = !DILocation(line: 201, column: 15, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13517, file: !1339, line: 201, column: 15)
!13528 = !DILocation(line: 201, column: 21, scope: !13527)
!13529 = !DILocation(line: 201, column: 19, scope: !13527)
!13530 = !DILocation(line: 201, column: 35, scope: !13527)
!13531 = !DILocation(line: 201, column: 32, scope: !13527)
!13532 = !DILocation(line: 201, column: 15, scope: !13517)
!13533 = !DILocation(line: 203, column: 22, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13527, file: !1339, line: 202, column: 13)
!13535 = !DILocation(line: 204, column: 24, scope: !13534)
!13536 = !DILocation(line: 205, column: 15, scope: !13534)
!13537 = !DILocation(line: 207, column: 9, scope: !13517)
!13538 = !DILocation(line: 208, column: 5, scope: !13511)
!13539 = !DILocation(line: 209, column: 12, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13505, file: !1339, line: 209, column: 12)
!13541 = !DILocation(line: 209, column: 28, scope: !13540)
!13542 = !DILocation(line: 209, column: 33, scope: !13540)
!13543 = !DILocation(line: 209, column: 36, scope: !13540)
!13544 = !DILocation(line: 209, column: 52, scope: !13540)
!13545 = !DILocation(line: 209, column: 50, scope: !13540)
!13546 = !DILocation(line: 209, column: 68, scope: !13540)
!13547 = !DILocation(line: 209, column: 12, scope: !13505)
!13548 = !DILocalVariable(name: "divisor", scope: !13549, file: !1339, line: 211, type: !168)
!13549 = distinct !DILexicalBlock(scope: !13540, file: !1339, line: 210, column: 5)
!13550 = !DILocation(line: 211, column: 17, scope: !13549)
!13551 = !DILocation(line: 211, column: 27, scope: !13549)
!13552 = !DILocation(line: 211, column: 43, scope: !13549)
!13553 = !DILocation(line: 211, column: 41, scope: !13549)
!13554 = !DILocalVariable(name: "r10", scope: !13549, file: !1339, line: 212, type: !168)
!13555 = !DILocation(line: 212, column: 17, scope: !13549)
!13556 = !DILocation(line: 212, column: 24, scope: !13549)
!13557 = !DILocation(line: 212, column: 28, scope: !13549)
!13558 = !DILocation(line: 212, column: 26, scope: !13549)
!13559 = !DILocation(line: 212, column: 37, scope: !13549)
!13560 = !DILocalVariable(name: "r2", scope: !13549, file: !1339, line: 213, type: !168)
!13561 = !DILocation(line: 213, column: 17, scope: !13549)
!13562 = !DILocation(line: 213, column: 23, scope: !13549)
!13563 = !DILocation(line: 213, column: 29, scope: !13549)
!13564 = !DILocation(line: 213, column: 27, scope: !13549)
!13565 = !DILocation(line: 213, column: 38, scope: !13549)
!13566 = !DILocation(line: 214, column: 13, scope: !13549)
!13567 = !DILocation(line: 214, column: 17, scope: !13549)
!13568 = !DILocation(line: 214, column: 15, scope: !13549)
!13569 = !DILocation(line: 214, column: 11, scope: !13549)
!13570 = !DILocation(line: 215, column: 16, scope: !13549)
!13571 = !DILocation(line: 215, column: 22, scope: !13549)
!13572 = !DILocation(line: 215, column: 20, scope: !13549)
!13573 = !DILocation(line: 215, column: 14, scope: !13549)
!13574 = !DILocation(line: 216, column: 18, scope: !13549)
!13575 = !DILocation(line: 216, column: 23, scope: !13549)
!13576 = !DILocation(line: 216, column: 21, scope: !13549)
!13577 = !DILocation(line: 216, column: 37, scope: !13549)
!13578 = !DILocation(line: 216, column: 35, scope: !13549)
!13579 = !DILocation(line: 216, column: 47, scope: !13549)
!13580 = !DILocation(line: 216, column: 57, scope: !13549)
!13581 = !DILocation(line: 216, column: 55, scope: !13549)
!13582 = !DILocation(line: 216, column: 44, scope: !13549)
!13583 = !DILocation(line: 216, column: 16, scope: !13549)
!13584 = !DILocation(line: 217, column: 7, scope: !13549)
!13585 = !DILocalVariable(name: "dto_block_size", scope: !13586, file: !1339, line: 225, type: !1317)
!13586 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 220, column: 3)
!13587 = !DILocation(line: 225, column: 17, scope: !13586)
!13588 = !DILocation(line: 225, column: 34, scope: !13586)
!13589 = !{!13590, !13590, i64 0}
!13590 = !{!"long double", !2438, i64 0}
!13591 = !DILocalVariable(name: "damt", scope: !13586, file: !1339, line: 226, type: !1317)
!13592 = !DILocation(line: 226, column: 17, scope: !13586)
!13593 = !DILocation(line: 226, column: 24, scope: !13586)
!13594 = !DILocation(line: 226, column: 29, scope: !13586)
!13595 = !DILocation(line: 226, column: 47, scope: !13586)
!13596 = !DILocation(line: 226, column: 45, scope: !13586)
!13597 = !DILocation(line: 226, column: 26, scope: !13586)
!13598 = !DILocalVariable(name: "buflen", scope: !13586, file: !1339, line: 227, type: !149)
!13599 = !DILocation(line: 227, column: 12, scope: !13586)
!13600 = !DILocalVariable(name: "nonintegerlen", scope: !13586, file: !1339, line: 228, type: !149)
!13601 = !DILocation(line: 228, column: 12, scope: !13586)
!13602 = !DILocation(line: 230, column: 12, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13586, file: !1339, line: 230, column: 9)
!13604 = !DILocation(line: 230, column: 17, scope: !13603)
!13605 = !DILocation(line: 230, column: 9, scope: !13586)
!13606 = !DILocation(line: 232, column: 18, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13603, file: !1339, line: 231, column: 7)
!13608 = !DILocation(line: 232, column: 46, scope: !13607)
!13609 = !DILocation(line: 232, column: 61, scope: !13607)
!13610 = !DILocation(line: 232, column: 32, scope: !13607)
!13611 = !DILocation(line: 232, column: 9, scope: !13607)
!13612 = !DILocation(line: 233, column: 26, scope: !13607)
!13613 = !DILocation(line: 233, column: 18, scope: !13607)
!13614 = !DILocation(line: 233, column: 16, scope: !13607)
!13615 = !DILocation(line: 234, column: 23, scope: !13607)
!13616 = !DILocation(line: 235, column: 7, scope: !13607)
!13617 = !DILocalVariable(name: "e", scope: !13618, file: !1339, line: 238, type: !1317)
!13618 = distinct !DILexicalBlock(scope: !13603, file: !1339, line: 237, column: 7)
!13619 = !DILocation(line: 238, column: 21, scope: !13618)
!13620 = !DILocation(line: 239, column: 18, scope: !13618)
!13621 = !DILocation(line: 241, column: 9, scope: !13618)
!13622 = !DILocation(line: 243, column: 18, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13618, file: !1339, line: 242, column: 11)
!13624 = !DILocation(line: 243, column: 15, scope: !13623)
!13625 = !DILocation(line: 244, column: 21, scope: !13623)
!13626 = !DILocation(line: 245, column: 11, scope: !13623)
!13627 = !DILocation(line: 246, column: 16, scope: !13618)
!13628 = !DILocation(line: 246, column: 20, scope: !13618)
!13629 = !DILocation(line: 246, column: 18, scope: !13618)
!13630 = !DILocation(line: 246, column: 28, scope: !13618)
!13631 = !DILocation(line: 246, column: 25, scope: !13618)
!13632 = !DILocation(line: 246, column: 33, scope: !13618)
!13633 = !DILocation(line: 246, column: 36, scope: !13618)
!13634 = !DILocation(line: 246, column: 47, scope: !13618)
!13635 = !DILocation(line: 246, column: 45, scope: !13618)
!13636 = !DILocation(line: 0, scope: !13618)
!13637 = distinct !{!13637, !13621, !13638}
!13638 = !DILocation(line: 246, column: 59, scope: !13618)
!13639 = !DILocation(line: 248, column: 17, scope: !13618)
!13640 = !DILocation(line: 248, column: 14, scope: !13618)
!13641 = !DILocation(line: 250, column: 18, scope: !13618)
!13642 = !DILocation(line: 250, column: 46, scope: !13618)
!13643 = !DILocation(line: 250, column: 61, scope: !13618)
!13644 = !DILocation(line: 250, column: 32, scope: !13618)
!13645 = !DILocation(line: 250, column: 9, scope: !13618)
!13646 = !DILocation(line: 251, column: 26, scope: !13618)
!13647 = !DILocation(line: 251, column: 18, scope: !13618)
!13648 = !DILocation(line: 251, column: 16, scope: !13618)
!13649 = !DILocation(line: 252, column: 25, scope: !13618)
!13650 = !DILocation(line: 252, column: 42, scope: !13618)
!13651 = !DILocation(line: 252, column: 23, scope: !13618)
!13652 = !DILocation(line: 254, column: 17, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13618, file: !1339, line: 254, column: 13)
!13654 = !DILocation(line: 254, column: 15, scope: !13653)
!13655 = !DILocation(line: 254, column: 36, scope: !13653)
!13656 = !DILocation(line: 254, column: 41, scope: !13653)
!13657 = !DILocation(line: 254, column: 33, scope: !13653)
!13658 = !DILocation(line: 254, column: 31, scope: !13653)
!13659 = !DILocation(line: 254, column: 62, scope: !13653)
!13660 = !DILocation(line: 254, column: 60, scope: !13653)
!13661 = !DILocation(line: 255, column: 13, scope: !13653)
!13662 = !DILocation(line: 255, column: 18, scope: !13653)
!13663 = !DILocation(line: 255, column: 23, scope: !13653)
!13664 = !DILocation(line: 256, column: 17, scope: !13653)
!13665 = !DILocation(line: 256, column: 20, scope: !13653)
!13666 = !DILocation(line: 256, column: 24, scope: !13653)
!13667 = !DILocation(line: 256, column: 31, scope: !13653)
!13668 = !DILocation(line: 256, column: 36, scope: !13653)
!13669 = !DILocation(line: 254, column: 13, scope: !13618)
!13670 = !DILocation(line: 258, column: 22, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13653, file: !1339, line: 257, column: 11)
!13672 = !DILocation(line: 259, column: 36, scope: !13671)
!13673 = !DILocation(line: 259, column: 51, scope: !13671)
!13674 = !DILocation(line: 259, column: 56, scope: !13671)
!13675 = !DILocation(line: 259, column: 22, scope: !13671)
!13676 = !DILocation(line: 259, column: 62, scope: !13671)
!13677 = !DILocation(line: 258, column: 13, scope: !13671)
!13678 = !DILocation(line: 260, column: 30, scope: !13671)
!13679 = !DILocation(line: 260, column: 22, scope: !13671)
!13680 = !DILocation(line: 260, column: 20, scope: !13671)
!13681 = !DILocation(line: 261, column: 27, scope: !13671)
!13682 = !DILocation(line: 262, column: 11, scope: !13671)
!13683 = !DILocation(line: 265, column: 9, scope: !13586)
!13684 = !DILocation(line: 265, column: 19, scope: !13586)
!13685 = !DILocation(line: 265, column: 17, scope: !13586)
!13686 = !DILocation(line: 265, column: 7, scope: !13586)
!13687 = !DILocation(line: 266, column: 14, scope: !13586)
!13688 = !DILocation(line: 266, column: 17, scope: !13586)
!13689 = !DILocation(line: 266, column: 22, scope: !13586)
!13690 = !DILocation(line: 266, column: 5, scope: !13586)
!13691 = !DILocation(line: 267, column: 18, scope: !13586)
!13692 = !DILocation(line: 267, column: 22, scope: !13586)
!13693 = !DILocation(line: 267, column: 20, scope: !13586)
!13694 = !DILocation(line: 267, column: 31, scope: !13586)
!13695 = !DILocation(line: 267, column: 29, scope: !13586)
!13696 = !DILocation(line: 267, column: 16, scope: !13586)
!13697 = !DILocation(line: 269, column: 3, scope: !13415)
!13698 = !DILabel(scope: !13415, name: "use_integer_arithmetic", file: !1339, line: 271)
!13699 = !DILocation(line: 271, column: 2, scope: !13415)
!13700 = !DILocation(line: 278, column: 9, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !1339, line: 278, column: 9)
!13702 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 272, column: 3)
!13703 = !DILocation(line: 278, column: 14, scope: !13701)
!13704 = !DILocation(line: 278, column: 9, scope: !13702)
!13705 = !DILocation(line: 280, column: 18, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13701, file: !1339, line: 279, column: 7)
!13707 = !DILocation(line: 282, column: 13, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13706, file: !1339, line: 282, column: 13)
!13709 = !DILocation(line: 282, column: 21, scope: !13708)
!13710 = !DILocation(line: 282, column: 18, scope: !13708)
!13711 = !DILocation(line: 282, column: 13, scope: !13706)
!13712 = !DILocation(line: 284, column: 13, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13708, file: !1339, line: 283, column: 11)
!13714 = !DILocalVariable(name: "r10", scope: !13715, file: !1339, line: 286, type: !6)
!13715 = distinct !DILexicalBlock(scope: !13713, file: !1339, line: 285, column: 15)
!13716 = !DILocation(line: 286, column: 30, scope: !13715)
!13717 = !DILocation(line: 286, column: 37, scope: !13715)
!13718 = !DILocation(line: 286, column: 43, scope: !13715)
!13719 = !DILocation(line: 286, column: 41, scope: !13715)
!13720 = !DILocation(line: 286, column: 49, scope: !13715)
!13721 = !DILocation(line: 286, column: 56, scope: !13715)
!13722 = !DILocation(line: 286, column: 54, scope: !13715)
!13723 = !DILocation(line: 286, column: 36, scope: !13715)
!13724 = !DILocalVariable(name: "r2", scope: !13715, file: !1339, line: 287, type: !6)
!13725 = !DILocation(line: 287, column: 30, scope: !13715)
!13726 = !DILocation(line: 287, column: 36, scope: !13715)
!13727 = !DILocation(line: 287, column: 42, scope: !13715)
!13728 = !DILocation(line: 287, column: 40, scope: !13715)
!13729 = !DILocation(line: 287, column: 48, scope: !13715)
!13730 = !DILocation(line: 287, column: 55, scope: !13715)
!13731 = !DILocation(line: 287, column: 64, scope: !13715)
!13732 = !DILocation(line: 287, column: 52, scope: !13715)
!13733 = !DILocation(line: 288, column: 24, scope: !13715)
!13734 = !DILocation(line: 288, column: 21, scope: !13715)
!13735 = !DILocation(line: 289, column: 26, scope: !13715)
!13736 = !DILocation(line: 289, column: 32, scope: !13715)
!13737 = !DILocation(line: 289, column: 30, scope: !13715)
!13738 = !DILocation(line: 289, column: 24, scope: !13715)
!13739 = !DILocation(line: 290, column: 29, scope: !13715)
!13740 = !DILocation(line: 290, column: 34, scope: !13715)
!13741 = !DILocation(line: 290, column: 32, scope: !13715)
!13742 = !DILocation(line: 291, column: 32, scope: !13715)
!13743 = !DILocation(line: 291, column: 37, scope: !13715)
!13744 = !DILocation(line: 291, column: 35, scope: !13715)
!13745 = !DILocation(line: 291, column: 47, scope: !13715)
!13746 = !DILocation(line: 292, column: 36, scope: !13715)
!13747 = !DILocation(line: 292, column: 43, scope: !13715)
!13748 = !DILocation(line: 292, column: 48, scope: !13715)
!13749 = !DILocation(line: 292, column: 46, scope: !13715)
!13750 = !DILocation(line: 292, column: 41, scope: !13715)
!13751 = !DILocation(line: 292, column: 33, scope: !13715)
!13752 = !DILocation(line: 290, column: 26, scope: !13715)
!13753 = !DILocation(line: 293, column: 25, scope: !13715)
!13754 = !DILocation(line: 294, column: 15, scope: !13715)
!13755 = !DILocation(line: 295, column: 20, scope: !13713)
!13756 = !DILocation(line: 295, column: 28, scope: !13713)
!13757 = !DILocation(line: 295, column: 25, scope: !13713)
!13758 = !DILocation(line: 295, column: 32, scope: !13713)
!13759 = !DILocation(line: 295, column: 35, scope: !13713)
!13760 = !DILocation(line: 295, column: 46, scope: !13713)
!13761 = !DILocation(line: 295, column: 44, scope: !13713)
!13762 = !DILocation(line: 0, scope: !13713)
!13763 = distinct !{!13763, !13712, !13764}
!13764 = !DILocation(line: 295, column: 58, scope: !13713)
!13765 = !DILocation(line: 297, column: 17, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13713, file: !1339, line: 297, column: 17)
!13767 = !DILocation(line: 297, column: 21, scope: !13766)
!13768 = !DILocation(line: 297, column: 17, scope: !13713)
!13769 = !DILocation(line: 299, column: 21, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !1339, line: 299, column: 21)
!13771 = distinct !DILexicalBlock(scope: !13766, file: !1339, line: 298, column: 15)
!13772 = !DILocation(line: 299, column: 35, scope: !13770)
!13773 = !DILocation(line: 299, column: 21, scope: !13771)
!13774 = !DILocation(line: 300, column: 27, scope: !13770)
!13775 = !DILocation(line: 300, column: 39, scope: !13770)
!13776 = !DILocation(line: 300, column: 46, scope: !13770)
!13777 = !DILocation(line: 300, column: 36, scope: !13770)
!13778 = !DILocation(line: 300, column: 25, scope: !13770)
!13779 = !DILocation(line: 301, column: 23, scope: !13770)
!13780 = !DILocation(line: 301, column: 37, scope: !13770)
!13781 = !DILocation(line: 301, column: 54, scope: !13770)
!13782 = !DILocation(line: 301, column: 61, scope: !13770)
!13783 = !DILocation(line: 301, column: 59, scope: !13770)
!13784 = !DILocation(line: 303, column: 27, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13770, file: !1339, line: 302, column: 19)
!13786 = !DILocation(line: 304, column: 30, scope: !13785)
!13787 = !DILocation(line: 306, column: 25, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13785, file: !1339, line: 306, column: 25)
!13789 = !DILocation(line: 306, column: 32, scope: !13788)
!13790 = !DILocation(line: 306, column: 25, scope: !13785)
!13791 = !DILocation(line: 308, column: 28, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13788, file: !1339, line: 307, column: 23)
!13793 = !DILocation(line: 309, column: 32, scope: !13792)
!13794 = !DILocation(line: 310, column: 23, scope: !13792)
!13795 = !DILocation(line: 311, column: 19, scope: !13785)
!13796 = !DILocation(line: 313, column: 21, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13771, file: !1339, line: 313, column: 21)
!13798 = !DILocation(line: 313, column: 25, scope: !13797)
!13799 = !DILocation(line: 314, column: 21, scope: !13797)
!13800 = !DILocation(line: 314, column: 25, scope: !13797)
!13801 = !DILocation(line: 314, column: 32, scope: !13797)
!13802 = !DILocation(line: 314, column: 38, scope: !13797)
!13803 = !DILocation(line: 314, column: 43, scope: !13797)
!13804 = !DILocation(line: 313, column: 21, scope: !13771)
!13805 = !DILocation(line: 316, column: 34, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13797, file: !1339, line: 315, column: 19)
!13807 = !DILocation(line: 316, column: 32, scope: !13806)
!13808 = !DILocation(line: 316, column: 28, scope: !13806)
!13809 = !DILocation(line: 316, column: 22, scope: !13806)
!13810 = !DILocation(line: 316, column: 26, scope: !13806)
!13811 = !DILocation(line: 317, column: 26, scope: !13806)
!13812 = !DILocation(line: 317, column: 23, scope: !13806)
!13813 = !DILocation(line: 318, column: 29, scope: !13806)
!13814 = !DILocation(line: 318, column: 32, scope: !13806)
!13815 = !DILocation(line: 318, column: 47, scope: !13806)
!13816 = !DILocation(line: 318, column: 21, scope: !13806)
!13817 = !DILocation(line: 319, column: 39, scope: !13806)
!13818 = !DILocation(line: 319, column: 28, scope: !13806)
!13819 = !DILocation(line: 320, column: 19, scope: !13806)
!13820 = !DILocation(line: 321, column: 15, scope: !13771)
!13821 = !DILocation(line: 322, column: 11, scope: !13713)
!13822 = !DILocation(line: 323, column: 7, scope: !13706)
!13823 = !DILocation(line: 325, column: 9, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13702, file: !1339, line: 325, column: 9)
!13825 = !DILocation(line: 325, column: 23, scope: !13824)
!13826 = !DILocation(line: 325, column: 9, scope: !13702)
!13827 = !DILocation(line: 326, column: 15, scope: !13824)
!13828 = !DILocation(line: 326, column: 29, scope: !13824)
!13829 = !DILocation(line: 326, column: 41, scope: !13824)
!13830 = !DILocation(line: 326, column: 45, scope: !13824)
!13831 = !DILocation(line: 326, column: 38, scope: !13824)
!13832 = !DILocation(line: 326, column: 27, scope: !13824)
!13833 = !DILocation(line: 326, column: 22, scope: !13824)
!13834 = !DILocation(line: 326, column: 13, scope: !13824)
!13835 = !DILocation(line: 327, column: 11, scope: !13824)
!13836 = !DILocation(line: 327, column: 25, scope: !13824)
!13837 = !DILocation(line: 327, column: 42, scope: !13824)
!13838 = !DILocation(line: 327, column: 49, scope: !13824)
!13839 = !DILocation(line: 327, column: 58, scope: !13824)
!13840 = !DILocation(line: 327, column: 56, scope: !13824)
!13841 = !DILocation(line: 327, column: 47, scope: !13824)
!13842 = !DILocation(line: 329, column: 12, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13824, file: !1339, line: 328, column: 7)
!13844 = !DILocation(line: 331, column: 14, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13843, file: !1339, line: 331, column: 13)
!13846 = !DILocation(line: 331, column: 19, scope: !13845)
!13847 = !DILocation(line: 332, column: 13, scope: !13845)
!13848 = !DILocation(line: 332, column: 16, scope: !13845)
!13849 = !DILocation(line: 332, column: 23, scope: !13845)
!13850 = !DILocation(line: 332, column: 20, scope: !13845)
!13851 = !DILocation(line: 332, column: 28, scope: !13845)
!13852 = !DILocation(line: 332, column: 31, scope: !13845)
!13853 = !DILocation(line: 332, column: 42, scope: !13845)
!13854 = !DILocation(line: 332, column: 40, scope: !13845)
!13855 = !DILocation(line: 331, column: 13, scope: !13843)
!13856 = !DILocation(line: 334, column: 21, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13845, file: !1339, line: 333, column: 11)
!13858 = !DILocation(line: 335, column: 20, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13857, file: !1339, line: 335, column: 17)
!13860 = !DILocation(line: 335, column: 25, scope: !13859)
!13861 = !DILocation(line: 335, column: 17, scope: !13857)
!13862 = !DILocation(line: 337, column: 18, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13859, file: !1339, line: 336, column: 15)
!13864 = !DILocation(line: 337, column: 22, scope: !13863)
!13865 = !DILocation(line: 338, column: 22, scope: !13863)
!13866 = !DILocation(line: 338, column: 19, scope: !13863)
!13867 = !DILocation(line: 339, column: 25, scope: !13863)
!13868 = !DILocation(line: 339, column: 28, scope: !13863)
!13869 = !DILocation(line: 339, column: 43, scope: !13863)
!13870 = !DILocation(line: 339, column: 17, scope: !13863)
!13871 = !DILocation(line: 340, column: 15, scope: !13863)
!13872 = !DILocation(line: 341, column: 17, scope: !13857)
!13873 = !DILocation(line: 342, column: 11, scope: !13857)
!13874 = !DILocation(line: 343, column: 7, scope: !13843)
!13875 = !DILocation(line: 345, column: 18, scope: !13702)
!13876 = !DILocation(line: 345, column: 16, scope: !13702)
!13877 = !DILocation(line: 347, column: 5, scope: !13702)
!13878 = !DILocalVariable(name: "digit", scope: !13879, file: !1339, line: 349, type: !27)
!13879 = distinct !DILexicalBlock(scope: !13702, file: !1339, line: 348, column: 7)
!13880 = !DILocation(line: 349, column: 13, scope: !13879)
!13881 = !DILocation(line: 349, column: 21, scope: !13879)
!13882 = !DILocation(line: 349, column: 25, scope: !13879)
!13883 = !DILocation(line: 350, column: 16, scope: !13879)
!13884 = !DILocation(line: 350, column: 22, scope: !13879)
!13885 = !DILocation(line: 350, column: 10, scope: !13879)
!13886 = !DILocation(line: 350, column: 14, scope: !13879)
!13887 = !DILocation(line: 351, column: 7, scope: !13879)
!13888 = !DILocation(line: 352, column: 17, scope: !13702)
!13889 = !DILocation(line: 352, column: 24, scope: !13702)
!13890 = distinct !{!13890, !13877, !13891}
!13891 = !DILocation(line: 352, column: 28, scope: !13702)
!13892 = !DILocation(line: 353, column: 3, scope: !13702)
!13893 = !DILabel(scope: !13415, name: "do_grouping", file: !1339, line: 355)
!13894 = !DILocation(line: 355, column: 2, scope: !13415)
!13895 = !DILocation(line: 356, column: 7, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 356, column: 7)
!13897 = !DILocation(line: 356, column: 12, scope: !13896)
!13898 = !DILocation(line: 356, column: 7, scope: !13415)
!13899 = !DILocation(line: 357, column: 23, scope: !13896)
!13900 = !DILocation(line: 357, column: 26, scope: !13896)
!13901 = !DILocation(line: 357, column: 39, scope: !13896)
!13902 = !DILocation(line: 357, column: 37, scope: !13896)
!13903 = !DILocation(line: 357, column: 42, scope: !13896)
!13904 = !DILocation(line: 357, column: 52, scope: !13896)
!13905 = !DILocation(line: 357, column: 9, scope: !13896)
!13906 = !DILocation(line: 357, column: 7, scope: !13896)
!13907 = !DILocation(line: 357, column: 5, scope: !13896)
!13908 = !DILocation(line: 359, column: 7, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13415, file: !1339, line: 359, column: 7)
!13910 = !DILocation(line: 359, column: 12, scope: !13909)
!13911 = !DILocation(line: 359, column: 7, scope: !13415)
!13912 = !DILocation(line: 361, column: 11, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !1339, line: 361, column: 11)
!13914 = distinct !DILexicalBlock(scope: !13909, file: !1339, line: 360, column: 5)
!13915 = !DILocation(line: 361, column: 20, scope: !13913)
!13916 = !DILocation(line: 361, column: 11, scope: !13914)
!13917 = !DILocalVariable(name: "power", scope: !13918, file: !1339, line: 363, type: !168)
!13918 = distinct !DILexicalBlock(scope: !13913, file: !1339, line: 362, column: 9)
!13919 = !DILocation(line: 363, column: 21, scope: !13918)
!13920 = !DILocation(line: 364, column: 20, scope: !13918)
!13921 = !DILocation(line: 365, column: 22, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !1339, line: 365, column: 11)
!13923 = !DILocation(line: 365, column: 16, scope: !13922)
!13924 = !DILocation(line: 365, column: 27, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13922, file: !1339, line: 365, column: 11)
!13926 = !DILocation(line: 365, column: 35, scope: !13925)
!13927 = !DILocation(line: 365, column: 33, scope: !13925)
!13928 = !DILocation(line: 365, column: 11, scope: !13922)
!13929 = !DILocation(line: 366, column: 17, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13925, file: !1339, line: 366, column: 17)
!13931 = !DILocation(line: 366, column: 31, scope: !13930)
!13932 = !DILocation(line: 366, column: 28, scope: !13930)
!13933 = !DILocation(line: 366, column: 17, scope: !13925)
!13934 = !DILocation(line: 367, column: 15, scope: !13930)
!13935 = !DILocation(line: 365, column: 59, scope: !13925)
!13936 = !DILocation(line: 365, column: 56, scope: !13925)
!13937 = !DILocation(line: 365, column: 11, scope: !13925)
!13938 = distinct !{!13938, !13928, !13939}
!13939 = !DILocation(line: 367, column: 15, scope: !13922)
!13940 = !DILocation(line: 368, column: 9, scope: !13918)
!13941 = !DILocation(line: 370, column: 12, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13914, file: !1339, line: 370, column: 11)
!13943 = !DILocation(line: 370, column: 24, scope: !13942)
!13944 = !DILocation(line: 370, column: 29, scope: !13942)
!13945 = !DILocation(line: 370, column: 21, scope: !13942)
!13946 = !DILocation(line: 370, column: 41, scope: !13942)
!13947 = !DILocation(line: 370, column: 45, scope: !13942)
!13948 = !DILocation(line: 370, column: 50, scope: !13942)
!13949 = !DILocation(line: 370, column: 11, scope: !13914)
!13950 = !DILocation(line: 371, column: 17, scope: !13942)
!13951 = !DILocation(line: 371, column: 20, scope: !13942)
!13952 = !DILocation(line: 371, column: 9, scope: !13942)
!13953 = !DILocation(line: 373, column: 11, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13914, file: !1339, line: 373, column: 11)
!13955 = !DILocation(line: 373, column: 11, scope: !13914)
!13956 = !DILocation(line: 374, column: 26, scope: !13954)
!13957 = !DILocation(line: 374, column: 31, scope: !13954)
!13958 = !DILocation(line: 374, column: 50, scope: !13954)
!13959 = !DILocation(line: 374, column: 53, scope: !13954)
!13960 = !DILocation(line: 374, column: 62, scope: !13954)
!13961 = !DILocation(line: 374, column: 23, scope: !13954)
!13962 = !DILocation(line: 376, column: 38, scope: !13954)
!13963 = !DILocation(line: 376, column: 25, scope: !13954)
!13964 = !DILocation(line: 374, column: 22, scope: !13954)
!13965 = !DILocation(line: 374, column: 17, scope: !13954)
!13966 = !DILocation(line: 374, column: 20, scope: !13954)
!13967 = !DILocation(line: 374, column: 9, scope: !13954)
!13968 = !DILocation(line: 378, column: 11, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13914, file: !1339, line: 378, column: 11)
!13970 = !DILocation(line: 378, column: 16, scope: !13969)
!13971 = !DILocation(line: 378, column: 11, scope: !13914)
!13972 = !DILocation(line: 380, column: 16, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13974, file: !1339, line: 380, column: 15)
!13974 = distinct !DILexicalBlock(scope: !13969, file: !1339, line: 379, column: 9)
!13975 = !DILocation(line: 380, column: 21, scope: !13973)
!13976 = !DILocation(line: 380, column: 40, scope: !13973)
!13977 = !DILocation(line: 380, column: 43, scope: !13973)
!13978 = !DILocation(line: 380, column: 15, scope: !13974)
!13979 = !DILocation(line: 381, column: 21, scope: !13973)
!13980 = !DILocation(line: 381, column: 24, scope: !13973)
!13981 = !DILocation(line: 381, column: 13, scope: !13973)
!13982 = !DILocation(line: 382, column: 19, scope: !13974)
!13983 = !DILocation(line: 382, column: 22, scope: !13974)
!13984 = !DILocation(line: 383, column: 9, scope: !13974)
!13985 = !DILocation(line: 384, column: 5, scope: !13914)
!13986 = !DILocation(line: 386, column: 4, scope: !13415)
!13987 = !DILocation(line: 386, column: 12, scope: !13415)
!13988 = !DILocation(line: 388, column: 10, scope: !13415)
!13989 = !DILocation(line: 388, column: 3, scope: !13415)
!13990 = distinct !DISubprogram(name: "adjust_value", scope: !1339, file: !1339, line: 54, type: !1323, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!13991 = !DILocalVariable(name: "inexact_style", arg: 1, scope: !13990, file: !1339, line: 54, type: !27)
!13992 = !DILocation(line: 54, column: 19, scope: !13990)
!13993 = !DILocalVariable(name: "value", arg: 2, scope: !13990, file: !1339, line: 54, type: !1317)
!13994 = !DILocation(line: 54, column: 46, scope: !13990)
!13995 = !DILocation(line: 60, column: 7, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13990, file: !1339, line: 60, column: 7)
!13997 = !DILocation(line: 60, column: 21, scope: !13996)
!13998 = !DILocation(line: 60, column: 47, scope: !13996)
!13999 = !DILocation(line: 60, column: 50, scope: !13996)
!14000 = !DILocation(line: 60, column: 56, scope: !13996)
!14001 = !DILocation(line: 60, column: 7, scope: !13990)
!14002 = !DILocalVariable(name: "u", scope: !14003, file: !1339, line: 62, type: !168)
!14003 = distinct !DILexicalBlock(scope: !13996, file: !1339, line: 61, column: 5)
!14004 = !DILocation(line: 62, column: 17, scope: !14003)
!14005 = !DILocation(line: 62, column: 21, scope: !14003)
!14006 = !DILocation(line: 63, column: 15, scope: !14003)
!14007 = !DILocation(line: 63, column: 20, scope: !14003)
!14008 = !DILocation(line: 63, column: 34, scope: !14003)
!14009 = !DILocation(line: 63, column: 51, scope: !14003)
!14010 = !DILocation(line: 63, column: 54, scope: !14003)
!14011 = !DILocation(line: 63, column: 59, scope: !14003)
!14012 = !DILocation(line: 63, column: 56, scope: !14003)
!14013 = !DILocation(line: 0, scope: !14003)
!14014 = !DILocation(line: 63, column: 19, scope: !14003)
!14015 = !DILocation(line: 63, column: 17, scope: !14003)
!14016 = !DILocation(line: 63, column: 13, scope: !14003)
!14017 = !DILocation(line: 64, column: 5, scope: !14003)
!14018 = !DILocation(line: 66, column: 10, scope: !13990)
!14019 = !DILocation(line: 66, column: 3, scope: !13990)
!14020 = distinct !DISubprogram(name: "group_number", scope: !1339, file: !1339, line: 79, type: !1325, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14021 = !DILocalVariable(name: "number", arg: 1, scope: !14020, file: !1339, line: 79, type: !143)
!14022 = !DILocation(line: 79, column: 21, scope: !14020)
!14023 = !DILocalVariable(name: "numberlen", arg: 2, scope: !14020, file: !1339, line: 79, type: !149)
!14024 = !DILocation(line: 79, column: 36, scope: !14020)
!14025 = !DILocalVariable(name: "grouping", arg: 3, scope: !14020, file: !1339, line: 80, type: !146)
!14026 = !DILocation(line: 80, column: 27, scope: !14020)
!14027 = !DILocalVariable(name: "thousands_sep", arg: 4, scope: !14020, file: !1339, line: 80, type: !146)
!14028 = !DILocation(line: 80, column: 49, scope: !14020)
!14029 = !DILocalVariable(name: "d", scope: !14020, file: !1339, line: 82, type: !143)
!14030 = !DILocation(line: 82, column: 18, scope: !14020)
!14031 = !DILocalVariable(name: "grouplen", scope: !14020, file: !1339, line: 83, type: !149)
!14032 = !DILocation(line: 83, column: 10, scope: !14020)
!14033 = !DILocalVariable(name: "thousands_seplen", scope: !14020, file: !1339, line: 84, type: !149)
!14034 = !DILocation(line: 84, column: 10, scope: !14020)
!14035 = !DILocation(line: 84, column: 37, scope: !14020)
!14036 = !DILocation(line: 84, column: 29, scope: !14020)
!14037 = !DILocalVariable(name: "i", scope: !14020, file: !1339, line: 85, type: !149)
!14038 = !DILocation(line: 85, column: 10, scope: !14020)
!14039 = !DILocation(line: 85, column: 14, scope: !14020)
!14040 = !DILocalVariable(name: "buf", scope: !14020, file: !1339, line: 89, type: !1327)
!14041 = !DILocation(line: 89, column: 8, scope: !14020)
!14042 = !DILocation(line: 91, column: 3, scope: !14020)
!14043 = !DILocation(line: 91, column: 16, scope: !14020)
!14044 = !DILocation(line: 91, column: 24, scope: !14020)
!14045 = !DILocation(line: 92, column: 7, scope: !14020)
!14046 = !DILocation(line: 92, column: 16, scope: !14020)
!14047 = !DILocation(line: 92, column: 14, scope: !14020)
!14048 = !DILocation(line: 92, column: 5, scope: !14020)
!14049 = !DILocation(line: 94, column: 3, scope: !14020)
!14050 = !DILocalVariable(name: "g", scope: !14051, file: !1339, line: 96, type: !591)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !1339, line: 95, column: 5)
!14052 = distinct !DILexicalBlock(scope: !14053, file: !1339, line: 94, column: 3)
!14053 = distinct !DILexicalBlock(scope: !14020, file: !1339, line: 94, column: 3)
!14054 = !DILocation(line: 96, column: 21, scope: !14051)
!14055 = !DILocation(line: 96, column: 26, scope: !14051)
!14056 = !DILocation(line: 96, column: 25, scope: !14051)
!14057 = !DILocation(line: 98, column: 11, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14051, file: !1339, line: 98, column: 11)
!14059 = !DILocation(line: 98, column: 11, scope: !14051)
!14060 = !DILocation(line: 100, column: 22, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14058, file: !1339, line: 99, column: 9)
!14062 = !DILocation(line: 100, column: 24, scope: !14061)
!14063 = !DILocation(line: 100, column: 37, scope: !14061)
!14064 = !DILocation(line: 100, column: 41, scope: !14061)
!14065 = !DILocation(line: 100, column: 20, scope: !14061)
!14066 = !DILocation(line: 101, column: 19, scope: !14061)
!14067 = !DILocation(line: 102, column: 9, scope: !14061)
!14068 = !DILocation(line: 104, column: 11, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14051, file: !1339, line: 104, column: 11)
!14070 = !DILocation(line: 104, column: 15, scope: !14069)
!14071 = !DILocation(line: 104, column: 13, scope: !14069)
!14072 = !DILocation(line: 104, column: 11, scope: !14051)
!14073 = !DILocation(line: 105, column: 20, scope: !14069)
!14074 = !DILocation(line: 105, column: 18, scope: !14069)
!14075 = !DILocation(line: 105, column: 9, scope: !14069)
!14076 = !DILocation(line: 107, column: 12, scope: !14051)
!14077 = !DILocation(line: 107, column: 9, scope: !14051)
!14078 = !DILocation(line: 108, column: 12, scope: !14051)
!14079 = !DILocation(line: 108, column: 9, scope: !14051)
!14080 = !DILocation(line: 109, column: 15, scope: !14051)
!14081 = !DILocation(line: 109, column: 18, scope: !14051)
!14082 = !DILocation(line: 109, column: 24, scope: !14051)
!14083 = !DILocation(line: 109, column: 22, scope: !14051)
!14084 = !DILocation(line: 109, column: 27, scope: !14051)
!14085 = !DILocation(line: 109, column: 7, scope: !14051)
!14086 = !DILocation(line: 110, column: 11, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14051, file: !1339, line: 110, column: 11)
!14088 = !DILocation(line: 110, column: 13, scope: !14087)
!14089 = !DILocation(line: 110, column: 11, scope: !14051)
!14090 = !DILocation(line: 111, column: 16, scope: !14087)
!14091 = !DILocation(line: 111, column: 9, scope: !14087)
!14092 = !DILocation(line: 113, column: 12, scope: !14051)
!14093 = !DILocation(line: 113, column: 9, scope: !14051)
!14094 = !DILocation(line: 114, column: 15, scope: !14051)
!14095 = !DILocation(line: 114, column: 18, scope: !14051)
!14096 = !DILocation(line: 114, column: 33, scope: !14051)
!14097 = !DILocation(line: 114, column: 7, scope: !14051)
!14098 = !DILocation(line: 94, column: 3, scope: !14052)
!14099 = distinct !{!14099, !14100, !14101}
!14100 = !DILocation(line: 94, column: 3, scope: !14053)
!14101 = !DILocation(line: 115, column: 5, scope: !14053)
!14102 = distinct !DISubprogram(name: "human_options", scope: !1339, file: !1339, line: 462, type: !1319, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14103 = !DILocalVariable(name: "spec", arg: 1, scope: !14102, file: !1339, line: 462, type: !146)
!14104 = !DILocation(line: 462, column: 28, scope: !14102)
!14105 = !DILocalVariable(name: "opts", arg: 2, scope: !14102, file: !1339, line: 462, type: !524)
!14106 = !DILocation(line: 462, column: 39, scope: !14102)
!14107 = !DILocalVariable(name: "block_size", arg: 3, scope: !14102, file: !1339, line: 462, type: !1321)
!14108 = !DILocation(line: 462, column: 56, scope: !14102)
!14109 = !DILocalVariable(name: "e", scope: !14102, file: !1339, line: 464, type: !1322)
!14110 = !DILocation(line: 464, column: 16, scope: !14102)
!14111 = !DILocation(line: 464, column: 30, scope: !14102)
!14112 = !DILocation(line: 464, column: 36, scope: !14102)
!14113 = !DILocation(line: 464, column: 48, scope: !14102)
!14114 = !DILocation(line: 464, column: 20, scope: !14102)
!14115 = !DILocation(line: 465, column: 8, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14102, file: !1339, line: 465, column: 7)
!14117 = !DILocation(line: 465, column: 7, scope: !14116)
!14118 = !DILocation(line: 465, column: 19, scope: !14116)
!14119 = !DILocation(line: 465, column: 7, scope: !14102)
!14120 = !DILocation(line: 467, column: 21, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14116, file: !1339, line: 466, column: 5)
!14122 = !DILocation(line: 467, column: 8, scope: !14121)
!14123 = !DILocation(line: 467, column: 19, scope: !14121)
!14124 = !DILocation(line: 468, column: 9, scope: !14121)
!14125 = !DILocation(line: 469, column: 5, scope: !14121)
!14126 = !DILocation(line: 470, column: 10, scope: !14102)
!14127 = !DILocation(line: 470, column: 3, scope: !14102)
!14128 = distinct !DISubprogram(name: "humblock", scope: !1339, file: !1339, line: 412, type: !1330, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14129 = !DILocalVariable(name: "spec", arg: 1, scope: !14128, file: !1339, line: 412, type: !146)
!14130 = !DILocation(line: 412, column: 23, scope: !14128)
!14131 = !DILocalVariable(name: "block_size", arg: 2, scope: !14128, file: !1339, line: 412, type: !1321)
!14132 = !DILocation(line: 412, column: 40, scope: !14128)
!14133 = !DILocalVariable(name: "options", arg: 3, scope: !14128, file: !1339, line: 412, type: !524)
!14134 = !DILocation(line: 412, column: 57, scope: !14128)
!14135 = !DILocalVariable(name: "i", scope: !14128, file: !1339, line: 414, type: !27)
!14136 = !DILocation(line: 414, column: 7, scope: !14128)
!14137 = !DILocalVariable(name: "opts", scope: !14128, file: !1339, line: 415, type: !27)
!14138 = !DILocation(line: 415, column: 7, scope: !14128)
!14139 = !DILocation(line: 417, column: 9, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14128, file: !1339, line: 417, column: 7)
!14141 = !DILocation(line: 418, column: 7, scope: !14140)
!14142 = !DILocation(line: 418, column: 20, scope: !14140)
!14143 = !DILocation(line: 418, column: 18, scope: !14140)
!14144 = !DILocation(line: 419, column: 7, scope: !14140)
!14145 = !DILocation(line: 419, column: 20, scope: !14140)
!14146 = !DILocation(line: 419, column: 18, scope: !14140)
!14147 = !DILocation(line: 417, column: 7, scope: !14128)
!14148 = !DILocation(line: 420, column: 19, scope: !14140)
!14149 = !DILocation(line: 420, column: 6, scope: !14140)
!14150 = !DILocation(line: 420, column: 17, scope: !14140)
!14151 = !DILocation(line: 420, column: 5, scope: !14140)
!14152 = !DILocation(line: 423, column: 12, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !1339, line: 423, column: 11)
!14154 = distinct !DILexicalBlock(scope: !14140, file: !1339, line: 422, column: 5)
!14155 = !DILocation(line: 423, column: 11, scope: !14153)
!14156 = !DILocation(line: 423, column: 17, scope: !14153)
!14157 = !DILocation(line: 423, column: 11, scope: !14154)
!14158 = !DILocation(line: 425, column: 16, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14153, file: !1339, line: 424, column: 9)
!14160 = !DILocation(line: 426, column: 15, scope: !14159)
!14161 = !DILocation(line: 427, column: 9, scope: !14159)
!14162 = !DILocation(line: 429, column: 21, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14154, file: !1339, line: 429, column: 11)
!14164 = !DILocation(line: 429, column: 19, scope: !14163)
!14165 = !DILocation(line: 429, column: 13, scope: !14163)
!14166 = !DILocation(line: 429, column: 11, scope: !14154)
!14167 = !DILocation(line: 431, column: 35, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14163, file: !1339, line: 430, column: 9)
!14169 = !DILocation(line: 431, column: 19, scope: !14168)
!14170 = !DILocation(line: 431, column: 16, scope: !14168)
!14171 = !DILocation(line: 432, column: 12, scope: !14168)
!14172 = !DILocation(line: 432, column: 23, scope: !14168)
!14173 = !DILocation(line: 433, column: 9, scope: !14168)
!14174 = !DILocalVariable(name: "ptr", scope: !14175, file: !1339, line: 436, type: !143)
!14175 = distinct !DILexicalBlock(scope: !14163, file: !1339, line: 435, column: 9)
!14176 = !DILocation(line: 436, column: 17, scope: !14175)
!14177 = !DILocalVariable(name: "e", scope: !14175, file: !1339, line: 437, type: !1322)
!14178 = !DILocation(line: 437, column: 24, scope: !14175)
!14179 = !DILocation(line: 437, column: 40, scope: !14175)
!14180 = !DILocation(line: 437, column: 55, scope: !14175)
!14181 = !DILocation(line: 437, column: 28, scope: !14175)
!14182 = !DILocation(line: 439, column: 15, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14175, file: !1339, line: 439, column: 15)
!14184 = !DILocation(line: 439, column: 17, scope: !14183)
!14185 = !DILocation(line: 439, column: 15, scope: !14175)
!14186 = !DILocation(line: 441, column: 16, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14183, file: !1339, line: 440, column: 13)
!14188 = !DILocation(line: 441, column: 24, scope: !14187)
!14189 = !DILocation(line: 442, column: 22, scope: !14187)
!14190 = !DILocation(line: 442, column: 15, scope: !14187)
!14191 = !DILocation(line: 444, column: 11, scope: !14175)
!14192 = !DILocation(line: 444, column: 29, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14194, file: !1339, line: 444, column: 11)
!14194 = distinct !DILexicalBlock(scope: !14175, file: !1339, line: 444, column: 11)
!14195 = !DILocation(line: 444, column: 28, scope: !14193)
!14196 = !DILocation(line: 444, column: 25, scope: !14193)
!14197 = !DILocation(line: 444, column: 34, scope: !14193)
!14198 = !DILocation(line: 444, column: 38, scope: !14193)
!14199 = !DILocation(line: 444, column: 37, scope: !14193)
!14200 = !DILocation(line: 444, column: 43, scope: !14193)
!14201 = !DILocation(line: 0, scope: !14193)
!14202 = !DILocation(line: 444, column: 18, scope: !14193)
!14203 = !DILocation(line: 444, column: 11, scope: !14194)
!14204 = !DILocation(line: 445, column: 17, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14193, file: !1339, line: 445, column: 17)
!14206 = !DILocation(line: 445, column: 25, scope: !14205)
!14207 = !DILocation(line: 445, column: 22, scope: !14205)
!14208 = !DILocation(line: 445, column: 17, scope: !14193)
!14209 = !DILocation(line: 447, column: 22, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14205, file: !1339, line: 446, column: 15)
!14211 = !DILocation(line: 448, column: 21, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14210, file: !1339, line: 448, column: 21)
!14213 = !DILocation(line: 448, column: 29, scope: !14212)
!14214 = !DILocation(line: 448, column: 21, scope: !14210)
!14215 = !DILocation(line: 449, column: 24, scope: !14212)
!14216 = !DILocation(line: 449, column: 19, scope: !14212)
!14217 = !DILocation(line: 450, column: 21, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14210, file: !1339, line: 450, column: 21)
!14219 = !DILocation(line: 450, column: 29, scope: !14218)
!14220 = !DILocation(line: 450, column: 36, scope: !14218)
!14221 = !DILocation(line: 450, column: 39, scope: !14218)
!14222 = !DILocation(line: 450, column: 47, scope: !14218)
!14223 = !DILocation(line: 450, column: 21, scope: !14210)
!14224 = !DILocation(line: 451, column: 24, scope: !14218)
!14225 = !DILocation(line: 451, column: 19, scope: !14218)
!14226 = !DILocation(line: 452, column: 17, scope: !14210)
!14227 = !DILocation(line: 444, column: 56, scope: !14193)
!14228 = !DILocation(line: 444, column: 11, scope: !14193)
!14229 = distinct !{!14229, !14203, !14230}
!14230 = !DILocation(line: 453, column: 15, scope: !14194)
!14231 = !DILocation(line: 457, column: 14, scope: !14128)
!14232 = !DILocation(line: 457, column: 4, scope: !14128)
!14233 = !DILocation(line: 457, column: 12, scope: !14128)
!14234 = !DILocation(line: 458, column: 3, scope: !14128)
!14235 = !DILocation(line: 459, column: 1, scope: !14128)
!14236 = distinct !DISubprogram(name: "default_block_size", scope: !1339, file: !1339, line: 406, type: !1334, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1282, retainedNodes: !152)
!14237 = !DILocation(line: 408, column: 10, scope: !14236)
!14238 = !DILocation(line: 408, column: 3, scope: !14236)
!14239 = distinct !DISubprogram(name: "getuser", scope: !1351, file: !1351, line: 69, type: !1347, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14240 = !DILocalVariable(name: "uid", arg: 1, scope: !14239, file: !1351, line: 69, type: !692)
!14241 = !DILocation(line: 69, column: 16, scope: !14239)
!14242 = !DILocalVariable(name: "tail", scope: !14239, file: !1351, line: 71, type: !1349)
!14243 = !DILocation(line: 71, column: 18, scope: !14239)
!14244 = !DILocalVariable(name: "match", scope: !14239, file: !1351, line: 72, type: !1349)
!14245 = !DILocation(line: 72, column: 18, scope: !14239)
!14246 = !DILocation(line: 74, column: 15, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14239, file: !1351, line: 74, column: 3)
!14248 = !DILocation(line: 74, column: 13, scope: !14247)
!14249 = !DILocation(line: 74, column: 8, scope: !14247)
!14250 = !DILocation(line: 74, column: 27, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14247, file: !1351, line: 74, column: 3)
!14252 = !DILocation(line: 74, column: 3, scope: !14247)
!14253 = !DILocation(line: 76, column: 11, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14255, file: !1351, line: 76, column: 11)
!14255 = distinct !DILexicalBlock(scope: !14251, file: !1351, line: 75, column: 5)
!14256 = !DILocation(line: 76, column: 17, scope: !14254)
!14257 = !DILocation(line: 76, column: 20, scope: !14254)
!14258 = !DILocation(line: 76, column: 25, scope: !14254)
!14259 = !DILocation(line: 76, column: 22, scope: !14254)
!14260 = !DILocation(line: 76, column: 11, scope: !14255)
!14261 = !DILocation(line: 78, column: 19, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14254, file: !1351, line: 77, column: 9)
!14263 = !DILocation(line: 78, column: 17, scope: !14262)
!14264 = !DILocation(line: 79, column: 11, scope: !14262)
!14265 = !DILocation(line: 81, column: 5, scope: !14255)
!14266 = !DILocation(line: 74, column: 40, scope: !14251)
!14267 = !DILocation(line: 74, column: 46, scope: !14251)
!14268 = !DILocation(line: 74, column: 38, scope: !14251)
!14269 = !DILocation(line: 74, column: 3, scope: !14251)
!14270 = distinct !{!14270, !14252, !14271}
!14271 = !DILocation(line: 81, column: 5, scope: !14247)
!14272 = !DILocation(line: 83, column: 7, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14239, file: !1351, line: 83, column: 7)
!14274 = !DILocation(line: 83, column: 13, scope: !14273)
!14275 = !DILocation(line: 83, column: 7, scope: !14239)
!14276 = !DILocalVariable(name: "pwent", scope: !14277, file: !1351, line: 85, type: !1360)
!14277 = distinct !DILexicalBlock(scope: !14273, file: !1351, line: 84, column: 5)
!14278 = !DILocation(line: 85, column: 22, scope: !14277)
!14279 = !DILocation(line: 85, column: 40, scope: !14277)
!14280 = !DILocation(line: 85, column: 30, scope: !14277)
!14281 = !DILocalVariable(name: "name", scope: !14277, file: !1351, line: 86, type: !146)
!14282 = !DILocation(line: 86, column: 19, scope: !14277)
!14283 = !DILocation(line: 86, column: 26, scope: !14277)
!14284 = !DILocation(line: 86, column: 34, scope: !14277)
!14285 = !DILocation(line: 86, column: 41, scope: !14277)
!14286 = !{!14287, !2443, i64 0}
!14287 = !{!"passwd", !2443, i64 0, !2443, i64 8, !2437, i64 16, !2437, i64 20, !2443, i64 24, !2443, i64 32, !2443, i64 40}
!14288 = !DILocation(line: 87, column: 24, scope: !14277)
!14289 = !DILocation(line: 87, column: 15, scope: !14277)
!14290 = !DILocation(line: 87, column: 13, scope: !14277)
!14291 = !DILocation(line: 88, column: 21, scope: !14277)
!14292 = !DILocation(line: 88, column: 7, scope: !14277)
!14293 = !DILocation(line: 88, column: 14, scope: !14277)
!14294 = !DILocation(line: 88, column: 17, scope: !14277)
!14295 = !DILocation(line: 88, column: 19, scope: !14277)
!14296 = !DILocation(line: 89, column: 15, scope: !14277)
!14297 = !DILocation(line: 89, column: 22, scope: !14277)
!14298 = !DILocation(line: 89, column: 28, scope: !14277)
!14299 = !DILocation(line: 89, column: 7, scope: !14277)
!14300 = !DILocation(line: 92, column: 21, scope: !14277)
!14301 = !DILocation(line: 92, column: 7, scope: !14277)
!14302 = !DILocation(line: 92, column: 14, scope: !14277)
!14303 = !DILocation(line: 92, column: 19, scope: !14277)
!14304 = !DILocation(line: 93, column: 20, scope: !14277)
!14305 = !DILocation(line: 93, column: 18, scope: !14277)
!14306 = !DILocation(line: 94, column: 5, scope: !14277)
!14307 = !DILocation(line: 96, column: 10, scope: !14239)
!14308 = !DILocation(line: 96, column: 17, scope: !14239)
!14309 = !DILocation(line: 96, column: 27, scope: !14239)
!14310 = !DILocation(line: 96, column: 34, scope: !14239)
!14311 = !DILocation(line: 96, column: 3, scope: !14239)
!14312 = distinct !DISubprogram(name: "getuidbyname", scope: !1351, file: !1351, line: 105, type: !1371, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14313 = !DILocalVariable(name: "user", arg: 1, scope: !14312, file: !1351, line: 105, type: !146)
!14314 = !DILocation(line: 105, column: 27, scope: !14312)
!14315 = !DILocalVariable(name: "tail", scope: !14312, file: !1351, line: 107, type: !1349)
!14316 = !DILocation(line: 107, column: 18, scope: !14312)
!14317 = !DILocalVariable(name: "pwent", scope: !14312, file: !1351, line: 108, type: !1360)
!14318 = !DILocation(line: 108, column: 18, scope: !14312)
!14319 = !DILocation(line: 110, column: 15, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14312, file: !1351, line: 110, column: 3)
!14321 = !DILocation(line: 110, column: 13, scope: !14320)
!14322 = !DILocation(line: 110, column: 8, scope: !14320)
!14323 = !DILocation(line: 110, column: 27, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14320, file: !1351, line: 110, column: 3)
!14325 = !DILocation(line: 110, column: 3, scope: !14320)
!14326 = !DILocation(line: 112, column: 10, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14324, file: !1351, line: 112, column: 9)
!14328 = !DILocation(line: 112, column: 16, scope: !14327)
!14329 = !DILocation(line: 112, column: 9, scope: !14327)
!14330 = !DILocation(line: 112, column: 25, scope: !14327)
!14331 = !DILocation(line: 112, column: 24, scope: !14327)
!14332 = !DILocation(line: 112, column: 21, scope: !14327)
!14333 = !DILocation(line: 112, column: 30, scope: !14327)
!14334 = !DILocation(line: 112, column: 42, scope: !14327)
!14335 = !DILocation(line: 112, column: 48, scope: !14327)
!14336 = !DILocation(line: 112, column: 54, scope: !14327)
!14337 = !DILocation(line: 112, column: 34, scope: !14327)
!14338 = !DILocation(line: 112, column: 9, scope: !14324)
!14339 = !DILocation(line: 113, column: 15, scope: !14327)
!14340 = !DILocation(line: 113, column: 21, scope: !14327)
!14341 = !DILocation(line: 113, column: 24, scope: !14327)
!14342 = !DILocation(line: 113, column: 7, scope: !14327)
!14343 = !DILocation(line: 112, column: 58, scope: !14327)
!14344 = !DILocation(line: 110, column: 40, scope: !14324)
!14345 = !DILocation(line: 110, column: 46, scope: !14324)
!14346 = !DILocation(line: 110, column: 38, scope: !14324)
!14347 = !DILocation(line: 110, column: 3, scope: !14324)
!14348 = distinct !{!14348, !14325, !14349}
!14349 = !DILocation(line: 113, column: 24, scope: !14320)
!14350 = !DILocation(line: 115, column: 15, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14312, file: !1351, line: 115, column: 3)
!14352 = !DILocation(line: 115, column: 13, scope: !14351)
!14353 = !DILocation(line: 115, column: 8, scope: !14351)
!14354 = !DILocation(line: 115, column: 29, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14351, file: !1351, line: 115, column: 3)
!14356 = !DILocation(line: 115, column: 3, scope: !14351)
!14357 = !DILocation(line: 117, column: 10, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14355, file: !1351, line: 117, column: 9)
!14359 = !DILocation(line: 117, column: 16, scope: !14358)
!14360 = !DILocation(line: 117, column: 9, scope: !14358)
!14361 = !DILocation(line: 117, column: 25, scope: !14358)
!14362 = !DILocation(line: 117, column: 24, scope: !14358)
!14363 = !DILocation(line: 117, column: 21, scope: !14358)
!14364 = !DILocation(line: 117, column: 30, scope: !14358)
!14365 = !DILocation(line: 117, column: 42, scope: !14358)
!14366 = !DILocation(line: 117, column: 48, scope: !14358)
!14367 = !DILocation(line: 117, column: 54, scope: !14358)
!14368 = !DILocation(line: 117, column: 34, scope: !14358)
!14369 = !DILocation(line: 117, column: 9, scope: !14355)
!14370 = !DILocation(line: 118, column: 7, scope: !14358)
!14371 = !DILocation(line: 117, column: 58, scope: !14358)
!14372 = !DILocation(line: 115, column: 42, scope: !14355)
!14373 = !DILocation(line: 115, column: 48, scope: !14355)
!14374 = !DILocation(line: 115, column: 40, scope: !14355)
!14375 = !DILocation(line: 115, column: 3, scope: !14355)
!14376 = distinct !{!14376, !14356, !14377}
!14377 = !DILocation(line: 118, column: 14, scope: !14351)
!14378 = !DILocation(line: 120, column: 21, scope: !14312)
!14379 = !DILocation(line: 120, column: 11, scope: !14312)
!14380 = !DILocation(line: 120, column: 9, scope: !14312)
!14381 = !DILocation(line: 131, column: 19, scope: !14312)
!14382 = !DILocation(line: 131, column: 10, scope: !14312)
!14383 = !DILocation(line: 131, column: 8, scope: !14312)
!14384 = !DILocation(line: 132, column: 11, scope: !14312)
!14385 = !DILocation(line: 132, column: 17, scope: !14312)
!14386 = !DILocation(line: 132, column: 23, scope: !14312)
!14387 = !DILocation(line: 132, column: 3, scope: !14312)
!14388 = !DILocation(line: 135, column: 7, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14312, file: !1351, line: 135, column: 7)
!14390 = !DILocation(line: 135, column: 7, scope: !14312)
!14391 = !DILocation(line: 137, column: 20, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14389, file: !1351, line: 136, column: 5)
!14393 = !DILocation(line: 137, column: 27, scope: !14392)
!14394 = !{!14287, !2437, i64 16}
!14395 = !DILocation(line: 137, column: 7, scope: !14392)
!14396 = !DILocation(line: 137, column: 13, scope: !14392)
!14397 = !DILocation(line: 137, column: 16, scope: !14392)
!14398 = !DILocation(line: 137, column: 18, scope: !14392)
!14399 = !DILocation(line: 138, column: 20, scope: !14392)
!14400 = !DILocation(line: 138, column: 7, scope: !14392)
!14401 = !DILocation(line: 138, column: 13, scope: !14392)
!14402 = !DILocation(line: 138, column: 18, scope: !14392)
!14403 = !DILocation(line: 139, column: 20, scope: !14392)
!14404 = !DILocation(line: 139, column: 18, scope: !14392)
!14405 = !DILocation(line: 140, column: 15, scope: !14392)
!14406 = !DILocation(line: 140, column: 21, scope: !14392)
!14407 = !DILocation(line: 140, column: 24, scope: !14392)
!14408 = !DILocation(line: 140, column: 7, scope: !14392)
!14409 = !DILocation(line: 143, column: 16, scope: !14312)
!14410 = !DILocation(line: 143, column: 3, scope: !14312)
!14411 = !DILocation(line: 143, column: 9, scope: !14312)
!14412 = !DILocation(line: 143, column: 14, scope: !14312)
!14413 = !DILocation(line: 144, column: 18, scope: !14312)
!14414 = !DILocation(line: 144, column: 16, scope: !14312)
!14415 = !DILocation(line: 145, column: 3, scope: !14312)
!14416 = !DILocation(line: 146, column: 1, scope: !14312)
!14417 = distinct !DISubprogram(name: "getgroup", scope: !1351, file: !1351, line: 151, type: !1374, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14418 = !DILocalVariable(name: "gid", arg: 1, scope: !14417, file: !1351, line: 151, type: !697)
!14419 = !DILocation(line: 151, column: 17, scope: !14417)
!14420 = !DILocalVariable(name: "tail", scope: !14417, file: !1351, line: 153, type: !1349)
!14421 = !DILocation(line: 153, column: 18, scope: !14417)
!14422 = !DILocalVariable(name: "match", scope: !14417, file: !1351, line: 154, type: !1349)
!14423 = !DILocation(line: 154, column: 18, scope: !14417)
!14424 = !DILocation(line: 156, column: 15, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14417, file: !1351, line: 156, column: 3)
!14426 = !DILocation(line: 156, column: 13, scope: !14425)
!14427 = !DILocation(line: 156, column: 8, scope: !14425)
!14428 = !DILocation(line: 156, column: 28, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14425, file: !1351, line: 156, column: 3)
!14430 = !DILocation(line: 156, column: 3, scope: !14425)
!14431 = !DILocation(line: 158, column: 11, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14433, file: !1351, line: 158, column: 11)
!14433 = distinct !DILexicalBlock(scope: !14429, file: !1351, line: 157, column: 5)
!14434 = !DILocation(line: 158, column: 17, scope: !14432)
!14435 = !DILocation(line: 158, column: 20, scope: !14432)
!14436 = !DILocation(line: 158, column: 25, scope: !14432)
!14437 = !DILocation(line: 158, column: 22, scope: !14432)
!14438 = !DILocation(line: 158, column: 11, scope: !14433)
!14439 = !DILocation(line: 160, column: 19, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14432, file: !1351, line: 159, column: 9)
!14441 = !DILocation(line: 160, column: 17, scope: !14440)
!14442 = !DILocation(line: 161, column: 11, scope: !14440)
!14443 = !DILocation(line: 163, column: 5, scope: !14433)
!14444 = !DILocation(line: 156, column: 41, scope: !14429)
!14445 = !DILocation(line: 156, column: 47, scope: !14429)
!14446 = !DILocation(line: 156, column: 39, scope: !14429)
!14447 = !DILocation(line: 156, column: 3, scope: !14429)
!14448 = distinct !{!14448, !14430, !14449}
!14449 = !DILocation(line: 163, column: 5, scope: !14425)
!14450 = !DILocation(line: 165, column: 7, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14417, file: !1351, line: 165, column: 7)
!14452 = !DILocation(line: 165, column: 13, scope: !14451)
!14453 = !DILocation(line: 165, column: 7, scope: !14417)
!14454 = !DILocalVariable(name: "grent", scope: !14455, file: !1351, line: 167, type: !1376)
!14455 = distinct !DILexicalBlock(scope: !14451, file: !1351, line: 166, column: 5)
!14456 = !DILocation(line: 167, column: 21, scope: !14455)
!14457 = !DILocation(line: 167, column: 39, scope: !14455)
!14458 = !DILocation(line: 167, column: 29, scope: !14455)
!14459 = !DILocalVariable(name: "name", scope: !14455, file: !1351, line: 168, type: !146)
!14460 = !DILocation(line: 168, column: 19, scope: !14455)
!14461 = !DILocation(line: 168, column: 26, scope: !14455)
!14462 = !DILocation(line: 168, column: 34, scope: !14455)
!14463 = !DILocation(line: 168, column: 41, scope: !14455)
!14464 = !{!14465, !2443, i64 0}
!14465 = !{!"group", !2443, i64 0, !2443, i64 8, !2437, i64 16, !2443, i64 24}
!14466 = !DILocation(line: 169, column: 24, scope: !14455)
!14467 = !DILocation(line: 169, column: 15, scope: !14455)
!14468 = !DILocation(line: 169, column: 13, scope: !14455)
!14469 = !DILocation(line: 170, column: 21, scope: !14455)
!14470 = !DILocation(line: 170, column: 7, scope: !14455)
!14471 = !DILocation(line: 170, column: 14, scope: !14455)
!14472 = !DILocation(line: 170, column: 17, scope: !14455)
!14473 = !DILocation(line: 170, column: 19, scope: !14455)
!14474 = !DILocation(line: 171, column: 15, scope: !14455)
!14475 = !DILocation(line: 171, column: 22, scope: !14455)
!14476 = !DILocation(line: 171, column: 28, scope: !14455)
!14477 = !DILocation(line: 171, column: 7, scope: !14455)
!14478 = !DILocation(line: 174, column: 21, scope: !14455)
!14479 = !DILocation(line: 174, column: 7, scope: !14455)
!14480 = !DILocation(line: 174, column: 14, scope: !14455)
!14481 = !DILocation(line: 174, column: 19, scope: !14455)
!14482 = !DILocation(line: 175, column: 21, scope: !14455)
!14483 = !DILocation(line: 175, column: 19, scope: !14455)
!14484 = !DILocation(line: 176, column: 5, scope: !14455)
!14485 = !DILocation(line: 178, column: 10, scope: !14417)
!14486 = !DILocation(line: 178, column: 17, scope: !14417)
!14487 = !DILocation(line: 178, column: 27, scope: !14417)
!14488 = !DILocation(line: 178, column: 34, scope: !14417)
!14489 = !DILocation(line: 178, column: 3, scope: !14417)
!14490 = distinct !DISubprogram(name: "getgidbyname", scope: !1351, file: !1351, line: 187, type: !1384, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !152)
!14491 = !DILocalVariable(name: "group", arg: 1, scope: !14490, file: !1351, line: 187, type: !146)
!14492 = !DILocation(line: 187, column: 27, scope: !14490)
!14493 = !DILocalVariable(name: "tail", scope: !14490, file: !1351, line: 189, type: !1349)
!14494 = !DILocation(line: 189, column: 18, scope: !14490)
!14495 = !DILocalVariable(name: "grent", scope: !14490, file: !1351, line: 190, type: !1376)
!14496 = !DILocation(line: 190, column: 17, scope: !14490)
!14497 = !DILocation(line: 192, column: 15, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14490, file: !1351, line: 192, column: 3)
!14499 = !DILocation(line: 192, column: 13, scope: !14498)
!14500 = !DILocation(line: 192, column: 8, scope: !14498)
!14501 = !DILocation(line: 192, column: 28, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14498, file: !1351, line: 192, column: 3)
!14503 = !DILocation(line: 192, column: 3, scope: !14498)
!14504 = !DILocation(line: 194, column: 10, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14502, file: !1351, line: 194, column: 9)
!14506 = !DILocation(line: 194, column: 16, scope: !14505)
!14507 = !DILocation(line: 194, column: 9, scope: !14505)
!14508 = !DILocation(line: 194, column: 25, scope: !14505)
!14509 = !DILocation(line: 194, column: 24, scope: !14505)
!14510 = !DILocation(line: 194, column: 21, scope: !14505)
!14511 = !DILocation(line: 194, column: 31, scope: !14505)
!14512 = !DILocation(line: 194, column: 43, scope: !14505)
!14513 = !DILocation(line: 194, column: 49, scope: !14505)
!14514 = !DILocation(line: 194, column: 55, scope: !14505)
!14515 = !DILocation(line: 194, column: 35, scope: !14505)
!14516 = !DILocation(line: 194, column: 9, scope: !14502)
!14517 = !DILocation(line: 195, column: 15, scope: !14505)
!14518 = !DILocation(line: 195, column: 21, scope: !14505)
!14519 = !DILocation(line: 195, column: 24, scope: !14505)
!14520 = !DILocation(line: 195, column: 7, scope: !14505)
!14521 = !DILocation(line: 194, column: 60, scope: !14505)
!14522 = !DILocation(line: 192, column: 41, scope: !14502)
!14523 = !DILocation(line: 192, column: 47, scope: !14502)
!14524 = !DILocation(line: 192, column: 39, scope: !14502)
!14525 = !DILocation(line: 192, column: 3, scope: !14502)
!14526 = distinct !{!14526, !14503, !14527}
!14527 = !DILocation(line: 195, column: 24, scope: !14498)
!14528 = !DILocation(line: 197, column: 15, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14490, file: !1351, line: 197, column: 3)
!14530 = !DILocation(line: 197, column: 13, scope: !14529)
!14531 = !DILocation(line: 197, column: 8, scope: !14529)
!14532 = !DILocation(line: 197, column: 30, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14529, file: !1351, line: 197, column: 3)
!14534 = !DILocation(line: 197, column: 3, scope: !14529)
!14535 = !DILocation(line: 199, column: 10, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14533, file: !1351, line: 199, column: 9)
!14537 = !DILocation(line: 199, column: 16, scope: !14536)
!14538 = !DILocation(line: 199, column: 9, scope: !14536)
!14539 = !DILocation(line: 199, column: 25, scope: !14536)
!14540 = !DILocation(line: 199, column: 24, scope: !14536)
!14541 = !DILocation(line: 199, column: 21, scope: !14536)
!14542 = !DILocation(line: 199, column: 31, scope: !14536)
!14543 = !DILocation(line: 199, column: 43, scope: !14536)
!14544 = !DILocation(line: 199, column: 49, scope: !14536)
!14545 = !DILocation(line: 199, column: 55, scope: !14536)
!14546 = !DILocation(line: 199, column: 35, scope: !14536)
!14547 = !DILocation(line: 199, column: 9, scope: !14533)
!14548 = !DILocation(line: 200, column: 7, scope: !14536)
!14549 = !DILocation(line: 199, column: 60, scope: !14536)
!14550 = !DILocation(line: 197, column: 43, scope: !14533)
!14551 = !DILocation(line: 197, column: 49, scope: !14533)
!14552 = !DILocation(line: 197, column: 41, scope: !14533)
!14553 = !DILocation(line: 197, column: 3, scope: !14533)
!14554 = distinct !{!14554, !14534, !14555}
!14555 = !DILocation(line: 200, column: 14, scope: !14529)
!14556 = !DILocation(line: 202, column: 21, scope: !14490)
!14557 = !DILocation(line: 202, column: 11, scope: !14490)
!14558 = !DILocation(line: 202, column: 9, scope: !14490)
!14559 = !DILocation(line: 213, column: 19, scope: !14490)
!14560 = !DILocation(line: 213, column: 10, scope: !14490)
!14561 = !DILocation(line: 213, column: 8, scope: !14490)
!14562 = !DILocation(line: 214, column: 11, scope: !14490)
!14563 = !DILocation(line: 214, column: 17, scope: !14490)
!14564 = !DILocation(line: 214, column: 23, scope: !14490)
!14565 = !DILocation(line: 214, column: 3, scope: !14490)
!14566 = !DILocation(line: 217, column: 7, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14490, file: !1351, line: 217, column: 7)
!14568 = !DILocation(line: 217, column: 7, scope: !14490)
!14569 = !DILocation(line: 219, column: 20, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14567, file: !1351, line: 218, column: 5)
!14571 = !DILocation(line: 219, column: 27, scope: !14570)
!14572 = !{!14465, !2437, i64 16}
!14573 = !DILocation(line: 219, column: 7, scope: !14570)
!14574 = !DILocation(line: 219, column: 13, scope: !14570)
!14575 = !DILocation(line: 219, column: 16, scope: !14570)
!14576 = !DILocation(line: 219, column: 18, scope: !14570)
!14577 = !DILocation(line: 220, column: 20, scope: !14570)
!14578 = !DILocation(line: 220, column: 7, scope: !14570)
!14579 = !DILocation(line: 220, column: 13, scope: !14570)
!14580 = !DILocation(line: 220, column: 18, scope: !14570)
!14581 = !DILocation(line: 221, column: 21, scope: !14570)
!14582 = !DILocation(line: 221, column: 19, scope: !14570)
!14583 = !DILocation(line: 222, column: 15, scope: !14570)
!14584 = !DILocation(line: 222, column: 21, scope: !14570)
!14585 = !DILocation(line: 222, column: 24, scope: !14570)
!14586 = !DILocation(line: 222, column: 7, scope: !14570)
!14587 = !DILocation(line: 225, column: 16, scope: !14490)
!14588 = !DILocation(line: 225, column: 3, scope: !14490)
!14589 = !DILocation(line: 225, column: 9, scope: !14490)
!14590 = !DILocation(line: 225, column: 14, scope: !14490)
!14591 = !DILocation(line: 226, column: 19, scope: !14490)
!14592 = !DILocation(line: 226, column: 17, scope: !14490)
!14593 = !DILocation(line: 227, column: 3, scope: !14490)
!14594 = !DILocation(line: 228, column: 1, scope: !14490)
!14595 = distinct !DISubprogram(name: "imaxtostr", scope: !14596, file: !14596, line: 36, type: !1859, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1854, retainedNodes: !152)
!14596 = !DIFile(filename: "./lib/anytostr.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14597 = !DILocalVariable(name: "i", arg: 1, scope: !14595, file: !14596, line: 36, type: !1857)
!14598 = !DILocation(line: 36, column: 19, scope: !14595)
!14599 = !DILocalVariable(name: "buf", arg: 2, scope: !14595, file: !14596, line: 36, type: !143)
!14600 = !DILocation(line: 36, column: 28, scope: !14595)
!14601 = !DILocalVariable(name: "p", scope: !14595, file: !14596, line: 38, type: !143)
!14602 = !DILocation(line: 38, column: 9, scope: !14595)
!14603 = !DILocation(line: 38, column: 13, scope: !14595)
!14604 = !DILocation(line: 38, column: 17, scope: !14595)
!14605 = !DILocation(line: 39, column: 4, scope: !14595)
!14606 = !DILocation(line: 39, column: 6, scope: !14595)
!14607 = !DILocation(line: 41, column: 7, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14595, file: !14596, line: 41, column: 7)
!14609 = !DILocation(line: 41, column: 9, scope: !14608)
!14610 = !DILocation(line: 41, column: 7, scope: !14595)
!14611 = !DILocation(line: 43, column: 7, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14608, file: !14596, line: 42, column: 5)
!14613 = !DILocation(line: 44, column: 22, scope: !14612)
!14614 = !DILocation(line: 44, column: 24, scope: !14612)
!14615 = !DILocation(line: 44, column: 20, scope: !14612)
!14616 = !DILocation(line: 44, column: 16, scope: !14612)
!14617 = !DILocation(line: 44, column: 10, scope: !14612)
!14618 = !DILocation(line: 44, column: 14, scope: !14612)
!14619 = !DILocation(line: 44, column: 9, scope: !14612)
!14620 = !DILocation(line: 45, column: 17, scope: !14612)
!14621 = !DILocation(line: 45, column: 24, scope: !14612)
!14622 = distinct !{!14622, !14611, !14623}
!14623 = !DILocation(line: 45, column: 28, scope: !14612)
!14624 = !DILocation(line: 47, column: 8, scope: !14612)
!14625 = !DILocation(line: 47, column: 12, scope: !14612)
!14626 = !DILocation(line: 48, column: 5, scope: !14612)
!14627 = !DILocation(line: 51, column: 7, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14608, file: !14596, line: 50, column: 5)
!14629 = !DILocation(line: 52, column: 22, scope: !14628)
!14630 = !DILocation(line: 52, column: 24, scope: !14628)
!14631 = !DILocation(line: 52, column: 20, scope: !14628)
!14632 = !DILocation(line: 52, column: 16, scope: !14628)
!14633 = !DILocation(line: 52, column: 10, scope: !14628)
!14634 = !DILocation(line: 52, column: 14, scope: !14628)
!14635 = !DILocation(line: 52, column: 9, scope: !14628)
!14636 = !DILocation(line: 53, column: 17, scope: !14628)
!14637 = !DILocation(line: 53, column: 24, scope: !14628)
!14638 = distinct !{!14638, !14627, !14639}
!14639 = !DILocation(line: 53, column: 28, scope: !14628)
!14640 = !DILocation(line: 56, column: 10, scope: !14595)
!14641 = !DILocation(line: 56, column: 3, scope: !14595)
!14642 = distinct !DISubprogram(name: "umaxtostr", scope: !14596, file: !14596, line: 36, type: !1864, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !152)
!14643 = !DILocalVariable(name: "i", arg: 1, scope: !14642, file: !14596, line: 36, type: !168)
!14644 = !DILocation(line: 36, column: 19, scope: !14642)
!14645 = !DILocalVariable(name: "buf", arg: 2, scope: !14642, file: !14596, line: 36, type: !143)
!14646 = !DILocation(line: 36, column: 28, scope: !14642)
!14647 = !DILocalVariable(name: "p", scope: !14642, file: !14596, line: 38, type: !143)
!14648 = !DILocation(line: 38, column: 9, scope: !14642)
!14649 = !DILocation(line: 38, column: 13, scope: !14642)
!14650 = !DILocation(line: 38, column: 17, scope: !14642)
!14651 = !DILocation(line: 39, column: 4, scope: !14642)
!14652 = !DILocation(line: 39, column: 6, scope: !14642)
!14653 = !DILocation(line: 41, column: 7, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14642, file: !14596, line: 41, column: 7)
!14655 = !DILocation(line: 41, column: 9, scope: !14654)
!14656 = !DILocation(line: 41, column: 7, scope: !14642)
!14657 = !DILocation(line: 43, column: 7, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !14596, line: 42, column: 5)
!14659 = !DILocation(line: 44, column: 22, scope: !14658)
!14660 = !DILocation(line: 44, column: 24, scope: !14658)
!14661 = !DILocation(line: 44, column: 20, scope: !14658)
!14662 = !DILocation(line: 44, column: 16, scope: !14658)
!14663 = !DILocation(line: 44, column: 10, scope: !14658)
!14664 = !DILocation(line: 44, column: 14, scope: !14658)
!14665 = !DILocation(line: 44, column: 9, scope: !14658)
!14666 = !DILocation(line: 45, column: 17, scope: !14658)
!14667 = !DILocation(line: 45, column: 24, scope: !14658)
!14668 = distinct !{!14668, !14657, !14669}
!14669 = !DILocation(line: 45, column: 28, scope: !14658)
!14670 = !DILocation(line: 47, column: 8, scope: !14658)
!14671 = !DILocation(line: 47, column: 12, scope: !14658)
!14672 = !DILocation(line: 48, column: 5, scope: !14658)
!14673 = !DILocation(line: 51, column: 7, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14654, file: !14596, line: 50, column: 5)
!14675 = !DILocation(line: 52, column: 22, scope: !14674)
!14676 = !DILocation(line: 52, column: 24, scope: !14674)
!14677 = !DILocation(line: 52, column: 20, scope: !14674)
!14678 = !DILocation(line: 52, column: 16, scope: !14674)
!14679 = !DILocation(line: 52, column: 10, scope: !14674)
!14680 = !DILocation(line: 52, column: 14, scope: !14674)
!14681 = !DILocation(line: 52, column: 9, scope: !14674)
!14682 = !DILocation(line: 53, column: 17, scope: !14674)
!14683 = !DILocation(line: 53, column: 24, scope: !14674)
!14684 = distinct !{!14684, !14673, !14685}
!14685 = !DILocation(line: 53, column: 28, scope: !14674)
!14686 = !DILocation(line: 56, column: 10, scope: !14642)
!14687 = !DILocation(line: 56, column: 3, scope: !14642)
!14688 = distinct !DISubprogram(name: "mbsalign", scope: !14689, file: !14689, line: 112, type: !1872, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!14689 = !DIFile(filename: "lib/mbsalign.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14690 = !DILocalVariable(name: "src", arg: 1, scope: !14688, file: !14689, line: 112, type: !146)
!14691 = !DILocation(line: 112, column: 23, scope: !14688)
!14692 = !DILocalVariable(name: "dest", arg: 2, scope: !14688, file: !14689, line: 112, type: !143)
!14693 = !DILocation(line: 112, column: 34, scope: !14688)
!14694 = !DILocalVariable(name: "dest_size", arg: 3, scope: !14688, file: !14689, line: 112, type: !149)
!14695 = !DILocation(line: 112, column: 47, scope: !14688)
!14696 = !DILocalVariable(name: "width", arg: 4, scope: !14688, file: !14689, line: 113, type: !148)
!14697 = !DILocation(line: 113, column: 19, scope: !14688)
!14698 = !DILocalVariable(name: "align", arg: 5, scope: !14688, file: !14689, line: 113, type: !586)
!14699 = !DILocation(line: 113, column: 38, scope: !14688)
!14700 = !DILocalVariable(name: "flags", arg: 6, scope: !14688, file: !14689, line: 113, type: !27)
!14701 = !DILocation(line: 113, column: 49, scope: !14688)
!14702 = !DILocalVariable(name: "ret", scope: !14688, file: !14689, line: 115, type: !149)
!14703 = !DILocation(line: 115, column: 10, scope: !14688)
!14704 = !DILocalVariable(name: "src_size", scope: !14688, file: !14689, line: 116, type: !149)
!14705 = !DILocation(line: 116, column: 10, scope: !14688)
!14706 = !DILocation(line: 116, column: 29, scope: !14688)
!14707 = !DILocation(line: 116, column: 21, scope: !14688)
!14708 = !DILocation(line: 116, column: 34, scope: !14688)
!14709 = !DILocalVariable(name: "newstr", scope: !14688, file: !14689, line: 117, type: !143)
!14710 = !DILocation(line: 117, column: 9, scope: !14688)
!14711 = !DILocalVariable(name: "str_wc", scope: !14688, file: !14689, line: 118, type: !1874)
!14712 = !DILocation(line: 118, column: 12, scope: !14688)
!14713 = !DILocalVariable(name: "str_to_print", scope: !14688, file: !14689, line: 119, type: !146)
!14714 = !DILocation(line: 119, column: 15, scope: !14688)
!14715 = !DILocation(line: 119, column: 30, scope: !14688)
!14716 = !DILocalVariable(name: "n_cols", scope: !14688, file: !14689, line: 120, type: !149)
!14717 = !DILocation(line: 120, column: 10, scope: !14688)
!14718 = !DILocation(line: 120, column: 19, scope: !14688)
!14719 = !DILocation(line: 120, column: 28, scope: !14688)
!14720 = !DILocalVariable(name: "n_used_bytes", scope: !14688, file: !14689, line: 121, type: !149)
!14721 = !DILocation(line: 121, column: 10, scope: !14688)
!14722 = !DILocation(line: 121, column: 25, scope: !14688)
!14723 = !DILocalVariable(name: "n_spaces", scope: !14688, file: !14689, line: 122, type: !149)
!14724 = !DILocation(line: 122, column: 10, scope: !14688)
!14725 = !DILocalVariable(name: "conversion", scope: !14688, file: !14689, line: 123, type: !141)
!14726 = !DILocation(line: 123, column: 8, scope: !14688)
!14727 = !DILocalVariable(name: "wc_enabled", scope: !14688, file: !14689, line: 124, type: !141)
!14728 = !DILocation(line: 124, column: 8, scope: !14688)
!14729 = !DILocation(line: 129, column: 9, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14688, file: !14689, line: 129, column: 7)
!14731 = !DILocation(line: 129, column: 15, scope: !14730)
!14732 = !DILocation(line: 129, column: 35, scope: !14730)
!14733 = !DILocation(line: 129, column: 38, scope: !14730)
!14734 = !DILocation(line: 129, column: 49, scope: !14730)
!14735 = !DILocation(line: 129, column: 7, scope: !14688)
!14736 = !DILocalVariable(name: "src_chars", scope: !14737, file: !14689, line: 131, type: !149)
!14737 = distinct !DILexicalBlock(scope: !14730, file: !14689, line: 130, column: 5)
!14738 = !DILocation(line: 131, column: 14, scope: !14737)
!14739 = !DILocation(line: 131, column: 42, scope: !14737)
!14740 = !DILocation(line: 131, column: 26, scope: !14737)
!14741 = !DILocation(line: 132, column: 11, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14737, file: !14689, line: 132, column: 11)
!14743 = !DILocation(line: 132, column: 21, scope: !14742)
!14744 = !DILocation(line: 132, column: 11, scope: !14737)
!14745 = !DILocation(line: 134, column: 15, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14747, file: !14689, line: 134, column: 15)
!14747 = distinct !DILexicalBlock(scope: !14742, file: !14689, line: 133, column: 9)
!14748 = !DILocation(line: 134, column: 21, scope: !14746)
!14749 = !DILocation(line: 134, column: 15, scope: !14747)
!14750 = !DILocation(line: 135, column: 13, scope: !14746)
!14751 = !DILocation(line: 137, column: 13, scope: !14746)
!14752 = !DILocation(line: 139, column: 17, scope: !14737)
!14753 = !DILocation(line: 140, column: 24, scope: !14737)
!14754 = !DILocation(line: 140, column: 34, scope: !14737)
!14755 = !DILocation(line: 140, column: 16, scope: !14737)
!14756 = !DILocation(line: 140, column: 14, scope: !14737)
!14757 = !DILocation(line: 141, column: 11, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14737, file: !14689, line: 141, column: 11)
!14759 = !DILocation(line: 141, column: 18, scope: !14758)
!14760 = !DILocation(line: 141, column: 11, scope: !14737)
!14761 = !DILocation(line: 143, column: 15, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14763, file: !14689, line: 143, column: 15)
!14763 = distinct !DILexicalBlock(scope: !14758, file: !14689, line: 142, column: 9)
!14764 = !DILocation(line: 143, column: 21, scope: !14762)
!14765 = !DILocation(line: 143, column: 15, scope: !14763)
!14766 = !DILocation(line: 144, column: 13, scope: !14762)
!14767 = !DILocation(line: 146, column: 13, scope: !14762)
!14768 = !DILocation(line: 148, column: 21, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14737, file: !14689, line: 148, column: 11)
!14770 = !DILocation(line: 148, column: 29, scope: !14769)
!14771 = !DILocation(line: 148, column: 34, scope: !14769)
!14772 = !DILocation(line: 148, column: 11, scope: !14769)
!14773 = !DILocation(line: 148, column: 45, scope: !14769)
!14774 = !DILocation(line: 148, column: 11, scope: !14737)
!14775 = !DILocation(line: 150, column: 11, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14769, file: !14689, line: 149, column: 9)
!14777 = !DILocation(line: 150, column: 18, scope: !14776)
!14778 = !DILocation(line: 150, column: 28, scope: !14776)
!14779 = !DILocation(line: 150, column: 33, scope: !14776)
!14780 = !DILocation(line: 151, column: 22, scope: !14776)
!14781 = !DILocation(line: 152, column: 45, scope: !14776)
!14782 = !DILocation(line: 152, column: 24, scope: !14776)
!14783 = !DILocation(line: 152, column: 22, scope: !14776)
!14784 = !DILocation(line: 153, column: 30, scope: !14776)
!14785 = !DILocation(line: 153, column: 38, scope: !14776)
!14786 = !DILocation(line: 153, column: 20, scope: !14776)
!14787 = !DILocation(line: 153, column: 18, scope: !14776)
!14788 = !DILocation(line: 154, column: 9, scope: !14776)
!14789 = !DILocation(line: 155, column: 5, scope: !14737)
!14790 = !DILocation(line: 159, column: 7, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14688, file: !14689, line: 159, column: 7)
!14792 = !DILocation(line: 159, column: 18, scope: !14791)
!14793 = !DILocation(line: 159, column: 22, scope: !14791)
!14794 = !DILocation(line: 159, column: 33, scope: !14791)
!14795 = !DILocation(line: 159, column: 37, scope: !14791)
!14796 = !DILocation(line: 159, column: 47, scope: !14791)
!14797 = !DILocation(line: 159, column: 46, scope: !14791)
!14798 = !DILocation(line: 159, column: 44, scope: !14791)
!14799 = !DILocation(line: 159, column: 7, scope: !14688)
!14800 = !DILocation(line: 161, column: 13, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !14689, line: 161, column: 13)
!14802 = distinct !DILexicalBlock(scope: !14791, file: !14689, line: 160, column: 5)
!14803 = !DILocation(line: 161, column: 13, scope: !14802)
!14804 = !DILocation(line: 165, column: 40, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14801, file: !14689, line: 162, column: 11)
!14806 = !DILocation(line: 165, column: 24, scope: !14805)
!14807 = !DILocation(line: 165, column: 51, scope: !14805)
!14808 = !DILocation(line: 165, column: 22, scope: !14805)
!14809 = !DILocation(line: 166, column: 11, scope: !14805)
!14810 = !DILocation(line: 167, column: 26, scope: !14802)
!14811 = !DILocation(line: 167, column: 18, scope: !14802)
!14812 = !DILocation(line: 167, column: 16, scope: !14802)
!14813 = !DILocation(line: 168, column: 13, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14802, file: !14689, line: 168, column: 13)
!14815 = !DILocation(line: 168, column: 20, scope: !14814)
!14816 = !DILocation(line: 168, column: 13, scope: !14802)
!14817 = !DILocation(line: 170, column: 15, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !14689, line: 170, column: 15)
!14819 = distinct !DILexicalBlock(scope: !14814, file: !14689, line: 169, column: 9)
!14820 = !DILocation(line: 170, column: 21, scope: !14818)
!14821 = !DILocation(line: 170, column: 15, scope: !14819)
!14822 = !DILocation(line: 171, column: 13, scope: !14818)
!14823 = !DILocation(line: 173, column: 13, scope: !14818)
!14824 = !DILocation(line: 175, column: 24, scope: !14802)
!14825 = !DILocation(line: 175, column: 22, scope: !14802)
!14826 = !DILocation(line: 176, column: 31, scope: !14802)
!14827 = !DILocation(line: 176, column: 40, scope: !14802)
!14828 = !DILocation(line: 176, column: 39, scope: !14802)
!14829 = !DILocation(line: 176, column: 18, scope: !14802)
!14830 = !DILocation(line: 176, column: 16, scope: !14802)
!14831 = !DILocation(line: 177, column: 34, scope: !14802)
!14832 = !DILocation(line: 177, column: 42, scope: !14802)
!14833 = !DILocation(line: 177, column: 50, scope: !14802)
!14834 = !DILocation(line: 177, column: 24, scope: !14802)
!14835 = !DILocation(line: 177, column: 22, scope: !14802)
!14836 = !DILocation(line: 178, column: 5, scope: !14802)
!14837 = !DILocation(line: 159, column: 53, scope: !14791)
!14838 = !DILabel(scope: !14688, name: "mbsalign_unibyte", file: !14689, line: 180)
!14839 = !DILocation(line: 180, column: 1, scope: !14688)
!14840 = !DILocation(line: 182, column: 7, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14688, file: !14689, line: 182, column: 7)
!14842 = !DILocation(line: 182, column: 17, scope: !14841)
!14843 = !DILocation(line: 182, column: 16, scope: !14841)
!14844 = !DILocation(line: 182, column: 14, scope: !14841)
!14845 = !DILocation(line: 182, column: 7, scope: !14688)
!14846 = !DILocation(line: 184, column: 17, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14841, file: !14689, line: 183, column: 5)
!14848 = !DILocation(line: 184, column: 16, scope: !14847)
!14849 = !DILocation(line: 184, column: 14, scope: !14847)
!14850 = !DILocation(line: 185, column: 22, scope: !14847)
!14851 = !DILocation(line: 185, column: 20, scope: !14847)
!14852 = !DILocation(line: 186, column: 5, scope: !14847)
!14853 = !DILocation(line: 188, column: 8, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14688, file: !14689, line: 188, column: 7)
!14855 = !DILocation(line: 188, column: 7, scope: !14854)
!14856 = !DILocation(line: 188, column: 16, scope: !14854)
!14857 = !DILocation(line: 188, column: 14, scope: !14854)
!14858 = !DILocation(line: 188, column: 7, scope: !14688)
!14859 = !DILocation(line: 189, column: 17, scope: !14854)
!14860 = !DILocation(line: 189, column: 16, scope: !14854)
!14861 = !DILocation(line: 189, column: 25, scope: !14854)
!14862 = !DILocation(line: 189, column: 23, scope: !14854)
!14863 = !DILocation(line: 189, column: 14, scope: !14854)
!14864 = !DILocation(line: 189, column: 5, scope: !14854)
!14865 = !DILocation(line: 192, column: 12, scope: !14688)
!14866 = !DILocation(line: 192, column: 4, scope: !14688)
!14867 = !DILocation(line: 192, column: 10, scope: !14688)
!14868 = !DILocalVariable(name: "start_spaces", scope: !14869, file: !14689, line: 195, type: !149)
!14869 = distinct !DILexicalBlock(scope: !14688, file: !14689, line: 194, column: 3)
!14870 = !DILocation(line: 195, column: 12, scope: !14869)
!14871 = !DILocalVariable(name: "end_spaces", scope: !14869, file: !14689, line: 195, type: !149)
!14872 = !DILocation(line: 195, column: 26, scope: !14869)
!14873 = !DILocation(line: 197, column: 13, scope: !14869)
!14874 = !DILocation(line: 197, column: 5, scope: !14869)
!14875 = !DILocation(line: 200, column: 22, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14869, file: !14689, line: 198, column: 7)
!14877 = !DILocation(line: 201, column: 22, scope: !14876)
!14878 = !DILocation(line: 201, column: 20, scope: !14876)
!14879 = !DILocation(line: 202, column: 9, scope: !14876)
!14880 = !DILocation(line: 204, column: 24, scope: !14876)
!14881 = !DILocation(line: 204, column: 22, scope: !14876)
!14882 = !DILocation(line: 205, column: 20, scope: !14876)
!14883 = !DILocation(line: 206, column: 9, scope: !14876)
!14884 = !DILocation(line: 209, column: 24, scope: !14876)
!14885 = !DILocation(line: 209, column: 33, scope: !14876)
!14886 = !DILocation(line: 209, column: 39, scope: !14876)
!14887 = !DILocation(line: 209, column: 48, scope: !14876)
!14888 = !DILocation(line: 209, column: 37, scope: !14876)
!14889 = !DILocation(line: 209, column: 22, scope: !14876)
!14890 = !DILocation(line: 210, column: 22, scope: !14876)
!14891 = !DILocation(line: 210, column: 31, scope: !14876)
!14892 = !DILocation(line: 210, column: 20, scope: !14876)
!14893 = !DILocation(line: 211, column: 9, scope: !14876)
!14894 = !DILocation(line: 214, column: 11, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14869, file: !14689, line: 214, column: 11)
!14896 = !DILocation(line: 214, column: 17, scope: !14895)
!14897 = !DILocation(line: 214, column: 11, scope: !14869)
!14898 = !DILocation(line: 215, column: 22, scope: !14895)
!14899 = !DILocation(line: 215, column: 9, scope: !14895)
!14900 = !DILocation(line: 216, column: 11, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14869, file: !14689, line: 216, column: 11)
!14902 = !DILocation(line: 216, column: 17, scope: !14901)
!14903 = !DILocation(line: 216, column: 11, scope: !14869)
!14904 = !DILocation(line: 217, column: 20, scope: !14901)
!14905 = !DILocation(line: 217, column: 9, scope: !14901)
!14906 = !DILocation(line: 220, column: 11, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14869, file: !14689, line: 220, column: 11)
!14908 = !DILocation(line: 220, column: 21, scope: !14907)
!14909 = !DILocation(line: 220, column: 11, scope: !14869)
!14910 = !DILocalVariable(name: "space_left", scope: !14911, file: !14689, line: 222, type: !149)
!14911 = distinct !DILexicalBlock(scope: !14907, file: !14689, line: 221, column: 9)
!14912 = !DILocation(line: 222, column: 18, scope: !14911)
!14913 = !DILocalVariable(name: "dest_end", scope: !14911, file: !14689, line: 223, type: !143)
!14914 = !DILocation(line: 223, column: 17, scope: !14911)
!14915 = !DILocation(line: 223, column: 28, scope: !14911)
!14916 = !DILocation(line: 223, column: 35, scope: !14911)
!14917 = !DILocation(line: 223, column: 33, scope: !14911)
!14918 = !DILocation(line: 223, column: 45, scope: !14911)
!14919 = !DILocation(line: 225, column: 33, scope: !14911)
!14920 = !DILocation(line: 225, column: 39, scope: !14911)
!14921 = !DILocation(line: 225, column: 49, scope: !14911)
!14922 = !DILocation(line: 225, column: 18, scope: !14911)
!14923 = !DILocation(line: 225, column: 16, scope: !14911)
!14924 = !DILocation(line: 226, column: 24, scope: !14911)
!14925 = !DILocation(line: 226, column: 35, scope: !14911)
!14926 = !DILocation(line: 226, column: 33, scope: !14911)
!14927 = !DILocation(line: 226, column: 22, scope: !14911)
!14928 = !DILocation(line: 227, column: 27, scope: !14911)
!14929 = !DILocation(line: 227, column: 33, scope: !14911)
!14930 = !DILocation(line: 227, column: 47, scope: !14911)
!14931 = !DILocation(line: 227, column: 18, scope: !14911)
!14932 = !DILocation(line: 227, column: 16, scope: !14911)
!14933 = !DILocation(line: 228, column: 26, scope: !14911)
!14934 = !DILocation(line: 228, column: 32, scope: !14911)
!14935 = !DILocation(line: 228, column: 42, scope: !14911)
!14936 = !DILocation(line: 228, column: 11, scope: !14911)
!14937 = !DILocation(line: 229, column: 9, scope: !14911)
!14938 = !DILocation(line: 232, column: 11, scope: !14869)
!14939 = !DILocation(line: 232, column: 28, scope: !14869)
!14940 = !DILocation(line: 232, column: 43, scope: !14869)
!14941 = !DILocation(line: 232, column: 41, scope: !14869)
!14942 = !DILocation(line: 232, column: 55, scope: !14869)
!14943 = !DILocation(line: 232, column: 24, scope: !14869)
!14944 = !DILocation(line: 232, column: 9, scope: !14869)
!14945 = !DILocation(line: 233, column: 3, scope: !14869)
!14946 = !DILabel(scope: !14688, name: "mbsalign_cleanup", file: !14689, line: 235)
!14947 = !DILocation(line: 235, column: 1, scope: !14688)
!14948 = !DILocation(line: 237, column: 9, scope: !14688)
!14949 = !DILocation(line: 237, column: 3, scope: !14688)
!14950 = !DILocation(line: 238, column: 9, scope: !14688)
!14951 = !DILocation(line: 238, column: 3, scope: !14688)
!14952 = !DILocation(line: 240, column: 10, scope: !14688)
!14953 = !DILocation(line: 240, column: 3, scope: !14688)
!14954 = distinct !DISubprogram(name: "wc_ensure_printable", scope: !14689, file: !14689, line: 40, type: !1877, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!14955 = !DILocalVariable(name: "wchars", arg: 1, scope: !14954, file: !14689, line: 40, type: !1874)
!14956 = !DILocation(line: 40, column: 31, scope: !14954)
!14957 = !DILocalVariable(name: "replaced", scope: !14954, file: !14689, line: 42, type: !141)
!14958 = !DILocation(line: 42, column: 8, scope: !14954)
!14959 = !DILocalVariable(name: "wc", scope: !14954, file: !14689, line: 43, type: !1874)
!14960 = !DILocation(line: 43, column: 12, scope: !14954)
!14961 = !DILocation(line: 43, column: 17, scope: !14954)
!14962 = !DILocation(line: 44, column: 3, scope: !14954)
!14963 = !DILocation(line: 44, column: 11, scope: !14954)
!14964 = !DILocation(line: 44, column: 10, scope: !14954)
!14965 = !DILocation(line: 46, column: 32, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14967, file: !14689, line: 46, column: 11)
!14967 = distinct !DILexicalBlock(scope: !14954, file: !14689, line: 45, column: 5)
!14968 = !DILocation(line: 46, column: 31, scope: !14966)
!14969 = !DILocation(line: 46, column: 12, scope: !14966)
!14970 = !DILocation(line: 46, column: 11, scope: !14967)
!14971 = !DILocation(line: 48, column: 12, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14966, file: !14689, line: 47, column: 9)
!14973 = !DILocation(line: 48, column: 15, scope: !14972)
!14974 = !DILocation(line: 49, column: 20, scope: !14972)
!14975 = !DILocation(line: 50, column: 9, scope: !14972)
!14976 = !DILocation(line: 51, column: 9, scope: !14967)
!14977 = distinct !{!14977, !14962, !14978}
!14978 = !DILocation(line: 52, column: 5, scope: !14954)
!14979 = !DILocation(line: 53, column: 10, scope: !14954)
!14980 = !DILocation(line: 53, column: 3, scope: !14954)
!14981 = distinct !DISubprogram(name: "wc_truncate", scope: !14689, file: !14689, line: 60, type: !1879, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!14982 = !DILocalVariable(name: "wc", arg: 1, scope: !14981, file: !14689, line: 60, type: !1874)
!14983 = !DILocation(line: 60, column: 23, scope: !14981)
!14984 = !DILocalVariable(name: "width", arg: 2, scope: !14981, file: !14689, line: 60, type: !149)
!14985 = !DILocation(line: 60, column: 34, scope: !14981)
!14986 = !DILocalVariable(name: "cells", scope: !14981, file: !14689, line: 62, type: !149)
!14987 = !DILocation(line: 62, column: 10, scope: !14981)
!14988 = !DILocalVariable(name: "next_cells", scope: !14981, file: !14689, line: 63, type: !27)
!14989 = !DILocation(line: 63, column: 7, scope: !14981)
!14990 = !DILocation(line: 65, column: 3, scope: !14981)
!14991 = !DILocation(line: 65, column: 11, scope: !14981)
!14992 = !DILocation(line: 65, column: 10, scope: !14981)
!14993 = !DILocation(line: 67, column: 30, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14981, file: !14689, line: 66, column: 5)
!14995 = !DILocation(line: 67, column: 29, scope: !14994)
!14996 = !DILocation(line: 67, column: 20, scope: !14994)
!14997 = !DILocation(line: 67, column: 18, scope: !14994)
!14998 = !DILocation(line: 68, column: 11, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14994, file: !14689, line: 68, column: 11)
!15000 = !DILocation(line: 68, column: 22, scope: !14999)
!15001 = !DILocation(line: 68, column: 11, scope: !14994)
!15002 = !DILocation(line: 70, column: 12, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14999, file: !14689, line: 69, column: 9)
!15004 = !DILocation(line: 70, column: 15, scope: !15003)
!15005 = !DILocation(line: 71, column: 22, scope: !15003)
!15006 = !DILocation(line: 72, column: 9, scope: !15003)
!15007 = !DILocation(line: 73, column: 11, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14994, file: !14689, line: 73, column: 11)
!15009 = !DILocation(line: 73, column: 19, scope: !15008)
!15010 = !DILocation(line: 73, column: 17, scope: !15008)
!15011 = !DILocation(line: 73, column: 32, scope: !15008)
!15012 = !DILocation(line: 73, column: 30, scope: !15008)
!15013 = !DILocation(line: 73, column: 11, scope: !14994)
!15014 = !DILocation(line: 74, column: 9, scope: !15008)
!15015 = !DILocation(line: 75, column: 16, scope: !14994)
!15016 = !DILocation(line: 75, column: 13, scope: !14994)
!15017 = !DILocation(line: 76, column: 9, scope: !14994)
!15018 = distinct !{!15018, !14990, !15019}
!15019 = !DILocation(line: 77, column: 5, scope: !14981)
!15020 = !DILocation(line: 78, column: 4, scope: !14981)
!15021 = !DILocation(line: 78, column: 7, scope: !14981)
!15022 = !DILocation(line: 79, column: 10, scope: !14981)
!15023 = !DILocation(line: 79, column: 3, scope: !14981)
!15024 = distinct !DISubprogram(name: "mbs_align_pad", scope: !14689, file: !14689, line: 88, type: !1881, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15025 = !DILocalVariable(name: "dest", arg: 1, scope: !15024, file: !14689, line: 88, type: !143)
!15026 = !DILocation(line: 88, column: 22, scope: !15024)
!15027 = !DILocalVariable(name: "dest_end", arg: 2, scope: !15024, file: !14689, line: 88, type: !146)
!15028 = !DILocation(line: 88, column: 40, scope: !15024)
!15029 = !DILocalVariable(name: "n_spaces", arg: 3, scope: !15024, file: !14689, line: 88, type: !149)
!15030 = !DILocation(line: 88, column: 57, scope: !15024)
!15031 = !DILocation(line: 92, column: 3, scope: !15024)
!15032 = !DILocation(line: 92, column: 18, scope: !15024)
!15033 = !DILocation(line: 92, column: 21, scope: !15024)
!15034 = !DILocation(line: 92, column: 25, scope: !15024)
!15035 = !DILocation(line: 92, column: 32, scope: !15024)
!15036 = !DILocation(line: 92, column: 30, scope: !15024)
!15037 = !DILocation(line: 0, scope: !15024)
!15038 = !DILocation(line: 93, column: 10, scope: !15024)
!15039 = !DILocation(line: 93, column: 13, scope: !15024)
!15040 = distinct !{!15040, !15031, !15041}
!15041 = !DILocation(line: 93, column: 15, scope: !15024)
!15042 = !DILocation(line: 94, column: 4, scope: !15024)
!15043 = !DILocation(line: 94, column: 9, scope: !15024)
!15044 = !DILocation(line: 95, column: 10, scope: !15024)
!15045 = !DILocation(line: 95, column: 3, scope: !15024)
!15046 = distinct !DISubprogram(name: "ambsalign", scope: !14689, file: !14689, line: 248, type: !1875, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1866, retainedNodes: !152)
!15047 = !DILocalVariable(name: "src", arg: 1, scope: !15046, file: !14689, line: 248, type: !146)
!15048 = !DILocation(line: 248, column: 24, scope: !15046)
!15049 = !DILocalVariable(name: "width", arg: 2, scope: !15046, file: !14689, line: 248, type: !148)
!15050 = !DILocation(line: 248, column: 37, scope: !15046)
!15051 = !DILocalVariable(name: "align", arg: 3, scope: !15046, file: !14689, line: 248, type: !586)
!15052 = !DILocation(line: 248, column: 56, scope: !15046)
!15053 = !DILocalVariable(name: "flags", arg: 4, scope: !15046, file: !14689, line: 248, type: !27)
!15054 = !DILocation(line: 248, column: 67, scope: !15046)
!15055 = !DILocalVariable(name: "orig_width", scope: !15046, file: !14689, line: 250, type: !149)
!15056 = !DILocation(line: 250, column: 10, scope: !15046)
!15057 = !DILocation(line: 250, column: 24, scope: !15046)
!15058 = !DILocation(line: 250, column: 23, scope: !15046)
!15059 = !DILocalVariable(name: "size", scope: !15046, file: !14689, line: 251, type: !149)
!15060 = !DILocation(line: 251, column: 10, scope: !15046)
!15061 = !DILocation(line: 251, column: 18, scope: !15046)
!15062 = !DILocation(line: 251, column: 17, scope: !15046)
!15063 = !DILocalVariable(name: "req", scope: !15046, file: !14689, line: 252, type: !149)
!15064 = !DILocation(line: 252, column: 10, scope: !15046)
!15065 = !DILocation(line: 252, column: 16, scope: !15046)
!15066 = !DILocalVariable(name: "buf", scope: !15046, file: !14689, line: 253, type: !143)
!15067 = !DILocation(line: 253, column: 9, scope: !15046)
!15068 = !DILocation(line: 255, column: 3, scope: !15046)
!15069 = !DILocation(line: 255, column: 10, scope: !15046)
!15070 = !DILocation(line: 255, column: 17, scope: !15046)
!15071 = !DILocation(line: 255, column: 14, scope: !15046)
!15072 = !DILocalVariable(name: "nbuf", scope: !15073, file: !14689, line: 257, type: !143)
!15073 = distinct !DILexicalBlock(scope: !15046, file: !14689, line: 256, column: 5)
!15074 = !DILocation(line: 257, column: 13, scope: !15073)
!15075 = !DILocation(line: 258, column: 14, scope: !15073)
!15076 = !DILocation(line: 258, column: 18, scope: !15073)
!15077 = !DILocation(line: 258, column: 12, scope: !15073)
!15078 = !DILocation(line: 259, column: 23, scope: !15073)
!15079 = !DILocation(line: 259, column: 28, scope: !15073)
!15080 = !DILocation(line: 259, column: 14, scope: !15073)
!15081 = !DILocation(line: 259, column: 12, scope: !15073)
!15082 = !DILocation(line: 260, column: 11, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15073, file: !14689, line: 260, column: 11)
!15084 = !DILocation(line: 260, column: 16, scope: !15083)
!15085 = !DILocation(line: 260, column: 11, scope: !15073)
!15086 = !DILocation(line: 262, column: 17, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15083, file: !14689, line: 261, column: 9)
!15088 = !DILocation(line: 262, column: 11, scope: !15087)
!15089 = !DILocation(line: 263, column: 15, scope: !15087)
!15090 = !DILocation(line: 264, column: 11, scope: !15087)
!15091 = !DILocation(line: 266, column: 13, scope: !15073)
!15092 = !DILocation(line: 266, column: 11, scope: !15073)
!15093 = !DILocation(line: 267, column: 16, scope: !15073)
!15094 = !DILocation(line: 267, column: 8, scope: !15073)
!15095 = !DILocation(line: 267, column: 14, scope: !15073)
!15096 = !DILocation(line: 268, column: 23, scope: !15073)
!15097 = !DILocation(line: 268, column: 28, scope: !15073)
!15098 = !DILocation(line: 268, column: 33, scope: !15073)
!15099 = !DILocation(line: 268, column: 39, scope: !15073)
!15100 = !DILocation(line: 268, column: 46, scope: !15073)
!15101 = !DILocation(line: 268, column: 53, scope: !15073)
!15102 = !DILocation(line: 268, column: 13, scope: !15073)
!15103 = !DILocation(line: 268, column: 11, scope: !15073)
!15104 = !DILocation(line: 269, column: 11, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15073, file: !14689, line: 269, column: 11)
!15106 = !DILocation(line: 269, column: 15, scope: !15105)
!15107 = !DILocation(line: 269, column: 11, scope: !15073)
!15108 = !DILocation(line: 271, column: 17, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15105, file: !14689, line: 270, column: 9)
!15110 = !DILocation(line: 271, column: 11, scope: !15109)
!15111 = !DILocation(line: 272, column: 15, scope: !15109)
!15112 = !DILocation(line: 273, column: 11, scope: !15109)
!15113 = distinct !{!15113, !15068, !15114}
!15114 = !DILocation(line: 275, column: 5, scope: !15046)
!15115 = !DILocation(line: 277, column: 10, scope: !15046)
!15116 = !DILocation(line: 277, column: 3, scope: !15046)
!15117 = distinct !DISubprogram(name: "gnu_mbswidth", scope: !15118, file: !15118, line: 47, type: !1886, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !152)
!15118 = !DIFile(filename: "lib/mbswidth.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15119 = !DILocalVariable(name: "string", arg: 1, scope: !15117, file: !15118, line: 47, type: !146)
!15120 = !DILocation(line: 47, column: 23, scope: !15117)
!15121 = !DILocalVariable(name: "flags", arg: 2, scope: !15117, file: !15118, line: 47, type: !27)
!15122 = !DILocation(line: 47, column: 35, scope: !15117)
!15123 = !DILocation(line: 49, column: 21, scope: !15117)
!15124 = !DILocation(line: 49, column: 37, scope: !15117)
!15125 = !DILocation(line: 49, column: 29, scope: !15117)
!15126 = !DILocation(line: 49, column: 46, scope: !15117)
!15127 = !DILocation(line: 49, column: 10, scope: !15117)
!15128 = !DILocation(line: 49, column: 3, scope: !15117)
!15129 = distinct !DISubprogram(name: "mbsnwidth", scope: !15118, file: !15118, line: 57, type: !1888, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !152)
!15130 = !DILocalVariable(name: "string", arg: 1, scope: !15129, file: !15118, line: 57, type: !146)
!15131 = !DILocation(line: 57, column: 24, scope: !15129)
!15132 = !DILocalVariable(name: "nbytes", arg: 2, scope: !15129, file: !15118, line: 57, type: !149)
!15133 = !DILocation(line: 57, column: 39, scope: !15129)
!15134 = !DILocalVariable(name: "flags", arg: 3, scope: !15129, file: !15118, line: 57, type: !27)
!15135 = !DILocation(line: 57, column: 51, scope: !15129)
!15136 = !DILocalVariable(name: "p", scope: !15129, file: !15118, line: 59, type: !146)
!15137 = !DILocation(line: 59, column: 15, scope: !15129)
!15138 = !DILocation(line: 59, column: 19, scope: !15129)
!15139 = !DILocalVariable(name: "plimit", scope: !15129, file: !15118, line: 60, type: !146)
!15140 = !DILocation(line: 60, column: 15, scope: !15129)
!15141 = !DILocation(line: 60, column: 24, scope: !15129)
!15142 = !DILocation(line: 60, column: 28, scope: !15129)
!15143 = !DILocation(line: 60, column: 26, scope: !15129)
!15144 = !DILocalVariable(name: "width", scope: !15129, file: !15118, line: 61, type: !27)
!15145 = !DILocation(line: 61, column: 7, scope: !15129)
!15146 = !DILocation(line: 63, column: 9, scope: !15129)
!15147 = !DILocation(line: 64, column: 7, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15129, file: !15118, line: 64, column: 7)
!15149 = !DILocation(line: 64, column: 18, scope: !15148)
!15150 = !DILocation(line: 64, column: 7, scope: !15129)
!15151 = !DILocation(line: 66, column: 7, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15148, file: !15118, line: 65, column: 5)
!15153 = !DILocation(line: 66, column: 14, scope: !15152)
!15154 = !DILocation(line: 66, column: 18, scope: !15152)
!15155 = !DILocation(line: 66, column: 16, scope: !15152)
!15156 = !DILocation(line: 67, column: 18, scope: !15152)
!15157 = !DILocation(line: 67, column: 17, scope: !15152)
!15158 = !DILocation(line: 67, column: 9, scope: !15152)
!15159 = !DILocation(line: 90, column: 16, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15152, file: !15118, line: 68, column: 11)
!15161 = !DILocation(line: 91, column: 20, scope: !15160)
!15162 = !DILocation(line: 92, column: 15, scope: !15160)
!15163 = !DILocalVariable(name: "mbstate", scope: !15164, file: !15118, line: 96, type: !1890)
!15164 = distinct !DILexicalBlock(scope: !15160, file: !15118, line: 95, column: 15)
!15165 = !DILocation(line: 96, column: 27, scope: !15164)
!15166 = !DILocation(line: 97, column: 17, scope: !15164)
!15167 = !DILocation(line: 98, column: 17, scope: !15164)
!15168 = !DILocalVariable(name: "wc", scope: !15169, file: !15118, line: 100, type: !654)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !15118, line: 99, column: 19)
!15170 = !DILocation(line: 100, column: 29, scope: !15169)
!15171 = !DILocalVariable(name: "bytes", scope: !15169, file: !15118, line: 101, type: !149)
!15172 = !DILocation(line: 101, column: 28, scope: !15169)
!15173 = !DILocalVariable(name: "w", scope: !15169, file: !15118, line: 102, type: !27)
!15174 = !DILocation(line: 102, column: 25, scope: !15169)
!15175 = !DILocation(line: 104, column: 43, scope: !15169)
!15176 = !DILocation(line: 104, column: 46, scope: !15169)
!15177 = !DILocation(line: 104, column: 55, scope: !15169)
!15178 = !DILocation(line: 104, column: 53, scope: !15169)
!15179 = !DILocation(line: 104, column: 29, scope: !15169)
!15180 = !DILocation(line: 104, column: 27, scope: !15169)
!15181 = !DILocation(line: 106, column: 25, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15169, file: !15118, line: 106, column: 25)
!15183 = !DILocation(line: 106, column: 31, scope: !15182)
!15184 = !DILocation(line: 106, column: 25, scope: !15169)
!15185 = !DILocation(line: 109, column: 31, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15187, file: !15118, line: 109, column: 29)
!15187 = distinct !DILexicalBlock(scope: !15182, file: !15118, line: 108, column: 23)
!15188 = !DILocation(line: 109, column: 37, scope: !15186)
!15189 = !DILocation(line: 109, column: 29, scope: !15187)
!15190 = !DILocation(line: 111, column: 30, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15186, file: !15118, line: 110, column: 27)
!15192 = !DILocation(line: 112, column: 34, scope: !15191)
!15193 = !DILocation(line: 113, column: 29, scope: !15191)
!15194 = !DILocation(line: 116, column: 27, scope: !15186)
!15195 = !DILocation(line: 119, column: 25, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15169, file: !15118, line: 119, column: 25)
!15197 = !DILocation(line: 119, column: 31, scope: !15196)
!15198 = !DILocation(line: 119, column: 25, scope: !15169)
!15199 = !DILocation(line: 122, column: 31, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15201, file: !15118, line: 122, column: 29)
!15201 = distinct !DILexicalBlock(scope: !15196, file: !15118, line: 121, column: 23)
!15202 = !DILocation(line: 122, column: 37, scope: !15200)
!15203 = !DILocation(line: 122, column: 29, scope: !15201)
!15204 = !DILocation(line: 124, column: 33, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15200, file: !15118, line: 123, column: 27)
!15206 = !DILocation(line: 124, column: 31, scope: !15205)
!15207 = !DILocation(line: 125, column: 34, scope: !15205)
!15208 = !DILocation(line: 126, column: 29, scope: !15205)
!15209 = !DILocation(line: 129, column: 27, scope: !15200)
!15210 = !DILocation(line: 132, column: 25, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15169, file: !15118, line: 132, column: 25)
!15212 = !DILocation(line: 132, column: 31, scope: !15211)
!15213 = !DILocation(line: 132, column: 25, scope: !15169)
!15214 = !DILocation(line: 134, column: 29, scope: !15211)
!15215 = !DILocation(line: 134, column: 23, scope: !15211)
!15216 = !DILocation(line: 136, column: 34, scope: !15169)
!15217 = !DILocation(line: 136, column: 25, scope: !15169)
!15218 = !DILocation(line: 136, column: 23, scope: !15169)
!15219 = !DILocation(line: 137, column: 25, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15169, file: !15118, line: 137, column: 25)
!15221 = !DILocation(line: 137, column: 27, scope: !15220)
!15222 = !DILocation(line: 137, column: 25, scope: !15169)
!15223 = !DILocation(line: 140, column: 29, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !15118, line: 140, column: 29)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !15118, line: 139, column: 23)
!15226 = !DILocation(line: 140, column: 43, scope: !15224)
!15227 = !DILocation(line: 140, column: 41, scope: !15224)
!15228 = !DILocation(line: 140, column: 31, scope: !15224)
!15229 = !DILocation(line: 140, column: 29, scope: !15225)
!15230 = !DILocation(line: 141, column: 27, scope: !15224)
!15231 = !DILocation(line: 142, column: 34, scope: !15225)
!15232 = !DILocation(line: 142, column: 31, scope: !15225)
!15233 = !DILocation(line: 143, column: 23, scope: !15225)
!15234 = !DILocation(line: 146, column: 29, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15220, file: !15118, line: 146, column: 27)
!15236 = !DILocation(line: 146, column: 35, scope: !15235)
!15237 = !DILocation(line: 146, column: 27, scope: !15220)
!15238 = !DILocation(line: 148, column: 42, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15240, file: !15118, line: 148, column: 31)
!15240 = distinct !DILexicalBlock(scope: !15235, file: !15118, line: 147, column: 25)
!15241 = !DILocation(line: 148, column: 32, scope: !15239)
!15242 = !DILocation(line: 148, column: 31, scope: !15240)
!15243 = !DILocation(line: 150, column: 35, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !15118, line: 150, column: 35)
!15245 = distinct !DILexicalBlock(scope: !15239, file: !15118, line: 149, column: 29)
!15246 = !DILocation(line: 150, column: 41, scope: !15244)
!15247 = !DILocation(line: 150, column: 35, scope: !15245)
!15248 = !DILocation(line: 151, column: 33, scope: !15244)
!15249 = !DILocation(line: 152, column: 36, scope: !15245)
!15250 = !DILocation(line: 153, column: 29, scope: !15245)
!15251 = !DILocation(line: 154, column: 25, scope: !15240)
!15252 = !DILocation(line: 156, column: 25, scope: !15235)
!15253 = !DILocation(line: 158, column: 26, scope: !15169)
!15254 = !DILocation(line: 158, column: 23, scope: !15169)
!15255 = !DILocation(line: 159, column: 19, scope: !15169)
!15256 = !DILocation(line: 160, column: 26, scope: !15164)
!15257 = !DILocation(line: 160, column: 24, scope: !15164)
!15258 = distinct !{!15258, !15167, !15259}
!15259 = !DILocation(line: 160, column: 44, scope: !15164)
!15260 = !DILocation(line: 162, column: 15, scope: !15160)
!15261 = distinct !{!15261, !15151, !15262}
!15262 = !DILocation(line: 163, column: 11, scope: !15152)
!15263 = !DILocation(line: 164, column: 14, scope: !15152)
!15264 = !DILocation(line: 164, column: 7, scope: !15152)
!15265 = !DILocation(line: 167, column: 3, scope: !15129)
!15266 = !DILocation(line: 167, column: 10, scope: !15129)
!15267 = !DILocation(line: 167, column: 14, scope: !15129)
!15268 = !DILocation(line: 167, column: 12, scope: !15129)
!15269 = !DILocalVariable(name: "c", scope: !15270, file: !15118, line: 169, type: !591)
!15270 = distinct !DILexicalBlock(scope: !15129, file: !15118, line: 168, column: 5)
!15271 = !DILocation(line: 169, column: 21, scope: !15270)
!15272 = !DILocation(line: 169, column: 43, scope: !15270)
!15273 = !DILocation(line: 169, column: 41, scope: !15270)
!15274 = !DILocation(line: 171, column: 11, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15270, file: !15118, line: 171, column: 11)
!15276 = !DILocation(line: 171, column: 11, scope: !15270)
!15277 = !DILocation(line: 173, column: 15, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !15118, line: 173, column: 15)
!15279 = distinct !DILexicalBlock(scope: !15275, file: !15118, line: 172, column: 9)
!15280 = !DILocation(line: 173, column: 21, scope: !15278)
!15281 = !DILocation(line: 173, column: 15, scope: !15279)
!15282 = !DILocation(line: 174, column: 13, scope: !15278)
!15283 = !DILocation(line: 175, column: 16, scope: !15279)
!15284 = !DILocation(line: 176, column: 9, scope: !15279)
!15285 = !DILocation(line: 177, column: 18, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15275, file: !15118, line: 177, column: 16)
!15287 = !DILocation(line: 177, column: 24, scope: !15286)
!15288 = !DILocation(line: 177, column: 16, scope: !15275)
!15289 = !DILocation(line: 179, column: 16, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15291, file: !15118, line: 179, column: 15)
!15291 = distinct !DILexicalBlock(scope: !15286, file: !15118, line: 178, column: 9)
!15292 = !DILocation(line: 179, column: 15, scope: !15291)
!15293 = !DILocation(line: 181, column: 19, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15295, file: !15118, line: 181, column: 19)
!15295 = distinct !DILexicalBlock(scope: !15290, file: !15118, line: 180, column: 13)
!15296 = !DILocation(line: 181, column: 25, scope: !15294)
!15297 = !DILocation(line: 181, column: 19, scope: !15295)
!15298 = !DILocation(line: 182, column: 17, scope: !15294)
!15299 = !DILocation(line: 183, column: 20, scope: !15295)
!15300 = !DILocation(line: 184, column: 13, scope: !15295)
!15301 = !DILocation(line: 185, column: 9, scope: !15291)
!15302 = !DILocation(line: 187, column: 9, scope: !15286)
!15303 = distinct !{!15303, !15265, !15304}
!15304 = !DILocation(line: 188, column: 5, scope: !15129)
!15305 = !DILocation(line: 189, column: 10, scope: !15129)
!15306 = !DILocation(line: 189, column: 3, scope: !15129)
!15307 = !DILabel(scope: !15129, name: "overflow", file: !15118, line: 191)
!15308 = !DILocation(line: 191, column: 2, scope: !15129)
!15309 = !DILocation(line: 192, column: 3, scope: !15129)
!15310 = !DILocation(line: 193, column: 1, scope: !15129)
!15311 = distinct !DISubprogram(name: "mpsort", scope: !1906, file: !1906, line: 153, type: !1903, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15312 = !DILocalVariable(name: "base", arg: 1, scope: !15311, file: !1906, line: 153, type: !180)
!15313 = !DILocation(line: 153, column: 22, scope: !15311)
!15314 = !DILocalVariable(name: "n", arg: 2, scope: !15311, file: !1906, line: 153, type: !149)
!15315 = !DILocation(line: 153, column: 35, scope: !15311)
!15316 = !DILocalVariable(name: "cmp", arg: 3, scope: !15311, file: !1906, line: 153, type: !1905)
!15317 = !DILocation(line: 153, column: 58, scope: !15311)
!15318 = !DILocation(line: 155, column: 20, scope: !15311)
!15319 = !DILocation(line: 155, column: 26, scope: !15311)
!15320 = !DILocation(line: 155, column: 29, scope: !15311)
!15321 = !DILocation(line: 155, column: 36, scope: !15311)
!15322 = !DILocation(line: 155, column: 34, scope: !15311)
!15323 = !DILocation(line: 155, column: 39, scope: !15311)
!15324 = !DILocation(line: 155, column: 3, scope: !15311)
!15325 = !DILocation(line: 156, column: 1, scope: !15311)
!15326 = distinct !DISubprogram(name: "mpsort_with_tmp", scope: !1906, file: !1906, line: 86, type: !1910, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15327 = !DILocalVariable(name: "base", arg: 1, scope: !15326, file: !1906, line: 86, type: !1912)
!15328 = !DILocation(line: 86, column: 40, scope: !15326)
!15329 = !DILocalVariable(name: "n", arg: 2, scope: !15326, file: !1906, line: 86, type: !149)
!15330 = !DILocation(line: 86, column: 53, scope: !15326)
!15331 = !DILocalVariable(name: "tmp", arg: 3, scope: !15326, file: !1906, line: 87, type: !1912)
!15332 = !DILocation(line: 87, column: 40, scope: !15326)
!15333 = !DILocalVariable(name: "cmp", arg: 4, scope: !15326, file: !1906, line: 88, type: !1905)
!15334 = !DILocation(line: 88, column: 38, scope: !15326)
!15335 = !DILocation(line: 90, column: 7, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15326, file: !1906, line: 90, column: 7)
!15337 = !DILocation(line: 90, column: 9, scope: !15336)
!15338 = !DILocation(line: 90, column: 7, scope: !15326)
!15339 = !DILocation(line: 92, column: 11, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15341, file: !1906, line: 92, column: 11)
!15341 = distinct !DILexicalBlock(scope: !15336, file: !1906, line: 91, column: 5)
!15342 = !DILocation(line: 92, column: 13, scope: !15340)
!15343 = !DILocation(line: 92, column: 11, scope: !15341)
!15344 = !DILocalVariable(name: "p0", scope: !15345, file: !1906, line: 94, type: !181)
!15345 = distinct !DILexicalBlock(scope: !15340, file: !1906, line: 93, column: 9)
!15346 = !DILocation(line: 94, column: 23, scope: !15345)
!15347 = !DILocation(line: 94, column: 28, scope: !15345)
!15348 = !DILocalVariable(name: "p1", scope: !15345, file: !1906, line: 95, type: !181)
!15349 = !DILocation(line: 95, column: 23, scope: !15345)
!15350 = !DILocation(line: 95, column: 28, scope: !15345)
!15351 = !DILocation(line: 96, column: 18, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15345, file: !1906, line: 96, column: 15)
!15353 = !DILocation(line: 96, column: 23, scope: !15352)
!15354 = !DILocation(line: 96, column: 27, scope: !15352)
!15355 = !DILocation(line: 96, column: 31, scope: !15352)
!15356 = !DILocation(line: 96, column: 15, scope: !15345)
!15357 = !DILocation(line: 98, column: 25, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15352, file: !1906, line: 97, column: 13)
!15359 = !DILocation(line: 98, column: 15, scope: !15358)
!15360 = !DILocation(line: 98, column: 23, scope: !15358)
!15361 = !DILocation(line: 99, column: 25, scope: !15358)
!15362 = !DILocation(line: 99, column: 15, scope: !15358)
!15363 = !DILocation(line: 99, column: 23, scope: !15358)
!15364 = !DILocation(line: 100, column: 13, scope: !15358)
!15365 = !DILocation(line: 101, column: 9, scope: !15345)
!15366 = !DILocation(line: 102, column: 5, scope: !15341)
!15367 = !DILocalVariable(name: "n1", scope: !15368, file: !1906, line: 105, type: !149)
!15368 = distinct !DILexicalBlock(scope: !15336, file: !1906, line: 104, column: 5)
!15369 = !DILocation(line: 105, column: 14, scope: !15368)
!15370 = !DILocation(line: 105, column: 19, scope: !15368)
!15371 = !DILocation(line: 105, column: 21, scope: !15368)
!15372 = !DILocalVariable(name: "n2", scope: !15368, file: !1906, line: 106, type: !149)
!15373 = !DILocation(line: 106, column: 14, scope: !15368)
!15374 = !DILocation(line: 106, column: 19, scope: !15368)
!15375 = !DILocation(line: 106, column: 23, scope: !15368)
!15376 = !DILocation(line: 106, column: 21, scope: !15368)
!15377 = !DILocalVariable(name: "i", scope: !15368, file: !1906, line: 107, type: !149)
!15378 = !DILocation(line: 107, column: 14, scope: !15368)
!15379 = !DILocalVariable(name: "t", scope: !15368, file: !1906, line: 108, type: !149)
!15380 = !DILocation(line: 108, column: 14, scope: !15368)
!15381 = !DILocalVariable(name: "tlim", scope: !15368, file: !1906, line: 109, type: !149)
!15382 = !DILocation(line: 109, column: 14, scope: !15368)
!15383 = !DILocation(line: 109, column: 21, scope: !15368)
!15384 = !DILocalVariable(name: "b", scope: !15368, file: !1906, line: 110, type: !149)
!15385 = !DILocation(line: 110, column: 14, scope: !15368)
!15386 = !DILocation(line: 110, column: 18, scope: !15368)
!15387 = !DILocalVariable(name: "blim", scope: !15368, file: !1906, line: 111, type: !149)
!15388 = !DILocation(line: 111, column: 14, scope: !15368)
!15389 = !DILocation(line: 111, column: 21, scope: !15368)
!15390 = !DILocalVariable(name: "bb", scope: !15368, file: !1906, line: 112, type: !181)
!15391 = !DILocation(line: 112, column: 19, scope: !15368)
!15392 = !DILocalVariable(name: "tt", scope: !15368, file: !1906, line: 113, type: !181)
!15393 = !DILocation(line: 113, column: 19, scope: !15368)
!15394 = !DILocation(line: 115, column: 24, scope: !15368)
!15395 = !DILocation(line: 115, column: 31, scope: !15368)
!15396 = !DILocation(line: 115, column: 29, scope: !15368)
!15397 = !DILocation(line: 115, column: 35, scope: !15368)
!15398 = !DILocation(line: 115, column: 39, scope: !15368)
!15399 = !DILocation(line: 115, column: 44, scope: !15368)
!15400 = !DILocation(line: 115, column: 7, scope: !15368)
!15401 = !DILocation(line: 117, column: 11, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15368, file: !1906, line: 117, column: 11)
!15403 = !DILocation(line: 117, column: 14, scope: !15402)
!15404 = !DILocation(line: 117, column: 11, scope: !15368)
!15405 = !DILocation(line: 118, column: 18, scope: !15402)
!15406 = !DILocation(line: 118, column: 9, scope: !15402)
!15407 = !DILocation(line: 118, column: 16, scope: !15402)
!15408 = !DILocation(line: 120, column: 26, scope: !15402)
!15409 = !DILocation(line: 120, column: 32, scope: !15402)
!15410 = !DILocation(line: 120, column: 36, scope: !15402)
!15411 = !DILocation(line: 120, column: 41, scope: !15402)
!15412 = !DILocation(line: 120, column: 9, scope: !15402)
!15413 = !DILocation(line: 122, column: 12, scope: !15368)
!15414 = !DILocation(line: 122, column: 16, scope: !15368)
!15415 = !DILocation(line: 122, column: 10, scope: !15368)
!15416 = !DILocation(line: 123, column: 12, scope: !15368)
!15417 = !DILocation(line: 123, column: 17, scope: !15368)
!15418 = !DILocation(line: 123, column: 10, scope: !15368)
!15419 = !DILocation(line: 125, column: 14, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15368, file: !1906, line: 125, column: 7)
!15421 = !DILocation(line: 125, column: 12, scope: !15420)
!15422 = !DILocation(line: 126, column: 13, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15424, file: !1906, line: 126, column: 13)
!15424 = distinct !DILexicalBlock(scope: !15420, file: !1906, line: 125, column: 7)
!15425 = !DILocation(line: 126, column: 18, scope: !15423)
!15426 = !DILocation(line: 126, column: 22, scope: !15423)
!15427 = !DILocation(line: 126, column: 26, scope: !15423)
!15428 = !DILocation(line: 126, column: 13, scope: !15424)
!15429 = !DILocation(line: 128, column: 25, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15423, file: !1906, line: 127, column: 11)
!15431 = !DILocation(line: 128, column: 13, scope: !15430)
!15432 = !DILocation(line: 128, column: 19, scope: !15430)
!15433 = !DILocation(line: 128, column: 23, scope: !15430)
!15434 = !DILocation(line: 129, column: 14, scope: !15430)
!15435 = !DILocation(line: 130, column: 17, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15430, file: !1906, line: 130, column: 17)
!15437 = !DILocation(line: 130, column: 22, scope: !15436)
!15438 = !DILocation(line: 130, column: 19, scope: !15436)
!15439 = !DILocation(line: 130, column: 17, scope: !15430)
!15440 = !DILocation(line: 131, column: 15, scope: !15436)
!15441 = !DILocation(line: 132, column: 18, scope: !15430)
!15442 = !DILocation(line: 132, column: 22, scope: !15430)
!15443 = !DILocation(line: 132, column: 16, scope: !15430)
!15444 = !DILocation(line: 133, column: 11, scope: !15430)
!15445 = !DILocation(line: 136, column: 25, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15423, file: !1906, line: 135, column: 11)
!15447 = !DILocation(line: 136, column: 13, scope: !15446)
!15448 = !DILocation(line: 136, column: 19, scope: !15446)
!15449 = !DILocation(line: 136, column: 23, scope: !15446)
!15450 = !DILocation(line: 137, column: 14, scope: !15446)
!15451 = !DILocation(line: 138, column: 17, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15446, file: !1906, line: 138, column: 17)
!15453 = !DILocation(line: 138, column: 22, scope: !15452)
!15454 = !DILocation(line: 138, column: 19, scope: !15452)
!15455 = !DILocation(line: 138, column: 17, scope: !15446)
!15456 = !DILocation(line: 140, column: 25, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15452, file: !1906, line: 139, column: 15)
!15458 = !DILocation(line: 140, column: 32, scope: !15457)
!15459 = !DILocation(line: 140, column: 30, scope: !15457)
!15460 = !DILocation(line: 140, column: 17, scope: !15457)
!15461 = !DILocation(line: 140, column: 35, scope: !15457)
!15462 = !DILocation(line: 140, column: 41, scope: !15457)
!15463 = !DILocation(line: 140, column: 39, scope: !15457)
!15464 = !DILocation(line: 140, column: 45, scope: !15457)
!15465 = !DILocation(line: 140, column: 52, scope: !15457)
!15466 = !DILocation(line: 140, column: 50, scope: !15457)
!15467 = !DILocation(line: 140, column: 55, scope: !15457)
!15468 = !DILocation(line: 141, column: 17, scope: !15457)
!15469 = !DILocation(line: 143, column: 18, scope: !15446)
!15470 = !DILocation(line: 143, column: 23, scope: !15446)
!15471 = !DILocation(line: 143, column: 16, scope: !15446)
!15472 = !DILocation(line: 125, column: 7, scope: !15424)
!15473 = distinct !{!15473, !15474, !15475}
!15474 = !DILocation(line: 125, column: 7, scope: !15420)
!15475 = !DILocation(line: 144, column: 11, scope: !15420)
!15476 = !DILocation(line: 146, column: 1, scope: !15326)
!15477 = distinct !DISubprogram(name: "mpsort_into_tmp", scope: !1906, file: !1906, line: 37, type: !1910, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1900, retainedNodes: !152)
!15478 = !DILocalVariable(name: "base", arg: 1, scope: !15477, file: !1906, line: 37, type: !1912)
!15479 = !DILocation(line: 37, column: 40, scope: !15477)
!15480 = !DILocalVariable(name: "n", arg: 2, scope: !15477, file: !1906, line: 37, type: !149)
!15481 = !DILocation(line: 37, column: 53, scope: !15477)
!15482 = !DILocalVariable(name: "tmp", arg: 3, scope: !15477, file: !1906, line: 38, type: !1912)
!15483 = !DILocation(line: 38, column: 40, scope: !15477)
!15484 = !DILocalVariable(name: "cmp", arg: 4, scope: !15477, file: !1906, line: 39, type: !1905)
!15485 = !DILocation(line: 39, column: 38, scope: !15477)
!15486 = !DILocalVariable(name: "n1", scope: !15477, file: !1906, line: 41, type: !149)
!15487 = !DILocation(line: 41, column: 10, scope: !15477)
!15488 = !DILocation(line: 41, column: 15, scope: !15477)
!15489 = !DILocation(line: 41, column: 17, scope: !15477)
!15490 = !DILocalVariable(name: "n2", scope: !15477, file: !1906, line: 42, type: !149)
!15491 = !DILocation(line: 42, column: 10, scope: !15477)
!15492 = !DILocation(line: 42, column: 15, scope: !15477)
!15493 = !DILocation(line: 42, column: 19, scope: !15477)
!15494 = !DILocation(line: 42, column: 17, scope: !15477)
!15495 = !DILocalVariable(name: "a", scope: !15477, file: !1906, line: 43, type: !149)
!15496 = !DILocation(line: 43, column: 10, scope: !15477)
!15497 = !DILocalVariable(name: "alim", scope: !15477, file: !1906, line: 44, type: !149)
!15498 = !DILocation(line: 44, column: 10, scope: !15477)
!15499 = !DILocation(line: 44, column: 17, scope: !15477)
!15500 = !DILocalVariable(name: "b", scope: !15477, file: !1906, line: 45, type: !149)
!15501 = !DILocation(line: 45, column: 10, scope: !15477)
!15502 = !DILocation(line: 45, column: 14, scope: !15477)
!15503 = !DILocalVariable(name: "blim", scope: !15477, file: !1906, line: 46, type: !149)
!15504 = !DILocation(line: 46, column: 10, scope: !15477)
!15505 = !DILocation(line: 46, column: 17, scope: !15477)
!15506 = !DILocalVariable(name: "ba", scope: !15477, file: !1906, line: 47, type: !181)
!15507 = !DILocation(line: 47, column: 15, scope: !15477)
!15508 = !DILocalVariable(name: "bb", scope: !15477, file: !1906, line: 48, type: !181)
!15509 = !DILocation(line: 48, column: 15, scope: !15477)
!15510 = !DILocation(line: 50, column: 20, scope: !15477)
!15511 = !DILocation(line: 50, column: 27, scope: !15477)
!15512 = !DILocation(line: 50, column: 25, scope: !15477)
!15513 = !DILocation(line: 50, column: 31, scope: !15477)
!15514 = !DILocation(line: 50, column: 35, scope: !15477)
!15515 = !DILocation(line: 50, column: 40, scope: !15477)
!15516 = !DILocation(line: 50, column: 3, scope: !15477)
!15517 = !DILocation(line: 51, column: 20, scope: !15477)
!15518 = !DILocation(line: 51, column: 26, scope: !15477)
!15519 = !DILocation(line: 51, column: 30, scope: !15477)
!15520 = !DILocation(line: 51, column: 35, scope: !15477)
!15521 = !DILocation(line: 51, column: 3, scope: !15477)
!15522 = !DILocation(line: 53, column: 8, scope: !15477)
!15523 = !DILocation(line: 53, column: 13, scope: !15477)
!15524 = !DILocation(line: 53, column: 6, scope: !15477)
!15525 = !DILocation(line: 54, column: 8, scope: !15477)
!15526 = !DILocation(line: 54, column: 13, scope: !15477)
!15527 = !DILocation(line: 54, column: 6, scope: !15477)
!15528 = !DILocation(line: 56, column: 3, scope: !15477)
!15529 = !DILocation(line: 57, column: 9, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !1906, line: 57, column: 9)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !1906, line: 56, column: 3)
!15532 = distinct !DILexicalBlock(scope: !15477, file: !1906, line: 56, column: 3)
!15533 = !DILocation(line: 57, column: 14, scope: !15530)
!15534 = !DILocation(line: 57, column: 18, scope: !15530)
!15535 = !DILocation(line: 57, column: 22, scope: !15530)
!15536 = !DILocation(line: 57, column: 9, scope: !15531)
!15537 = !DILocation(line: 59, column: 18, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15530, file: !1906, line: 58, column: 7)
!15539 = !DILocation(line: 59, column: 13, scope: !15538)
!15540 = !DILocation(line: 59, column: 16, scope: !15538)
!15541 = !DILocation(line: 60, column: 10, scope: !15538)
!15542 = !DILocation(line: 61, column: 13, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15538, file: !1906, line: 61, column: 13)
!15544 = !DILocation(line: 61, column: 18, scope: !15543)
!15545 = !DILocation(line: 61, column: 15, scope: !15543)
!15546 = !DILocation(line: 61, column: 13, scope: !15538)
!15547 = !DILocation(line: 63, column: 17, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15543, file: !1906, line: 62, column: 11)
!15549 = !DILocation(line: 63, column: 15, scope: !15548)
!15550 = !DILocation(line: 64, column: 20, scope: !15548)
!15551 = !DILocation(line: 64, column: 18, scope: !15548)
!15552 = !DILocation(line: 65, column: 13, scope: !15548)
!15553 = !DILocation(line: 67, column: 14, scope: !15538)
!15554 = !DILocation(line: 67, column: 19, scope: !15538)
!15555 = !DILocation(line: 67, column: 12, scope: !15538)
!15556 = !DILocation(line: 68, column: 7, scope: !15538)
!15557 = !DILocation(line: 71, column: 18, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15530, file: !1906, line: 70, column: 7)
!15559 = !DILocation(line: 71, column: 13, scope: !15558)
!15560 = !DILocation(line: 71, column: 16, scope: !15558)
!15561 = !DILocation(line: 72, column: 10, scope: !15558)
!15562 = !DILocation(line: 73, column: 13, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15558, file: !1906, line: 73, column: 13)
!15564 = !DILocation(line: 73, column: 18, scope: !15563)
!15565 = !DILocation(line: 73, column: 15, scope: !15563)
!15566 = !DILocation(line: 73, column: 13, scope: !15558)
!15567 = !DILocation(line: 74, column: 11, scope: !15563)
!15568 = !DILocation(line: 75, column: 14, scope: !15558)
!15569 = !DILocation(line: 75, column: 19, scope: !15558)
!15570 = !DILocation(line: 75, column: 12, scope: !15558)
!15571 = !DILocation(line: 56, column: 3, scope: !15531)
!15572 = distinct !{!15572, !15573, !15574}
!15573 = !DILocation(line: 56, column: 3, scope: !15532)
!15574 = !DILocation(line: 76, column: 7, scope: !15532)
!15575 = !DILocation(line: 78, column: 11, scope: !15477)
!15576 = !DILocation(line: 78, column: 3, scope: !15477)
!15577 = !DILocation(line: 78, column: 16, scope: !15477)
!15578 = !DILocation(line: 78, column: 23, scope: !15477)
!15579 = !DILocation(line: 78, column: 21, scope: !15477)
!15580 = !DILocation(line: 78, column: 27, scope: !15477)
!15581 = !DILocation(line: 78, column: 34, scope: !15477)
!15582 = !DILocation(line: 78, column: 32, scope: !15477)
!15583 = !DILocation(line: 78, column: 37, scope: !15477)
!15584 = !DILocation(line: 79, column: 1, scope: !15477)
!15585 = distinct !DISubprogram(name: "nstrftime", scope: !15586, file: !15586, line: 431, type: !1916, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!15586 = !DIFile(filename: "lib/nstrftime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15587 = !DILocalVariable(name: "s", arg: 1, scope: !15585, file: !15586, line: 431, type: !143)
!15588 = !DILocation(line: 431, column: 32, scope: !15585)
!15589 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15585, file: !15586, line: 431, type: !149)
!15590 = !DILocation(line: 431, column: 35, scope: !15585)
!15591 = !DILocalVariable(name: "format", arg: 3, scope: !15585, file: !15586, line: 432, type: !146)
!15592 = !DILocation(line: 432, column: 28, scope: !15585)
!15593 = !DILocalVariable(name: "tp", arg: 4, scope: !15585, file: !15586, line: 433, type: !1918)
!15594 = !DILocation(line: 433, column: 31, scope: !15585)
!15595 = !DILocalVariable(name: "tz", arg: 5, scope: !15585, file: !15586, line: 433, type: !1933)
!15596 = !DILocation(line: 433, column: 34, scope: !15585)
!15597 = !DILocalVariable(name: "ns", arg: 6, scope: !15585, file: !15586, line: 433, type: !27)
!15598 = !DILocalVariable(name: "tzset_called", scope: !15585, file: !15586, line: 435, type: !141)
!15599 = !DILocation(line: 435, column: 8, scope: !15585)
!15600 = !DILocation(line: 436, column: 31, scope: !15585)
!15601 = !DILocation(line: 436, column: 34, scope: !15585)
!15602 = !DILocation(line: 436, column: 57, scope: !15585)
!15603 = !DILocation(line: 436, column: 65, scope: !15585)
!15604 = !DILocation(line: 437, column: 52, scope: !15585)
!15605 = !DILocation(line: 436, column: 10, scope: !15585)
!15606 = !DILocation(line: 436, column: 3, scope: !15585)
!15607 = distinct !DISubprogram(name: "__strftime_internal", scope: !15586, file: !15586, line: 447, type: !1941, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!15608 = !DILocalVariable(name: "s", arg: 1, scope: !15607, file: !15586, line: 447, type: !143)
!15609 = !DILocation(line: 447, column: 40, scope: !15607)
!15610 = !DILocalVariable(name: "maxsize", arg: 2, scope: !15607, file: !15586, line: 447, type: !149)
!15611 = !DILocation(line: 447, column: 43, scope: !15607)
!15612 = !DILocalVariable(name: "format", arg: 3, scope: !15607, file: !15586, line: 448, type: !146)
!15613 = !DILocation(line: 448, column: 36, scope: !15607)
!15614 = !DILocalVariable(name: "tp", arg: 4, scope: !15607, file: !15586, line: 449, type: !1918)
!15615 = !DILocation(line: 449, column: 39, scope: !15607)
!15616 = !DILocalVariable(name: "upcase", arg: 5, scope: !15607, file: !15586, line: 449, type: !141)
!15617 = !DILocation(line: 449, column: 48, scope: !15607)
!15618 = !DILocalVariable(name: "yr_spec", arg: 6, scope: !15607, file: !15586, line: 450, type: !27)
!15619 = !DILocation(line: 450, column: 26, scope: !15607)
!15620 = !DILocalVariable(name: "width", arg: 7, scope: !15607, file: !15586, line: 450, type: !27)
!15621 = !DILocation(line: 450, column: 39, scope: !15607)
!15622 = !DILocalVariable(name: "tzset_called", arg: 8, scope: !15607, file: !15586, line: 450, type: !640)
!15623 = !DILocation(line: 450, column: 52, scope: !15607)
!15624 = !DILocalVariable(name: "tz", arg: 9, scope: !15607, file: !15586, line: 451, type: !1933)
!15625 = !DILocation(line: 451, column: 22, scope: !15607)
!15626 = !DILocalVariable(name: "ns", arg: 10, scope: !15607, file: !15586, line: 451, type: !27)
!15627 = !DILocalVariable(name: "hour12", scope: !15607, file: !15586, line: 460, type: !27)
!15628 = !DILocation(line: 460, column: 7, scope: !15607)
!15629 = !DILocation(line: 460, column: 16, scope: !15607)
!15630 = !DILocation(line: 460, column: 20, scope: !15607)
!15631 = !{!6837, !2437, i64 8}
!15632 = !DILocalVariable(name: "zone", scope: !15607, file: !15586, line: 498, type: !146)
!15633 = !DILocation(line: 498, column: 15, scope: !15607)
!15634 = !DILocalVariable(name: "i", scope: !15607, file: !15586, line: 499, type: !149)
!15635 = !DILocation(line: 499, column: 10, scope: !15607)
!15636 = !DILocalVariable(name: "p", scope: !15607, file: !15586, line: 500, type: !143)
!15637 = !DILocation(line: 500, column: 21, scope: !15607)
!15638 = !DILocation(line: 500, column: 25, scope: !15607)
!15639 = !DILocalVariable(name: "f", scope: !15607, file: !15586, line: 501, type: !146)
!15640 = !DILocation(line: 501, column: 17, scope: !15607)
!15641 = !DILocation(line: 515, column: 8, scope: !15607)
!15642 = !DILocation(line: 523, column: 25, scope: !15607)
!15643 = !DILocation(line: 523, column: 29, scope: !15607)
!15644 = !{!6837, !2443, i64 48}
!15645 = !DILocation(line: 523, column: 8, scope: !15607)
!15646 = !DILocation(line: 553, column: 9, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15607, file: !15586, line: 553, column: 7)
!15648 = !DILocation(line: 553, column: 7, scope: !15607)
!15649 = !DILocation(line: 554, column: 10, scope: !15647)
!15650 = !DILocation(line: 554, column: 5, scope: !15647)
!15651 = !DILocation(line: 556, column: 7, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15607, file: !15586, line: 556, column: 7)
!15653 = !DILocation(line: 556, column: 14, scope: !15652)
!15654 = !DILocation(line: 556, column: 7, scope: !15607)
!15655 = !DILocation(line: 557, column: 12, scope: !15652)
!15656 = !DILocation(line: 557, column: 5, scope: !15652)
!15657 = !DILocation(line: 559, column: 9, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15652, file: !15586, line: 559, column: 9)
!15659 = !DILocation(line: 559, column: 16, scope: !15658)
!15660 = !DILocation(line: 559, column: 9, scope: !15652)
!15661 = !DILocation(line: 560, column: 14, scope: !15658)
!15662 = !DILocation(line: 560, column: 7, scope: !15658)
!15663 = !DILocation(line: 562, column: 12, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15607, file: !15586, line: 562, column: 3)
!15665 = !DILocation(line: 562, column: 10, scope: !15664)
!15666 = !DILocation(line: 562, column: 8, scope: !15664)
!15667 = !DILocation(line: 562, column: 21, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15664, file: !15586, line: 562, column: 3)
!15669 = !DILocation(line: 562, column: 20, scope: !15668)
!15670 = !DILocation(line: 562, column: 23, scope: !15668)
!15671 = !DILocation(line: 562, column: 3, scope: !15664)
!15672 = !DILocalVariable(name: "pad", scope: !15673, file: !15586, line: 564, type: !27)
!15673 = distinct !DILexicalBlock(scope: !15668, file: !15586, line: 563, column: 5)
!15674 = !DILocation(line: 564, column: 11, scope: !15673)
!15675 = !DILocalVariable(name: "modifier", scope: !15673, file: !15586, line: 565, type: !27)
!15676 = !DILocation(line: 565, column: 11, scope: !15673)
!15677 = !DILocalVariable(name: "digits", scope: !15673, file: !15586, line: 566, type: !27)
!15678 = !DILocation(line: 566, column: 11, scope: !15673)
!15679 = !DILocalVariable(name: "number_value", scope: !15673, file: !15586, line: 567, type: !27)
!15680 = !DILocation(line: 567, column: 11, scope: !15673)
!15681 = !DILocalVariable(name: "u_number_value", scope: !15673, file: !15586, line: 568, type: !6)
!15682 = !DILocation(line: 568, column: 20, scope: !15673)
!15683 = !DILocalVariable(name: "negative_number", scope: !15673, file: !15586, line: 569, type: !141)
!15684 = !DILocation(line: 569, column: 12, scope: !15673)
!15685 = !DILocalVariable(name: "always_output_a_sign", scope: !15673, file: !15586, line: 570, type: !141)
!15686 = !DILocation(line: 570, column: 12, scope: !15673)
!15687 = !DILocalVariable(name: "tz_colon_mask", scope: !15673, file: !15586, line: 571, type: !27)
!15688 = !DILocation(line: 571, column: 11, scope: !15673)
!15689 = !DILocalVariable(name: "subfmt", scope: !15673, file: !15586, line: 572, type: !146)
!15690 = !DILocation(line: 572, column: 21, scope: !15673)
!15691 = !DILocalVariable(name: "sign_char", scope: !15673, file: !15586, line: 573, type: !144)
!15692 = !DILocation(line: 573, column: 14, scope: !15673)
!15693 = !DILocalVariable(name: "bufp", scope: !15673, file: !15586, line: 574, type: !143)
!15694 = !DILocation(line: 574, column: 15, scope: !15673)
!15695 = !DILocalVariable(name: "buf", scope: !15673, file: !15586, line: 575, type: !1943)
!15696 = !DILocation(line: 575, column: 14, scope: !15673)
!15697 = !DILocalVariable(name: "to_lowcase", scope: !15673, file: !15586, line: 580, type: !141)
!15698 = !DILocation(line: 580, column: 12, scope: !15673)
!15699 = !DILocalVariable(name: "to_uppcase", scope: !15673, file: !15586, line: 581, type: !141)
!15700 = !DILocation(line: 581, column: 12, scope: !15673)
!15701 = !DILocation(line: 581, column: 25, scope: !15673)
!15702 = !DILocalVariable(name: "colons", scope: !15673, file: !15586, line: 582, type: !149)
!15703 = !DILocation(line: 582, column: 14, scope: !15673)
!15704 = !DILocalVariable(name: "change_case", scope: !15673, file: !15586, line: 583, type: !141)
!15705 = !DILocation(line: 583, column: 12, scope: !15673)
!15706 = !DILocalVariable(name: "format_char", scope: !15673, file: !15586, line: 584, type: !27)
!15707 = !DILocation(line: 584, column: 11, scope: !15673)
!15708 = !DILocalVariable(name: "subwidth", scope: !15673, file: !15586, line: 585, type: !27)
!15709 = !DILocation(line: 585, column: 11, scope: !15673)
!15710 = !DILocation(line: 667, column: 12, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15673, file: !15586, line: 667, column: 11)
!15712 = !DILocation(line: 667, column: 11, scope: !15711)
!15713 = !DILocation(line: 667, column: 14, scope: !15711)
!15714 = !DILocation(line: 667, column: 11, scope: !15673)
!15715 = !DILocation(line: 669, column: 11, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15711, file: !15586, line: 668, column: 9)
!15717 = !DILocalVariable(name: "_n", scope: !15718, file: !15586, line: 669, type: !149)
!15718 = distinct !DILexicalBlock(scope: !15716, file: !15586, line: 669, column: 11)
!15719 = !DILocation(line: 669, column: 11, scope: !15718)
!15720 = !DILocalVariable(name: "_w", scope: !15718, file: !15586, line: 669, type: !149)
!15721 = !DILocalVariable(name: "_incr", scope: !15718, file: !15586, line: 669, type: !149)
!15722 = !DILocation(line: 669, column: 11, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15718, file: !15586, line: 669, column: 11)
!15724 = !DILocation(line: 669, column: 11, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15718, file: !15586, line: 669, column: 11)
!15726 = !DILocation(line: 669, column: 11, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15728, file: !15586, line: 669, column: 11)
!15728 = distinct !DILexicalBlock(scope: !15725, file: !15586, line: 669, column: 11)
!15729 = !DILocation(line: 669, column: 11, scope: !15728)
!15730 = !DILocalVariable(name: "_delta", scope: !15731, file: !15586, line: 669, type: !149)
!15731 = distinct !DILexicalBlock(scope: !15727, file: !15586, line: 669, column: 11)
!15732 = !DILocation(line: 669, column: 11, scope: !15731)
!15733 = !DILocation(line: 669, column: 11, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15731, file: !15586, line: 669, column: 11)
!15735 = !DILocation(line: 670, column: 11, scope: !15716)
!15736 = !DILocation(line: 676, column: 7, scope: !15673)
!15737 = !DILocation(line: 678, column: 20, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15673, file: !15586, line: 677, column: 9)
!15739 = !DILocation(line: 678, column: 19, scope: !15738)
!15740 = !DILocation(line: 678, column: 11, scope: !15738)
!15741 = !DILocation(line: 685, column: 22, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15738, file: !15586, line: 679, column: 13)
!15743 = !DILocation(line: 685, column: 21, scope: !15742)
!15744 = !DILocation(line: 685, column: 19, scope: !15742)
!15745 = !DILocation(line: 686, column: 15, scope: !15742)
!15746 = distinct !{!15746, !15736, !15747}
!15747 = !DILocation(line: 700, column: 9, scope: !15673)
!15748 = !DILocation(line: 690, column: 26, scope: !15742)
!15749 = !DILocation(line: 691, column: 15, scope: !15742)
!15750 = !DILocation(line: 693, column: 27, scope: !15742)
!15751 = !DILocation(line: 694, column: 15, scope: !15742)
!15752 = !DILocation(line: 697, column: 15, scope: !15742)
!15753 = !DILocation(line: 699, column: 11, scope: !15738)
!15754 = !DILocation(line: 702, column: 11, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15673, file: !15586, line: 702, column: 11)
!15756 = !DILocation(line: 702, column: 11, scope: !15673)
!15757 = !DILocation(line: 704, column: 17, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15755, file: !15586, line: 703, column: 9)
!15759 = !DILocation(line: 705, column: 11, scope: !15758)
!15760 = !DILocation(line: 707, column: 19, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !15586, line: 707, column: 19)
!15762 = distinct !DILexicalBlock(scope: !15758, file: !15586, line: 706, column: 13)
!15763 = !DILocation(line: 707, column: 25, scope: !15761)
!15764 = !DILocation(line: 708, column: 19, scope: !15761)
!15765 = !DILocation(line: 708, column: 23, scope: !15761)
!15766 = !DILocation(line: 708, column: 29, scope: !15761)
!15767 = !DILocation(line: 708, column: 45, scope: !15761)
!15768 = !DILocation(line: 708, column: 49, scope: !15761)
!15769 = !DILocation(line: 708, column: 48, scope: !15761)
!15770 = !DILocation(line: 708, column: 51, scope: !15761)
!15771 = !DILocation(line: 708, column: 61, scope: !15761)
!15772 = !DILocation(line: 707, column: 19, scope: !15762)
!15773 = !DILocation(line: 710, column: 23, scope: !15761)
!15774 = !DILocation(line: 710, column: 17, scope: !15761)
!15775 = !DILocation(line: 713, column: 25, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15761, file: !15586, line: 712, column: 17)
!15777 = !DILocation(line: 714, column: 29, scope: !15776)
!15778 = !DILocation(line: 714, column: 28, scope: !15776)
!15779 = !DILocation(line: 714, column: 31, scope: !15776)
!15780 = !DILocation(line: 714, column: 25, scope: !15776)
!15781 = !DILocation(line: 716, column: 15, scope: !15762)
!15782 = !DILocation(line: 717, column: 13, scope: !15762)
!15783 = !DILocation(line: 718, column: 18, scope: !15758)
!15784 = distinct !{!15784, !15759, !15785}
!15785 = !DILocation(line: 718, column: 30, scope: !15758)
!15786 = !DILocation(line: 719, column: 9, scope: !15758)
!15787 = !DILocation(line: 722, column: 16, scope: !15673)
!15788 = !DILocation(line: 722, column: 15, scope: !15673)
!15789 = !DILocation(line: 722, column: 7, scope: !15673)
!15790 = !DILocation(line: 726, column: 24, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15673, file: !15586, line: 723, column: 9)
!15792 = !DILocation(line: 726, column: 22, scope: !15791)
!15793 = !DILocation(line: 726, column: 20, scope: !15791)
!15794 = !DILocation(line: 727, column: 11, scope: !15791)
!15795 = !DILocation(line: 730, column: 20, scope: !15791)
!15796 = !DILocation(line: 731, column: 11, scope: !15791)
!15797 = !DILocation(line: 735, column: 22, scope: !15673)
!15798 = !DILocation(line: 735, column: 21, scope: !15673)
!15799 = !DILocation(line: 735, column: 19, scope: !15673)
!15800 = !DILocation(line: 736, column: 15, scope: !15673)
!15801 = !DILocation(line: 736, column: 7, scope: !15673)
!15802 = !DILocation(line: 782, column: 15, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 782, column: 15)
!15804 = distinct !DILexicalBlock(scope: !15673, file: !15586, line: 737, column: 9)
!15805 = !DILocation(line: 782, column: 24, scope: !15803)
!15806 = !DILocation(line: 782, column: 15, scope: !15804)
!15807 = !DILocation(line: 783, column: 13, scope: !15803)
!15808 = !DILocation(line: 784, column: 11, scope: !15804)
!15809 = !DILocalVariable(name: "_n", scope: !15810, file: !15586, line: 784, type: !149)
!15810 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 784, column: 11)
!15811 = !DILocation(line: 784, column: 11, scope: !15810)
!15812 = !DILocalVariable(name: "_w", scope: !15810, file: !15586, line: 784, type: !149)
!15813 = !DILocalVariable(name: "_incr", scope: !15810, file: !15586, line: 784, type: !149)
!15814 = !DILocation(line: 784, column: 11, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15810, file: !15586, line: 784, column: 11)
!15816 = !DILocation(line: 784, column: 11, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15810, file: !15586, line: 784, column: 11)
!15818 = !DILocation(line: 784, column: 11, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15820, file: !15586, line: 784, column: 11)
!15820 = distinct !DILexicalBlock(scope: !15817, file: !15586, line: 784, column: 11)
!15821 = !DILocation(line: 784, column: 11, scope: !15820)
!15822 = !DILocalVariable(name: "_delta", scope: !15823, file: !15586, line: 784, type: !149)
!15823 = distinct !DILexicalBlock(scope: !15819, file: !15586, line: 784, column: 11)
!15824 = !DILocation(line: 784, column: 11, scope: !15823)
!15825 = !DILocation(line: 784, column: 11, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !15823, file: !15586, line: 784, column: 11)
!15827 = !DILocation(line: 785, column: 11, scope: !15804)
!15828 = !DILocation(line: 788, column: 15, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 788, column: 15)
!15830 = !DILocation(line: 788, column: 24, scope: !15829)
!15831 = !DILocation(line: 788, column: 15, scope: !15804)
!15832 = !DILocation(line: 789, column: 13, scope: !15829)
!15833 = !DILocation(line: 790, column: 15, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 790, column: 15)
!15835 = !DILocation(line: 790, column: 15, scope: !15804)
!15836 = !DILocation(line: 792, column: 26, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15834, file: !15586, line: 791, column: 13)
!15838 = !DILocation(line: 793, column: 26, scope: !15837)
!15839 = !DILocation(line: 794, column: 13, scope: !15837)
!15840 = !DILocation(line: 799, column: 11, scope: !15804)
!15841 = !DILocation(line: 803, column: 15, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 803, column: 15)
!15843 = !DILocation(line: 803, column: 24, scope: !15842)
!15844 = !DILocation(line: 803, column: 15, scope: !15804)
!15845 = !DILocation(line: 804, column: 13, scope: !15842)
!15846 = !DILocation(line: 805, column: 15, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 805, column: 15)
!15848 = !DILocation(line: 805, column: 15, scope: !15804)
!15849 = !DILocation(line: 807, column: 26, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15847, file: !15586, line: 806, column: 13)
!15851 = !DILocation(line: 808, column: 26, scope: !15850)
!15852 = !DILocation(line: 809, column: 13, scope: !15850)
!15853 = !DILocation(line: 814, column: 11, scope: !15804)
!15854 = !DILocation(line: 819, column: 15, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 819, column: 15)
!15856 = !DILocation(line: 819, column: 15, scope: !15804)
!15857 = !DILocation(line: 821, column: 26, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15855, file: !15586, line: 820, column: 13)
!15859 = !DILocation(line: 822, column: 26, scope: !15858)
!15860 = !DILocation(line: 823, column: 13, scope: !15858)
!15861 = !DILocation(line: 824, column: 15, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 824, column: 15)
!15863 = !DILocation(line: 824, column: 24, scope: !15862)
!15864 = !DILocation(line: 824, column: 15, scope: !15804)
!15865 = !DILocation(line: 825, column: 13, scope: !15862)
!15866 = !DILocation(line: 833, column: 11, scope: !15804)
!15867 = !DILocation(line: 837, column: 15, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 837, column: 15)
!15869 = !DILocation(line: 837, column: 24, scope: !15868)
!15870 = !DILocation(line: 837, column: 15, scope: !15804)
!15871 = !DILocation(line: 838, column: 13, scope: !15868)
!15872 = !DILocation(line: 839, column: 15, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 839, column: 15)
!15874 = !DILocation(line: 839, column: 15, scope: !15804)
!15875 = !DILocation(line: 841, column: 26, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15873, file: !15586, line: 840, column: 13)
!15877 = !DILocation(line: 842, column: 26, scope: !15876)
!15878 = !DILocation(line: 843, column: 13, scope: !15876)
!15879 = !DILocation(line: 851, column: 11, scope: !15804)
!15880 = !DILocation(line: 855, column: 15, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 855, column: 15)
!15882 = !DILocation(line: 855, column: 24, scope: !15881)
!15883 = !DILocation(line: 855, column: 15, scope: !15804)
!15884 = !DILocation(line: 856, column: 13, scope: !15881)
!15885 = !DILocation(line: 865, column: 11, scope: !15804)
!15886 = !DILabel(scope: !15804, name: "subformat", file: !15586, line: 868)
!15887 = !DILocation(line: 868, column: 9, scope: !15804)
!15888 = !DILocation(line: 869, column: 20, scope: !15804)
!15889 = !DILocation(line: 869, column: 11, scope: !15804)
!15890 = !DILabel(scope: !15804, name: "subformat_width", file: !15586, line: 870)
!15891 = !DILocation(line: 870, column: 9, scope: !15804)
!15892 = !DILocalVariable(name: "len", scope: !15893, file: !15586, line: 872, type: !149)
!15893 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 871, column: 11)
!15894 = !DILocation(line: 872, column: 20, scope: !15893)
!15895 = !DILocation(line: 873, column: 47, scope: !15893)
!15896 = !DILocation(line: 873, column: 55, scope: !15893)
!15897 = !DILocation(line: 873, column: 59, scope: !15893)
!15898 = !DILocation(line: 874, column: 47, scope: !15893)
!15899 = !DILocation(line: 874, column: 52, scope: !15893)
!15900 = !DILocation(line: 874, column: 62, scope: !15893)
!15901 = !DILocation(line: 875, column: 47, scope: !15893)
!15902 = !DILocation(line: 872, column: 26, scope: !15893)
!15903 = !DILocation(line: 876, column: 13, scope: !15893)
!15904 = !DILocalVariable(name: "_n", scope: !15905, file: !15586, line: 876, type: !149)
!15905 = distinct !DILexicalBlock(scope: !15893, file: !15586, line: 876, column: 13)
!15906 = !DILocation(line: 876, column: 13, scope: !15905)
!15907 = !DILocalVariable(name: "_w", scope: !15905, file: !15586, line: 876, type: !149)
!15908 = !DILocalVariable(name: "_incr", scope: !15905, file: !15586, line: 876, type: !149)
!15909 = !DILocation(line: 876, column: 13, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15905, file: !15586, line: 876, column: 13)
!15911 = !DILocation(line: 876, column: 13, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15905, file: !15586, line: 876, column: 13)
!15913 = !DILocation(line: 876, column: 13, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !15586, line: 876, column: 13)
!15915 = distinct !DILexicalBlock(scope: !15912, file: !15586, line: 876, column: 13)
!15916 = !DILocation(line: 876, column: 13, scope: !15915)
!15917 = !DILocalVariable(name: "_delta", scope: !15918, file: !15586, line: 876, type: !149)
!15918 = distinct !DILexicalBlock(scope: !15914, file: !15586, line: 876, column: 13)
!15919 = !DILocation(line: 876, column: 13, scope: !15918)
!15920 = !DILocation(line: 876, column: 13, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15918, file: !15586, line: 876, column: 13)
!15922 = !DILocation(line: 882, column: 11, scope: !15804)
!15923 = !DILabel(scope: !15804, name: "underlying_strftime", file: !15586, line: 885)
!15924 = !DILocation(line: 885, column: 9, scope: !15804)
!15925 = !DILocalVariable(name: "ufmt", scope: !15926, file: !15586, line: 889, type: !1946)
!15926 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 886, column: 11)
!15927 = !DILocation(line: 889, column: 18, scope: !15926)
!15928 = !DILocalVariable(name: "u", scope: !15926, file: !15586, line: 890, type: !143)
!15929 = !DILocation(line: 890, column: 19, scope: !15926)
!15930 = !DILocation(line: 890, column: 23, scope: !15926)
!15931 = !DILocalVariable(name: "ubuf", scope: !15926, file: !15586, line: 891, type: !1947)
!15932 = !DILocation(line: 891, column: 18, scope: !15926)
!15933 = !DILocalVariable(name: "len", scope: !15926, file: !15586, line: 892, type: !149)
!15934 = !DILocation(line: 892, column: 20, scope: !15926)
!15935 = !DILocation(line: 903, column: 15, scope: !15926)
!15936 = !DILocation(line: 903, column: 18, scope: !15926)
!15937 = !DILocation(line: 904, column: 15, scope: !15926)
!15938 = !DILocation(line: 904, column: 18, scope: !15926)
!15939 = !DILocation(line: 905, column: 17, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15926, file: !15586, line: 905, column: 17)
!15941 = !DILocation(line: 905, column: 26, scope: !15940)
!15942 = !DILocation(line: 905, column: 17, scope: !15926)
!15943 = !DILocation(line: 906, column: 22, scope: !15940)
!15944 = !DILocation(line: 906, column: 17, scope: !15940)
!15945 = !DILocation(line: 906, column: 20, scope: !15940)
!15946 = !DILocation(line: 906, column: 15, scope: !15940)
!15947 = !DILocation(line: 907, column: 20, scope: !15926)
!15948 = !DILocation(line: 907, column: 15, scope: !15926)
!15949 = !DILocation(line: 907, column: 18, scope: !15926)
!15950 = !DILocation(line: 908, column: 14, scope: !15926)
!15951 = !DILocation(line: 908, column: 16, scope: !15926)
!15952 = !DILocation(line: 909, column: 29, scope: !15926)
!15953 = !DILocation(line: 909, column: 48, scope: !15926)
!15954 = !DILocation(line: 909, column: 54, scope: !15926)
!15955 = !DILocation(line: 909, column: 19, scope: !15926)
!15956 = !DILocation(line: 909, column: 17, scope: !15926)
!15957 = !DILocation(line: 910, column: 17, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15926, file: !15586, line: 910, column: 17)
!15959 = !DILocation(line: 910, column: 21, scope: !15958)
!15960 = !DILocation(line: 910, column: 17, scope: !15926)
!15961 = !DILocation(line: 911, column: 15, scope: !15958)
!15962 = !DILocalVariable(name: "_n", scope: !15963, file: !15586, line: 911, type: !149)
!15963 = distinct !DILexicalBlock(scope: !15958, file: !15586, line: 911, column: 15)
!15964 = !DILocation(line: 911, column: 15, scope: !15963)
!15965 = !DILocalVariable(name: "_w", scope: !15963, file: !15586, line: 911, type: !149)
!15966 = !DILocalVariable(name: "_incr", scope: !15963, file: !15586, line: 911, type: !149)
!15967 = !DILocation(line: 911, column: 15, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15963, file: !15586, line: 911, column: 15)
!15969 = !DILocation(line: 911, column: 15, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15963, file: !15586, line: 911, column: 15)
!15971 = !DILocation(line: 911, column: 15, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15973, file: !15586, line: 911, column: 15)
!15973 = distinct !DILexicalBlock(scope: !15970, file: !15586, line: 911, column: 15)
!15974 = !DILocation(line: 911, column: 15, scope: !15973)
!15975 = !DILocalVariable(name: "_delta", scope: !15976, file: !15586, line: 911, type: !149)
!15976 = distinct !DILexicalBlock(scope: !15972, file: !15586, line: 911, column: 15)
!15977 = !DILocation(line: 911, column: 15, scope: !15976)
!15978 = !DILocation(line: 911, column: 15, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15976, file: !15586, line: 911, column: 15)
!15980 = !DILocation(line: 911, column: 15, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15973, file: !15586, line: 911, column: 15)
!15982 = !DILocation(line: 911, column: 15, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15981, file: !15586, line: 911, column: 15)
!15984 = !DILocation(line: 913, column: 11, scope: !15804)
!15985 = !DILocation(line: 917, column: 15, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 917, column: 15)
!15987 = !DILocation(line: 917, column: 24, scope: !15986)
!15988 = !DILocation(line: 917, column: 15, scope: !15804)
!15989 = !DILocation(line: 933, column: 15, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15986, file: !15586, line: 918, column: 13)
!15991 = !DILocalVariable(name: "century", scope: !15992, file: !15586, line: 938, type: !27)
!15992 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 937, column: 11)
!15993 = !DILocation(line: 938, column: 17, scope: !15992)
!15994 = !DILocation(line: 938, column: 27, scope: !15992)
!15995 = !DILocation(line: 938, column: 31, scope: !15992)
!15996 = !{!6837, !2437, i64 20}
!15997 = !DILocation(line: 938, column: 39, scope: !15992)
!15998 = !DILocation(line: 938, column: 45, scope: !15992)
!15999 = !DILocation(line: 939, column: 24, scope: !15992)
!16000 = !DILocation(line: 939, column: 28, scope: !15992)
!16001 = !DILocation(line: 939, column: 36, scope: !15992)
!16002 = !DILocation(line: 939, column: 42, scope: !15992)
!16003 = !DILocation(line: 939, column: 46, scope: !15992)
!16004 = !DILocation(line: 939, column: 53, scope: !15992)
!16005 = !DILocation(line: 939, column: 51, scope: !15992)
!16006 = !DILocation(line: 0, scope: !15992)
!16007 = !DILocation(line: 939, column: 21, scope: !15992)
!16008 = !DILocation(line: 940, column: 13, scope: !15992)
!16009 = !DILocation(line: 940, column: 13, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15992, file: !15586, line: 940, column: 13)
!16011 = !DILocation(line: 941, column: 11, scope: !15992)
!16012 = !DILocation(line: 944, column: 15, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 944, column: 15)
!16014 = !DILocation(line: 944, column: 24, scope: !16013)
!16015 = !DILocation(line: 944, column: 15, scope: !15804)
!16016 = !DILocation(line: 945, column: 13, scope: !16013)
!16017 = !DILocation(line: 954, column: 11, scope: !15804)
!16018 = !DILocation(line: 957, column: 15, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 957, column: 15)
!16020 = !DILocation(line: 957, column: 24, scope: !16019)
!16021 = !DILocation(line: 957, column: 15, scope: !15804)
!16022 = !DILocation(line: 958, column: 13, scope: !16019)
!16023 = !DILocation(line: 959, column: 18, scope: !15804)
!16024 = !DILocation(line: 960, column: 11, scope: !15804)
!16025 = !DILocation(line: 963, column: 15, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 963, column: 15)
!16027 = !DILocation(line: 963, column: 24, scope: !16026)
!16028 = !DILocation(line: 963, column: 15, scope: !15804)
!16029 = !DILocation(line: 964, column: 13, scope: !16026)
!16030 = !DILocation(line: 966, column: 11, scope: !15804)
!16031 = !DILocation(line: 966, column: 11, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 966, column: 11)
!16033 = !{!6837, !2437, i64 12}
!16034 = !DILocation(line: 969, column: 15, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 969, column: 15)
!16036 = !DILocation(line: 969, column: 24, scope: !16035)
!16037 = !DILocation(line: 969, column: 15, scope: !15804)
!16038 = !DILocation(line: 970, column: 13, scope: !16035)
!16039 = !DILocation(line: 972, column: 11, scope: !15804)
!16040 = !DILocation(line: 972, column: 11, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 972, column: 11)
!16042 = !DILabel(scope: !15804, name: "do_tz_offset", file: !15586, line: 977)
!16043 = !DILocation(line: 977, column: 9, scope: !15804)
!16044 = !DILocation(line: 978, column: 32, scope: !15804)
!16045 = !DILocation(line: 979, column: 11, scope: !15804)
!16046 = !DILabel(scope: !15804, name: "do_yearish", file: !15586, line: 981)
!16047 = !DILocation(line: 981, column: 9, scope: !15804)
!16048 = !DILocation(line: 982, column: 15, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 982, column: 15)
!16050 = !DILocation(line: 982, column: 19, scope: !16049)
!16051 = !DILocation(line: 982, column: 15, scope: !15804)
!16052 = !DILocation(line: 983, column: 19, scope: !16049)
!16053 = !DILocation(line: 983, column: 17, scope: !16049)
!16054 = !DILocation(line: 983, column: 13, scope: !16049)
!16055 = !DILocation(line: 985, column: 16, scope: !15804)
!16056 = !DILocation(line: 985, column: 20, scope: !15804)
!16057 = !DILocation(line: 986, column: 16, scope: !15804)
!16058 = !DILocation(line: 986, column: 21, scope: !15804)
!16059 = !DILocation(line: 986, column: 28, scope: !15804)
!16060 = !DILocation(line: 986, column: 48, scope: !15804)
!16061 = !DILocation(line: 986, column: 46, scope: !15804)
!16062 = !DILocation(line: 987, column: 20, scope: !15804)
!16063 = !DILocation(line: 987, column: 23, scope: !15804)
!16064 = !DILocation(line: 987, column: 32, scope: !15804)
!16065 = !DILocation(line: 987, column: 30, scope: !15804)
!16066 = !DILocation(line: 0, scope: !15804)
!16067 = !DILocation(line: 985, column: 13, scope: !15804)
!16068 = !DILocation(line: 988, column: 11, scope: !15804)
!16069 = !DILabel(scope: !15804, name: "do_number_spacepad", file: !15586, line: 990)
!16070 = !DILocation(line: 990, column: 9, scope: !15804)
!16071 = !DILocation(line: 991, column: 15, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 991, column: 15)
!16073 = !DILocation(line: 991, column: 19, scope: !16072)
!16074 = !DILocation(line: 991, column: 15, scope: !15804)
!16075 = !DILocation(line: 992, column: 17, scope: !16072)
!16076 = !DILocation(line: 992, column: 13, scope: !16072)
!16077 = !DILocation(line: 991, column: 22, scope: !16072)
!16078 = !DILabel(scope: !15804, name: "do_number", file: !15586, line: 994)
!16079 = !DILocation(line: 994, column: 9, scope: !15804)
!16080 = !DILocation(line: 996, column: 29, scope: !15804)
!16081 = !DILocation(line: 996, column: 42, scope: !15804)
!16082 = !DILocation(line: 996, column: 27, scope: !15804)
!16083 = !DILocation(line: 997, column: 28, scope: !15804)
!16084 = !DILocation(line: 997, column: 26, scope: !15804)
!16085 = !DILocation(line: 997, column: 11, scope: !15804)
!16086 = !DILabel(scope: !15804, name: "do_signed_number", file: !15586, line: 999)
!16087 = !DILocation(line: 999, column: 9, scope: !15804)
!16088 = !DILocation(line: 1000, column: 32, scope: !15804)
!16089 = !DILocation(line: 1000, column: 11, scope: !15804)
!16090 = !DILabel(scope: !15804, name: "do_maybe_signed_number", file: !15586, line: 1002)
!16091 = !DILocation(line: 1002, column: 9, scope: !15804)
!16092 = !DILocation(line: 1003, column: 25, scope: !15804)
!16093 = !DILocation(line: 1003, column: 11, scope: !15804)
!16094 = !DILabel(scope: !15804, name: "do_number_body", file: !15586, line: 1005)
!16095 = !DILocation(line: 1005, column: 9, scope: !15804)
!16096 = !DILocation(line: 1011, column: 15, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1011, column: 15)
!16098 = !DILocation(line: 1011, column: 24, scope: !16097)
!16099 = !DILocation(line: 1011, column: 35, scope: !16097)
!16100 = !DILocation(line: 1011, column: 39, scope: !16097)
!16101 = !DILocation(line: 1011, column: 15, scope: !15804)
!16102 = !DILocation(line: 1029, column: 15, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16097, file: !15586, line: 1012, column: 13)
!16104 = !DILocation(line: 1033, column: 18, scope: !15804)
!16105 = !DILocation(line: 1033, column: 22, scope: !15804)
!16106 = !DILocation(line: 1033, column: 16, scope: !15804)
!16107 = !DILocation(line: 1035, column: 15, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1035, column: 15)
!16109 = !DILocation(line: 1035, column: 15, scope: !15804)
!16110 = !DILocation(line: 1036, column: 32, scope: !16108)
!16111 = !DILocation(line: 1036, column: 30, scope: !16108)
!16112 = !DILocation(line: 1036, column: 28, scope: !16108)
!16113 = !DILocation(line: 1036, column: 13, scope: !16108)
!16114 = !DILocation(line: 1038, column: 11, scope: !15804)
!16115 = !DILocation(line: 1040, column: 19, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !15586, line: 1040, column: 19)
!16117 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1039, column: 13)
!16118 = !DILocation(line: 1040, column: 33, scope: !16116)
!16119 = !DILocation(line: 1040, column: 19, scope: !16117)
!16120 = !DILocation(line: 1041, column: 18, scope: !16116)
!16121 = !DILocation(line: 1041, column: 25, scope: !16116)
!16122 = !DILocation(line: 1041, column: 17, scope: !16116)
!16123 = !DILocation(line: 1042, column: 29, scope: !16117)
!16124 = !DILocation(line: 1043, column: 25, scope: !16117)
!16125 = !DILocation(line: 1043, column: 40, scope: !16117)
!16126 = !DILocation(line: 1043, column: 45, scope: !16117)
!16127 = !DILocation(line: 1043, column: 16, scope: !16117)
!16128 = !DILocation(line: 1043, column: 23, scope: !16117)
!16129 = !DILocation(line: 1044, column: 30, scope: !16117)
!16130 = !DILocation(line: 1045, column: 13, scope: !16117)
!16131 = !DILocation(line: 1046, column: 18, scope: !15804)
!16132 = !DILocation(line: 1046, column: 33, scope: !15804)
!16133 = !DILocation(line: 1046, column: 38, scope: !15804)
!16134 = !DILocation(line: 1046, column: 41, scope: !15804)
!16135 = !DILocation(line: 1046, column: 55, scope: !15804)
!16136 = distinct !{!16136, !16114, !16137}
!16137 = !DILocation(line: 1046, column: 59, scope: !15804)
!16138 = !DILabel(scope: !15804, name: "do_number_sign_and_padding", file: !15586, line: 1048)
!16139 = !DILocation(line: 1048, column: 9, scope: !15804)
!16140 = !DILocation(line: 1049, column: 15, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1049, column: 15)
!16142 = !DILocation(line: 1049, column: 24, scope: !16141)
!16143 = !DILocation(line: 1049, column: 22, scope: !16141)
!16144 = !DILocation(line: 1049, column: 15, scope: !15804)
!16145 = !DILocation(line: 1050, column: 22, scope: !16141)
!16146 = !DILocation(line: 1050, column: 20, scope: !16141)
!16147 = !DILocation(line: 1050, column: 13, scope: !16141)
!16148 = !DILocation(line: 1052, column: 24, scope: !15804)
!16149 = !DILocation(line: 1053, column: 26, scope: !15804)
!16150 = !DILocation(line: 1052, column: 23, scope: !15804)
!16151 = !DILocation(line: 1052, column: 21, scope: !15804)
!16152 = !DILocation(line: 1056, column: 15, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1056, column: 15)
!16154 = !DILocation(line: 1056, column: 19, scope: !16153)
!16155 = !DILocation(line: 1056, column: 15, scope: !15804)
!16156 = !DILocation(line: 1058, column: 19, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16158, file: !15586, line: 1058, column: 19)
!16158 = distinct !DILexicalBlock(scope: !16153, file: !15586, line: 1057, column: 13)
!16159 = !DILocation(line: 1058, column: 19, scope: !16158)
!16160 = !DILocation(line: 1059, column: 17, scope: !16157)
!16161 = !DILocalVariable(name: "_n", scope: !16162, file: !15586, line: 1059, type: !149)
!16162 = distinct !DILexicalBlock(scope: !16157, file: !15586, line: 1059, column: 17)
!16163 = !DILocation(line: 1059, column: 17, scope: !16162)
!16164 = !DILocalVariable(name: "_w", scope: !16162, file: !15586, line: 1059, type: !149)
!16165 = !DILocalVariable(name: "_incr", scope: !16162, file: !15586, line: 1059, type: !149)
!16166 = !DILocation(line: 1059, column: 17, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16162, file: !15586, line: 1059, column: 17)
!16168 = !DILocation(line: 1059, column: 17, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16162, file: !15586, line: 1059, column: 17)
!16170 = !DILocation(line: 1059, column: 17, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16172, file: !15586, line: 1059, column: 17)
!16172 = distinct !DILexicalBlock(scope: !16169, file: !15586, line: 1059, column: 17)
!16173 = !DILocation(line: 1059, column: 17, scope: !16172)
!16174 = !DILocalVariable(name: "_delta", scope: !16175, file: !15586, line: 1059, type: !149)
!16175 = distinct !DILexicalBlock(scope: !16171, file: !15586, line: 1059, column: 17)
!16176 = !DILocation(line: 1059, column: 17, scope: !16175)
!16177 = !DILocation(line: 1059, column: 17, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16175, file: !15586, line: 1059, column: 17)
!16179 = !DILocation(line: 1060, column: 13, scope: !16158)
!16180 = !DILocalVariable(name: "padding", scope: !16181, file: !15586, line: 1063, type: !27)
!16181 = distinct !DILexicalBlock(scope: !16153, file: !15586, line: 1062, column: 13)
!16182 = !DILocation(line: 1063, column: 19, scope: !16181)
!16183 = !DILocation(line: 1063, column: 29, scope: !16181)
!16184 = !DILocation(line: 1063, column: 39, scope: !16181)
!16185 = !DILocation(line: 1063, column: 43, scope: !16181)
!16186 = !DILocation(line: 1064, column: 41, scope: !16181)
!16187 = !DILocation(line: 1064, column: 39, scope: !16181)
!16188 = !DILocation(line: 1063, column: 36, scope: !16181)
!16189 = !DILocation(line: 1064, column: 51, scope: !16181)
!16190 = !DILocation(line: 1064, column: 50, scope: !16181)
!16191 = !DILocation(line: 1064, column: 49, scope: !16181)
!16192 = !DILocation(line: 1064, column: 47, scope: !16181)
!16193 = !DILocation(line: 1066, column: 19, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16181, file: !15586, line: 1066, column: 19)
!16195 = !DILocation(line: 1066, column: 27, scope: !16194)
!16196 = !DILocation(line: 1066, column: 19, scope: !16181)
!16197 = !DILocation(line: 1068, column: 23, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16199, file: !15586, line: 1068, column: 23)
!16199 = distinct !DILexicalBlock(scope: !16194, file: !15586, line: 1067, column: 17)
!16200 = !DILocation(line: 1068, column: 27, scope: !16198)
!16201 = !DILocation(line: 1068, column: 23, scope: !16199)
!16202 = !DILocation(line: 1070, column: 36, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16204, file: !15586, line: 1070, column: 27)
!16204 = distinct !DILexicalBlock(scope: !16198, file: !15586, line: 1069, column: 21)
!16205 = !DILocation(line: 1070, column: 27, scope: !16203)
!16206 = !DILocation(line: 1070, column: 47, scope: !16203)
!16207 = !DILocation(line: 1070, column: 57, scope: !16203)
!16208 = !DILocation(line: 1070, column: 55, scope: !16203)
!16209 = !DILocation(line: 1070, column: 44, scope: !16203)
!16210 = !DILocation(line: 1070, column: 27, scope: !16204)
!16211 = !DILocation(line: 1071, column: 25, scope: !16203)
!16212 = !DILocation(line: 1073, column: 27, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16204, file: !15586, line: 1073, column: 27)
!16214 = !DILocation(line: 1073, column: 27, scope: !16204)
!16215 = !DILocation(line: 1074, column: 25, scope: !16213)
!16216 = !DILocation(line: 1075, column: 28, scope: !16204)
!16217 = !DILocation(line: 1075, column: 25, scope: !16204)
!16218 = !DILocation(line: 1076, column: 31, scope: !16204)
!16219 = !DILocation(line: 1076, column: 39, scope: !16204)
!16220 = !DILocation(line: 1076, column: 37, scope: !16204)
!16221 = !DILocation(line: 1076, column: 49, scope: !16204)
!16222 = !DILocation(line: 1076, column: 57, scope: !16204)
!16223 = !DILocation(line: 1076, column: 55, scope: !16204)
!16224 = !DILocation(line: 1076, column: 29, scope: !16204)
!16225 = !DILocation(line: 1077, column: 27, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16204, file: !15586, line: 1077, column: 27)
!16227 = !DILocation(line: 1077, column: 27, scope: !16204)
!16228 = !DILocation(line: 1078, column: 25, scope: !16226)
!16229 = !DILocalVariable(name: "_n", scope: !16230, file: !15586, line: 1078, type: !149)
!16230 = distinct !DILexicalBlock(scope: !16226, file: !15586, line: 1078, column: 25)
!16231 = !DILocation(line: 1078, column: 25, scope: !16230)
!16232 = !DILocalVariable(name: "_w", scope: !16230, file: !15586, line: 1078, type: !149)
!16233 = !DILocalVariable(name: "_incr", scope: !16230, file: !15586, line: 1078, type: !149)
!16234 = !DILocation(line: 1078, column: 25, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16230, file: !15586, line: 1078, column: 25)
!16236 = !DILocation(line: 1078, column: 25, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16230, file: !15586, line: 1078, column: 25)
!16238 = !DILocation(line: 1078, column: 25, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16240, file: !15586, line: 1078, column: 25)
!16240 = distinct !DILexicalBlock(scope: !16237, file: !15586, line: 1078, column: 25)
!16241 = !DILocation(line: 1078, column: 25, scope: !16240)
!16242 = !DILocalVariable(name: "_delta", scope: !16243, file: !15586, line: 1078, type: !149)
!16243 = distinct !DILexicalBlock(scope: !16239, file: !15586, line: 1078, column: 25)
!16244 = !DILocation(line: 1078, column: 25, scope: !16243)
!16245 = !DILocation(line: 1078, column: 25, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16243, file: !15586, line: 1078, column: 25)
!16247 = !DILocation(line: 1079, column: 21, scope: !16204)
!16248 = !DILocation(line: 1082, column: 36, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16250, file: !15586, line: 1082, column: 27)
!16250 = distinct !DILexicalBlock(scope: !16198, file: !15586, line: 1081, column: 21)
!16251 = !DILocation(line: 1082, column: 27, scope: !16249)
!16252 = !DILocation(line: 1082, column: 46, scope: !16249)
!16253 = !DILocation(line: 1082, column: 56, scope: !16249)
!16254 = !DILocation(line: 1082, column: 54, scope: !16249)
!16255 = !DILocation(line: 1082, column: 43, scope: !16249)
!16256 = !DILocation(line: 1082, column: 27, scope: !16250)
!16257 = !DILocation(line: 1083, column: 25, scope: !16249)
!16258 = !DILocation(line: 1085, column: 27, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16250, file: !15586, line: 1085, column: 27)
!16260 = !DILocation(line: 1085, column: 27, scope: !16250)
!16261 = !DILocation(line: 1086, column: 25, scope: !16259)
!16262 = !DILocalVariable(name: "_n", scope: !16263, file: !15586, line: 1086, type: !149)
!16263 = distinct !DILexicalBlock(scope: !16259, file: !15586, line: 1086, column: 25)
!16264 = !DILocation(line: 1086, column: 25, scope: !16263)
!16265 = !DILocalVariable(name: "_w", scope: !16263, file: !15586, line: 1086, type: !149)
!16266 = !DILocalVariable(name: "_incr", scope: !16263, file: !15586, line: 1086, type: !149)
!16267 = !DILocation(line: 1086, column: 25, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16263, file: !15586, line: 1086, column: 25)
!16269 = !DILocation(line: 1086, column: 25, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16263, file: !15586, line: 1086, column: 25)
!16271 = !DILocation(line: 1086, column: 25, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16273, file: !15586, line: 1086, column: 25)
!16273 = distinct !DILexicalBlock(scope: !16270, file: !15586, line: 1086, column: 25)
!16274 = !DILocation(line: 1086, column: 25, scope: !16273)
!16275 = !DILocalVariable(name: "_delta", scope: !16276, file: !15586, line: 1086, type: !149)
!16276 = distinct !DILexicalBlock(scope: !16272, file: !15586, line: 1086, column: 25)
!16277 = !DILocation(line: 1086, column: 25, scope: !16276)
!16278 = !DILocation(line: 1086, column: 25, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16276, file: !15586, line: 1086, column: 25)
!16280 = !DILocation(line: 1088, column: 27, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16250, file: !15586, line: 1088, column: 27)
!16282 = !DILocation(line: 1088, column: 27, scope: !16250)
!16283 = !DILocation(line: 1089, column: 25, scope: !16281)
!16284 = !DILocation(line: 1090, column: 28, scope: !16250)
!16285 = !DILocation(line: 1090, column: 25, scope: !16250)
!16286 = !DILocation(line: 1091, column: 29, scope: !16250)
!16287 = !DILocation(line: 1093, column: 17, scope: !16199)
!16288 = !DILocation(line: 1096, column: 23, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16290, file: !15586, line: 1096, column: 23)
!16290 = distinct !DILexicalBlock(scope: !16194, file: !15586, line: 1095, column: 17)
!16291 = !DILocation(line: 1096, column: 23, scope: !16290)
!16292 = !DILocation(line: 1097, column: 21, scope: !16289)
!16293 = !DILocalVariable(name: "_n", scope: !16294, file: !15586, line: 1097, type: !149)
!16294 = distinct !DILexicalBlock(scope: !16289, file: !15586, line: 1097, column: 21)
!16295 = !DILocation(line: 1097, column: 21, scope: !16294)
!16296 = !DILocalVariable(name: "_w", scope: !16294, file: !15586, line: 1097, type: !149)
!16297 = !DILocalVariable(name: "_incr", scope: !16294, file: !15586, line: 1097, type: !149)
!16298 = !DILocation(line: 1097, column: 21, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16294, file: !15586, line: 1097, column: 21)
!16300 = !DILocation(line: 1097, column: 21, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16294, file: !15586, line: 1097, column: 21)
!16302 = !DILocation(line: 1097, column: 21, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16304, file: !15586, line: 1097, column: 21)
!16304 = distinct !DILexicalBlock(scope: !16301, file: !15586, line: 1097, column: 21)
!16305 = !DILocation(line: 1097, column: 21, scope: !16304)
!16306 = !DILocalVariable(name: "_delta", scope: !16307, file: !15586, line: 1097, type: !149)
!16307 = distinct !DILexicalBlock(scope: !16303, file: !15586, line: 1097, column: 21)
!16308 = !DILocation(line: 1097, column: 21, scope: !16307)
!16309 = !DILocation(line: 1097, column: 21, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !15586, line: 1097, column: 21)
!16311 = !DILocation(line: 1101, column: 11, scope: !15804)
!16312 = !DILocalVariable(name: "_n", scope: !16313, file: !15586, line: 1101, type: !149)
!16313 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1101, column: 11)
!16314 = !DILocation(line: 1101, column: 11, scope: !16313)
!16315 = !DILocalVariable(name: "_w", scope: !16313, file: !15586, line: 1101, type: !149)
!16316 = !DILocalVariable(name: "_incr", scope: !16313, file: !15586, line: 1101, type: !149)
!16317 = !DILocation(line: 1101, column: 11, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16313, file: !15586, line: 1101, column: 11)
!16319 = !DILocation(line: 1101, column: 11, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16313, file: !15586, line: 1101, column: 11)
!16321 = !DILocation(line: 1101, column: 11, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16323, file: !15586, line: 1101, column: 11)
!16323 = distinct !DILexicalBlock(scope: !16320, file: !15586, line: 1101, column: 11)
!16324 = !DILocation(line: 1101, column: 11, scope: !16323)
!16325 = !DILocalVariable(name: "_delta", scope: !16326, file: !15586, line: 1101, type: !149)
!16326 = distinct !DILexicalBlock(scope: !16322, file: !15586, line: 1101, column: 11)
!16327 = !DILocation(line: 1101, column: 11, scope: !16326)
!16328 = !DILocation(line: 1101, column: 11, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16326, file: !15586, line: 1101, column: 11)
!16330 = !DILocation(line: 1101, column: 11, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16323, file: !15586, line: 1101, column: 11)
!16332 = !DILocation(line: 1101, column: 11, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16331, file: !15586, line: 1101, column: 11)
!16334 = !DILocation(line: 1102, column: 11, scope: !15804)
!16335 = !DILocation(line: 1105, column: 15, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1105, column: 15)
!16337 = !DILocation(line: 1105, column: 24, scope: !16336)
!16338 = !DILocation(line: 1105, column: 15, scope: !15804)
!16339 = !DILocation(line: 1106, column: 13, scope: !16336)
!16340 = !DILocation(line: 1107, column: 15, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1107, column: 15)
!16342 = !DILocation(line: 1107, column: 19, scope: !16341)
!16343 = !DILocation(line: 1107, column: 24, scope: !16341)
!16344 = !DILocation(line: 1107, column: 27, scope: !16341)
!16345 = !DILocation(line: 1107, column: 33, scope: !16341)
!16346 = !DILocation(line: 1107, column: 15, scope: !15804)
!16347 = !DILocation(line: 1109, column: 19, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16341, file: !15586, line: 1108, column: 13)
!16349 = !DILocation(line: 1110, column: 24, scope: !16348)
!16350 = !DILocation(line: 1111, column: 13, scope: !16348)
!16351 = !DILocation(line: 1114, column: 26, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16341, file: !15586, line: 1113, column: 13)
!16353 = !DILocation(line: 1114, column: 32, scope: !16352)
!16354 = !DILocation(line: 1114, column: 24, scope: !16352)
!16355 = !DILocation(line: 1115, column: 19, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16352, file: !15586, line: 1115, column: 19)
!16357 = !DILocation(line: 1115, column: 28, scope: !16356)
!16358 = !DILocation(line: 1115, column: 19, scope: !16352)
!16359 = !DILocation(line: 1116, column: 26, scope: !16356)
!16360 = !DILocation(line: 1116, column: 17, scope: !16356)
!16361 = !DILocation(line: 1118, column: 18, scope: !15804)
!16362 = !DILocation(line: 1119, column: 11, scope: !15804)
!16363 = !DILocation(line: 1122, column: 15, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1122, column: 15)
!16365 = !DILocation(line: 1122, column: 24, scope: !16364)
!16366 = !DILocation(line: 1122, column: 15, scope: !15804)
!16367 = !DILocation(line: 1123, column: 13, scope: !16364)
!16368 = !DILocation(line: 1125, column: 11, scope: !15804)
!16369 = !DILocation(line: 1125, column: 11, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1125, column: 11)
!16371 = !DILocation(line: 1128, column: 15, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1128, column: 15)
!16373 = !DILocation(line: 1128, column: 24, scope: !16372)
!16374 = !DILocation(line: 1128, column: 15, scope: !15804)
!16375 = !DILocation(line: 1129, column: 13, scope: !16372)
!16376 = !DILocation(line: 1131, column: 11, scope: !15804)
!16377 = !DILocation(line: 1131, column: 11, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1131, column: 11)
!16379 = !DILocation(line: 1134, column: 15, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1134, column: 15)
!16381 = !DILocation(line: 1134, column: 24, scope: !16380)
!16382 = !DILocation(line: 1134, column: 15, scope: !15804)
!16383 = !DILocation(line: 1135, column: 13, scope: !16380)
!16384 = !DILocation(line: 1137, column: 11, scope: !15804)
!16385 = !DILocation(line: 1137, column: 11, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1137, column: 11)
!16387 = !DILocation(line: 1140, column: 15, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1140, column: 15)
!16389 = !DILocation(line: 1140, column: 24, scope: !16388)
!16390 = !DILocation(line: 1140, column: 15, scope: !15804)
!16391 = !DILocation(line: 1141, column: 13, scope: !16388)
!16392 = !DILocation(line: 1143, column: 11, scope: !15804)
!16393 = !DILocation(line: 1143, column: 11, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1143, column: 11)
!16395 = !DILocation(line: 1146, column: 15, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1146, column: 15)
!16397 = !DILocation(line: 1146, column: 24, scope: !16396)
!16398 = !DILocation(line: 1146, column: 15, scope: !15804)
!16399 = !DILocation(line: 1147, column: 13, scope: !16396)
!16400 = !DILocation(line: 1149, column: 11, scope: !15804)
!16401 = !DILocation(line: 1149, column: 11, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1149, column: 11)
!16403 = !{!6837, !2437, i64 28}
!16404 = !DILocation(line: 1152, column: 15, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1152, column: 15)
!16406 = !DILocation(line: 1152, column: 24, scope: !16405)
!16407 = !DILocation(line: 1152, column: 15, scope: !15804)
!16408 = !DILocation(line: 1153, column: 13, scope: !16405)
!16409 = !DILocation(line: 1155, column: 11, scope: !15804)
!16410 = !DILocation(line: 1155, column: 11, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1155, column: 11)
!16412 = !{!6837, !2437, i64 4}
!16413 = !DILocation(line: 1158, column: 15, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1158, column: 15)
!16415 = !DILocation(line: 1158, column: 24, scope: !16414)
!16416 = !DILocation(line: 1158, column: 15, scope: !15804)
!16417 = !DILocation(line: 1159, column: 13, scope: !16414)
!16418 = !DILocation(line: 1161, column: 11, scope: !15804)
!16419 = !DILocation(line: 1161, column: 11, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1161, column: 11)
!16421 = !DILocation(line: 1165, column: 15, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1165, column: 15)
!16423 = !DILocation(line: 1165, column: 24, scope: !16422)
!16424 = !DILocation(line: 1165, column: 15, scope: !15804)
!16425 = !DILocation(line: 1166, column: 13, scope: !16422)
!16426 = !DILocation(line: 1168, column: 26, scope: !15804)
!16427 = !DILocation(line: 1168, column: 24, scope: !15804)
!16428 = !DILocation(line: 1169, column: 15, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1169, column: 15)
!16430 = !DILocation(line: 1169, column: 21, scope: !16429)
!16431 = !DILocation(line: 1169, column: 15, scope: !15804)
!16432 = !DILocation(line: 1170, column: 19, scope: !16429)
!16433 = !DILocation(line: 1170, column: 13, scope: !16429)
!16434 = !DILocalVariable(name: "j", scope: !16435, file: !15586, line: 1174, type: !27)
!16435 = distinct !DILexicalBlock(scope: !16429, file: !15586, line: 1172, column: 13)
!16436 = !DILocation(line: 1174, column: 19, scope: !16435)
!16437 = !DILocation(line: 1175, column: 24, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16435, file: !15586, line: 1175, column: 15)
!16439 = !DILocation(line: 1175, column: 22, scope: !16438)
!16440 = !DILocation(line: 1175, column: 20, scope: !16438)
!16441 = !DILocation(line: 1175, column: 31, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16438, file: !15586, line: 1175, column: 15)
!16443 = !DILocation(line: 1175, column: 33, scope: !16442)
!16444 = !DILocation(line: 1175, column: 15, scope: !16438)
!16445 = !DILocation(line: 1176, column: 30, scope: !16442)
!16446 = !DILocation(line: 1176, column: 17, scope: !16442)
!16447 = !DILocation(line: 1175, column: 39, scope: !16442)
!16448 = !DILocation(line: 1175, column: 15, scope: !16442)
!16449 = distinct !{!16449, !16444, !16450}
!16450 = !DILocation(line: 1176, column: 33, scope: !16438)
!16451 = !DILocation(line: 1179, column: 11, scope: !15804)
!16452 = !DILocation(line: 1179, column: 11, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1179, column: 11)
!16454 = !DILocation(line: 1183, column: 11, scope: !15804)
!16455 = !DILocalVariable(name: "_n", scope: !16456, file: !15586, line: 1183, type: !149)
!16456 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1183, column: 11)
!16457 = !DILocation(line: 1183, column: 11, scope: !16456)
!16458 = !DILocalVariable(name: "_w", scope: !16456, file: !15586, line: 1183, type: !149)
!16459 = !DILocalVariable(name: "_incr", scope: !16456, file: !15586, line: 1183, type: !149)
!16460 = !DILocation(line: 1183, column: 11, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16456, file: !15586, line: 1183, column: 11)
!16462 = !DILocation(line: 1183, column: 11, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16456, file: !15586, line: 1183, column: 11)
!16464 = !DILocation(line: 1183, column: 11, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16466, file: !15586, line: 1183, column: 11)
!16466 = distinct !DILexicalBlock(scope: !16463, file: !15586, line: 1183, column: 11)
!16467 = !DILocation(line: 1183, column: 11, scope: !16466)
!16468 = !DILocalVariable(name: "_delta", scope: !16469, file: !15586, line: 1183, type: !149)
!16469 = distinct !DILexicalBlock(scope: !16465, file: !15586, line: 1183, column: 11)
!16470 = !DILocation(line: 1183, column: 11, scope: !16469)
!16471 = !DILocation(line: 1183, column: 11, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16469, file: !15586, line: 1183, column: 11)
!16473 = !DILocation(line: 1184, column: 11, scope: !15804)
!16474 = !DILocation(line: 1187, column: 22, scope: !15804)
!16475 = !DILocation(line: 1189, column: 23, scope: !15804)
!16476 = !DILocation(line: 1191, column: 11, scope: !15804)
!16477 = !DILocation(line: 1193, column: 15, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1193, column: 15)
!16479 = !DILocation(line: 1193, column: 15, scope: !15804)
!16480 = !DILocation(line: 1195, column: 26, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16478, file: !15586, line: 1194, column: 13)
!16482 = !DILocation(line: 1196, column: 26, scope: !16481)
!16483 = !DILocation(line: 1197, column: 13, scope: !16481)
!16484 = !DILocation(line: 1202, column: 11, scope: !15804)
!16485 = !DILocation(line: 1206, column: 11, scope: !15804)
!16486 = !DILocation(line: 1206, column: 11, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1206, column: 11)
!16488 = !DILocation(line: 1207, column: 11, scope: !15804)
!16489 = !DILocation(line: 1210, column: 18, scope: !15804)
!16490 = !DILocation(line: 1211, column: 11, scope: !15804)
!16491 = !DILocation(line: 1221, column: 11, scope: !15804)
!16492 = !DILocation(line: 1225, column: 15, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1225, column: 15)
!16494 = !DILocation(line: 1225, column: 24, scope: !16493)
!16495 = !DILocation(line: 1225, column: 15, scope: !15804)
!16496 = !DILocation(line: 1226, column: 13, scope: !16493)
!16497 = !DILocation(line: 1228, column: 11, scope: !15804)
!16498 = !DILocation(line: 1228, column: 11, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1228, column: 11)
!16500 = !{!6837, !2437, i64 0}
!16501 = !DILocalVariable(name: "ltm", scope: !16502, file: !15586, line: 1232, type: !1920)
!16502 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1231, column: 11)
!16503 = !DILocation(line: 1232, column: 23, scope: !16502)
!16504 = !DILocalVariable(name: "t", scope: !16502, file: !15586, line: 1233, type: !162)
!16505 = !DILocation(line: 1233, column: 20, scope: !16502)
!16506 = !DILocation(line: 1235, column: 20, scope: !16502)
!16507 = !DILocation(line: 1235, column: 19, scope: !16502)
!16508 = !{i64 0, i64 4, !2436, i64 4, i64 4, !2436, i64 8, i64 4, !2436, i64 12, i64 4, !2436, i64 16, i64 4, !2436, i64 20, i64 4, !2436, i64 24, i64 4, !2436, i64 28, i64 4, !2436, i64 32, i64 4, !2436, i64 40, i64 8, !2579, i64 48, i64 8, !2442}
!16509 = !DILocation(line: 1236, column: 27, scope: !16502)
!16510 = !DILocation(line: 1236, column: 17, scope: !16502)
!16511 = !DILocation(line: 1236, column: 15, scope: !16502)
!16512 = !DILocation(line: 1241, column: 20, scope: !16502)
!16513 = !DILocation(line: 1241, column: 24, scope: !16502)
!16514 = !DILocation(line: 1241, column: 18, scope: !16502)
!16515 = !DILocation(line: 1242, column: 31, scope: !16502)
!16516 = !DILocation(line: 1242, column: 33, scope: !16502)
!16517 = !DILocation(line: 1242, column: 29, scope: !16502)
!16518 = !DILocation(line: 1244, column: 13, scope: !16502)
!16519 = !DILocalVariable(name: "d", scope: !16520, file: !15586, line: 1246, type: !27)
!16520 = distinct !DILexicalBlock(scope: !16502, file: !15586, line: 1245, column: 15)
!16521 = !DILocation(line: 1246, column: 21, scope: !16520)
!16522 = !DILocation(line: 1246, column: 25, scope: !16520)
!16523 = !DILocation(line: 1246, column: 27, scope: !16520)
!16524 = !DILocation(line: 1247, column: 19, scope: !16520)
!16525 = !DILocation(line: 1248, column: 28, scope: !16520)
!16526 = !DILocation(line: 1248, column: 47, scope: !16520)
!16527 = !DILocation(line: 1248, column: 46, scope: !16520)
!16528 = !DILocation(line: 1248, column: 51, scope: !16520)
!16529 = !DILocation(line: 1248, column: 54, scope: !16520)
!16530 = !DILocation(line: 1248, column: 27, scope: !16520)
!16531 = !DILocation(line: 1248, column: 18, scope: !16520)
!16532 = !DILocation(line: 1248, column: 25, scope: !16520)
!16533 = !DILocation(line: 1249, column: 15, scope: !16520)
!16534 = !DILocation(line: 1250, column: 20, scope: !16502)
!16535 = !DILocation(line: 1250, column: 22, scope: !16502)
!16536 = distinct !{!16536, !16518, !16537}
!16537 = !DILocation(line: 1250, column: 26, scope: !16502)
!16538 = !DILocation(line: 1252, column: 20, scope: !16502)
!16539 = !DILocation(line: 1253, column: 34, scope: !16502)
!16540 = !DILocation(line: 1254, column: 13, scope: !16502)
!16541 = !DILocation(line: 1258, column: 15, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1258, column: 15)
!16543 = !DILocation(line: 1258, column: 24, scope: !16542)
!16544 = !DILocation(line: 1258, column: 15, scope: !15804)
!16545 = !DILocation(line: 1259, column: 13, scope: !16542)
!16546 = !DILocation(line: 1268, column: 11, scope: !15804)
!16547 = !DILocation(line: 1271, column: 18, scope: !15804)
!16548 = !DILocation(line: 1272, column: 11, scope: !15804)
!16549 = !DILocation(line: 1275, column: 11, scope: !15804)
!16550 = !DILocalVariable(name: "_n", scope: !16551, file: !15586, line: 1275, type: !149)
!16551 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1275, column: 11)
!16552 = !DILocation(line: 1275, column: 11, scope: !16551)
!16553 = !DILocalVariable(name: "_w", scope: !16551, file: !15586, line: 1275, type: !149)
!16554 = !DILocalVariable(name: "_incr", scope: !16551, file: !15586, line: 1275, type: !149)
!16555 = !DILocation(line: 1275, column: 11, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16551, file: !15586, line: 1275, column: 11)
!16557 = !DILocation(line: 1275, column: 11, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16551, file: !15586, line: 1275, column: 11)
!16559 = !DILocation(line: 1275, column: 11, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16561, file: !15586, line: 1275, column: 11)
!16561 = distinct !DILexicalBlock(scope: !16558, file: !15586, line: 1275, column: 11)
!16562 = !DILocation(line: 1275, column: 11, scope: !16561)
!16563 = !DILocalVariable(name: "_delta", scope: !16564, file: !15586, line: 1275, type: !149)
!16564 = distinct !DILexicalBlock(scope: !16560, file: !15586, line: 1275, column: 11)
!16565 = !DILocation(line: 1275, column: 11, scope: !16564)
!16566 = !DILocation(line: 1275, column: 11, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16564, file: !15586, line: 1275, column: 11)
!16568 = !DILocation(line: 1276, column: 11, scope: !15804)
!16569 = !DILocation(line: 1279, column: 11, scope: !15804)
!16570 = !DILocation(line: 1279, column: 11, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1279, column: 11)
!16572 = !{!6837, !2437, i64 24}
!16573 = !DILocation(line: 1282, column: 15, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1282, column: 15)
!16575 = !DILocation(line: 1282, column: 24, scope: !16574)
!16576 = !DILocation(line: 1282, column: 15, scope: !15804)
!16577 = !DILocation(line: 1283, column: 13, scope: !16574)
!16578 = !DILocation(line: 1285, column: 11, scope: !15804)
!16579 = !DILocation(line: 1285, column: 11, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1285, column: 11)
!16581 = !DILocation(line: 1290, column: 15, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1290, column: 15)
!16583 = !DILocation(line: 1290, column: 24, scope: !16582)
!16584 = !DILocation(line: 1290, column: 15, scope: !15804)
!16585 = !DILocation(line: 1291, column: 13, scope: !16582)
!16586 = !DILocalVariable(name: "year", scope: !16587, file: !15586, line: 1297, type: !27)
!16587 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1292, column: 11)
!16588 = !DILocation(line: 1297, column: 17, scope: !16587)
!16589 = !DILocation(line: 1297, column: 25, scope: !16587)
!16590 = !DILocation(line: 1297, column: 29, scope: !16587)
!16591 = !DILocation(line: 1298, column: 28, scope: !16587)
!16592 = !DILocation(line: 1298, column: 32, scope: !16587)
!16593 = !DILocation(line: 1298, column: 40, scope: !16587)
!16594 = !DILocation(line: 1298, column: 25, scope: !16587)
!16595 = !DILocalVariable(name: "year_adjust", scope: !16587, file: !15586, line: 1301, type: !27)
!16596 = !DILocation(line: 1301, column: 17, scope: !16587)
!16597 = !DILocalVariable(name: "days", scope: !16587, file: !15586, line: 1302, type: !27)
!16598 = !DILocation(line: 1302, column: 17, scope: !16587)
!16599 = !DILocation(line: 1302, column: 39, scope: !16587)
!16600 = !DILocation(line: 1302, column: 43, scope: !16587)
!16601 = !DILocation(line: 1302, column: 52, scope: !16587)
!16602 = !DILocation(line: 1302, column: 56, scope: !16587)
!16603 = !DILocation(line: 1302, column: 24, scope: !16587)
!16604 = !DILocation(line: 1304, column: 17, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16587, file: !15586, line: 1304, column: 17)
!16606 = !DILocation(line: 1304, column: 22, scope: !16605)
!16607 = !DILocation(line: 1304, column: 17, scope: !16587)
!16608 = !DILocation(line: 1307, column: 29, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16605, file: !15586, line: 1305, column: 15)
!16610 = !DILocation(line: 1308, column: 39, scope: !16609)
!16611 = !DILocation(line: 1308, column: 43, scope: !16609)
!16612 = !DILocation(line: 1308, column: 60, scope: !16609)
!16613 = !DILocation(line: 0, scope: !16609)
!16614 = !DILocation(line: 1308, column: 58, scope: !16609)
!16615 = !DILocation(line: 1308, column: 51, scope: !16609)
!16616 = !DILocation(line: 1309, column: 39, scope: !16609)
!16617 = !DILocation(line: 1309, column: 43, scope: !16609)
!16618 = !DILocation(line: 1308, column: 24, scope: !16609)
!16619 = !DILocation(line: 1308, column: 22, scope: !16609)
!16620 = !DILocation(line: 1310, column: 15, scope: !16609)
!16621 = !DILocalVariable(name: "d", scope: !16622, file: !15586, line: 1313, type: !27)
!16622 = distinct !DILexicalBlock(scope: !16605, file: !15586, line: 1312, column: 15)
!16623 = !DILocation(line: 1313, column: 21, scope: !16622)
!16624 = !DILocation(line: 1313, column: 40, scope: !16622)
!16625 = !DILocation(line: 1313, column: 44, scope: !16622)
!16626 = !DILocation(line: 1313, column: 61, scope: !16622)
!16627 = !DILocation(line: 0, scope: !16622)
!16628 = !DILocation(line: 1313, column: 59, scope: !16622)
!16629 = !DILocation(line: 1313, column: 52, scope: !16622)
!16630 = !DILocation(line: 1314, column: 40, scope: !16622)
!16631 = !DILocation(line: 1314, column: 44, scope: !16622)
!16632 = !DILocation(line: 1313, column: 25, scope: !16622)
!16633 = !DILocation(line: 1315, column: 26, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16622, file: !15586, line: 1315, column: 21)
!16635 = !DILocation(line: 1315, column: 23, scope: !16634)
!16636 = !DILocation(line: 1315, column: 21, scope: !16622)
!16637 = !DILocation(line: 1318, column: 33, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16634, file: !15586, line: 1316, column: 19)
!16639 = !DILocation(line: 1319, column: 28, scope: !16638)
!16640 = !DILocation(line: 1319, column: 26, scope: !16638)
!16641 = !DILocation(line: 1320, column: 19, scope: !16638)
!16642 = !DILocation(line: 1323, column: 22, scope: !16587)
!16643 = !DILocation(line: 1323, column: 21, scope: !16587)
!16644 = !DILocation(line: 1323, column: 13, scope: !16587)
!16645 = !DILocalVariable(name: "yy", scope: !16646, file: !15586, line: 1327, type: !27)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !15586, line: 1326, column: 17)
!16647 = distinct !DILexicalBlock(scope: !16587, file: !15586, line: 1324, column: 15)
!16648 = !DILocation(line: 1327, column: 23, scope: !16646)
!16649 = !DILocation(line: 1327, column: 29, scope: !16646)
!16650 = !DILocation(line: 1327, column: 33, scope: !16646)
!16651 = !DILocation(line: 1327, column: 41, scope: !16646)
!16652 = !DILocation(line: 1327, column: 49, scope: !16646)
!16653 = !DILocation(line: 1327, column: 47, scope: !16646)
!16654 = !DILocation(line: 1327, column: 62, scope: !16646)
!16655 = !DILocation(line: 1328, column: 19, scope: !16646)
!16656 = !DILocation(line: 1328, column: 19, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16646, file: !15586, line: 1328, column: 19)
!16658 = !DILocation(line: 1334, column: 17, scope: !16646)
!16659 = !DILocation(line: 1337, column: 17, scope: !16647)
!16660 = !DILocation(line: 1337, column: 17, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16647, file: !15586, line: 1337, column: 17)
!16662 = !DILocation(line: 1342, column: 17, scope: !16647)
!16663 = !DILocation(line: 1342, column: 17, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16647, file: !15586, line: 1342, column: 17)
!16665 = !DILocation(line: 1343, column: 15, scope: !16647)
!16666 = !DILocation(line: 1344, column: 11, scope: !16587)
!16667 = !DILocation(line: 1347, column: 15, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1347, column: 15)
!16669 = !DILocation(line: 1347, column: 24, scope: !16668)
!16670 = !DILocation(line: 1347, column: 15, scope: !15804)
!16671 = !DILocation(line: 1348, column: 13, scope: !16668)
!16672 = !DILocation(line: 1350, column: 11, scope: !15804)
!16673 = !DILocation(line: 1350, column: 11, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1350, column: 11)
!16675 = !DILocation(line: 1353, column: 15, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1353, column: 15)
!16677 = !DILocation(line: 1353, column: 24, scope: !16676)
!16678 = !DILocation(line: 1353, column: 15, scope: !15804)
!16679 = !DILocation(line: 1354, column: 13, scope: !16676)
!16680 = !DILocation(line: 1356, column: 11, scope: !15804)
!16681 = !DILocation(line: 1356, column: 11, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1356, column: 11)
!16683 = !DILocation(line: 1359, column: 15, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1359, column: 15)
!16685 = !DILocation(line: 1359, column: 24, scope: !16684)
!16686 = !DILocation(line: 1359, column: 15, scope: !15804)
!16687 = !DILocation(line: 1375, column: 15, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16684, file: !15586, line: 1360, column: 13)
!16689 = !DILocation(line: 1378, column: 15, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1378, column: 15)
!16691 = !DILocation(line: 1378, column: 24, scope: !16690)
!16692 = !DILocation(line: 1378, column: 15, scope: !15804)
!16693 = !DILocation(line: 1379, column: 13, scope: !16690)
!16694 = !DILocation(line: 1381, column: 11, scope: !15804)
!16695 = !DILocation(line: 1381, column: 11, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1381, column: 11)
!16697 = !DILocation(line: 1385, column: 15, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1385, column: 15)
!16699 = !DILocation(line: 1385, column: 24, scope: !16698)
!16700 = !DILocation(line: 1385, column: 15, scope: !15804)
!16701 = !DILocation(line: 1398, column: 15, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16698, file: !15586, line: 1386, column: 13)
!16703 = !DILocalVariable(name: "yy", scope: !16704, file: !15586, line: 1403, type: !27)
!16704 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1402, column: 11)
!16705 = !DILocation(line: 1403, column: 17, scope: !16704)
!16706 = !DILocation(line: 1403, column: 22, scope: !16704)
!16707 = !DILocation(line: 1403, column: 26, scope: !16704)
!16708 = !DILocation(line: 1403, column: 34, scope: !16704)
!16709 = !DILocation(line: 1404, column: 17, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16704, file: !15586, line: 1404, column: 17)
!16711 = !DILocation(line: 1404, column: 20, scope: !16710)
!16712 = !DILocation(line: 1404, column: 17, scope: !16704)
!16713 = !DILocation(line: 1405, column: 20, scope: !16710)
!16714 = !DILocation(line: 1405, column: 24, scope: !16710)
!16715 = !DILocation(line: 1405, column: 32, scope: !16710)
!16716 = !DILocation(line: 1405, column: 52, scope: !16710)
!16717 = !DILocation(line: 1405, column: 51, scope: !16710)
!16718 = !DILocation(line: 1405, column: 57, scope: !16710)
!16719 = !DILocation(line: 1405, column: 60, scope: !16710)
!16720 = !DILocation(line: 1405, column: 18, scope: !16710)
!16721 = !DILocation(line: 1405, column: 15, scope: !16710)
!16722 = !DILocation(line: 1406, column: 13, scope: !16704)
!16723 = !DILocation(line: 1406, column: 13, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16704, file: !15586, line: 1406, column: 13)
!16725 = !DILocation(line: 1407, column: 11, scope: !16704)
!16726 = !DILocation(line: 1410, column: 15, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1410, column: 15)
!16728 = !DILocation(line: 1410, column: 15, scope: !15804)
!16729 = !DILocation(line: 1412, column: 26, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16727, file: !15586, line: 1411, column: 13)
!16731 = !DILocation(line: 1413, column: 26, scope: !16730)
!16732 = !DILocation(line: 1414, column: 13, scope: !16730)
!16733 = !DILocation(line: 1426, column: 11, scope: !15804)
!16734 = !DILocalVariable(name: "_n", scope: !16735, file: !15586, line: 1426, type: !149)
!16735 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1426, column: 11)
!16736 = !DILocation(line: 1426, column: 11, scope: !16735)
!16737 = !DILocalVariable(name: "_w", scope: !16735, file: !15586, line: 1426, type: !149)
!16738 = !DILocalVariable(name: "_incr", scope: !16735, file: !15586, line: 1426, type: !149)
!16739 = !DILocation(line: 1426, column: 11, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16735, file: !15586, line: 1426, column: 11)
!16741 = !DILocation(line: 1426, column: 11, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16735, file: !15586, line: 1426, column: 11)
!16743 = !DILocation(line: 1426, column: 11, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !15586, line: 1426, column: 11)
!16745 = distinct !DILexicalBlock(scope: !16742, file: !15586, line: 1426, column: 11)
!16746 = !DILocation(line: 1426, column: 11, scope: !16745)
!16747 = !DILocalVariable(name: "_delta", scope: !16748, file: !15586, line: 1426, type: !149)
!16748 = distinct !DILexicalBlock(scope: !16744, file: !15586, line: 1426, column: 11)
!16749 = !DILocation(line: 1426, column: 11, scope: !16748)
!16750 = !DILocation(line: 1426, column: 11, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16748, file: !15586, line: 1426, column: 11)
!16752 = !DILocation(line: 1426, column: 11, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16745, file: !15586, line: 1426, column: 11)
!16754 = !DILocation(line: 1426, column: 11, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16753, file: !15586, line: 1426, column: 11)
!16756 = !DILocation(line: 1428, column: 11, scope: !15804)
!16757 = !DILocation(line: 1433, column: 23, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1433, column: 11)
!16759 = !DILocation(line: 1433, column: 16, scope: !16758)
!16760 = !DILocation(line: 1433, column: 28, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16758, file: !15586, line: 1433, column: 11)
!16762 = !DILocation(line: 1433, column: 30, scope: !16761)
!16763 = !DILocation(line: 1433, column: 38, scope: !16761)
!16764 = !DILocation(line: 1433, column: 11, scope: !16758)
!16765 = !DILocation(line: 1434, column: 13, scope: !16761)
!16766 = !DILocation(line: 1433, column: 56, scope: !16761)
!16767 = !DILocation(line: 1433, column: 11, scope: !16761)
!16768 = distinct !{!16768, !16764, !16769}
!16769 = !DILocation(line: 1434, column: 13, scope: !16758)
!16770 = !DILocation(line: 1435, column: 15, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1435, column: 15)
!16772 = !DILocation(line: 1435, column: 17, scope: !16771)
!16773 = !DILocation(line: 1435, column: 25, scope: !16771)
!16774 = !DILocation(line: 1435, column: 15, scope: !15804)
!16775 = !DILocation(line: 1436, column: 13, scope: !16771)
!16776 = !DILocation(line: 1437, column: 16, scope: !15804)
!16777 = !DILocation(line: 1437, column: 13, scope: !15804)
!16778 = !DILocation(line: 1438, column: 11, scope: !15804)
!16779 = !DILocation(line: 1441, column: 18, scope: !15804)
!16780 = !DILocation(line: 1441, column: 11, scope: !15804)
!16781 = !DILabel(scope: !15804, name: "do_z_conversion", file: !15586, line: 1443)
!16782 = !DILocation(line: 1443, column: 9, scope: !15804)
!16783 = !DILocation(line: 1444, column: 15, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1444, column: 15)
!16785 = !DILocation(line: 1444, column: 19, scope: !16784)
!16786 = !{!6837, !2437, i64 32}
!16787 = !DILocation(line: 1444, column: 28, scope: !16784)
!16788 = !DILocation(line: 1444, column: 15, scope: !15804)
!16789 = !DILocation(line: 1445, column: 13, scope: !16784)
!16790 = !DILocalVariable(name: "diff", scope: !16791, file: !15586, line: 1448, type: !27)
!16791 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1447, column: 11)
!16792 = !DILocation(line: 1448, column: 17, scope: !16791)
!16793 = !DILocalVariable(name: "hour_diff", scope: !16791, file: !15586, line: 1449, type: !27)
!16794 = !DILocation(line: 1449, column: 17, scope: !16791)
!16795 = !DILocalVariable(name: "min_diff", scope: !16791, file: !15586, line: 1450, type: !27)
!16796 = !DILocation(line: 1450, column: 17, scope: !16791)
!16797 = !DILocalVariable(name: "sec_diff", scope: !16791, file: !15586, line: 1451, type: !27)
!16798 = !DILocation(line: 1451, column: 17, scope: !16791)
!16799 = !DILocation(line: 1453, column: 20, scope: !16791)
!16800 = !DILocation(line: 1453, column: 24, scope: !16791)
!16801 = !{!6837, !2467, i64 40}
!16802 = !DILocation(line: 1453, column: 18, scope: !16791)
!16803 = !DILocation(line: 1482, column: 31, scope: !16791)
!16804 = !DILocation(line: 1482, column: 36, scope: !16791)
!16805 = !DILocation(line: 1482, column: 40, scope: !16791)
!16806 = !DILocation(line: 1482, column: 44, scope: !16791)
!16807 = !DILocation(line: 1482, column: 49, scope: !16791)
!16808 = !DILocation(line: 1482, column: 54, scope: !16791)
!16809 = !DILocation(line: 1482, column: 58, scope: !16791)
!16810 = !DILocation(line: 1482, column: 57, scope: !16791)
!16811 = !DILocation(line: 1482, column: 63, scope: !16791)
!16812 = !DILocation(line: 0, scope: !16791)
!16813 = !DILocation(line: 1482, column: 29, scope: !16791)
!16814 = !DILocation(line: 1483, column: 25, scope: !16791)
!16815 = !DILocation(line: 1483, column: 30, scope: !16791)
!16816 = !DILocation(line: 1483, column: 35, scope: !16791)
!16817 = !DILocation(line: 1483, column: 23, scope: !16791)
!16818 = !DILocation(line: 1484, column: 24, scope: !16791)
!16819 = !DILocation(line: 1484, column: 29, scope: !16791)
!16820 = !DILocation(line: 1484, column: 34, scope: !16791)
!16821 = !DILocation(line: 1484, column: 22, scope: !16791)
!16822 = !DILocation(line: 1485, column: 24, scope: !16791)
!16823 = !DILocation(line: 1485, column: 29, scope: !16791)
!16824 = !DILocation(line: 1485, column: 22, scope: !16791)
!16825 = !DILocation(line: 1487, column: 21, scope: !16791)
!16826 = !DILocation(line: 1487, column: 13, scope: !16791)
!16827 = !DILocation(line: 1490, column: 17, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16791, file: !15586, line: 1488, column: 15)
!16829 = !DILocation(line: 1490, column: 17, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1490, column: 17)
!16831 = !DILabel(scope: !16828, name: "tz_hh_mm", file: !15586, line: 1492)
!16832 = !DILocation(line: 1492, column: 23, scope: !16828)
!16833 = !DILocation(line: 1493, column: 17, scope: !16828)
!16834 = !DILocation(line: 1493, column: 17, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1493, column: 17)
!16836 = !DILabel(scope: !16828, name: "tz_hh_mm_ss", file: !15586, line: 1495)
!16837 = !DILocation(line: 1495, column: 23, scope: !16828)
!16838 = !DILocation(line: 1496, column: 17, scope: !16828)
!16839 = !DILocation(line: 1496, column: 17, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1496, column: 17)
!16841 = !DILocation(line: 1500, column: 21, scope: !16842)
!16842 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1500, column: 21)
!16843 = !DILocation(line: 1500, column: 30, scope: !16842)
!16844 = !DILocation(line: 1500, column: 21, scope: !16828)
!16845 = !DILocation(line: 1501, column: 19, scope: !16842)
!16846 = !DILocation(line: 1502, column: 21, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1502, column: 21)
!16848 = !DILocation(line: 1502, column: 30, scope: !16847)
!16849 = !DILocation(line: 1502, column: 21, scope: !16828)
!16850 = !DILocation(line: 1503, column: 19, scope: !16847)
!16851 = !DILocation(line: 1504, column: 17, scope: !16828)
!16852 = !DILocation(line: 1504, column: 17, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16828, file: !15586, line: 1504, column: 17)
!16854 = !DILocation(line: 1507, column: 17, scope: !16828)
!16855 = !DILocation(line: 1512, column: 13, scope: !15804)
!16856 = !DILocation(line: 1513, column: 13, scope: !15804)
!16857 = !DILabel(scope: !15804, name: "bad_format", file: !15586, line: 1518)
!16858 = !DILocation(line: 1518, column: 9, scope: !15804)
!16859 = !DILocalVariable(name: "flen", scope: !16860, file: !15586, line: 1520, type: !27)
!16860 = distinct !DILexicalBlock(scope: !15804, file: !15586, line: 1519, column: 11)
!16861 = !DILocation(line: 1520, column: 17, scope: !16860)
!16862 = !DILocation(line: 1521, column: 23, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16860, file: !15586, line: 1521, column: 13)
!16864 = !DILocation(line: 1521, column: 18, scope: !16863)
!16865 = !DILocation(line: 1521, column: 28, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16863, file: !15586, line: 1521, column: 13)
!16867 = !DILocation(line: 1521, column: 34, scope: !16866)
!16868 = !DILocation(line: 1521, column: 32, scope: !16866)
!16869 = !DILocation(line: 1521, column: 40, scope: !16866)
!16870 = !DILocation(line: 1521, column: 13, scope: !16863)
!16871 = !DILocation(line: 1522, column: 15, scope: !16866)
!16872 = !DILocation(line: 1521, column: 56, scope: !16866)
!16873 = !DILocation(line: 1521, column: 13, scope: !16866)
!16874 = distinct !{!16874, !16870, !16875}
!16875 = !DILocation(line: 1522, column: 15, scope: !16863)
!16876 = !DILocation(line: 1523, column: 13, scope: !16860)
!16877 = !DILocalVariable(name: "_n", scope: !16878, file: !15586, line: 1523, type: !149)
!16878 = distinct !DILexicalBlock(scope: !16860, file: !15586, line: 1523, column: 13)
!16879 = !DILocation(line: 1523, column: 13, scope: !16878)
!16880 = !DILocalVariable(name: "_w", scope: !16878, file: !15586, line: 1523, type: !149)
!16881 = !DILocalVariable(name: "_incr", scope: !16878, file: !15586, line: 1523, type: !149)
!16882 = !DILocation(line: 1523, column: 13, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16878, file: !15586, line: 1523, column: 13)
!16884 = !DILocation(line: 1523, column: 13, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16878, file: !15586, line: 1523, column: 13)
!16886 = !DILocation(line: 1523, column: 13, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16888, file: !15586, line: 1523, column: 13)
!16888 = distinct !DILexicalBlock(scope: !16885, file: !15586, line: 1523, column: 13)
!16889 = !DILocation(line: 1523, column: 13, scope: !16888)
!16890 = !DILocalVariable(name: "_delta", scope: !16891, file: !15586, line: 1523, type: !149)
!16891 = distinct !DILexicalBlock(scope: !16887, file: !15586, line: 1523, column: 13)
!16892 = !DILocation(line: 1523, column: 13, scope: !16891)
!16893 = !DILocation(line: 1523, column: 13, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16891, file: !15586, line: 1523, column: 13)
!16895 = !DILocation(line: 1523, column: 13, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16888, file: !15586, line: 1523, column: 13)
!16897 = !DILocation(line: 1523, column: 13, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16896, file: !15586, line: 1523, column: 13)
!16899 = !DILocation(line: 1525, column: 11, scope: !15804)
!16900 = !DILocation(line: 1527, column: 5, scope: !15673)
!16901 = !DILocation(line: 562, column: 38, scope: !15668)
!16902 = !DILocation(line: 562, column: 45, scope: !15668)
!16903 = !DILocation(line: 562, column: 3, scope: !15668)
!16904 = distinct !{!16904, !15671, !16905}
!16905 = !DILocation(line: 1527, column: 5, scope: !15664)
!16906 = !DILocation(line: 1530, column: 7, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !15607, file: !15586, line: 1530, column: 7)
!16908 = !DILocation(line: 1530, column: 9, scope: !16907)
!16909 = !DILocation(line: 1530, column: 12, scope: !16907)
!16910 = !DILocation(line: 1530, column: 20, scope: !16907)
!16911 = !DILocation(line: 1530, column: 7, scope: !15607)
!16912 = !DILocation(line: 1531, column: 6, scope: !16907)
!16913 = !DILocation(line: 1531, column: 8, scope: !16907)
!16914 = !DILocation(line: 1531, column: 5, scope: !16907)
!16915 = !DILocation(line: 1534, column: 10, scope: !15607)
!16916 = !DILocation(line: 1534, column: 3, scope: !15607)
!16917 = !DILocation(line: 1535, column: 1, scope: !15607)
!16918 = distinct !DISubprogram(name: "memcpy_lowcase", scope: !15586, file: !15586, line: 320, type: !1881, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!16919 = !DILocalVariable(name: "dest", arg: 1, scope: !16918, file: !15586, line: 320, type: !143)
!16920 = !DILocation(line: 320, column: 25, scope: !16918)
!16921 = !DILocalVariable(name: "src", arg: 2, scope: !16918, file: !15586, line: 320, type: !146)
!16922 = !DILocation(line: 320, column: 45, scope: !16918)
!16923 = !DILocalVariable(name: "len", arg: 3, scope: !16918, file: !15586, line: 320, type: !149)
!16924 = !DILocation(line: 320, column: 57, scope: !16918)
!16925 = !DILocation(line: 322, column: 3, scope: !16918)
!16926 = !DILocation(line: 322, column: 13, scope: !16918)
!16927 = !DILocation(line: 322, column: 16, scope: !16918)
!16928 = !DILocation(line: 323, column: 17, scope: !16918)
!16929 = !DILocation(line: 323, column: 5, scope: !16918)
!16930 = !DILocation(line: 323, column: 10, scope: !16918)
!16931 = !DILocation(line: 323, column: 15, scope: !16918)
!16932 = distinct !{!16932, !16925, !16928}
!16933 = !DILocation(line: 324, column: 10, scope: !16918)
!16934 = !DILocation(line: 324, column: 3, scope: !16918)
!16935 = distinct !DISubprogram(name: "memcpy_uppcase", scope: !15586, file: !15586, line: 331, type: !1881, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!16936 = !DILocalVariable(name: "dest", arg: 1, scope: !16935, file: !15586, line: 331, type: !143)
!16937 = !DILocation(line: 331, column: 25, scope: !16935)
!16938 = !DILocalVariable(name: "src", arg: 2, scope: !16935, file: !15586, line: 331, type: !146)
!16939 = !DILocation(line: 331, column: 45, scope: !16935)
!16940 = !DILocalVariable(name: "len", arg: 3, scope: !16935, file: !15586, line: 331, type: !149)
!16941 = !DILocation(line: 331, column: 57, scope: !16935)
!16942 = !DILocation(line: 333, column: 3, scope: !16935)
!16943 = !DILocation(line: 333, column: 13, scope: !16935)
!16944 = !DILocation(line: 333, column: 16, scope: !16935)
!16945 = !DILocation(line: 334, column: 17, scope: !16935)
!16946 = !DILocation(line: 334, column: 5, scope: !16935)
!16947 = !DILocation(line: 334, column: 10, scope: !16935)
!16948 = !DILocation(line: 334, column: 15, scope: !16935)
!16949 = distinct !{!16949, !16942, !16945}
!16950 = !DILocation(line: 335, column: 10, scope: !16935)
!16951 = !DILocation(line: 335, column: 3, scope: !16935)
!16952 = distinct !DISubprogram(name: "iso_week_days", scope: !15586, file: !15586, line: 381, type: !1950, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1913, retainedNodes: !152)
!16953 = !DILocalVariable(name: "yday", arg: 1, scope: !16952, file: !15586, line: 381, type: !27)
!16954 = !DILocation(line: 381, column: 20, scope: !16952)
!16955 = !DILocalVariable(name: "wday", arg: 2, scope: !16952, file: !15586, line: 381, type: !27)
!16956 = !DILocation(line: 381, column: 30, scope: !16952)
!16957 = !DILocalVariable(name: "big_enough_multiple_of_7", scope: !16952, file: !15586, line: 384, type: !27)
!16958 = !DILocation(line: 384, column: 7, scope: !16952)
!16959 = !DILocation(line: 385, column: 11, scope: !16952)
!16960 = !DILocation(line: 386, column: 14, scope: !16952)
!16961 = !DILocation(line: 386, column: 21, scope: !16952)
!16962 = !DILocation(line: 386, column: 19, scope: !16952)
!16963 = !DILocation(line: 386, column: 26, scope: !16952)
!16964 = !DILocation(line: 386, column: 45, scope: !16952)
!16965 = !DILocation(line: 386, column: 43, scope: !16952)
!16966 = !DILocation(line: 386, column: 71, scope: !16952)
!16967 = !DILocation(line: 386, column: 11, scope: !16952)
!16968 = !DILocation(line: 387, column: 11, scope: !16952)
!16969 = !DILocation(line: 387, column: 28, scope: !16952)
!16970 = !DILocation(line: 385, column: 3, scope: !16952)
!16971 = distinct !DISubprogram(name: "set_program_name", scope: !1434, file: !1434, line: 39, type: !570, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1396, retainedNodes: !152)
!16972 = !DILocalVariable(name: "argv0", arg: 1, scope: !16971, file: !1434, line: 39, type: !146)
!16973 = !DILocation(line: 39, column: 31, scope: !16971)
!16974 = !DILocalVariable(name: "slash", scope: !16971, file: !1434, line: 46, type: !146)
!16975 = !DILocation(line: 46, column: 15, scope: !16971)
!16976 = !DILocalVariable(name: "base", scope: !16971, file: !1434, line: 47, type: !146)
!16977 = !DILocation(line: 47, column: 15, scope: !16971)
!16978 = !DILocation(line: 51, column: 7, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16971, file: !1434, line: 51, column: 7)
!16980 = !DILocation(line: 51, column: 13, scope: !16979)
!16981 = !DILocation(line: 51, column: 7, scope: !16971)
!16982 = !DILocation(line: 55, column: 14, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16979, file: !1434, line: 52, column: 5)
!16984 = !DILocation(line: 54, column: 7, scope: !16983)
!16985 = !DILocation(line: 56, column: 7, scope: !16983)
!16986 = !DILocation(line: 59, column: 20, scope: !16971)
!16987 = !DILocation(line: 59, column: 11, scope: !16971)
!16988 = !DILocation(line: 59, column: 9, scope: !16971)
!16989 = !DILocation(line: 60, column: 11, scope: !16971)
!16990 = !DILocation(line: 60, column: 17, scope: !16971)
!16991 = !DILocation(line: 60, column: 27, scope: !16971)
!16992 = !DILocation(line: 60, column: 33, scope: !16971)
!16993 = !DILocation(line: 60, column: 39, scope: !16971)
!16994 = !DILocation(line: 60, column: 8, scope: !16971)
!16995 = !DILocation(line: 61, column: 7, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16971, file: !1434, line: 61, column: 7)
!16997 = !DILocation(line: 61, column: 14, scope: !16996)
!16998 = !DILocation(line: 61, column: 12, scope: !16996)
!16999 = !DILocation(line: 61, column: 20, scope: !16996)
!17000 = !DILocation(line: 61, column: 25, scope: !16996)
!17001 = !DILocation(line: 61, column: 37, scope: !16996)
!17002 = !DILocation(line: 61, column: 42, scope: !16996)
!17003 = !DILocation(line: 61, column: 28, scope: !16996)
!17004 = !DILocation(line: 61, column: 61, scope: !16996)
!17005 = !DILocation(line: 61, column: 7, scope: !16971)
!17006 = !DILocation(line: 63, column: 15, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !16996, file: !1434, line: 62, column: 5)
!17008 = !DILocation(line: 63, column: 13, scope: !17007)
!17009 = !DILocation(line: 64, column: 20, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !17007, file: !1434, line: 64, column: 11)
!17011 = !DILocation(line: 64, column: 11, scope: !17010)
!17012 = !DILocation(line: 64, column: 36, scope: !17010)
!17013 = !DILocation(line: 64, column: 11, scope: !17007)
!17014 = !DILocation(line: 66, column: 19, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17010, file: !1434, line: 65, column: 9)
!17016 = !DILocation(line: 66, column: 24, scope: !17015)
!17017 = !DILocation(line: 66, column: 17, scope: !17015)
!17018 = !DILocation(line: 70, column: 52, scope: !17015)
!17019 = !DILocation(line: 70, column: 41, scope: !17015)
!17020 = !DILocation(line: 72, column: 9, scope: !17015)
!17021 = !DILocation(line: 73, column: 5, scope: !17007)
!17022 = !DILocation(line: 84, column: 18, scope: !16971)
!17023 = !DILocation(line: 84, column: 16, scope: !16971)
!17024 = !DILocation(line: 90, column: 38, scope: !16971)
!17025 = !DILocation(line: 90, column: 27, scope: !16971)
!17026 = !DILocation(line: 92, column: 1, scope: !16971)
!17027 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1447, file: !1447, line: 122, type: !1443, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17028 = !DILocalVariable(name: "o", arg: 1, scope: !17027, file: !1447, line: 122, type: !1445)
!17029 = !DILocation(line: 122, column: 48, scope: !17027)
!17030 = !DILocalVariable(name: "e", scope: !17027, file: !1447, line: 124, type: !27)
!17031 = !DILocation(line: 124, column: 7, scope: !17027)
!17032 = !DILocation(line: 124, column: 11, scope: !17027)
!17033 = !DILocalVariable(name: "p", scope: !17027, file: !1447, line: 125, type: !1445)
!17034 = !DILocation(line: 125, column: 27, scope: !17027)
!17035 = !DILocation(line: 125, column: 40, scope: !17027)
!17036 = !DILocation(line: 125, column: 44, scope: !17027)
!17037 = !DILocation(line: 125, column: 31, scope: !17027)
!17038 = !DILocation(line: 127, column: 11, scope: !17027)
!17039 = !DILocation(line: 127, column: 3, scope: !17027)
!17040 = !DILocation(line: 127, column: 9, scope: !17027)
!17041 = !DILocation(line: 128, column: 10, scope: !17027)
!17042 = !DILocation(line: 128, column: 3, scope: !17027)
!17043 = distinct !DISubprogram(name: "get_quoting_style", scope: !1447, file: !1447, line: 133, type: !1455, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17044 = !DILocalVariable(name: "o", arg: 1, scope: !17043, file: !1447, line: 133, type: !1457)
!17045 = !DILocation(line: 133, column: 50, scope: !17043)
!17046 = !DILocation(line: 135, column: 11, scope: !17043)
!17047 = !DILocation(line: 135, column: 15, scope: !17043)
!17048 = !DILocation(line: 135, column: 46, scope: !17043)
!17049 = !{!17050, !2438, i64 0}
!17050 = !{!"quoting_options", !2438, i64 0, !2437, i64 4, !2438, i64 8, !2443, i64 40, !2443, i64 48}
!17051 = !DILocation(line: 135, column: 3, scope: !17043)
!17052 = distinct !DISubprogram(name: "set_quoting_style", scope: !1447, file: !1447, line: 141, type: !1459, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17053 = !DILocalVariable(name: "o", arg: 1, scope: !17052, file: !1447, line: 141, type: !1445)
!17054 = !DILocation(line: 141, column: 44, scope: !17052)
!17055 = !DILocalVariable(name: "s", arg: 2, scope: !17052, file: !1447, line: 141, type: !95)
!17056 = !DILocation(line: 141, column: 66, scope: !17052)
!17057 = !DILocation(line: 143, column: 47, scope: !17052)
!17058 = !DILocation(line: 143, column: 4, scope: !17052)
!17059 = !DILocation(line: 143, column: 8, scope: !17052)
!17060 = !DILocation(line: 143, column: 39, scope: !17052)
!17061 = !DILocation(line: 143, column: 45, scope: !17052)
!17062 = !DILocation(line: 144, column: 1, scope: !17052)
!17063 = distinct !DISubprogram(name: "set_char_quoting", scope: !1447, file: !1447, line: 152, type: !1461, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17064 = !DILocalVariable(name: "o", arg: 1, scope: !17063, file: !1447, line: 152, type: !1445)
!17065 = !DILocation(line: 152, column: 43, scope: !17063)
!17066 = !DILocalVariable(name: "c", arg: 2, scope: !17063, file: !1447, line: 152, type: !144)
!17067 = !DILocation(line: 152, column: 51, scope: !17063)
!17068 = !DILocalVariable(name: "i", arg: 3, scope: !17063, file: !1447, line: 152, type: !27)
!17069 = !DILocation(line: 152, column: 58, scope: !17063)
!17070 = !DILocalVariable(name: "uc", scope: !17063, file: !1447, line: 154, type: !591)
!17071 = !DILocation(line: 154, column: 17, scope: !17063)
!17072 = !DILocation(line: 154, column: 22, scope: !17063)
!17073 = !DILocalVariable(name: "p", scope: !17063, file: !1447, line: 155, type: !1463)
!17074 = !DILocation(line: 155, column: 17, scope: !17063)
!17075 = !DILocation(line: 156, column: 6, scope: !17063)
!17076 = !DILocation(line: 156, column: 10, scope: !17063)
!17077 = !DILocation(line: 156, column: 41, scope: !17063)
!17078 = !DILocation(line: 156, column: 5, scope: !17063)
!17079 = !DILocation(line: 156, column: 59, scope: !17063)
!17080 = !DILocation(line: 156, column: 62, scope: !17063)
!17081 = !DILocation(line: 156, column: 57, scope: !17063)
!17082 = !DILocalVariable(name: "shift", scope: !17063, file: !1447, line: 157, type: !27)
!17083 = !DILocation(line: 157, column: 7, scope: !17063)
!17084 = !DILocation(line: 157, column: 15, scope: !17063)
!17085 = !DILocation(line: 157, column: 18, scope: !17063)
!17086 = !DILocalVariable(name: "r", scope: !17063, file: !1447, line: 158, type: !27)
!17087 = !DILocation(line: 158, column: 7, scope: !17063)
!17088 = !DILocation(line: 158, column: 13, scope: !17063)
!17089 = !DILocation(line: 158, column: 12, scope: !17063)
!17090 = !DILocation(line: 158, column: 18, scope: !17063)
!17091 = !DILocation(line: 158, column: 15, scope: !17063)
!17092 = !DILocation(line: 158, column: 25, scope: !17063)
!17093 = !DILocation(line: 159, column: 11, scope: !17063)
!17094 = !DILocation(line: 159, column: 13, scope: !17063)
!17095 = !DILocation(line: 159, column: 20, scope: !17063)
!17096 = !DILocation(line: 159, column: 18, scope: !17063)
!17097 = !DILocation(line: 159, column: 26, scope: !17063)
!17098 = !DILocation(line: 159, column: 23, scope: !17063)
!17099 = !DILocation(line: 159, column: 4, scope: !17063)
!17100 = !DILocation(line: 159, column: 6, scope: !17063)
!17101 = !DILocation(line: 160, column: 10, scope: !17063)
!17102 = !DILocation(line: 160, column: 3, scope: !17063)
!17103 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1447, file: !1447, line: 168, type: !1464, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17104 = !DILocalVariable(name: "o", arg: 1, scope: !17103, file: !1447, line: 168, type: !1445)
!17105 = !DILocation(line: 168, column: 44, scope: !17103)
!17106 = !DILocalVariable(name: "i", arg: 2, scope: !17103, file: !1447, line: 168, type: !27)
!17107 = !DILocation(line: 168, column: 51, scope: !17103)
!17108 = !DILocalVariable(name: "r", scope: !17103, file: !1447, line: 170, type: !27)
!17109 = !DILocation(line: 170, column: 7, scope: !17103)
!17110 = !DILocation(line: 171, column: 8, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17103, file: !1447, line: 171, column: 7)
!17112 = !DILocation(line: 171, column: 7, scope: !17103)
!17113 = !DILocation(line: 172, column: 7, scope: !17111)
!17114 = !DILocation(line: 172, column: 5, scope: !17111)
!17115 = !DILocation(line: 173, column: 7, scope: !17103)
!17116 = !DILocation(line: 173, column: 10, scope: !17103)
!17117 = !{!17050, !2437, i64 4}
!17118 = !DILocation(line: 173, column: 5, scope: !17103)
!17119 = !DILocation(line: 174, column: 14, scope: !17103)
!17120 = !DILocation(line: 174, column: 3, scope: !17103)
!17121 = !DILocation(line: 174, column: 6, scope: !17103)
!17122 = !DILocation(line: 174, column: 12, scope: !17103)
!17123 = !DILocation(line: 175, column: 10, scope: !17103)
!17124 = !DILocation(line: 175, column: 3, scope: !17103)
!17125 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1447, file: !1447, line: 179, type: !1466, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17126 = !DILocalVariable(name: "o", arg: 1, scope: !17125, file: !1447, line: 179, type: !1445)
!17127 = !DILocation(line: 179, column: 45, scope: !17125)
!17128 = !DILocalVariable(name: "left_quote", arg: 2, scope: !17125, file: !1447, line: 180, type: !146)
!17129 = !DILocation(line: 180, column: 33, scope: !17125)
!17130 = !DILocalVariable(name: "right_quote", arg: 3, scope: !17125, file: !1447, line: 180, type: !146)
!17131 = !DILocation(line: 180, column: 57, scope: !17125)
!17132 = !DILocation(line: 182, column: 8, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17125, file: !1447, line: 182, column: 7)
!17134 = !DILocation(line: 182, column: 7, scope: !17125)
!17135 = !DILocation(line: 183, column: 7, scope: !17133)
!17136 = !DILocation(line: 183, column: 5, scope: !17133)
!17137 = !DILocation(line: 184, column: 3, scope: !17125)
!17138 = !DILocation(line: 184, column: 6, scope: !17125)
!17139 = !DILocation(line: 184, column: 12, scope: !17125)
!17140 = !DILocation(line: 185, column: 8, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !17125, file: !1447, line: 185, column: 7)
!17142 = !DILocation(line: 185, column: 19, scope: !17141)
!17143 = !DILocation(line: 185, column: 23, scope: !17141)
!17144 = !DILocation(line: 185, column: 7, scope: !17125)
!17145 = !DILocation(line: 186, column: 5, scope: !17141)
!17146 = !DILocation(line: 187, column: 19, scope: !17125)
!17147 = !DILocation(line: 187, column: 3, scope: !17125)
!17148 = !DILocation(line: 187, column: 6, scope: !17125)
!17149 = !DILocation(line: 187, column: 17, scope: !17125)
!17150 = !{!17050, !2443, i64 40}
!17151 = !DILocation(line: 188, column: 20, scope: !17125)
!17152 = !DILocation(line: 188, column: 3, scope: !17125)
!17153 = !DILocation(line: 188, column: 6, scope: !17125)
!17154 = !DILocation(line: 188, column: 18, scope: !17125)
!17155 = !{!17050, !2443, i64 48}
!17156 = !DILocation(line: 189, column: 1, scope: !17125)
!17157 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1447, file: !1447, line: 784, type: !1468, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17158 = !DILocalVariable(name: "buffer", arg: 1, scope: !17157, file: !1447, line: 784, type: !143)
!17159 = !DILocation(line: 784, column: 24, scope: !17157)
!17160 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17157, file: !1447, line: 784, type: !149)
!17161 = !DILocation(line: 784, column: 39, scope: !17157)
!17162 = !DILocalVariable(name: "arg", arg: 3, scope: !17157, file: !1447, line: 785, type: !146)
!17163 = !DILocation(line: 785, column: 30, scope: !17157)
!17164 = !DILocalVariable(name: "argsize", arg: 4, scope: !17157, file: !1447, line: 785, type: !149)
!17165 = !DILocation(line: 785, column: 42, scope: !17157)
!17166 = !DILocalVariable(name: "o", arg: 5, scope: !17157, file: !1447, line: 786, type: !1457)
!17167 = !DILocation(line: 786, column: 48, scope: !17157)
!17168 = !DILocalVariable(name: "p", scope: !17157, file: !1447, line: 788, type: !1457)
!17169 = !DILocation(line: 788, column: 33, scope: !17157)
!17170 = !DILocation(line: 788, column: 37, scope: !17157)
!17171 = !DILocation(line: 788, column: 41, scope: !17157)
!17172 = !DILocalVariable(name: "e", scope: !17157, file: !1447, line: 789, type: !27)
!17173 = !DILocation(line: 789, column: 7, scope: !17157)
!17174 = !DILocation(line: 789, column: 11, scope: !17157)
!17175 = !DILocalVariable(name: "r", scope: !17157, file: !1447, line: 790, type: !149)
!17176 = !DILocation(line: 790, column: 10, scope: !17157)
!17177 = !DILocation(line: 790, column: 40, scope: !17157)
!17178 = !DILocation(line: 790, column: 48, scope: !17157)
!17179 = !DILocation(line: 790, column: 60, scope: !17157)
!17180 = !DILocation(line: 790, column: 65, scope: !17157)
!17181 = !DILocation(line: 791, column: 40, scope: !17157)
!17182 = !DILocation(line: 791, column: 43, scope: !17157)
!17183 = !DILocation(line: 791, column: 50, scope: !17157)
!17184 = !DILocation(line: 791, column: 53, scope: !17157)
!17185 = !DILocation(line: 791, column: 60, scope: !17157)
!17186 = !DILocation(line: 791, column: 63, scope: !17157)
!17187 = !DILocation(line: 792, column: 40, scope: !17157)
!17188 = !DILocation(line: 792, column: 43, scope: !17157)
!17189 = !DILocation(line: 792, column: 55, scope: !17157)
!17190 = !DILocation(line: 792, column: 58, scope: !17157)
!17191 = !DILocation(line: 790, column: 14, scope: !17157)
!17192 = !DILocation(line: 793, column: 11, scope: !17157)
!17193 = !DILocation(line: 793, column: 3, scope: !17157)
!17194 = !DILocation(line: 793, column: 9, scope: !17157)
!17195 = !DILocation(line: 794, column: 10, scope: !17157)
!17196 = !DILocation(line: 794, column: 3, scope: !17157)
!17197 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1447, file: !1447, line: 256, type: !1511, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!17198 = !DILocalVariable(name: "buffer", arg: 1, scope: !17197, file: !1447, line: 256, type: !143)
!17199 = !DILocation(line: 256, column: 33, scope: !17197)
!17200 = !DILocalVariable(name: "buffersize", arg: 2, scope: !17197, file: !1447, line: 256, type: !149)
!17201 = !DILocation(line: 256, column: 48, scope: !17197)
!17202 = !DILocalVariable(name: "arg", arg: 3, scope: !17197, file: !1447, line: 257, type: !146)
!17203 = !DILocation(line: 257, column: 39, scope: !17197)
!17204 = !DILocalVariable(name: "argsize", arg: 4, scope: !17197, file: !1447, line: 257, type: !149)
!17205 = !DILocation(line: 257, column: 51, scope: !17197)
!17206 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !17197, file: !1447, line: 258, type: !95)
!17207 = !DILocation(line: 258, column: 46, scope: !17197)
!17208 = !DILocalVariable(name: "flags", arg: 6, scope: !17197, file: !1447, line: 258, type: !27)
!17209 = !DILocation(line: 258, column: 65, scope: !17197)
!17210 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !17197, file: !1447, line: 259, type: !1513)
!17211 = !DILocation(line: 259, column: 47, scope: !17197)
!17212 = !DILocalVariable(name: "left_quote", arg: 8, scope: !17197, file: !1447, line: 260, type: !146)
!17213 = !DILocation(line: 260, column: 39, scope: !17197)
!17214 = !DILocalVariable(name: "right_quote", arg: 9, scope: !17197, file: !1447, line: 261, type: !146)
!17215 = !DILocation(line: 261, column: 39, scope: !17197)
!17216 = !DILocalVariable(name: "i", scope: !17197, file: !1447, line: 263, type: !149)
!17217 = !DILocation(line: 263, column: 10, scope: !17197)
!17218 = !DILocalVariable(name: "len", scope: !17197, file: !1447, line: 264, type: !149)
!17219 = !DILocation(line: 264, column: 10, scope: !17197)
!17220 = !DILocalVariable(name: "orig_buffersize", scope: !17197, file: !1447, line: 265, type: !149)
!17221 = !DILocation(line: 265, column: 10, scope: !17197)
!17222 = !DILocalVariable(name: "quote_string", scope: !17197, file: !1447, line: 266, type: !146)
!17223 = !DILocation(line: 266, column: 15, scope: !17197)
!17224 = !DILocalVariable(name: "quote_string_len", scope: !17197, file: !1447, line: 267, type: !149)
!17225 = !DILocation(line: 267, column: 10, scope: !17197)
!17226 = !DILocalVariable(name: "backslash_escapes", scope: !17197, file: !1447, line: 268, type: !141)
!17227 = !DILocation(line: 268, column: 8, scope: !17197)
!17228 = !DILocalVariable(name: "unibyte_locale", scope: !17197, file: !1447, line: 269, type: !141)
!17229 = !DILocation(line: 269, column: 8, scope: !17197)
!17230 = !DILocation(line: 269, column: 25, scope: !17197)
!17231 = !DILocation(line: 269, column: 36, scope: !17197)
!17232 = !DILocalVariable(name: "elide_outer_quotes", scope: !17197, file: !1447, line: 270, type: !141)
!17233 = !DILocation(line: 270, column: 8, scope: !17197)
!17234 = !DILocation(line: 270, column: 30, scope: !17197)
!17235 = !DILocation(line: 270, column: 36, scope: !17197)
!17236 = !DILocation(line: 270, column: 61, scope: !17197)
!17237 = !DILocalVariable(name: "pending_shell_escape_end", scope: !17197, file: !1447, line: 271, type: !141)
!17238 = !DILocation(line: 271, column: 8, scope: !17197)
!17239 = !DILocalVariable(name: "encountered_single_quote", scope: !17197, file: !1447, line: 272, type: !141)
!17240 = !DILocation(line: 272, column: 8, scope: !17197)
!17241 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !17197, file: !1447, line: 273, type: !141)
!17242 = !DILocation(line: 273, column: 8, scope: !17197)
!17243 = !DILocation(line: 273, column: 3, scope: !17197)
!17244 = !DILabel(scope: !17197, name: "process_input", file: !1447, line: 314)
!17245 = !DILocation(line: 314, column: 2, scope: !17197)
!17246 = !DILocation(line: 316, column: 11, scope: !17197)
!17247 = !DILocation(line: 316, column: 3, scope: !17197)
!17248 = !DILocation(line: 319, column: 21, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 317, column: 5)
!17250 = !DILocation(line: 320, column: 26, scope: !17249)
!17251 = !DILocation(line: 321, column: 7, scope: !17249)
!17252 = !DILocation(line: 323, column: 12, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17249, file: !1447, line: 323, column: 11)
!17254 = !DILocation(line: 323, column: 11, scope: !17249)
!17255 = !DILocation(line: 324, column: 9, scope: !17253)
!17256 = !DILocation(line: 324, column: 9, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17258, file: !1447, line: 324, column: 9)
!17258 = distinct !DILexicalBlock(scope: !17253, file: !1447, line: 324, column: 9)
!17259 = !DILocation(line: 324, column: 9, scope: !17258)
!17260 = !DILocation(line: 325, column: 25, scope: !17249)
!17261 = !DILocation(line: 326, column: 20, scope: !17249)
!17262 = !DILocation(line: 327, column: 24, scope: !17249)
!17263 = !DILocation(line: 328, column: 7, scope: !17249)
!17264 = !DILocation(line: 331, column: 25, scope: !17249)
!17265 = !DILocation(line: 332, column: 26, scope: !17249)
!17266 = !DILocation(line: 333, column: 7, scope: !17249)
!17267 = !DILocation(line: 339, column: 13, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17269, file: !1447, line: 339, column: 13)
!17269 = distinct !DILexicalBlock(scope: !17249, file: !1447, line: 338, column: 7)
!17270 = !DILocation(line: 339, column: 27, scope: !17268)
!17271 = !DILocation(line: 339, column: 13, scope: !17269)
!17272 = !DILocation(line: 362, column: 50, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17268, file: !1447, line: 340, column: 11)
!17274 = !DILocation(line: 362, column: 26, scope: !17273)
!17275 = !DILocation(line: 362, column: 24, scope: !17273)
!17276 = !DILocation(line: 363, column: 51, scope: !17273)
!17277 = !DILocation(line: 363, column: 27, scope: !17273)
!17278 = !DILocation(line: 363, column: 25, scope: !17273)
!17279 = !DILocation(line: 364, column: 11, scope: !17273)
!17280 = !DILocation(line: 365, column: 14, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17269, file: !1447, line: 365, column: 13)
!17282 = !DILocation(line: 365, column: 13, scope: !17269)
!17283 = !DILocation(line: 366, column: 31, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17281, file: !1447, line: 366, column: 11)
!17285 = !DILocation(line: 366, column: 29, scope: !17284)
!17286 = !DILocation(line: 366, column: 16, scope: !17284)
!17287 = !DILocation(line: 366, column: 44, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17284, file: !1447, line: 366, column: 11)
!17289 = !DILocation(line: 366, column: 43, scope: !17288)
!17290 = !DILocation(line: 366, column: 11, scope: !17284)
!17291 = !DILocation(line: 367, column: 13, scope: !17288)
!17292 = !DILocation(line: 367, column: 13, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !1447, line: 367, column: 13)
!17294 = distinct !DILexicalBlock(scope: !17288, file: !1447, line: 367, column: 13)
!17295 = !DILocation(line: 367, column: 13, scope: !17294)
!17296 = !DILocation(line: 366, column: 70, scope: !17288)
!17297 = !DILocation(line: 366, column: 11, scope: !17288)
!17298 = distinct !{!17298, !17290, !17299}
!17299 = !DILocation(line: 367, column: 13, scope: !17284)
!17300 = !DILocation(line: 368, column: 27, scope: !17269)
!17301 = !DILocation(line: 369, column: 24, scope: !17269)
!17302 = !DILocation(line: 369, column: 22, scope: !17269)
!17303 = !DILocation(line: 370, column: 36, scope: !17269)
!17304 = !DILocation(line: 370, column: 28, scope: !17269)
!17305 = !DILocation(line: 370, column: 26, scope: !17269)
!17306 = !DILocation(line: 372, column: 7, scope: !17249)
!17307 = !DILocation(line: 375, column: 25, scope: !17249)
!17308 = !DILocation(line: 376, column: 7, scope: !17249)
!17309 = !DILocation(line: 378, column: 26, scope: !17249)
!17310 = !DILocation(line: 379, column: 7, scope: !17249)
!17311 = !DILocation(line: 381, column: 12, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17249, file: !1447, line: 381, column: 11)
!17313 = !DILocation(line: 381, column: 11, scope: !17249)
!17314 = !DILocation(line: 382, column: 27, scope: !17312)
!17315 = !DILocation(line: 382, column: 9, scope: !17312)
!17316 = !DILocation(line: 383, column: 7, scope: !17249)
!17317 = !DILocation(line: 385, column: 21, scope: !17249)
!17318 = !DILocation(line: 386, column: 12, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17249, file: !1447, line: 386, column: 11)
!17320 = !DILocation(line: 386, column: 11, scope: !17249)
!17321 = !DILocation(line: 387, column: 9, scope: !17319)
!17322 = !DILocation(line: 387, column: 9, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17324, file: !1447, line: 387, column: 9)
!17324 = distinct !DILexicalBlock(scope: !17319, file: !1447, line: 387, column: 9)
!17325 = !DILocation(line: 387, column: 9, scope: !17324)
!17326 = !DILocation(line: 388, column: 20, scope: !17249)
!17327 = !DILocation(line: 389, column: 24, scope: !17249)
!17328 = !DILocation(line: 390, column: 7, scope: !17249)
!17329 = !DILocation(line: 393, column: 26, scope: !17249)
!17330 = !DILocation(line: 394, column: 7, scope: !17249)
!17331 = !DILocation(line: 397, column: 7, scope: !17249)
!17332 = !DILocation(line: 400, column: 10, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 400, column: 3)
!17334 = !DILocation(line: 400, column: 8, scope: !17333)
!17335 = !DILocation(line: 400, column: 19, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17333, file: !1447, line: 400, column: 3)
!17337 = !DILocation(line: 400, column: 27, scope: !17336)
!17338 = !DILocation(line: 400, column: 41, scope: !17336)
!17339 = !DILocation(line: 400, column: 45, scope: !17336)
!17340 = !DILocation(line: 400, column: 48, scope: !17336)
!17341 = !DILocation(line: 400, column: 58, scope: !17336)
!17342 = !DILocation(line: 400, column: 63, scope: !17336)
!17343 = !DILocation(line: 400, column: 60, scope: !17336)
!17344 = !DILocation(line: 400, column: 16, scope: !17336)
!17345 = !DILocation(line: 400, column: 3, scope: !17333)
!17346 = !DILocalVariable(name: "c", scope: !17347, file: !1447, line: 402, type: !591)
!17347 = distinct !DILexicalBlock(scope: !17336, file: !1447, line: 401, column: 5)
!17348 = !DILocation(line: 402, column: 21, scope: !17347)
!17349 = !DILocalVariable(name: "esc", scope: !17347, file: !1447, line: 403, type: !591)
!17350 = !DILocation(line: 403, column: 21, scope: !17347)
!17351 = !DILocalVariable(name: "is_right_quote", scope: !17347, file: !1447, line: 404, type: !141)
!17352 = !DILocation(line: 404, column: 12, scope: !17347)
!17353 = !DILocalVariable(name: "escaping", scope: !17347, file: !1447, line: 405, type: !141)
!17354 = !DILocation(line: 405, column: 12, scope: !17347)
!17355 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !17347, file: !1447, line: 406, type: !141)
!17356 = !DILocation(line: 406, column: 12, scope: !17347)
!17357 = !DILocation(line: 408, column: 11, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 408, column: 11)
!17359 = !DILocation(line: 409, column: 11, scope: !17358)
!17360 = !DILocation(line: 409, column: 14, scope: !17358)
!17361 = !DILocation(line: 409, column: 28, scope: !17358)
!17362 = !DILocation(line: 410, column: 11, scope: !17358)
!17363 = !DILocation(line: 410, column: 14, scope: !17358)
!17364 = !DILocation(line: 411, column: 11, scope: !17358)
!17365 = !DILocation(line: 411, column: 15, scope: !17358)
!17366 = !DILocation(line: 411, column: 19, scope: !17358)
!17367 = !DILocation(line: 411, column: 17, scope: !17358)
!17368 = !DILocation(line: 412, column: 19, scope: !17358)
!17369 = !DILocation(line: 412, column: 27, scope: !17358)
!17370 = !DILocation(line: 412, column: 39, scope: !17358)
!17371 = !DILocation(line: 412, column: 46, scope: !17358)
!17372 = !DILocation(line: 412, column: 44, scope: !17358)
!17373 = !DILocation(line: 416, column: 40, scope: !17358)
!17374 = !DILocation(line: 416, column: 32, scope: !17358)
!17375 = !DILocation(line: 416, column: 30, scope: !17358)
!17376 = !DILocation(line: 416, column: 48, scope: !17358)
!17377 = !DILocation(line: 412, column: 15, scope: !17358)
!17378 = !DILocation(line: 417, column: 11, scope: !17358)
!17379 = !DILocation(line: 417, column: 22, scope: !17358)
!17380 = !DILocation(line: 417, column: 28, scope: !17358)
!17381 = !DILocation(line: 417, column: 26, scope: !17358)
!17382 = !DILocation(line: 417, column: 31, scope: !17358)
!17383 = !DILocation(line: 417, column: 45, scope: !17358)
!17384 = !DILocation(line: 417, column: 14, scope: !17358)
!17385 = !DILocation(line: 417, column: 63, scope: !17358)
!17386 = !DILocation(line: 408, column: 11, scope: !17347)
!17387 = !DILocation(line: 419, column: 15, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17389, file: !1447, line: 419, column: 15)
!17389 = distinct !DILexicalBlock(scope: !17358, file: !1447, line: 418, column: 9)
!17390 = !DILocation(line: 419, column: 15, scope: !17389)
!17391 = !DILocation(line: 420, column: 13, scope: !17388)
!17392 = !DILocation(line: 421, column: 26, scope: !17389)
!17393 = !DILocation(line: 422, column: 9, scope: !17389)
!17394 = !DILocation(line: 424, column: 11, scope: !17347)
!17395 = !DILocation(line: 424, column: 15, scope: !17347)
!17396 = !DILocation(line: 424, column: 9, scope: !17347)
!17397 = !DILocation(line: 425, column: 15, scope: !17347)
!17398 = !DILocation(line: 425, column: 7, scope: !17347)
!17399 = !DILocation(line: 428, column: 15, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 428, column: 15)
!17401 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 426, column: 9)
!17402 = !DILocation(line: 428, column: 15, scope: !17401)
!17403 = !DILocation(line: 430, column: 15, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17400, file: !1447, line: 429, column: 13)
!17405 = !DILocation(line: 430, column: 15, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17407, file: !1447, line: 430, column: 15)
!17407 = distinct !DILexicalBlock(scope: !17404, file: !1447, line: 430, column: 15)
!17408 = !DILocation(line: 430, column: 15, scope: !17407)
!17409 = !DILocation(line: 430, column: 15, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17407, file: !1447, line: 430, column: 15)
!17411 = !DILocation(line: 430, column: 15, scope: !17412)
!17412 = distinct !DILexicalBlock(scope: !17410, file: !1447, line: 430, column: 15)
!17413 = !DILocation(line: 430, column: 15, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17415, file: !1447, line: 430, column: 15)
!17415 = distinct !DILexicalBlock(scope: !17412, file: !1447, line: 430, column: 15)
!17416 = !DILocation(line: 430, column: 15, scope: !17415)
!17417 = !DILocation(line: 430, column: 15, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17419, file: !1447, line: 430, column: 15)
!17419 = distinct !DILexicalBlock(scope: !17412, file: !1447, line: 430, column: 15)
!17420 = !DILocation(line: 430, column: 15, scope: !17419)
!17421 = !DILocation(line: 430, column: 15, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !1447, line: 430, column: 15)
!17423 = distinct !DILexicalBlock(scope: !17412, file: !1447, line: 430, column: 15)
!17424 = !DILocation(line: 430, column: 15, scope: !17423)
!17425 = !DILocation(line: 430, column: 15, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17427, file: !1447, line: 430, column: 15)
!17427 = distinct !DILexicalBlock(scope: !17407, file: !1447, line: 430, column: 15)
!17428 = !DILocation(line: 430, column: 15, scope: !17427)
!17429 = !DILocation(line: 437, column: 19, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17404, file: !1447, line: 437, column: 19)
!17431 = !DILocation(line: 437, column: 33, scope: !17430)
!17432 = !DILocation(line: 438, column: 19, scope: !17430)
!17433 = !DILocation(line: 438, column: 22, scope: !17430)
!17434 = !DILocation(line: 438, column: 24, scope: !17430)
!17435 = !DILocation(line: 438, column: 30, scope: !17430)
!17436 = !DILocation(line: 438, column: 28, scope: !17430)
!17437 = !DILocation(line: 438, column: 38, scope: !17430)
!17438 = !DILocation(line: 438, column: 48, scope: !17430)
!17439 = !DILocation(line: 438, column: 52, scope: !17430)
!17440 = !DILocation(line: 438, column: 54, scope: !17430)
!17441 = !DILocation(line: 438, column: 45, scope: !17430)
!17442 = !DILocation(line: 438, column: 59, scope: !17430)
!17443 = !DILocation(line: 438, column: 62, scope: !17430)
!17444 = !DILocation(line: 438, column: 66, scope: !17430)
!17445 = !DILocation(line: 438, column: 68, scope: !17430)
!17446 = !DILocation(line: 438, column: 73, scope: !17430)
!17447 = !DILocation(line: 437, column: 19, scope: !17404)
!17448 = !DILocation(line: 440, column: 19, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17430, file: !1447, line: 439, column: 17)
!17450 = !DILocation(line: 440, column: 19, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17452, file: !1447, line: 440, column: 19)
!17452 = distinct !DILexicalBlock(scope: !17449, file: !1447, line: 440, column: 19)
!17453 = !DILocation(line: 440, column: 19, scope: !17452)
!17454 = !DILocation(line: 441, column: 19, scope: !17449)
!17455 = !DILocation(line: 441, column: 19, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17457, file: !1447, line: 441, column: 19)
!17457 = distinct !DILexicalBlock(scope: !17449, file: !1447, line: 441, column: 19)
!17458 = !DILocation(line: 441, column: 19, scope: !17457)
!17459 = !DILocation(line: 442, column: 17, scope: !17449)
!17460 = !DILocation(line: 443, column: 17, scope: !17404)
!17461 = !DILocation(line: 448, column: 13, scope: !17404)
!17462 = !DILocation(line: 449, column: 20, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17400, file: !1447, line: 449, column: 20)
!17464 = !DILocation(line: 449, column: 26, scope: !17463)
!17465 = !DILocation(line: 449, column: 20, scope: !17400)
!17466 = !DILocation(line: 450, column: 13, scope: !17463)
!17467 = !DILocation(line: 451, column: 11, scope: !17401)
!17468 = !DILocation(line: 454, column: 19, scope: !17401)
!17469 = !DILocation(line: 454, column: 11, scope: !17401)
!17470 = !DILocation(line: 457, column: 19, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17472, file: !1447, line: 457, column: 19)
!17472 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 455, column: 13)
!17473 = !DILocation(line: 457, column: 19, scope: !17472)
!17474 = !DILocation(line: 458, column: 17, scope: !17471)
!17475 = !DILocation(line: 459, column: 15, scope: !17472)
!17476 = !DILocation(line: 462, column: 20, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17472, file: !1447, line: 462, column: 19)
!17478 = !DILocation(line: 462, column: 26, scope: !17477)
!17479 = !DILocation(line: 463, column: 19, scope: !17477)
!17480 = !DILocation(line: 463, column: 22, scope: !17477)
!17481 = !DILocation(line: 463, column: 24, scope: !17477)
!17482 = !DILocation(line: 463, column: 30, scope: !17477)
!17483 = !DILocation(line: 463, column: 28, scope: !17477)
!17484 = !DILocation(line: 463, column: 38, scope: !17477)
!17485 = !DILocation(line: 463, column: 41, scope: !17477)
!17486 = !DILocation(line: 463, column: 45, scope: !17477)
!17487 = !DILocation(line: 463, column: 47, scope: !17477)
!17488 = !DILocation(line: 463, column: 52, scope: !17477)
!17489 = !DILocation(line: 462, column: 19, scope: !17472)
!17490 = !DILocation(line: 464, column: 25, scope: !17477)
!17491 = !DILocation(line: 464, column: 29, scope: !17477)
!17492 = !DILocation(line: 464, column: 31, scope: !17477)
!17493 = !DILocation(line: 464, column: 17, scope: !17477)
!17494 = !DILocation(line: 471, column: 25, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17496, file: !1447, line: 471, column: 25)
!17496 = distinct !DILexicalBlock(scope: !17477, file: !1447, line: 465, column: 19)
!17497 = !DILocation(line: 471, column: 25, scope: !17496)
!17498 = !DILocation(line: 472, column: 23, scope: !17495)
!17499 = !DILocation(line: 473, column: 25, scope: !17496)
!17500 = !DILocation(line: 473, column: 29, scope: !17496)
!17501 = !DILocation(line: 473, column: 31, scope: !17496)
!17502 = !DILocation(line: 473, column: 23, scope: !17496)
!17503 = !DILocation(line: 474, column: 23, scope: !17496)
!17504 = !DILocation(line: 475, column: 21, scope: !17496)
!17505 = !DILocation(line: 475, column: 21, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17507, file: !1447, line: 475, column: 21)
!17507 = distinct !DILexicalBlock(scope: !17496, file: !1447, line: 475, column: 21)
!17508 = !DILocation(line: 475, column: 21, scope: !17507)
!17509 = !DILocation(line: 476, column: 21, scope: !17496)
!17510 = !DILocation(line: 476, column: 21, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17512, file: !1447, line: 476, column: 21)
!17512 = distinct !DILexicalBlock(scope: !17496, file: !1447, line: 476, column: 21)
!17513 = !DILocation(line: 476, column: 21, scope: !17512)
!17514 = !DILocation(line: 477, column: 21, scope: !17496)
!17515 = !DILocation(line: 477, column: 21, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17517, file: !1447, line: 477, column: 21)
!17517 = distinct !DILexicalBlock(scope: !17496, file: !1447, line: 477, column: 21)
!17518 = !DILocation(line: 477, column: 21, scope: !17517)
!17519 = !DILocation(line: 478, column: 21, scope: !17496)
!17520 = !DILocation(line: 478, column: 21, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17522, file: !1447, line: 478, column: 21)
!17522 = distinct !DILexicalBlock(scope: !17496, file: !1447, line: 478, column: 21)
!17523 = !DILocation(line: 478, column: 21, scope: !17522)
!17524 = !DILocation(line: 479, column: 21, scope: !17496)
!17525 = !DILocation(line: 482, column: 21, scope: !17496)
!17526 = !DILocation(line: 483, column: 19, scope: !17496)
!17527 = !DILocation(line: 484, column: 15, scope: !17472)
!17528 = !DILocation(line: 487, column: 15, scope: !17472)
!17529 = !DILocation(line: 489, column: 11, scope: !17401)
!17530 = !DILocation(line: 491, column: 24, scope: !17401)
!17531 = !DILocation(line: 491, column: 31, scope: !17401)
!17532 = !DILocation(line: 492, column: 24, scope: !17401)
!17533 = !DILocation(line: 492, column: 31, scope: !17401)
!17534 = !DILocation(line: 493, column: 24, scope: !17401)
!17535 = !DILocation(line: 493, column: 31, scope: !17401)
!17536 = !DILocation(line: 494, column: 24, scope: !17401)
!17537 = !DILocation(line: 494, column: 31, scope: !17401)
!17538 = !DILocation(line: 495, column: 24, scope: !17401)
!17539 = !DILocation(line: 495, column: 31, scope: !17401)
!17540 = !DILocation(line: 496, column: 24, scope: !17401)
!17541 = !DILocation(line: 496, column: 31, scope: !17401)
!17542 = !DILocation(line: 497, column: 24, scope: !17401)
!17543 = !DILocation(line: 497, column: 31, scope: !17401)
!17544 = !DILocation(line: 498, column: 26, scope: !17401)
!17545 = !DILocation(line: 498, column: 24, scope: !17401)
!17546 = !DILocation(line: 500, column: 15, scope: !17547)
!17547 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 500, column: 15)
!17548 = !DILocation(line: 500, column: 29, scope: !17547)
!17549 = !DILocation(line: 500, column: 15, scope: !17401)
!17550 = !DILocation(line: 502, column: 19, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17552, file: !1447, line: 502, column: 19)
!17552 = distinct !DILexicalBlock(scope: !17547, file: !1447, line: 501, column: 13)
!17553 = !DILocation(line: 502, column: 19, scope: !17552)
!17554 = !DILocation(line: 503, column: 17, scope: !17551)
!17555 = !DILocation(line: 504, column: 15, scope: !17552)
!17556 = !DILocation(line: 509, column: 15, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 509, column: 15)
!17558 = !DILocation(line: 509, column: 33, scope: !17557)
!17559 = !DILocation(line: 509, column: 36, scope: !17557)
!17560 = !DILocation(line: 509, column: 55, scope: !17557)
!17561 = !DILocation(line: 509, column: 58, scope: !17557)
!17562 = !DILocation(line: 509, column: 15, scope: !17401)
!17563 = !DILocation(line: 510, column: 13, scope: !17557)
!17564 = !DILabel(scope: !17401, name: "c_and_shell_escape", file: !1447, line: 512)
!17565 = !DILocation(line: 512, column: 9, scope: !17401)
!17566 = !DILocation(line: 513, column: 15, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 513, column: 15)
!17568 = !DILocation(line: 513, column: 29, scope: !17567)
!17569 = !DILocation(line: 514, column: 15, scope: !17567)
!17570 = !DILocation(line: 514, column: 18, scope: !17567)
!17571 = !DILocation(line: 513, column: 15, scope: !17401)
!17572 = !DILocation(line: 515, column: 13, scope: !17567)
!17573 = !DILabel(scope: !17401, name: "c_escape", file: !1447, line: 517)
!17574 = !DILocation(line: 517, column: 9, scope: !17401)
!17575 = !DILocation(line: 518, column: 15, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 518, column: 15)
!17577 = !DILocation(line: 518, column: 15, scope: !17401)
!17578 = !DILocation(line: 520, column: 19, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17576, file: !1447, line: 519, column: 13)
!17580 = !DILocation(line: 520, column: 17, scope: !17579)
!17581 = !DILocation(line: 521, column: 15, scope: !17579)
!17582 = !DILocation(line: 523, column: 11, scope: !17401)
!17583 = !DILocation(line: 526, column: 18, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 526, column: 15)
!17585 = !DILocation(line: 526, column: 26, scope: !17584)
!17586 = !DILocation(line: 526, column: 15, scope: !17401)
!17587 = !DILocation(line: 526, column: 40, scope: !17584)
!17588 = !DILocation(line: 526, column: 47, scope: !17584)
!17589 = !DILocation(line: 526, column: 57, scope: !17584)
!17590 = !DILocation(line: 526, column: 65, scope: !17584)
!17591 = !DILocation(line: 527, column: 13, scope: !17584)
!17592 = !DILocation(line: 528, column: 11, scope: !17401)
!17593 = !DILocation(line: 530, column: 15, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 530, column: 15)
!17595 = !DILocation(line: 530, column: 17, scope: !17594)
!17596 = !DILocation(line: 530, column: 15, scope: !17401)
!17597 = !DILocation(line: 531, column: 13, scope: !17594)
!17598 = !DILocation(line: 532, column: 11, scope: !17401)
!17599 = !DILocation(line: 534, column: 36, scope: !17401)
!17600 = !DILocation(line: 535, column: 11, scope: !17401)
!17601 = !DILocation(line: 548, column: 15, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 548, column: 15)
!17603 = !DILocation(line: 548, column: 29, scope: !17602)
!17604 = !DILocation(line: 549, column: 15, scope: !17602)
!17605 = !DILocation(line: 549, column: 18, scope: !17602)
!17606 = !DILocation(line: 548, column: 15, scope: !17401)
!17607 = !DILocation(line: 550, column: 13, scope: !17602)
!17608 = !DILocation(line: 551, column: 11, scope: !17401)
!17609 = !DILocation(line: 554, column: 36, scope: !17401)
!17610 = !DILocation(line: 555, column: 36, scope: !17401)
!17611 = !DILocation(line: 556, column: 15, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 556, column: 15)
!17613 = !DILocation(line: 556, column: 29, scope: !17612)
!17614 = !DILocation(line: 556, column: 15, scope: !17401)
!17615 = !DILocation(line: 558, column: 19, scope: !17616)
!17616 = distinct !DILexicalBlock(scope: !17617, file: !1447, line: 558, column: 19)
!17617 = distinct !DILexicalBlock(scope: !17612, file: !1447, line: 557, column: 13)
!17618 = !DILocation(line: 558, column: 19, scope: !17617)
!17619 = !DILocation(line: 559, column: 17, scope: !17616)
!17620 = !DILocation(line: 561, column: 19, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17617, file: !1447, line: 561, column: 19)
!17622 = !DILocation(line: 561, column: 30, scope: !17621)
!17623 = !DILocation(line: 561, column: 35, scope: !17621)
!17624 = !DILocation(line: 561, column: 19, scope: !17617)
!17625 = !DILocation(line: 566, column: 37, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17621, file: !1447, line: 562, column: 17)
!17627 = !DILocation(line: 566, column: 35, scope: !17626)
!17628 = !DILocation(line: 567, column: 30, scope: !17626)
!17629 = !DILocation(line: 568, column: 17, scope: !17626)
!17630 = !DILocation(line: 570, column: 15, scope: !17617)
!17631 = !DILocation(line: 570, column: 15, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17633, file: !1447, line: 570, column: 15)
!17633 = distinct !DILexicalBlock(scope: !17617, file: !1447, line: 570, column: 15)
!17634 = !DILocation(line: 570, column: 15, scope: !17633)
!17635 = !DILocation(line: 571, column: 15, scope: !17617)
!17636 = !DILocation(line: 571, column: 15, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17638, file: !1447, line: 571, column: 15)
!17638 = distinct !DILexicalBlock(scope: !17617, file: !1447, line: 571, column: 15)
!17639 = !DILocation(line: 571, column: 15, scope: !17638)
!17640 = !DILocation(line: 572, column: 15, scope: !17617)
!17641 = !DILocation(line: 572, column: 15, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17643, file: !1447, line: 572, column: 15)
!17643 = distinct !DILexicalBlock(scope: !17617, file: !1447, line: 572, column: 15)
!17644 = !DILocation(line: 572, column: 15, scope: !17643)
!17645 = !DILocation(line: 573, column: 40, scope: !17617)
!17646 = !DILocation(line: 574, column: 13, scope: !17617)
!17647 = !DILocation(line: 575, column: 11, scope: !17401)
!17648 = !DILocation(line: 599, column: 36, scope: !17401)
!17649 = !DILocation(line: 600, column: 11, scope: !17401)
!17650 = !DILocalVariable(name: "m", scope: !17651, file: !1447, line: 610, type: !149)
!17651 = distinct !DILexicalBlock(scope: !17401, file: !1447, line: 608, column: 11)
!17652 = !DILocation(line: 610, column: 20, scope: !17651)
!17653 = !DILocalVariable(name: "printable", scope: !17651, file: !1447, line: 612, type: !141)
!17654 = !DILocation(line: 612, column: 18, scope: !17651)
!17655 = !DILocation(line: 614, column: 17, scope: !17656)
!17656 = distinct !DILexicalBlock(scope: !17651, file: !1447, line: 614, column: 17)
!17657 = !DILocation(line: 614, column: 17, scope: !17651)
!17658 = !DILocation(line: 616, column: 19, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17656, file: !1447, line: 615, column: 15)
!17660 = !DILocation(line: 617, column: 29, scope: !17659)
!17661 = !DILocation(line: 617, column: 41, scope: !17659)
!17662 = !DILocation(line: 617, column: 27, scope: !17659)
!17663 = !DILocation(line: 618, column: 15, scope: !17659)
!17664 = !DILocalVariable(name: "mbstate", scope: !17665, file: !1447, line: 621, type: !1515)
!17665 = distinct !DILexicalBlock(scope: !17656, file: !1447, line: 620, column: 15)
!17666 = !DILocation(line: 621, column: 27, scope: !17665)
!17667 = !DILocation(line: 622, column: 17, scope: !17665)
!17668 = !DILocation(line: 624, column: 19, scope: !17665)
!17669 = !DILocation(line: 625, column: 27, scope: !17665)
!17670 = !DILocation(line: 626, column: 21, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17665, file: !1447, line: 626, column: 21)
!17672 = !DILocation(line: 626, column: 29, scope: !17671)
!17673 = !DILocation(line: 626, column: 21, scope: !17665)
!17674 = !DILocation(line: 627, column: 37, scope: !17671)
!17675 = !DILocation(line: 627, column: 29, scope: !17671)
!17676 = !DILocation(line: 627, column: 27, scope: !17671)
!17677 = !DILocation(line: 627, column: 19, scope: !17671)
!17678 = !DILocation(line: 629, column: 17, scope: !17665)
!17679 = !DILocalVariable(name: "w", scope: !17680, file: !1447, line: 631, type: !654)
!17680 = distinct !DILexicalBlock(scope: !17665, file: !1447, line: 630, column: 19)
!17681 = !DILocation(line: 631, column: 29, scope: !17680)
!17682 = !DILocalVariable(name: "bytes", scope: !17680, file: !1447, line: 632, type: !149)
!17683 = !DILocation(line: 632, column: 28, scope: !17680)
!17684 = !DILocation(line: 632, column: 50, scope: !17680)
!17685 = !DILocation(line: 632, column: 54, scope: !17680)
!17686 = !DILocation(line: 632, column: 58, scope: !17680)
!17687 = !DILocation(line: 632, column: 56, scope: !17680)
!17688 = !DILocation(line: 633, column: 45, scope: !17680)
!17689 = !DILocation(line: 633, column: 56, scope: !17680)
!17690 = !DILocation(line: 633, column: 60, scope: !17680)
!17691 = !DILocation(line: 633, column: 58, scope: !17680)
!17692 = !DILocation(line: 633, column: 53, scope: !17680)
!17693 = !DILocation(line: 632, column: 36, scope: !17680)
!17694 = !DILocation(line: 634, column: 25, scope: !17695)
!17695 = distinct !DILexicalBlock(scope: !17680, file: !1447, line: 634, column: 25)
!17696 = !DILocation(line: 634, column: 31, scope: !17695)
!17697 = !DILocation(line: 634, column: 25, scope: !17680)
!17698 = !DILocation(line: 635, column: 23, scope: !17695)
!17699 = !DILocation(line: 636, column: 30, scope: !17700)
!17700 = distinct !DILexicalBlock(scope: !17695, file: !1447, line: 636, column: 30)
!17701 = !DILocation(line: 636, column: 36, scope: !17700)
!17702 = !DILocation(line: 636, column: 30, scope: !17695)
!17703 = !DILocation(line: 638, column: 35, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !17700, file: !1447, line: 637, column: 23)
!17705 = !DILocation(line: 639, column: 25, scope: !17704)
!17706 = !DILocation(line: 641, column: 30, scope: !17707)
!17707 = distinct !DILexicalBlock(scope: !17700, file: !1447, line: 641, column: 30)
!17708 = !DILocation(line: 641, column: 36, scope: !17707)
!17709 = !DILocation(line: 641, column: 30, scope: !17700)
!17710 = !DILocation(line: 643, column: 35, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17707, file: !1447, line: 642, column: 23)
!17712 = !DILocation(line: 644, column: 25, scope: !17711)
!17713 = !DILocation(line: 644, column: 32, scope: !17711)
!17714 = !DILocation(line: 644, column: 36, scope: !17711)
!17715 = !DILocation(line: 644, column: 34, scope: !17711)
!17716 = !DILocation(line: 644, column: 40, scope: !17711)
!17717 = !DILocation(line: 644, column: 38, scope: !17711)
!17718 = !DILocation(line: 644, column: 48, scope: !17711)
!17719 = !DILocation(line: 644, column: 51, scope: !17711)
!17720 = !DILocation(line: 644, column: 55, scope: !17711)
!17721 = !DILocation(line: 644, column: 59, scope: !17711)
!17722 = !DILocation(line: 644, column: 57, scope: !17711)
!17723 = !DILocation(line: 0, scope: !17711)
!17724 = !DILocation(line: 645, column: 28, scope: !17711)
!17725 = distinct !{!17725, !17712, !17724}
!17726 = !DILocation(line: 646, column: 25, scope: !17711)
!17727 = !DILocation(line: 654, column: 44, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17729, file: !1447, line: 654, column: 29)
!17729 = distinct !DILexicalBlock(scope: !17707, file: !1447, line: 649, column: 23)
!17730 = !DILocation(line: 655, column: 29, scope: !17728)
!17731 = !DILocation(line: 655, column: 32, scope: !17728)
!17732 = !DILocation(line: 655, column: 46, scope: !17728)
!17733 = !DILocation(line: 654, column: 29, scope: !17729)
!17734 = !DILocalVariable(name: "j", scope: !17735, file: !1447, line: 657, type: !149)
!17735 = distinct !DILexicalBlock(scope: !17728, file: !1447, line: 656, column: 27)
!17736 = !DILocation(line: 657, column: 36, scope: !17735)
!17737 = !DILocation(line: 658, column: 36, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17735, file: !1447, line: 658, column: 29)
!17739 = !DILocation(line: 658, column: 34, scope: !17738)
!17740 = !DILocation(line: 658, column: 41, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17738, file: !1447, line: 658, column: 29)
!17742 = !DILocation(line: 658, column: 45, scope: !17741)
!17743 = !DILocation(line: 658, column: 43, scope: !17741)
!17744 = !DILocation(line: 658, column: 29, scope: !17738)
!17745 = !DILocation(line: 659, column: 39, scope: !17741)
!17746 = !DILocation(line: 659, column: 43, scope: !17741)
!17747 = !DILocation(line: 659, column: 47, scope: !17741)
!17748 = !DILocation(line: 659, column: 45, scope: !17741)
!17749 = !DILocation(line: 659, column: 51, scope: !17741)
!17750 = !DILocation(line: 659, column: 49, scope: !17741)
!17751 = !DILocation(line: 659, column: 31, scope: !17741)
!17752 = !DILocation(line: 663, column: 35, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17741, file: !1447, line: 660, column: 33)
!17754 = !DILocation(line: 666, column: 35, scope: !17753)
!17755 = !DILocation(line: 667, column: 33, scope: !17753)
!17756 = !DILocation(line: 658, column: 53, scope: !17741)
!17757 = !DILocation(line: 658, column: 29, scope: !17741)
!17758 = distinct !{!17758, !17744, !17759}
!17759 = !DILocation(line: 667, column: 33, scope: !17738)
!17760 = !DILocation(line: 668, column: 27, scope: !17735)
!17761 = !DILocation(line: 670, column: 41, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17729, file: !1447, line: 670, column: 29)
!17763 = !DILocation(line: 670, column: 31, scope: !17762)
!17764 = !DILocation(line: 670, column: 29, scope: !17729)
!17765 = !DILocation(line: 671, column: 37, scope: !17762)
!17766 = !DILocation(line: 671, column: 27, scope: !17762)
!17767 = !DILocation(line: 672, column: 30, scope: !17729)
!17768 = !DILocation(line: 672, column: 27, scope: !17729)
!17769 = !DILocation(line: 674, column: 19, scope: !17680)
!17770 = !DILocation(line: 675, column: 26, scope: !17665)
!17771 = !DILocation(line: 675, column: 24, scope: !17665)
!17772 = distinct !{!17772, !17678, !17773}
!17773 = !DILocation(line: 675, column: 44, scope: !17665)
!17774 = !DILocation(line: 678, column: 40, scope: !17651)
!17775 = !DILocation(line: 678, column: 38, scope: !17651)
!17776 = !DILocation(line: 680, column: 21, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17651, file: !1447, line: 680, column: 17)
!17778 = !DILocation(line: 680, column: 19, scope: !17777)
!17779 = !DILocation(line: 680, column: 23, scope: !17777)
!17780 = !DILocation(line: 680, column: 27, scope: !17777)
!17781 = !DILocation(line: 680, column: 45, scope: !17777)
!17782 = !DILocation(line: 680, column: 50, scope: !17777)
!17783 = !DILocation(line: 680, column: 17, scope: !17651)
!17784 = !DILocalVariable(name: "ilim", scope: !17785, file: !1447, line: 684, type: !149)
!17785 = distinct !DILexicalBlock(scope: !17777, file: !1447, line: 681, column: 15)
!17786 = !DILocation(line: 684, column: 24, scope: !17785)
!17787 = !DILocation(line: 684, column: 31, scope: !17785)
!17788 = !DILocation(line: 684, column: 35, scope: !17785)
!17789 = !DILocation(line: 684, column: 33, scope: !17785)
!17790 = !DILocation(line: 686, column: 17, scope: !17785)
!17791 = !DILocation(line: 688, column: 25, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17793, file: !1447, line: 688, column: 25)
!17793 = distinct !DILexicalBlock(scope: !17794, file: !1447, line: 687, column: 19)
!17794 = distinct !DILexicalBlock(scope: !17795, file: !1447, line: 686, column: 17)
!17795 = distinct !DILexicalBlock(scope: !17785, file: !1447, line: 686, column: 17)
!17796 = !DILocation(line: 688, column: 43, scope: !17792)
!17797 = !DILocation(line: 688, column: 48, scope: !17792)
!17798 = !DILocation(line: 688, column: 25, scope: !17793)
!17799 = !DILocation(line: 690, column: 25, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17792, file: !1447, line: 689, column: 23)
!17801 = !DILocation(line: 690, column: 25, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17803, file: !1447, line: 690, column: 25)
!17803 = distinct !DILexicalBlock(scope: !17800, file: !1447, line: 690, column: 25)
!17804 = !DILocation(line: 690, column: 25, scope: !17803)
!17805 = !DILocation(line: 690, column: 25, scope: !17806)
!17806 = distinct !DILexicalBlock(scope: !17803, file: !1447, line: 690, column: 25)
!17807 = !DILocation(line: 690, column: 25, scope: !17808)
!17808 = distinct !DILexicalBlock(scope: !17806, file: !1447, line: 690, column: 25)
!17809 = !DILocation(line: 690, column: 25, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17811, file: !1447, line: 690, column: 25)
!17811 = distinct !DILexicalBlock(scope: !17808, file: !1447, line: 690, column: 25)
!17812 = !DILocation(line: 690, column: 25, scope: !17811)
!17813 = !DILocation(line: 690, column: 25, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17815, file: !1447, line: 690, column: 25)
!17815 = distinct !DILexicalBlock(scope: !17808, file: !1447, line: 690, column: 25)
!17816 = !DILocation(line: 690, column: 25, scope: !17815)
!17817 = !DILocation(line: 690, column: 25, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17819, file: !1447, line: 690, column: 25)
!17819 = distinct !DILexicalBlock(scope: !17808, file: !1447, line: 690, column: 25)
!17820 = !DILocation(line: 690, column: 25, scope: !17819)
!17821 = !DILocation(line: 690, column: 25, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17823, file: !1447, line: 690, column: 25)
!17823 = distinct !DILexicalBlock(scope: !17803, file: !1447, line: 690, column: 25)
!17824 = !DILocation(line: 690, column: 25, scope: !17823)
!17825 = !DILocation(line: 691, column: 25, scope: !17800)
!17826 = !DILocation(line: 691, column: 25, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17828, file: !1447, line: 691, column: 25)
!17828 = distinct !DILexicalBlock(scope: !17800, file: !1447, line: 691, column: 25)
!17829 = !DILocation(line: 691, column: 25, scope: !17828)
!17830 = !DILocation(line: 692, column: 25, scope: !17800)
!17831 = !DILocation(line: 692, column: 25, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17833, file: !1447, line: 692, column: 25)
!17833 = distinct !DILexicalBlock(scope: !17800, file: !1447, line: 692, column: 25)
!17834 = !DILocation(line: 692, column: 25, scope: !17833)
!17835 = !DILocation(line: 693, column: 36, scope: !17800)
!17836 = !DILocation(line: 693, column: 38, scope: !17800)
!17837 = !DILocation(line: 693, column: 33, scope: !17800)
!17838 = !DILocation(line: 693, column: 29, scope: !17800)
!17839 = !DILocation(line: 693, column: 27, scope: !17800)
!17840 = !DILocation(line: 694, column: 23, scope: !17800)
!17841 = !DILocation(line: 695, column: 30, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17792, file: !1447, line: 695, column: 30)
!17843 = !DILocation(line: 695, column: 30, scope: !17792)
!17844 = !DILocation(line: 697, column: 25, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17842, file: !1447, line: 696, column: 23)
!17846 = !DILocation(line: 697, column: 25, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17848, file: !1447, line: 697, column: 25)
!17848 = distinct !DILexicalBlock(scope: !17845, file: !1447, line: 697, column: 25)
!17849 = !DILocation(line: 697, column: 25, scope: !17848)
!17850 = !DILocation(line: 698, column: 40, scope: !17845)
!17851 = !DILocation(line: 699, column: 23, scope: !17845)
!17852 = !DILocation(line: 700, column: 25, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17793, file: !1447, line: 700, column: 25)
!17854 = !DILocation(line: 700, column: 33, scope: !17853)
!17855 = !DILocation(line: 700, column: 35, scope: !17853)
!17856 = !DILocation(line: 700, column: 30, scope: !17853)
!17857 = !DILocation(line: 700, column: 25, scope: !17793)
!17858 = !DILocation(line: 701, column: 23, scope: !17853)
!17859 = !DILocation(line: 702, column: 21, scope: !17793)
!17860 = !DILocation(line: 702, column: 21, scope: !17861)
!17861 = distinct !DILexicalBlock(scope: !17862, file: !1447, line: 702, column: 21)
!17862 = distinct !DILexicalBlock(scope: !17793, file: !1447, line: 702, column: 21)
!17863 = !DILocation(line: 702, column: 21, scope: !17862)
!17864 = !DILocation(line: 702, column: 21, scope: !17865)
!17865 = distinct !DILexicalBlock(scope: !17861, file: !1447, line: 702, column: 21)
!17866 = !DILocation(line: 702, column: 21, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17868, file: !1447, line: 702, column: 21)
!17868 = distinct !DILexicalBlock(scope: !17865, file: !1447, line: 702, column: 21)
!17869 = !DILocation(line: 702, column: 21, scope: !17868)
!17870 = !DILocation(line: 702, column: 21, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17872, file: !1447, line: 702, column: 21)
!17872 = distinct !DILexicalBlock(scope: !17865, file: !1447, line: 702, column: 21)
!17873 = !DILocation(line: 702, column: 21, scope: !17872)
!17874 = !DILocation(line: 703, column: 21, scope: !17793)
!17875 = !DILocation(line: 703, column: 21, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17877, file: !1447, line: 703, column: 21)
!17877 = distinct !DILexicalBlock(scope: !17793, file: !1447, line: 703, column: 21)
!17878 = !DILocation(line: 703, column: 21, scope: !17877)
!17879 = !DILocation(line: 704, column: 25, scope: !17793)
!17880 = !DILocation(line: 704, column: 29, scope: !17793)
!17881 = !DILocation(line: 704, column: 23, scope: !17793)
!17882 = !DILocation(line: 686, column: 17, scope: !17794)
!17883 = distinct !{!17883, !17884, !17885}
!17884 = !DILocation(line: 686, column: 17, scope: !17795)
!17885 = !DILocation(line: 705, column: 19, scope: !17795)
!17886 = !DILocation(line: 707, column: 17, scope: !17785)
!17887 = !DILocation(line: 710, column: 9, scope: !17401)
!17888 = !DILocation(line: 712, column: 16, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 712, column: 11)
!17890 = !DILocation(line: 712, column: 34, scope: !17889)
!17891 = !DILocation(line: 712, column: 37, scope: !17889)
!17892 = !DILocation(line: 712, column: 51, scope: !17889)
!17893 = !DILocation(line: 713, column: 15, scope: !17889)
!17894 = !DILocation(line: 713, column: 18, scope: !17889)
!17895 = !DILocation(line: 714, column: 14, scope: !17889)
!17896 = !DILocation(line: 714, column: 17, scope: !17889)
!17897 = !DILocation(line: 715, column: 14, scope: !17889)
!17898 = !DILocation(line: 715, column: 17, scope: !17889)
!17899 = !DILocation(line: 715, column: 33, scope: !17889)
!17900 = !DILocation(line: 715, column: 35, scope: !17889)
!17901 = !DILocation(line: 715, column: 51, scope: !17889)
!17902 = !DILocation(line: 715, column: 53, scope: !17889)
!17903 = !DILocation(line: 715, column: 47, scope: !17889)
!17904 = !DILocation(line: 715, column: 65, scope: !17889)
!17905 = !DILocation(line: 716, column: 11, scope: !17889)
!17906 = !DILocation(line: 716, column: 15, scope: !17889)
!17907 = !DILocation(line: 712, column: 11, scope: !17347)
!17908 = !DILocation(line: 717, column: 9, scope: !17889)
!17909 = !DILabel(scope: !17347, name: "store_escape", file: !1447, line: 719)
!17910 = !DILocation(line: 719, column: 5, scope: !17347)
!17911 = !DILocation(line: 720, column: 7, scope: !17347)
!17912 = !DILocation(line: 720, column: 7, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17914, file: !1447, line: 720, column: 7)
!17914 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 720, column: 7)
!17915 = !DILocation(line: 720, column: 7, scope: !17914)
!17916 = !DILocation(line: 720, column: 7, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17914, file: !1447, line: 720, column: 7)
!17918 = !DILocation(line: 720, column: 7, scope: !17919)
!17919 = distinct !DILexicalBlock(scope: !17917, file: !1447, line: 720, column: 7)
!17920 = !DILocation(line: 720, column: 7, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17922, file: !1447, line: 720, column: 7)
!17922 = distinct !DILexicalBlock(scope: !17919, file: !1447, line: 720, column: 7)
!17923 = !DILocation(line: 720, column: 7, scope: !17922)
!17924 = !DILocation(line: 720, column: 7, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17926, file: !1447, line: 720, column: 7)
!17926 = distinct !DILexicalBlock(scope: !17919, file: !1447, line: 720, column: 7)
!17927 = !DILocation(line: 720, column: 7, scope: !17926)
!17928 = !DILocation(line: 720, column: 7, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17930, file: !1447, line: 720, column: 7)
!17930 = distinct !DILexicalBlock(scope: !17919, file: !1447, line: 720, column: 7)
!17931 = !DILocation(line: 720, column: 7, scope: !17930)
!17932 = !DILocation(line: 720, column: 7, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17934, file: !1447, line: 720, column: 7)
!17934 = distinct !DILexicalBlock(scope: !17914, file: !1447, line: 720, column: 7)
!17935 = !DILocation(line: 720, column: 7, scope: !17934)
!17936 = !DILabel(scope: !17347, name: "store_c", file: !1447, line: 722)
!17937 = !DILocation(line: 722, column: 5, scope: !17347)
!17938 = !DILocation(line: 723, column: 7, scope: !17347)
!17939 = !DILocation(line: 723, column: 7, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17941, file: !1447, line: 723, column: 7)
!17941 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 723, column: 7)
!17942 = !DILocation(line: 723, column: 7, scope: !17941)
!17943 = !DILocation(line: 723, column: 7, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17940, file: !1447, line: 723, column: 7)
!17945 = !DILocation(line: 723, column: 7, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17947, file: !1447, line: 723, column: 7)
!17947 = distinct !DILexicalBlock(scope: !17944, file: !1447, line: 723, column: 7)
!17948 = !DILocation(line: 723, column: 7, scope: !17947)
!17949 = !DILocation(line: 723, column: 7, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17951, file: !1447, line: 723, column: 7)
!17951 = distinct !DILexicalBlock(scope: !17944, file: !1447, line: 723, column: 7)
!17952 = !DILocation(line: 723, column: 7, scope: !17951)
!17953 = !DILocation(line: 724, column: 7, scope: !17347)
!17954 = !DILocation(line: 724, column: 7, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17956, file: !1447, line: 724, column: 7)
!17956 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 724, column: 7)
!17957 = !DILocation(line: 724, column: 7, scope: !17956)
!17958 = !DILocation(line: 726, column: 13, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17347, file: !1447, line: 726, column: 11)
!17960 = !DILocation(line: 726, column: 11, scope: !17347)
!17961 = !DILocation(line: 727, column: 38, scope: !17959)
!17962 = !DILocation(line: 727, column: 9, scope: !17959)
!17963 = !DILocation(line: 728, column: 5, scope: !17347)
!17964 = !DILocation(line: 400, column: 75, scope: !17336)
!17965 = !DILocation(line: 400, column: 3, scope: !17336)
!17966 = distinct !{!17966, !17345, !17967}
!17967 = !DILocation(line: 728, column: 5, scope: !17333)
!17968 = !DILocation(line: 730, column: 7, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 730, column: 7)
!17970 = !DILocation(line: 730, column: 11, scope: !17969)
!17971 = !DILocation(line: 730, column: 16, scope: !17969)
!17972 = !DILocation(line: 730, column: 19, scope: !17969)
!17973 = !DILocation(line: 730, column: 33, scope: !17969)
!17974 = !DILocation(line: 731, column: 7, scope: !17969)
!17975 = !DILocation(line: 731, column: 10, scope: !17969)
!17976 = !DILocation(line: 730, column: 7, scope: !17197)
!17977 = !DILocation(line: 732, column: 5, scope: !17969)
!17978 = !DILocation(line: 738, column: 7, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 738, column: 7)
!17980 = !DILocation(line: 738, column: 21, scope: !17979)
!17981 = !DILocation(line: 738, column: 51, scope: !17979)
!17982 = !DILocation(line: 738, column: 56, scope: !17979)
!17983 = !DILocation(line: 739, column: 7, scope: !17979)
!17984 = !DILocation(line: 739, column: 10, scope: !17979)
!17985 = !DILocation(line: 738, column: 7, scope: !17197)
!17986 = !DILocation(line: 741, column: 11, scope: !17987)
!17987 = distinct !DILexicalBlock(scope: !17988, file: !1447, line: 741, column: 11)
!17988 = distinct !DILexicalBlock(scope: !17979, file: !1447, line: 740, column: 5)
!17989 = !DILocation(line: 741, column: 11, scope: !17988)
!17990 = !DILocation(line: 742, column: 42, scope: !17987)
!17991 = !DILocation(line: 742, column: 50, scope: !17987)
!17992 = !DILocation(line: 742, column: 67, scope: !17987)
!17993 = !DILocation(line: 742, column: 72, scope: !17987)
!17994 = !DILocation(line: 744, column: 42, scope: !17987)
!17995 = !DILocation(line: 744, column: 49, scope: !17987)
!17996 = !DILocation(line: 745, column: 42, scope: !17987)
!17997 = !DILocation(line: 745, column: 54, scope: !17987)
!17998 = !DILocation(line: 742, column: 16, scope: !17987)
!17999 = !DILocation(line: 742, column: 9, scope: !17987)
!18000 = !DILocation(line: 746, column: 18, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17987, file: !1447, line: 746, column: 16)
!18002 = !DILocation(line: 746, column: 29, scope: !18001)
!18003 = !DILocation(line: 746, column: 32, scope: !18001)
!18004 = !DILocation(line: 746, column: 16, scope: !17987)
!18005 = !DILocation(line: 749, column: 24, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !18001, file: !1447, line: 747, column: 9)
!18007 = !DILocation(line: 749, column: 22, scope: !18006)
!18008 = !DILocation(line: 750, column: 15, scope: !18006)
!18009 = !DILocation(line: 751, column: 11, scope: !18006)
!18010 = !DILocation(line: 753, column: 5, scope: !17988)
!18011 = !DILocation(line: 755, column: 7, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 755, column: 7)
!18013 = !DILocation(line: 755, column: 20, scope: !18012)
!18014 = !DILocation(line: 755, column: 24, scope: !18012)
!18015 = !DILocation(line: 755, column: 7, scope: !17197)
!18016 = !DILocation(line: 756, column: 5, scope: !18012)
!18017 = !DILocation(line: 756, column: 13, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18019, file: !1447, line: 756, column: 5)
!18019 = distinct !DILexicalBlock(scope: !18012, file: !1447, line: 756, column: 5)
!18020 = !DILocation(line: 756, column: 12, scope: !18018)
!18021 = !DILocation(line: 756, column: 5, scope: !18019)
!18022 = !DILocation(line: 757, column: 7, scope: !18018)
!18023 = !DILocation(line: 757, column: 7, scope: !18024)
!18024 = distinct !DILexicalBlock(scope: !18025, file: !1447, line: 757, column: 7)
!18025 = distinct !DILexicalBlock(scope: !18018, file: !1447, line: 757, column: 7)
!18026 = !DILocation(line: 757, column: 7, scope: !18025)
!18027 = !DILocation(line: 756, column: 39, scope: !18018)
!18028 = !DILocation(line: 756, column: 5, scope: !18018)
!18029 = distinct !{!18029, !18021, !18030}
!18030 = !DILocation(line: 757, column: 7, scope: !18019)
!18031 = !DILocation(line: 759, column: 7, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 759, column: 7)
!18033 = !DILocation(line: 759, column: 13, scope: !18032)
!18034 = !DILocation(line: 759, column: 11, scope: !18032)
!18035 = !DILocation(line: 759, column: 7, scope: !17197)
!18036 = !DILocation(line: 760, column: 5, scope: !18032)
!18037 = !DILocation(line: 760, column: 12, scope: !18032)
!18038 = !DILocation(line: 760, column: 17, scope: !18032)
!18039 = !DILocation(line: 761, column: 10, scope: !17197)
!18040 = !DILocation(line: 761, column: 3, scope: !17197)
!18041 = !DILabel(scope: !17197, name: "force_outer_quoting_style", file: !1447, line: 763)
!18042 = !DILocation(line: 763, column: 2, scope: !17197)
!18043 = !DILocation(line: 766, column: 7, scope: !18044)
!18044 = distinct !DILexicalBlock(scope: !17197, file: !1447, line: 766, column: 7)
!18045 = !DILocation(line: 766, column: 21, scope: !18044)
!18046 = !DILocation(line: 766, column: 51, scope: !18044)
!18047 = !DILocation(line: 766, column: 54, scope: !18044)
!18048 = !DILocation(line: 766, column: 7, scope: !17197)
!18049 = !DILocation(line: 767, column: 19, scope: !18044)
!18050 = !DILocation(line: 767, column: 5, scope: !18044)
!18051 = !DILocation(line: 768, column: 36, scope: !17197)
!18052 = !DILocation(line: 768, column: 44, scope: !17197)
!18053 = !DILocation(line: 768, column: 56, scope: !17197)
!18054 = !DILocation(line: 768, column: 61, scope: !17197)
!18055 = !DILocation(line: 769, column: 36, scope: !17197)
!18056 = !DILocation(line: 770, column: 36, scope: !17197)
!18057 = !DILocation(line: 770, column: 42, scope: !17197)
!18058 = !DILocation(line: 771, column: 36, scope: !17197)
!18059 = !DILocation(line: 771, column: 48, scope: !17197)
!18060 = !DILocation(line: 768, column: 10, scope: !17197)
!18061 = !DILocation(line: 768, column: 3, scope: !17197)
!18062 = !DILocation(line: 772, column: 1, scope: !17197)
!18063 = distinct !DISubprogram(name: "gettext_quote", scope: !1447, file: !1447, line: 207, type: !1525, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18064 = !DILocalVariable(name: "msgid", arg: 1, scope: !18063, file: !1447, line: 207, type: !146)
!18065 = !DILocation(line: 207, column: 28, scope: !18063)
!18066 = !DILocalVariable(name: "s", arg: 2, scope: !18063, file: !1447, line: 207, type: !95)
!18067 = !DILocation(line: 207, column: 54, scope: !18063)
!18068 = !DILocalVariable(name: "translation", scope: !18063, file: !1447, line: 209, type: !146)
!18069 = !DILocation(line: 209, column: 15, scope: !18063)
!18070 = !DILocation(line: 209, column: 29, scope: !18063)
!18071 = !DILocalVariable(name: "locale_code", scope: !18063, file: !1447, line: 210, type: !146)
!18072 = !DILocation(line: 210, column: 15, scope: !18063)
!18073 = !DILocation(line: 212, column: 7, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18063, file: !1447, line: 212, column: 7)
!18075 = !DILocation(line: 212, column: 22, scope: !18074)
!18076 = !DILocation(line: 212, column: 19, scope: !18074)
!18077 = !DILocation(line: 212, column: 7, scope: !18063)
!18078 = !DILocation(line: 213, column: 12, scope: !18074)
!18079 = !DILocation(line: 213, column: 5, scope: !18074)
!18080 = !DILocation(line: 233, column: 17, scope: !18063)
!18081 = !DILocation(line: 233, column: 15, scope: !18063)
!18082 = !DILocation(line: 234, column: 7, scope: !18083)
!18083 = distinct !DILexicalBlock(scope: !18063, file: !1447, line: 234, column: 7)
!18084 = !DILocation(line: 234, column: 7, scope: !18063)
!18085 = !DILocation(line: 235, column: 12, scope: !18083)
!18086 = !DILocation(line: 235, column: 21, scope: !18083)
!18087 = !DILocation(line: 235, column: 5, scope: !18083)
!18088 = !DILocation(line: 236, column: 7, scope: !18089)
!18089 = distinct !DILexicalBlock(scope: !18063, file: !1447, line: 236, column: 7)
!18090 = !DILocation(line: 236, column: 7, scope: !18063)
!18091 = !DILocation(line: 237, column: 12, scope: !18089)
!18092 = !DILocation(line: 237, column: 21, scope: !18089)
!18093 = !DILocation(line: 237, column: 5, scope: !18089)
!18094 = !DILocation(line: 239, column: 11, scope: !18063)
!18095 = !DILocation(line: 239, column: 13, scope: !18063)
!18096 = !DILocation(line: 239, column: 3, scope: !18063)
!18097 = !DILocation(line: 240, column: 1, scope: !18063)
!18098 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1447, file: !1447, line: 799, type: !1470, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18099 = !DILocalVariable(name: "arg", arg: 1, scope: !18098, file: !1447, line: 799, type: !146)
!18100 = !DILocation(line: 799, column: 29, scope: !18098)
!18101 = !DILocalVariable(name: "argsize", arg: 2, scope: !18098, file: !1447, line: 799, type: !149)
!18102 = !DILocation(line: 799, column: 41, scope: !18098)
!18103 = !DILocalVariable(name: "o", arg: 3, scope: !18098, file: !1447, line: 800, type: !1457)
!18104 = !DILocation(line: 800, column: 47, scope: !18098)
!18105 = !DILocation(line: 802, column: 30, scope: !18098)
!18106 = !DILocation(line: 802, column: 35, scope: !18098)
!18107 = !DILocation(line: 802, column: 50, scope: !18098)
!18108 = !DILocation(line: 802, column: 10, scope: !18098)
!18109 = !DILocation(line: 802, column: 3, scope: !18098)
!18110 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1447, file: !1447, line: 812, type: !1472, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18111 = !DILocalVariable(name: "arg", arg: 1, scope: !18110, file: !1447, line: 812, type: !146)
!18112 = !DILocation(line: 812, column: 33, scope: !18110)
!18113 = !DILocalVariable(name: "argsize", arg: 2, scope: !18110, file: !1447, line: 812, type: !149)
!18114 = !DILocation(line: 812, column: 45, scope: !18110)
!18115 = !DILocalVariable(name: "size", arg: 3, scope: !18110, file: !1447, line: 812, type: !148)
!18116 = !DILocation(line: 812, column: 62, scope: !18110)
!18117 = !DILocalVariable(name: "o", arg: 4, scope: !18110, file: !1447, line: 813, type: !1457)
!18118 = !DILocation(line: 813, column: 51, scope: !18110)
!18119 = !DILocalVariable(name: "p", scope: !18110, file: !1447, line: 815, type: !1457)
!18120 = !DILocation(line: 815, column: 33, scope: !18110)
!18121 = !DILocation(line: 815, column: 37, scope: !18110)
!18122 = !DILocation(line: 815, column: 41, scope: !18110)
!18123 = !DILocalVariable(name: "e", scope: !18110, file: !1447, line: 816, type: !27)
!18124 = !DILocation(line: 816, column: 7, scope: !18110)
!18125 = !DILocation(line: 816, column: 11, scope: !18110)
!18126 = !DILocalVariable(name: "flags", scope: !18110, file: !1447, line: 818, type: !27)
!18127 = !DILocation(line: 818, column: 7, scope: !18110)
!18128 = !DILocation(line: 818, column: 15, scope: !18110)
!18129 = !DILocation(line: 818, column: 18, scope: !18110)
!18130 = !DILocation(line: 818, column: 27, scope: !18110)
!18131 = !DILocation(line: 818, column: 24, scope: !18110)
!18132 = !DILocalVariable(name: "bufsize", scope: !18110, file: !1447, line: 819, type: !149)
!18133 = !DILocation(line: 819, column: 10, scope: !18110)
!18134 = !DILocation(line: 819, column: 52, scope: !18110)
!18135 = !DILocation(line: 819, column: 57, scope: !18110)
!18136 = !DILocation(line: 819, column: 66, scope: !18110)
!18137 = !DILocation(line: 819, column: 69, scope: !18110)
!18138 = !DILocation(line: 820, column: 46, scope: !18110)
!18139 = !DILocation(line: 820, column: 53, scope: !18110)
!18140 = !DILocation(line: 820, column: 56, scope: !18110)
!18141 = !DILocation(line: 821, column: 46, scope: !18110)
!18142 = !DILocation(line: 821, column: 49, scope: !18110)
!18143 = !DILocation(line: 822, column: 46, scope: !18110)
!18144 = !DILocation(line: 822, column: 49, scope: !18110)
!18145 = !DILocation(line: 819, column: 20, scope: !18110)
!18146 = !DILocation(line: 822, column: 62, scope: !18110)
!18147 = !DILocalVariable(name: "buf", scope: !18110, file: !1447, line: 823, type: !143)
!18148 = !DILocation(line: 823, column: 9, scope: !18110)
!18149 = !DILocation(line: 823, column: 27, scope: !18110)
!18150 = !DILocation(line: 823, column: 15, scope: !18110)
!18151 = !DILocation(line: 824, column: 29, scope: !18110)
!18152 = !DILocation(line: 824, column: 34, scope: !18110)
!18153 = !DILocation(line: 824, column: 43, scope: !18110)
!18154 = !DILocation(line: 824, column: 48, scope: !18110)
!18155 = !DILocation(line: 824, column: 57, scope: !18110)
!18156 = !DILocation(line: 824, column: 60, scope: !18110)
!18157 = !DILocation(line: 824, column: 67, scope: !18110)
!18158 = !DILocation(line: 825, column: 29, scope: !18110)
!18159 = !DILocation(line: 825, column: 32, scope: !18110)
!18160 = !DILocation(line: 826, column: 29, scope: !18110)
!18161 = !DILocation(line: 826, column: 32, scope: !18110)
!18162 = !DILocation(line: 826, column: 44, scope: !18110)
!18163 = !DILocation(line: 826, column: 47, scope: !18110)
!18164 = !DILocation(line: 824, column: 3, scope: !18110)
!18165 = !DILocation(line: 827, column: 11, scope: !18110)
!18166 = !DILocation(line: 827, column: 3, scope: !18110)
!18167 = !DILocation(line: 827, column: 9, scope: !18110)
!18168 = !DILocation(line: 828, column: 7, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18110, file: !1447, line: 828, column: 7)
!18170 = !DILocation(line: 828, column: 7, scope: !18110)
!18171 = !DILocation(line: 829, column: 13, scope: !18169)
!18172 = !DILocation(line: 829, column: 21, scope: !18169)
!18173 = !DILocation(line: 829, column: 6, scope: !18169)
!18174 = !DILocation(line: 829, column: 11, scope: !18169)
!18175 = !DILocation(line: 829, column: 5, scope: !18169)
!18176 = !DILocation(line: 830, column: 10, scope: !18110)
!18177 = !DILocation(line: 830, column: 3, scope: !18110)
!18178 = distinct !DISubprogram(name: "quotearg_free", scope: !1447, file: !1447, line: 848, type: !341, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18179 = !DILocalVariable(name: "sv", scope: !18178, file: !1447, line: 850, type: !1474)
!18180 = !DILocation(line: 850, column: 19, scope: !18178)
!18181 = !DILocation(line: 850, column: 24, scope: !18178)
!18182 = !DILocalVariable(name: "i", scope: !18178, file: !1447, line: 851, type: !27)
!18183 = !DILocation(line: 851, column: 7, scope: !18178)
!18184 = !DILocation(line: 852, column: 10, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18178, file: !1447, line: 852, column: 3)
!18186 = !DILocation(line: 852, column: 8, scope: !18185)
!18187 = !DILocation(line: 852, column: 15, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18185, file: !1447, line: 852, column: 3)
!18189 = !DILocation(line: 852, column: 19, scope: !18188)
!18190 = !DILocation(line: 852, column: 17, scope: !18188)
!18191 = !DILocation(line: 852, column: 3, scope: !18185)
!18192 = !DILocation(line: 853, column: 11, scope: !18188)
!18193 = !DILocation(line: 853, column: 14, scope: !18188)
!18194 = !DILocation(line: 853, column: 17, scope: !18188)
!18195 = !{!18196, !2443, i64 8}
!18196 = !{!"slotvec", !2467, i64 0, !2443, i64 8}
!18197 = !DILocation(line: 853, column: 5, scope: !18188)
!18198 = !DILocation(line: 852, column: 28, scope: !18188)
!18199 = !DILocation(line: 852, column: 3, scope: !18188)
!18200 = distinct !{!18200, !18191, !18201}
!18201 = !DILocation(line: 853, column: 20, scope: !18185)
!18202 = !DILocation(line: 854, column: 7, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18178, file: !1447, line: 854, column: 7)
!18204 = !DILocation(line: 854, column: 13, scope: !18203)
!18205 = !DILocation(line: 854, column: 17, scope: !18203)
!18206 = !DILocation(line: 854, column: 7, scope: !18178)
!18207 = !DILocation(line: 856, column: 13, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18203, file: !1447, line: 855, column: 5)
!18209 = !DILocation(line: 856, column: 19, scope: !18208)
!18210 = !DILocation(line: 856, column: 7, scope: !18208)
!18211 = !DILocation(line: 857, column: 21, scope: !18208)
!18212 = !{!18196, !2467, i64 0}
!18213 = !DILocation(line: 858, column: 20, scope: !18208)
!18214 = !DILocation(line: 859, column: 5, scope: !18208)
!18215 = !DILocation(line: 860, column: 7, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18178, file: !1447, line: 860, column: 7)
!18217 = !DILocation(line: 860, column: 10, scope: !18216)
!18218 = !DILocation(line: 860, column: 7, scope: !18178)
!18219 = !DILocation(line: 862, column: 13, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18216, file: !1447, line: 861, column: 5)
!18221 = !DILocation(line: 862, column: 7, scope: !18220)
!18222 = !DILocation(line: 863, column: 15, scope: !18220)
!18223 = !DILocation(line: 864, column: 5, scope: !18220)
!18224 = !DILocation(line: 865, column: 10, scope: !18178)
!18225 = !DILocation(line: 866, column: 1, scope: !18178)
!18226 = distinct !DISubprogram(name: "quotearg_n", scope: !1447, file: !1447, line: 931, type: !1479, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18227 = !DILocalVariable(name: "n", arg: 1, scope: !18226, file: !1447, line: 931, type: !27)
!18228 = !DILocation(line: 931, column: 17, scope: !18226)
!18229 = !DILocalVariable(name: "arg", arg: 2, scope: !18226, file: !1447, line: 931, type: !146)
!18230 = !DILocation(line: 931, column: 32, scope: !18226)
!18231 = !DILocation(line: 933, column: 30, scope: !18226)
!18232 = !DILocation(line: 933, column: 33, scope: !18226)
!18233 = !DILocation(line: 933, column: 10, scope: !18226)
!18234 = !DILocation(line: 933, column: 3, scope: !18226)
!18235 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1447, file: !1447, line: 877, type: !1527, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18236 = !DILocalVariable(name: "n", arg: 1, scope: !18235, file: !1447, line: 877, type: !27)
!18237 = !DILocation(line: 877, column: 25, scope: !18235)
!18238 = !DILocalVariable(name: "arg", arg: 2, scope: !18235, file: !1447, line: 877, type: !146)
!18239 = !DILocation(line: 877, column: 40, scope: !18235)
!18240 = !DILocalVariable(name: "argsize", arg: 3, scope: !18235, file: !1447, line: 877, type: !149)
!18241 = !DILocation(line: 877, column: 52, scope: !18235)
!18242 = !DILocalVariable(name: "options", arg: 4, scope: !18235, file: !1447, line: 878, type: !1457)
!18243 = !DILocation(line: 878, column: 51, scope: !18235)
!18244 = !DILocalVariable(name: "e", scope: !18235, file: !1447, line: 880, type: !27)
!18245 = !DILocation(line: 880, column: 7, scope: !18235)
!18246 = !DILocation(line: 880, column: 11, scope: !18235)
!18247 = !DILocalVariable(name: "sv", scope: !18235, file: !1447, line: 882, type: !1474)
!18248 = !DILocation(line: 882, column: 19, scope: !18235)
!18249 = !DILocation(line: 882, column: 24, scope: !18235)
!18250 = !DILocation(line: 884, column: 7, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18235, file: !1447, line: 884, column: 7)
!18252 = !DILocation(line: 884, column: 9, scope: !18251)
!18253 = !DILocation(line: 884, column: 7, scope: !18235)
!18254 = !DILocation(line: 885, column: 5, scope: !18251)
!18255 = !DILocation(line: 887, column: 7, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18235, file: !1447, line: 887, column: 7)
!18257 = !DILocation(line: 887, column: 17, scope: !18256)
!18258 = !DILocation(line: 887, column: 14, scope: !18256)
!18259 = !DILocation(line: 887, column: 7, scope: !18235)
!18260 = !DILocalVariable(name: "preallocated", scope: !18261, file: !1447, line: 889, type: !141)
!18261 = distinct !DILexicalBlock(scope: !18256, file: !1447, line: 888, column: 5)
!18262 = !DILocation(line: 889, column: 12, scope: !18261)
!18263 = !DILocation(line: 889, column: 28, scope: !18261)
!18264 = !DILocation(line: 889, column: 31, scope: !18261)
!18265 = !DILocalVariable(name: "nmax", scope: !18261, file: !1447, line: 890, type: !27)
!18266 = !DILocation(line: 890, column: 11, scope: !18261)
!18267 = !DILocation(line: 892, column: 11, scope: !18268)
!18268 = distinct !DILexicalBlock(scope: !18261, file: !1447, line: 892, column: 11)
!18269 = !DILocation(line: 892, column: 18, scope: !18268)
!18270 = !DILocation(line: 892, column: 16, scope: !18268)
!18271 = !DILocation(line: 892, column: 11, scope: !18261)
!18272 = !DILocation(line: 893, column: 9, scope: !18268)
!18273 = !DILocation(line: 895, column: 32, scope: !18261)
!18274 = !DILocation(line: 895, column: 54, scope: !18261)
!18275 = !DILocation(line: 895, column: 59, scope: !18261)
!18276 = !DILocation(line: 895, column: 61, scope: !18261)
!18277 = !DILocation(line: 895, column: 58, scope: !18261)
!18278 = !DILocation(line: 895, column: 66, scope: !18261)
!18279 = !DILocation(line: 895, column: 22, scope: !18261)
!18280 = !DILocation(line: 895, column: 20, scope: !18261)
!18281 = !DILocation(line: 895, column: 15, scope: !18261)
!18282 = !DILocation(line: 896, column: 11, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18261, file: !1447, line: 896, column: 11)
!18284 = !DILocation(line: 896, column: 11, scope: !18261)
!18285 = !DILocation(line: 897, column: 10, scope: !18283)
!18286 = !DILocation(line: 897, column: 15, scope: !18283)
!18287 = !{i64 0, i64 8, !2579, i64 8, i64 8, !2442}
!18288 = !DILocation(line: 897, column: 9, scope: !18283)
!18289 = !DILocation(line: 898, column: 15, scope: !18261)
!18290 = !DILocation(line: 898, column: 20, scope: !18261)
!18291 = !DILocation(line: 898, column: 18, scope: !18261)
!18292 = !DILocation(line: 898, column: 7, scope: !18261)
!18293 = !DILocation(line: 898, column: 32, scope: !18261)
!18294 = !DILocation(line: 898, column: 34, scope: !18261)
!18295 = !DILocation(line: 898, column: 40, scope: !18261)
!18296 = !DILocation(line: 898, column: 38, scope: !18261)
!18297 = !DILocation(line: 898, column: 31, scope: !18261)
!18298 = !DILocation(line: 898, column: 48, scope: !18261)
!18299 = !DILocation(line: 899, column: 16, scope: !18261)
!18300 = !DILocation(line: 899, column: 18, scope: !18261)
!18301 = !DILocation(line: 899, column: 14, scope: !18261)
!18302 = !DILocation(line: 900, column: 5, scope: !18261)
!18303 = !DILocalVariable(name: "size", scope: !18304, file: !1447, line: 903, type: !149)
!18304 = distinct !DILexicalBlock(scope: !18235, file: !1447, line: 902, column: 3)
!18305 = !DILocation(line: 903, column: 12, scope: !18304)
!18306 = !DILocation(line: 903, column: 19, scope: !18304)
!18307 = !DILocation(line: 903, column: 22, scope: !18304)
!18308 = !DILocation(line: 903, column: 25, scope: !18304)
!18309 = !DILocalVariable(name: "val", scope: !18304, file: !1447, line: 904, type: !143)
!18310 = !DILocation(line: 904, column: 11, scope: !18304)
!18311 = !DILocation(line: 904, column: 17, scope: !18304)
!18312 = !DILocation(line: 904, column: 20, scope: !18304)
!18313 = !DILocation(line: 904, column: 23, scope: !18304)
!18314 = !DILocalVariable(name: "flags", scope: !18304, file: !1447, line: 906, type: !27)
!18315 = !DILocation(line: 906, column: 9, scope: !18304)
!18316 = !DILocation(line: 906, column: 17, scope: !18304)
!18317 = !DILocation(line: 906, column: 26, scope: !18304)
!18318 = !DILocation(line: 906, column: 32, scope: !18304)
!18319 = !DILocalVariable(name: "qsize", scope: !18304, file: !1447, line: 907, type: !149)
!18320 = !DILocation(line: 907, column: 12, scope: !18304)
!18321 = !DILocation(line: 907, column: 46, scope: !18304)
!18322 = !DILocation(line: 907, column: 51, scope: !18304)
!18323 = !DILocation(line: 907, column: 57, scope: !18304)
!18324 = !DILocation(line: 907, column: 62, scope: !18304)
!18325 = !DILocation(line: 908, column: 46, scope: !18304)
!18326 = !DILocation(line: 908, column: 55, scope: !18304)
!18327 = !DILocation(line: 908, column: 62, scope: !18304)
!18328 = !DILocation(line: 909, column: 46, scope: !18304)
!18329 = !DILocation(line: 909, column: 55, scope: !18304)
!18330 = !DILocation(line: 910, column: 46, scope: !18304)
!18331 = !DILocation(line: 910, column: 55, scope: !18304)
!18332 = !DILocation(line: 911, column: 46, scope: !18304)
!18333 = !DILocation(line: 911, column: 55, scope: !18304)
!18334 = !DILocation(line: 907, column: 20, scope: !18304)
!18335 = !DILocation(line: 913, column: 9, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18304, file: !1447, line: 913, column: 9)
!18337 = !DILocation(line: 913, column: 17, scope: !18336)
!18338 = !DILocation(line: 913, column: 14, scope: !18336)
!18339 = !DILocation(line: 913, column: 9, scope: !18304)
!18340 = !DILocation(line: 915, column: 29, scope: !18341)
!18341 = distinct !DILexicalBlock(scope: !18336, file: !1447, line: 914, column: 7)
!18342 = !DILocation(line: 915, column: 35, scope: !18341)
!18343 = !DILocation(line: 915, column: 27, scope: !18341)
!18344 = !DILocation(line: 915, column: 9, scope: !18341)
!18345 = !DILocation(line: 915, column: 12, scope: !18341)
!18346 = !DILocation(line: 915, column: 15, scope: !18341)
!18347 = !DILocation(line: 915, column: 20, scope: !18341)
!18348 = !DILocation(line: 916, column: 13, scope: !18349)
!18349 = distinct !DILexicalBlock(scope: !18341, file: !1447, line: 916, column: 13)
!18350 = !DILocation(line: 916, column: 17, scope: !18349)
!18351 = !DILocation(line: 916, column: 13, scope: !18341)
!18352 = !DILocation(line: 917, column: 17, scope: !18349)
!18353 = !DILocation(line: 917, column: 11, scope: !18349)
!18354 = !DILocation(line: 918, column: 39, scope: !18341)
!18355 = !DILocation(line: 918, column: 27, scope: !18341)
!18356 = !DILocation(line: 918, column: 25, scope: !18341)
!18357 = !DILocation(line: 918, column: 9, scope: !18341)
!18358 = !DILocation(line: 918, column: 12, scope: !18341)
!18359 = !DILocation(line: 918, column: 15, scope: !18341)
!18360 = !DILocation(line: 918, column: 19, scope: !18341)
!18361 = !DILocation(line: 919, column: 35, scope: !18341)
!18362 = !DILocation(line: 919, column: 40, scope: !18341)
!18363 = !DILocation(line: 919, column: 46, scope: !18341)
!18364 = !DILocation(line: 919, column: 51, scope: !18341)
!18365 = !DILocation(line: 919, column: 60, scope: !18341)
!18366 = !DILocation(line: 919, column: 69, scope: !18341)
!18367 = !DILocation(line: 920, column: 35, scope: !18341)
!18368 = !DILocation(line: 920, column: 42, scope: !18341)
!18369 = !DILocation(line: 920, column: 51, scope: !18341)
!18370 = !DILocation(line: 921, column: 35, scope: !18341)
!18371 = !DILocation(line: 921, column: 44, scope: !18341)
!18372 = !DILocation(line: 922, column: 35, scope: !18341)
!18373 = !DILocation(line: 922, column: 44, scope: !18341)
!18374 = !DILocation(line: 919, column: 9, scope: !18341)
!18375 = !DILocation(line: 923, column: 7, scope: !18341)
!18376 = !DILocation(line: 925, column: 13, scope: !18304)
!18377 = !DILocation(line: 925, column: 5, scope: !18304)
!18378 = !DILocation(line: 925, column: 11, scope: !18304)
!18379 = !DILocation(line: 926, column: 12, scope: !18304)
!18380 = !DILocation(line: 926, column: 5, scope: !18304)
!18381 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1447, file: !1447, line: 937, type: !1481, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18382 = !DILocalVariable(name: "n", arg: 1, scope: !18381, file: !1447, line: 937, type: !27)
!18383 = !DILocation(line: 937, column: 21, scope: !18381)
!18384 = !DILocalVariable(name: "arg", arg: 2, scope: !18381, file: !1447, line: 937, type: !146)
!18385 = !DILocation(line: 937, column: 36, scope: !18381)
!18386 = !DILocalVariable(name: "argsize", arg: 3, scope: !18381, file: !1447, line: 937, type: !149)
!18387 = !DILocation(line: 937, column: 48, scope: !18381)
!18388 = !DILocation(line: 939, column: 30, scope: !18381)
!18389 = !DILocation(line: 939, column: 33, scope: !18381)
!18390 = !DILocation(line: 939, column: 38, scope: !18381)
!18391 = !DILocation(line: 939, column: 10, scope: !18381)
!18392 = !DILocation(line: 939, column: 3, scope: !18381)
!18393 = distinct !DISubprogram(name: "quotearg", scope: !1447, file: !1447, line: 943, type: !572, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18394 = !DILocalVariable(name: "arg", arg: 1, scope: !18393, file: !1447, line: 943, type: !146)
!18395 = !DILocation(line: 943, column: 23, scope: !18393)
!18396 = !DILocation(line: 945, column: 25, scope: !18393)
!18397 = !DILocation(line: 945, column: 10, scope: !18393)
!18398 = !DILocation(line: 945, column: 3, scope: !18393)
!18399 = distinct !DISubprogram(name: "quotearg_mem", scope: !1447, file: !1447, line: 949, type: !1483, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18400 = !DILocalVariable(name: "arg", arg: 1, scope: !18399, file: !1447, line: 949, type: !146)
!18401 = !DILocation(line: 949, column: 27, scope: !18399)
!18402 = !DILocalVariable(name: "argsize", arg: 2, scope: !18399, file: !1447, line: 949, type: !149)
!18403 = !DILocation(line: 949, column: 39, scope: !18399)
!18404 = !DILocation(line: 951, column: 29, scope: !18399)
!18405 = !DILocation(line: 951, column: 34, scope: !18399)
!18406 = !DILocation(line: 951, column: 10, scope: !18399)
!18407 = !DILocation(line: 951, column: 3, scope: !18399)
!18408 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1447, file: !1447, line: 955, type: !1485, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18409 = !DILocalVariable(name: "n", arg: 1, scope: !18408, file: !1447, line: 955, type: !27)
!18410 = !DILocation(line: 955, column: 23, scope: !18408)
!18411 = !DILocalVariable(name: "s", arg: 2, scope: !18408, file: !1447, line: 955, type: !95)
!18412 = !DILocation(line: 955, column: 45, scope: !18408)
!18413 = !DILocalVariable(name: "arg", arg: 3, scope: !18408, file: !1447, line: 955, type: !146)
!18414 = !DILocation(line: 955, column: 60, scope: !18408)
!18415 = !DILocalVariable(name: "o", scope: !18408, file: !1447, line: 957, type: !1458)
!18416 = !DILocation(line: 957, column: 32, scope: !18408)
!18417 = !DILocation(line: 957, column: 64, scope: !18408)
!18418 = !DILocation(line: 957, column: 36, scope: !18408)
!18419 = !DILocation(line: 958, column: 30, scope: !18408)
!18420 = !DILocation(line: 958, column: 33, scope: !18408)
!18421 = !DILocation(line: 958, column: 10, scope: !18408)
!18422 = !DILocation(line: 958, column: 3, scope: !18408)
!18423 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1447, file: !1447, line: 193, type: !1529, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18424 = !DILocalVariable(name: "style", arg: 1, scope: !18423, file: !1447, line: 193, type: !95)
!18425 = !DILocation(line: 193, column: 48, scope: !18423)
!18426 = !DILocalVariable(name: "o", scope: !18423, file: !1447, line: 195, type: !1446)
!18427 = !DILocation(line: 195, column: 26, scope: !18423)
!18428 = !DILocation(line: 196, column: 7, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18423, file: !1447, line: 196, column: 7)
!18430 = !DILocation(line: 196, column: 13, scope: !18429)
!18431 = !DILocation(line: 196, column: 7, scope: !18423)
!18432 = !DILocation(line: 197, column: 5, scope: !18429)
!18433 = !DILocation(line: 198, column: 13, scope: !18423)
!18434 = !DILocation(line: 198, column: 5, scope: !18423)
!18435 = !DILocation(line: 198, column: 11, scope: !18423)
!18436 = !DILocation(line: 199, column: 3, scope: !18423)
!18437 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1447, file: !1447, line: 962, type: !1487, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18438 = !DILocalVariable(name: "n", arg: 1, scope: !18437, file: !1447, line: 962, type: !27)
!18439 = !DILocation(line: 962, column: 27, scope: !18437)
!18440 = !DILocalVariable(name: "s", arg: 2, scope: !18437, file: !1447, line: 962, type: !95)
!18441 = !DILocation(line: 962, column: 49, scope: !18437)
!18442 = !DILocalVariable(name: "arg", arg: 3, scope: !18437, file: !1447, line: 963, type: !146)
!18443 = !DILocation(line: 963, column: 35, scope: !18437)
!18444 = !DILocalVariable(name: "argsize", arg: 4, scope: !18437, file: !1447, line: 963, type: !149)
!18445 = !DILocation(line: 963, column: 47, scope: !18437)
!18446 = !DILocalVariable(name: "o", scope: !18437, file: !1447, line: 965, type: !1458)
!18447 = !DILocation(line: 965, column: 32, scope: !18437)
!18448 = !DILocation(line: 965, column: 64, scope: !18437)
!18449 = !DILocation(line: 965, column: 36, scope: !18437)
!18450 = !DILocation(line: 966, column: 30, scope: !18437)
!18451 = !DILocation(line: 966, column: 33, scope: !18437)
!18452 = !DILocation(line: 966, column: 38, scope: !18437)
!18453 = !DILocation(line: 966, column: 10, scope: !18437)
!18454 = !DILocation(line: 966, column: 3, scope: !18437)
!18455 = distinct !DISubprogram(name: "quotearg_style", scope: !1447, file: !1447, line: 970, type: !1489, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18456 = !DILocalVariable(name: "s", arg: 1, scope: !18455, file: !1447, line: 970, type: !95)
!18457 = !DILocation(line: 970, column: 36, scope: !18455)
!18458 = !DILocalVariable(name: "arg", arg: 2, scope: !18455, file: !1447, line: 970, type: !146)
!18459 = !DILocation(line: 970, column: 51, scope: !18455)
!18460 = !DILocation(line: 972, column: 31, scope: !18455)
!18461 = !DILocation(line: 972, column: 34, scope: !18455)
!18462 = !DILocation(line: 972, column: 10, scope: !18455)
!18463 = !DILocation(line: 972, column: 3, scope: !18455)
!18464 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1447, file: !1447, line: 976, type: !1491, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18465 = !DILocalVariable(name: "s", arg: 1, scope: !18464, file: !1447, line: 976, type: !95)
!18466 = !DILocation(line: 976, column: 40, scope: !18464)
!18467 = !DILocalVariable(name: "arg", arg: 2, scope: !18464, file: !1447, line: 976, type: !146)
!18468 = !DILocation(line: 976, column: 55, scope: !18464)
!18469 = !DILocalVariable(name: "argsize", arg: 3, scope: !18464, file: !1447, line: 976, type: !149)
!18470 = !DILocation(line: 976, column: 67, scope: !18464)
!18471 = !DILocation(line: 978, column: 35, scope: !18464)
!18472 = !DILocation(line: 978, column: 38, scope: !18464)
!18473 = !DILocation(line: 978, column: 43, scope: !18464)
!18474 = !DILocation(line: 978, column: 10, scope: !18464)
!18475 = !DILocation(line: 978, column: 3, scope: !18464)
!18476 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1447, file: !1447, line: 982, type: !1493, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18477 = !DILocalVariable(name: "arg", arg: 1, scope: !18476, file: !1447, line: 982, type: !146)
!18478 = !DILocation(line: 982, column: 32, scope: !18476)
!18479 = !DILocalVariable(name: "argsize", arg: 2, scope: !18476, file: !1447, line: 982, type: !149)
!18480 = !DILocation(line: 982, column: 44, scope: !18476)
!18481 = !DILocalVariable(name: "ch", arg: 3, scope: !18476, file: !1447, line: 982, type: !144)
!18482 = !DILocation(line: 982, column: 58, scope: !18476)
!18483 = !DILocalVariable(name: "options", scope: !18476, file: !1447, line: 984, type: !1446)
!18484 = !DILocation(line: 984, column: 26, scope: !18476)
!18485 = !DILocation(line: 985, column: 13, scope: !18476)
!18486 = !{i64 0, i64 4, !2497, i64 4, i64 4, !2436, i64 8, i64 32, !2497, i64 40, i64 8, !2442, i64 48, i64 8, !2442}
!18487 = !DILocation(line: 986, column: 31, scope: !18476)
!18488 = !DILocation(line: 986, column: 3, scope: !18476)
!18489 = !DILocation(line: 987, column: 33, scope: !18476)
!18490 = !DILocation(line: 987, column: 38, scope: !18476)
!18491 = !DILocation(line: 987, column: 10, scope: !18476)
!18492 = !DILocation(line: 987, column: 3, scope: !18476)
!18493 = distinct !DISubprogram(name: "quotearg_char", scope: !1447, file: !1447, line: 991, type: !1495, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18494 = !DILocalVariable(name: "arg", arg: 1, scope: !18493, file: !1447, line: 991, type: !146)
!18495 = !DILocation(line: 991, column: 28, scope: !18493)
!18496 = !DILocalVariable(name: "ch", arg: 2, scope: !18493, file: !1447, line: 991, type: !144)
!18497 = !DILocation(line: 991, column: 38, scope: !18493)
!18498 = !DILocation(line: 993, column: 29, scope: !18493)
!18499 = !DILocation(line: 993, column: 44, scope: !18493)
!18500 = !DILocation(line: 993, column: 10, scope: !18493)
!18501 = !DILocation(line: 993, column: 3, scope: !18493)
!18502 = distinct !DISubprogram(name: "quotearg_colon", scope: !1447, file: !1447, line: 997, type: !572, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18503 = !DILocalVariable(name: "arg", arg: 1, scope: !18502, file: !1447, line: 997, type: !146)
!18504 = !DILocation(line: 997, column: 29, scope: !18502)
!18505 = !DILocation(line: 999, column: 25, scope: !18502)
!18506 = !DILocation(line: 999, column: 10, scope: !18502)
!18507 = !DILocation(line: 999, column: 3, scope: !18502)
!18508 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1447, file: !1447, line: 1003, type: !1483, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18509 = !DILocalVariable(name: "arg", arg: 1, scope: !18508, file: !1447, line: 1003, type: !146)
!18510 = !DILocation(line: 1003, column: 33, scope: !18508)
!18511 = !DILocalVariable(name: "argsize", arg: 2, scope: !18508, file: !1447, line: 1003, type: !149)
!18512 = !DILocation(line: 1003, column: 45, scope: !18508)
!18513 = !DILocation(line: 1005, column: 29, scope: !18508)
!18514 = !DILocation(line: 1005, column: 34, scope: !18508)
!18515 = !DILocation(line: 1005, column: 10, scope: !18508)
!18516 = !DILocation(line: 1005, column: 3, scope: !18508)
!18517 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1447, file: !1447, line: 1009, type: !1485, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18518 = !DILocalVariable(name: "n", arg: 1, scope: !18517, file: !1447, line: 1009, type: !27)
!18519 = !DILocation(line: 1009, column: 29, scope: !18517)
!18520 = !DILocalVariable(name: "s", arg: 2, scope: !18517, file: !1447, line: 1009, type: !95)
!18521 = !DILocation(line: 1009, column: 51, scope: !18517)
!18522 = !DILocalVariable(name: "arg", arg: 3, scope: !18517, file: !1447, line: 1009, type: !146)
!18523 = !DILocation(line: 1009, column: 66, scope: !18517)
!18524 = !DILocalVariable(name: "options", scope: !18517, file: !1447, line: 1011, type: !1446)
!18525 = !DILocation(line: 1011, column: 26, scope: !18517)
!18526 = !DILocation(line: 1012, column: 41, scope: !18517)
!18527 = !DILocation(line: 1012, column: 13, scope: !18517)
!18528 = !DILocation(line: 1013, column: 3, scope: !18517)
!18529 = !DILocation(line: 1014, column: 30, scope: !18517)
!18530 = !DILocation(line: 1014, column: 33, scope: !18517)
!18531 = !DILocation(line: 1014, column: 10, scope: !18517)
!18532 = !DILocation(line: 1014, column: 3, scope: !18517)
!18533 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1447, file: !1447, line: 1018, type: !1497, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18534 = !DILocalVariable(name: "n", arg: 1, scope: !18533, file: !1447, line: 1018, type: !27)
!18535 = !DILocation(line: 1018, column: 24, scope: !18533)
!18536 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18533, file: !1447, line: 1018, type: !146)
!18537 = !DILocation(line: 1018, column: 39, scope: !18533)
!18538 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18533, file: !1447, line: 1019, type: !146)
!18539 = !DILocation(line: 1019, column: 32, scope: !18533)
!18540 = !DILocalVariable(name: "arg", arg: 4, scope: !18533, file: !1447, line: 1019, type: !146)
!18541 = !DILocation(line: 1019, column: 57, scope: !18533)
!18542 = !DILocation(line: 1021, column: 33, scope: !18533)
!18543 = !DILocation(line: 1021, column: 36, scope: !18533)
!18544 = !DILocation(line: 1021, column: 48, scope: !18533)
!18545 = !DILocation(line: 1021, column: 61, scope: !18533)
!18546 = !DILocation(line: 1021, column: 10, scope: !18533)
!18547 = !DILocation(line: 1021, column: 3, scope: !18533)
!18548 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1447, file: !1447, line: 1026, type: !1499, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18549 = !DILocalVariable(name: "n", arg: 1, scope: !18548, file: !1447, line: 1026, type: !27)
!18550 = !DILocation(line: 1026, column: 28, scope: !18548)
!18551 = !DILocalVariable(name: "left_quote", arg: 2, scope: !18548, file: !1447, line: 1026, type: !146)
!18552 = !DILocation(line: 1026, column: 43, scope: !18548)
!18553 = !DILocalVariable(name: "right_quote", arg: 3, scope: !18548, file: !1447, line: 1027, type: !146)
!18554 = !DILocation(line: 1027, column: 36, scope: !18548)
!18555 = !DILocalVariable(name: "arg", arg: 4, scope: !18548, file: !1447, line: 1028, type: !146)
!18556 = !DILocation(line: 1028, column: 36, scope: !18548)
!18557 = !DILocalVariable(name: "argsize", arg: 5, scope: !18548, file: !1447, line: 1028, type: !149)
!18558 = !DILocation(line: 1028, column: 48, scope: !18548)
!18559 = !DILocalVariable(name: "o", scope: !18548, file: !1447, line: 1030, type: !1446)
!18560 = !DILocation(line: 1030, column: 26, scope: !18548)
!18561 = !DILocation(line: 1030, column: 30, scope: !18548)
!18562 = !DILocation(line: 1031, column: 27, scope: !18548)
!18563 = !DILocation(line: 1031, column: 39, scope: !18548)
!18564 = !DILocation(line: 1031, column: 3, scope: !18548)
!18565 = !DILocation(line: 1032, column: 30, scope: !18548)
!18566 = !DILocation(line: 1032, column: 33, scope: !18548)
!18567 = !DILocation(line: 1032, column: 38, scope: !18548)
!18568 = !DILocation(line: 1032, column: 10, scope: !18548)
!18569 = !DILocation(line: 1032, column: 3, scope: !18548)
!18570 = distinct !DISubprogram(name: "quotearg_custom", scope: !1447, file: !1447, line: 1036, type: !1501, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18571 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18570, file: !1447, line: 1036, type: !146)
!18572 = !DILocation(line: 1036, column: 30, scope: !18570)
!18573 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18570, file: !1447, line: 1036, type: !146)
!18574 = !DILocation(line: 1036, column: 54, scope: !18570)
!18575 = !DILocalVariable(name: "arg", arg: 3, scope: !18570, file: !1447, line: 1037, type: !146)
!18576 = !DILocation(line: 1037, column: 30, scope: !18570)
!18577 = !DILocation(line: 1039, column: 32, scope: !18570)
!18578 = !DILocation(line: 1039, column: 44, scope: !18570)
!18579 = !DILocation(line: 1039, column: 57, scope: !18570)
!18580 = !DILocation(line: 1039, column: 10, scope: !18570)
!18581 = !DILocation(line: 1039, column: 3, scope: !18570)
!18582 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1447, file: !1447, line: 1043, type: !1503, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18583 = !DILocalVariable(name: "left_quote", arg: 1, scope: !18582, file: !1447, line: 1043, type: !146)
!18584 = !DILocation(line: 1043, column: 34, scope: !18582)
!18585 = !DILocalVariable(name: "right_quote", arg: 2, scope: !18582, file: !1447, line: 1043, type: !146)
!18586 = !DILocation(line: 1043, column: 58, scope: !18582)
!18587 = !DILocalVariable(name: "arg", arg: 3, scope: !18582, file: !1447, line: 1044, type: !146)
!18588 = !DILocation(line: 1044, column: 34, scope: !18582)
!18589 = !DILocalVariable(name: "argsize", arg: 4, scope: !18582, file: !1447, line: 1044, type: !149)
!18590 = !DILocation(line: 1044, column: 46, scope: !18582)
!18591 = !DILocation(line: 1046, column: 36, scope: !18582)
!18592 = !DILocation(line: 1046, column: 48, scope: !18582)
!18593 = !DILocation(line: 1046, column: 61, scope: !18582)
!18594 = !DILocation(line: 1047, column: 33, scope: !18582)
!18595 = !DILocation(line: 1046, column: 10, scope: !18582)
!18596 = !DILocation(line: 1046, column: 3, scope: !18582)
!18597 = distinct !DISubprogram(name: "quote_n_mem", scope: !1447, file: !1447, line: 1061, type: !1505, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18598 = !DILocalVariable(name: "n", arg: 1, scope: !18597, file: !1447, line: 1061, type: !27)
!18599 = !DILocation(line: 1061, column: 18, scope: !18597)
!18600 = !DILocalVariable(name: "arg", arg: 2, scope: !18597, file: !1447, line: 1061, type: !146)
!18601 = !DILocation(line: 1061, column: 33, scope: !18597)
!18602 = !DILocalVariable(name: "argsize", arg: 3, scope: !18597, file: !1447, line: 1061, type: !149)
!18603 = !DILocation(line: 1061, column: 45, scope: !18597)
!18604 = !DILocation(line: 1063, column: 30, scope: !18597)
!18605 = !DILocation(line: 1063, column: 33, scope: !18597)
!18606 = !DILocation(line: 1063, column: 38, scope: !18597)
!18607 = !DILocation(line: 1063, column: 10, scope: !18597)
!18608 = !DILocation(line: 1063, column: 3, scope: !18597)
!18609 = distinct !DISubprogram(name: "quote_mem", scope: !1447, file: !1447, line: 1067, type: !1507, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18610 = !DILocalVariable(name: "arg", arg: 1, scope: !18609, file: !1447, line: 1067, type: !146)
!18611 = !DILocation(line: 1067, column: 24, scope: !18609)
!18612 = !DILocalVariable(name: "argsize", arg: 2, scope: !18609, file: !1447, line: 1067, type: !149)
!18613 = !DILocation(line: 1067, column: 36, scope: !18609)
!18614 = !DILocation(line: 1069, column: 26, scope: !18609)
!18615 = !DILocation(line: 1069, column: 31, scope: !18609)
!18616 = !DILocation(line: 1069, column: 10, scope: !18609)
!18617 = !DILocation(line: 1069, column: 3, scope: !18609)
!18618 = distinct !DISubprogram(name: "quote_n", scope: !1447, file: !1447, line: 1073, type: !1509, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18619 = !DILocalVariable(name: "n", arg: 1, scope: !18618, file: !1447, line: 1073, type: !27)
!18620 = !DILocation(line: 1073, column: 14, scope: !18618)
!18621 = !DILocalVariable(name: "arg", arg: 2, scope: !18618, file: !1447, line: 1073, type: !146)
!18622 = !DILocation(line: 1073, column: 29, scope: !18618)
!18623 = !DILocation(line: 1075, column: 23, scope: !18618)
!18624 = !DILocation(line: 1075, column: 26, scope: !18618)
!18625 = !DILocation(line: 1075, column: 10, scope: !18618)
!18626 = !DILocation(line: 1075, column: 3, scope: !18618)
!18627 = distinct !DISubprogram(name: "quote", scope: !1447, file: !1447, line: 1079, type: !579, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1437, retainedNodes: !152)
!18628 = !DILocalVariable(name: "arg", arg: 1, scope: !18627, file: !1447, line: 1079, type: !146)
!18629 = !DILocation(line: 1079, column: 20, scope: !18627)
!18630 = !DILocation(line: 1081, column: 22, scope: !18627)
!18631 = !DILocation(line: 1081, column: 10, scope: !18627)
!18632 = !DILocation(line: 1081, column: 3, scope: !18627)
!18633 = distinct !DISubprogram(name: "same_name", scope: !18634, file: !18634, line: 61, type: !1955, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1952, retainedNodes: !152)
!18634 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18635 = !DILocalVariable(name: "source", arg: 1, scope: !18633, file: !18634, line: 61, type: !146)
!18636 = !DILocation(line: 61, column: 24, scope: !18633)
!18637 = !DILocalVariable(name: "dest", arg: 2, scope: !18633, file: !18634, line: 61, type: !146)
!18638 = !DILocation(line: 61, column: 44, scope: !18633)
!18639 = !DILocation(line: 63, column: 33, scope: !18633)
!18640 = !DILocation(line: 63, column: 51, scope: !18633)
!18641 = !DILocation(line: 63, column: 10, scope: !18633)
!18642 = !DILocation(line: 63, column: 3, scope: !18633)
!18643 = distinct !DISubprogram(name: "same_nameat", scope: !18634, file: !18634, line: 70, type: !1957, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1952, retainedNodes: !152)
!18644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !192, line: 46, size: 1152, elements: !18645)
!18645 = !{!18646, !18647, !18648, !18649, !18650, !18651, !18652, !18653, !18654, !18655, !18656, !18657, !18662, !18663, !18664}
!18646 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !18644, file: !192, line: 48, baseType: !195, size: 64)
!18647 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !18644, file: !192, line: 53, baseType: !197, size: 64, offset: 64)
!18648 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !18644, file: !192, line: 61, baseType: !199, size: 64, offset: 128)
!18649 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !18644, file: !192, line: 62, baseType: !201, size: 32, offset: 192)
!18650 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !18644, file: !192, line: 64, baseType: !203, size: 32, offset: 224)
!18651 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !18644, file: !192, line: 65, baseType: !205, size: 32, offset: 256)
!18652 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !18644, file: !192, line: 67, baseType: !27, size: 32, offset: 288)
!18653 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !18644, file: !192, line: 69, baseType: !195, size: 64, offset: 320)
!18654 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !18644, file: !192, line: 74, baseType: !179, size: 64, offset: 384)
!18655 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !18644, file: !192, line: 78, baseType: !210, size: 64, offset: 448)
!18656 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !18644, file: !192, line: 80, baseType: !212, size: 64, offset: 512)
!18657 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !18644, file: !192, line: 91, baseType: !18658, size: 128, offset: 576)
!18658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !215, line: 9, size: 128, elements: !18659)
!18659 = !{!18660, !18661}
!18660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !18658, file: !215, line: 11, baseType: !164, size: 64)
!18661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !18658, file: !215, line: 12, baseType: !219, size: 64, offset: 64)
!18662 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !18644, file: !192, line: 92, baseType: !18658, size: 128, offset: 704)
!18663 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !18644, file: !192, line: 93, baseType: !18658, size: 128, offset: 832)
!18664 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !18644, file: !192, line: 106, baseType: !223, size: 192, offset: 960)
!18665 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !18643, file: !18634, line: 70, type: !27)
!18666 = !DILocation(line: 70, column: 18, scope: !18643)
!18667 = !DILocalVariable(name: "source", arg: 2, scope: !18643, file: !18634, line: 70, type: !146)
!18668 = !DILocation(line: 70, column: 42, scope: !18643)
!18669 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !18643, file: !18634, line: 71, type: !27)
!18670 = !DILocation(line: 71, column: 18, scope: !18643)
!18671 = !DILocalVariable(name: "dest", arg: 4, scope: !18643, file: !18634, line: 71, type: !146)
!18672 = !DILocation(line: 71, column: 40, scope: !18643)
!18673 = !DILocalVariable(name: "source_basename", scope: !18643, file: !18634, line: 74, type: !146)
!18674 = !DILocation(line: 74, column: 15, scope: !18643)
!18675 = !DILocation(line: 74, column: 49, scope: !18643)
!18676 = !DILocation(line: 74, column: 33, scope: !18643)
!18677 = !DILocalVariable(name: "dest_basename", scope: !18643, file: !18634, line: 75, type: !146)
!18678 = !DILocation(line: 75, column: 15, scope: !18643)
!18679 = !DILocation(line: 75, column: 47, scope: !18643)
!18680 = !DILocation(line: 75, column: 31, scope: !18643)
!18681 = !DILocalVariable(name: "source_baselen", scope: !18643, file: !18634, line: 76, type: !149)
!18682 = !DILocation(line: 76, column: 10, scope: !18643)
!18683 = !DILocation(line: 76, column: 37, scope: !18643)
!18684 = !DILocation(line: 76, column: 27, scope: !18643)
!18685 = !DILocalVariable(name: "dest_baselen", scope: !18643, file: !18634, line: 77, type: !149)
!18686 = !DILocation(line: 77, column: 10, scope: !18643)
!18687 = !DILocation(line: 77, column: 35, scope: !18643)
!18688 = !DILocation(line: 77, column: 25, scope: !18643)
!18689 = !DILocalVariable(name: "identical_basenames", scope: !18643, file: !18634, line: 78, type: !141)
!18690 = !DILocation(line: 78, column: 8, scope: !18643)
!18691 = !DILocation(line: 79, column: 6, scope: !18643)
!18692 = !DILocation(line: 79, column: 24, scope: !18643)
!18693 = !DILocation(line: 79, column: 21, scope: !18643)
!18694 = !DILocation(line: 80, column: 6, scope: !18643)
!18695 = !DILocation(line: 80, column: 17, scope: !18643)
!18696 = !DILocation(line: 80, column: 34, scope: !18643)
!18697 = !DILocation(line: 80, column: 49, scope: !18643)
!18698 = !DILocation(line: 80, column: 9, scope: !18643)
!18699 = !DILocation(line: 80, column: 63, scope: !18643)
!18700 = !DILocation(line: 0, scope: !18643)
!18701 = !DILocalVariable(name: "compare_dirs", scope: !18643, file: !18634, line: 81, type: !141)
!18702 = !DILocation(line: 81, column: 8, scope: !18643)
!18703 = !DILocation(line: 81, column: 23, scope: !18643)
!18704 = !DILocalVariable(name: "same", scope: !18643, file: !18634, line: 82, type: !141)
!18705 = !DILocation(line: 82, column: 8, scope: !18643)
!18706 = !DILocation(line: 92, column: 7, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18643, file: !18634, line: 92, column: 7)
!18708 = !DILocation(line: 92, column: 7, scope: !18643)
!18709 = !DILocalVariable(name: "source_dir_stats", scope: !18710, file: !18634, line: 94, type: !18644)
!18710 = distinct !DILexicalBlock(scope: !18707, file: !18634, line: 93, column: 5)
!18711 = !DILocation(line: 94, column: 19, scope: !18710)
!18712 = !DILocalVariable(name: "dest_dir_stats", scope: !18710, file: !18634, line: 95, type: !18644)
!18713 = !DILocation(line: 95, column: 19, scope: !18710)
!18714 = !DILocalVariable(name: "source_dirname", scope: !18710, file: !18634, line: 98, type: !143)
!18715 = !DILocation(line: 98, column: 13, scope: !18710)
!18716 = !DILocation(line: 98, column: 40, scope: !18710)
!18717 = !DILocation(line: 98, column: 30, scope: !18710)
!18718 = !DILocalVariable(name: "flags", scope: !18710, file: !18634, line: 99, type: !27)
!18719 = !DILocation(line: 99, column: 11, scope: !18710)
!18720 = !DILocation(line: 100, column: 20, scope: !18721)
!18721 = distinct !DILexicalBlock(scope: !18710, file: !18634, line: 100, column: 11)
!18722 = !DILocation(line: 100, column: 32, scope: !18721)
!18723 = !DILocation(line: 100, column: 67, scope: !18721)
!18724 = !DILocation(line: 100, column: 11, scope: !18721)
!18725 = !DILocation(line: 100, column: 74, scope: !18721)
!18726 = !DILocation(line: 100, column: 11, scope: !18710)
!18727 = !DILocation(line: 103, column: 21, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18721, file: !18634, line: 101, column: 9)
!18729 = !DILocation(line: 103, column: 34, scope: !18728)
!18730 = !DILocation(line: 103, column: 11, scope: !18728)
!18731 = !DILocation(line: 104, column: 9, scope: !18728)
!18732 = !DILocation(line: 105, column: 13, scope: !18710)
!18733 = !DILocation(line: 105, column: 7, scope: !18710)
!18734 = !DILocalVariable(name: "dest_dirname", scope: !18710, file: !18634, line: 107, type: !143)
!18735 = !DILocation(line: 107, column: 13, scope: !18710)
!18736 = !DILocation(line: 107, column: 38, scope: !18710)
!18737 = !DILocation(line: 107, column: 28, scope: !18710)
!18738 = !DILocation(line: 137, column: 20, scope: !18739)
!18739 = distinct !DILexicalBlock(scope: !18710, file: !18634, line: 137, column: 11)
!18740 = !DILocation(line: 137, column: 30, scope: !18739)
!18741 = !DILocation(line: 137, column: 61, scope: !18739)
!18742 = !DILocation(line: 137, column: 11, scope: !18739)
!18743 = !DILocation(line: 137, column: 68, scope: !18739)
!18744 = !DILocation(line: 137, column: 11, scope: !18710)
!18745 = !DILocation(line: 140, column: 21, scope: !18746)
!18746 = distinct !DILexicalBlock(scope: !18739, file: !18634, line: 138, column: 9)
!18747 = !DILocation(line: 140, column: 34, scope: !18746)
!18748 = !DILocation(line: 140, column: 11, scope: !18746)
!18749 = !DILocation(line: 141, column: 9, scope: !18746)
!18750 = !DILocation(line: 142, column: 14, scope: !18710)
!18751 = !DILocation(line: 0, scope: !18710)
!18752 = !DILocation(line: 142, column: 12, scope: !18710)
!18753 = !DILocation(line: 145, column: 13, scope: !18710)
!18754 = !DILocation(line: 145, column: 7, scope: !18710)
!18755 = !DILocation(line: 146, column: 5, scope: !18710)
!18756 = !DILocation(line: 148, column: 10, scope: !18643)
!18757 = !DILocation(line: 148, column: 3, scope: !18643)
!18758 = distinct !DISubprogram(name: "getcon", scope: !1966, file: !1966, line: 87, type: !1962, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18759 = !DILocalVariable(name: "con", arg: 1, scope: !18758, file: !1966, line: 87, type: !1964)
!18760 = !DILocation(line: 87, column: 29, scope: !18758)
!18761 = !DILocation(line: 88, column: 5, scope: !18758)
!18762 = !DILocation(line: 88, column: 11, scope: !18758)
!18763 = !DILocation(line: 88, column: 22, scope: !18758)
!18764 = distinct !DISubprogram(name: "freecon", scope: !1966, file: !1966, line: 90, type: !1967, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18765 = !DILocalVariable(name: "con", arg: 1, scope: !18764, file: !1966, line: 90, type: !1965)
!18766 = !DILocation(line: 90, column: 29, scope: !18764)
!18767 = !DILocation(line: 90, column: 56, scope: !18764)
!18768 = distinct !DISubprogram(name: "getfscreatecon", scope: !1966, file: !1966, line: 93, type: !1962, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18769 = !DILocalVariable(name: "con", arg: 1, scope: !18768, file: !1966, line: 93, type: !1964)
!18770 = !DILocation(line: 93, column: 37, scope: !18768)
!18771 = !DILocation(line: 94, column: 5, scope: !18768)
!18772 = !DILocation(line: 94, column: 11, scope: !18768)
!18773 = !DILocation(line: 94, column: 22, scope: !18768)
!18774 = distinct !DISubprogram(name: "setfscreatecon", scope: !1966, file: !1966, line: 96, type: !1969, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18775 = !DILocalVariable(name: "con", arg: 1, scope: !18774, file: !1966, line: 96, type: !1965)
!18776 = !DILocation(line: 96, column: 36, scope: !18774)
!18777 = !DILocation(line: 97, column: 5, scope: !18774)
!18778 = !DILocation(line: 97, column: 11, scope: !18774)
!18779 = !DILocation(line: 97, column: 22, scope: !18774)
!18780 = distinct !DISubprogram(name: "matchpathcon", scope: !1966, file: !1966, line: 99, type: !1971, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18781 = !DILocalVariable(name: "file", arg: 1, scope: !18780, file: !1966, line: 99, type: !146)
!18782 = !DILocation(line: 99, column: 27, scope: !18780)
!18783 = !DILocalVariable(name: "m", arg: 2, scope: !18780, file: !1966, line: 100, type: !228)
!18784 = !DILocation(line: 100, column: 22, scope: !18780)
!18785 = !DILocalVariable(name: "con", arg: 3, scope: !18780, file: !1966, line: 101, type: !1964)
!18786 = !DILocation(line: 101, column: 23, scope: !18780)
!18787 = !DILocation(line: 102, column: 5, scope: !18780)
!18788 = !DILocation(line: 102, column: 11, scope: !18780)
!18789 = !DILocation(line: 102, column: 22, scope: !18780)
!18790 = distinct !DISubprogram(name: "getfilecon", scope: !1966, file: !1966, line: 104, type: !1973, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18791 = !DILocalVariable(name: "file", arg: 1, scope: !18790, file: !1966, line: 104, type: !146)
!18792 = !DILocation(line: 104, column: 25, scope: !18790)
!18793 = !DILocalVariable(name: "con", arg: 2, scope: !18790, file: !1966, line: 105, type: !1964)
!18794 = !DILocation(line: 105, column: 33, scope: !18790)
!18795 = !DILocation(line: 106, column: 5, scope: !18790)
!18796 = !DILocation(line: 106, column: 11, scope: !18790)
!18797 = !DILocation(line: 106, column: 22, scope: !18790)
!18798 = distinct !DISubprogram(name: "lgetfilecon", scope: !1966, file: !1966, line: 108, type: !1973, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18799 = !DILocalVariable(name: "file", arg: 1, scope: !18798, file: !1966, line: 108, type: !146)
!18800 = !DILocation(line: 108, column: 26, scope: !18798)
!18801 = !DILocalVariable(name: "con", arg: 2, scope: !18798, file: !1966, line: 109, type: !1964)
!18802 = !DILocation(line: 109, column: 34, scope: !18798)
!18803 = !DILocation(line: 110, column: 5, scope: !18798)
!18804 = !DILocation(line: 110, column: 11, scope: !18798)
!18805 = !DILocation(line: 110, column: 22, scope: !18798)
!18806 = distinct !DISubprogram(name: "fgetfilecon", scope: !1966, file: !1966, line: 112, type: !1975, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18807 = !DILocalVariable(name: "fd", arg: 1, scope: !18806, file: !1966, line: 112, type: !27)
!18808 = !DILocation(line: 112, column: 18, scope: !18806)
!18809 = !DILocalVariable(name: "con", arg: 2, scope: !18806, file: !1966, line: 112, type: !1964)
!18810 = !DILocation(line: 112, column: 42, scope: !18806)
!18811 = !DILocation(line: 113, column: 5, scope: !18806)
!18812 = !DILocation(line: 113, column: 11, scope: !18806)
!18813 = !DILocation(line: 113, column: 22, scope: !18806)
!18814 = distinct !DISubprogram(name: "setfilecon", scope: !1966, file: !1966, line: 115, type: !1977, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18815 = !DILocalVariable(name: "file", arg: 1, scope: !18814, file: !1966, line: 115, type: !146)
!18816 = !DILocation(line: 115, column: 25, scope: !18814)
!18817 = !DILocalVariable(name: "con", arg: 2, scope: !18814, file: !1966, line: 116, type: !1965)
!18818 = !DILocation(line: 116, column: 32, scope: !18814)
!18819 = !DILocation(line: 117, column: 5, scope: !18814)
!18820 = !DILocation(line: 117, column: 11, scope: !18814)
!18821 = !DILocation(line: 117, column: 22, scope: !18814)
!18822 = distinct !DISubprogram(name: "lsetfilecon", scope: !1966, file: !1966, line: 119, type: !1977, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18823 = !DILocalVariable(name: "file", arg: 1, scope: !18822, file: !1966, line: 119, type: !146)
!18824 = !DILocation(line: 119, column: 26, scope: !18822)
!18825 = !DILocalVariable(name: "con", arg: 2, scope: !18822, file: !1966, line: 120, type: !1965)
!18826 = !DILocation(line: 120, column: 33, scope: !18822)
!18827 = !DILocation(line: 121, column: 5, scope: !18822)
!18828 = !DILocation(line: 121, column: 11, scope: !18822)
!18829 = !DILocation(line: 121, column: 22, scope: !18822)
!18830 = distinct !DISubprogram(name: "fsetfilecon", scope: !1966, file: !1966, line: 123, type: !1979, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18831 = !DILocalVariable(name: "fd", arg: 1, scope: !18830, file: !1966, line: 123, type: !27)
!18832 = !DILocation(line: 123, column: 18, scope: !18830)
!18833 = !DILocalVariable(name: "con", arg: 2, scope: !18830, file: !1966, line: 124, type: !1965)
!18834 = !DILocation(line: 124, column: 33, scope: !18830)
!18835 = !DILocation(line: 125, column: 5, scope: !18830)
!18836 = !DILocation(line: 125, column: 11, scope: !18830)
!18837 = !DILocation(line: 125, column: 22, scope: !18830)
!18838 = distinct !DISubprogram(name: "security_check_context", scope: !1966, file: !1966, line: 128, type: !1969, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18839 = !DILocalVariable(name: "con", arg: 1, scope: !18838, file: !1966, line: 128, type: !1965)
!18840 = !DILocation(line: 128, column: 44, scope: !18838)
!18841 = !DILocation(line: 129, column: 5, scope: !18838)
!18842 = !DILocation(line: 129, column: 11, scope: !18838)
!18843 = !DILocation(line: 129, column: 22, scope: !18838)
!18844 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1966, file: !1966, line: 131, type: !1969, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18845 = !DILocalVariable(name: "con", arg: 1, scope: !18844, file: !1966, line: 131, type: !1965)
!18846 = !DILocation(line: 131, column: 48, scope: !18844)
!18847 = !DILocation(line: 132, column: 5, scope: !18844)
!18848 = !DILocation(line: 132, column: 11, scope: !18844)
!18849 = !DILocation(line: 132, column: 22, scope: !18844)
!18850 = distinct !DISubprogram(name: "setexeccon", scope: !1966, file: !1966, line: 134, type: !1969, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18851 = !DILocalVariable(name: "con", arg: 1, scope: !18850, file: !1966, line: 134, type: !1965)
!18852 = !DILocation(line: 134, column: 32, scope: !18850)
!18853 = !DILocation(line: 135, column: 5, scope: !18850)
!18854 = !DILocation(line: 135, column: 11, scope: !18850)
!18855 = !DILocation(line: 135, column: 22, scope: !18850)
!18856 = distinct !DISubprogram(name: "security_compute_create", scope: !1966, file: !1966, line: 137, type: !1981, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18857 = !DILocalVariable(name: "scon", arg: 1, scope: !18856, file: !1966, line: 137, type: !1965)
!18858 = !DILocation(line: 137, column: 45, scope: !18856)
!18859 = !DILocalVariable(name: "tcon", arg: 2, scope: !18856, file: !1966, line: 138, type: !1965)
!18860 = !DILocation(line: 138, column: 45, scope: !18856)
!18861 = !DILocalVariable(name: "tclass", arg: 3, scope: !18856, file: !1966, line: 139, type: !1983)
!18862 = !DILocation(line: 139, column: 43, scope: !18856)
!18863 = !DILocalVariable(name: "newcon", arg: 4, scope: !18856, file: !1966, line: 140, type: !1964)
!18864 = !DILocation(line: 140, column: 46, scope: !18856)
!18865 = !DILocation(line: 141, column: 5, scope: !18856)
!18866 = !DILocation(line: 141, column: 11, scope: !18856)
!18867 = !DILocation(line: 141, column: 22, scope: !18856)
!18868 = distinct !DISubprogram(name: "string_to_security_class", scope: !1966, file: !1966, line: 143, type: !1984, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18869 = !DILocalVariable(name: "name", arg: 1, scope: !18868, file: !1966, line: 143, type: !146)
!18870 = !DILocation(line: 143, column: 39, scope: !18868)
!18871 = !DILocation(line: 144, column: 5, scope: !18868)
!18872 = !DILocation(line: 144, column: 11, scope: !18868)
!18873 = !DILocation(line: 144, column: 22, scope: !18868)
!18874 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1966, file: !1966, line: 146, type: !731, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1959, retainedNodes: !152)
!18875 = !DILocalVariable(name: "path", arg: 1, scope: !18874, file: !1966, line: 146, type: !146)
!18876 = !DILocation(line: 146, column: 39, scope: !18874)
!18877 = !DILocalVariable(name: "prefix", arg: 2, scope: !18874, file: !1966, line: 147, type: !146)
!18878 = !DILocation(line: 147, column: 39, scope: !18874)
!18879 = !DILocation(line: 148, column: 5, scope: !18874)
!18880 = !DILocation(line: 148, column: 11, scope: !18874)
!18881 = !DILocation(line: 148, column: 22, scope: !18874)
!18882 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !18883, file: !18883, line: 66, type: !1989, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18883 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!18884 = !DILocalVariable(name: "st", arg: 1, scope: !18882, file: !18883, line: 66, type: !1991)
!18885 = !DILocation(line: 66, column: 39, scope: !18882)
!18886 = !DILocation(line: 69, column: 10, scope: !18882)
!18887 = !DILocation(line: 69, column: 38, scope: !18882)
!18888 = !{!3810, !2467, i64 80}
!18889 = !DILocation(line: 69, column: 3, scope: !18882)
!18890 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !18883, file: !18883, line: 79, type: !1989, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18891 = !DILocalVariable(name: "st", arg: 1, scope: !18890, file: !18883, line: 79, type: !1991)
!18892 = !DILocation(line: 79, column: 39, scope: !18890)
!18893 = !DILocation(line: 82, column: 10, scope: !18890)
!18894 = !DILocation(line: 82, column: 38, scope: !18890)
!18895 = !{!3810, !2467, i64 112}
!18896 = !DILocation(line: 82, column: 3, scope: !18890)
!18897 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !18883, file: !18883, line: 92, type: !1989, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18898 = !DILocalVariable(name: "st", arg: 1, scope: !18897, file: !18883, line: 92, type: !1991)
!18899 = !DILocation(line: 92, column: 39, scope: !18897)
!18900 = !DILocation(line: 95, column: 10, scope: !18897)
!18901 = !DILocation(line: 95, column: 38, scope: !18897)
!18902 = !{!3810, !2467, i64 96}
!18903 = !DILocation(line: 95, column: 3, scope: !18897)
!18904 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !18883, file: !18883, line: 105, type: !1989, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18905 = !DILocalVariable(name: "st", arg: 1, scope: !18904, file: !18883, line: 105, type: !1991)
!18906 = !DILocation(line: 105, column: 43, scope: !18904)
!18907 = !DILocation(line: 112, column: 3, scope: !18904)
!18908 = distinct !DISubprogram(name: "get_stat_atime", scope: !18883, file: !18883, line: 118, type: !2014, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18909 = !DILocalVariable(name: "st", arg: 1, scope: !18908, file: !18883, line: 118, type: !1991)
!18910 = !DILocation(line: 118, column: 36, scope: !18908)
!18911 = !DILocation(line: 121, column: 10, scope: !18908)
!18912 = !DILocation(line: 121, column: 3, scope: !18908)
!18913 = distinct !DISubprogram(name: "get_stat_ctime", scope: !18883, file: !18883, line: 132, type: !2014, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18914 = !DILocalVariable(name: "st", arg: 1, scope: !18913, file: !18883, line: 132, type: !1991)
!18915 = !DILocation(line: 132, column: 36, scope: !18913)
!18916 = !DILocation(line: 135, column: 10, scope: !18913)
!18917 = !DILocation(line: 135, column: 3, scope: !18913)
!18918 = distinct !DISubprogram(name: "get_stat_mtime", scope: !18883, file: !18883, line: 146, type: !2014, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18919 = !DILocalVariable(name: "st", arg: 1, scope: !18918, file: !18883, line: 146, type: !1991)
!18920 = !DILocation(line: 146, column: 36, scope: !18918)
!18921 = !DILocation(line: 149, column: 10, scope: !18918)
!18922 = !DILocation(line: 149, column: 3, scope: !18918)
!18923 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !18883, file: !18883, line: 161, type: !2014, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18924 = !DILocalVariable(name: "st", arg: 1, scope: !18923, file: !18883, line: 161, type: !1991)
!18925 = !DILocation(line: 161, column: 40, scope: !18923)
!18926 = !DILocalVariable(name: "t", scope: !18923, file: !18883, line: 163, type: !2007)
!18927 = !DILocation(line: 163, column: 19, scope: !18923)
!18928 = !DILocation(line: 183, column: 5, scope: !18923)
!18929 = !DILocation(line: 183, column: 12, scope: !18923)
!18930 = !DILocation(line: 184, column: 5, scope: !18923)
!18931 = !DILocation(line: 184, column: 13, scope: !18923)
!18932 = !DILocation(line: 202, column: 3, scope: !18923)
!18933 = distinct !DISubprogram(name: "stat_time_normalize", scope: !18883, file: !18883, line: 211, type: !2016, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1986, retainedNodes: !152)
!18934 = !DILocalVariable(name: "result", arg: 1, scope: !18933, file: !18883, line: 211, type: !27)
!18935 = !DILocation(line: 211, column: 26, scope: !18933)
!18936 = !DILocalVariable(name: "st", arg: 2, scope: !18933, file: !18883, line: 211, type: !2018)
!18937 = !DILocation(line: 211, column: 47, scope: !18933)
!18938 = !DILocation(line: 243, column: 10, scope: !18933)
!18939 = !DILocation(line: 243, column: 3, scope: !18933)
!18940 = distinct !DISubprogram(name: "make_timespec", scope: !18941, file: !18941, line: 54, type: !2022, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!18941 = !DIFile(filename: "./lib/timespec.h", directory: "/home/mbarbar/software/coreutils-8.31")
!18942 = !DILocalVariable(name: "s", arg: 1, scope: !18940, file: !18941, line: 54, type: !162)
!18943 = !DILocation(line: 54, column: 23, scope: !18940)
!18944 = !DILocalVariable(name: "ns", arg: 2, scope: !18940, file: !18941, line: 54, type: !166)
!18945 = !DILocation(line: 54, column: 35, scope: !18940)
!18946 = !DILocalVariable(name: "r", scope: !18940, file: !18941, line: 56, type: !2024)
!18947 = !DILocation(line: 56, column: 19, scope: !18940)
!18948 = !DILocation(line: 57, column: 14, scope: !18940)
!18949 = !DILocation(line: 57, column: 5, scope: !18940)
!18950 = !DILocation(line: 57, column: 12, scope: !18940)
!18951 = !DILocation(line: 58, column: 15, scope: !18940)
!18952 = !DILocation(line: 58, column: 5, scope: !18940)
!18953 = !DILocation(line: 58, column: 13, scope: !18940)
!18954 = !DILocation(line: 59, column: 3, scope: !18940)
!18955 = distinct !DISubprogram(name: "timespec_cmp", scope: !18941, file: !18941, line: 89, type: !2028, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!18956 = !DILocalVariable(name: "a", arg: 1, scope: !18955, file: !18941, line: 89, type: !2024)
!18957 = !DILocation(line: 89, column: 31, scope: !18955)
!18958 = !DILocalVariable(name: "b", arg: 2, scope: !18955, file: !18941, line: 89, type: !2024)
!18959 = !DILocation(line: 89, column: 50, scope: !18955)
!18960 = !DILocation(line: 91, column: 9, scope: !18961)
!18961 = distinct !DILexicalBlock(scope: !18955, file: !18941, line: 91, column: 7)
!18962 = !DILocation(line: 91, column: 20, scope: !18961)
!18963 = !DILocation(line: 91, column: 16, scope: !18961)
!18964 = !DILocation(line: 91, column: 7, scope: !18955)
!18965 = !DILocation(line: 92, column: 5, scope: !18961)
!18966 = !DILocation(line: 93, column: 9, scope: !18967)
!18967 = distinct !DILexicalBlock(scope: !18955, file: !18941, line: 93, column: 7)
!18968 = !DILocation(line: 93, column: 20, scope: !18967)
!18969 = !DILocation(line: 93, column: 16, scope: !18967)
!18970 = !DILocation(line: 93, column: 7, scope: !18955)
!18971 = !DILocation(line: 94, column: 5, scope: !18967)
!18972 = !DILocation(line: 98, column: 3, scope: !18955)
!18973 = !DILocation(line: 99, column: 3, scope: !18955)
!18974 = !DILocation(line: 101, column: 12, scope: !18955)
!18975 = !DILocation(line: 101, column: 24, scope: !18955)
!18976 = !DILocation(line: 101, column: 20, scope: !18955)
!18977 = !DILocation(line: 101, column: 10, scope: !18955)
!18978 = !DILocation(line: 101, column: 3, scope: !18955)
!18979 = !DILocation(line: 102, column: 1, scope: !18955)
!18980 = distinct !DISubprogram(name: "timespec_sign", scope: !18941, file: !18941, line: 107, type: !2030, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!18981 = !DILocalVariable(name: "a", arg: 1, scope: !18980, file: !18941, line: 107, type: !2024)
!18982 = !DILocation(line: 107, column: 32, scope: !18980)
!18983 = !DILocation(line: 109, column: 12, scope: !18980)
!18984 = !DILocation(line: 109, column: 19, scope: !18980)
!18985 = !DILocation(line: 109, column: 10, scope: !18980)
!18986 = !DILocation(line: 109, column: 32, scope: !18980)
!18987 = !DILocation(line: 109, column: 30, scope: !18980)
!18988 = !DILocation(line: 109, column: 39, scope: !18980)
!18989 = !DILocation(line: 109, column: 44, scope: !18980)
!18990 = !DILocation(line: 109, column: 3, scope: !18980)
!18991 = distinct !DISubprogram(name: "timespectod", scope: !18941, file: !18941, line: 121, type: !2032, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !152)
!18992 = !DILocalVariable(name: "a", arg: 1, scope: !18991, file: !18941, line: 121, type: !2024)
!18993 = !DILocation(line: 121, column: 30, scope: !18991)
!18994 = !DILocation(line: 123, column: 12, scope: !18991)
!18995 = !DILocation(line: 123, column: 10, scope: !18991)
!18996 = !DILocation(line: 123, column: 23, scope: !18991)
!18997 = !DILocation(line: 123, column: 21, scope: !18991)
!18998 = !DILocation(line: 123, column: 31, scope: !18991)
!18999 = !DILocation(line: 123, column: 19, scope: !18991)
!19000 = !DILocation(line: 123, column: 3, scope: !18991)
!19001 = distinct !DISubprogram(name: "version_etc_arn", scope: !19002, file: !19002, line: 61, type: !2038, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19002 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19003 = !DILocalVariable(name: "stream", arg: 1, scope: !19001, file: !19002, line: 61, type: !2040)
!19004 = !DILocation(line: 61, column: 24, scope: !19001)
!19005 = !DILocalVariable(name: "command_name", arg: 2, scope: !19001, file: !19002, line: 62, type: !146)
!19006 = !DILocation(line: 62, column: 30, scope: !19001)
!19007 = !DILocalVariable(name: "package", arg: 3, scope: !19001, file: !19002, line: 62, type: !146)
!19008 = !DILocation(line: 62, column: 56, scope: !19001)
!19009 = !DILocalVariable(name: "version", arg: 4, scope: !19001, file: !19002, line: 63, type: !146)
!19010 = !DILocation(line: 63, column: 30, scope: !19001)
!19011 = !DILocalVariable(name: "authors", arg: 5, scope: !19001, file: !19002, line: 64, type: !567)
!19012 = !DILocation(line: 64, column: 39, scope: !19001)
!19013 = !DILocalVariable(name: "n_authors", arg: 6, scope: !19001, file: !19002, line: 64, type: !149)
!19014 = !DILocation(line: 64, column: 55, scope: !19001)
!19015 = !DILocation(line: 66, column: 7, scope: !19016)
!19016 = distinct !DILexicalBlock(scope: !19001, file: !19002, line: 66, column: 7)
!19017 = !DILocation(line: 66, column: 7, scope: !19001)
!19018 = !DILocation(line: 67, column: 14, scope: !19016)
!19019 = !DILocation(line: 67, column: 38, scope: !19016)
!19020 = !DILocation(line: 67, column: 52, scope: !19016)
!19021 = !DILocation(line: 67, column: 61, scope: !19016)
!19022 = !DILocation(line: 67, column: 5, scope: !19016)
!19023 = !DILocation(line: 69, column: 14, scope: !19016)
!19024 = !DILocation(line: 69, column: 33, scope: !19016)
!19025 = !DILocation(line: 69, column: 42, scope: !19016)
!19026 = !DILocation(line: 69, column: 5, scope: !19016)
!19027 = !DILocation(line: 83, column: 12, scope: !19001)
!19028 = !DILocation(line: 83, column: 43, scope: !19001)
!19029 = !DILocation(line: 83, column: 3, scope: !19001)
!19030 = !DILocation(line: 85, column: 3, scope: !19001)
!19031 = !DILocation(line: 94, column: 11, scope: !19001)
!19032 = !DILocation(line: 94, column: 3, scope: !19001)
!19033 = !DILocation(line: 99, column: 7, scope: !19034)
!19034 = distinct !DILexicalBlock(scope: !19001, file: !19002, line: 95, column: 5)
!19035 = !DILocation(line: 102, column: 16, scope: !19034)
!19036 = !DILocation(line: 102, column: 24, scope: !19034)
!19037 = !DILocation(line: 102, column: 47, scope: !19034)
!19038 = !DILocation(line: 102, column: 7, scope: !19034)
!19039 = !DILocation(line: 103, column: 7, scope: !19034)
!19040 = !DILocation(line: 106, column: 16, scope: !19034)
!19041 = !DILocation(line: 106, column: 24, scope: !19034)
!19042 = !DILocation(line: 106, column: 54, scope: !19034)
!19043 = !DILocation(line: 106, column: 66, scope: !19034)
!19044 = !DILocation(line: 106, column: 7, scope: !19034)
!19045 = !DILocation(line: 107, column: 7, scope: !19034)
!19046 = !DILocation(line: 110, column: 16, scope: !19034)
!19047 = !DILocation(line: 110, column: 24, scope: !19034)
!19048 = !DILocation(line: 111, column: 16, scope: !19034)
!19049 = !DILocation(line: 111, column: 28, scope: !19034)
!19050 = !DILocation(line: 111, column: 40, scope: !19034)
!19051 = !DILocation(line: 110, column: 7, scope: !19034)
!19052 = !DILocation(line: 112, column: 7, scope: !19034)
!19053 = !DILocation(line: 117, column: 16, scope: !19034)
!19054 = !DILocation(line: 117, column: 24, scope: !19034)
!19055 = !DILocation(line: 118, column: 16, scope: !19034)
!19056 = !DILocation(line: 118, column: 28, scope: !19034)
!19057 = !DILocation(line: 118, column: 40, scope: !19034)
!19058 = !DILocation(line: 118, column: 52, scope: !19034)
!19059 = !DILocation(line: 117, column: 7, scope: !19034)
!19060 = !DILocation(line: 119, column: 7, scope: !19034)
!19061 = !DILocation(line: 124, column: 16, scope: !19034)
!19062 = !DILocation(line: 124, column: 24, scope: !19034)
!19063 = !DILocation(line: 125, column: 16, scope: !19034)
!19064 = !DILocation(line: 125, column: 28, scope: !19034)
!19065 = !DILocation(line: 125, column: 40, scope: !19034)
!19066 = !DILocation(line: 125, column: 52, scope: !19034)
!19067 = !DILocation(line: 125, column: 64, scope: !19034)
!19068 = !DILocation(line: 124, column: 7, scope: !19034)
!19069 = !DILocation(line: 126, column: 7, scope: !19034)
!19070 = !DILocation(line: 131, column: 16, scope: !19034)
!19071 = !DILocation(line: 131, column: 24, scope: !19034)
!19072 = !DILocation(line: 132, column: 16, scope: !19034)
!19073 = !DILocation(line: 132, column: 28, scope: !19034)
!19074 = !DILocation(line: 132, column: 40, scope: !19034)
!19075 = !DILocation(line: 132, column: 52, scope: !19034)
!19076 = !DILocation(line: 132, column: 64, scope: !19034)
!19077 = !DILocation(line: 133, column: 16, scope: !19034)
!19078 = !DILocation(line: 131, column: 7, scope: !19034)
!19079 = !DILocation(line: 134, column: 7, scope: !19034)
!19080 = !DILocation(line: 139, column: 16, scope: !19034)
!19081 = !DILocation(line: 139, column: 24, scope: !19034)
!19082 = !DILocation(line: 140, column: 16, scope: !19034)
!19083 = !DILocation(line: 140, column: 28, scope: !19034)
!19084 = !DILocation(line: 140, column: 40, scope: !19034)
!19085 = !DILocation(line: 140, column: 52, scope: !19034)
!19086 = !DILocation(line: 140, column: 64, scope: !19034)
!19087 = !DILocation(line: 141, column: 16, scope: !19034)
!19088 = !DILocation(line: 141, column: 28, scope: !19034)
!19089 = !DILocation(line: 139, column: 7, scope: !19034)
!19090 = !DILocation(line: 142, column: 7, scope: !19034)
!19091 = !DILocation(line: 147, column: 16, scope: !19034)
!19092 = !DILocation(line: 147, column: 24, scope: !19034)
!19093 = !DILocation(line: 149, column: 17, scope: !19034)
!19094 = !DILocation(line: 149, column: 29, scope: !19034)
!19095 = !DILocation(line: 149, column: 41, scope: !19034)
!19096 = !DILocation(line: 149, column: 53, scope: !19034)
!19097 = !DILocation(line: 149, column: 65, scope: !19034)
!19098 = !DILocation(line: 150, column: 17, scope: !19034)
!19099 = !DILocation(line: 150, column: 29, scope: !19034)
!19100 = !DILocation(line: 150, column: 41, scope: !19034)
!19101 = !DILocation(line: 147, column: 7, scope: !19034)
!19102 = !DILocation(line: 151, column: 7, scope: !19034)
!19103 = !DILocation(line: 156, column: 16, scope: !19034)
!19104 = !DILocation(line: 156, column: 24, scope: !19034)
!19105 = !DILocation(line: 158, column: 16, scope: !19034)
!19106 = !DILocation(line: 158, column: 28, scope: !19034)
!19107 = !DILocation(line: 158, column: 40, scope: !19034)
!19108 = !DILocation(line: 158, column: 52, scope: !19034)
!19109 = !DILocation(line: 158, column: 64, scope: !19034)
!19110 = !DILocation(line: 159, column: 16, scope: !19034)
!19111 = !DILocation(line: 159, column: 28, scope: !19034)
!19112 = !DILocation(line: 159, column: 40, scope: !19034)
!19113 = !DILocation(line: 159, column: 52, scope: !19034)
!19114 = !DILocation(line: 156, column: 7, scope: !19034)
!19115 = !DILocation(line: 160, column: 7, scope: !19034)
!19116 = !DILocation(line: 167, column: 16, scope: !19034)
!19117 = !DILocation(line: 167, column: 24, scope: !19034)
!19118 = !DILocation(line: 169, column: 17, scope: !19034)
!19119 = !DILocation(line: 169, column: 29, scope: !19034)
!19120 = !DILocation(line: 169, column: 41, scope: !19034)
!19121 = !DILocation(line: 169, column: 53, scope: !19034)
!19122 = !DILocation(line: 169, column: 65, scope: !19034)
!19123 = !DILocation(line: 170, column: 17, scope: !19034)
!19124 = !DILocation(line: 170, column: 29, scope: !19034)
!19125 = !DILocation(line: 170, column: 41, scope: !19034)
!19126 = !DILocation(line: 170, column: 53, scope: !19034)
!19127 = !DILocation(line: 167, column: 7, scope: !19034)
!19128 = !DILocation(line: 171, column: 7, scope: !19034)
!19129 = !DILocation(line: 173, column: 1, scope: !19001)
!19130 = distinct !DISubprogram(name: "version_etc_ar", scope: !19002, file: !19002, line: 180, type: !2075, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19131 = !DILocalVariable(name: "stream", arg: 1, scope: !19130, file: !19002, line: 180, type: !2040)
!19132 = !DILocation(line: 180, column: 23, scope: !19130)
!19133 = !DILocalVariable(name: "command_name", arg: 2, scope: !19130, file: !19002, line: 181, type: !146)
!19134 = !DILocation(line: 181, column: 29, scope: !19130)
!19135 = !DILocalVariable(name: "package", arg: 3, scope: !19130, file: !19002, line: 181, type: !146)
!19136 = !DILocation(line: 181, column: 55, scope: !19130)
!19137 = !DILocalVariable(name: "version", arg: 4, scope: !19130, file: !19002, line: 182, type: !146)
!19138 = !DILocation(line: 182, column: 29, scope: !19130)
!19139 = !DILocalVariable(name: "authors", arg: 5, scope: !19130, file: !19002, line: 182, type: !567)
!19140 = !DILocation(line: 182, column: 59, scope: !19130)
!19141 = !DILocalVariable(name: "n_authors", scope: !19130, file: !19002, line: 184, type: !149)
!19142 = !DILocation(line: 184, column: 10, scope: !19130)
!19143 = !DILocation(line: 186, column: 18, scope: !19144)
!19144 = distinct !DILexicalBlock(scope: !19130, file: !19002, line: 186, column: 3)
!19145 = !DILocation(line: 186, column: 8, scope: !19144)
!19146 = !DILocation(line: 186, column: 23, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19144, file: !19002, line: 186, column: 3)
!19148 = !DILocation(line: 186, column: 31, scope: !19147)
!19149 = !DILocation(line: 186, column: 3, scope: !19144)
!19150 = !DILocation(line: 186, column: 52, scope: !19147)
!19151 = !DILocation(line: 186, column: 3, scope: !19147)
!19152 = distinct !{!19152, !19149, !19153}
!19153 = !DILocation(line: 187, column: 5, scope: !19144)
!19154 = !DILocation(line: 188, column: 20, scope: !19130)
!19155 = !DILocation(line: 188, column: 28, scope: !19130)
!19156 = !DILocation(line: 188, column: 42, scope: !19130)
!19157 = !DILocation(line: 188, column: 51, scope: !19130)
!19158 = !DILocation(line: 188, column: 60, scope: !19130)
!19159 = !DILocation(line: 188, column: 69, scope: !19130)
!19160 = !DILocation(line: 188, column: 3, scope: !19130)
!19161 = !DILocation(line: 189, column: 1, scope: !19130)
!19162 = distinct !DISubprogram(name: "version_etc_va", scope: !19002, file: !19002, line: 196, type: !2077, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19163 = !DILocalVariable(name: "stream", arg: 1, scope: !19162, file: !19002, line: 196, type: !2040)
!19164 = !DILocation(line: 196, column: 23, scope: !19162)
!19165 = !DILocalVariable(name: "command_name", arg: 2, scope: !19162, file: !19002, line: 197, type: !146)
!19166 = !DILocation(line: 197, column: 29, scope: !19162)
!19167 = !DILocalVariable(name: "package", arg: 3, scope: !19162, file: !19002, line: 197, type: !146)
!19168 = !DILocation(line: 197, column: 55, scope: !19162)
!19169 = !DILocalVariable(name: "version", arg: 4, scope: !19162, file: !19002, line: 198, type: !146)
!19170 = !DILocation(line: 198, column: 29, scope: !19162)
!19171 = !DILocalVariable(name: "authors", arg: 5, scope: !19162, file: !19002, line: 198, type: !2079)
!19172 = !DILocation(line: 198, column: 46, scope: !19162)
!19173 = !DILocalVariable(name: "n_authors", scope: !19162, file: !19002, line: 200, type: !149)
!19174 = !DILocation(line: 200, column: 10, scope: !19162)
!19175 = !DILocalVariable(name: "authtab", scope: !19162, file: !19002, line: 201, type: !2086)
!19176 = !DILocation(line: 201, column: 15, scope: !19162)
!19177 = !DILocation(line: 203, column: 18, scope: !19178)
!19178 = distinct !DILexicalBlock(scope: !19162, file: !19002, line: 203, column: 3)
!19179 = !DILocation(line: 203, column: 8, scope: !19178)
!19180 = !DILocation(line: 204, column: 8, scope: !19181)
!19181 = distinct !DILexicalBlock(scope: !19178, file: !19002, line: 203, column: 3)
!19182 = !DILocation(line: 204, column: 18, scope: !19181)
!19183 = !DILocation(line: 205, column: 10, scope: !19181)
!19184 = !DILocation(line: 205, column: 35, scope: !19181)
!19185 = !DILocation(line: 205, column: 22, scope: !19181)
!19186 = !DILocation(line: 205, column: 14, scope: !19181)
!19187 = !DILocation(line: 205, column: 33, scope: !19181)
!19188 = !DILocation(line: 205, column: 67, scope: !19181)
!19189 = !DILocation(line: 0, scope: !19181)
!19190 = !DILocation(line: 203, column: 3, scope: !19178)
!19191 = !DILocation(line: 206, column: 17, scope: !19181)
!19192 = !DILocation(line: 203, column: 3, scope: !19181)
!19193 = distinct !{!19193, !19190, !19194}
!19194 = !DILocation(line: 207, column: 5, scope: !19178)
!19195 = !DILocation(line: 208, column: 20, scope: !19162)
!19196 = !DILocation(line: 208, column: 28, scope: !19162)
!19197 = !DILocation(line: 208, column: 42, scope: !19162)
!19198 = !DILocation(line: 208, column: 51, scope: !19162)
!19199 = !DILocation(line: 209, column: 20, scope: !19162)
!19200 = !DILocation(line: 209, column: 29, scope: !19162)
!19201 = !DILocation(line: 208, column: 3, scope: !19162)
!19202 = !DILocation(line: 210, column: 1, scope: !19162)
!19203 = distinct !DISubprogram(name: "version_etc", scope: !19002, file: !19002, line: 227, type: !19204, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19204 = !DISubroutineType(types: !19205)
!19205 = !{null, !2040, !146, !146, !146, null}
!19206 = !DILocalVariable(name: "stream", arg: 1, scope: !19203, file: !19002, line: 227, type: !2040)
!19207 = !DILocation(line: 227, column: 20, scope: !19203)
!19208 = !DILocalVariable(name: "command_name", arg: 2, scope: !19203, file: !19002, line: 228, type: !146)
!19209 = !DILocation(line: 228, column: 26, scope: !19203)
!19210 = !DILocalVariable(name: "package", arg: 3, scope: !19203, file: !19002, line: 228, type: !146)
!19211 = !DILocation(line: 228, column: 52, scope: !19203)
!19212 = !DILocalVariable(name: "version", arg: 4, scope: !19203, file: !19002, line: 229, type: !146)
!19213 = !DILocation(line: 229, column: 26, scope: !19203)
!19214 = !DILocalVariable(name: "authors", scope: !19203, file: !19002, line: 231, type: !2089)
!19215 = !DILocation(line: 231, column: 11, scope: !19203)
!19216 = !DILocation(line: 233, column: 3, scope: !19203)
!19217 = !DILocation(line: 234, column: 19, scope: !19203)
!19218 = !DILocation(line: 234, column: 27, scope: !19203)
!19219 = !DILocation(line: 234, column: 41, scope: !19203)
!19220 = !DILocation(line: 234, column: 50, scope: !19203)
!19221 = !DILocation(line: 234, column: 59, scope: !19203)
!19222 = !DILocation(line: 234, column: 3, scope: !19203)
!19223 = !DILocation(line: 235, column: 3, scope: !19203)
!19224 = !DILocation(line: 236, column: 1, scope: !19203)
!19225 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !19002, file: !19002, line: 239, type: !341, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2035, retainedNodes: !152)
!19226 = !DILocation(line: 245, column: 11, scope: !19225)
!19227 = !DILocation(line: 245, column: 3, scope: !19225)
!19228 = !DILocation(line: 251, column: 11, scope: !19225)
!19229 = !DILocation(line: 251, column: 3, scope: !19225)
!19230 = !DILocation(line: 256, column: 3, scope: !19225)
!19231 = !DILocation(line: 258, column: 1, scope: !19225)
!19232 = distinct !DISubprogram(name: "xnmalloc", scope: !19233, file: !19233, line: 99, type: !2098, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19233 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!19234 = !DILocalVariable(name: "n", arg: 1, scope: !19232, file: !19233, line: 99, type: !149)
!19235 = !DILocation(line: 99, column: 18, scope: !19232)
!19236 = !DILocalVariable(name: "s", arg: 2, scope: !19232, file: !19233, line: 99, type: !149)
!19237 = !DILocation(line: 99, column: 28, scope: !19232)
!19238 = !DILocation(line: 101, column: 7, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19232, file: !19233, line: 101, column: 7)
!19240 = !DILocation(line: 101, column: 7, scope: !19232)
!19241 = !DILocation(line: 102, column: 5, scope: !19239)
!19242 = !DILocation(line: 103, column: 19, scope: !19232)
!19243 = !DILocation(line: 103, column: 23, scope: !19232)
!19244 = !DILocation(line: 103, column: 21, scope: !19232)
!19245 = !DILocation(line: 103, column: 10, scope: !19232)
!19246 = !DILocation(line: 103, column: 3, scope: !19232)
!19247 = distinct !DISubprogram(name: "xmalloc", scope: !19248, file: !19248, line: 39, type: !376, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19248 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19249 = !DILocalVariable(name: "n", arg: 1, scope: !19247, file: !19248, line: 39, type: !149)
!19250 = !DILocation(line: 39, column: 17, scope: !19247)
!19251 = !DILocalVariable(name: "p", scope: !19247, file: !19248, line: 41, type: !167)
!19252 = !DILocation(line: 41, column: 9, scope: !19247)
!19253 = !DILocation(line: 41, column: 21, scope: !19247)
!19254 = !DILocation(line: 41, column: 13, scope: !19247)
!19255 = !DILocation(line: 42, column: 8, scope: !19256)
!19256 = distinct !DILexicalBlock(scope: !19247, file: !19248, line: 42, column: 7)
!19257 = !DILocation(line: 42, column: 10, scope: !19256)
!19258 = !DILocation(line: 42, column: 13, scope: !19256)
!19259 = !DILocation(line: 42, column: 15, scope: !19256)
!19260 = !DILocation(line: 42, column: 7, scope: !19247)
!19261 = !DILocation(line: 43, column: 5, scope: !19256)
!19262 = !DILocation(line: 44, column: 10, scope: !19247)
!19263 = !DILocation(line: 44, column: 3, scope: !19247)
!19264 = distinct !DISubprogram(name: "xnrealloc", scope: !19233, file: !19233, line: 112, type: !2100, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19265 = !DILocalVariable(name: "p", arg: 1, scope: !19264, file: !19233, line: 112, type: !167)
!19266 = !DILocation(line: 112, column: 18, scope: !19264)
!19267 = !DILocalVariable(name: "n", arg: 2, scope: !19264, file: !19233, line: 112, type: !149)
!19268 = !DILocation(line: 112, column: 28, scope: !19264)
!19269 = !DILocalVariable(name: "s", arg: 3, scope: !19264, file: !19233, line: 112, type: !149)
!19270 = !DILocation(line: 112, column: 38, scope: !19264)
!19271 = !DILocation(line: 114, column: 7, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19264, file: !19233, line: 114, column: 7)
!19273 = !DILocation(line: 114, column: 7, scope: !19264)
!19274 = !DILocation(line: 115, column: 5, scope: !19272)
!19275 = !DILocation(line: 116, column: 20, scope: !19264)
!19276 = !DILocation(line: 116, column: 23, scope: !19264)
!19277 = !DILocation(line: 116, column: 27, scope: !19264)
!19278 = !DILocation(line: 116, column: 25, scope: !19264)
!19279 = !DILocation(line: 116, column: 10, scope: !19264)
!19280 = !DILocation(line: 116, column: 3, scope: !19264)
!19281 = distinct !DISubprogram(name: "xrealloc", scope: !19248, file: !19248, line: 51, type: !380, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19282 = !DILocalVariable(name: "p", arg: 1, scope: !19281, file: !19248, line: 51, type: !167)
!19283 = !DILocation(line: 51, column: 17, scope: !19281)
!19284 = !DILocalVariable(name: "n", arg: 2, scope: !19281, file: !19248, line: 51, type: !149)
!19285 = !DILocation(line: 51, column: 27, scope: !19281)
!19286 = !DILocation(line: 53, column: 8, scope: !19287)
!19287 = distinct !DILexicalBlock(scope: !19281, file: !19248, line: 53, column: 7)
!19288 = !DILocation(line: 53, column: 10, scope: !19287)
!19289 = !DILocation(line: 53, column: 13, scope: !19287)
!19290 = !DILocation(line: 53, column: 7, scope: !19281)
!19291 = !DILocation(line: 57, column: 13, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19287, file: !19248, line: 54, column: 5)
!19293 = !DILocation(line: 57, column: 7, scope: !19292)
!19294 = !DILocation(line: 58, column: 7, scope: !19292)
!19295 = !DILocation(line: 61, column: 16, scope: !19281)
!19296 = !DILocation(line: 61, column: 19, scope: !19281)
!19297 = !DILocation(line: 61, column: 7, scope: !19281)
!19298 = !DILocation(line: 61, column: 5, scope: !19281)
!19299 = !DILocation(line: 62, column: 8, scope: !19300)
!19300 = distinct !DILexicalBlock(scope: !19281, file: !19248, line: 62, column: 7)
!19301 = !DILocation(line: 62, column: 10, scope: !19300)
!19302 = !DILocation(line: 62, column: 13, scope: !19300)
!19303 = !DILocation(line: 62, column: 7, scope: !19281)
!19304 = !DILocation(line: 63, column: 5, scope: !19300)
!19305 = !DILocation(line: 64, column: 10, scope: !19281)
!19306 = !DILocation(line: 64, column: 3, scope: !19281)
!19307 = !DILocation(line: 65, column: 1, scope: !19281)
!19308 = distinct !DISubprogram(name: "x2nrealloc", scope: !19233, file: !19233, line: 174, type: !2102, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19309 = !DILocalVariable(name: "p", arg: 1, scope: !19308, file: !19233, line: 174, type: !167)
!19310 = !DILocation(line: 174, column: 19, scope: !19308)
!19311 = !DILocalVariable(name: "pn", arg: 2, scope: !19308, file: !19233, line: 174, type: !148)
!19312 = !DILocation(line: 174, column: 30, scope: !19308)
!19313 = !DILocalVariable(name: "s", arg: 3, scope: !19308, file: !19233, line: 174, type: !149)
!19314 = !DILocation(line: 174, column: 41, scope: !19308)
!19315 = !DILocalVariable(name: "n", scope: !19308, file: !19233, line: 176, type: !149)
!19316 = !DILocation(line: 176, column: 10, scope: !19308)
!19317 = !DILocation(line: 176, column: 15, scope: !19308)
!19318 = !DILocation(line: 176, column: 14, scope: !19308)
!19319 = !DILocation(line: 178, column: 9, scope: !19320)
!19320 = distinct !DILexicalBlock(scope: !19308, file: !19233, line: 178, column: 7)
!19321 = !DILocation(line: 178, column: 7, scope: !19308)
!19322 = !DILocation(line: 180, column: 13, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19324, file: !19233, line: 180, column: 11)
!19324 = distinct !DILexicalBlock(scope: !19320, file: !19233, line: 179, column: 5)
!19325 = !DILocation(line: 180, column: 11, scope: !19324)
!19326 = !DILocation(line: 188, column: 32, scope: !19327)
!19327 = distinct !DILexicalBlock(scope: !19323, file: !19233, line: 181, column: 9)
!19328 = !DILocation(line: 188, column: 30, scope: !19327)
!19329 = !DILocation(line: 188, column: 13, scope: !19327)
!19330 = !DILocation(line: 189, column: 17, scope: !19327)
!19331 = !DILocation(line: 189, column: 16, scope: !19327)
!19332 = !DILocation(line: 189, column: 13, scope: !19327)
!19333 = !DILocation(line: 190, column: 9, scope: !19327)
!19334 = !DILocation(line: 191, column: 11, scope: !19335)
!19335 = distinct !DILexicalBlock(scope: !19324, file: !19233, line: 191, column: 11)
!19336 = !DILocation(line: 191, column: 11, scope: !19324)
!19337 = !DILocation(line: 192, column: 9, scope: !19335)
!19338 = !DILocation(line: 193, column: 5, scope: !19324)
!19339 = !DILocation(line: 200, column: 71, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19341, file: !19233, line: 200, column: 11)
!19341 = distinct !DILexicalBlock(scope: !19320, file: !19233, line: 195, column: 5)
!19342 = !DILocation(line: 200, column: 69, scope: !19340)
!19343 = !DILocation(line: 201, column: 14, scope: !19340)
!19344 = !DILocation(line: 201, column: 11, scope: !19340)
!19345 = !DILocation(line: 200, column: 11, scope: !19341)
!19346 = !DILocation(line: 202, column: 9, scope: !19340)
!19347 = !DILocation(line: 203, column: 12, scope: !19341)
!19348 = !DILocation(line: 203, column: 14, scope: !19341)
!19349 = !DILocation(line: 203, column: 18, scope: !19341)
!19350 = !DILocation(line: 203, column: 9, scope: !19341)
!19351 = !DILocation(line: 206, column: 9, scope: !19308)
!19352 = !DILocation(line: 206, column: 4, scope: !19308)
!19353 = !DILocation(line: 206, column: 7, scope: !19308)
!19354 = !DILocation(line: 207, column: 20, scope: !19308)
!19355 = !DILocation(line: 207, column: 23, scope: !19308)
!19356 = !DILocation(line: 207, column: 27, scope: !19308)
!19357 = !DILocation(line: 207, column: 25, scope: !19308)
!19358 = !DILocation(line: 207, column: 10, scope: !19308)
!19359 = !DILocation(line: 207, column: 3, scope: !19308)
!19360 = distinct !DISubprogram(name: "xcharalloc", scope: !19233, file: !19233, line: 216, type: !2104, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19361 = !DILocalVariable(name: "n", arg: 1, scope: !19360, file: !19233, line: 216, type: !149)
!19362 = !DILocation(line: 216, column: 20, scope: !19360)
!19363 = !DILocation(line: 218, column: 10, scope: !19360)
!19364 = !DILocation(line: 218, column: 3, scope: !19360)
!19365 = distinct !DISubprogram(name: "x2realloc", scope: !19248, file: !19248, line: 74, type: !2106, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19366 = !DILocalVariable(name: "p", arg: 1, scope: !19365, file: !19248, line: 74, type: !167)
!19367 = !DILocation(line: 74, column: 18, scope: !19365)
!19368 = !DILocalVariable(name: "pn", arg: 2, scope: !19365, file: !19248, line: 74, type: !148)
!19369 = !DILocation(line: 74, column: 29, scope: !19365)
!19370 = !DILocation(line: 76, column: 22, scope: !19365)
!19371 = !DILocation(line: 76, column: 25, scope: !19365)
!19372 = !DILocation(line: 76, column: 10, scope: !19365)
!19373 = !DILocation(line: 76, column: 3, scope: !19365)
!19374 = distinct !DISubprogram(name: "xzalloc", scope: !19248, file: !19248, line: 84, type: !376, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19375 = !DILocalVariable(name: "s", arg: 1, scope: !19374, file: !19248, line: 84, type: !149)
!19376 = !DILocation(line: 84, column: 17, scope: !19374)
!19377 = !DILocation(line: 86, column: 27, scope: !19374)
!19378 = !DILocation(line: 86, column: 18, scope: !19374)
!19379 = !DILocation(line: 86, column: 34, scope: !19374)
!19380 = !DILocation(line: 86, column: 10, scope: !19374)
!19381 = !DILocation(line: 86, column: 3, scope: !19374)
!19382 = distinct !DISubprogram(name: "xcalloc", scope: !19248, file: !19248, line: 93, type: !2098, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19383 = !DILocalVariable(name: "n", arg: 1, scope: !19382, file: !19248, line: 93, type: !149)
!19384 = !DILocation(line: 93, column: 17, scope: !19382)
!19385 = !DILocalVariable(name: "s", arg: 2, scope: !19382, file: !19248, line: 93, type: !149)
!19386 = !DILocation(line: 93, column: 27, scope: !19382)
!19387 = !DILocalVariable(name: "p", scope: !19382, file: !19248, line: 95, type: !167)
!19388 = !DILocation(line: 95, column: 9, scope: !19382)
!19389 = !DILocation(line: 100, column: 7, scope: !19390)
!19390 = distinct !DILexicalBlock(scope: !19382, file: !19248, line: 100, column: 7)
!19391 = !DILocation(line: 101, column: 7, scope: !19390)
!19392 = !DILocation(line: 101, column: 26, scope: !19390)
!19393 = !DILocation(line: 101, column: 29, scope: !19390)
!19394 = !DILocation(line: 101, column: 18, scope: !19390)
!19395 = !DILocation(line: 101, column: 16, scope: !19390)
!19396 = !DILocation(line: 100, column: 7, scope: !19382)
!19397 = !DILocation(line: 102, column: 5, scope: !19390)
!19398 = !DILocation(line: 103, column: 10, scope: !19382)
!19399 = !DILocation(line: 103, column: 3, scope: !19382)
!19400 = distinct !DISubprogram(name: "xmemdup", scope: !19248, file: !19248, line: 111, type: !2108, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19401 = !DILocalVariable(name: "p", arg: 1, scope: !19400, file: !19248, line: 111, type: !181)
!19402 = !DILocation(line: 111, column: 22, scope: !19400)
!19403 = !DILocalVariable(name: "s", arg: 2, scope: !19400, file: !19248, line: 111, type: !149)
!19404 = !DILocation(line: 111, column: 32, scope: !19400)
!19405 = !DILocation(line: 113, column: 27, scope: !19400)
!19406 = !DILocation(line: 113, column: 18, scope: !19400)
!19407 = !DILocation(line: 113, column: 31, scope: !19400)
!19408 = !DILocation(line: 113, column: 34, scope: !19400)
!19409 = !DILocation(line: 113, column: 10, scope: !19400)
!19410 = !DILocation(line: 113, column: 3, scope: !19400)
!19411 = distinct !DISubprogram(name: "xstrdup", scope: !19248, file: !19248, line: 119, type: !572, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2095, retainedNodes: !152)
!19412 = !DILocalVariable(name: "string", arg: 1, scope: !19411, file: !19248, line: 119, type: !146)
!19413 = !DILocation(line: 119, column: 22, scope: !19411)
!19414 = !DILocation(line: 121, column: 19, scope: !19411)
!19415 = !DILocation(line: 121, column: 35, scope: !19411)
!19416 = !DILocation(line: 121, column: 27, scope: !19411)
!19417 = !DILocation(line: 121, column: 43, scope: !19411)
!19418 = !DILocation(line: 121, column: 10, scope: !19411)
!19419 = !DILocation(line: 121, column: 3, scope: !19411)
!19420 = distinct !DISubprogram(name: "xalloc_die", scope: !19421, file: !19421, line: 32, type: !341, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2110, retainedNodes: !152)
!19421 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19422 = !DILocation(line: 34, column: 10, scope: !19420)
!19423 = !DILocation(line: 34, column: 33, scope: !19420)
!19424 = !DILocation(line: 34, column: 3, scope: !19420)
!19425 = !DILocation(line: 40, column: 3, scope: !19420)
!19426 = distinct !DISubprogram(name: "xnumtoumax", scope: !19427, file: !19427, line: 36, type: !2116, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2113, retainedNodes: !152)
!19427 = !DIFile(filename: "./lib/xdectoint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19428 = !DILocalVariable(name: "n_str", arg: 1, scope: !19426, file: !19427, line: 36, type: !146)
!19429 = !DILocation(line: 36, column: 26, scope: !19426)
!19430 = !DILocalVariable(name: "base", arg: 2, scope: !19426, file: !19427, line: 36, type: !27)
!19431 = !DILocation(line: 36, column: 37, scope: !19426)
!19432 = !DILocalVariable(name: "min", arg: 3, scope: !19426, file: !19427, line: 36, type: !168)
!19433 = !DILocation(line: 36, column: 57, scope: !19426)
!19434 = !DILocalVariable(name: "max", arg: 4, scope: !19426, file: !19427, line: 36, type: !168)
!19435 = !DILocation(line: 36, column: 76, scope: !19426)
!19436 = !DILocalVariable(name: "suffixes", arg: 5, scope: !19426, file: !19427, line: 37, type: !146)
!19437 = !DILocation(line: 37, column: 26, scope: !19426)
!19438 = !DILocalVariable(name: "err", arg: 6, scope: !19426, file: !19427, line: 37, type: !146)
!19439 = !DILocation(line: 37, column: 48, scope: !19426)
!19440 = !DILocalVariable(name: "err_exit", arg: 7, scope: !19426, file: !19427, line: 37, type: !27)
!19441 = !DILocation(line: 37, column: 57, scope: !19426)
!19442 = !DILocalVariable(name: "s_err", scope: !19426, file: !19427, line: 39, type: !1322)
!19443 = !DILocation(line: 39, column: 16, scope: !19426)
!19444 = !DILocalVariable(name: "tnum", scope: !19426, file: !19427, line: 41, type: !168)
!19445 = !DILocation(line: 41, column: 17, scope: !19426)
!19446 = !DILocation(line: 42, column: 22, scope: !19426)
!19447 = !DILocation(line: 42, column: 35, scope: !19426)
!19448 = !DILocation(line: 42, column: 48, scope: !19426)
!19449 = !DILocation(line: 42, column: 11, scope: !19426)
!19450 = !DILocation(line: 42, column: 9, scope: !19426)
!19451 = !DILocation(line: 44, column: 7, scope: !19452)
!19452 = distinct !DILexicalBlock(scope: !19426, file: !19427, line: 44, column: 7)
!19453 = !DILocation(line: 44, column: 13, scope: !19452)
!19454 = !DILocation(line: 44, column: 7, scope: !19426)
!19455 = !DILocation(line: 46, column: 11, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19457, file: !19427, line: 46, column: 11)
!19457 = distinct !DILexicalBlock(scope: !19452, file: !19427, line: 45, column: 5)
!19458 = !DILocation(line: 46, column: 18, scope: !19456)
!19459 = !DILocation(line: 46, column: 16, scope: !19456)
!19460 = !DILocation(line: 46, column: 22, scope: !19456)
!19461 = !DILocation(line: 46, column: 25, scope: !19456)
!19462 = !DILocation(line: 46, column: 31, scope: !19456)
!19463 = !DILocation(line: 46, column: 29, scope: !19456)
!19464 = !DILocation(line: 46, column: 11, scope: !19457)
!19465 = !DILocation(line: 48, column: 17, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19456, file: !19427, line: 47, column: 9)
!19467 = !DILocation(line: 51, column: 15, scope: !19468)
!19468 = distinct !DILexicalBlock(scope: !19466, file: !19427, line: 51, column: 15)
!19469 = !DILocation(line: 51, column: 20, scope: !19468)
!19470 = !DILocation(line: 51, column: 15, scope: !19466)
!19471 = !DILocation(line: 52, column: 13, scope: !19468)
!19472 = !DILocation(line: 52, column: 19, scope: !19468)
!19473 = !DILocation(line: 58, column: 13, scope: !19468)
!19474 = !DILocation(line: 58, column: 19, scope: !19468)
!19475 = !DILocation(line: 59, column: 9, scope: !19466)
!19476 = !DILocation(line: 60, column: 5, scope: !19457)
!19477 = !DILocation(line: 61, column: 12, scope: !19478)
!19478 = distinct !DILexicalBlock(scope: !19452, file: !19427, line: 61, column: 12)
!19479 = !DILocation(line: 61, column: 18, scope: !19478)
!19480 = !DILocation(line: 61, column: 12, scope: !19452)
!19481 = !DILocation(line: 62, column: 5, scope: !19478)
!19482 = !DILocation(line: 62, column: 11, scope: !19478)
!19483 = !DILocation(line: 63, column: 12, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19478, file: !19427, line: 63, column: 12)
!19485 = !DILocation(line: 63, column: 18, scope: !19484)
!19486 = !DILocation(line: 63, column: 12, scope: !19478)
!19487 = !DILocation(line: 64, column: 5, scope: !19484)
!19488 = !DILocation(line: 64, column: 11, scope: !19484)
!19489 = !DILocation(line: 66, column: 7, scope: !19490)
!19490 = distinct !DILexicalBlock(scope: !19426, file: !19427, line: 66, column: 7)
!19491 = !DILocation(line: 66, column: 13, scope: !19490)
!19492 = !DILocation(line: 66, column: 7, scope: !19426)
!19493 = !DILocation(line: 69, column: 14, scope: !19494)
!19494 = distinct !DILexicalBlock(scope: !19490, file: !19427, line: 67, column: 5)
!19495 = !DILocation(line: 69, column: 25, scope: !19494)
!19496 = !DILocation(line: 69, column: 50, scope: !19494)
!19497 = !DILocation(line: 69, column: 56, scope: !19494)
!19498 = !DILocation(line: 69, column: 72, scope: !19494)
!19499 = !DILocation(line: 70, column: 24, scope: !19494)
!19500 = !DILocation(line: 70, column: 36, scope: !19494)
!19501 = !DILocation(line: 70, column: 29, scope: !19494)
!19502 = !DILocation(line: 69, column: 7, scope: !19494)
!19503 = !DILocation(line: 71, column: 5, scope: !19494)
!19504 = !DILocation(line: 73, column: 10, scope: !19426)
!19505 = !DILocation(line: 73, column: 3, scope: !19426)
!19506 = distinct !DISubprogram(name: "xdectoumax", scope: !19427, file: !19427, line: 82, type: !2118, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2113, retainedNodes: !152)
!19507 = !DILocalVariable(name: "n_str", arg: 1, scope: !19506, file: !19427, line: 82, type: !146)
!19508 = !DILocation(line: 82, column: 26, scope: !19506)
!19509 = !DILocalVariable(name: "min", arg: 2, scope: !19506, file: !19427, line: 82, type: !168)
!19510 = !DILocation(line: 82, column: 47, scope: !19506)
!19511 = !DILocalVariable(name: "max", arg: 3, scope: !19506, file: !19427, line: 82, type: !168)
!19512 = !DILocation(line: 82, column: 66, scope: !19506)
!19513 = !DILocalVariable(name: "suffixes", arg: 4, scope: !19506, file: !19427, line: 83, type: !146)
!19514 = !DILocation(line: 83, column: 26, scope: !19506)
!19515 = !DILocalVariable(name: "err", arg: 5, scope: !19506, file: !19427, line: 83, type: !146)
!19516 = !DILocation(line: 83, column: 48, scope: !19506)
!19517 = !DILocalVariable(name: "err_exit", arg: 6, scope: !19506, file: !19427, line: 83, type: !27)
!19518 = !DILocation(line: 83, column: 57, scope: !19506)
!19519 = !DILocation(line: 85, column: 23, scope: !19506)
!19520 = !DILocation(line: 85, column: 34, scope: !19506)
!19521 = !DILocation(line: 85, column: 39, scope: !19506)
!19522 = !DILocation(line: 85, column: 44, scope: !19506)
!19523 = !DILocation(line: 85, column: 54, scope: !19506)
!19524 = !DILocation(line: 85, column: 59, scope: !19506)
!19525 = !DILocation(line: 85, column: 10, scope: !19506)
!19526 = !DILocation(line: 85, column: 3, scope: !19506)
!19527 = distinct !DISubprogram(name: "xgetcwd", scope: !19528, file: !19528, line: 35, type: !2123, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2120, retainedNodes: !152)
!19528 = !DIFile(filename: "lib/xgetcwd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19529 = !DILocalVariable(name: "cwd", scope: !19527, file: !19528, line: 37, type: !143)
!19530 = !DILocation(line: 37, column: 9, scope: !19527)
!19531 = !DILocation(line: 37, column: 15, scope: !19527)
!19532 = !DILocation(line: 38, column: 9, scope: !19533)
!19533 = distinct !DILexicalBlock(scope: !19527, file: !19528, line: 38, column: 7)
!19534 = !DILocation(line: 38, column: 13, scope: !19533)
!19535 = !DILocation(line: 38, column: 16, scope: !19533)
!19536 = !DILocation(line: 38, column: 22, scope: !19533)
!19537 = !DILocation(line: 38, column: 7, scope: !19527)
!19538 = !DILocation(line: 39, column: 5, scope: !19533)
!19539 = !DILocation(line: 40, column: 10, scope: !19527)
!19540 = !DILocation(line: 40, column: 3, scope: !19527)
!19541 = distinct !DISubprogram(name: "xgethostname", scope: !19542, file: !19542, line: 40, type: !2123, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2125, retainedNodes: !152)
!19542 = !DIFile(filename: "lib/xgethostname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19543 = !DILocalVariable(name: "hostname", scope: !19541, file: !19542, line: 42, type: !143)
!19544 = !DILocation(line: 42, column: 9, scope: !19541)
!19545 = !DILocalVariable(name: "size", scope: !19541, file: !19542, line: 43, type: !149)
!19546 = !DILocation(line: 43, column: 10, scope: !19541)
!19547 = !DILocation(line: 45, column: 3, scope: !19541)
!19548 = !DILocalVariable(name: "size_1", scope: !19549, file: !19542, line: 50, type: !149)
!19549 = distinct !DILexicalBlock(scope: !19541, file: !19542, line: 46, column: 5)
!19550 = !DILocation(line: 50, column: 14, scope: !19549)
!19551 = !DILocation(line: 52, column: 29, scope: !19549)
!19552 = !DILocation(line: 52, column: 18, scope: !19549)
!19553 = !DILocation(line: 52, column: 16, scope: !19549)
!19554 = !DILocation(line: 53, column: 16, scope: !19549)
!19555 = !DILocation(line: 53, column: 21, scope: !19549)
!19556 = !DILocation(line: 53, column: 14, scope: !19549)
!19557 = !DILocation(line: 54, column: 7, scope: !19549)
!19558 = !DILocation(line: 54, column: 16, scope: !19549)
!19559 = !DILocation(line: 54, column: 23, scope: !19549)
!19560 = !DILocation(line: 54, column: 28, scope: !19549)
!19561 = !DILocation(line: 55, column: 7, scope: !19549)
!19562 = !DILocation(line: 55, column: 13, scope: !19549)
!19563 = !DILocation(line: 57, column: 24, scope: !19564)
!19564 = distinct !DILexicalBlock(scope: !19549, file: !19542, line: 57, column: 11)
!19565 = !DILocation(line: 57, column: 34, scope: !19564)
!19566 = !DILocation(line: 57, column: 11, scope: !19564)
!19567 = !DILocation(line: 57, column: 42, scope: !19564)
!19568 = !DILocation(line: 57, column: 11, scope: !19549)
!19569 = !DILocation(line: 59, column: 17, scope: !19570)
!19570 = distinct !DILexicalBlock(scope: !19571, file: !19542, line: 59, column: 15)
!19571 = distinct !DILexicalBlock(scope: !19564, file: !19542, line: 58, column: 9)
!19572 = !DILocation(line: 59, column: 26, scope: !19570)
!19573 = !DILocation(line: 59, column: 33, scope: !19570)
!19574 = !DILocation(line: 59, column: 15, scope: !19571)
!19575 = !DILocation(line: 60, column: 13, scope: !19570)
!19576 = !DILocation(line: 61, column: 9, scope: !19571)
!19577 = !DILocation(line: 62, column: 16, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19564, file: !19542, line: 62, column: 16)
!19579 = !DILocation(line: 62, column: 22, scope: !19578)
!19580 = !DILocation(line: 62, column: 27, scope: !19578)
!19581 = !DILocation(line: 62, column: 30, scope: !19578)
!19582 = !DILocation(line: 62, column: 36, scope: !19578)
!19583 = !DILocation(line: 62, column: 52, scope: !19578)
!19584 = !DILocation(line: 62, column: 55, scope: !19578)
!19585 = !DILocation(line: 62, column: 61, scope: !19578)
!19586 = !DILocation(line: 64, column: 16, scope: !19578)
!19587 = !DILocation(line: 64, column: 19, scope: !19578)
!19588 = !DILocation(line: 64, column: 25, scope: !19578)
!19589 = !DILocation(line: 62, column: 16, scope: !19564)
!19590 = !DILocalVariable(name: "saved_errno", scope: !19591, file: !19542, line: 66, type: !27)
!19591 = distinct !DILexicalBlock(scope: !19578, file: !19542, line: 65, column: 9)
!19592 = !DILocation(line: 66, column: 15, scope: !19591)
!19593 = !DILocation(line: 66, column: 29, scope: !19591)
!19594 = !DILocation(line: 67, column: 17, scope: !19591)
!19595 = !DILocation(line: 67, column: 11, scope: !19591)
!19596 = !DILocation(line: 68, column: 19, scope: !19591)
!19597 = !DILocation(line: 68, column: 11, scope: !19591)
!19598 = !DILocation(line: 68, column: 17, scope: !19591)
!19599 = !DILocation(line: 69, column: 11, scope: !19591)
!19600 = distinct !{!19600, !19547, !19601}
!19601 = !DILocation(line: 71, column: 5, scope: !19541)
!19602 = !DILocation(line: 73, column: 10, scope: !19541)
!19603 = !DILocation(line: 73, column: 3, scope: !19541)
!19604 = !DILocation(line: 74, column: 1, scope: !19541)
!19605 = distinct !DISubprogram(name: "xstrtoul", scope: !19606, file: !19606, line: 76, type: !2131, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19606 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19607 = !DILocalVariable(name: "s", arg: 1, scope: !19605, file: !19606, line: 76, type: !146)
!19608 = !DILocation(line: 76, column: 24, scope: !19605)
!19609 = !DILocalVariable(name: "ptr", arg: 2, scope: !19605, file: !19606, line: 76, type: !142)
!19610 = !DILocation(line: 76, column: 34, scope: !19605)
!19611 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19605, file: !19606, line: 76, type: !27)
!19612 = !DILocation(line: 76, column: 43, scope: !19605)
!19613 = !DILocalVariable(name: "val", arg: 4, scope: !19605, file: !19606, line: 77, type: !2133)
!19614 = !DILocation(line: 77, column: 24, scope: !19605)
!19615 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19605, file: !19606, line: 77, type: !146)
!19616 = !DILocation(line: 77, column: 41, scope: !19605)
!19617 = !DILocalVariable(name: "t_ptr", scope: !19605, file: !19606, line: 79, type: !143)
!19618 = !DILocation(line: 79, column: 9, scope: !19605)
!19619 = !DILocalVariable(name: "p", scope: !19605, file: !19606, line: 80, type: !142)
!19620 = !DILocation(line: 80, column: 10, scope: !19605)
!19621 = !DILocalVariable(name: "tmp", scope: !19605, file: !19606, line: 81, type: !151)
!19622 = !DILocation(line: 81, column: 14, scope: !19605)
!19623 = !DILocalVariable(name: "err", scope: !19605, file: !19606, line: 82, type: !1322)
!19624 = !DILocation(line: 82, column: 16, scope: !19605)
!19625 = !DILocation(line: 84, column: 3, scope: !19626)
!19626 = distinct !DILexicalBlock(scope: !19627, file: !19606, line: 84, column: 3)
!19627 = distinct !DILexicalBlock(scope: !19605, file: !19606, line: 84, column: 3)
!19628 = !DILocation(line: 84, column: 3, scope: !19627)
!19629 = !DILocation(line: 86, column: 8, scope: !19605)
!19630 = !DILocation(line: 86, column: 14, scope: !19605)
!19631 = !DILocation(line: 86, column: 5, scope: !19605)
!19632 = !DILocation(line: 88, column: 3, scope: !19605)
!19633 = !DILocation(line: 88, column: 9, scope: !19605)
!19634 = !DILocalVariable(name: "q", scope: !19635, file: !19606, line: 92, type: !146)
!19635 = distinct !DILexicalBlock(scope: !19636, file: !19606, line: 91, column: 5)
!19636 = distinct !DILexicalBlock(scope: !19605, file: !19606, line: 90, column: 7)
!19637 = !DILocation(line: 92, column: 19, scope: !19635)
!19638 = !DILocation(line: 92, column: 23, scope: !19635)
!19639 = !DILocalVariable(name: "ch", scope: !19635, file: !19606, line: 93, type: !591)
!19640 = !DILocation(line: 93, column: 21, scope: !19635)
!19641 = !DILocation(line: 93, column: 27, scope: !19635)
!19642 = !DILocation(line: 93, column: 26, scope: !19635)
!19643 = !DILocation(line: 94, column: 7, scope: !19635)
!19644 = !DILocation(line: 94, column: 14, scope: !19635)
!19645 = !DILocation(line: 95, column: 15, scope: !19635)
!19646 = !DILocation(line: 95, column: 14, scope: !19635)
!19647 = !DILocation(line: 95, column: 12, scope: !19635)
!19648 = distinct !{!19648, !19643, !19649}
!19649 = !DILocation(line: 95, column: 17, scope: !19635)
!19650 = !DILocation(line: 96, column: 11, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19635, file: !19606, line: 96, column: 11)
!19652 = !DILocation(line: 96, column: 14, scope: !19651)
!19653 = !DILocation(line: 96, column: 11, scope: !19635)
!19654 = !DILocation(line: 97, column: 9, scope: !19651)
!19655 = !DILocation(line: 100, column: 19, scope: !19605)
!19656 = !DILocation(line: 100, column: 22, scope: !19605)
!19657 = !DILocation(line: 100, column: 25, scope: !19605)
!19658 = !DILocation(line: 100, column: 9, scope: !19605)
!19659 = !DILocation(line: 100, column: 7, scope: !19605)
!19660 = !DILocation(line: 102, column: 8, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19605, file: !19606, line: 102, column: 7)
!19662 = !DILocation(line: 102, column: 7, scope: !19661)
!19663 = !DILocation(line: 102, column: 13, scope: !19661)
!19664 = !DILocation(line: 102, column: 10, scope: !19661)
!19665 = !DILocation(line: 102, column: 7, scope: !19605)
!19666 = !DILocation(line: 106, column: 11, scope: !19667)
!19667 = distinct !DILexicalBlock(scope: !19668, file: !19606, line: 106, column: 11)
!19668 = distinct !DILexicalBlock(scope: !19661, file: !19606, line: 103, column: 5)
!19669 = !DILocation(line: 106, column: 26, scope: !19667)
!19670 = !DILocation(line: 106, column: 31, scope: !19667)
!19671 = !DILocation(line: 106, column: 30, scope: !19667)
!19672 = !DILocation(line: 106, column: 29, scope: !19667)
!19673 = !DILocation(line: 106, column: 33, scope: !19667)
!19674 = !DILocation(line: 106, column: 44, scope: !19667)
!19675 = !DILocation(line: 106, column: 62, scope: !19667)
!19676 = !DILocation(line: 106, column: 61, scope: !19667)
!19677 = !DILocation(line: 106, column: 60, scope: !19667)
!19678 = !DILocation(line: 106, column: 36, scope: !19667)
!19679 = !DILocation(line: 106, column: 11, scope: !19668)
!19680 = !DILocation(line: 107, column: 13, scope: !19667)
!19681 = !DILocation(line: 107, column: 9, scope: !19667)
!19682 = !DILocation(line: 109, column: 9, scope: !19667)
!19683 = !DILocation(line: 110, column: 5, scope: !19668)
!19684 = !DILocation(line: 111, column: 12, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19661, file: !19606, line: 111, column: 12)
!19686 = !DILocation(line: 111, column: 18, scope: !19685)
!19687 = !DILocation(line: 111, column: 12, scope: !19661)
!19688 = !DILocation(line: 113, column: 11, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19690, file: !19606, line: 113, column: 11)
!19690 = distinct !DILexicalBlock(scope: !19685, file: !19606, line: 112, column: 5)
!19691 = !DILocation(line: 113, column: 17, scope: !19689)
!19692 = !DILocation(line: 113, column: 11, scope: !19690)
!19693 = !DILocation(line: 114, column: 9, scope: !19689)
!19694 = !DILocation(line: 115, column: 11, scope: !19690)
!19695 = !DILocation(line: 116, column: 5, scope: !19690)
!19696 = !DILocation(line: 121, column: 8, scope: !19697)
!19697 = distinct !DILexicalBlock(scope: !19605, file: !19606, line: 121, column: 7)
!19698 = !DILocation(line: 121, column: 7, scope: !19605)
!19699 = !DILocation(line: 123, column: 14, scope: !19700)
!19700 = distinct !DILexicalBlock(scope: !19697, file: !19606, line: 122, column: 5)
!19701 = !DILocation(line: 123, column: 8, scope: !19700)
!19702 = !DILocation(line: 123, column: 12, scope: !19700)
!19703 = !DILocation(line: 124, column: 14, scope: !19700)
!19704 = !DILocation(line: 124, column: 7, scope: !19700)
!19705 = !DILocation(line: 127, column: 9, scope: !19706)
!19706 = distinct !DILexicalBlock(scope: !19605, file: !19606, line: 127, column: 7)
!19707 = !DILocation(line: 127, column: 8, scope: !19706)
!19708 = !DILocation(line: 127, column: 7, scope: !19706)
!19709 = !DILocation(line: 127, column: 11, scope: !19706)
!19710 = !DILocation(line: 127, column: 7, scope: !19605)
!19711 = !DILocalVariable(name: "base", scope: !19712, file: !19606, line: 129, type: !27)
!19712 = distinct !DILexicalBlock(scope: !19706, file: !19606, line: 128, column: 5)
!19713 = !DILocation(line: 129, column: 11, scope: !19712)
!19714 = !DILocalVariable(name: "suffixes", scope: !19712, file: !19606, line: 130, type: !27)
!19715 = !DILocation(line: 130, column: 11, scope: !19712)
!19716 = !DILocalVariable(name: "overflow", scope: !19712, file: !19606, line: 131, type: !1322)
!19717 = !DILocation(line: 131, column: 20, scope: !19712)
!19718 = !DILocation(line: 133, column: 20, scope: !19719)
!19719 = distinct !DILexicalBlock(scope: !19712, file: !19606, line: 133, column: 11)
!19720 = !DILocation(line: 133, column: 38, scope: !19719)
!19721 = !DILocation(line: 133, column: 37, scope: !19719)
!19722 = !DILocation(line: 133, column: 36, scope: !19719)
!19723 = !DILocation(line: 133, column: 12, scope: !19719)
!19724 = !DILocation(line: 133, column: 11, scope: !19712)
!19725 = !DILocation(line: 135, column: 18, scope: !19726)
!19726 = distinct !DILexicalBlock(scope: !19719, file: !19606, line: 134, column: 9)
!19727 = !DILocation(line: 135, column: 12, scope: !19726)
!19728 = !DILocation(line: 135, column: 16, scope: !19726)
!19729 = !DILocation(line: 136, column: 18, scope: !19726)
!19730 = !DILocation(line: 136, column: 22, scope: !19726)
!19731 = !DILocation(line: 136, column: 11, scope: !19726)
!19732 = !DILocation(line: 139, column: 17, scope: !19712)
!19733 = !DILocation(line: 139, column: 16, scope: !19712)
!19734 = !DILocation(line: 139, column: 15, scope: !19712)
!19735 = !DILocation(line: 139, column: 7, scope: !19712)
!19736 = !DILocation(line: 151, column: 23, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19738, file: !19606, line: 151, column: 15)
!19738 = distinct !DILexicalBlock(scope: !19712, file: !19606, line: 140, column: 9)
!19739 = !DILocation(line: 151, column: 15, scope: !19737)
!19740 = !DILocation(line: 151, column: 15, scope: !19738)
!19741 = !DILocation(line: 152, column: 21, scope: !19737)
!19742 = !DILocation(line: 152, column: 13, scope: !19737)
!19743 = !DILocation(line: 155, column: 21, scope: !19744)
!19744 = distinct !DILexicalBlock(scope: !19745, file: !19606, line: 155, column: 21)
!19745 = distinct !DILexicalBlock(scope: !19737, file: !19606, line: 153, column: 15)
!19746 = !DILocation(line: 155, column: 29, scope: !19744)
!19747 = !DILocation(line: 155, column: 21, scope: !19745)
!19748 = !DILocation(line: 156, column: 28, scope: !19744)
!19749 = !DILocation(line: 156, column: 19, scope: !19744)
!19750 = !DILocation(line: 157, column: 17, scope: !19745)
!19751 = !DILocation(line: 161, column: 22, scope: !19745)
!19752 = !DILocation(line: 162, column: 25, scope: !19745)
!19753 = !DILocation(line: 163, column: 17, scope: !19745)
!19754 = !DILocation(line: 164, column: 15, scope: !19745)
!19755 = !DILocation(line: 165, column: 9, scope: !19738)
!19756 = !DILocation(line: 167, column: 17, scope: !19712)
!19757 = !DILocation(line: 167, column: 16, scope: !19712)
!19758 = !DILocation(line: 167, column: 15, scope: !19712)
!19759 = !DILocation(line: 167, column: 7, scope: !19712)
!19760 = !DILocation(line: 170, column: 22, scope: !19761)
!19761 = distinct !DILexicalBlock(scope: !19712, file: !19606, line: 168, column: 9)
!19762 = !DILocation(line: 170, column: 20, scope: !19761)
!19763 = !DILocation(line: 171, column: 11, scope: !19761)
!19764 = !DILocation(line: 177, column: 22, scope: !19761)
!19765 = !DILocation(line: 177, column: 20, scope: !19761)
!19766 = !DILocation(line: 178, column: 11, scope: !19761)
!19767 = !DILocation(line: 181, column: 20, scope: !19761)
!19768 = !DILocation(line: 182, column: 11, scope: !19761)
!19769 = !DILocation(line: 185, column: 48, scope: !19761)
!19770 = !DILocation(line: 185, column: 22, scope: !19761)
!19771 = !DILocation(line: 185, column: 20, scope: !19761)
!19772 = !DILocation(line: 186, column: 11, scope: !19761)
!19773 = !DILocation(line: 190, column: 48, scope: !19761)
!19774 = !DILocation(line: 190, column: 22, scope: !19761)
!19775 = !DILocation(line: 190, column: 20, scope: !19761)
!19776 = !DILocation(line: 191, column: 11, scope: !19761)
!19777 = !DILocation(line: 195, column: 48, scope: !19761)
!19778 = !DILocation(line: 195, column: 22, scope: !19761)
!19779 = !DILocation(line: 195, column: 20, scope: !19761)
!19780 = !DILocation(line: 196, column: 11, scope: !19761)
!19781 = !DILocation(line: 200, column: 48, scope: !19761)
!19782 = !DILocation(line: 200, column: 22, scope: !19761)
!19783 = !DILocation(line: 200, column: 20, scope: !19761)
!19784 = !DILocation(line: 201, column: 11, scope: !19761)
!19785 = !DILocation(line: 204, column: 48, scope: !19761)
!19786 = !DILocation(line: 204, column: 22, scope: !19761)
!19787 = !DILocation(line: 204, column: 20, scope: !19761)
!19788 = !DILocation(line: 205, column: 11, scope: !19761)
!19789 = !DILocation(line: 209, column: 48, scope: !19761)
!19790 = !DILocation(line: 209, column: 22, scope: !19761)
!19791 = !DILocation(line: 209, column: 20, scope: !19761)
!19792 = !DILocation(line: 210, column: 11, scope: !19761)
!19793 = !DILocation(line: 213, column: 22, scope: !19761)
!19794 = !DILocation(line: 213, column: 20, scope: !19761)
!19795 = !DILocation(line: 214, column: 11, scope: !19761)
!19796 = !DILocation(line: 217, column: 48, scope: !19761)
!19797 = !DILocation(line: 217, column: 22, scope: !19761)
!19798 = !DILocation(line: 217, column: 20, scope: !19761)
!19799 = !DILocation(line: 218, column: 11, scope: !19761)
!19800 = !DILocation(line: 221, column: 48, scope: !19761)
!19801 = !DILocation(line: 221, column: 22, scope: !19761)
!19802 = !DILocation(line: 221, column: 20, scope: !19761)
!19803 = !DILocation(line: 222, column: 11, scope: !19761)
!19804 = !DILocation(line: 225, column: 18, scope: !19761)
!19805 = !DILocation(line: 225, column: 12, scope: !19761)
!19806 = !DILocation(line: 225, column: 16, scope: !19761)
!19807 = !DILocation(line: 226, column: 18, scope: !19761)
!19808 = !DILocation(line: 226, column: 22, scope: !19761)
!19809 = !DILocation(line: 226, column: 11, scope: !19761)
!19810 = !DILocation(line: 229, column: 14, scope: !19712)
!19811 = !DILocation(line: 229, column: 11, scope: !19712)
!19812 = !DILocation(line: 230, column: 13, scope: !19712)
!19813 = !DILocation(line: 230, column: 8, scope: !19712)
!19814 = !DILocation(line: 230, column: 10, scope: !19712)
!19815 = !DILocation(line: 231, column: 13, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19712, file: !19606, line: 231, column: 11)
!19817 = !DILocation(line: 231, column: 12, scope: !19816)
!19818 = !DILocation(line: 231, column: 11, scope: !19816)
!19819 = !DILocation(line: 231, column: 11, scope: !19712)
!19820 = !DILocation(line: 232, column: 13, scope: !19816)
!19821 = !DILocation(line: 232, column: 9, scope: !19816)
!19822 = !DILocation(line: 233, column: 5, scope: !19712)
!19823 = !DILocation(line: 235, column: 10, scope: !19605)
!19824 = !DILocation(line: 235, column: 4, scope: !19605)
!19825 = !DILocation(line: 235, column: 8, scope: !19605)
!19826 = !DILocation(line: 236, column: 10, scope: !19605)
!19827 = !DILocation(line: 236, column: 3, scope: !19605)
!19828 = !DILocation(line: 237, column: 1, scope: !19605)
!19829 = distinct !DISubprogram(name: "bkm_scale", scope: !19606, file: !19606, line: 48, type: !2134, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19830 = !DILocalVariable(name: "x", arg: 1, scope: !19829, file: !19606, line: 48, type: !2133)
!19831 = !DILocation(line: 48, column: 24, scope: !19829)
!19832 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19829, file: !19606, line: 48, type: !27)
!19833 = !DILocation(line: 48, column: 31, scope: !19829)
!19834 = !DILocation(line: 55, column: 26, scope: !19835)
!19835 = distinct !DILexicalBlock(scope: !19829, file: !19606, line: 55, column: 7)
!19836 = !DILocation(line: 55, column: 24, scope: !19835)
!19837 = !DILocation(line: 55, column: 42, scope: !19835)
!19838 = !DILocation(line: 55, column: 41, scope: !19835)
!19839 = !DILocation(line: 55, column: 39, scope: !19835)
!19840 = !DILocation(line: 55, column: 7, scope: !19829)
!19841 = !DILocation(line: 57, column: 8, scope: !19842)
!19842 = distinct !DILexicalBlock(scope: !19835, file: !19606, line: 56, column: 5)
!19843 = !DILocation(line: 57, column: 10, scope: !19842)
!19844 = !DILocation(line: 58, column: 7, scope: !19842)
!19845 = !DILocation(line: 60, column: 9, scope: !19829)
!19846 = !DILocation(line: 60, column: 4, scope: !19829)
!19847 = !DILocation(line: 60, column: 6, scope: !19829)
!19848 = !DILocation(line: 61, column: 3, scope: !19829)
!19849 = !DILocation(line: 62, column: 1, scope: !19829)
!19850 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19606, file: !19606, line: 65, type: !2136, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2128, retainedNodes: !152)
!19851 = !DILocalVariable(name: "x", arg: 1, scope: !19850, file: !19606, line: 65, type: !2133)
!19852 = !DILocation(line: 65, column: 33, scope: !19850)
!19853 = !DILocalVariable(name: "base", arg: 2, scope: !19850, file: !19606, line: 65, type: !27)
!19854 = !DILocation(line: 65, column: 40, scope: !19850)
!19855 = !DILocalVariable(name: "power", arg: 3, scope: !19850, file: !19606, line: 65, type: !27)
!19856 = !DILocation(line: 65, column: 50, scope: !19850)
!19857 = !DILocalVariable(name: "err", scope: !19850, file: !19606, line: 67, type: !1322)
!19858 = !DILocation(line: 67, column: 16, scope: !19850)
!19859 = !DILocation(line: 68, column: 3, scope: !19850)
!19860 = !DILocation(line: 68, column: 15, scope: !19850)
!19861 = !DILocation(line: 69, column: 23, scope: !19850)
!19862 = !DILocation(line: 69, column: 26, scope: !19850)
!19863 = !DILocation(line: 69, column: 12, scope: !19850)
!19864 = !DILocation(line: 69, column: 9, scope: !19850)
!19865 = distinct !{!19865, !19859, !19866}
!19866 = !DILocation(line: 69, column: 30, scope: !19850)
!19867 = !DILocation(line: 70, column: 10, scope: !19850)
!19868 = !DILocation(line: 70, column: 3, scope: !19850)
!19869 = distinct !DISubprogram(name: "xstrtol_fatal", scope: !19870, file: !19870, line: 92, type: !2141, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2138, retainedNodes: !152)
!19870 = !DIFile(filename: "lib/xstrtol-error.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19871 = !DILocalVariable(name: "err", arg: 1, scope: !19869, file: !19870, line: 92, type: !109)
!19872 = !DILocation(line: 92, column: 34, scope: !19869)
!19873 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19869, file: !19870, line: 93, type: !27)
!19874 = !DILocation(line: 93, column: 20, scope: !19869)
!19875 = !DILocalVariable(name: "c", arg: 3, scope: !19869, file: !19870, line: 93, type: !144)
!19876 = !DILocation(line: 93, column: 34, scope: !19869)
!19877 = !DILocalVariable(name: "long_options", arg: 4, scope: !19869, file: !19870, line: 93, type: !2143)
!19878 = !DILocation(line: 93, column: 58, scope: !19869)
!19879 = !DILocalVariable(name: "arg", arg: 5, scope: !19869, file: !19870, line: 94, type: !146)
!19880 = !DILocation(line: 94, column: 28, scope: !19869)
!19881 = !DILocation(line: 96, column: 18, scope: !19869)
!19882 = !DILocation(line: 96, column: 23, scope: !19869)
!19883 = !DILocation(line: 96, column: 32, scope: !19869)
!19884 = !DILocation(line: 96, column: 35, scope: !19869)
!19885 = !DILocation(line: 96, column: 49, scope: !19869)
!19886 = !DILocation(line: 96, column: 54, scope: !19869)
!19887 = !DILocation(line: 96, column: 3, scope: !19869)
!19888 = !DILocation(line: 97, column: 3, scope: !19869)
!19889 = distinct !DISubprogram(name: "xstrtol_error", scope: !19870, file: !19870, line: 47, type: !2151, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2138, retainedNodes: !152)
!19890 = !DILocalVariable(name: "err", arg: 1, scope: !19889, file: !19870, line: 47, type: !109)
!19891 = !DILocation(line: 47, column: 34, scope: !19889)
!19892 = !DILocalVariable(name: "opt_idx", arg: 2, scope: !19889, file: !19870, line: 48, type: !27)
!19893 = !DILocation(line: 48, column: 20, scope: !19889)
!19894 = !DILocalVariable(name: "c", arg: 3, scope: !19889, file: !19870, line: 48, type: !144)
!19895 = !DILocation(line: 48, column: 34, scope: !19889)
!19896 = !DILocalVariable(name: "long_options", arg: 4, scope: !19889, file: !19870, line: 48, type: !2143)
!19897 = !DILocation(line: 48, column: 58, scope: !19889)
!19898 = !DILocalVariable(name: "arg", arg: 5, scope: !19889, file: !19870, line: 49, type: !146)
!19899 = !DILocation(line: 49, column: 28, scope: !19889)
!19900 = !DILocalVariable(name: "exit_status", arg: 6, scope: !19889, file: !19870, line: 50, type: !27)
!19901 = !DILocation(line: 50, column: 20, scope: !19889)
!19902 = !DILocalVariable(name: "hyphens", scope: !19889, file: !19870, line: 52, type: !146)
!19903 = !DILocation(line: 52, column: 15, scope: !19889)
!19904 = !DILocalVariable(name: "msgid", scope: !19889, file: !19870, line: 53, type: !146)
!19905 = !DILocation(line: 53, column: 15, scope: !19889)
!19906 = !DILocalVariable(name: "option", scope: !19889, file: !19870, line: 54, type: !146)
!19907 = !DILocation(line: 54, column: 15, scope: !19889)
!19908 = !DILocalVariable(name: "option_buffer", scope: !19889, file: !19870, line: 55, type: !666)
!19909 = !DILocation(line: 55, column: 8, scope: !19889)
!19910 = !DILocation(line: 57, column: 11, scope: !19889)
!19911 = !DILocation(line: 57, column: 3, scope: !19889)
!19912 = !DILocation(line: 60, column: 7, scope: !19913)
!19913 = distinct !DILexicalBlock(scope: !19889, file: !19870, line: 58, column: 5)
!19914 = !DILocation(line: 63, column: 13, scope: !19913)
!19915 = !DILocation(line: 64, column: 7, scope: !19913)
!19916 = !DILocation(line: 68, column: 13, scope: !19913)
!19917 = !DILocation(line: 69, column: 7, scope: !19913)
!19918 = !DILocation(line: 72, column: 13, scope: !19913)
!19919 = !DILocation(line: 73, column: 7, scope: !19913)
!19920 = !DILocation(line: 76, column: 7, scope: !19921)
!19921 = distinct !DILexicalBlock(scope: !19889, file: !19870, line: 76, column: 7)
!19922 = !DILocation(line: 76, column: 15, scope: !19921)
!19923 = !DILocation(line: 76, column: 7, scope: !19889)
!19924 = !DILocation(line: 78, column: 18, scope: !19925)
!19925 = distinct !DILexicalBlock(scope: !19921, file: !19870, line: 77, column: 5)
!19926 = !DILocation(line: 78, column: 15, scope: !19925)
!19927 = !DILocation(line: 79, column: 26, scope: !19925)
!19928 = !DILocation(line: 79, column: 7, scope: !19925)
!19929 = !DILocation(line: 79, column: 24, scope: !19925)
!19930 = !DILocation(line: 80, column: 7, scope: !19925)
!19931 = !DILocation(line: 80, column: 24, scope: !19925)
!19932 = !DILocation(line: 81, column: 16, scope: !19925)
!19933 = !DILocation(line: 81, column: 14, scope: !19925)
!19934 = !DILocation(line: 82, column: 5, scope: !19925)
!19935 = !DILocation(line: 84, column: 14, scope: !19921)
!19936 = !DILocation(line: 84, column: 27, scope: !19921)
!19937 = !DILocation(line: 84, column: 36, scope: !19921)
!19938 = !{!19939, !2443, i64 0}
!19939 = !{!"option", !2443, i64 0, !2437, i64 8, !2443, i64 16, !2437, i64 24}
!19940 = !DILocation(line: 84, column: 12, scope: !19921)
!19941 = !DILocation(line: 86, column: 10, scope: !19889)
!19942 = !DILocation(line: 86, column: 35, scope: !19889)
!19943 = !DILocation(line: 86, column: 26, scope: !19889)
!19944 = !DILocation(line: 86, column: 43, scope: !19889)
!19945 = !DILocation(line: 86, column: 52, scope: !19889)
!19946 = !DILocation(line: 86, column: 60, scope: !19889)
!19947 = !DILocation(line: 86, column: 3, scope: !19889)
!19948 = !DILocation(line: 87, column: 1, scope: !19889)
!19949 = distinct !DISubprogram(name: "xstrtoumax", scope: !19606, file: !19606, line: 76, type: !2156, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!19950 = !DILocalVariable(name: "s", arg: 1, scope: !19949, file: !19606, line: 76, type: !146)
!19951 = !DILocation(line: 76, column: 24, scope: !19949)
!19952 = !DILocalVariable(name: "ptr", arg: 2, scope: !19949, file: !19606, line: 76, type: !142)
!19953 = !DILocation(line: 76, column: 34, scope: !19949)
!19954 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19949, file: !19606, line: 76, type: !27)
!19955 = !DILocation(line: 76, column: 43, scope: !19949)
!19956 = !DILocalVariable(name: "val", arg: 4, scope: !19949, file: !19606, line: 77, type: !1321)
!19957 = !DILocation(line: 77, column: 24, scope: !19949)
!19958 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19949, file: !19606, line: 77, type: !146)
!19959 = !DILocation(line: 77, column: 41, scope: !19949)
!19960 = !DILocalVariable(name: "t_ptr", scope: !19949, file: !19606, line: 79, type: !143)
!19961 = !DILocation(line: 79, column: 9, scope: !19949)
!19962 = !DILocalVariable(name: "p", scope: !19949, file: !19606, line: 80, type: !142)
!19963 = !DILocation(line: 80, column: 10, scope: !19949)
!19964 = !DILocalVariable(name: "tmp", scope: !19949, file: !19606, line: 81, type: !168)
!19965 = !DILocation(line: 81, column: 14, scope: !19949)
!19966 = !DILocalVariable(name: "err", scope: !19949, file: !19606, line: 82, type: !1322)
!19967 = !DILocation(line: 82, column: 16, scope: !19949)
!19968 = !DILocation(line: 84, column: 3, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19970, file: !19606, line: 84, column: 3)
!19970 = distinct !DILexicalBlock(scope: !19949, file: !19606, line: 84, column: 3)
!19971 = !DILocation(line: 84, column: 3, scope: !19970)
!19972 = !DILocation(line: 86, column: 8, scope: !19949)
!19973 = !DILocation(line: 86, column: 14, scope: !19949)
!19974 = !DILocation(line: 86, column: 5, scope: !19949)
!19975 = !DILocation(line: 88, column: 3, scope: !19949)
!19976 = !DILocation(line: 88, column: 9, scope: !19949)
!19977 = !DILocalVariable(name: "q", scope: !19978, file: !19606, line: 92, type: !146)
!19978 = distinct !DILexicalBlock(scope: !19979, file: !19606, line: 91, column: 5)
!19979 = distinct !DILexicalBlock(scope: !19949, file: !19606, line: 90, column: 7)
!19980 = !DILocation(line: 92, column: 19, scope: !19978)
!19981 = !DILocation(line: 92, column: 23, scope: !19978)
!19982 = !DILocalVariable(name: "ch", scope: !19978, file: !19606, line: 93, type: !591)
!19983 = !DILocation(line: 93, column: 21, scope: !19978)
!19984 = !DILocation(line: 93, column: 27, scope: !19978)
!19985 = !DILocation(line: 93, column: 26, scope: !19978)
!19986 = !DILocation(line: 94, column: 7, scope: !19978)
!19987 = !DILocation(line: 94, column: 14, scope: !19978)
!19988 = !DILocation(line: 95, column: 15, scope: !19978)
!19989 = !DILocation(line: 95, column: 14, scope: !19978)
!19990 = !DILocation(line: 95, column: 12, scope: !19978)
!19991 = distinct !{!19991, !19986, !19992}
!19992 = !DILocation(line: 95, column: 17, scope: !19978)
!19993 = !DILocation(line: 96, column: 11, scope: !19994)
!19994 = distinct !DILexicalBlock(scope: !19978, file: !19606, line: 96, column: 11)
!19995 = !DILocation(line: 96, column: 14, scope: !19994)
!19996 = !DILocation(line: 96, column: 11, scope: !19978)
!19997 = !DILocation(line: 97, column: 9, scope: !19994)
!19998 = !DILocation(line: 100, column: 19, scope: !19949)
!19999 = !DILocation(line: 100, column: 22, scope: !19949)
!20000 = !DILocation(line: 100, column: 25, scope: !19949)
!20001 = !DILocation(line: 100, column: 9, scope: !19949)
!20002 = !DILocation(line: 100, column: 7, scope: !19949)
!20003 = !DILocation(line: 102, column: 8, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !19949, file: !19606, line: 102, column: 7)
!20005 = !DILocation(line: 102, column: 7, scope: !20004)
!20006 = !DILocation(line: 102, column: 13, scope: !20004)
!20007 = !DILocation(line: 102, column: 10, scope: !20004)
!20008 = !DILocation(line: 102, column: 7, scope: !19949)
!20009 = !DILocation(line: 106, column: 11, scope: !20010)
!20010 = distinct !DILexicalBlock(scope: !20011, file: !19606, line: 106, column: 11)
!20011 = distinct !DILexicalBlock(scope: !20004, file: !19606, line: 103, column: 5)
!20012 = !DILocation(line: 106, column: 26, scope: !20010)
!20013 = !DILocation(line: 106, column: 31, scope: !20010)
!20014 = !DILocation(line: 106, column: 30, scope: !20010)
!20015 = !DILocation(line: 106, column: 29, scope: !20010)
!20016 = !DILocation(line: 106, column: 33, scope: !20010)
!20017 = !DILocation(line: 106, column: 44, scope: !20010)
!20018 = !DILocation(line: 106, column: 62, scope: !20010)
!20019 = !DILocation(line: 106, column: 61, scope: !20010)
!20020 = !DILocation(line: 106, column: 60, scope: !20010)
!20021 = !DILocation(line: 106, column: 36, scope: !20010)
!20022 = !DILocation(line: 106, column: 11, scope: !20011)
!20023 = !DILocation(line: 107, column: 13, scope: !20010)
!20024 = !DILocation(line: 107, column: 9, scope: !20010)
!20025 = !DILocation(line: 109, column: 9, scope: !20010)
!20026 = !DILocation(line: 110, column: 5, scope: !20011)
!20027 = !DILocation(line: 111, column: 12, scope: !20028)
!20028 = distinct !DILexicalBlock(scope: !20004, file: !19606, line: 111, column: 12)
!20029 = !DILocation(line: 111, column: 18, scope: !20028)
!20030 = !DILocation(line: 111, column: 12, scope: !20004)
!20031 = !DILocation(line: 113, column: 11, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20033, file: !19606, line: 113, column: 11)
!20033 = distinct !DILexicalBlock(scope: !20028, file: !19606, line: 112, column: 5)
!20034 = !DILocation(line: 113, column: 17, scope: !20032)
!20035 = !DILocation(line: 113, column: 11, scope: !20033)
!20036 = !DILocation(line: 114, column: 9, scope: !20032)
!20037 = !DILocation(line: 115, column: 11, scope: !20033)
!20038 = !DILocation(line: 116, column: 5, scope: !20033)
!20039 = !DILocation(line: 121, column: 8, scope: !20040)
!20040 = distinct !DILexicalBlock(scope: !19949, file: !19606, line: 121, column: 7)
!20041 = !DILocation(line: 121, column: 7, scope: !19949)
!20042 = !DILocation(line: 123, column: 14, scope: !20043)
!20043 = distinct !DILexicalBlock(scope: !20040, file: !19606, line: 122, column: 5)
!20044 = !DILocation(line: 123, column: 8, scope: !20043)
!20045 = !DILocation(line: 123, column: 12, scope: !20043)
!20046 = !DILocation(line: 124, column: 14, scope: !20043)
!20047 = !DILocation(line: 124, column: 7, scope: !20043)
!20048 = !DILocation(line: 127, column: 9, scope: !20049)
!20049 = distinct !DILexicalBlock(scope: !19949, file: !19606, line: 127, column: 7)
!20050 = !DILocation(line: 127, column: 8, scope: !20049)
!20051 = !DILocation(line: 127, column: 7, scope: !20049)
!20052 = !DILocation(line: 127, column: 11, scope: !20049)
!20053 = !DILocation(line: 127, column: 7, scope: !19949)
!20054 = !DILocalVariable(name: "base", scope: !20055, file: !19606, line: 129, type: !27)
!20055 = distinct !DILexicalBlock(scope: !20049, file: !19606, line: 128, column: 5)
!20056 = !DILocation(line: 129, column: 11, scope: !20055)
!20057 = !DILocalVariable(name: "suffixes", scope: !20055, file: !19606, line: 130, type: !27)
!20058 = !DILocation(line: 130, column: 11, scope: !20055)
!20059 = !DILocalVariable(name: "overflow", scope: !20055, file: !19606, line: 131, type: !1322)
!20060 = !DILocation(line: 131, column: 20, scope: !20055)
!20061 = !DILocation(line: 133, column: 20, scope: !20062)
!20062 = distinct !DILexicalBlock(scope: !20055, file: !19606, line: 133, column: 11)
!20063 = !DILocation(line: 133, column: 38, scope: !20062)
!20064 = !DILocation(line: 133, column: 37, scope: !20062)
!20065 = !DILocation(line: 133, column: 36, scope: !20062)
!20066 = !DILocation(line: 133, column: 12, scope: !20062)
!20067 = !DILocation(line: 133, column: 11, scope: !20055)
!20068 = !DILocation(line: 135, column: 18, scope: !20069)
!20069 = distinct !DILexicalBlock(scope: !20062, file: !19606, line: 134, column: 9)
!20070 = !DILocation(line: 135, column: 12, scope: !20069)
!20071 = !DILocation(line: 135, column: 16, scope: !20069)
!20072 = !DILocation(line: 136, column: 18, scope: !20069)
!20073 = !DILocation(line: 136, column: 22, scope: !20069)
!20074 = !DILocation(line: 136, column: 11, scope: !20069)
!20075 = !DILocation(line: 139, column: 17, scope: !20055)
!20076 = !DILocation(line: 139, column: 16, scope: !20055)
!20077 = !DILocation(line: 139, column: 15, scope: !20055)
!20078 = !DILocation(line: 139, column: 7, scope: !20055)
!20079 = !DILocation(line: 151, column: 23, scope: !20080)
!20080 = distinct !DILexicalBlock(scope: !20081, file: !19606, line: 151, column: 15)
!20081 = distinct !DILexicalBlock(scope: !20055, file: !19606, line: 140, column: 9)
!20082 = !DILocation(line: 151, column: 15, scope: !20080)
!20083 = !DILocation(line: 151, column: 15, scope: !20081)
!20084 = !DILocation(line: 152, column: 21, scope: !20080)
!20085 = !DILocation(line: 152, column: 13, scope: !20080)
!20086 = !DILocation(line: 155, column: 21, scope: !20087)
!20087 = distinct !DILexicalBlock(scope: !20088, file: !19606, line: 155, column: 21)
!20088 = distinct !DILexicalBlock(scope: !20080, file: !19606, line: 153, column: 15)
!20089 = !DILocation(line: 155, column: 29, scope: !20087)
!20090 = !DILocation(line: 155, column: 21, scope: !20088)
!20091 = !DILocation(line: 156, column: 28, scope: !20087)
!20092 = !DILocation(line: 156, column: 19, scope: !20087)
!20093 = !DILocation(line: 157, column: 17, scope: !20088)
!20094 = !DILocation(line: 161, column: 22, scope: !20088)
!20095 = !DILocation(line: 162, column: 25, scope: !20088)
!20096 = !DILocation(line: 163, column: 17, scope: !20088)
!20097 = !DILocation(line: 164, column: 15, scope: !20088)
!20098 = !DILocation(line: 165, column: 9, scope: !20081)
!20099 = !DILocation(line: 167, column: 17, scope: !20055)
!20100 = !DILocation(line: 167, column: 16, scope: !20055)
!20101 = !DILocation(line: 167, column: 15, scope: !20055)
!20102 = !DILocation(line: 167, column: 7, scope: !20055)
!20103 = !DILocation(line: 170, column: 22, scope: !20104)
!20104 = distinct !DILexicalBlock(scope: !20055, file: !19606, line: 168, column: 9)
!20105 = !DILocation(line: 170, column: 20, scope: !20104)
!20106 = !DILocation(line: 171, column: 11, scope: !20104)
!20107 = !DILocation(line: 177, column: 22, scope: !20104)
!20108 = !DILocation(line: 177, column: 20, scope: !20104)
!20109 = !DILocation(line: 178, column: 11, scope: !20104)
!20110 = !DILocation(line: 181, column: 20, scope: !20104)
!20111 = !DILocation(line: 182, column: 11, scope: !20104)
!20112 = !DILocation(line: 185, column: 48, scope: !20104)
!20113 = !DILocation(line: 185, column: 22, scope: !20104)
!20114 = !DILocation(line: 185, column: 20, scope: !20104)
!20115 = !DILocation(line: 186, column: 11, scope: !20104)
!20116 = !DILocation(line: 190, column: 48, scope: !20104)
!20117 = !DILocation(line: 190, column: 22, scope: !20104)
!20118 = !DILocation(line: 190, column: 20, scope: !20104)
!20119 = !DILocation(line: 191, column: 11, scope: !20104)
!20120 = !DILocation(line: 195, column: 48, scope: !20104)
!20121 = !DILocation(line: 195, column: 22, scope: !20104)
!20122 = !DILocation(line: 195, column: 20, scope: !20104)
!20123 = !DILocation(line: 196, column: 11, scope: !20104)
!20124 = !DILocation(line: 200, column: 48, scope: !20104)
!20125 = !DILocation(line: 200, column: 22, scope: !20104)
!20126 = !DILocation(line: 200, column: 20, scope: !20104)
!20127 = !DILocation(line: 201, column: 11, scope: !20104)
!20128 = !DILocation(line: 204, column: 48, scope: !20104)
!20129 = !DILocation(line: 204, column: 22, scope: !20104)
!20130 = !DILocation(line: 204, column: 20, scope: !20104)
!20131 = !DILocation(line: 205, column: 11, scope: !20104)
!20132 = !DILocation(line: 209, column: 48, scope: !20104)
!20133 = !DILocation(line: 209, column: 22, scope: !20104)
!20134 = !DILocation(line: 209, column: 20, scope: !20104)
!20135 = !DILocation(line: 210, column: 11, scope: !20104)
!20136 = !DILocation(line: 213, column: 22, scope: !20104)
!20137 = !DILocation(line: 213, column: 20, scope: !20104)
!20138 = !DILocation(line: 214, column: 11, scope: !20104)
!20139 = !DILocation(line: 217, column: 48, scope: !20104)
!20140 = !DILocation(line: 217, column: 22, scope: !20104)
!20141 = !DILocation(line: 217, column: 20, scope: !20104)
!20142 = !DILocation(line: 218, column: 11, scope: !20104)
!20143 = !DILocation(line: 221, column: 48, scope: !20104)
!20144 = !DILocation(line: 221, column: 22, scope: !20104)
!20145 = !DILocation(line: 221, column: 20, scope: !20104)
!20146 = !DILocation(line: 222, column: 11, scope: !20104)
!20147 = !DILocation(line: 225, column: 18, scope: !20104)
!20148 = !DILocation(line: 225, column: 12, scope: !20104)
!20149 = !DILocation(line: 225, column: 16, scope: !20104)
!20150 = !DILocation(line: 226, column: 18, scope: !20104)
!20151 = !DILocation(line: 226, column: 22, scope: !20104)
!20152 = !DILocation(line: 226, column: 11, scope: !20104)
!20153 = !DILocation(line: 229, column: 14, scope: !20055)
!20154 = !DILocation(line: 229, column: 11, scope: !20055)
!20155 = !DILocation(line: 230, column: 13, scope: !20055)
!20156 = !DILocation(line: 230, column: 8, scope: !20055)
!20157 = !DILocation(line: 230, column: 10, scope: !20055)
!20158 = !DILocation(line: 231, column: 13, scope: !20159)
!20159 = distinct !DILexicalBlock(scope: !20055, file: !19606, line: 231, column: 11)
!20160 = !DILocation(line: 231, column: 12, scope: !20159)
!20161 = !DILocation(line: 231, column: 11, scope: !20159)
!20162 = !DILocation(line: 231, column: 11, scope: !20055)
!20163 = !DILocation(line: 232, column: 13, scope: !20159)
!20164 = !DILocation(line: 232, column: 9, scope: !20159)
!20165 = !DILocation(line: 233, column: 5, scope: !20055)
!20166 = !DILocation(line: 235, column: 10, scope: !19949)
!20167 = !DILocation(line: 235, column: 4, scope: !19949)
!20168 = !DILocation(line: 235, column: 8, scope: !19949)
!20169 = !DILocation(line: 236, column: 10, scope: !19949)
!20170 = !DILocation(line: 236, column: 3, scope: !19949)
!20171 = !DILocation(line: 237, column: 1, scope: !19949)
!20172 = distinct !DISubprogram(name: "bkm_scale", scope: !19606, file: !19606, line: 48, type: !2158, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!20173 = !DILocalVariable(name: "x", arg: 1, scope: !20172, file: !19606, line: 48, type: !1321)
!20174 = !DILocation(line: 48, column: 24, scope: !20172)
!20175 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !20172, file: !19606, line: 48, type: !27)
!20176 = !DILocation(line: 48, column: 31, scope: !20172)
!20177 = !DILocation(line: 55, column: 26, scope: !20178)
!20178 = distinct !DILexicalBlock(scope: !20172, file: !19606, line: 55, column: 7)
!20179 = !DILocation(line: 55, column: 24, scope: !20178)
!20180 = !DILocation(line: 55, column: 42, scope: !20178)
!20181 = !DILocation(line: 55, column: 41, scope: !20178)
!20182 = !DILocation(line: 55, column: 39, scope: !20178)
!20183 = !DILocation(line: 55, column: 7, scope: !20172)
!20184 = !DILocation(line: 57, column: 8, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20178, file: !19606, line: 56, column: 5)
!20186 = !DILocation(line: 57, column: 10, scope: !20185)
!20187 = !DILocation(line: 58, column: 7, scope: !20185)
!20188 = !DILocation(line: 60, column: 9, scope: !20172)
!20189 = !DILocation(line: 60, column: 4, scope: !20172)
!20190 = !DILocation(line: 60, column: 6, scope: !20172)
!20191 = !DILocation(line: 61, column: 3, scope: !20172)
!20192 = !DILocation(line: 62, column: 1, scope: !20172)
!20193 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19606, file: !19606, line: 65, type: !2160, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2153, retainedNodes: !152)
!20194 = !DILocalVariable(name: "x", arg: 1, scope: !20193, file: !19606, line: 65, type: !1321)
!20195 = !DILocation(line: 65, column: 33, scope: !20193)
!20196 = !DILocalVariable(name: "base", arg: 2, scope: !20193, file: !19606, line: 65, type: !27)
!20197 = !DILocation(line: 65, column: 40, scope: !20193)
!20198 = !DILocalVariable(name: "power", arg: 3, scope: !20193, file: !19606, line: 65, type: !27)
!20199 = !DILocation(line: 65, column: 50, scope: !20193)
!20200 = !DILocalVariable(name: "err", scope: !20193, file: !19606, line: 67, type: !1322)
!20201 = !DILocation(line: 67, column: 16, scope: !20193)
!20202 = !DILocation(line: 68, column: 3, scope: !20193)
!20203 = !DILocation(line: 68, column: 15, scope: !20193)
!20204 = !DILocation(line: 69, column: 23, scope: !20193)
!20205 = !DILocation(line: 69, column: 26, scope: !20193)
!20206 = !DILocation(line: 69, column: 12, scope: !20193)
!20207 = !DILocation(line: 69, column: 9, scope: !20193)
!20208 = distinct !{!20208, !20202, !20209}
!20209 = !DILocation(line: 69, column: 30, scope: !20193)
!20210 = !DILocation(line: 70, column: 10, scope: !20193)
!20211 = !DILocation(line: 70, column: 3, scope: !20193)
!20212 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !20213, file: !20213, line: 385, type: !2165, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2162, retainedNodes: !152)
!20213 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20214 = !DILocalVariable(name: "pwc", arg: 1, scope: !20212, file: !20213, line: 385, type: !1874)
!20215 = !DILocation(line: 385, column: 23, scope: !20212)
!20216 = !DILocalVariable(name: "s", arg: 2, scope: !20212, file: !20213, line: 385, type: !146)
!20217 = !DILocation(line: 385, column: 40, scope: !20212)
!20218 = !DILocalVariable(name: "n", arg: 3, scope: !20212, file: !20213, line: 385, type: !149)
!20219 = !DILocation(line: 385, column: 50, scope: !20212)
!20220 = !DILocalVariable(name: "ps", arg: 4, scope: !20212, file: !20213, line: 385, type: !2167)
!20221 = !DILocation(line: 385, column: 64, scope: !20212)
!20222 = !DILocalVariable(name: "ret", scope: !20212, file: !20213, line: 387, type: !149)
!20223 = !DILocation(line: 387, column: 10, scope: !20212)
!20224 = !DILocalVariable(name: "wc", scope: !20212, file: !20213, line: 388, type: !654)
!20225 = !DILocation(line: 388, column: 11, scope: !20212)
!20226 = !DILocation(line: 404, column: 9, scope: !20227)
!20227 = distinct !DILexicalBlock(scope: !20212, file: !20213, line: 404, column: 7)
!20228 = !DILocation(line: 404, column: 7, scope: !20212)
!20229 = !DILocation(line: 405, column: 9, scope: !20227)
!20230 = !DILocation(line: 405, column: 5, scope: !20227)
!20231 = !DILocation(line: 439, column: 18, scope: !20212)
!20232 = !DILocation(line: 439, column: 23, scope: !20212)
!20233 = !DILocation(line: 439, column: 26, scope: !20212)
!20234 = !DILocation(line: 439, column: 29, scope: !20212)
!20235 = !DILocation(line: 439, column: 9, scope: !20212)
!20236 = !DILocation(line: 439, column: 7, scope: !20212)
!20237 = !DILocation(line: 447, column: 22, scope: !20238)
!20238 = distinct !DILexicalBlock(scope: !20212, file: !20213, line: 447, column: 7)
!20239 = !DILocation(line: 447, column: 19, scope: !20238)
!20240 = !DILocation(line: 447, column: 26, scope: !20238)
!20241 = !DILocation(line: 447, column: 29, scope: !20238)
!20242 = !DILocation(line: 447, column: 31, scope: !20238)
!20243 = !DILocation(line: 447, column: 36, scope: !20238)
!20244 = !DILocation(line: 447, column: 41, scope: !20238)
!20245 = !DILocation(line: 447, column: 7, scope: !20212)
!20246 = !DILocalVariable(name: "uc", scope: !20247, file: !20213, line: 449, type: !591)
!20247 = distinct !DILexicalBlock(scope: !20238, file: !20213, line: 448, column: 5)
!20248 = !DILocation(line: 449, column: 21, scope: !20247)
!20249 = !DILocation(line: 449, column: 27, scope: !20247)
!20250 = !DILocation(line: 449, column: 26, scope: !20247)
!20251 = !DILocation(line: 450, column: 14, scope: !20247)
!20252 = !DILocation(line: 450, column: 8, scope: !20247)
!20253 = !DILocation(line: 450, column: 12, scope: !20247)
!20254 = !DILocation(line: 451, column: 7, scope: !20247)
!20255 = !DILocation(line: 455, column: 10, scope: !20212)
!20256 = !DILocation(line: 455, column: 3, scope: !20212)
!20257 = !DILocation(line: 456, column: 1, scope: !20212)
!20258 = distinct !DISubprogram(name: "print_and_abort", scope: !1646, file: !1646, line: 330, type: !341, scopeLine: 331, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20259 = !DILocation(line: 340, column: 12, scope: !20258)
!20260 = !DILocation(line: 340, column: 28, scope: !20258)
!20261 = !DILocation(line: 340, column: 3, scope: !20258)
!20262 = !DILocation(line: 342, column: 9, scope: !20258)
!20263 = !DILocation(line: 342, column: 3, scope: !20258)
!20264 = distinct !DISubprogram(name: "_obstack_begin", scope: !1646, file: !1646, line: 150, type: !1561, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20265 = !DILocalVariable(name: "h", arg: 1, scope: !20264, file: !1646, line: 150, type: !1563)
!20266 = !DILocation(line: 150, column: 33, scope: !20264)
!20267 = !DILocalVariable(name: "size", arg: 2, scope: !20264, file: !1646, line: 151, type: !149)
!20268 = !DILocation(line: 151, column: 33, scope: !20264)
!20269 = !DILocalVariable(name: "alignment", arg: 3, scope: !20264, file: !1646, line: 151, type: !149)
!20270 = !DILocation(line: 151, column: 55, scope: !20264)
!20271 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20264, file: !1646, line: 152, type: !375)
!20272 = !DILocation(line: 152, column: 25, scope: !20264)
!20273 = !DILocalVariable(name: "freefun", arg: 5, scope: !20264, file: !1646, line: 153, type: !386)
!20274 = !DILocation(line: 153, column: 24, scope: !20264)
!20275 = !DILocation(line: 155, column: 23, scope: !20264)
!20276 = !DILocation(line: 155, column: 3, scope: !20264)
!20277 = !DILocation(line: 155, column: 6, scope: !20264)
!20278 = !DILocation(line: 155, column: 15, scope: !20264)
!20279 = !DILocation(line: 155, column: 21, scope: !20264)
!20280 = !DILocation(line: 156, column: 22, scope: !20264)
!20281 = !DILocation(line: 156, column: 3, scope: !20264)
!20282 = !DILocation(line: 156, column: 6, scope: !20264)
!20283 = !DILocation(line: 156, column: 14, scope: !20264)
!20284 = !DILocation(line: 156, column: 20, scope: !20264)
!20285 = !DILocation(line: 157, column: 3, scope: !20264)
!20286 = !DILocation(line: 157, column: 6, scope: !20264)
!20287 = !DILocation(line: 157, column: 20, scope: !20264)
!20288 = !DILocation(line: 158, column: 33, scope: !20264)
!20289 = !DILocation(line: 158, column: 36, scope: !20264)
!20290 = !DILocation(line: 158, column: 42, scope: !20264)
!20291 = !DILocation(line: 158, column: 10, scope: !20264)
!20292 = !DILocation(line: 158, column: 3, scope: !20264)
!20293 = distinct !DISubprogram(name: "_obstack_begin_worker", scope: !1646, file: !1646, line: 109, type: !1607, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20294 = !DILocalVariable(name: "h", arg: 1, scope: !20293, file: !1646, line: 109, type: !1563)
!20295 = !DILocation(line: 109, column: 40, scope: !20293)
!20296 = !DILocalVariable(name: "size", arg: 2, scope: !20293, file: !1646, line: 110, type: !149)
!20297 = !DILocation(line: 110, column: 40, scope: !20293)
!20298 = !DILocalVariable(name: "alignment", arg: 3, scope: !20293, file: !1646, line: 110, type: !149)
!20299 = !DILocation(line: 110, column: 62, scope: !20293)
!20300 = !DILocalVariable(name: "chunk", scope: !20293, file: !1646, line: 112, type: !1568)
!20301 = !DILocation(line: 112, column: 26, scope: !20293)
!20302 = !DILocation(line: 114, column: 7, scope: !20303)
!20303 = distinct !DILexicalBlock(scope: !20293, file: !1646, line: 114, column: 7)
!20304 = !DILocation(line: 114, column: 17, scope: !20303)
!20305 = !DILocation(line: 114, column: 7, scope: !20293)
!20306 = !DILocation(line: 115, column: 15, scope: !20303)
!20307 = !DILocation(line: 115, column: 5, scope: !20303)
!20308 = !DILocation(line: 116, column: 7, scope: !20309)
!20309 = distinct !DILexicalBlock(scope: !20293, file: !1646, line: 116, column: 7)
!20310 = !DILocation(line: 116, column: 12, scope: !20309)
!20311 = !DILocation(line: 116, column: 7, scope: !20293)
!20312 = !DILocalVariable(name: "extra", scope: !20313, file: !1646, line: 127, type: !27)
!20313 = distinct !DILexicalBlock(scope: !20309, file: !1646, line: 118, column: 5)
!20314 = !DILocation(line: 127, column: 11, scope: !20313)
!20315 = !DILocation(line: 130, column: 21, scope: !20313)
!20316 = !DILocation(line: 130, column: 19, scope: !20313)
!20317 = !DILocation(line: 130, column: 14, scope: !20313)
!20318 = !DILocation(line: 130, column: 12, scope: !20313)
!20319 = !DILocation(line: 131, column: 5, scope: !20313)
!20320 = !DILocation(line: 133, column: 19, scope: !20293)
!20321 = !DILocation(line: 133, column: 3, scope: !20293)
!20322 = !DILocation(line: 133, column: 6, scope: !20293)
!20323 = !DILocation(line: 133, column: 17, scope: !20293)
!20324 = !{!4745, !2467, i64 0}
!20325 = !DILocation(line: 134, column: 23, scope: !20293)
!20326 = !DILocation(line: 134, column: 33, scope: !20293)
!20327 = !DILocation(line: 134, column: 3, scope: !20293)
!20328 = !DILocation(line: 134, column: 6, scope: !20293)
!20329 = !DILocation(line: 134, column: 21, scope: !20293)
!20330 = !DILocation(line: 136, column: 37, scope: !20293)
!20331 = !DILocation(line: 136, column: 40, scope: !20293)
!20332 = !DILocation(line: 136, column: 43, scope: !20293)
!20333 = !DILocation(line: 136, column: 22, scope: !20293)
!20334 = !DILocation(line: 136, column: 11, scope: !20293)
!20335 = !DILocation(line: 136, column: 14, scope: !20293)
!20336 = !DILocation(line: 136, column: 20, scope: !20293)
!20337 = !DILocation(line: 136, column: 9, scope: !20293)
!20338 = !DILocation(line: 137, column: 8, scope: !20339)
!20339 = distinct !DILexicalBlock(scope: !20293, file: !1646, line: 137, column: 7)
!20340 = !DILocation(line: 137, column: 7, scope: !20293)
!20341 = !DILocation(line: 138, column: 7, scope: !20339)
!20342 = !DILocation(line: 138, column: 5, scope: !20339)
!20343 = !DILocation(line: 139, column: 35, scope: !20293)
!20344 = !DILocation(line: 139, column: 18, scope: !20293)
!20345 = !DILocation(line: 139, column: 21, scope: !20293)
!20346 = !DILocation(line: 139, column: 33, scope: !20293)
!20347 = !DILocation(line: 139, column: 3, scope: !20293)
!20348 = !DILocation(line: 139, column: 6, scope: !20293)
!20349 = !DILocation(line: 139, column: 16, scope: !20293)
!20350 = !DILocation(line: 141, column: 44, scope: !20293)
!20351 = !DILocation(line: 141, column: 35, scope: !20293)
!20352 = !DILocation(line: 141, column: 52, scope: !20293)
!20353 = !DILocation(line: 141, column: 55, scope: !20293)
!20354 = !DILocation(line: 141, column: 50, scope: !20293)
!20355 = !DILocation(line: 141, column: 20, scope: !20293)
!20356 = !DILocation(line: 141, column: 27, scope: !20293)
!20357 = !DILocation(line: 141, column: 33, scope: !20293)
!20358 = !DILocation(line: 141, column: 3, scope: !20293)
!20359 = !DILocation(line: 141, column: 6, scope: !20293)
!20360 = !DILocation(line: 141, column: 18, scope: !20293)
!20361 = !DILocation(line: 142, column: 3, scope: !20293)
!20362 = !DILocation(line: 142, column: 10, scope: !20293)
!20363 = !DILocation(line: 142, column: 15, scope: !20293)
!20364 = !DILocation(line: 144, column: 3, scope: !20293)
!20365 = !DILocation(line: 144, column: 6, scope: !20293)
!20366 = !DILocation(line: 144, column: 25, scope: !20293)
!20367 = !DILocation(line: 145, column: 3, scope: !20293)
!20368 = !DILocation(line: 145, column: 6, scope: !20293)
!20369 = !DILocation(line: 145, column: 19, scope: !20293)
!20370 = !DILocation(line: 146, column: 3, scope: !20293)
!20371 = distinct !DISubprogram(name: "call_chunkfun", scope: !1646, file: !1646, line: 84, type: !1609, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20372 = !DILocalVariable(name: "h", arg: 1, scope: !20371, file: !1646, line: 84, type: !1563)
!20373 = !DILocation(line: 84, column: 32, scope: !20371)
!20374 = !DILocalVariable(name: "size", arg: 2, scope: !20371, file: !1646, line: 84, type: !149)
!20375 = !DILocation(line: 84, column: 42, scope: !20371)
!20376 = !DILocation(line: 86, column: 7, scope: !20377)
!20377 = distinct !DILexicalBlock(scope: !20371, file: !1646, line: 86, column: 7)
!20378 = !DILocation(line: 86, column: 10, scope: !20377)
!20379 = !DILocation(line: 86, column: 7, scope: !20371)
!20380 = !DILocation(line: 87, column: 12, scope: !20377)
!20381 = !DILocation(line: 87, column: 15, scope: !20377)
!20382 = !DILocation(line: 87, column: 24, scope: !20377)
!20383 = !DILocation(line: 87, column: 31, scope: !20377)
!20384 = !DILocation(line: 87, column: 34, scope: !20377)
!20385 = !{!4745, !2443, i64 72}
!20386 = !DILocation(line: 87, column: 45, scope: !20377)
!20387 = !DILocation(line: 87, column: 5, scope: !20377)
!20388 = !DILocation(line: 89, column: 12, scope: !20377)
!20389 = !DILocation(line: 89, column: 15, scope: !20377)
!20390 = !DILocation(line: 89, column: 24, scope: !20377)
!20391 = !DILocation(line: 89, column: 31, scope: !20377)
!20392 = !DILocation(line: 89, column: 5, scope: !20377)
!20393 = !DILocation(line: 90, column: 1, scope: !20371)
!20394 = distinct !DISubprogram(name: "_obstack_begin_1", scope: !1646, file: !1646, line: 162, type: !1597, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20395 = !DILocalVariable(name: "h", arg: 1, scope: !20394, file: !1646, line: 162, type: !1563)
!20396 = !DILocation(line: 162, column: 35, scope: !20394)
!20397 = !DILocalVariable(name: "size", arg: 2, scope: !20394, file: !1646, line: 163, type: !149)
!20398 = !DILocation(line: 163, column: 35, scope: !20394)
!20399 = !DILocalVariable(name: "alignment", arg: 3, scope: !20394, file: !1646, line: 163, type: !149)
!20400 = !DILocation(line: 163, column: 57, scope: !20394)
!20401 = !DILocalVariable(name: "chunkfun", arg: 4, scope: !20394, file: !1646, line: 164, type: !379)
!20402 = !DILocation(line: 164, column: 27, scope: !20394)
!20403 = !DILocalVariable(name: "freefun", arg: 5, scope: !20394, file: !1646, line: 165, type: !388)
!20404 = !DILocation(line: 165, column: 26, scope: !20394)
!20405 = !DILocalVariable(name: "arg", arg: 6, scope: !20394, file: !1646, line: 166, type: !167)
!20406 = !DILocation(line: 166, column: 25, scope: !20394)
!20407 = !DILocation(line: 168, column: 23, scope: !20394)
!20408 = !DILocation(line: 168, column: 3, scope: !20394)
!20409 = !DILocation(line: 168, column: 6, scope: !20394)
!20410 = !DILocation(line: 168, column: 15, scope: !20394)
!20411 = !DILocation(line: 168, column: 21, scope: !20394)
!20412 = !DILocation(line: 169, column: 22, scope: !20394)
!20413 = !DILocation(line: 169, column: 3, scope: !20394)
!20414 = !DILocation(line: 169, column: 6, scope: !20394)
!20415 = !DILocation(line: 169, column: 14, scope: !20394)
!20416 = !DILocation(line: 169, column: 20, scope: !20394)
!20417 = !DILocation(line: 170, column: 18, scope: !20394)
!20418 = !DILocation(line: 170, column: 3, scope: !20394)
!20419 = !DILocation(line: 170, column: 6, scope: !20394)
!20420 = !DILocation(line: 170, column: 16, scope: !20394)
!20421 = !DILocation(line: 171, column: 3, scope: !20394)
!20422 = !DILocation(line: 171, column: 6, scope: !20394)
!20423 = !DILocation(line: 171, column: 20, scope: !20394)
!20424 = !DILocation(line: 172, column: 33, scope: !20394)
!20425 = !DILocation(line: 172, column: 36, scope: !20394)
!20426 = !DILocation(line: 172, column: 42, scope: !20394)
!20427 = !DILocation(line: 172, column: 10, scope: !20394)
!20428 = !DILocation(line: 172, column: 3, scope: !20394)
!20429 = distinct !DISubprogram(name: "_obstack_newchunk", scope: !1646, file: !1646, line: 182, type: !1599, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20430 = !DILocalVariable(name: "h", arg: 1, scope: !20429, file: !1646, line: 182, type: !1563)
!20431 = !DILocation(line: 182, column: 36, scope: !20429)
!20432 = !DILocalVariable(name: "length", arg: 2, scope: !20429, file: !1646, line: 182, type: !149)
!20433 = !DILocation(line: 182, column: 55, scope: !20429)
!20434 = !DILocalVariable(name: "old_chunk", scope: !20429, file: !1646, line: 184, type: !1568)
!20435 = !DILocation(line: 184, column: 26, scope: !20429)
!20436 = !DILocation(line: 184, column: 38, scope: !20429)
!20437 = !DILocation(line: 184, column: 41, scope: !20429)
!20438 = !DILocalVariable(name: "new_chunk", scope: !20429, file: !1646, line: 185, type: !1568)
!20439 = !DILocation(line: 185, column: 26, scope: !20429)
!20440 = !DILocalVariable(name: "obj_size", scope: !20429, file: !1646, line: 186, type: !149)
!20441 = !DILocation(line: 186, column: 10, scope: !20429)
!20442 = !DILocation(line: 186, column: 21, scope: !20429)
!20443 = !DILocation(line: 186, column: 24, scope: !20429)
!20444 = !DILocation(line: 186, column: 36, scope: !20429)
!20445 = !DILocation(line: 186, column: 39, scope: !20429)
!20446 = !DILocation(line: 186, column: 34, scope: !20429)
!20447 = !DILocalVariable(name: "object_base", scope: !20429, file: !1646, line: 187, type: !143)
!20448 = !DILocation(line: 187, column: 9, scope: !20429)
!20449 = !DILocalVariable(name: "sum1", scope: !20429, file: !1646, line: 190, type: !149)
!20450 = !DILocation(line: 190, column: 10, scope: !20429)
!20451 = !DILocation(line: 190, column: 17, scope: !20429)
!20452 = !DILocation(line: 190, column: 28, scope: !20429)
!20453 = !DILocation(line: 190, column: 26, scope: !20429)
!20454 = !DILocalVariable(name: "sum2", scope: !20429, file: !1646, line: 191, type: !149)
!20455 = !DILocation(line: 191, column: 10, scope: !20429)
!20456 = !DILocation(line: 191, column: 17, scope: !20429)
!20457 = !DILocation(line: 191, column: 24, scope: !20429)
!20458 = !DILocation(line: 191, column: 27, scope: !20429)
!20459 = !DILocation(line: 191, column: 22, scope: !20429)
!20460 = !DILocalVariable(name: "new_size", scope: !20429, file: !1646, line: 192, type: !149)
!20461 = !DILocation(line: 192, column: 10, scope: !20429)
!20462 = !DILocation(line: 192, column: 21, scope: !20429)
!20463 = !DILocation(line: 192, column: 29, scope: !20429)
!20464 = !DILocation(line: 192, column: 38, scope: !20429)
!20465 = !DILocation(line: 192, column: 26, scope: !20429)
!20466 = !DILocation(line: 192, column: 44, scope: !20429)
!20467 = !DILocation(line: 193, column: 7, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20429, file: !1646, line: 193, column: 7)
!20469 = !DILocation(line: 193, column: 18, scope: !20468)
!20470 = !DILocation(line: 193, column: 16, scope: !20468)
!20471 = !DILocation(line: 193, column: 7, scope: !20429)
!20472 = !DILocation(line: 194, column: 16, scope: !20468)
!20473 = !DILocation(line: 194, column: 14, scope: !20468)
!20474 = !DILocation(line: 194, column: 5, scope: !20468)
!20475 = !DILocation(line: 195, column: 7, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20429, file: !1646, line: 195, column: 7)
!20477 = !DILocation(line: 195, column: 18, scope: !20476)
!20478 = !DILocation(line: 195, column: 21, scope: !20476)
!20479 = !DILocation(line: 195, column: 16, scope: !20476)
!20480 = !DILocation(line: 195, column: 7, scope: !20429)
!20481 = !DILocation(line: 196, column: 16, scope: !20476)
!20482 = !DILocation(line: 196, column: 19, scope: !20476)
!20483 = !DILocation(line: 196, column: 14, scope: !20476)
!20484 = !DILocation(line: 196, column: 5, scope: !20476)
!20485 = !DILocation(line: 199, column: 7, scope: !20486)
!20486 = distinct !DILexicalBlock(scope: !20429, file: !1646, line: 199, column: 7)
!20487 = !DILocation(line: 199, column: 19, scope: !20486)
!20488 = !DILocation(line: 199, column: 16, scope: !20486)
!20489 = !DILocation(line: 199, column: 24, scope: !20486)
!20490 = !DILocation(line: 199, column: 27, scope: !20486)
!20491 = !DILocation(line: 199, column: 35, scope: !20486)
!20492 = !DILocation(line: 199, column: 32, scope: !20486)
!20493 = !DILocation(line: 199, column: 7, scope: !20429)
!20494 = !DILocation(line: 200, column: 32, scope: !20486)
!20495 = !DILocation(line: 200, column: 35, scope: !20486)
!20496 = !DILocation(line: 200, column: 17, scope: !20486)
!20497 = !DILocation(line: 200, column: 15, scope: !20486)
!20498 = !DILocation(line: 200, column: 5, scope: !20486)
!20499 = !DILocation(line: 201, column: 8, scope: !20500)
!20500 = distinct !DILexicalBlock(scope: !20429, file: !1646, line: 201, column: 7)
!20501 = !DILocation(line: 201, column: 7, scope: !20429)
!20502 = !DILocation(line: 202, column: 7, scope: !20500)
!20503 = !DILocation(line: 202, column: 5, scope: !20500)
!20504 = !DILocation(line: 203, column: 14, scope: !20429)
!20505 = !DILocation(line: 203, column: 3, scope: !20429)
!20506 = !DILocation(line: 203, column: 6, scope: !20429)
!20507 = !DILocation(line: 203, column: 12, scope: !20429)
!20508 = !DILocation(line: 204, column: 21, scope: !20429)
!20509 = !DILocation(line: 204, column: 3, scope: !20429)
!20510 = !DILocation(line: 204, column: 14, scope: !20429)
!20511 = !DILocation(line: 204, column: 19, scope: !20429)
!20512 = !DILocation(line: 205, column: 48, scope: !20429)
!20513 = !DILocation(line: 205, column: 39, scope: !20429)
!20514 = !DILocation(line: 205, column: 60, scope: !20429)
!20515 = !DILocation(line: 205, column: 58, scope: !20429)
!20516 = !DILocation(line: 205, column: 22, scope: !20429)
!20517 = !DILocation(line: 205, column: 25, scope: !20429)
!20518 = !DILocation(line: 205, column: 37, scope: !20429)
!20519 = !DILocation(line: 205, column: 3, scope: !20429)
!20520 = !DILocation(line: 205, column: 14, scope: !20429)
!20521 = !DILocation(line: 205, column: 20, scope: !20429)
!20522 = !DILocation(line: 209, column: 5, scope: !20429)
!20523 = !DILocation(line: 208, column: 15, scope: !20429)
!20524 = !DILocation(line: 212, column: 11, scope: !20429)
!20525 = !DILocation(line: 212, column: 24, scope: !20429)
!20526 = !DILocation(line: 212, column: 27, scope: !20429)
!20527 = !DILocation(line: 212, column: 40, scope: !20429)
!20528 = !DILocation(line: 212, column: 3, scope: !20429)
!20529 = !DILocation(line: 217, column: 8, scope: !20530)
!20530 = distinct !DILexicalBlock(scope: !20429, file: !1646, line: 217, column: 7)
!20531 = !DILocation(line: 217, column: 11, scope: !20530)
!20532 = !DILocation(line: 218, column: 7, scope: !20530)
!20533 = !DILocation(line: 218, column: 11, scope: !20530)
!20534 = !DILocation(line: 218, column: 14, scope: !20530)
!20535 = !DILocation(line: 219, column: 14, scope: !20530)
!20536 = !DILocation(line: 219, column: 11, scope: !20530)
!20537 = !DILocation(line: 217, column: 7, scope: !20429)
!20538 = !DILocation(line: 222, column: 25, scope: !20539)
!20539 = distinct !DILexicalBlock(scope: !20530, file: !1646, line: 221, column: 5)
!20540 = !DILocation(line: 222, column: 36, scope: !20539)
!20541 = !DILocation(line: 222, column: 7, scope: !20539)
!20542 = !DILocation(line: 222, column: 18, scope: !20539)
!20543 = !DILocation(line: 222, column: 23, scope: !20539)
!20544 = !DILocation(line: 223, column: 21, scope: !20539)
!20545 = !DILocation(line: 223, column: 24, scope: !20539)
!20546 = !DILocation(line: 223, column: 7, scope: !20539)
!20547 = !DILocation(line: 224, column: 5, scope: !20539)
!20548 = !DILocation(line: 226, column: 20, scope: !20429)
!20549 = !DILocation(line: 226, column: 3, scope: !20429)
!20550 = !DILocation(line: 226, column: 6, scope: !20429)
!20551 = !DILocation(line: 226, column: 18, scope: !20429)
!20552 = !DILocation(line: 227, column: 18, scope: !20429)
!20553 = !DILocation(line: 227, column: 21, scope: !20429)
!20554 = !DILocation(line: 227, column: 35, scope: !20429)
!20555 = !DILocation(line: 227, column: 33, scope: !20429)
!20556 = !DILocation(line: 227, column: 3, scope: !20429)
!20557 = !DILocation(line: 227, column: 6, scope: !20429)
!20558 = !DILocation(line: 227, column: 16, scope: !20429)
!20559 = !DILocation(line: 229, column: 3, scope: !20429)
!20560 = !DILocation(line: 229, column: 6, scope: !20429)
!20561 = !DILocation(line: 229, column: 25, scope: !20429)
!20562 = !DILocation(line: 230, column: 1, scope: !20429)
!20563 = distinct !DISubprogram(name: "call_freefun", scope: !1646, file: !1646, line: 93, type: !1603, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20564 = !DILocalVariable(name: "h", arg: 1, scope: !20563, file: !1646, line: 93, type: !1563)
!20565 = !DILocation(line: 93, column: 31, scope: !20563)
!20566 = !DILocalVariable(name: "old_chunk", arg: 2, scope: !20563, file: !1646, line: 93, type: !167)
!20567 = !DILocation(line: 93, column: 40, scope: !20563)
!20568 = !DILocation(line: 95, column: 7, scope: !20569)
!20569 = distinct !DILexicalBlock(scope: !20563, file: !1646, line: 95, column: 7)
!20570 = !DILocation(line: 95, column: 10, scope: !20569)
!20571 = !DILocation(line: 95, column: 7, scope: !20563)
!20572 = !DILocation(line: 96, column: 5, scope: !20569)
!20573 = !DILocation(line: 96, column: 8, scope: !20569)
!20574 = !DILocation(line: 96, column: 16, scope: !20569)
!20575 = !DILocation(line: 96, column: 23, scope: !20569)
!20576 = !DILocation(line: 96, column: 26, scope: !20569)
!20577 = !DILocation(line: 96, column: 37, scope: !20569)
!20578 = !DILocation(line: 98, column: 5, scope: !20569)
!20579 = !DILocation(line: 98, column: 8, scope: !20569)
!20580 = !DILocation(line: 98, column: 16, scope: !20569)
!20581 = !DILocation(line: 98, column: 23, scope: !20569)
!20582 = !DILocation(line: 99, column: 1, scope: !20563)
!20583 = distinct !DISubprogram(name: "_obstack_allocated_p", scope: !1646, file: !1646, line: 241, type: !1601, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20584 = !DILocalVariable(name: "h", arg: 1, scope: !20583, file: !1646, line: 241, type: !1563)
!20585 = !DILocation(line: 241, column: 39, scope: !20583)
!20586 = !DILocalVariable(name: "obj", arg: 2, scope: !20583, file: !1646, line: 241, type: !167)
!20587 = !DILocation(line: 241, column: 48, scope: !20583)
!20588 = !DILocalVariable(name: "lp", scope: !20583, file: !1646, line: 243, type: !1568)
!20589 = !DILocation(line: 243, column: 26, scope: !20583)
!20590 = !DILocalVariable(name: "plp", scope: !20583, file: !1646, line: 244, type: !1568)
!20591 = !DILocation(line: 244, column: 26, scope: !20583)
!20592 = !DILocation(line: 246, column: 9, scope: !20583)
!20593 = !DILocation(line: 246, column: 13, scope: !20583)
!20594 = !DILocation(line: 246, column: 6, scope: !20583)
!20595 = !DILocation(line: 250, column: 3, scope: !20583)
!20596 = !DILocation(line: 250, column: 10, scope: !20583)
!20597 = !DILocation(line: 250, column: 13, scope: !20583)
!20598 = !DILocation(line: 250, column: 18, scope: !20583)
!20599 = !DILocation(line: 250, column: 31, scope: !20583)
!20600 = !DILocation(line: 250, column: 22, scope: !20583)
!20601 = !DILocation(line: 250, column: 37, scope: !20583)
!20602 = !DILocation(line: 250, column: 34, scope: !20583)
!20603 = !DILocation(line: 250, column: 41, scope: !20583)
!20604 = !DILocation(line: 250, column: 54, scope: !20583)
!20605 = !DILocation(line: 250, column: 59, scope: !20583)
!20606 = !DILocation(line: 250, column: 67, scope: !20583)
!20607 = !DILocation(line: 250, column: 65, scope: !20583)
!20608 = !DILocation(line: 0, scope: !20583)
!20609 = !DILocation(line: 252, column: 13, scope: !20610)
!20610 = distinct !DILexicalBlock(scope: !20583, file: !1646, line: 251, column: 5)
!20611 = !DILocation(line: 252, column: 17, scope: !20610)
!20612 = !DILocation(line: 252, column: 11, scope: !20610)
!20613 = !DILocation(line: 253, column: 12, scope: !20610)
!20614 = !DILocation(line: 253, column: 10, scope: !20610)
!20615 = distinct !{!20615, !20595, !20616}
!20616 = !DILocation(line: 254, column: 5, scope: !20583)
!20617 = !DILocation(line: 255, column: 10, scope: !20583)
!20618 = !DILocation(line: 255, column: 13, scope: !20583)
!20619 = !DILocation(line: 255, column: 3, scope: !20583)
!20620 = distinct !DISubprogram(name: "_obstack_free", scope: !1646, file: !1646, line: 262, type: !1603, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20621 = !DILocalVariable(name: "h", arg: 1, scope: !20620, file: !1646, line: 262, type: !1563)
!20622 = !DILocation(line: 262, column: 32, scope: !20620)
!20623 = !DILocalVariable(name: "obj", arg: 2, scope: !20620, file: !1646, line: 262, type: !167)
!20624 = !DILocation(line: 262, column: 41, scope: !20620)
!20625 = !DILocalVariable(name: "lp", scope: !20620, file: !1646, line: 264, type: !1568)
!20626 = !DILocation(line: 264, column: 26, scope: !20620)
!20627 = !DILocalVariable(name: "plp", scope: !20620, file: !1646, line: 265, type: !1568)
!20628 = !DILocation(line: 265, column: 26, scope: !20620)
!20629 = !DILocation(line: 267, column: 8, scope: !20620)
!20630 = !DILocation(line: 267, column: 11, scope: !20620)
!20631 = !DILocation(line: 267, column: 6, scope: !20620)
!20632 = !DILocation(line: 271, column: 3, scope: !20620)
!20633 = !DILocation(line: 271, column: 10, scope: !20620)
!20634 = !DILocation(line: 271, column: 13, scope: !20620)
!20635 = !DILocation(line: 271, column: 18, scope: !20620)
!20636 = !DILocation(line: 271, column: 31, scope: !20620)
!20637 = !DILocation(line: 271, column: 22, scope: !20620)
!20638 = !DILocation(line: 271, column: 37, scope: !20620)
!20639 = !DILocation(line: 271, column: 34, scope: !20620)
!20640 = !DILocation(line: 271, column: 41, scope: !20620)
!20641 = !DILocation(line: 271, column: 54, scope: !20620)
!20642 = !DILocation(line: 271, column: 59, scope: !20620)
!20643 = !DILocation(line: 271, column: 67, scope: !20620)
!20644 = !DILocation(line: 271, column: 65, scope: !20620)
!20645 = !DILocation(line: 0, scope: !20620)
!20646 = !DILocation(line: 273, column: 13, scope: !20647)
!20647 = distinct !DILexicalBlock(scope: !20620, file: !1646, line: 272, column: 5)
!20648 = !DILocation(line: 273, column: 17, scope: !20647)
!20649 = !DILocation(line: 273, column: 11, scope: !20647)
!20650 = !DILocation(line: 274, column: 21, scope: !20647)
!20651 = !DILocation(line: 274, column: 24, scope: !20647)
!20652 = !DILocation(line: 274, column: 7, scope: !20647)
!20653 = !DILocation(line: 275, column: 12, scope: !20647)
!20654 = !DILocation(line: 275, column: 10, scope: !20647)
!20655 = !DILocation(line: 278, column: 7, scope: !20647)
!20656 = !DILocation(line: 278, column: 10, scope: !20647)
!20657 = !DILocation(line: 278, column: 29, scope: !20647)
!20658 = distinct !{!20658, !20632, !20659}
!20659 = !DILocation(line: 279, column: 5, scope: !20620)
!20660 = !DILocation(line: 280, column: 7, scope: !20661)
!20661 = distinct !DILexicalBlock(scope: !20620, file: !1646, line: 280, column: 7)
!20662 = !DILocation(line: 280, column: 7, scope: !20620)
!20663 = !DILocation(line: 282, column: 49, scope: !20664)
!20664 = distinct !DILexicalBlock(scope: !20661, file: !1646, line: 281, column: 5)
!20665 = !DILocation(line: 282, column: 24, scope: !20664)
!20666 = !DILocation(line: 282, column: 27, scope: !20664)
!20667 = !DILocation(line: 282, column: 37, scope: !20664)
!20668 = !DILocation(line: 282, column: 7, scope: !20664)
!20669 = !DILocation(line: 282, column: 10, scope: !20664)
!20670 = !DILocation(line: 282, column: 22, scope: !20664)
!20671 = !DILocation(line: 283, column: 24, scope: !20664)
!20672 = !DILocation(line: 283, column: 28, scope: !20664)
!20673 = !DILocation(line: 283, column: 7, scope: !20664)
!20674 = !DILocation(line: 283, column: 10, scope: !20664)
!20675 = !DILocation(line: 283, column: 22, scope: !20664)
!20676 = !DILocation(line: 284, column: 18, scope: !20664)
!20677 = !DILocation(line: 284, column: 7, scope: !20664)
!20678 = !DILocation(line: 284, column: 10, scope: !20664)
!20679 = !DILocation(line: 284, column: 16, scope: !20664)
!20680 = !DILocation(line: 285, column: 5, scope: !20664)
!20681 = !DILocation(line: 286, column: 12, scope: !20682)
!20682 = distinct !DILexicalBlock(scope: !20661, file: !1646, line: 286, column: 12)
!20683 = !DILocation(line: 286, column: 16, scope: !20682)
!20684 = !DILocation(line: 286, column: 12, scope: !20661)
!20685 = !DILocation(line: 288, column: 5, scope: !20682)
!20686 = !DILocation(line: 289, column: 1, scope: !20620)
!20687 = distinct !DISubprogram(name: "_obstack_memory_used", scope: !1646, file: !1646, line: 292, type: !1605, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1558, retainedNodes: !152)
!20688 = !DILocalVariable(name: "h", arg: 1, scope: !20687, file: !1646, line: 292, type: !1563)
!20689 = !DILocation(line: 292, column: 39, scope: !20687)
!20690 = !DILocalVariable(name: "lp", scope: !20687, file: !1646, line: 294, type: !1568)
!20691 = !DILocation(line: 294, column: 26, scope: !20687)
!20692 = !DILocalVariable(name: "nbytes", scope: !20687, file: !1646, line: 295, type: !149)
!20693 = !DILocation(line: 295, column: 19, scope: !20687)
!20694 = !DILocation(line: 297, column: 13, scope: !20695)
!20695 = distinct !DILexicalBlock(scope: !20687, file: !1646, line: 297, column: 3)
!20696 = !DILocation(line: 297, column: 16, scope: !20695)
!20697 = !DILocation(line: 297, column: 11, scope: !20695)
!20698 = !DILocation(line: 297, column: 8, scope: !20695)
!20699 = !DILocation(line: 297, column: 23, scope: !20700)
!20700 = distinct !DILexicalBlock(scope: !20695, file: !1646, line: 297, column: 3)
!20701 = !DILocation(line: 297, column: 26, scope: !20700)
!20702 = !DILocation(line: 297, column: 3, scope: !20695)
!20703 = !DILocation(line: 299, column: 17, scope: !20704)
!20704 = distinct !DILexicalBlock(scope: !20700, file: !1646, line: 298, column: 5)
!20705 = !DILocation(line: 299, column: 21, scope: !20704)
!20706 = !DILocation(line: 299, column: 38, scope: !20704)
!20707 = !DILocation(line: 299, column: 29, scope: !20704)
!20708 = !DILocation(line: 299, column: 27, scope: !20704)
!20709 = !DILocation(line: 299, column: 14, scope: !20704)
!20710 = !DILocation(line: 300, column: 5, scope: !20704)
!20711 = !DILocation(line: 297, column: 37, scope: !20700)
!20712 = !DILocation(line: 297, column: 41, scope: !20700)
!20713 = !DILocation(line: 297, column: 35, scope: !20700)
!20714 = !DILocation(line: 297, column: 3, scope: !20700)
!20715 = distinct !{!20715, !20702, !20716}
!20716 = !DILocation(line: 300, column: 5, scope: !20695)
!20717 = !DILocation(line: 301, column: 10, scope: !20687)
!20718 = !DILocation(line: 301, column: 3, scope: !20687)
!20719 = distinct !DISubprogram(name: "tzalloc", scope: !2231, file: !2231, line: 95, type: !2181, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20720 = !DILocalVariable(name: "name", arg: 1, scope: !20719, file: !2231, line: 95, type: !146)
!20721 = !DILocation(line: 95, column: 22, scope: !20719)
!20722 = !DILocalVariable(name: "name_size", scope: !20719, file: !2231, line: 97, type: !149)
!20723 = !DILocation(line: 97, column: 10, scope: !20719)
!20724 = !DILocation(line: 97, column: 22, scope: !20719)
!20725 = !DILocation(line: 97, column: 37, scope: !20719)
!20726 = !DILocation(line: 97, column: 29, scope: !20719)
!20727 = !DILocation(line: 97, column: 43, scope: !20719)
!20728 = !DILocalVariable(name: "abbr_size", scope: !20719, file: !2231, line: 98, type: !149)
!20729 = !DILocation(line: 98, column: 10, scope: !20719)
!20730 = !DILocation(line: 98, column: 22, scope: !20719)
!20731 = !DILocation(line: 98, column: 32, scope: !20719)
!20732 = !DILocation(line: 98, column: 66, scope: !20719)
!20733 = !DILocation(line: 98, column: 76, scope: !20719)
!20734 = !DILocalVariable(name: "tz", scope: !20719, file: !2231, line: 99, type: !2183)
!20735 = !DILocation(line: 99, column: 14, scope: !20719)
!20736 = !DILocation(line: 99, column: 27, scope: !20719)
!20737 = !DILocation(line: 99, column: 19, scope: !20719)
!20738 = !DILocation(line: 100, column: 7, scope: !20739)
!20739 = distinct !DILexicalBlock(scope: !20719, file: !2231, line: 100, column: 7)
!20740 = !DILocation(line: 100, column: 7, scope: !20719)
!20741 = !DILocation(line: 102, column: 7, scope: !20742)
!20742 = distinct !DILexicalBlock(scope: !20739, file: !2231, line: 101, column: 5)
!20743 = !DILocation(line: 102, column: 11, scope: !20742)
!20744 = !DILocation(line: 102, column: 16, scope: !20742)
!20745 = !DILocation(line: 106, column: 25, scope: !20742)
!20746 = !DILocation(line: 106, column: 24, scope: !20742)
!20747 = !DILocation(line: 106, column: 23, scope: !20742)
!20748 = !DILocation(line: 106, column: 7, scope: !20742)
!20749 = !DILocation(line: 106, column: 11, scope: !20742)
!20750 = !DILocation(line: 106, column: 21, scope: !20742)
!20751 = !DILocation(line: 107, column: 7, scope: !20742)
!20752 = !DILocation(line: 107, column: 11, scope: !20742)
!20753 = !DILocation(line: 107, column: 20, scope: !20742)
!20754 = !DILocation(line: 108, column: 11, scope: !20755)
!20755 = distinct !DILexicalBlock(scope: !20742, file: !2231, line: 108, column: 11)
!20756 = !DILocation(line: 108, column: 11, scope: !20742)
!20757 = !DILocation(line: 109, column: 23, scope: !20755)
!20758 = !DILocation(line: 109, column: 27, scope: !20755)
!20759 = !DILocation(line: 109, column: 34, scope: !20755)
!20760 = !DILocation(line: 109, column: 40, scope: !20755)
!20761 = !DILocation(line: 109, column: 9, scope: !20755)
!20762 = !DILocation(line: 110, column: 5, scope: !20742)
!20763 = !DILocation(line: 111, column: 10, scope: !20719)
!20764 = !DILocation(line: 111, column: 3, scope: !20719)
!20765 = distinct !DISubprogram(name: "extend_abbrs", scope: !2231, file: !2231, line: 86, type: !2212, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20766 = !DILocalVariable(name: "abbrs", arg: 1, scope: !20765, file: !2231, line: 86, type: !143)
!20767 = !DILocation(line: 86, column: 21, scope: !20765)
!20768 = !DILocalVariable(name: "abbr", arg: 2, scope: !20765, file: !2231, line: 86, type: !146)
!20769 = !DILocation(line: 86, column: 40, scope: !20765)
!20770 = !DILocalVariable(name: "abbr_size", arg: 3, scope: !20765, file: !2231, line: 86, type: !149)
!20771 = !DILocation(line: 86, column: 53, scope: !20765)
!20772 = !DILocation(line: 88, column: 11, scope: !20765)
!20773 = !DILocation(line: 88, column: 18, scope: !20765)
!20774 = !DILocation(line: 88, column: 24, scope: !20765)
!20775 = !DILocation(line: 88, column: 3, scope: !20765)
!20776 = !DILocation(line: 89, column: 3, scope: !20765)
!20777 = !DILocation(line: 89, column: 9, scope: !20765)
!20778 = !DILocation(line: 89, column: 20, scope: !20765)
!20779 = !DILocation(line: 90, column: 1, scope: !20765)
!20780 = distinct !DISubprogram(name: "tzfree", scope: !2231, file: !2231, line: 196, type: !2190, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20781 = !DILocalVariable(name: "tz", arg: 1, scope: !20780, file: !2231, line: 196, type: !2183)
!20782 = !DILocation(line: 196, column: 20, scope: !20780)
!20783 = !DILocation(line: 198, column: 7, scope: !20784)
!20784 = distinct !DILexicalBlock(scope: !20780, file: !2231, line: 198, column: 7)
!20785 = !DILocation(line: 198, column: 10, scope: !20784)
!20786 = !DILocation(line: 198, column: 7, scope: !20780)
!20787 = !DILocation(line: 199, column: 5, scope: !20784)
!20788 = !DILocation(line: 199, column: 12, scope: !20784)
!20789 = !DILocalVariable(name: "next", scope: !20790, file: !2231, line: 201, type: !2183)
!20790 = distinct !DILexicalBlock(scope: !20784, file: !2231, line: 200, column: 7)
!20791 = !DILocation(line: 201, column: 20, scope: !20790)
!20792 = !DILocation(line: 201, column: 27, scope: !20790)
!20793 = !DILocation(line: 201, column: 31, scope: !20790)
!20794 = !DILocation(line: 202, column: 15, scope: !20790)
!20795 = !DILocation(line: 202, column: 9, scope: !20790)
!20796 = !DILocation(line: 203, column: 14, scope: !20790)
!20797 = !DILocation(line: 203, column: 12, scope: !20790)
!20798 = distinct !{!20798, !20787, !20799}
!20799 = !DILocation(line: 204, column: 7, scope: !20784)
!20800 = !DILocation(line: 205, column: 1, scope: !20780)
!20801 = distinct !DISubprogram(name: "localtime_rz", scope: !2231, file: !2231, line: 287, type: !2192, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20802 = !DILocalVariable(name: "tz", arg: 1, scope: !20801, file: !2231, line: 287, type: !2183)
!20803 = !DILocation(line: 287, column: 26, scope: !20801)
!20804 = !DILocalVariable(name: "t", arg: 2, scope: !20801, file: !2231, line: 287, type: !2208)
!20805 = !DILocation(line: 287, column: 44, scope: !20801)
!20806 = !DILocalVariable(name: "tm", arg: 3, scope: !20801, file: !2231, line: 287, type: !2194)
!20807 = !DILocation(line: 287, column: 58, scope: !20801)
!20808 = !DILocation(line: 304, column: 8, scope: !20809)
!20809 = distinct !DILexicalBlock(scope: !20801, file: !2231, line: 304, column: 7)
!20810 = !DILocation(line: 304, column: 7, scope: !20801)
!20811 = !DILocation(line: 305, column: 22, scope: !20809)
!20812 = !DILocation(line: 305, column: 25, scope: !20809)
!20813 = !DILocation(line: 305, column: 12, scope: !20809)
!20814 = !DILocation(line: 305, column: 5, scope: !20809)
!20815 = !DILocalVariable(name: "old_tz", scope: !20816, file: !2231, line: 308, type: !2183)
!20816 = distinct !DILexicalBlock(scope: !20809, file: !2231, line: 307, column: 5)
!20817 = !DILocation(line: 308, column: 18, scope: !20816)
!20818 = !DILocation(line: 308, column: 35, scope: !20816)
!20819 = !DILocation(line: 308, column: 27, scope: !20816)
!20820 = !DILocation(line: 309, column: 11, scope: !20821)
!20821 = distinct !DILexicalBlock(scope: !20816, file: !2231, line: 309, column: 11)
!20822 = !DILocation(line: 309, column: 11, scope: !20816)
!20823 = !DILocalVariable(name: "abbr_saved", scope: !20824, file: !2231, line: 311, type: !141)
!20824 = distinct !DILexicalBlock(scope: !20821, file: !2231, line: 310, column: 9)
!20825 = !DILocation(line: 311, column: 16, scope: !20824)
!20826 = !DILocation(line: 311, column: 42, scope: !20824)
!20827 = !DILocation(line: 311, column: 45, scope: !20824)
!20828 = !DILocation(line: 311, column: 29, scope: !20824)
!20829 = !DILocation(line: 311, column: 49, scope: !20824)
!20830 = !DILocation(line: 311, column: 63, scope: !20824)
!20831 = !DILocation(line: 311, column: 67, scope: !20824)
!20832 = !DILocation(line: 311, column: 52, scope: !20824)
!20833 = !DILocation(line: 0, scope: !20824)
!20834 = !DILocation(line: 312, column: 26, scope: !20835)
!20835 = distinct !DILexicalBlock(scope: !20824, file: !2231, line: 312, column: 15)
!20836 = !DILocation(line: 312, column: 15, scope: !20835)
!20837 = !DILocation(line: 312, column: 34, scope: !20835)
!20838 = !DILocation(line: 312, column: 37, scope: !20835)
!20839 = !DILocation(line: 312, column: 15, scope: !20824)
!20840 = !DILocation(line: 313, column: 20, scope: !20835)
!20841 = !DILocation(line: 313, column: 13, scope: !20835)
!20842 = !DILocation(line: 314, column: 9, scope: !20824)
!20843 = !DILocation(line: 315, column: 7, scope: !20816)
!20844 = !DILocation(line: 317, column: 1, scope: !20801)
!20845 = distinct !DISubprogram(name: "set_tz", scope: !2231, file: !2231, line: 242, type: !2214, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20846 = !DILocalVariable(name: "tz", arg: 1, scope: !20845, file: !2231, line: 242, type: !2183)
!20847 = !DILocation(line: 242, column: 20, scope: !20845)
!20848 = !DILocalVariable(name: "env_tz", scope: !20845, file: !2231, line: 244, type: !143)
!20849 = !DILocation(line: 244, column: 9, scope: !20845)
!20850 = !DILocation(line: 244, column: 18, scope: !20845)
!20851 = !DILocation(line: 245, column: 7, scope: !20852)
!20852 = distinct !DILexicalBlock(scope: !20845, file: !2231, line: 245, column: 7)
!20853 = !DILocation(line: 245, column: 7, scope: !20845)
!20854 = !DILocation(line: 246, column: 9, scope: !20852)
!20855 = !DILocation(line: 246, column: 13, scope: !20852)
!20856 = !DILocation(line: 246, column: 23, scope: !20852)
!20857 = !DILocation(line: 246, column: 34, scope: !20852)
!20858 = !DILocation(line: 246, column: 38, scope: !20852)
!20859 = !DILocation(line: 246, column: 45, scope: !20852)
!20860 = !DILocation(line: 246, column: 26, scope: !20852)
!20861 = !DILocation(line: 246, column: 53, scope: !20852)
!20862 = !DILocation(line: 247, column: 10, scope: !20852)
!20863 = !DILocation(line: 247, column: 14, scope: !20852)
!20864 = !DILocation(line: 248, column: 5, scope: !20852)
!20865 = !DILocalVariable(name: "old_tz", scope: !20866, file: !2231, line: 251, type: !2183)
!20866 = distinct !DILexicalBlock(scope: !20852, file: !2231, line: 250, column: 5)
!20867 = !DILocation(line: 251, column: 18, scope: !20866)
!20868 = !DILocation(line: 251, column: 36, scope: !20866)
!20869 = !DILocation(line: 251, column: 27, scope: !20866)
!20870 = !DILocation(line: 252, column: 12, scope: !20871)
!20871 = distinct !DILexicalBlock(scope: !20866, file: !2231, line: 252, column: 11)
!20872 = !DILocation(line: 252, column: 11, scope: !20866)
!20873 = !DILocation(line: 253, column: 16, scope: !20871)
!20874 = !DILocation(line: 253, column: 9, scope: !20871)
!20875 = !DILocation(line: 254, column: 25, scope: !20876)
!20876 = distinct !DILexicalBlock(scope: !20866, file: !2231, line: 254, column: 11)
!20877 = !DILocation(line: 254, column: 13, scope: !20876)
!20878 = !DILocation(line: 254, column: 11, scope: !20866)
!20879 = !DILocalVariable(name: "saved_errno", scope: !20880, file: !2231, line: 256, type: !27)
!20880 = distinct !DILexicalBlock(scope: !20876, file: !2231, line: 255, column: 9)
!20881 = !DILocation(line: 256, column: 15, scope: !20880)
!20882 = !DILocation(line: 256, column: 29, scope: !20880)
!20883 = !DILocation(line: 257, column: 19, scope: !20880)
!20884 = !DILocation(line: 257, column: 11, scope: !20880)
!20885 = !DILocation(line: 258, column: 19, scope: !20880)
!20886 = !DILocation(line: 258, column: 11, scope: !20880)
!20887 = !DILocation(line: 258, column: 17, scope: !20880)
!20888 = !DILocation(line: 259, column: 11, scope: !20880)
!20889 = !DILocation(line: 261, column: 14, scope: !20866)
!20890 = !DILocation(line: 261, column: 7, scope: !20866)
!20891 = !DILocation(line: 263, column: 1, scope: !20845)
!20892 = distinct !DISubprogram(name: "save_abbr", scope: !2231, file: !2231, line: 119, type: !2220, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!20893 = !DILocalVariable(name: "tz", arg: 1, scope: !20892, file: !2231, line: 119, type: !2183)
!20894 = !DILocation(line: 119, column: 23, scope: !20892)
!20895 = !DILocalVariable(name: "tm", arg: 2, scope: !20892, file: !2231, line: 119, type: !2194)
!20896 = !DILocation(line: 119, column: 38, scope: !20892)
!20897 = !DILocalVariable(name: "zone", scope: !20892, file: !2231, line: 122, type: !146)
!20898 = !DILocation(line: 122, column: 15, scope: !20892)
!20899 = !DILocalVariable(name: "zone_copy", scope: !20892, file: !2231, line: 123, type: !143)
!20900 = !DILocation(line: 123, column: 9, scope: !20892)
!20901 = !DILocation(line: 130, column: 10, scope: !20892)
!20902 = !DILocation(line: 130, column: 14, scope: !20892)
!20903 = !DILocation(line: 130, column: 8, scope: !20892)
!20904 = !DILocation(line: 142, column: 8, scope: !20905)
!20905 = distinct !DILexicalBlock(scope: !20892, file: !2231, line: 142, column: 7)
!20906 = !DILocation(line: 142, column: 13, scope: !20905)
!20907 = !DILocation(line: 142, column: 26, scope: !20905)
!20908 = !DILocation(line: 142, column: 17, scope: !20905)
!20909 = !DILocation(line: 142, column: 32, scope: !20905)
!20910 = !DILocation(line: 142, column: 29, scope: !20905)
!20911 = !DILocation(line: 142, column: 37, scope: !20905)
!20912 = !DILocation(line: 142, column: 40, scope: !20905)
!20913 = !DILocation(line: 142, column: 57, scope: !20905)
!20914 = !DILocation(line: 142, column: 60, scope: !20905)
!20915 = !DILocation(line: 142, column: 47, scope: !20905)
!20916 = !DILocation(line: 142, column: 45, scope: !20905)
!20917 = !DILocation(line: 142, column: 7, scope: !20892)
!20918 = !DILocation(line: 143, column: 5, scope: !20905)
!20919 = !DILocation(line: 145, column: 8, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20892, file: !2231, line: 145, column: 7)
!20921 = !DILocation(line: 145, column: 7, scope: !20920)
!20922 = !DILocation(line: 145, column: 7, scope: !20892)
!20923 = !DILocation(line: 147, column: 19, scope: !20924)
!20924 = distinct !DILexicalBlock(scope: !20920, file: !2231, line: 146, column: 5)
!20925 = !DILocation(line: 147, column: 23, scope: !20924)
!20926 = !DILocation(line: 147, column: 17, scope: !20924)
!20927 = !DILocation(line: 149, column: 7, scope: !20924)
!20928 = !DILocation(line: 149, column: 22, scope: !20924)
!20929 = !DILocation(line: 149, column: 33, scope: !20924)
!20930 = !DILocation(line: 149, column: 14, scope: !20924)
!20931 = !DILocation(line: 149, column: 39, scope: !20924)
!20932 = !DILocation(line: 151, column: 19, scope: !20933)
!20933 = distinct !DILexicalBlock(scope: !20934, file: !2231, line: 151, column: 15)
!20934 = distinct !DILexicalBlock(scope: !20924, file: !2231, line: 150, column: 9)
!20935 = !DILocation(line: 151, column: 18, scope: !20933)
!20936 = !DILocation(line: 151, column: 29, scope: !20933)
!20937 = !DILocation(line: 151, column: 33, scope: !20933)
!20938 = !DILocation(line: 151, column: 46, scope: !20933)
!20939 = !DILocation(line: 151, column: 50, scope: !20933)
!20940 = !DILocation(line: 151, column: 43, scope: !20933)
!20941 = !DILocation(line: 151, column: 56, scope: !20933)
!20942 = !DILocation(line: 151, column: 59, scope: !20933)
!20943 = !DILocation(line: 151, column: 63, scope: !20933)
!20944 = !DILocation(line: 151, column: 15, scope: !20934)
!20945 = !DILocalVariable(name: "zone_size", scope: !20946, file: !2231, line: 153, type: !149)
!20946 = distinct !DILexicalBlock(scope: !20933, file: !2231, line: 152, column: 13)
!20947 = !DILocation(line: 153, column: 22, scope: !20946)
!20948 = !DILocation(line: 153, column: 42, scope: !20946)
!20949 = !DILocation(line: 153, column: 34, scope: !20946)
!20950 = !DILocation(line: 153, column: 48, scope: !20946)
!20951 = !DILocalVariable(name: "zone_used", scope: !20946, file: !2231, line: 154, type: !149)
!20952 = !DILocation(line: 154, column: 22, scope: !20946)
!20953 = !DILocation(line: 154, column: 34, scope: !20946)
!20954 = !DILocation(line: 154, column: 46, scope: !20946)
!20955 = !DILocation(line: 154, column: 50, scope: !20946)
!20956 = !DILocation(line: 154, column: 44, scope: !20946)
!20957 = !DILocation(line: 155, column: 30, scope: !20958)
!20958 = distinct !DILexicalBlock(scope: !20946, file: !2231, line: 155, column: 19)
!20959 = !DILocation(line: 155, column: 28, scope: !20958)
!20960 = !DILocation(line: 155, column: 42, scope: !20958)
!20961 = !DILocation(line: 155, column: 40, scope: !20958)
!20962 = !DILocation(line: 155, column: 19, scope: !20946)
!20963 = !DILocation(line: 157, column: 19, scope: !20964)
!20964 = distinct !DILexicalBlock(scope: !20958, file: !2231, line: 156, column: 17)
!20965 = !DILocation(line: 157, column: 25, scope: !20964)
!20966 = !DILocation(line: 158, column: 19, scope: !20964)
!20967 = !DILocation(line: 160, column: 19, scope: !20968)
!20968 = distinct !DILexicalBlock(scope: !20946, file: !2231, line: 160, column: 19)
!20969 = !DILocation(line: 160, column: 31, scope: !20968)
!20970 = !DILocation(line: 160, column: 29, scope: !20968)
!20971 = !DILocation(line: 160, column: 41, scope: !20968)
!20972 = !DILocation(line: 160, column: 19, scope: !20946)
!20973 = !DILocation(line: 161, column: 31, scope: !20968)
!20974 = !DILocation(line: 161, column: 42, scope: !20968)
!20975 = !DILocation(line: 161, column: 48, scope: !20968)
!20976 = !DILocation(line: 161, column: 17, scope: !20968)
!20977 = !DILocation(line: 164, column: 44, scope: !20978)
!20978 = distinct !DILexicalBlock(scope: !20968, file: !2231, line: 163, column: 17)
!20979 = !DILocation(line: 164, column: 35, scope: !20978)
!20980 = !DILocation(line: 164, column: 24, scope: !20978)
!20981 = !DILocation(line: 164, column: 28, scope: !20978)
!20982 = !DILocation(line: 164, column: 33, scope: !20978)
!20983 = !DILocation(line: 164, column: 22, scope: !20978)
!20984 = !DILocation(line: 165, column: 24, scope: !20985)
!20985 = distinct !DILexicalBlock(scope: !20978, file: !2231, line: 165, column: 23)
!20986 = !DILocation(line: 165, column: 23, scope: !20978)
!20987 = !DILocation(line: 166, column: 21, scope: !20985)
!20988 = !DILocation(line: 167, column: 19, scope: !20978)
!20989 = !DILocation(line: 167, column: 23, scope: !20978)
!20990 = !DILocation(line: 167, column: 33, scope: !20978)
!20991 = !DILocation(line: 168, column: 31, scope: !20978)
!20992 = !DILocation(line: 168, column: 35, scope: !20978)
!20993 = !DILocation(line: 168, column: 29, scope: !20978)
!20994 = !DILocation(line: 170, column: 15, scope: !20946)
!20995 = !DILocation(line: 173, column: 32, scope: !20934)
!20996 = !DILocation(line: 173, column: 24, scope: !20934)
!20997 = !DILocation(line: 173, column: 43, scope: !20934)
!20998 = !DILocation(line: 173, column: 21, scope: !20934)
!20999 = !DILocation(line: 174, column: 17, scope: !21000)
!21000 = distinct !DILexicalBlock(scope: !20934, file: !2231, line: 174, column: 15)
!21001 = !DILocation(line: 174, column: 16, scope: !21000)
!21002 = !DILocation(line: 174, column: 27, scope: !21000)
!21003 = !DILocation(line: 174, column: 30, scope: !21000)
!21004 = !DILocation(line: 174, column: 34, scope: !21000)
!21005 = !DILocation(line: 174, column: 15, scope: !20934)
!21006 = !DILocation(line: 176, column: 20, scope: !21007)
!21007 = distinct !DILexicalBlock(scope: !21000, file: !2231, line: 175, column: 13)
!21008 = !DILocation(line: 176, column: 24, scope: !21007)
!21009 = !DILocation(line: 176, column: 18, scope: !21007)
!21010 = !DILocation(line: 177, column: 27, scope: !21007)
!21011 = !DILocation(line: 177, column: 31, scope: !21007)
!21012 = !DILocation(line: 177, column: 25, scope: !21007)
!21013 = !DILocation(line: 178, column: 13, scope: !21007)
!21014 = distinct !{!21014, !20927, !21015}
!21015 = !DILocation(line: 179, column: 9, scope: !20924)
!21016 = !DILocation(line: 180, column: 5, scope: !20924)
!21017 = !DILocation(line: 184, column: 17, scope: !20892)
!21018 = !DILocation(line: 184, column: 3, scope: !20892)
!21019 = !DILocation(line: 184, column: 7, scope: !20892)
!21020 = !DILocation(line: 184, column: 15, scope: !20892)
!21021 = !DILocation(line: 191, column: 3, scope: !20892)
!21022 = !DILocation(line: 192, column: 1, scope: !20892)
!21023 = distinct !DISubprogram(name: "revert_tz", scope: !2231, file: !2231, line: 269, type: !2216, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21024 = !DILocalVariable(name: "tz", arg: 1, scope: !21023, file: !2231, line: 269, type: !2183)
!21025 = !DILocation(line: 269, column: 23, scope: !21023)
!21026 = !DILocation(line: 271, column: 7, scope: !21027)
!21027 = distinct !DILexicalBlock(scope: !21023, file: !2231, line: 271, column: 7)
!21028 = !DILocation(line: 271, column: 10, scope: !21027)
!21029 = !DILocation(line: 271, column: 7, scope: !21023)
!21030 = !DILocation(line: 272, column: 5, scope: !21027)
!21031 = !DILocalVariable(name: "saved_errno", scope: !21032, file: !2231, line: 275, type: !27)
!21032 = distinct !DILexicalBlock(scope: !21027, file: !2231, line: 274, column: 5)
!21033 = !DILocation(line: 275, column: 11, scope: !21032)
!21034 = !DILocation(line: 275, column: 25, scope: !21032)
!21035 = !DILocalVariable(name: "ok", scope: !21032, file: !2231, line: 276, type: !141)
!21036 = !DILocation(line: 276, column: 12, scope: !21032)
!21037 = !DILocation(line: 276, column: 29, scope: !21032)
!21038 = !DILocation(line: 276, column: 17, scope: !21032)
!21039 = !DILocation(line: 277, column: 12, scope: !21040)
!21040 = distinct !DILexicalBlock(scope: !21032, file: !2231, line: 277, column: 11)
!21041 = !DILocation(line: 277, column: 11, scope: !21032)
!21042 = !DILocation(line: 278, column: 23, scope: !21040)
!21043 = !DILocation(line: 278, column: 21, scope: !21040)
!21044 = !DILocation(line: 278, column: 9, scope: !21040)
!21045 = !DILocation(line: 279, column: 15, scope: !21032)
!21046 = !DILocation(line: 279, column: 7, scope: !21032)
!21047 = !DILocation(line: 280, column: 15, scope: !21032)
!21048 = !DILocation(line: 280, column: 7, scope: !21032)
!21049 = !DILocation(line: 280, column: 13, scope: !21032)
!21050 = !DILocation(line: 281, column: 14, scope: !21032)
!21051 = !DILocation(line: 281, column: 7, scope: !21032)
!21052 = !DILocation(line: 283, column: 1, scope: !21023)
!21053 = distinct !DISubprogram(name: "change_env", scope: !2231, file: !2231, line: 229, type: !2216, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21054 = !DILocalVariable(name: "tz", arg: 1, scope: !21053, file: !2231, line: 229, type: !2183)
!21055 = !DILocation(line: 229, column: 24, scope: !21053)
!21056 = !DILocation(line: 231, column: 18, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21053, file: !2231, line: 231, column: 7)
!21058 = !DILocation(line: 231, column: 22, scope: !21057)
!21059 = !DILocation(line: 231, column: 34, scope: !21057)
!21060 = !DILocation(line: 231, column: 38, scope: !21057)
!21061 = !DILocation(line: 231, column: 7, scope: !21057)
!21062 = !DILocation(line: 231, column: 52, scope: !21057)
!21063 = !DILocation(line: 231, column: 7, scope: !21053)
!21064 = !DILocation(line: 232, column: 5, scope: !21057)
!21065 = !DILocation(line: 233, column: 3, scope: !21053)
!21066 = !DILocation(line: 234, column: 3, scope: !21053)
!21067 = !DILocation(line: 235, column: 1, scope: !21053)
!21068 = distinct !DISubprogram(name: "setenv_TZ", scope: !2231, file: !2231, line: 220, type: !2218, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21069 = !DILocalVariable(name: "tz", arg: 1, scope: !21068, file: !2231, line: 220, type: !146)
!21070 = !DILocation(line: 220, column: 24, scope: !21068)
!21071 = !DILocation(line: 222, column: 10, scope: !21068)
!21072 = !DILocation(line: 222, column: 29, scope: !21068)
!21073 = !DILocation(line: 222, column: 15, scope: !21068)
!21074 = !DILocation(line: 222, column: 38, scope: !21068)
!21075 = !DILocation(line: 222, column: 3, scope: !21068)
!21076 = distinct !DISubprogram(name: "getenv_TZ", scope: !2231, file: !2231, line: 212, type: !2123, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21077 = !DILocation(line: 214, column: 10, scope: !21076)
!21078 = !DILocation(line: 214, column: 3, scope: !21076)
!21079 = distinct !DISubprogram(name: "mktime_z", scope: !2231, file: !2231, line: 321, type: !2210, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21080 = !DILocalVariable(name: "tz", arg: 1, scope: !21079, file: !2231, line: 321, type: !2183)
!21081 = !DILocation(line: 321, column: 22, scope: !21079)
!21082 = !DILocalVariable(name: "tm", arg: 2, scope: !21079, file: !2231, line: 321, type: !2194)
!21083 = !DILocation(line: 321, column: 37, scope: !21079)
!21084 = !DILocation(line: 323, column: 8, scope: !21085)
!21085 = distinct !DILexicalBlock(scope: !21079, file: !2231, line: 323, column: 7)
!21086 = !DILocation(line: 323, column: 7, scope: !21079)
!21087 = !DILocation(line: 324, column: 20, scope: !21085)
!21088 = !DILocation(line: 324, column: 12, scope: !21085)
!21089 = !DILocation(line: 324, column: 5, scope: !21085)
!21090 = !DILocalVariable(name: "old_tz", scope: !21091, file: !2231, line: 327, type: !2183)
!21091 = distinct !DILexicalBlock(scope: !21085, file: !2231, line: 326, column: 5)
!21092 = !DILocation(line: 327, column: 18, scope: !21091)
!21093 = !DILocation(line: 327, column: 35, scope: !21091)
!21094 = !DILocation(line: 327, column: 27, scope: !21091)
!21095 = !DILocation(line: 328, column: 11, scope: !21096)
!21096 = distinct !DILexicalBlock(scope: !21091, file: !2231, line: 328, column: 11)
!21097 = !DILocation(line: 328, column: 11, scope: !21091)
!21098 = !DILocalVariable(name: "t", scope: !21099, file: !2231, line: 330, type: !162)
!21099 = distinct !DILexicalBlock(scope: !21096, file: !2231, line: 329, column: 9)
!21100 = !DILocation(line: 330, column: 18, scope: !21099)
!21101 = !DILocation(line: 330, column: 30, scope: !21099)
!21102 = !DILocation(line: 330, column: 22, scope: !21099)
!21103 = !DILocalVariable(name: "badtime", scope: !21099, file: !2231, line: 332, type: !162)
!21104 = !DILocation(line: 332, column: 18, scope: !21099)
!21105 = !DILocalVariable(name: "tm_1", scope: !21099, file: !2231, line: 333, type: !2195)
!21106 = !DILocation(line: 333, column: 21, scope: !21099)
!21107 = !DILocation(line: 334, column: 16, scope: !21108)
!21108 = distinct !DILexicalBlock(scope: !21099, file: !2231, line: 334, column: 15)
!21109 = !DILocation(line: 334, column: 21, scope: !21108)
!21110 = !DILocation(line: 334, column: 18, scope: !21108)
!21111 = !DILocation(line: 335, column: 16, scope: !21108)
!21112 = !DILocation(line: 335, column: 20, scope: !21108)
!21113 = !DILocation(line: 335, column: 44, scope: !21108)
!21114 = !DILocation(line: 335, column: 57, scope: !21108)
!21115 = !DILocation(line: 335, column: 47, scope: !21108)
!21116 = !DILocation(line: 336, column: 15, scope: !21108)
!21117 = !DILocation(line: 336, column: 30, scope: !21108)
!21118 = !DILocation(line: 336, column: 34, scope: !21108)
!21119 = !DILocation(line: 336, column: 19, scope: !21108)
!21120 = !DILocation(line: 334, column: 15, scope: !21099)
!21121 = !DILocation(line: 337, column: 17, scope: !21108)
!21122 = !DILocation(line: 337, column: 15, scope: !21108)
!21123 = !DILocation(line: 337, column: 13, scope: !21108)
!21124 = !DILocation(line: 339, column: 26, scope: !21125)
!21125 = distinct !DILexicalBlock(scope: !21099, file: !2231, line: 339, column: 15)
!21126 = !DILocation(line: 339, column: 15, scope: !21125)
!21127 = !DILocation(line: 339, column: 15, scope: !21099)
!21128 = !DILocation(line: 340, column: 20, scope: !21125)
!21129 = !DILocation(line: 340, column: 13, scope: !21125)
!21130 = !DILocation(line: 341, column: 9, scope: !21099)
!21131 = !DILocation(line: 342, column: 7, scope: !21091)
!21132 = !DILocation(line: 344, column: 1, scope: !21079)
!21133 = distinct !DISubprogram(name: "equal_tm", scope: !2231, file: !2231, line: 69, type: !2222, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21134 = !DILocalVariable(name: "a", arg: 1, scope: !21133, file: !2231, line: 69, type: !2224)
!21135 = !DILocation(line: 69, column: 28, scope: !21133)
!21136 = !DILocalVariable(name: "b", arg: 2, scope: !21133, file: !2231, line: 69, type: !2224)
!21137 = !DILocation(line: 69, column: 48, scope: !21133)
!21138 = !DILocation(line: 71, column: 14, scope: !21133)
!21139 = !DILocation(line: 71, column: 17, scope: !21133)
!21140 = !DILocation(line: 71, column: 26, scope: !21133)
!21141 = !DILocation(line: 71, column: 29, scope: !21133)
!21142 = !DILocation(line: 71, column: 24, scope: !21133)
!21143 = !DILocation(line: 72, column: 16, scope: !21133)
!21144 = !DILocation(line: 72, column: 19, scope: !21133)
!21145 = !DILocation(line: 72, column: 28, scope: !21133)
!21146 = !DILocation(line: 72, column: 31, scope: !21133)
!21147 = !DILocation(line: 72, column: 26, scope: !21133)
!21148 = !DILocation(line: 72, column: 13, scope: !21133)
!21149 = !DILocation(line: 73, column: 16, scope: !21133)
!21150 = !DILocation(line: 73, column: 19, scope: !21133)
!21151 = !DILocation(line: 73, column: 29, scope: !21133)
!21152 = !DILocation(line: 73, column: 32, scope: !21133)
!21153 = !DILocation(line: 73, column: 27, scope: !21133)
!21154 = !DILocation(line: 73, column: 13, scope: !21133)
!21155 = !DILocation(line: 74, column: 16, scope: !21133)
!21156 = !DILocation(line: 74, column: 19, scope: !21133)
!21157 = !DILocation(line: 74, column: 29, scope: !21133)
!21158 = !DILocation(line: 74, column: 32, scope: !21133)
!21159 = !DILocation(line: 74, column: 27, scope: !21133)
!21160 = !DILocation(line: 74, column: 13, scope: !21133)
!21161 = !DILocation(line: 75, column: 16, scope: !21133)
!21162 = !DILocation(line: 75, column: 19, scope: !21133)
!21163 = !DILocation(line: 75, column: 28, scope: !21133)
!21164 = !DILocation(line: 75, column: 31, scope: !21133)
!21165 = !DILocation(line: 75, column: 26, scope: !21133)
!21166 = !DILocation(line: 75, column: 13, scope: !21133)
!21167 = !DILocation(line: 76, column: 16, scope: !21133)
!21168 = !DILocation(line: 76, column: 19, scope: !21133)
!21169 = !DILocation(line: 76, column: 29, scope: !21133)
!21170 = !DILocation(line: 76, column: 32, scope: !21133)
!21171 = !DILocation(line: 76, column: 27, scope: !21133)
!21172 = !DILocation(line: 76, column: 13, scope: !21133)
!21173 = !DILocation(line: 77, column: 29, scope: !21133)
!21174 = !DILocation(line: 77, column: 32, scope: !21133)
!21175 = !DILocation(line: 77, column: 42, scope: !21133)
!21176 = !DILocation(line: 77, column: 45, scope: !21133)
!21177 = !DILocation(line: 77, column: 15, scope: !21133)
!21178 = !DILocation(line: 77, column: 13, scope: !21133)
!21179 = !DILocation(line: 71, column: 10, scope: !21133)
!21180 = !DILocation(line: 71, column: 3, scope: !21133)
!21181 = distinct !DISubprogram(name: "isdst_differ", scope: !2231, file: !2231, line: 62, type: !2226, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2178, retainedNodes: !152)
!21182 = !DILocalVariable(name: "a", arg: 1, scope: !21181, file: !2231, line: 62, type: !27)
!21183 = !DILocation(line: 62, column: 19, scope: !21181)
!21184 = !DILocalVariable(name: "b", arg: 2, scope: !21181, file: !2231, line: 62, type: !27)
!21185 = !DILocation(line: 62, column: 26, scope: !21181)
!21186 = !DILocation(line: 64, column: 11, scope: !21181)
!21187 = !DILocation(line: 64, column: 10, scope: !21181)
!21188 = !DILocation(line: 64, column: 17, scope: !21181)
!21189 = !DILocation(line: 64, column: 16, scope: !21181)
!21190 = !DILocation(line: 64, column: 13, scope: !21181)
!21191 = !DILocation(line: 64, column: 19, scope: !21181)
!21192 = !DILocation(line: 64, column: 27, scope: !21181)
!21193 = !DILocation(line: 64, column: 24, scope: !21181)
!21194 = !DILocation(line: 64, column: 29, scope: !21181)
!21195 = !DILocation(line: 64, column: 37, scope: !21181)
!21196 = !DILocation(line: 64, column: 34, scope: !21181)
!21197 = !DILocation(line: 0, scope: !21181)
!21198 = !DILocation(line: 64, column: 3, scope: !21181)
!21199 = distinct !DISubprogram(name: "acl_errno_valid", scope: !21200, file: !21200, line: 30, type: !680, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2233, retainedNodes: !152)
!21200 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21201 = !DILocalVariable(name: "errnum", arg: 1, scope: !21199, file: !21200, line: 30, type: !27)
!21202 = !DILocation(line: 30, column: 22, scope: !21199)
!21203 = !DILocation(line: 34, column: 11, scope: !21199)
!21204 = !DILocation(line: 34, column: 3, scope: !21199)
!21205 = !DILocation(line: 36, column: 17, scope: !21206)
!21206 = distinct !DILexicalBlock(scope: !21199, file: !21200, line: 35, column: 5)
!21207 = !DILocation(line: 37, column: 18, scope: !21206)
!21208 = !DILocation(line: 41, column: 18, scope: !21206)
!21209 = !DILocation(line: 49, column: 22, scope: !21206)
!21210 = !DILocation(line: 50, column: 14, scope: !21206)
!21211 = !DILocation(line: 52, column: 1, scope: !21199)
!21212 = distinct !DISubprogram(name: "rotl64", scope: !21213, file: !21213, line: 39, type: !2239, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21213 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21214 = !DILocalVariable(name: "x", arg: 1, scope: !21212, file: !21213, line: 39, type: !2241)
!21215 = !DILocation(line: 39, column: 18, scope: !21212)
!21216 = !DILocalVariable(name: "n", arg: 2, scope: !21212, file: !21213, line: 39, type: !27)
!21217 = !DILocation(line: 39, column: 25, scope: !21212)
!21218 = !DILocation(line: 41, column: 12, scope: !21212)
!21219 = !DILocation(line: 41, column: 17, scope: !21212)
!21220 = !DILocation(line: 41, column: 14, scope: !21212)
!21221 = !DILocation(line: 41, column: 23, scope: !21212)
!21222 = !DILocation(line: 41, column: 34, scope: !21212)
!21223 = !DILocation(line: 41, column: 32, scope: !21212)
!21224 = !DILocation(line: 41, column: 25, scope: !21212)
!21225 = !DILocation(line: 41, column: 20, scope: !21212)
!21226 = !DILocation(line: 41, column: 3, scope: !21212)
!21227 = distinct !DISubprogram(name: "rotr64", scope: !21213, file: !21213, line: 48, type: !2239, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21228 = !DILocalVariable(name: "x", arg: 1, scope: !21227, file: !21213, line: 48, type: !2241)
!21229 = !DILocation(line: 48, column: 18, scope: !21227)
!21230 = !DILocalVariable(name: "n", arg: 2, scope: !21227, file: !21213, line: 48, type: !27)
!21231 = !DILocation(line: 48, column: 25, scope: !21227)
!21232 = !DILocation(line: 50, column: 12, scope: !21227)
!21233 = !DILocation(line: 50, column: 17, scope: !21227)
!21234 = !DILocation(line: 50, column: 14, scope: !21227)
!21235 = !DILocation(line: 50, column: 23, scope: !21227)
!21236 = !DILocation(line: 50, column: 34, scope: !21227)
!21237 = !DILocation(line: 50, column: 32, scope: !21227)
!21238 = !DILocation(line: 50, column: 25, scope: !21227)
!21239 = !DILocation(line: 50, column: 20, scope: !21227)
!21240 = !DILocation(line: 50, column: 3, scope: !21227)
!21241 = distinct !DISubprogram(name: "rotl32", scope: !21213, file: !21213, line: 58, type: !2244, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21242 = !DILocalVariable(name: "x", arg: 1, scope: !21241, file: !21213, line: 58, type: !2246)
!21243 = !DILocation(line: 58, column: 18, scope: !21241)
!21244 = !DILocalVariable(name: "n", arg: 2, scope: !21241, file: !21213, line: 58, type: !27)
!21245 = !DILocation(line: 58, column: 25, scope: !21241)
!21246 = !DILocation(line: 60, column: 12, scope: !21241)
!21247 = !DILocation(line: 60, column: 17, scope: !21241)
!21248 = !DILocation(line: 60, column: 14, scope: !21241)
!21249 = !DILocation(line: 60, column: 23, scope: !21241)
!21250 = !DILocation(line: 60, column: 34, scope: !21241)
!21251 = !DILocation(line: 60, column: 32, scope: !21241)
!21252 = !DILocation(line: 60, column: 25, scope: !21241)
!21253 = !DILocation(line: 60, column: 20, scope: !21241)
!21254 = !DILocation(line: 60, column: 3, scope: !21241)
!21255 = distinct !DISubprogram(name: "rotr32", scope: !21213, file: !21213, line: 67, type: !2244, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21256 = !DILocalVariable(name: "x", arg: 1, scope: !21255, file: !21213, line: 67, type: !2246)
!21257 = !DILocation(line: 67, column: 18, scope: !21255)
!21258 = !DILocalVariable(name: "n", arg: 2, scope: !21255, file: !21213, line: 67, type: !27)
!21259 = !DILocation(line: 67, column: 25, scope: !21255)
!21260 = !DILocation(line: 69, column: 12, scope: !21255)
!21261 = !DILocation(line: 69, column: 17, scope: !21255)
!21262 = !DILocation(line: 69, column: 14, scope: !21255)
!21263 = !DILocation(line: 69, column: 23, scope: !21255)
!21264 = !DILocation(line: 69, column: 34, scope: !21255)
!21265 = !DILocation(line: 69, column: 32, scope: !21255)
!21266 = !DILocation(line: 69, column: 25, scope: !21255)
!21267 = !DILocation(line: 69, column: 20, scope: !21255)
!21268 = !DILocation(line: 69, column: 3, scope: !21255)
!21269 = distinct !DISubprogram(name: "rotl_sz", scope: !21213, file: !21213, line: 76, type: !2247, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21270 = !DILocalVariable(name: "x", arg: 1, scope: !21269, file: !21213, line: 76, type: !149)
!21271 = !DILocation(line: 76, column: 17, scope: !21269)
!21272 = !DILocalVariable(name: "n", arg: 2, scope: !21269, file: !21213, line: 76, type: !27)
!21273 = !DILocation(line: 76, column: 24, scope: !21269)
!21274 = !DILocation(line: 78, column: 12, scope: !21269)
!21275 = !DILocation(line: 78, column: 17, scope: !21269)
!21276 = !DILocation(line: 78, column: 14, scope: !21269)
!21277 = !DILocation(line: 78, column: 23, scope: !21269)
!21278 = !DILocation(line: 78, column: 53, scope: !21269)
!21279 = !DILocation(line: 78, column: 51, scope: !21269)
!21280 = !DILocation(line: 78, column: 25, scope: !21269)
!21281 = !DILocation(line: 78, column: 20, scope: !21269)
!21282 = !DILocation(line: 78, column: 3, scope: !21269)
!21283 = distinct !DISubprogram(name: "rotr_sz", scope: !21213, file: !21213, line: 85, type: !2247, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21284 = !DILocalVariable(name: "x", arg: 1, scope: !21283, file: !21213, line: 85, type: !149)
!21285 = !DILocation(line: 85, column: 17, scope: !21283)
!21286 = !DILocalVariable(name: "n", arg: 2, scope: !21283, file: !21213, line: 85, type: !27)
!21287 = !DILocation(line: 85, column: 24, scope: !21283)
!21288 = !DILocation(line: 87, column: 12, scope: !21283)
!21289 = !DILocation(line: 87, column: 17, scope: !21283)
!21290 = !DILocation(line: 87, column: 14, scope: !21283)
!21291 = !DILocation(line: 87, column: 23, scope: !21283)
!21292 = !DILocation(line: 87, column: 53, scope: !21283)
!21293 = !DILocation(line: 87, column: 51, scope: !21283)
!21294 = !DILocation(line: 87, column: 25, scope: !21283)
!21295 = !DILocation(line: 87, column: 20, scope: !21283)
!21296 = !DILocation(line: 87, column: 3, scope: !21283)
!21297 = distinct !DISubprogram(name: "rotl16", scope: !21213, file: !21213, line: 96, type: !2249, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21298 = !DILocalVariable(name: "x", arg: 1, scope: !21297, file: !21213, line: 96, type: !2251)
!21299 = !DILocation(line: 96, column: 18, scope: !21297)
!21300 = !DILocalVariable(name: "n", arg: 2, scope: !21297, file: !21213, line: 96, type: !27)
!21301 = !DILocation(line: 96, column: 25, scope: !21297)
!21302 = !DILocation(line: 98, column: 12, scope: !21297)
!21303 = !DILocation(line: 98, column: 17, scope: !21297)
!21304 = !DILocation(line: 98, column: 14, scope: !21297)
!21305 = !DILocation(line: 98, column: 23, scope: !21297)
!21306 = !DILocation(line: 98, column: 34, scope: !21297)
!21307 = !DILocation(line: 98, column: 32, scope: !21297)
!21308 = !DILocation(line: 98, column: 25, scope: !21297)
!21309 = !DILocation(line: 98, column: 20, scope: !21297)
!21310 = !DILocation(line: 98, column: 39, scope: !21297)
!21311 = !DILocation(line: 98, column: 10, scope: !21297)
!21312 = !DILocation(line: 98, column: 3, scope: !21297)
!21313 = distinct !DISubprogram(name: "rotr16", scope: !21213, file: !21213, line: 107, type: !2249, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21314 = !DILocalVariable(name: "x", arg: 1, scope: !21313, file: !21213, line: 107, type: !2251)
!21315 = !DILocation(line: 107, column: 18, scope: !21313)
!21316 = !DILocalVariable(name: "n", arg: 2, scope: !21313, file: !21213, line: 107, type: !27)
!21317 = !DILocation(line: 107, column: 25, scope: !21313)
!21318 = !DILocation(line: 109, column: 12, scope: !21313)
!21319 = !DILocation(line: 109, column: 17, scope: !21313)
!21320 = !DILocation(line: 109, column: 14, scope: !21313)
!21321 = !DILocation(line: 109, column: 23, scope: !21313)
!21322 = !DILocation(line: 109, column: 34, scope: !21313)
!21323 = !DILocation(line: 109, column: 32, scope: !21313)
!21324 = !DILocation(line: 109, column: 25, scope: !21313)
!21325 = !DILocation(line: 109, column: 20, scope: !21313)
!21326 = !DILocation(line: 109, column: 39, scope: !21313)
!21327 = !DILocation(line: 109, column: 10, scope: !21313)
!21328 = !DILocation(line: 109, column: 3, scope: !21313)
!21329 = distinct !DISubprogram(name: "rotl8", scope: !21213, file: !21213, line: 118, type: !2253, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21330 = !DILocalVariable(name: "x", arg: 1, scope: !21329, file: !21213, line: 118, type: !2255)
!21331 = !DILocation(line: 118, column: 16, scope: !21329)
!21332 = !DILocalVariable(name: "n", arg: 2, scope: !21329, file: !21213, line: 118, type: !27)
!21333 = !DILocation(line: 118, column: 23, scope: !21329)
!21334 = !DILocation(line: 120, column: 12, scope: !21329)
!21335 = !DILocation(line: 120, column: 17, scope: !21329)
!21336 = !DILocation(line: 120, column: 14, scope: !21329)
!21337 = !DILocation(line: 120, column: 23, scope: !21329)
!21338 = !DILocation(line: 120, column: 33, scope: !21329)
!21339 = !DILocation(line: 120, column: 31, scope: !21329)
!21340 = !DILocation(line: 120, column: 25, scope: !21329)
!21341 = !DILocation(line: 120, column: 20, scope: !21329)
!21342 = !DILocation(line: 120, column: 38, scope: !21329)
!21343 = !DILocation(line: 120, column: 10, scope: !21329)
!21344 = !DILocation(line: 120, column: 3, scope: !21329)
!21345 = distinct !DISubprogram(name: "rotr8", scope: !21213, file: !21213, line: 129, type: !2253, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2236, retainedNodes: !152)
!21346 = !DILocalVariable(name: "x", arg: 1, scope: !21345, file: !21213, line: 129, type: !2255)
!21347 = !DILocation(line: 129, column: 16, scope: !21345)
!21348 = !DILocalVariable(name: "n", arg: 2, scope: !21345, file: !21213, line: 129, type: !27)
!21349 = !DILocation(line: 129, column: 23, scope: !21345)
!21350 = !DILocation(line: 131, column: 12, scope: !21345)
!21351 = !DILocation(line: 131, column: 17, scope: !21345)
!21352 = !DILocation(line: 131, column: 14, scope: !21345)
!21353 = !DILocation(line: 131, column: 23, scope: !21345)
!21354 = !DILocation(line: 131, column: 33, scope: !21345)
!21355 = !DILocation(line: 131, column: 31, scope: !21345)
!21356 = !DILocation(line: 131, column: 25, scope: !21345)
!21357 = !DILocation(line: 131, column: 20, scope: !21345)
!21358 = !DILocation(line: 131, column: 38, scope: !21345)
!21359 = !DILocation(line: 131, column: 10, scope: !21345)
!21360 = !DILocation(line: 131, column: 3, scope: !21345)
!21361 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21362, file: !21362, line: 27, type: !731, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2257, retainedNodes: !152)
!21362 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21363 = !DILocalVariable(name: "s1", arg: 1, scope: !21361, file: !21362, line: 27, type: !146)
!21364 = !DILocation(line: 27, column: 27, scope: !21361)
!21365 = !DILocalVariable(name: "s2", arg: 2, scope: !21361, file: !21362, line: 27, type: !146)
!21366 = !DILocation(line: 27, column: 43, scope: !21361)
!21367 = !DILocalVariable(name: "p1", scope: !21361, file: !21362, line: 29, type: !1660)
!21368 = !DILocation(line: 29, column: 33, scope: !21361)
!21369 = !DILocation(line: 29, column: 62, scope: !21361)
!21370 = !DILocalVariable(name: "p2", scope: !21361, file: !21362, line: 30, type: !1660)
!21371 = !DILocation(line: 30, column: 33, scope: !21361)
!21372 = !DILocation(line: 30, column: 62, scope: !21361)
!21373 = !DILocalVariable(name: "c1", scope: !21361, file: !21362, line: 31, type: !591)
!21374 = !DILocation(line: 31, column: 17, scope: !21361)
!21375 = !DILocalVariable(name: "c2", scope: !21361, file: !21362, line: 31, type: !591)
!21376 = !DILocation(line: 31, column: 21, scope: !21361)
!21377 = !DILocation(line: 33, column: 7, scope: !21378)
!21378 = distinct !DILexicalBlock(scope: !21361, file: !21362, line: 33, column: 7)
!21379 = !DILocation(line: 33, column: 13, scope: !21378)
!21380 = !DILocation(line: 33, column: 10, scope: !21378)
!21381 = !DILocation(line: 33, column: 7, scope: !21361)
!21382 = !DILocation(line: 34, column: 5, scope: !21378)
!21383 = !DILocation(line: 36, column: 3, scope: !21361)
!21384 = !DILocation(line: 38, column: 24, scope: !21385)
!21385 = distinct !DILexicalBlock(scope: !21361, file: !21362, line: 37, column: 5)
!21386 = !DILocation(line: 38, column: 23, scope: !21385)
!21387 = !DILocation(line: 38, column: 12, scope: !21385)
!21388 = !DILocation(line: 38, column: 10, scope: !21385)
!21389 = !DILocation(line: 39, column: 24, scope: !21385)
!21390 = !DILocation(line: 39, column: 23, scope: !21385)
!21391 = !DILocation(line: 39, column: 12, scope: !21385)
!21392 = !DILocation(line: 39, column: 10, scope: !21385)
!21393 = !DILocation(line: 41, column: 11, scope: !21394)
!21394 = distinct !DILexicalBlock(scope: !21385, file: !21362, line: 41, column: 11)
!21395 = !DILocation(line: 41, column: 14, scope: !21394)
!21396 = !DILocation(line: 41, column: 11, scope: !21385)
!21397 = !DILocation(line: 42, column: 9, scope: !21394)
!21398 = !DILocation(line: 44, column: 7, scope: !21385)
!21399 = !DILocation(line: 45, column: 7, scope: !21385)
!21400 = !DILocation(line: 46, column: 5, scope: !21385)
!21401 = !DILocation(line: 47, column: 10, scope: !21361)
!21402 = !DILocation(line: 47, column: 16, scope: !21361)
!21403 = !DILocation(line: 47, column: 13, scope: !21361)
!21404 = distinct !{!21404, !21383, !21405}
!21405 = !DILocation(line: 47, column: 18, scope: !21361)
!21406 = !DILocation(line: 50, column: 12, scope: !21407)
!21407 = distinct !DILexicalBlock(scope: !21361, file: !21362, line: 49, column: 7)
!21408 = !DILocation(line: 50, column: 17, scope: !21407)
!21409 = !DILocation(line: 50, column: 15, scope: !21407)
!21410 = !DILocation(line: 50, column: 5, scope: !21407)
!21411 = !DILocation(line: 56, column: 1, scope: !21361)
!21412 = distinct !DISubprogram(name: "close_stream", scope: !21413, file: !21413, line: 56, type: !2263, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2260, retainedNodes: !152)
!21413 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21414 = !DILocalVariable(name: "stream", arg: 1, scope: !21412, file: !21413, line: 56, type: !2265)
!21415 = !DILocation(line: 56, column: 21, scope: !21412)
!21416 = !DILocalVariable(name: "some_pending", scope: !21412, file: !21413, line: 58, type: !2299)
!21417 = !DILocation(line: 58, column: 14, scope: !21412)
!21418 = !DILocation(line: 58, column: 42, scope: !21412)
!21419 = !DILocation(line: 58, column: 30, scope: !21412)
!21420 = !DILocation(line: 58, column: 50, scope: !21412)
!21421 = !DILocalVariable(name: "prev_fail", scope: !21412, file: !21413, line: 59, type: !2299)
!21422 = !DILocation(line: 59, column: 14, scope: !21412)
!21423 = !DILocation(line: 59, column: 27, scope: !21412)
!21424 = !DILocation(line: 59, column: 43, scope: !21412)
!21425 = !DILocalVariable(name: "fclose_fail", scope: !21412, file: !21413, line: 60, type: !2299)
!21426 = !DILocation(line: 60, column: 14, scope: !21412)
!21427 = !DILocation(line: 60, column: 37, scope: !21412)
!21428 = !DILocation(line: 60, column: 29, scope: !21412)
!21429 = !DILocation(line: 60, column: 45, scope: !21412)
!21430 = !DILocation(line: 70, column: 7, scope: !21431)
!21431 = distinct !DILexicalBlock(scope: !21412, file: !21413, line: 70, column: 7)
!21432 = !DILocation(line: 70, column: 17, scope: !21431)
!21433 = !DILocation(line: 70, column: 21, scope: !21431)
!21434 = !DILocation(line: 70, column: 33, scope: !21431)
!21435 = !DILocation(line: 70, column: 37, scope: !21431)
!21436 = !DILocation(line: 70, column: 50, scope: !21431)
!21437 = !DILocation(line: 70, column: 53, scope: !21431)
!21438 = !DILocation(line: 70, column: 59, scope: !21431)
!21439 = !DILocation(line: 70, column: 7, scope: !21412)
!21440 = !DILocation(line: 72, column: 13, scope: !21441)
!21441 = distinct !DILexicalBlock(scope: !21442, file: !21413, line: 72, column: 11)
!21442 = distinct !DILexicalBlock(scope: !21431, file: !21413, line: 71, column: 5)
!21443 = !DILocation(line: 72, column: 11, scope: !21442)
!21444 = !DILocation(line: 73, column: 9, scope: !21441)
!21445 = !DILocation(line: 73, column: 15, scope: !21441)
!21446 = !DILocation(line: 74, column: 7, scope: !21442)
!21447 = !DILocation(line: 77, column: 3, scope: !21412)
!21448 = !DILocation(line: 78, column: 1, scope: !21412)
!21449 = distinct !DISubprogram(name: "dir_name", scope: !21450, file: !21450, line: 32, type: !572, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2300, retainedNodes: !152)
!21450 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21451 = !DILocalVariable(name: "file", arg: 1, scope: !21449, file: !21450, line: 32, type: !146)
!21452 = !DILocation(line: 32, column: 23, scope: !21449)
!21453 = !DILocalVariable(name: "result", scope: !21449, file: !21450, line: 34, type: !143)
!21454 = !DILocation(line: 34, column: 9, scope: !21449)
!21455 = !DILocation(line: 34, column: 29, scope: !21449)
!21456 = !DILocation(line: 34, column: 18, scope: !21449)
!21457 = !DILocation(line: 35, column: 8, scope: !21458)
!21458 = distinct !DILexicalBlock(scope: !21449, file: !21450, line: 35, column: 7)
!21459 = !DILocation(line: 35, column: 7, scope: !21449)
!21460 = !DILocation(line: 36, column: 5, scope: !21458)
!21461 = !DILocation(line: 37, column: 10, scope: !21449)
!21462 = !DILocation(line: 37, column: 3, scope: !21449)
!21463 = distinct !DISubprogram(name: "hash_pjw", scope: !21464, file: !21464, line: 31, type: !333, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2303, retainedNodes: !152)
!21464 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21465 = !DILocalVariable(name: "x", arg: 1, scope: !21463, file: !21464, line: 31, type: !181)
!21466 = !DILocation(line: 31, column: 23, scope: !21463)
!21467 = !DILocalVariable(name: "tablesize", arg: 2, scope: !21463, file: !21464, line: 31, type: !149)
!21468 = !DILocation(line: 31, column: 33, scope: !21463)
!21469 = !DILocalVariable(name: "s", scope: !21463, file: !21464, line: 33, type: !146)
!21470 = !DILocation(line: 33, column: 15, scope: !21463)
!21471 = !DILocalVariable(name: "h", scope: !21463, file: !21464, line: 34, type: !149)
!21472 = !DILocation(line: 34, column: 10, scope: !21463)
!21473 = !DILocation(line: 36, column: 12, scope: !21474)
!21474 = distinct !DILexicalBlock(scope: !21463, file: !21464, line: 36, column: 3)
!21475 = !DILocation(line: 36, column: 10, scope: !21474)
!21476 = !DILocation(line: 36, column: 8, scope: !21474)
!21477 = !DILocation(line: 36, column: 16, scope: !21478)
!21478 = distinct !DILexicalBlock(scope: !21474, file: !21464, line: 36, column: 3)
!21479 = !DILocation(line: 36, column: 15, scope: !21478)
!21480 = !DILocation(line: 36, column: 3, scope: !21474)
!21481 = !DILocation(line: 37, column: 10, scope: !21478)
!21482 = !DILocation(line: 37, column: 9, scope: !21478)
!21483 = !DILocation(line: 37, column: 16, scope: !21478)
!21484 = !DILocation(line: 37, column: 18, scope: !21478)
!21485 = !DILocation(line: 37, column: 27, scope: !21478)
!21486 = !DILocation(line: 37, column: 29, scope: !21478)
!21487 = !DILocation(line: 37, column: 24, scope: !21478)
!21488 = !DILocation(line: 37, column: 12, scope: !21478)
!21489 = !DILocation(line: 37, column: 7, scope: !21478)
!21490 = !DILocation(line: 37, column: 5, scope: !21478)
!21491 = !DILocation(line: 36, column: 20, scope: !21478)
!21492 = !DILocation(line: 36, column: 3, scope: !21478)
!21493 = distinct !{!21493, !21480, !21494}
!21494 = !DILocation(line: 37, column: 48, scope: !21474)
!21495 = !DILocation(line: 39, column: 10, scope: !21463)
!21496 = !DILocation(line: 39, column: 14, scope: !21463)
!21497 = !DILocation(line: 39, column: 12, scope: !21463)
!21498 = !DILocation(line: 39, column: 3, scope: !21463)
!21499 = distinct !DISubprogram(name: "locale_charset", scope: !21500, file: !21500, line: 687, type: !2309, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2306, retainedNodes: !152)
!21500 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21501 = !DILocalVariable(name: "codeset", scope: !21499, file: !21500, line: 689, type: !146)
!21502 = !DILocation(line: 689, column: 15, scope: !21499)
!21503 = !DILocation(line: 696, column: 13, scope: !21499)
!21504 = !DILocation(line: 696, column: 11, scope: !21499)
!21505 = !DILocation(line: 754, column: 7, scope: !21506)
!21506 = distinct !DILexicalBlock(scope: !21499, file: !21500, line: 754, column: 7)
!21507 = !DILocation(line: 754, column: 15, scope: !21506)
!21508 = !DILocation(line: 754, column: 7, scope: !21499)
!21509 = !DILocation(line: 756, column: 13, scope: !21506)
!21510 = !DILocation(line: 756, column: 5, scope: !21506)
!21511 = !DILocation(line: 907, column: 13, scope: !21512)
!21512 = distinct !DILexicalBlock(scope: !21513, file: !21500, line: 907, column: 13)
!21513 = distinct !DILexicalBlock(scope: !21514, file: !21500, line: 897, column: 7)
!21514 = distinct !DILexicalBlock(scope: !21499, file: !21500, line: 856, column: 3)
!21515 = !DILocation(line: 907, column: 24, scope: !21512)
!21516 = !DILocation(line: 907, column: 13, scope: !21513)
!21517 = !DILocation(line: 908, column: 19, scope: !21512)
!21518 = !DILocation(line: 908, column: 11, scope: !21512)
!21519 = !DILocation(line: 995, column: 10, scope: !21499)
!21520 = !DILocation(line: 995, column: 3, scope: !21499)
!21521 = distinct !DISubprogram(name: "rpl_fclose", scope: !21522, file: !21522, line: 58, type: !2313, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2310, retainedNodes: !152)
!21522 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21523 = !DILocalVariable(name: "fp", arg: 1, scope: !21521, file: !21522, line: 58, type: !2315)
!21524 = !DILocation(line: 58, column: 19, scope: !21521)
!21525 = !DILocalVariable(name: "saved_errno", scope: !21521, file: !21522, line: 60, type: !27)
!21526 = !DILocation(line: 60, column: 7, scope: !21521)
!21527 = !DILocalVariable(name: "fd", scope: !21521, file: !21522, line: 61, type: !27)
!21528 = !DILocation(line: 61, column: 7, scope: !21521)
!21529 = !DILocalVariable(name: "result", scope: !21521, file: !21522, line: 62, type: !27)
!21530 = !DILocation(line: 62, column: 7, scope: !21521)
!21531 = !DILocation(line: 65, column: 16, scope: !21521)
!21532 = !DILocation(line: 65, column: 8, scope: !21521)
!21533 = !DILocation(line: 65, column: 6, scope: !21521)
!21534 = !DILocation(line: 66, column: 7, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21521, file: !21522, line: 66, column: 7)
!21536 = !DILocation(line: 66, column: 10, scope: !21535)
!21537 = !DILocation(line: 66, column: 7, scope: !21521)
!21538 = !DILocation(line: 67, column: 28, scope: !21535)
!21539 = !DILocation(line: 67, column: 12, scope: !21535)
!21540 = !DILocation(line: 67, column: 5, scope: !21535)
!21541 = !DILocation(line: 72, column: 9, scope: !21542)
!21542 = distinct !DILexicalBlock(scope: !21521, file: !21522, line: 72, column: 7)
!21543 = !DILocation(line: 72, column: 23, scope: !21542)
!21544 = !DILocation(line: 72, column: 41, scope: !21542)
!21545 = !DILocation(line: 72, column: 33, scope: !21542)
!21546 = !DILocation(line: 72, column: 26, scope: !21542)
!21547 = !DILocation(line: 72, column: 59, scope: !21542)
!21548 = !DILocation(line: 73, column: 7, scope: !21542)
!21549 = !DILocation(line: 73, column: 18, scope: !21542)
!21550 = !DILocation(line: 73, column: 10, scope: !21542)
!21551 = !DILocation(line: 72, column: 7, scope: !21521)
!21552 = !DILocation(line: 74, column: 19, scope: !21542)
!21553 = !DILocation(line: 74, column: 17, scope: !21542)
!21554 = !DILocation(line: 74, column: 5, scope: !21542)
!21555 = !DILocation(line: 100, column: 28, scope: !21521)
!21556 = !DILocation(line: 100, column: 12, scope: !21521)
!21557 = !DILocation(line: 100, column: 10, scope: !21521)
!21558 = !DILocation(line: 105, column: 7, scope: !21559)
!21559 = distinct !DILexicalBlock(scope: !21521, file: !21522, line: 105, column: 7)
!21560 = !DILocation(line: 105, column: 19, scope: !21559)
!21561 = !DILocation(line: 105, column: 7, scope: !21521)
!21562 = !DILocation(line: 107, column: 15, scope: !21563)
!21563 = distinct !DILexicalBlock(scope: !21559, file: !21522, line: 106, column: 5)
!21564 = !DILocation(line: 107, column: 7, scope: !21563)
!21565 = !DILocation(line: 107, column: 13, scope: !21563)
!21566 = !DILocation(line: 108, column: 14, scope: !21563)
!21567 = !DILocation(line: 109, column: 5, scope: !21563)
!21568 = !DILocation(line: 111, column: 10, scope: !21521)
!21569 = !DILocation(line: 111, column: 3, scope: !21521)
!21570 = !DILocation(line: 112, column: 1, scope: !21521)
!21571 = distinct !DISubprogram(name: "rpl_fflush", scope: !21572, file: !21572, line: 129, type: !2352, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2349, retainedNodes: !152)
!21572 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21573 = !DILocalVariable(name: "stream", arg: 1, scope: !21571, file: !21572, line: 129, type: !2354)
!21574 = !DILocation(line: 129, column: 19, scope: !21571)
!21575 = !DILocation(line: 150, column: 7, scope: !21576)
!21576 = distinct !DILexicalBlock(scope: !21571, file: !21572, line: 150, column: 7)
!21577 = !DILocation(line: 150, column: 14, scope: !21576)
!21578 = !DILocation(line: 150, column: 22, scope: !21576)
!21579 = !DILocation(line: 150, column: 27, scope: !21576)
!21580 = !DILocation(line: 150, column: 7, scope: !21571)
!21581 = !DILocation(line: 151, column: 20, scope: !21576)
!21582 = !DILocation(line: 151, column: 12, scope: !21576)
!21583 = !DILocation(line: 151, column: 5, scope: !21576)
!21584 = !DILocation(line: 156, column: 44, scope: !21571)
!21585 = !DILocation(line: 156, column: 3, scope: !21571)
!21586 = !DILocation(line: 158, column: 18, scope: !21571)
!21587 = !DILocation(line: 158, column: 10, scope: !21571)
!21588 = !DILocation(line: 158, column: 3, scope: !21571)
!21589 = !DILocation(line: 232, column: 1, scope: !21571)
!21590 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !21572, file: !21572, line: 41, type: !2388, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2349, retainedNodes: !152)
!21591 = !DILocalVariable(name: "fp", arg: 1, scope: !21590, file: !21572, line: 41, type: !2354)
!21592 = !DILocation(line: 41, column: 48, scope: !21590)
!21593 = !DILocation(line: 43, column: 7, scope: !21594)
!21594 = distinct !DILexicalBlock(scope: !21590, file: !21572, line: 43, column: 7)
!21595 = !DILocation(line: 43, column: 11, scope: !21594)
!21596 = !{!21597, !2437, i64 0}
!21597 = !{!"_IO_FILE", !2437, i64 0, !2443, i64 8, !2443, i64 16, !2443, i64 24, !2443, i64 32, !2443, i64 40, !2443, i64 48, !2443, i64 56, !2443, i64 64, !2443, i64 72, !2443, i64 80, !2443, i64 88, !2443, i64 96, !2443, i64 104, !2437, i64 112, !2437, i64 116, !2467, i64 120, !2863, i64 128, !2438, i64 130, !2438, i64 131, !2443, i64 136, !2467, i64 144, !2443, i64 152, !2443, i64 160, !2443, i64 168, !2443, i64 176, !2467, i64 184, !2437, i64 192, !2438, i64 196}
!21598 = !DILocation(line: 43, column: 18, scope: !21594)
!21599 = !DILocation(line: 43, column: 7, scope: !21590)
!21600 = !DILocation(line: 45, column: 13, scope: !21594)
!21601 = !DILocation(line: 45, column: 5, scope: !21594)
!21602 = !DILocation(line: 46, column: 1, scope: !21590)
!21603 = distinct !DISubprogram(name: "rpl_fseeko", scope: !21604, file: !21604, line: 28, type: !2393, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !152)
!21604 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21605 = !DILocalVariable(name: "fp", arg: 1, scope: !21603, file: !21604, line: 28, type: !2395)
!21606 = !DILocation(line: 28, column: 15, scope: !21603)
!21607 = !DILocalVariable(name: "offset", arg: 2, scope: !21603, file: !21604, line: 28, type: !2429)
!21608 = !DILocation(line: 28, column: 25, scope: !21603)
!21609 = !DILocalVariable(name: "whence", arg: 3, scope: !21603, file: !21604, line: 28, type: !27)
!21610 = !DILocation(line: 28, column: 37, scope: !21603)
!21611 = !DILocation(line: 52, column: 7, scope: !21612)
!21612 = distinct !DILexicalBlock(scope: !21603, file: !21604, line: 52, column: 7)
!21613 = !DILocation(line: 52, column: 11, scope: !21612)
!21614 = !{!21597, !2443, i64 16}
!21615 = !DILocation(line: 52, column: 27, scope: !21612)
!21616 = !DILocation(line: 52, column: 31, scope: !21612)
!21617 = !{!21597, !2443, i64 8}
!21618 = !DILocation(line: 52, column: 24, scope: !21612)
!21619 = !DILocation(line: 53, column: 7, scope: !21612)
!21620 = !DILocation(line: 53, column: 10, scope: !21612)
!21621 = !DILocation(line: 53, column: 14, scope: !21612)
!21622 = !{!21597, !2443, i64 40}
!21623 = !DILocation(line: 53, column: 31, scope: !21612)
!21624 = !DILocation(line: 53, column: 35, scope: !21612)
!21625 = !{!21597, !2443, i64 32}
!21626 = !DILocation(line: 53, column: 28, scope: !21612)
!21627 = !DILocation(line: 54, column: 7, scope: !21612)
!21628 = !DILocation(line: 54, column: 10, scope: !21612)
!21629 = !DILocation(line: 54, column: 14, scope: !21612)
!21630 = !{!21597, !2443, i64 72}
!21631 = !DILocation(line: 54, column: 28, scope: !21612)
!21632 = !DILocation(line: 52, column: 7, scope: !21603)
!21633 = !DILocalVariable(name: "pos", scope: !21634, file: !21604, line: 117, type: !2429)
!21634 = distinct !DILexicalBlock(scope: !21612, file: !21604, line: 113, column: 5)
!21635 = !DILocation(line: 117, column: 13, scope: !21634)
!21636 = !DILocation(line: 117, column: 34, scope: !21634)
!21637 = !DILocation(line: 117, column: 26, scope: !21634)
!21638 = !DILocation(line: 117, column: 39, scope: !21634)
!21639 = !DILocation(line: 117, column: 47, scope: !21634)
!21640 = !DILocation(line: 117, column: 19, scope: !21634)
!21641 = !DILocation(line: 118, column: 11, scope: !21642)
!21642 = distinct !DILexicalBlock(scope: !21634, file: !21604, line: 118, column: 11)
!21643 = !DILocation(line: 118, column: 15, scope: !21642)
!21644 = !DILocation(line: 118, column: 11, scope: !21634)
!21645 = !DILocation(line: 124, column: 11, scope: !21646)
!21646 = distinct !DILexicalBlock(scope: !21642, file: !21604, line: 119, column: 9)
!21647 = !DILocation(line: 129, column: 7, scope: !21634)
!21648 = !DILocation(line: 129, column: 11, scope: !21634)
!21649 = !DILocation(line: 129, column: 18, scope: !21634)
!21650 = !DILocation(line: 130, column: 21, scope: !21634)
!21651 = !DILocation(line: 130, column: 7, scope: !21634)
!21652 = !DILocation(line: 130, column: 11, scope: !21634)
!21653 = !DILocation(line: 130, column: 19, scope: !21634)
!21654 = !{!21597, !2467, i64 144}
!21655 = !DILocation(line: 161, column: 7, scope: !21634)
!21656 = !DILocation(line: 163, column: 18, scope: !21603)
!21657 = !DILocation(line: 163, column: 22, scope: !21603)
!21658 = !DILocation(line: 163, column: 30, scope: !21603)
!21659 = !DILocation(line: 163, column: 10, scope: !21603)
!21660 = !DILocation(line: 163, column: 3, scope: !21603)
!21661 = !DILocation(line: 164, column: 1, scope: !21603)
