
*********CallGraph Stats***************
################ (program : )###############
-------------------------------------------------------
TotalNode           366
TotalCycle          10
MaxNodeInCycle      8
NodeInCycle         22
TotalEdge           1370
CalRetPairInCycle   41
#######################################################

*********General Stats***************
################ (program : )###############
TotalPointers       37889
TotalObjects        2435
TotalFieldObjects   394
MaxStructSize       39
TotalPAGEdges       71631
FunctionObjs        366
GlobalObjs          16
HeapObjs            77
StackObjs           1872
FIObjNum            85
FSObjNum            2349
VarStructObj        62
VarArrayObj         20
ConstStructObj      3
ConstArrayObj       3
NonPtrObj           1392
AddrsNum            2836
LoadsNum            10626
StoresNum           4089
CopysNum            3166
GepsNum             4489
CallsNum            1865
ReturnsNum          550
IndCallSites        7
TotalPTAPAGEdges    16283
TotalCallSite       1364
LocalVarInRecur     225
BitCastNumber       732
BBWith2Succ         2132
BBWith3Succ         44
-------------------------------------------------------
#######################################################

*********Constraint Graph Stats***************
################ (program : )###############
-------------------------------------------------------
AvgIn/OutCopyEdge   0.817731
AvgIn/OutLoadEdge   0.336284
AvgIn/OutAddrEdge   0.153827
AvgIn/OutEdge       1.38815
NumOfCGNode         40407
TotalValidNode      15927
TotalValidObjNode   2345
NumOfCGEdge         19659
NumOfAddrs          2450
NumOfCopys          8596
NumOfGeps           4428
NumOfLoads          5356
NumOfStores         1279
MaxInCopyEdge       45
MaxOutCopyEdge      656
MaxInLoadEdge       111
MaxOutLoadEdge      128
MaxInStoreEdge      11
MaxOutStoreEdge     113
AvgIn/OutStoreEdge  0
MaxInAddrEdge       1
MaxOutAddrEdge      180
#######################################################

*********Andersen Pointer Analysis Stats***************
################ (program : )###############
-------------------------------------------------------
TotalTime           1.119
SCCDetectTime       0.399
SCCMergeTime        0.067
LoadStoreTime       0.068
CopyGepTime         0.403
UpdateCGTime        0
AvgPtsSetSize       3.19962
AvgTopLvlPtsSize    8.52004
CollapseTime        0.001
TotalPointers       37889
Pointers            37646
TotalObjects        2829
AddrProcessed       2613
LoadProcessed       26647
StoreProcessed      5523
CopyProcessed       13762
GepProcessed        6905
NumOfSFRs           0
NumOfFieldExpand    0
DYFieldPtrs         243
MemObjects          2435
DYFieldObjs         394
MaxPtsSetSize       52
Iterations          7
IndCallSites        7
IndEdgeSolved       13
NumOfSCCDetect      7
TotalCycleNum       61
TotalPWCCycleNum    12
NodesInCycles       732
MaxNodesInSCC       331
NullPointer         75
PointsToConstPtr    774
PointsToBlkPtr      0
#######################################################

****Memory SSA Statistics****

************************
################ (program : )###############
-------------------------------------------------------
TotalMSSATime       0.225
GenRegionTime       0.124
GenMUCHITime        0.051
InsertPHITime       0.003
SSARenameTime       0.013
AverageRegSize      2.09976
MaxRegSize          83
MemRegions          2486
FunEntryChi         3560
FunRetMu            3554
CSChiNode           1894
CSMuNode            3279
LoadMuNode          12284
StoreChiNode        4532
FunHasEntryChi      301
FunHasRetMu         298
CSHasChi            611
CSHasMu             701
LoadHasMu           10626
StoreHasChi         4041
BBHasMSSAPhi        1125
MSSAPhi             6372
#######################################################

****SVFG Statistics****

************************
################ (program : )###############
-------------------------------------------------------
TotalTime           0.143
ConnDirEdgeTime     0
ConnIndEdgeTime     0.057
TLNodeTime          0
ATNodeTime          0.017
OptTime             0.069
AvgWeight           3.62059
TotalNode           35183
TotalEdge           66784
MSSAPhi             2847
FormalIn            1204
FormalOut           91
FormalParam         0
FormalRet           0
ActualIn            8
ActualOut           597
ActualParam         0
ActualRet           0
DirectEdge          32631
IndirectEdge        34153
IndCallEdge         7472
IndRetEdge          3698
DirectCallEdge      1865
DirectRetEdge       550
AvgInDegree         1
AvgOutDegree        1
MaxInDegree         63
MaxOutDegree        584
AvgIndInDeg         2
AvgIndOutDeg        4
MaxIndInDeg         61
MaxIndOutDeg        128
PHI                 1698
Addr                2836
Copy                2659
Gep                 4489
Load                10626
Store               4089
#######################################################

*********CallGraph Stats***************
################ (program : )###############
-------------------------------------------------------
TotalNode           366
TotalCycle          10
MaxNodeInCycle      8
NodeInCycle         22
TotalEdge           1370
CalRetPairInCycle   41
#######################################################

*********General Stats***************
################ (program : )###############
TotalPointers       37889
TotalObjects        2448
TotalFieldObjects   394
MaxStructSize       39
TotalPAGEdges       71631
FunctionObjs        366
GlobalObjs          16
HeapObjs            90
StackObjs           1872
FIObjNum            90
FSObjNum            2357
VarStructObj        62
VarArrayObj         20
ConstStructObj      3
ConstArrayObj       3
NonPtrObj           1392
AddrsNum            2836
LoadsNum            10626
StoresNum           4089
CopysNum            3166
GepsNum             4489
CallsNum            1865
ReturnsNum          550
IndCallSites        7
TotalPTAPAGEdges    16283
TotalCallSite       1364
LocalVarInRecur     225
BitCastNumber       732
BBWith2Succ         2132
BBWith3Succ         44
-------------------------------------------------------
#######################################################

****Flow-Sensitive Pointer Analysis Statistics****

************************
################ (program : )###############
-------------------------------------------------------
TotalTime           21.712
StoreTime           0.093
CopyGepTime         1.248
UpdateCGTime        0.001
AvgTopLvlPtsSize    9.40052
SolveTime           21.576
SCCTime             0.215
ProcessTime         3.998
PropagationTime     16.796
DirectPropaTime     0.015
IndirectPropaTime   0
Strong/WeakUpdTime  0.068
AddrTime            0.027
LoadTime            1.12
AvgPtsSize          49.0844
AvgAddrTakenVarPts  29.3478
AvgINPtsSize        53.1152
AvgOUTPtsSize       52.6635
AverageSCCSize      26.812
TotalPointers       37889
Pointers            37646
TotalObjects        2842
StoresNum           4089
CopysNum            2659
DYFieldPtrs         243
MemObjects          2448
DYFieldObjs         394
Iterations          4
IndEdgeSolved       13
NullPointer         746
PointsToConstPtr    0
PointsToBlkPtr      15
StrongUpdates       980
FI_SNodesHaveIN     389
FI_SNodesHaveOUT    0
FO_SNodesHaveIN     0
FO_SNodesHaveOUT    0
AI_SNodesHaveIN     0
AI_SNodesHaveOUT    0
AO_SNodesHaveIN     306
AO_SNodesHaveOUT    0
LD_SNodesHaveIN     10626
SNodesHaveIN        12730
LD_SNodesHaveOUT    0
SNodesHaveOUT       1003
ST_SNodesHaveIN     420
ST_SNodesHaveOUT    1003
PHI_SNodesHaveIN    989
PHI_SNodesHaveOUT   0
VarHaveIN           123392
VarHaveOUT          15119
VarHaveIN_FI        7824
VarHaveOUT_FI       0
VarHaveIN_FO        0
VarHaveOUT_FO       0
VarHaveIN_AI        0
VarHaveOUT_AI       0
VarHaveIN_AO        7523
VarHaveOUT_AO       0
VarHaveIN_LD        75110
VarHaveOUT_LD       0
VarHaveIN_ST        14513
VarHaveOUT_ST       15119
VarHaveIN_PHI       18422
VarHaveOUT_PHI      0
MaxPtsSize          185
MaxTopLvlPtsSize    185
MaxINPtsSize        183
MaxOUTPtsSize       183
NumOfAddrTakenVar   7387
MaxAddrTakenVarPts  183
ProcessedAddr       5931
ProcessedCopy       8330
ProcessedGep        23742
ProcessedLoad       97403
ProcessedStore      23614
ProcessedPhi        5462
ProcessedAParam     0
ProcessedFRet       0
ProcessedMSSANode   47332
NumOfNodesInSCC     10269
MaxSCCSize          8258
NumOfSCC            383
#######################################################
eval-indirect-calls 13 3 2 3 1 0 0 4 
eval-ctir-aliases 43870752 2123090 41747662 
=== Original objects to clones ===
  1 : (13)[ 41521{int *}, 41522{intmax_t->__intmax_t->long int[123]}, 41523{char}, 41524{char *}, 41526{struct.re_state_table_entry}, 41527{struct.{ , ,  }}, 41528{struct.{ , , , , , , ,  }}, 41538{struct.bin_tree_storage_t}, 41539{bin_tree_t->struct.bin_tree_t *}, 41542{struct.re_dfastate_t}, 41543{struct.bin_tree_t}, 41544{re_token_t->struct.{ , , , , , , ,  } *}, 41548{re_node_set->struct.{ , ,  } *} ]
  1317 : (1)[ 41239{unsigned int} ]
  1334 : (1)[ 41238{unsigned int} ]
  1339 : (1)[ 41237{unsigned int} ]
  2507 : (1)[ 41235{unsigned int} ]
  3230 : (1)[ 41231{unsigned int} ]
  3244 : (1)[ 41230{unsigned int} ]
  3255 : (1)[ 41229{unsigned int} ]
  4053 : (1)[ 41225{unsigned int} ]
  4073 : (1)[ 41226{unsigned int} ]
  4308 : (1)[ 41297{unsigned int} ]
  4337 : (1)[ 41298{unsigned int} ]
  5076 : (1)[ 41246{const unsigned short *} ]
  5741 : (1)[ 41310{char} ]
  5870 : (1)[ 41279{unsigned int} ]
  5928 : (1)[ 41280{unsigned int} ]
  6055 : (1)[ 41236{unsigned int} ]
  6219 : (1)[ 41300{unsigned int} ]
  6482 : (1)[ 41286{struct.quoting_options} ]
  7984 : (3)[ 41282{char}, 41283{struct.valinfo}, 41344{char *} ]
  8057 : (2)[ 41374{struct.slotvec}, 41381{struct.slotvec *} ]
  8337 : (1)[ 41281{unsigned int} ]
  8374 : (1)[ 41285{unsigned int} ]
  8379 : (1)[ 41284{unsigned int} ]
  8872 : (5)[ 41320{struct.re_dfa_t}, 41424{intmax_t->__intmax_t->long int[123]}, 41474{char *}, 41475{char}, 41541{struct.re_pattern_buffer} ]
  9213 : (10)[ 41363{intmax_t->__intmax_t->long int[123]}, 41382{struct.{ , , , , , , ,  }}, 41385{struct.{ , ,  }}, 41388{struct.re_state_table_entry}, 41406{struct.bin_tree_storage_t}, 41425{bin_tree_t->struct.bin_tree_t *}, 41450{struct.re_dfastate_t}, 41454{re_token_t->struct.{ , , , , , , ,  } *}, 41458{struct.bin_tree_t}, 41463{re_node_set->struct.{ , ,  } *} ]
  9232 : (10)[ 41364{intmax_t->__intmax_t->long int[123]}, 41383{struct.{ , , , , , , ,  }}, 41386{struct.{ , ,  }}, 41389{struct.re_state_table_entry}, 41407{struct.bin_tree_storage_t}, 41426{bin_tree_t->struct.bin_tree_t *}, 41451{struct.re_dfastate_t}, 41455{re_token_t->struct.{ , , , , , , ,  } *}, 41459{struct.bin_tree_t}, 41464{re_node_set->struct.{ , ,  } *} ]
  9248 : (2)[ 41258{char *}, 41259{char} ]
  9343 : (10)[ 41365{intmax_t->__intmax_t->long int[123]}, 41384{struct.{ , , , , , , ,  }}, 41387{struct.{ , ,  }}, 41390{struct.re_state_table_entry}, 41408{struct.bin_tree_storage_t}, 41427{bin_tree_t->struct.bin_tree_t *}, 41452{struct.re_dfastate_t}, 41456{re_token_t->struct.{ , , , , , , ,  } *}, 41460{struct.bin_tree_t}, 41465{re_node_set->struct.{ , ,  } *} ]
  10066 : (10)[ 41375{intmax_t->__intmax_t->long int[123]}, 41393{re_token_t->struct.{ , , , , , , ,  } *}, 41398{struct.{ , , , , , , ,  }}, 41410{struct.bin_tree_t}, 41415{struct.{ , ,  }}, 41419{re_node_set->struct.{ , ,  } *}, 41429{struct.re_dfastate_t}, 41434{struct.re_state_table_entry}, 41445{struct.bin_tree_storage_t}, 41531{bin_tree_t->struct.bin_tree_t *} ]
  10076 : (10)[ 41376{intmax_t->__intmax_t->long int[123]}, 41394{re_token_t->struct.{ , , , , , , ,  } *}, 41399{struct.{ , , , , , , ,  }}, 41411{struct.bin_tree_t}, 41416{struct.{ , ,  }}, 41420{re_node_set->struct.{ , ,  } *}, 41430{struct.re_dfastate_t}, 41435{struct.re_state_table_entry}, 41446{struct.bin_tree_storage_t}, 41532{bin_tree_t->struct.bin_tree_t *} ]
  10086 : (10)[ 41377{intmax_t->__intmax_t->long int[123]}, 41395{re_token_t->struct.{ , , , , , , ,  } *}, 41400{struct.{ , , , , , , ,  }}, 41412{struct.bin_tree_t}, 41417{struct.{ , ,  }}, 41421{re_node_set->struct.{ , ,  } *}, 41431{struct.re_dfastate_t}, 41436{struct.re_state_table_entry}, 41447{struct.bin_tree_storage_t}, 41533{bin_tree_t->struct.bin_tree_t *} ]
  10096 : (10)[ 41378{intmax_t->__intmax_t->long int[123]}, 41396{re_token_t->struct.{ , , , , , , ,  } *}, 41401{struct.{ , , , , , , ,  }}, 41413{struct.bin_tree_t}, 41418{struct.{ , ,  }}, 41422{re_node_set->struct.{ , ,  } *}, 41432{struct.re_dfastate_t}, 41437{struct.re_state_table_entry}, 41448{struct.bin_tree_storage_t}, 41534{bin_tree_t->struct.bin_tree_t *} ]
  10133 : (10)[ 41379{intmax_t->__intmax_t->long int[123]}, 41423{struct.bin_tree_t}, 41525{struct.{ , , , , , , ,  }}, 41529{re_token_t->struct.{ , , , , , , ,  } *}, 41530{struct.bin_tree_storage_t}, 41535{bin_tree_t->struct.bin_tree_t *}, 41536{struct.{ , ,  }}, 41537{re_node_set->struct.{ , ,  } *}, 41545{struct.re_dfastate_t}, 41546{struct.re_state_table_entry} ]
  10321 : (9)[ 41397{re_token_t->struct.{ , , , , , , ,  } *}, 41402{struct.{ , , , , , , ,  }}, 41403{struct.{ , ,  }}, 41404{re_node_set->struct.{ , ,  } *}, 41414{struct.bin_tree_t}, 41433{struct.re_dfastate_t}, 41438{struct.re_state_table_entry}, 41449{struct.bin_tree_storage_t}, 41472{intmax_t->__intmax_t->long int[123]} ]
  10884 : (5)[ 41358{intmax_t->__intmax_t->long int[123]}, 41362{long int}, 41371{struct.{ , ,  }}, 41440{re_dfastate_t->struct.re_dfastate_t * *}, 41483{struct.re_dfastate_t} ]
  11077 : (5)[ 41349{intmax_t->__intmax_t->long int[123]}, 41350{long int}, 41444{struct.{ , ,  }}, 41473{re_dfastate_t->struct.re_dfastate_t * *}, 41484{struct.re_dfastate_t} ]
  11628 : (7)[ 41301{struct.re_dfastate_t}, 41302{struct.{ , ,  }}, 41366{struct.re_state_table_entry}, 41405{struct.{ , , , , , , ,  }}, 41409{struct.bin_tree_storage_t}, 41439{re_token_t->struct.{ , , , , , , ,  } *}, 41453{intmax_t->__intmax_t->long int[123]} ]
  11771 : (5)[ 41330{struct.{ , ,  }}, 41356{intmax_t->__intmax_t->long int[123]}, 41441{re_dfastate_t->struct.re_dfastate_t * *}, 41485{struct.re_dfastate_t}, 41503{long int} ]
  12123 : (1)[ 41461{re_dfastate_t->struct.re_dfastate_t * *} ]
  12181 : (5)[ 41354{intmax_t->__intmax_t->long int[123]}, 41357{long int}, 41372{struct.{ , ,  }}, 41442{re_dfastate_t->struct.re_dfastate_t * *}, 41486{struct.re_dfastate_t} ]
  12241 : (5)[ 41351{intmax_t->__intmax_t->long int[123]}, 41380{struct.{ , ,  }}, 41391{long int}, 41443{re_dfastate_t->struct.re_dfastate_t * *}, 41487{struct.re_dfastate_t} ]
  14070 : (2)[ 41352{intmax_t->__intmax_t->long int[123]}, 41373{long int} ]
  14192 : (2)[ 41353{intmax_t->__intmax_t->long int[123]}, 41367{long int} ]
  14410 : (1)[ 41217{struct.{ , , , , , , ,  }} ]
  14475 : (10)[ 41478{re_token_t->struct.{ , , , , , , ,  } *}, 41496{struct.{ , , , , , , ,  }}, 41497{intmax_t->__intmax_t->long int[123]}, 41498{struct.{ , ,  }}, 41499{re_node_set->struct.{ , ,  } *}, 41500{struct.bin_tree_t}, 41501{struct.re_state_table_entry}, 41502{struct.re_dfastate_t}, 41507{struct.bin_tree_storage_t}, 41540{bin_tree_t->struct.bin_tree_t *} ]
  14497 : (10)[ 41479{re_token_t->struct.{ , , , , , , ,  } *}, 41549{struct.{ , , , , , , ,  }}, 41553{intmax_t->__intmax_t->long int[123]}, 41557{struct.{ , ,  }}, 41561{re_node_set->struct.{ , ,  } *}, 41565{struct.bin_tree_t}, 41569{struct.bin_tree_storage_t}, 41573{bin_tree_t->struct.bin_tree_t *}, 41577{struct.re_dfastate_t}, 41581{struct.re_state_table_entry} ]
  14507 : (10)[ 41480{re_token_t->struct.{ , , , , , , ,  } *}, 41550{struct.{ , , , , , , ,  }}, 41554{intmax_t->__intmax_t->long int[123]}, 41558{struct.{ , ,  }}, 41562{re_node_set->struct.{ , ,  } *}, 41566{struct.bin_tree_t}, 41570{struct.bin_tree_storage_t}, 41574{bin_tree_t->struct.bin_tree_t *}, 41578{struct.re_dfastate_t}, 41582{struct.re_state_table_entry} ]
  14517 : (10)[ 41481{re_token_t->struct.{ , , , , , , ,  } *}, 41551{struct.{ , , , , , , ,  }}, 41555{intmax_t->__intmax_t->long int[123]}, 41559{struct.{ , ,  }}, 41563{re_node_set->struct.{ , ,  } *}, 41567{struct.bin_tree_t}, 41571{struct.bin_tree_storage_t}, 41575{bin_tree_t->struct.bin_tree_t *}, 41579{struct.re_dfastate_t}, 41583{struct.re_state_table_entry} ]
  14527 : (10)[ 41482{re_token_t->struct.{ , , , , , , ,  } *}, 41552{struct.{ , , , , , , ,  }}, 41556{intmax_t->__intmax_t->long int[123]}, 41560{struct.{ , ,  }}, 41564{re_node_set->struct.{ , ,  } *}, 41568{struct.bin_tree_t}, 41572{struct.bin_tree_storage_t}, 41576{bin_tree_t->struct.bin_tree_t *}, 41580{struct.re_dfastate_t}, 41584{struct.re_state_table_entry} ]
  14696 : (1)[ 41547{intmax_t->__intmax_t->long int[123]} ]
  15016 : (10)[ 41278{struct.bin_tree_storage_t}, 41428{bin_tree_t->struct.bin_tree_t *}, 41462{intmax_t->__intmax_t->long int[123]}, 41469{re_token_t->struct.{ , , , , , , ,  } *}, 41470{struct.{ , , , , , , ,  }}, 41471{struct.bin_tree_t}, 41476{struct.{ , ,  }}, 41477{re_node_set->struct.{ , ,  } *}, 41491{struct.re_dfastate_t}, 41492{struct.re_state_table_entry} ]
  16477 : (3)[ 41263{intmax_t->__intmax_t->long int[123]}, 41512{struct.bin_tree_t}, 41516{struct.{ , , , , , , ,  }} ]
  16481 : (3)[ 41261{struct.{ , , , , , , , , ,  }}, 41513{struct.bin_tree_t}, 41517{struct.{ , , , , , , ,  }} ]
  16805 : (2)[ 41331{int *}, 41343{intmax_t->__intmax_t->long int[123]} ]
  17227 : (1)[ 41290{const unsigned short *} ]
  17323 : (3)[ 41277{intmax_t->__intmax_t->long int[123]}, 41514{struct.bin_tree_t}, 41518{struct.{ , , , , , , ,  }} ]
  17337 : (3)[ 41240{struct.{ , , , , , , , , ,  }}, 41515{struct.bin_tree_t}, 41519{struct.{ , , , , , , ,  }} ]
  18327 : (2)[ 41332{intmax_t->__intmax_t->long int[123]}, 41342{int *} ]
  18378 : (1)[ 41274{const unsigned short *} ]
  18409 : (1)[ 41273{const unsigned short *} ]
  18450 : (1)[ 41272{const unsigned short *} ]
  18481 : (1)[ 41271{const unsigned short *} ]
  18522 : (1)[ 41270{const unsigned short *} ]
  18553 : (1)[ 41269{const unsigned short *} ]
  18594 : (1)[ 41268{const unsigned short *} ]
  18626 : (1)[ 41267{const unsigned short *} ]
  18667 : (1)[ 41266{const unsigned short *} ]
  18698 : (1)[ 41265{const unsigned short *} ]
  18739 : (1)[ 41264{const unsigned short *} ]
  18771 : (1)[ 41262{const unsigned short *} ]
  18812 : (1)[ 41260{const unsigned short *} ]
  18843 : (1)[ 41257{const unsigned short *} ]
  18884 : (1)[ 41256{const unsigned short *} ]
  18915 : (1)[ 41255{const unsigned short *} ]
  18956 : (1)[ 41254{const unsigned short *} ]
  18987 : (1)[ 41253{const unsigned short *} ]
  19028 : (1)[ 41252{const unsigned short *} ]
  19060 : (1)[ 41251{const unsigned short *} ]
  19101 : (1)[ 41250{const unsigned short *} ]
  19132 : (1)[ 41249{const unsigned short *} ]
  19173 : (1)[ 41248{const unsigned short *} ]
  19205 : (1)[ 41247{const unsigned short *} ]
  20029 : (2)[ 41333{int *}, 41345{intmax_t->__intmax_t->long int[123]} ]
  20039 : (2)[ 41334{int *}, 41346{intmax_t->__intmax_t->long int[123]} ]
  20814 : (1)[ 41288{const unsigned short *} ]
  21183 : (1)[ 41287{const unsigned short *} ]
  21773 : (3)[ 41341{int *}, 41347{unsigned int}, 41359{char *} ]
  21801 : (2)[ 41335{intmax_t->__intmax_t->long int[123]}, 41360{char *} ]
  21830 : (2)[ 41339{char *}, 41340{char} ]
  22369 : (2)[ 41328{intmax_t->__intmax_t->long int[123]}, 41361{char *} ]
  27233 : (1)[ 41224{re_dfastate_t->struct.re_dfastate_t * *} ]
  27253 : (1)[ 41309{re_dfastate_t->struct.re_dfastate_t * *} ]
  27603 : (3)[ 41321{struct.re_fail_stack_ent_t}, 41323{struct.re_fail_stack_ent_t *}, 41325{struct.{ , ,  }} ]
  27632 : (2)[ 41242{struct.{ ,  }}, 41244{regmatch_t->struct.{ ,  } *} ]
  27639 : (2)[ 41243{struct.{ ,  }}, 41245{regmatch_t->struct.{ ,  } *} ]
  28664 : (3)[ 41322{struct.re_fail_stack_ent_t}, 41324{struct.re_fail_stack_ent_t *}, 41326{struct.{ , ,  }} ]
  28701 : (1)[ 41392{intmax_t->__intmax_t->long int[123]} ]
  29947 : (2)[ 41336{intmax_t->__intmax_t->long int[123]}, 41337{long int} ]
  30303 : (7)[ 41299{struct.re_dfastate_t}, 41303{struct.{ , ,  }}, 41508{struct.re_state_table_entry}, 41509{struct.{ , , , , , , ,  }}, 41510{re_token_t->struct.{ , , , , , , ,  } *}, 41511{struct.bin_tree_storage_t}, 41520{intmax_t->__intmax_t->long int[123]} ]
  32565 : (2)[ 41327{intmax_t->__intmax_t->long int[123]}, 41338{long int} ]
  34472 : (3)[ 41219{bitset_t->bitset_word_t->long unsigned int[123][123]}, 41220{struct.dests_alloc}, 41221{re_node_set->struct.{ , ,  } *} ]
  34524 : (5)[ 41457{re_dfastate_t->struct.re_dfastate_t * *}, 41466{intmax_t->__intmax_t->long int[123]}, 41488{struct.re_dfastate_t}, 41493{struct.{ , ,  }}, 41504{long int} ]
  34575 : (2)[ 41305{re_dfastate_t->struct.re_dfastate_t * *}, 41307{re_dfastate_t->struct.re_dfastate_t *} ]
  34583 : (2)[ 41306{re_dfastate_t->struct.re_dfastate_t * *}, 41308{re_dfastate_t->struct.re_dfastate_t *} ]
  34827 : (5)[ 41222{re_dfastate_t->struct.re_dfastate_t * *}, 41467{intmax_t->__intmax_t->long int[123]}, 41489{struct.re_dfastate_t}, 41494{struct.{ , ,  }}, 41505{long int} ]
  34927 : (5)[ 41223{re_dfastate_t->struct.re_dfastate_t * *}, 41468{intmax_t->__intmax_t->long int[123]}, 41490{struct.re_dfastate_t}, 41495{struct.{ , ,  }}, 41506{long int} ]
  36742 : (1)[ 41216{re_dfastate_t->struct.re_dfastate_t *} ]
  37249 : (1)[ 41214{struct.{ , ,  }} ]
  38848 : (2)[ 41212{struct.{ ,  }}, 41213{regmatch_t->struct.{ ,  } *} ]
  39016 : (1)[ 41318{intmax_t->__intmax_t->long int[123]} ]
  39034 : (1)[ 41316{intmax_t->__intmax_t->long int[123]} ]
  39079 : (1)[ 41319{intmax_t->__intmax_t->long int[123]} ]
  39098 : (1)[ 41317{intmax_t->__intmax_t->long int[123]} ]
  39465 : (2)[ 41304{char}, 41355{char *} ]
  39763 : (1)[ 41210{unsigned int} ]
  39771 : (1)[ 41209{unsigned int} ]
  39825 : (2)[ 41211{char *}, 41241{char} ]
  40018 : (1)[ 41275{unsigned int} ]
  40030 : (1)[ 41276{unsigned int} ]
  41348 : (1)[ 41368{struct.{ , ,  }} ]
  257400003 : (1)[ 41234{_Bool} ]
  267800003 : (1)[ 41233{_Bool} ]
  268000003 : (1)[ 41289{_Bool} ]
  293200003 : (1)[ 41232{_Bool} ]
  353400003 : (1)[ 41228{_Bool} ]
  363600003 : (1)[ 41227{_Bool} ]
  880100006 : (1)[ 41329{long int} ]
  880100025 : (1)[ 41314{unsigned int} ]
  1642600001 : (1)[ 41311{union.{ , ,  }} ]
  1642800001 : (1)[ 41312{union.{ , ,  }} ]
  2433200006 : (1)[ 41313{long int} ]
  2433200025 : (1)[ 41315{unsigned int} ]
  2719800004 : (1)[ 41291{struct.{ , ,  }} ]
  3193900004 : (1)[ 41292{struct.{ , ,  }} ]
Total: 367
==================================
